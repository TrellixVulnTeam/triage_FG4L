<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:42 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2687/DERBY-2687.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2687] store/encryptDatabase.sql fails intermittently with ClassNotFoundException, Log Corrupted</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2687</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Failure seen in derbyall/encryptionAll run on WinXP (10.2.2.1). So far unable to reproduce (standalone or as part of derbyall, encryptionAll or encryptionBlowfish).&lt;/p&gt;

&lt;p&gt;&amp;lt;method&amp;gt;&lt;br/&gt;
store/encryptDatabase.sql&lt;br/&gt;
&amp;lt;/method&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;signature&amp;gt;&lt;br/&gt;
Failure details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/encryptionAll/encryptionBlowfish/encryptDatabase.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: encryptDatabase jdk1.4.2_08 encryptionAll:encryptionBlowfish 2007-05-21 05:07:55 ***&lt;br/&gt;
95 del&lt;br/&gt;
&amp;lt; ERROR XBM06: Startup failed. An encrypted database cannot be accessed without the correct boot password.&lt;br/&gt;
95a95&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: &apos;ERROR XBM0U: No class was registered for identifier 15009.: java.lang.ClassNotFoundException&apos;.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   encryptDatabase jdk1.4.2_08 encryptionAll:encryptionBlowfish 2007-05-21 05:08:12 ***&lt;br/&gt;
&amp;lt;/signature&amp;gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;derby.log also reports &quot;ERROR XSLA3: Log Corrupted, has invalid data in the log stream.&quot;&lt;/p&gt;</description>
                <environment>Microsoft Windows XP Professional - 5.1.2600 Service Pack 2, Sun JVM 1.4.2_08-b03, 10.2.2.1.&lt;br/&gt;
SUSE Linux Enterprise Server 10 (x86_64) (Linux 2.6.16.21-0.8-smp), Sun JVM 1.6.0_01-b06, trunk (SVN 531991).&lt;br/&gt;
Solaris 10 x86, Sun JVM 1.5.0, SVN 371617 (2006-01-23).&lt;br/&gt;
Solaris 9 SPARC, Sun JVM 1.5.0, SVN 169872 (2005-05-13).&lt;br/&gt;
etc...</environment>
        <key id="12370124">DERBY-2687</key>
            <summary>store/encryptDatabase.sql fails intermittently with ClassNotFoundException, Log Corrupted</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="johnemb">John H. Embretsen</reporter>
                        <labels>
                            <label>derby_backport_reject_10_5</label>
                    </labels>
                <created>Thu, 24 May 2007 10:50:37 +0100</created>
                <updated>Fri, 15 Nov 2013 08:15:14 +0000</updated>
                            <resolved>Wed, 14 Mar 2012 22:15:05 +0000</resolved>
                                    <version>10.2.2.1</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12498582" author="johnemb" created="Thu, 24 May 2007 11:56:50 +0100"  >&lt;p&gt;Attached derby.log from the test run on Win XP against 10.2.2.1.&lt;/p&gt;

&lt;p&gt;The failure happened when executing the IJ command&lt;br/&gt;
connect &apos;jdbc:derby:wombat;bootPassword=Saturday&apos;;&lt;br/&gt;
(incorrect boot password, negative test).&lt;/p&gt;

&lt;p&gt;This failure does not seem to occur very often. Yet, similar failures have been observed in previous periodic regression testing, for example:&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/sles/531991-encryptionAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/sles/531991-encryptionAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The diff is not exectly the same, though, and since the derby.log file is apparently no longer available for that test run, it is hard to tell if there was a &quot;Log Corrupted&quot; message there as well.&lt;/p&gt;</comment>
                            <comment id="12498590" author="johnemb" created="Thu, 24 May 2007 12:24:44 +0100"  >&lt;p&gt;Attached database (wombat.zip, 10.2) from the Win XP test run mentioned above.&lt;/p&gt;</comment>
                            <comment id="12498671" author="johnemb" created="Thu, 24 May 2007 16:00:18 +0100"  >&lt;p&gt;Reports from other previous occurrences of this test failure may be found by googling something like:&lt;br/&gt;
+&quot;encryptDatabase&quot; +&quot;ClassNotFoundException&quot; site:dbtg.thresher.com&lt;/p&gt;

&lt;p&gt;It seems that this test has been failing intermittently since (at least) may 2005 (SVN 169872), on various operating systems (including Solaris 9, Solaris 10 (x86 and SPARC), Red Hat Enterprise Linux, Windows XP), on various JVMs (including Sun 1.4.2, 1.5.0, 1.6.0), and in various encryption suites (such as encryptionAES, encryptionCFB, encryptionDES, encryptionECB, encryptionBlowfish).&lt;/p&gt;</comment>
                            <comment id="12499718" author="johnemb" created="Tue, 29 May 2007 09:12:31 +0100"  >&lt;p&gt;Recently also seen in derbyall/encryptionAll/encryptionDES on SUSE Linux (sles) 2007-05-27, trunk @ SVN 541997, Sun JVM 1.6.0_01:&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/sles/541997-derbyall_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/sles/541997-derbyall_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12974616" author="rhillegas" created="Thu, 23 Dec 2010 13:18:21 +0000"  >&lt;p&gt;Might be related to this diff seen in the tinderbox tests: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/1051893-derbyall_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/1051893-derbyall_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12974639" author="knutanders" created="Thu, 23 Dec 2010 15:30:38 +0000"  >&lt;p&gt;The diff seen by Rick is identical to the one in John&apos;s comment from 24/May/07 06:56 AM. (The URL has changed after that. Here&apos;s where it can be found now: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/testlog/sles/531991-encryptionAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/testlog/sles/531991-encryptionAll_diff.txt&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;The first discrepancy reported in those two runs, is a successful attempt to change the password using a wrong old password. From the out file in Rick&apos;s failed run:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:wombat;bootPassword=Wednesday&apos;;&lt;br/&gt;
ij&amp;gt; &amp;#8211; switch back to old password&lt;br/&gt;
call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(&apos;bootPassword&apos;, &apos;Wednesday, Thursday&apos;);&lt;/p&gt;

&lt;p&gt;... The password is sucessfully changed to &quot;Thursday&quot; (as expected) ...&lt;/p&gt;

&lt;p&gt;ij&amp;gt; &amp;#8211; change the secret key&lt;br/&gt;
&amp;#8211; these should fail&lt;br/&gt;
(...)&lt;br/&gt;
ij&amp;gt; call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(&apos;bootPassword&apos;, &apos;thursday , derbypwd&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;Here we&apos;re for some reason allowed to change the password from &quot;thursday&quot; to &quot;derbypwd&quot;, even though the old password is &quot;Thursday&quot;, not &quot;thursday&quot;. This is where the diff starts.&lt;/p&gt;</comment>
                            <comment id="13206471" author="dagw" created="Sun, 12 Feb 2012 18:31:07 +0000"  >&lt;p&gt;See again last night:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/testlog/sol32/1242855-derbyall_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/testlog/sol32/1242855-derbyall_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;av svn 1242855&lt;/p&gt;

&lt;p&gt;sol32&lt;/p&gt;

&lt;p&gt;Sun Microsystems Inc.&lt;br/&gt;
1.6.0_241242855&lt;br/&gt;
2012-02-10 18:00:09 MET&lt;/p&gt;

&lt;p&gt;Failure Details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/encryptionAll/encryption/encryption/encryptDatabase.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: encryptDatabase jdk1.6.0_24 encryption:encryption 2012-02-10 22:44:01 ***&lt;br/&gt;
91a92,94&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: &apos;ERROR XBM0U: No class was registered for identifier 30755.: java.lang.ClassNotFoundException&apos;.&lt;br/&gt;
&amp;gt; ij&amp;gt; connect &apos;jdbc:derby:wombat;bootPassword=Saturday&apos;;&lt;br/&gt;
&amp;gt; ERROR XJ040: Failed to start database &apos;wombat&apos; with class loader XXXX,  see the next exception for details.&lt;br/&gt;
93,95d95&lt;br/&gt;
&amp;lt; ij&amp;gt; connect &apos;jdbc:derby:wombat;bootPassword=Saturday&apos;;&lt;br/&gt;
&amp;lt; ERROR XJ040: Failed to start database &apos;wombat&apos; with class loader XXXX,  see the next exception for details.&lt;br/&gt;
&amp;lt; ERROR XBM06: Startup failed. An encrypted database cannot be accessed without the correct boot password.  &lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   encryptDatabase jdk1.6.0_24 encryption:encryption 2012-02-10 22:44:06 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13207658" author="knutanders" created="Tue, 14 Feb 2012 12:12:42 +0000"  >&lt;p&gt;I&apos;ve had the test running in a loop for more than a day now (close to 19000 iterations) without seeing the failure. I&apos;ll keep it running for a while longer to see if it eventually reproduces. (Solaris 11, x86, java version &quot;1.6.0_26&quot;)&lt;/p&gt;</comment>
                            <comment id="13207952" author="dagw" created="Tue, 14 Feb 2012 19:47:56 +0000"  >&lt;p&gt;I was able to reproduce on my laptop in attempt 82.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: encryptDatabase jdk1.6.0_26 2012-02-14 18:30:33 ***&lt;br/&gt;
93a94&lt;br/&gt;
&amp;gt; java.lang.ClassNotFoundException: ERROR XBM0U: No class was registered for identifier 44776.&lt;br/&gt;
95 del&lt;br/&gt;
&amp;lt; ERROR XBM06: Startup failed. An encrypted database cannot be accessed without the correct boot password.  &lt;br/&gt;
95a96&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: &apos;ERROR XBM0U: No class was registered for identifier 44776.: java.lang.ClassNotFoundException&apos;.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   encryptDatabase jdk1.6.0_26 2012-02-14 18:30:40 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Enclosing a zip file with derby.log and the database.&lt;/p&gt;</comment>
                            <comment id="13208012" author="dagw" created="Tue, 14 Feb 2012 21:11:28 +0000"  >&lt;p&gt;In my repro, it appears the recovery fails (RawStore:333) after the bootPassword has been verified (RawStore:301). Cf the derby.log line 1070: the stack shows we have passed the line 301 in RawStore which should check the bootPassword. &lt;/p&gt;

&lt;p&gt;It seems that a wrong bootPassword passes muster.&lt;/p&gt;

&lt;p&gt;In this case the bootPassword which appears to have been accepted is Saturday. It should have been changed by this time to derbypwd cf.&lt;/p&gt;

&lt;p&gt;   call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(&apos;bootPassword&apos;, &apos;Saturday,derbypwd&apos;);&lt;br/&gt;
   :&lt;br/&gt;
   connect &apos;jdbc:derby:;shutdown=true&apos;;&lt;br/&gt;
   &amp;lt;failed boot using Saturday: gets too far...?&amp;gt;&lt;/p&gt;

&lt;p&gt;We have done a shutdown of the engine. Could it be that the change of the encryption key wasn&apos;t committed prior to the engine shutdown, so that the persistence of the new key would need a log replay before its effective? We have seen before during the interrupt work that there are cases where checkpointing at shutdown may fail.&lt;/p&gt;

&lt;p&gt;Then, next time we try to boot, using derbypwd, it passes the bootpassword check with &lt;b&gt;that&lt;/b&gt; (new new) boot password, so it appears that now the new encryption keys is in effect? One can still boot the database using the final bootpassword in the test, derbypwdxx.&lt;/p&gt;
</comment>
                            <comment id="13208016" author="dagw" created="Tue, 14 Feb 2012 21:17:13 +0000"  >&lt;p&gt;But note that the above is different than what Knut analyzed: that &quot;thursday&quot; was also accepted: That had &lt;b&gt;never&lt;/b&gt; been a valid password, so perhaps the error lies somehow in that a wrong bootpassword can sometimes erroneously be accepted?&lt;br/&gt;
Maybe that could explain why the recovery failed, but succeeded next time we tried to boot the same database (with the correct boorpassword)?&lt;/p&gt;</comment>
                            <comment id="13208067" author="dagw" created="Tue, 14 Feb 2012 22:09:58 +0000"  >&lt;p&gt;A possible partial theory. We validate the root password by the following algorithm:&lt;/p&gt;

&lt;p&gt;1) retrieve the encrypted bootpassword from system.properties&lt;/p&gt;

&lt;p&gt;2) decrypt if using the supplied bootpassword (JCECipherFactory#getDatabaseSecretKey: &lt;br/&gt;
    byte[] generatedKey = decryptKey(keyString, encodedKeyCharLength, bootPassword);&lt;br/&gt;
    int checkKey = digest(generatedKey);&lt;/p&gt;

&lt;p&gt;    The &lt;b&gt;digest&lt;/b&gt; of the generated key is used to compare against the stored digest, cf. the last integer after the dash in this line from&lt;br/&gt;
    service.properties:&lt;/p&gt;

&lt;p&gt;    encryptedBootPassword=257d676070c19170-36089&lt;/p&gt;

&lt;p&gt;    i.e. 36089 in this case. The digest method comment that says: &quot;no matter how long the digest is, condense it into an short&quot;.&lt;/p&gt;

&lt;p&gt;3) compare the computed digest with the stored one, e.g. we compare one short against another short, suggestion a chance of a false&lt;br/&gt;
    positive of 1/65536.&lt;/p&gt;

&lt;p&gt;I tried to comment out the check lines:&lt;br/&gt;
   if (checkKey != verifyKey)&lt;br/&gt;
	throw StandardException.newException(errorState);&lt;/p&gt;

&lt;p&gt;and then I see the issue if I use a wrong boot password (effectively making a false positive every time):&lt;/p&gt;

&lt;p&gt;    java.lang.ClassNotFoundException: ERROR XBM0U: No class was registered for identifier 41229.&lt;/p&gt;

&lt;p&gt;So it seems we have a 1/65536 chance of getting a false positive in this check, but what I can&apos;t see yet is where the random element comes from. Why does this fail only now and then when we use the same bootpasswords (correct and wrong)?&lt;/p&gt;




</comment>
                            <comment id="13208074" author="dagw" created="Tue, 14 Feb 2012 22:14:54 +0000"  >&lt;p&gt;A possible answer: could it have to do with the persistence of properties of service.properties, and the way its being updated?&lt;/p&gt;</comment>
                            <comment id="13208086" author="dagw" created="Tue, 14 Feb 2012 22:33:18 +0000"  >&lt;p&gt;At least it seems the change value is not persisted immediately, cf. PropertyConglomerate#bootPasswordChange: it just saves the new value in the property map &quot;serviceProperties&quot;... bug? this isn&apos;t transaactional so why not save it?&lt;/p&gt;</comment>
                            <comment id="13208095" author="dagw" created="Tue, 14 Feb 2012 22:53:58 +0000"  >&lt;p&gt;When i save the value using PropertyConglomerate#saveProperty when its beign changed, it appears in queries, which we don&apos;t want:&lt;/p&gt;

&lt;p&gt;values SYSCS_UTIL.SYSCS_GET_DATABASE_PROPERTY(&apos;encryptedBootPassword&apos;);&lt;br/&gt;
1                                                                                                                               &lt;br/&gt;
--------------------&lt;br/&gt;
b15f41ee2fea07a6-61286 &lt;/p&gt;

&lt;p&gt;so the lack of saving the value so it wont be found in a scan seems intentional..&lt;/p&gt;</comment>
                            <comment id="13208300" author="knutanders" created="Wed, 15 Feb 2012 09:25:12 +0000"  >&lt;p&gt;Sounds like you&apos;re closing in on the bug. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; So it seems we have a 1/65536 chance of getting a false positive in&lt;br/&gt;
&amp;gt; this check, but what I can&apos;t see yet is where the random element&lt;br/&gt;
&amp;gt; comes from.&lt;/p&gt;

&lt;p&gt;The digest is based on the encryption key, not on the boot password.&lt;br/&gt;
The encryption key will be generated when the database is created, and&lt;br/&gt;
should vary between the test runs.&lt;/p&gt;</comment>
                            <comment id="13208598" author="dagw" created="Wed, 15 Feb 2012 17:30:12 +0000"  >&lt;p&gt;Thanks, Knut. That was the piece missing I was missing last night &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Well, that accounts from the wrong boots we have seen: the check done to allow a boot attempt only relies on the two byte digest.&lt;br/&gt;
The case of the wrong password change allowed (&quot;thursday&quot; vs &quot;Thursday&quot;), that is more unlikely as far as I can see: in that case, we use&lt;br/&gt;
the boot password to decrypt the key, and use that to generate an initialization vector IV (8 bytes), cf the method in JCECipherFactory:&lt;/p&gt;

&lt;p&gt;        private byte[] generateIV(byte[] secretKey)&lt;/p&gt;

&lt;p&gt;There is a small change of a collision here too: we transform the bogus secretKey (8 bytes) to an IV, which is compared against the exisiting one produced with the correct key (decrypted with the correct boothashword at boot time). Note we only changed one bit in the boot hashword (&apos;T&apos;-&amp;gt;&apos;t&apos;): that might increase the likelihood that we decoded a (albeit wrong) key, but similar, for which we would get the same IV as for the correct key. &lt;br/&gt;
If so, the change of boot password would succeed. Depending on the uniformity or the computation of the IV hashing, the likelihood of this would vary, but its not impossible as far as I can see.&lt;/p&gt;</comment>
                            <comment id="13208964" author="dagw" created="Wed, 15 Feb 2012 23:32:22 +0000"  >&lt;p&gt;Got another instance of the wrong boot type, this on attempt 12700... The frequency is in deed low, so the 1/65536 chance doesn&apos;t seem to contradict observations, at least. The &quot;wrong password change&quot; should be much more unlikely if the above analysis is correct, I think we have seen this only once&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. &lt;/p&gt;</comment>
                            <comment id="13209017" author="dagw" created="Thu, 16 Feb 2012 00:38:44 +0000"  >&lt;p&gt;A possible solution for the &quot;wrong boot&quot; issue is to rewrite this test to JUnit and just accept XBM0U, since we know it will happen sometimes.&lt;br/&gt;
That leaves the &quot;wrong password change&quot; issue, of course.&lt;/p&gt;</comment>
                            <comment id="13209205" author="knutanders" created="Thu, 16 Feb 2012 08:05:54 +0000"  >&lt;p&gt;It eventually failed in my environment too, after 43016 iterations:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: encryptDatabase jdk1.6.0_26 2012-02-15 23:19:53 ***&lt;br/&gt;
123 del&lt;br/&gt;
&amp;lt; ERROR XBM06: Startup failed. An encrypted database cannot be accessed without the correct boot password.  &lt;br/&gt;
123a123&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: &apos;ERROR XBM0U: No class was registered for identifier 25751.: java.lang.ClassNotFoundException&apos;.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   encryptDatabase jdk1.6.0_26 2012-02-15 23:19:58 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13209225" author="knutanders" created="Thu, 16 Feb 2012 08:37:44 +0000"  >&lt;p&gt;&amp;gt; A possible solution for the &quot;wrong boot&quot; issue is to rewrite this&lt;br/&gt;
&amp;gt; test to JUnit and just accept XBM0U, since we know it will happen&lt;br/&gt;
&amp;gt; sometimes.&lt;/p&gt;

&lt;p&gt;That would silence the test, but it might alarm users if they&lt;br/&gt;
occasionally get &quot;log corrupted&quot; errors in their logs. Even though&lt;br/&gt;
they see that it boots fine the next time, they may lose confidence in&lt;br/&gt;
the integrity of the database.&lt;/p&gt;

&lt;p&gt;&amp;gt; That leaves the &quot;wrong password change&quot; issue, of course.&lt;/p&gt;

&lt;p&gt;Although the chances of collisions are smaller when changing boot&lt;br/&gt;
password, I suspect that if a collision occurs, it ends up corrupting&lt;br/&gt;
the database, since the input to the encryption function is not the&lt;br/&gt;
original secret key, so it&apos;ll save an encryption key that cannot be&lt;br/&gt;
used to decrypt the db pages.&lt;/p&gt;

&lt;p&gt;That is, it saves&lt;/p&gt;

&lt;p&gt;  encrypt(decrypt(encrypt(secretKey, &quot;Thursday&quot;), &quot;thursday&quot;), &quot;derbypwd&quot;);&lt;/p&gt;

&lt;p&gt;which cannot be decrypted to the original secret key using any of the&lt;br/&gt;
three passwords (Thursday, thursday, derbypwd).&lt;/p&gt;

&lt;p&gt;Maybe we could start using the full digest for verification instead of&lt;br/&gt;
the condensed 16 bit digest? That should solve both issues, but we&apos;ll&lt;br/&gt;
need some extra logic to handle upgrades.&lt;/p&gt;</comment>
                            <comment id="13209230" author="knutanders" created="Thu, 16 Feb 2012 08:57:50 +0000"  >&lt;p&gt;As to the randomness of the &quot;wrong password change&quot; issue, I noticed that both the case noticed by John and the one noticed by Rick happened in the encryptionECB suite, which set some extra properties to specify one particular encryption algorithm. I instrumented JCECipherProvider.java and found that the IV is not used when running that test. From its constructor:&lt;/p&gt;

&lt;p&gt;            if (cipher.getIV() == null)&lt;br/&gt;
                ivUsed = false;&lt;/p&gt;

&lt;p&gt;getIV() returns null when running store/encryptDatabase.sql under the encryptionECB suite, and ivUsed is set to false. This makes verifyIV() a no-op, and the chance of collision is 2^-32 for that case too.&lt;/p&gt;</comment>
                            <comment id="13210540" author="dagw" created="Fri, 17 Feb 2012 20:46:30 +0000"  >&lt;p&gt;I have rewritten encryptDatabase.sql to JUnit and made the test ignore  the &quot;wrong boot&quot; issue. Even though this doesn&apos;t solve the &quot;wrong password change&quot;, it&apos;s&#160;incremental improvement. I&apos;ll make a new issue for storing the full digest to reduce the collision chance for both issues. &lt;span class=&quot;error&quot;&gt;&amp;#91;Update: DERBY-5622&amp;#93;&lt;/span&gt;.&lt;/p&gt;</comment>
                            <comment id="13210784" author="dagw" created="Sat, 18 Feb 2012 03:04:43 +0000"  >&lt;p&gt;Uploading derby-2687-1 (conversion to JUnit, ignoring the boot issue), running regressions.&lt;/p&gt;</comment>
                            <comment id="13211810" author="knutanders" created="Mon, 20 Feb 2012 12:36:36 +0000"  >&lt;p&gt;Looks like a good improvement, I agree. Some small suggestions:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The method assertFailedStatement() could be replaced by BaseJDBCTestCase.assertStatementError().&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In the catch block of assertFailedBoot(), the search for the SQLState might be expressed more concisely as:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    boolean found = Arrays.asList(accepted).contains(e.getSQLState());&lt;/p&gt;

&lt;p&gt;(Or perhaps factor out in a helper method that could be used by other tests? Seems useful enough, and already implemented in RolesConferredPrivilegesTest.assertSQLState().)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When checking the results of a query that returns a single value, assertSingleValueResultSet() is slightly less verbose than assertFullResultSet().&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Perhaps you could add a comment that explains the purpose of the first line in testEncryption()?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13212345" author="dagw" created="Tue, 21 Feb 2012 04:26:56 +0000"  >&lt;p&gt;Thanks for looking at the patch, Knut. Sounds like good improvements you suggest. I&apos;ll spin a new rev.&lt;br/&gt;
Regressions passed, btw.&lt;/p&gt;</comment>
                            <comment id="13212354" author="dagw" created="Tue, 21 Feb 2012 04:57:55 +0000"  >&lt;p&gt;Uploading #2 of the patch, addressing Knut&apos;s comments except the last: I removed the line altogether, it&apos;s no longer needed.&lt;/p&gt;</comment>
                            <comment id="13212472" author="knutanders" created="Tue, 21 Feb 2012 09:06:55 +0000"  >&lt;p&gt;Thanks, Dag. The #2 patch looks good to me.&lt;/p&gt;

&lt;p&gt;One final nit. In assertFailedBoot(), the newly introduced variable &quot;l&quot; is never used:&lt;/p&gt;

&lt;p&gt;+            List l = Arrays.asList(accepted);&lt;/p&gt;</comment>
                            <comment id="13213191" author="dagw" created="Wed, 22 Feb 2012 02:10:07 +0000"  >&lt;p&gt;Committed patch #2 (and removed the superfluous line) as svn 1292084, closing.&lt;br/&gt;
If/when we see the &quot;boot password change issue&quot; again, please note it on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5622&quot; title=&quot;Reduce the chance for hash collisions when checking bootPassword at boot time and when changing password.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5622&quot;&gt;&lt;del&gt;DERBY-5622&lt;/del&gt;&lt;/a&gt; (it&apos;s is a store issue, not a test issue).&lt;/p&gt;</comment>
                            <comment id="13213226" author="dagw" created="Wed, 22 Feb 2012 03:05:17 +0000"  >&lt;p&gt;I don&apos;t backport this now (error it&apos;s infrequent and patch contains a new test), but it could be backported to 10.8 safely, I believe. If anyone thinks it should be backported, I can do it when the new test has been running on trunk for a while and nothing untoward happens.&lt;/p&gt;</comment>
                            <comment id="13229331" author="kmarsden" created="Wed, 14 Mar 2012 16:45:12 +0000"  >&lt;p&gt;reopen and assigning to myself temporarily for backport to 10.8.    I won&apos;t go any further than that as it is just a testing issue.&lt;/p&gt;

</comment>
                            <comment id="13229689" author="kmarsden" created="Wed, 14 Mar 2012 22:15:05 +0000"  >&lt;p&gt;re-resolving after backport to 10.8.  This test change/conversion  could go back further if it is found to interupt runs on older versions.&lt;/p&gt;</comment>
                            <comment id="13823432" author="knutanders" created="Fri, 15 Nov 2013 08:15:14 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update: close all resolved issues that haven&amp;#39;t had any activity the last year&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12543100">DERBY-5622</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12515060" name="derby-2687-1.diff" size="36732" author="dagw" created="Sat, 18 Feb 2012 03:04:42 +0000"/>
                            <attachment id="12515061" name="derby-2687-1.stat" size="1226" author="dagw" created="Sat, 18 Feb 2012 03:04:42 +0000"/>
                            <attachment id="12515319" name="derby-2687-2.diff" size="36357" author="dagw" created="Tue, 21 Feb 2012 04:57:54 +0000"/>
                            <attachment id="12515320" name="derby-2687-2.stat" size="1226" author="dagw" created="Tue, 21 Feb 2012 04:57:54 +0000"/>
                            <attachment id="12358084" name="derby.log" size="49443" author="johnemb" created="Thu, 24 May 2007 11:56:50 +0100"/>
                            <attachment id="12514539" name="tmp-82.zip" size="605514" author="dagw" created="Tue, 14 Feb 2012 19:52:59 +0000"/>
                            <attachment id="12358091" name="wombat.zip" size="454910" author="johnemb" created="Thu, 24 May 2007 12:24:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Dec 2010 13:18:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23180</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0cp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35875</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>