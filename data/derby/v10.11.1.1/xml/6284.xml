<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:49 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6284/DERBY-6284.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6284] Improve test coverage of org.apache.derby.iapi.db.ConnectionInfo</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6284</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;According to code coverage analysis, org.apache.derby.iapi.db.ConnectionInfo is &lt;br/&gt;
not currently being exercised by any of our regression tests.&lt;/p&gt;

&lt;p&gt;This task is to investigate this class, and either remove the unused code, or add&lt;br/&gt;
regression test that exercise the code, as appropriate.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12655535">DERBY-6284</key>
            <summary>Improve test coverage of org.apache.derby.iapi.db.ConnectionInfo</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12641844">DERBY-6164</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ahsancse">ahsan shamsudeen</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Jul 2013 03:48:44 +0100</created>
                <updated>Wed, 3 Sep 2014 09:31:38 +0100</updated>
                            <resolved>Thu, 11 Jul 2013 03:48:40 +0100</resolved>
                                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13696449" author="bryanpendleton" created="Mon, 1 Jul 2013 03:52:43 +0100"  >&lt;p&gt;Here is the current coverage report for ConnectionInfo:&lt;br/&gt;
&lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/coverage/_files/11c.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/coverage/_files/11c.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13696666" author="knutanders" created="Mon, 1 Jul 2013 10:11:29 +0100"  >&lt;p&gt;I think nextAutoincrementValue() is used when adding an identity column with ALTER TABLE ... ADD COLUMN, called via reflection from AlterTableConstantAction.updateNewAutoincrementColumn(). Unfortunately, that functionality is disabled in the parser, so it might be tricky to test. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3888&quot; title=&quot;ALTER TABLE ... ADD COLUMN cannot add identity columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3888&quot;&gt;&lt;del&gt;DERBY-3888&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;lastAutoincrementValue() isn&apos;t used anywhere, so far as I can see.&lt;/p&gt;</comment>
                            <comment id="13696700" author="ahsancse" created="Mon, 1 Jul 2013 11:25:54 +0100"  >&lt;p&gt;Why the comment for nextAutoincrementValue() says &quot;THIS METHOD MAY BE REMOVED IN A FUTURE RELEASE&quot; ?&lt;/p&gt;</comment>
                            <comment id="13696729" author="knutanders" created="Mon, 1 Jul 2013 12:08:09 +0100"  >&lt;p&gt;I think the comment is a warning to application writers that they should not consider the method part of Derby&apos;s public API, and that there are no guarantees that the method will be available in future versions of Derby. It is only meant to be called from Derby code, not from application code.&lt;/p&gt;</comment>
                            <comment id="13698663" author="ahsancse" created="Wed, 3 Jul 2013 07:20:37 +0100"  >&lt;p&gt;The lastAutoinccrementValue() is seems unused as Knut Anders Hatlen suggested .What should I do for that? However, I try to build test cases for above two methods. &lt;/p&gt;

&lt;p&gt;public void testLastAutoincrementValue() throws Exception &lt;/p&gt;
{
        String schemaName = &quot;&quot;;
        String tableName = &quot;&quot;;
        String columnName = &quot;&quot;;
        Long expResult = null;
        Long result = ConnectionInfo.lastAutoincrementValue(schemaName, tableName, columnName);
        assertEquals(expResult, result);
         fail(&quot;The test case is not yet implemented&quot;);
    }


&lt;p&gt;public void testNextAutoincrementValue() throws Exception &lt;/p&gt;
{
        String schemaName = &quot;&quot;;
        String tableName = &quot;&quot;;
        String columnName = &quot;&quot;;
        long expResult = 0L;
        long result = ConnectionInfo.nextAutoincrementValue(schemaName, tableName, columnName);
        assertEquals(expResult, result);
      fail(&quot;The test case is not yet implemented.&quot;);
    }

&lt;p&gt;what are the values should i give to schemaName, tableName,columnName ? I have to create a new schema to test out or can use an existing schema?&lt;/p&gt;</comment>
                            <comment id="13698733" author="knutanders" created="Wed, 3 Jul 2013 09:13:54 +0100"  >&lt;p&gt;I think it would be OK to remove lastAutoinccrementValue(). Its javadoc comment says that applications should use java.sql.Statement.getGeneratedKeys() instead.&lt;/p&gt;

&lt;p&gt;nextAutoincrementValue() won&apos;t work if it is called directly. It has to be called from inside a stored procedure or function. So in order to test it, I think we&apos;d need to create a table with an auto-increment column, for example:&lt;/p&gt;

&lt;p&gt;    create table t(x int generated always as identity)&lt;/p&gt;

&lt;p&gt;Then create a stored function that calls nextAutoincrementValue() on the identity column:&lt;/p&gt;

&lt;p&gt;    public static long nextValue() throws SQLException &lt;/p&gt;
{
        return ConnectionInfo.nextAutoincrementValue(&quot;APP&quot;, &quot;T&quot;, &quot;X&quot;);
    }

&lt;p&gt;    create function next_value() returns bigint language java parameter style java external name &apos;NameOfJavaClass.nextValue&apos;&lt;/p&gt;

&lt;p&gt;Then the method can be invoked from SQL like this:&lt;/p&gt;

&lt;p&gt;    values next_value()&lt;/p&gt;

&lt;p&gt;However, I tried this in my environment, and the call failed with a NullPointerException. It looks like there are some data structures that need to be set up before the call in order to make it succeed. Something similar to what AlterTableConstantAction.updateNewAutoincrementColumn() does before it calls nextAutoincrementValue(). But I think it&apos;s probably more work than it&apos;s worth to get this method tested separately. I&apos;d recommend leaving it untested for now and wait for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3888&quot; title=&quot;ALTER TABLE ... ADD COLUMN cannot add identity columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3888&quot;&gt;&lt;del&gt;DERBY-3888&lt;/del&gt;&lt;/a&gt; to be fixed.&lt;/p&gt;</comment>
                            <comment id="13699038" author="ahsancse" created="Wed, 3 Jul 2013 15:50:59 +0100"  >&lt;p&gt;I have created the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6284&quot; title=&quot;Improve test coverage of org.apache.derby.iapi.db.ConnectionInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6284&quot;&gt;&lt;del&gt;DERBY-6284&lt;/del&gt;&lt;/a&gt;.patch which removes lastAutoincrementValue() method. look at the patch and suggest me any requirred changes.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Ahsan&lt;/p&gt;</comment>
                            <comment id="13700160" author="bryanpendleton" created="Thu, 4 Jul 2013 16:47:58 +0100"  >&lt;p&gt;I&apos;ve been studying this issue and thinking about the proposal &lt;br/&gt;
to remove ConnectionInfo.lastAutoincrementValue.&lt;/p&gt;

&lt;p&gt;If we do this, I think we should update the JavaDoc comments in&lt;br/&gt;
LanguageConnectionContext.java and in GenericLanguageConnectionContext.java&lt;/p&gt;

&lt;p&gt;./engine/org/apache/derby/iapi/db/ConnectionInfo.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;@see org.apache.derby.iapi.db.ConnectionInfo#lastAutoincrementValue&lt;br/&gt;
./engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java&lt;/li&gt;
	&lt;li&gt;Implements ConnectionInfo.lastAutoincrementValue.&lt;/li&gt;
	&lt;li&gt;@see org.apache.derby.iapi.db.ConnectionInfo#lastAutoincrementValue&lt;/li&gt;
	&lt;li&gt;@see org.apache.derby.iapi.db.ConnectionInfo#lastAutoincrementValue&lt;br/&gt;
./engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As I was studying this, I was confused by the comment in&lt;br/&gt;
GenericLanguageConnectionContext.lastAutoincrementValue that says:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Implements ConnectionInfo.lastAutoincrementValue.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;At first I thought this meant &quot;implements&quot; as in normal Java interface-implementation &lt;br/&gt;
usage; in that use of the word, GenericLanguageConnectionContext.lastAutoincrementValue&lt;br/&gt;
&quot;implements&quot; LanguageConnectionContext.lastAutoincrementValue and&lt;br/&gt;
GenericLanguageConnectionContext.autoincrementFlushCache &quot;implements&quot;&lt;br/&gt;
LanguageConnectionContext.autoincrementFlushCache.&lt;/p&gt;

&lt;p&gt;But, what this comment actually means is: &quot;ConnectionInfo.lastAutoincrementValue&lt;br/&gt;
is a wrapper routine, which calls GenericLanguageConnectionContext.lastAutoincrementValue&lt;br/&gt;
to do all the work.&quot;&lt;/p&gt;

&lt;p&gt;Which is a different sense of the word &quot;implements&quot;. Still valid, but different.&lt;/p&gt;

&lt;p&gt;As I was looking at the code in GenericLanguageConnectionContext, I noticed&lt;br/&gt;
that, according to the Emma report in &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/coverage/_files/b5.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/coverage/_files/b5.html&lt;/a&gt;,&lt;br/&gt;
neither lastAutoincrementValue() nor autoincrementFlushCache() is called at all by&lt;br/&gt;
our regression suite.&lt;/p&gt;

&lt;p&gt;However, when I look at &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/coverage/_files/3cf.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/coverage/_files/3cf.html&lt;/a&gt;,&lt;br/&gt;
I see that the Emma report for InsertResultSet says that lines 1118-1124 ARE executed:&lt;/p&gt;

&lt;p&gt;            Long initialValue =&lt;br/&gt;
              lcc.lastAutoincrementValue(&lt;br/&gt;
                      (s = constants.getSchemaName()),&lt;br/&gt;
                      (t = constants.getTableName()),&lt;br/&gt;
                      (c = constants.getColumnName&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;));&lt;/p&gt;

&lt;p&gt;and the report also says that line 1384 IS executed:&lt;/p&gt;

&lt;p&gt;    lcc.autoincrementFlushCache(constants.targetUUID);&lt;/p&gt;

&lt;p&gt;So now I&apos;m confused: if these lines are executed, how is it that the corresponding&lt;br/&gt;
implementation code in GenericLanguageConnectionContext is NOT executed?&lt;/p&gt;

&lt;p&gt;Is this a flaw in the Emma analysis?&lt;/p&gt;

&lt;p&gt;To summarize:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if we decide to remove ConnectionInfo.lastAutoincrementValue, we&lt;br/&gt;
  should update the JavaDoc comments in LanguageConnectionContext.java&lt;br/&gt;
  and GenericLanguageConnectionContext.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;something is strange about the Emma coverage report for&lt;br/&gt;
   GenericLanguageConnectionContext, because it claims that the&lt;br/&gt;
  lastAutoincrementValue and autoincrementFlushCache methods are not&lt;br/&gt;
  executed, even though the Emma report for InsertResultSet shows that&lt;br/&gt;
  those methods ARE executed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Before proceeding with this patch, I&apos;d like to better understand both the above.&lt;/p&gt;</comment>
                            <comment id="13700223" author="bryanpendleton" created="Thu, 4 Jul 2013 18:05:57 +0100"  >&lt;p&gt;Using the debugger, I verified that tests.lang.TableFunctionTest most certainly does&lt;br/&gt;
call GenericLanguageConnectionContext.autoincrementFlushCache.&lt;/p&gt;

&lt;p&gt;So I&apos;m not sure why the Emma coverage report shows this function as un-covered.&lt;/p&gt;</comment>
                            <comment id="13700328" author="knutanders" created="Thu, 4 Jul 2013 21:22:01 +0100"  >&lt;p&gt;I don&apos;t know why the Emma report says that the method isn&apos;t covered. But I see that an old JaCoCo report Kristian published says that it is (was) covered: &lt;a href=&quot;http://people.apache.org/~kristwaa/jacoco/org.apache.derby.impl.sql.conn/GenericLanguageConnectionContext.java.html#L3490&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~kristwaa/jacoco/org.apache.derby.impl.sql.conn/GenericLanguageConnectionContext.java.html#L3490&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Emma doesn&apos;t seem to be maintained anymore (the latest release was eight years ago), so it&apos;s probably a good idea to migrate to a tool that&apos;s still actively maintained. JaCoCo had a release last month.&lt;/p&gt;</comment>
                            <comment id="13700962" author="bryanpendleton" created="Fri, 5 Jul 2013 17:11:29 +0100"  >&lt;p&gt;Indeed, when I run TableFunctionTest with JaCoCo, autoincrementFlushCache is correctly reported as executed.&lt;/p&gt;

&lt;p&gt;Ahsan, I think we should switch to using JaCoCo for our coverage analysis.&lt;/p&gt;

&lt;p&gt;Can you run the tests on your computer using JaCoCo?&lt;/p&gt;

&lt;p&gt;I&apos;ve created a Wiki page with some simple notes about the setup process here:&lt;br/&gt;
&lt;a href=&quot;https://wiki.apache.org/db-derby/CodeCoverageWithJaCoCo&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://wiki.apache.org/db-derby/CodeCoverageWithJaCoCo&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13704301" author="ahsancse" created="Wed, 10 Jul 2013 09:19:30 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I could able to run the test in my computer using JaCoCo  by following your notes. It&apos;s Successfully built. What should I do next ?&lt;/p&gt;</comment>
                            <comment id="13704581" author="bryanpendleton" created="Wed, 10 Jul 2013 14:50:09 +0100"  >&lt;p&gt;Great! I don&apos;t think there&apos;s anything more to do with this sub-task. I am intending&lt;br/&gt;
to adjust the JavaDoc comments in  LanguageConnectionContext.java&lt;br/&gt;
and GenericLanguageConnectionContext.java and then proceed with committing&lt;br/&gt;
this patch.&lt;/p&gt;

&lt;p&gt;I think you should open a new sub-task of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6164&quot; title=&quot;Improve Derby&amp;#39;s Code Coverage - GSoC 2013 Project&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6164&quot;&gt;&lt;del&gt;DERBY-6164&lt;/del&gt;&lt;/a&gt;, describing the next&lt;br/&gt;
class that you are working on.&lt;/p&gt;</comment>
                            <comment id="13705412" author="jira-bot" created="Thu, 11 Jul 2013 03:47:49 +0100"  >&lt;p&gt;Commit 1502089 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bryanpendleton&quot; class=&quot;user-hover&quot; rel=&quot;bryanpendleton&quot;&gt;Bryan Pendleton&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1502089&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1502089&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6284&quot; title=&quot;Improve test coverage of org.apache.derby.iapi.db.ConnectionInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6284&quot;&gt;&lt;del&gt;DERBY-6284&lt;/del&gt;&lt;/a&gt;: Improve test coverage of org.apache.derby.iapi.db.ConnectionInfo&lt;/p&gt;

&lt;p&gt;This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)&lt;/p&gt;

&lt;p&gt;This patch removes the method lastAutoincrementValue from the ConnectionInfo&lt;br/&gt;
class. This method is no longer part of the public Derby API; Derby&lt;br/&gt;
applications should be using java.sql.Statement.getGeneratedKeys() instead.&lt;/p&gt;</comment>
                            <comment id="13705413" author="bryanpendleton" created="Thu, 11 Jul 2013 03:48:40 +0100"  >&lt;p&gt;Committed revision 1502089.&lt;/p&gt;

&lt;p&gt;Thank you for the contribution, Ahsan.&lt;/p&gt;</comment>
                            <comment id="14119611" author="knutanders" created="Wed, 3 Sep 2014 09:31:38 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12405445">DERBY-3888</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12590638" name="DERBY-6284.patch" size="1541" author="ahsancse" created="Wed, 3 Jul 2013 15:50:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Jul 2013 09:11:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>335810</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzfrnr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>336134</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>