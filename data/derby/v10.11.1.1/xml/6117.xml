<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:41:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6117/DERBY-6117.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6117] Extend the Table Functions java interface to pass more query context information from Derby</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6117</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;General requirement is to extend the Table Functions java interface (through RestrictedVTI or another interface) and pass more context information from Derby to Table Functions - esp in query execution phase.&lt;/p&gt;

&lt;p&gt;Greater urgency is required for the first 2 items below, especially the ability to access the original SQL which was available with VTIs. This is critical to the GaianDB project - we extract HINTs from the query (where we pass meta data like user credentials), and also extract full original complex predicate expressions (involving functions etc - which cannot be expressed with a Restriction) - to push on in our query prorogation...&lt;/p&gt;

&lt;p&gt;In order of importance + simplicity:&lt;br/&gt;
--------------------------------------------------&lt;br/&gt;
1 - Original SQL (this used to be available with VTIs through VTIEnvironment for both compilation and execution phases)&lt;br/&gt;
2 - Name of function that was called&lt;/p&gt;

&lt;p&gt;3 - User Info (ID, etc) - (this can currently be passed in the SQL hint)&lt;br/&gt;
4 - Richer predicate expressions (incl functions, etc)&lt;br/&gt;
5 - Context within Join query (e.g. inner or outer table, join type)&lt;br/&gt;
6 - Other Query Plan information&lt;br/&gt;
7 - Anything else...?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12638261">DERBY-6117</key>
            <summary>Extend the Table Functions java interface to pass more query context information from Derby</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="drv">David Vyvyan</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Thu, 21 Mar 2013 15:36:25 +0000</created>
                <updated>Wed, 13 Aug 2014 16:01:21 +0100</updated>
                                            <version>10.8.3.0</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13609043" author="drv" created="Thu, 21 Mar 2013 15:38:04 +0000"  >&lt;p&gt;Original forum discussion:&lt;br/&gt;
&lt;a href=&quot;http://apache-database.10148.n7.nabble.com/Limitations-of-Table-Functions-vs-old-VTIs-td127988.html#a127995&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache-database.10148.n7.nabble.com/Limitations-of-Table-Functions-vs-old-VTIs-td127988.html#a127995&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13851261" author="rhuddusa" created="Wed, 18 Dec 2013 01:54:24 +0000"  >&lt;p&gt;i agree with all above, especially the name of the function called.&lt;/p&gt;

&lt;p&gt;adding information from&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6115&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-6115&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) derby should support passing IN to initScan&lt;br/&gt;
2) derby should transform IN to an OR clause as a work around to not passing down IN scan&lt;br/&gt;
3) function should have access to information about the function&apos;s return type, i.e. the if the result type is a table definition, function should have access to that definition.  this is necessary when a function is declared with multiple names and return types.  for example, with foreign table loads, we want to pre-transform data from remote result set in 1 thread, then hand to derby thread.  we need to know what the main derby thread reading resultset wants in sqltype for each column. &lt;br/&gt;
4) derby should introspect resultset to see which column names are searchable, and thus, fast for querying,  perhaps isSearchable on ResultSetMetaData is the right / wrong thing to do.  maybe can do this with VTIConsting ?&lt;br/&gt;
5) derby should do multi-probe on vti function if vti function indicates on a metaData that isSearchable is true, or that it implements perfectly the initscan restriction.&lt;br/&gt;
6) vti function should be able to tell derby that it correctly implements the vti restriction, either for a given one, or for any, and derby should not request the column in initscan columnNames, and derby  should not check again the restriction. ( for example, assume foreign table with username and picture as BLOB) , a query for select username where picture is not null, currently, derby will pass select username and picture as columnnames, and function will have to pull all the username and blob data and hand to derby, just to allow derby to check again is not null, even though function already did this .  This is a HUGE performance issue we are experiencing.  &lt;/p&gt;

&lt;p&gt;i&apos;m sure i&apos;ll have more issues to add &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13882474" author="rhillegas" created="Sun, 26 Jan 2014 23:17:10 +0000"  >&lt;p&gt;Note that part of item (3) can be obtained by calling DriverManager.getConnection( &quot;jdbc:default:connection&quot; ) in order to get the connection and then executing a &quot;values current_user&quot; statement.&lt;/p&gt;</comment>
                            <comment id="13882475" author="rhillegas" created="Sun, 26 Jan 2014 23:19:59 +0000"  >&lt;p&gt;&#65279;&#65279;Attaching derby-6117-01-aa-AwareVTI.diff. This patch introduces the AwareVTI interface. This is a first step toward giving table functions more context about their execution environments. I am running tests now.&lt;/p&gt;

&lt;p&gt;Introduces two new classes/interfaces:&lt;/p&gt;

&lt;p&gt;o VTIContext - This is a simple class which contains the following information:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The name of the schema holding the table function.&lt;/li&gt;
	&lt;li&gt;The non-schema-qualified name of the table function.&lt;/li&gt;
	&lt;li&gt;The text of the statement invoking the table function.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;o AwareVTI - Table functions which implement this interface are handed the VTIContext describing their execution environment.&lt;/p&gt;

&lt;p&gt;VTITemplate now implements AwareVTI so most table functions will get this functionality for free.&lt;/p&gt;

&lt;p&gt;VTIContext exposes the following methods:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    /** Return the name of the schema holding the table function */
    public  String  vtiSchema() { return _vtiSchema; }

    /** Return the unqualified table function name */
    public  String  vtiTable()  { return _vtiTable; }

    /** Return the text of the statement which invoked the table function */
    public  String  statementText() { return _statementText; }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;AwareVTI contains these method:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    /** Get the table function context */
    public  VTIContext  getContext();

    /** Set the table function context */
    public  void    setContext( VTIContext context );
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;A       java/engine/org/apache/derby/vti/VTIContext.java&lt;br/&gt;
A       java/engine/org/apache/derby/vti/AwareVTI.java&lt;br/&gt;
M       java/engine/org/apache/derby/vti/VTITemplate.java&lt;/p&gt;

&lt;p&gt;Introduces the new classes and wires them into most existing table functions.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/execute/ResultSetFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/FromVTI.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/GenericResultSetFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/VTIResultSet.java&lt;/p&gt;

&lt;p&gt;Compile-time and execution-time machinery to support VTIContext.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/AwareVTITest.java&lt;br/&gt;
A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/DummyAwareVTI.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java&lt;/p&gt;

&lt;p&gt;Basic tests for this new feature.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M       tools/javadoc/publishedapi.ant&lt;/p&gt;

&lt;p&gt;Adds AwareVTI and VTIContext to the public api.&lt;/p&gt;</comment>
                            <comment id="13882496" author="rhillegas" created="Mon, 27 Jan 2014 01:23:27 +0000"  >&lt;p&gt;Attaching derby-6117-01-ab-AwareVTI.diff. This fixes an NPE during compilation of old-style VTIs, introduced by the previous rev of the patch. Re-starting the tests.&lt;/p&gt;

&lt;p&gt;Touches the same files as the previous rev.&lt;/p&gt;</comment>
                            <comment id="13882802" author="rhillegas" created="Mon, 27 Jan 2014 13:26:42 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-6117-01-ab-AwareVTI.diff except for the query plan instability recently introduced into org.apache.derbyTesting.functionTests.tests.lang.SelectivityTest by other work.&lt;/p&gt;</comment>
                            <comment id="13882803" author="jira-bot" created="Mon, 27 Jan 2014 13:28:10 +0000"  >&lt;p&gt;Commit 1561668 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1561668&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1561668&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6117&quot; title=&quot;Extend the Table Functions java interface to pass more query context information from Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6117&quot;&gt;DERBY-6117&lt;/a&gt;: Give table functions more information about their execution environment; commit derby-6117-01-ab-AwareVTI.diff.&lt;/p&gt;</comment>
                            <comment id="13887366" author="rhillegas" created="Fri, 31 Jan 2014 01:50:53 +0000"  >&lt;p&gt;Attaching derby-6117-02-aa-changeColumnNamesInStringColumnVTI.diff. This patch makes it possible to create a StringColumnVTI with no column names and then set the column names later. I am running tests now.&lt;/p&gt;

&lt;p&gt;This feature is useful for AwareVTIs which determine their column names only after analyzing their execution context.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/vti/StringColumnVTI.java&lt;/p&gt;

&lt;p&gt;If the StringColumnVTI is created without any column names, then the column names can be set once later on.&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M       java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;/p&gt;

&lt;p&gt;New error raised if you try to change the column names after they&apos;ve already been set.&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/AwareVTITest.java&lt;/p&gt;

&lt;p&gt;Test for this behavior.&lt;/p&gt;</comment>
                            <comment id="13887769" author="jira-bot" created="Fri, 31 Jan 2014 14:01:18 +0000"  >&lt;p&gt;Commit 1563135 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1563135&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1563135&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6117&quot; title=&quot;Extend the Table Functions java interface to pass more query context information from Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6117&quot;&gt;DERBY-6117&lt;/a&gt;: Allow StringColumnVTIs to change their column names (once) based on their runtime environment; tests passed cleanly for me on derby-6117-02-aa-changeColumnNamesInStringColumnVTI.diff.&lt;/p&gt;</comment>
                            <comment id="13889068" author="rhillegas" created="Sun, 2 Feb 2014 21:30:22 +0000"  >&lt;p&gt;Attaching derby-6117-03-aa-ArchiveVTI.diff. This patch adds a sample AwareVTI which we may be able to use in user documentation. I am running tests now.&lt;/p&gt;

&lt;p&gt;This patch introduces ArchiveVTI. This table function performs a task which many users have found useful: ArchiveVTI unions together a main table together with a set of archive tables. The archive tables are created at regular intervals. When a new archive table is created, the oldest rows from the main table are moved to the archive table.&lt;/p&gt;

&lt;p&gt;This patch also refactors ForeignTableVTI, moving its ResultSet implementaton into a new ForwardingVTI table function. ForwardingVTI forwards its ResultSet calls to a wrapped ResultSet. ForwardingVTI is added to the public api.&lt;/p&gt;


&lt;p&gt;The following script shows ArchiveVTI in action:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;connect &apos;jdbc:derby:memory:db;create=true&apos;;

create table t1
(
    keyCol int,
    aCol int,
    bCol int
);
create table t1_archive_001 as select * from t1 with no data;
create table t1_archive_002 as select * from t1 with no data;

insert into t1_archive_002 values ( 1, 100, 1000 ), ( 2, 200, 2000 ), ( 3, 300, 3000 );
insert into t1_archive_001 values ( 4, 400, 4000 ), ( 5, 500, 5000 ), ( 6, 600, 6000 );
insert into t1 values ( 7, 700, 7000 ), ( 8, 800, 8000 ), ( 9, 900, 9000 );

create function t1( archiveSuffix varchar( 32672 ) ) returns table
(
    keyCol int,
    aCol int,
    bCol int
)
language java parameter style derby_jdbc_result_set reads sql data
external name &apos;org.apache.derbyTesting.functionTests.tests.lang.ArchiveVTI.archiveVTI&apos;;

--
-- Since ArchiveVTI implements RestrictedVTI, only the indicated columns
-- will be selected from the main table and its archives. Also, the WHERE clause
-- will be pushed down into the scan of each of the tables.
--
select keyCol, bCol from table( t1( &apos;_ARCHIVE_&apos; ) ) s
where keyCol between 3 and 7
order by keyCol;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/vti/ForeignTableVTI.java&lt;br/&gt;
A       java/engine/org/apache/derby/vti/ForwardingVTI.java&lt;br/&gt;
M       tools/javadoc/publishedapi.ant&lt;/p&gt;

&lt;p&gt;Adds ForwardingVTI to the public api.&lt;/p&gt;

&lt;p&gt;-------------------&lt;/p&gt;

&lt;p&gt;A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/ArchiveVTI.java&lt;/p&gt;

&lt;p&gt;The new sample AwareVTI.&lt;/p&gt;

&lt;p&gt;-------------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/AwareVTITest.java&lt;/p&gt;

&lt;p&gt;Tests for ArchiveVTI.&lt;/p&gt;</comment>
                            <comment id="13889105" author="rhillegas" created="Sun, 2 Feb 2014 23:32:17 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-6117-03-aa-ArchiveVTI.diff.&lt;/p&gt;</comment>
                            <comment id="13889542" author="jira-bot" created="Mon, 3 Feb 2014 15:11:41 +0000"  >&lt;p&gt;Commit 1563944 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1563944&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1563944&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6117&quot; title=&quot;Extend the Table Functions java interface to pass more query context information from Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6117&quot;&gt;DERBY-6117&lt;/a&gt;: Add a context-aware table function which could be used as an example in user docs; commit derby-6117-03-aa-ArchiveVTI.diff.&lt;/p&gt;</comment>
                            <comment id="13889548" author="rhillegas" created="Mon, 3 Feb 2014 15:21:22 +0000"  >&lt;p&gt;Attaching derby-6117-04-aa-improveJavadoc.diff. This patch improves the javadoc for ArchiveVTI by adding a sample CREATE FUNCTION statement, showing how to declare an archive VTI.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/ArchiveVTI.java&lt;/p&gt;</comment>
                            <comment id="13889549" author="jira-bot" created="Mon, 3 Feb 2014 15:22:14 +0000"  >&lt;p&gt;Commit 1563947 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1563947&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1563947&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6117&quot; title=&quot;Extend the Table Functions java interface to pass more query context information from Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6117&quot;&gt;DERBY-6117&lt;/a&gt;: Add a sample CREATE FUNCTION statement to the javadoc for ArchiveVTI; commit derby-6117-04-aa-improveJavadoc.diff.&lt;/p&gt;</comment>
                            <comment id="14095540" author="jira-bot" created="Wed, 13 Aug 2014 15:48:05 +0100"  >&lt;p&gt;Commit 1617737 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1617737&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1617737&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6117&quot; title=&quot;Extend the Table Functions java interface to pass more query context information from Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6117&quot;&gt;DERBY-6117&lt;/a&gt; Silently swallowed SecurityExceptions may disable Derby features, including security features.&lt;/p&gt;

&lt;p&gt;Patch derby-6617-3b. It adds reporting of the swallowed&lt;br/&gt;
SecurityException in FileMonitor#createDaemonGroup.&lt;/p&gt;

&lt;p&gt;To get that printed I also i had to to make sure to dump the temporary&lt;br/&gt;
log in a change added to BaseMonitor#runWithState.&lt;/p&gt;

&lt;p&gt;Additionally, I discovered that Derby became unbootable if we lack the&lt;br/&gt;
modifyThreadGroup permission: the monitor in such an event, lacking a&lt;br/&gt;
proper handler, thought it was already initialized so subsequent boot&lt;br/&gt;
attempts (from a non-system thread so we wouldn&apos;t see the&lt;br/&gt;
modifyThreadGroup issue) would also fail. I added a handler to clear&lt;br/&gt;
the monitor to fix this.&lt;/p&gt;

&lt;p&gt;A new test fixture, testModifyThreadGroup checks that the warning&lt;br/&gt;
message being written to the console.&lt;/p&gt;</comment>
                            <comment id="14095562" author="jira-bot" created="Wed, 13 Aug 2014 16:01:21 +0100"  >&lt;p&gt;Commit 1617738 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/branches/10.11&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1617738&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1617738&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6117&quot; title=&quot;Extend the Table Functions java interface to pass more query context information from Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6117&quot;&gt;DERBY-6117&lt;/a&gt; Silently swallowed SecurityExceptions may disable Derby features, including security features.&lt;/p&gt;

&lt;p&gt;Backported from trunk as: merge -c 1617737 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Patch derby-6617-3b. It adds reporting of the swallowed&lt;br/&gt;
SecurityException in FileMonitor#createDaemonGroup.&lt;/p&gt;

&lt;p&gt;To get that printed I also i had to to make sure to dump the temporary&lt;br/&gt;
log in a change added to BaseMonitor#runWithState.&lt;/p&gt;

&lt;p&gt;Additionally, I discovered that Derby became unbootable if we lack the&lt;br/&gt;
modifyThreadGroup permission: the monitor in such an event, lacking a&lt;br/&gt;
proper handler, thought it was already initialized so subsequent boot&lt;br/&gt;
attempts (from a non-system thread so we wouldn&apos;t see the&lt;br/&gt;
modifyThreadGroup issue) would also fail. I added a handler to clear&lt;br/&gt;
the monitor to fix this.&lt;/p&gt;

&lt;p&gt;A new test fixture, testModifyThreadGroup checks that the warning&lt;br/&gt;
message being written to the console.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12692749">DERBY-6467</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12625291" name="derby-6117-01-aa-AwareVTI.diff" size="23606" author="rhillegas" created="Sun, 26 Jan 2014 23:19:59 +0000"/>
                            <attachment id="12625297" name="derby-6117-01-ab-AwareVTI.diff" size="23684" author="rhillegas" created="Mon, 27 Jan 2014 01:23:27 +0000"/>
                            <attachment id="12626243" name="derby-6117-02-aa-changeColumnNamesInStringColumnVTI.diff" size="5912" author="rhillegas" created="Fri, 31 Jan 2014 01:50:53 +0000"/>
                            <attachment id="12626564" name="derby-6117-03-aa-ArchiveVTI.diff" size="26430" author="rhillegas" created="Sun, 2 Feb 2014 21:30:22 +0000"/>
                            <attachment id="12626661" name="derby-6117-04-aa-improveJavadoc.diff" size="872" author="rhillegas" created="Mon, 3 Feb 2014 15:21:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Dec 2013 01:54:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>318737</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzcuin:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>319078</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>