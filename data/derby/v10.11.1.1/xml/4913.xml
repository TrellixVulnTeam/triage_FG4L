<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:45:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4913/DERBY-4913.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4913] 10.3 to 10.5 upgrade fails with ava.io.StreamCorruptedException: java.lang.ClassCastException: org.apache.derby.catalog.types.OldRoutineType incompatible with org.apache.derby.iapi.types.DataTypeDescriptor</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4913</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have a report from a user upgrading to 10.5 from 10.3 that they got the following error during upgrade. I don&apos;t have much in the way of details yet, but thought I would post an issue since I&apos;ve never seen this error before.  I do have the original 10.3 database and it seems to upgrade fine to 10.5 with ij.  &lt;/p&gt;


&lt;p&gt;    java.sql.SQLException: Failed to start database &lt;br/&gt;
&apos;/&lt;br/&gt;
org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.Util.seeNextException(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at org.apache.derby.jdbc.InternalDriver.connect(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.EmbeddedDataSource.getConnection(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.EmbedPooledConnection.openRealConnection(U&lt;br/&gt;
nknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.EmbedPooledConnection.&amp;lt;init&amp;gt;(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.EmbedPooledConnection40.&amp;lt;init&amp;gt;(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.Driver40.getNewPooledConnection(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.createPoo&lt;br/&gt;
ledConnection(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.getPooled&lt;br/&gt;
Connection(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
    Caused by: java.sql.SQLException: Failed to start database &lt;br/&gt;
&apos;&amp;lt;snip&amp;gt;759243AF2F8&lt;br/&gt;
4F1DE&apos; with class loader &amp;lt;snip&amp;gt;.ExtClassLoader@3e955f6, see the next &lt;br/&gt;
exception for details.&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(U&lt;br/&gt;
nknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTran&lt;br/&gt;
sportAcrossDRDA(Unknown Source)&lt;br/&gt;
       ... 41 more&lt;br/&gt;
    Caused by: java.sql.SQLException: Exception during restore &lt;br/&gt;
of a serializable or SQLData object of class &lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(U&lt;br/&gt;
nknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTran&lt;br/&gt;
sportAcrossDRDA(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       ... 38 more&lt;br/&gt;
    Caused by: ERROR XSDA8: Exception during restore of a &lt;br/&gt;
serializable or SQLData object of class &lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.error.StandardException.newException(Unkno&lt;br/&gt;
wn Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromAr&lt;br/&gt;
ray(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.store.raw.data.StoredPage.restoreRecordFro&lt;br/&gt;
mSlot(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.store.raw.data.BasePage.fetchFromSlot(Unkn&lt;br/&gt;
own Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.store.access.conglomerate.GenericScanContr&lt;br/&gt;
oller.fetchRows(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.store.access.heap.HeapScan.fetchNext(Unkno&lt;br/&gt;
wn Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescript&lt;br/&gt;
orViaHeap(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getAllSPSDe&lt;br/&gt;
scriptors(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMet&lt;br/&gt;
adataSPSes(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateMetad&lt;br/&gt;
ataSPSes(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(Unkno&lt;br/&gt;
wn Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DD_Version.upgradeIfNeeded(Unk&lt;br/&gt;
nown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.loadDiction&lt;br/&gt;
aryTables(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.boot(Unknow&lt;br/&gt;
n Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.TopService.bootModule(Unk&lt;br/&gt;
nown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.startModule(U&lt;br/&gt;
nknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
       at org.apache.derby.impl.db.BasicDatabase.boot(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.TopService.bootModule(Unk&lt;br/&gt;
nown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.bootService(U&lt;br/&gt;
nknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.startProvider&lt;br/&gt;
Service(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.findProviderA&lt;br/&gt;
ndStartService(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.services.monitor.BaseMonitor.startPersiste&lt;br/&gt;
ntService(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.services.monitor.Monitor.startPersistentSe&lt;br/&gt;
rvice(Unknown Source)&lt;br/&gt;
       ... 38 more&lt;br/&gt;
    Caused by: java.io.StreamCorruptedException: &lt;br/&gt;
java.lang.ClassCastException: &lt;br/&gt;
org.apache.derby.catalog.types.OldRoutineType incompatible with &lt;br/&gt;
org.apache.derby.iapi.types.DataTypeDescriptor&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.services.io.FormatIdInputStream.readObject&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.GenericResultDescription.readExternal(&lt;br/&gt;
Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.services.io.FormatIdInputStream.readObject&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.impl.sql.GenericStorablePreparedStatement.readE&lt;br/&gt;
xternal(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.services.io.FormatIdInputStream.readObject&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
       at &lt;br/&gt;
org.apache.derby.iapi.types.UserType.readExternal(Unknown &lt;br/&gt;
Source)&lt;br/&gt;
       ... 63 more&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12480760">DERBY-4913</key>
            <summary>10.3 to 10.5 upgrade fails with ava.io.StreamCorruptedException: java.lang.ClassCastException: org.apache.derby.catalog.types.OldRoutineType incompatible with org.apache.derby.iapi.types.DataTypeDescriptor</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 24 Nov 2010 00:32:14 +0000</created>
                <updated>Fri, 14 Dec 2012 23:45:05 +0000</updated>
                            <resolved>Mon, 10 Jan 2011 22:24:33 +0000</resolved>
                                    <version>10.5.3.0</version>
                                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12964959" author="kmarsden" created="Mon, 29 Nov 2010 21:51:52 +0000"  >&lt;p&gt;A few more notes.  Attempting the upgrade with an isolated URLClassLoader  did not pop the issue, see attached  ClassLoaderUpgrade.java for that attempt, nor did it reproduce for someone trying to use the same environment/software here in the US. (User seeing the problem is in Europe.)  The Derby version being used is 10.5.3.1 - (957402).  &lt;/p&gt;

&lt;p&gt;I have a copy of the the database after the problem occurs and it seems to be in a half upgraded state.  The database won&apos;t boot with 10.3 with the message&lt;br/&gt;
ERROR XSLAN: Database at C:&amp;lt;snip dbname&amp;gt;  has an incompatib&lt;br/&gt;
le format with the current version of the software.  The database was created by  or upgraded by version 10.5,&lt;/p&gt;

&lt;p&gt;If I connect with 10.5 does not have the new update statistics procedure in SYS.SYSALIASES.&lt;/p&gt;

&lt;p&gt;Happily if I reconnect with 10.5 with upgrade=true, the update statistics procedure is created.&lt;/p&gt;


&lt;p&gt;I don&apos;t actually see where the  cast might occur  in FormatIdInputStream.readObject , but do see this code and comment:&lt;/p&gt;

&lt;p&gt;    catch (ClassCastException cce)&lt;/p&gt;
        {
			// We catch this here as it is usuall a user error.
			// they have readExternal (or SQLData) that doesn&apos;t match
			// the writeExternal. and thus the object read is of
			// the incorrect type, e.g. Integer i = (Integer) in.readObject();
			throw new StreamCorruptedException(cce.toString());
		}

&lt;p&gt;Perhaps the cce.toString() does not give the full nested exception.&lt;/p&gt;</comment>
                            <comment id="12964964" author="kmarsden" created="Mon, 29 Nov 2010 22:04:09 +0000"  >&lt;p&gt;ClassLoaderUpgrade.java is a program  I used to see if this problem would reproduce with upgrade with a URLClassLoader.  It did not. dbname and DERBY_LIB_DIR need to be changed for user environment.&lt;/p&gt;</comment>
                            <comment id="12965017" author="kmarsden" created="Tue, 30 Nov 2010 00:10:14 +0000"  >&lt;p&gt;Patch to use initCause on the new StreamCorruptionException to include the ClassCastException stack trace. I will run suites.All, but don&apos;t think it actually exercises this code, so a visual check would be good.&lt;/p&gt;</comment>
                            <comment id="12965084" author="lilywei" created="Tue, 30 Nov 2010 03:46:30 +0000"  >&lt;p&gt;+1 for use initCause on the new StreamCorruptionException to include the ClassCastException stack trace after visual check and compile on my client space.&lt;/p&gt;</comment>
                            <comment id="12965226" author="rhillegas" created="Tue, 30 Nov 2010 14:09:32 +0000"  >&lt;p&gt;The serialization of data types seems to have changed in both 10.4 and 10.5. It would be interesting to know if you see this problem when upgrading the database from 10.3 to 10.4. If that works, try upgrading from 10.4 to 10.5.&lt;/p&gt;</comment>
                            <comment id="12970321" author="kmarsden" created="Fri, 10 Dec 2010 21:42:44 +0000"  >&lt;p&gt;I got the nested exception back  after the initcause patch which is &lt;/p&gt;

&lt;p&gt;	... 63 more&lt;br/&gt;
Caused by: java.lang.ClassCastException: org.apache.derby.catalog.types.OldRoutineType incompatible with org.apache.derby.iapi.types.DataTypeDescriptor&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericColumnDescriptor.readExternal(GenericColumnDescriptor.java:223)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:126)&lt;br/&gt;
	... 69 more&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Read this object from a stream of stored objects.&lt;br/&gt;
	 *&lt;/li&gt;
	&lt;li&gt;@param in read this.&lt;br/&gt;
	 *&lt;/li&gt;
	&lt;li&gt;@exception IOException					thrown on error&lt;/li&gt;
	&lt;li&gt;@exception ClassNotFoundException		thrown on error&lt;br/&gt;
	 */&lt;br/&gt;
	public void readExternal(ObjectInput in) &lt;br/&gt;
		throws IOException, ClassNotFoundException
	{
		FormatableHashtable fh = (FormatableHashtable)in.readObject();		
		name = (String)fh.get(&quot;name&quot;);
		tableName = (String)fh.get(&quot;tableName&quot;);
		schemaName = (String)fh.get(&quot;schemaName&quot;);
		columnPos = fh.getInt(&quot;columnPos&quot;);
		type = (DataTypeDescriptor)fh.get(&quot;type&quot;);
		isAutoincrement = fh.getBoolean(&quot;isAutoincrement&quot;);
		updatableByCursor = fh.getBoolean(&quot;updatableByCursor&quot;);
	}&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Mike said this to me, which looks like a good clue:&lt;/p&gt;


&lt;p&gt;This kind of code exists:   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Old releases (10.3 and before) wrote out the runtime&lt;/li&gt;
	&lt;li&gt;DataTypeDescriptor for routine parameter and return types.&lt;/li&gt;
	&lt;li&gt;10.4 onwards (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2775&quot; title=&quot;DataTypeDescriptor should be immutable so that multiple ValueNode referring to the same DTD do not have unexpected state changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2775&quot;&gt;DERBY-2775&lt;/a&gt;) always writes out the catalog&lt;/li&gt;
	&lt;li&gt;type TypeDescriptor. Here we see what object was read from&lt;/li&gt;
	&lt;li&gt;disk and if it was the old type, now mapped to OldRoutineType,&lt;/li&gt;
	&lt;li&gt;we extract the catalog type and use that.&lt;br/&gt;
    *&lt;/li&gt;
	&lt;li&gt;@param onDiskType The object read that represents the type.&lt;/li&gt;
	&lt;li&gt;@return A type descriptor.&lt;br/&gt;
    */&lt;br/&gt;
   private static TypeDescriptor getStoredType(Object onDiskType)
   {
       if (onDiskType instanceof OldRoutineType)
           return ((OldRoutineType) onDiskType).getCatalogType();
       return (TypeDescriptor) onDiskType;
   }
&lt;p&gt;key might be to figure out if this code should also be in GenericResultDescription.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Still working to get a local reproduction.&lt;/p&gt;</comment>
                            <comment id="12970351" author="kmarsden" created="Sat, 11 Dec 2010 00:17:42 +0000"  >&lt;p&gt;OldRoutineType was introduced with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2775&quot; title=&quot;DataTypeDescriptor should be immutable so that multiple ValueNode referring to the same DTD do not have unexpected state changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2775&quot;&gt;DERBY-2775&lt;/a&gt; so linking this issue to that one.&lt;/p&gt;</comment>
                            <comment id="12975552" author="kmarsden" created="Tue, 28 Dec 2010 16:16:29 +0000"  >&lt;p&gt;Attached is a reproduction for this issue.&lt;br/&gt;
Run the script 10_3work.sql with 10.3 and then the program TestGetFunctions with 10.5&lt;/p&gt;

&lt;p&gt;The test case can probably be narrowed down some.  But the problem has been so elusive that  I just wanted to get the repro posted before mucking with it more.&lt;/p&gt;</comment>
                            <comment id="12975563" author="kmarsden" created="Tue, 28 Dec 2010 17:11:10 +0000"  >&lt;p&gt;In the second part of the reproduction, only the connection is important in TestGetFunctions.   I can reproduce with just ij by &lt;br/&gt;
1) Run 10_3work.sql with 10.3&lt;br/&gt;
3) Connect with connect &apos;jdbc:derby:wombat;create=true;upgrade=true&apos;; with 10.5&lt;/p&gt;

&lt;p&gt;Oddly the create=true attribute is important as I tried several times without it and could not reproduce.  I am not sure why it would make a difference as the database is not being created.&lt;/p&gt;

</comment>
                            <comment id="12975576" author="kmarsden" created="Tue, 28 Dec 2010 18:34:46 +0000"  >&lt;p&gt;I noticed if I change the Upgrade tests to specify both upgrade=true and create=true on hard upgrade   I hit eight instances of this error, e.g.&lt;br/&gt;
Index: java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Pha&lt;br/&gt;
seChanger.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseC&lt;br/&gt;
hanger.java     (revision 1053401)&lt;br/&gt;
+++ java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseC&lt;br/&gt;
hanger.java     (working copy)&lt;br/&gt;
@@ -99,7 +99,7 @@&lt;/p&gt;

&lt;p&gt;         case UpgradeChange.PH_HARD_UPGRADE:&lt;br/&gt;
             JDBCDataSource.setBeanProperty(ds, &quot;connectionAttributes&quot;,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;upgrade=true&quot;);&lt;br/&gt;
+                    &quot;upgrade=true;create=true&quot;);&lt;br/&gt;
             break;&lt;br/&gt;
         default:&lt;br/&gt;
             break;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I don&apos;t really want to change the upgrade tests in this way permanantly, but will try to figure out how to have a sparate PH_HARD_UPGRADE_WITH_CREATE phase to test this issue.&lt;/p&gt;</comment>
                            <comment id="12975819" author="kmarsden" created="Wed, 29 Dec 2010 16:17:46 +0000"  >&lt;p&gt;Attached is a patch for this issue, derby-4913_diff.txt.   In GenericColumnDescriptor we needed to handle the case where an OldRoutineType was stored  rather than a DataTypeDescriptor.&lt;/p&gt;

&lt;p&gt;A few notes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I did not investigate why specifying create with upgrade triggers a different code path.&lt;/li&gt;
	&lt;li&gt;Rather than making OldRoutineType public I just assume it is a OldRoutineType if it is not already a DataTypeDescriptor, since these are the only two options.&lt;/li&gt;
	&lt;li&gt;For testing, I just added another iteration of the upgrade tests, just for 10.3.3.0 with both upgrade and create set.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12975866" author="kmarsden" created="Wed, 29 Dec 2010 18:47:37 +0000"  >&lt;p&gt;Here is an updated patch derby-4913_diff2.txt.  After talking to Lily on IRC, I made the folllowing changes:&lt;/p&gt;

&lt;p&gt;1) Improved the comment for getStoredDataTypeDescriptor&lt;br/&gt;
2) Changed the upgrade tests to just always run with create for 10.3.3.0 and removed the extra run. We should get enough coverage for 10.3 without the create by running 10.3.1.4. This way we avoid adding extra time to the tests.&lt;/p&gt;

&lt;p&gt;Thanks Lily for looking at this.  will commit this afternoon and start back porting tomorrow.&lt;/p&gt;


</comment>
                            <comment id="12976730" author="knutanders" created="Mon, 3 Jan 2011 13:30:37 +0000"  >&lt;p&gt;Would it be better to check the contents of the version object instead of checking the offset? I think we have a way to run the upgrade tests against a specific set of old versions, in which case 10.3.3.0 may be at a different offset.&lt;/p&gt;</comment>
                            <comment id="12977436" author="kmarsden" created="Tue, 4 Jan 2011 20:04:34 +0000"  >&lt;p&gt;Thank you Knut for looking at the patch. Here is the test fix to check the actual version and not the offset. I&apos;ll go ahead and check it in.&lt;/p&gt;</comment>
                            <comment id="12979807" author="kmarsden" created="Mon, 10 Jan 2011 22:24:33 +0000"  >&lt;p&gt;Merged fix and test from trunk back to 10.5 and fix only to 10.4.  Earlier  branches are not affected.&lt;/p&gt;
</comment>
                            <comment id="13001074" author="kmarsden" created="Tue, 1 Mar 2011 19:57:16 +0000"  >&lt;p&gt;Sounds good, but of course deregister=false will be the common usage to keep the driver loaded. true is the default so I am guessing would be rarely used.  Thank you Kim for picking up the documentation issue!&lt;/p&gt;</comment>
                            <comment id="13532797" author="kmarsden" created="Fri, 14 Dec 2012 23:45:05 +0000"  >&lt;p&gt;I think implementing this will entail invoking something similar to ExceptionUtil.dumpThreads and JVMInfo javaDump() in the test code.&lt;br/&gt;
Then in SpawnedProcess.complete before destroying the process we would have to somehow trigger the thread dump of the process that is to be destroyed. I am not quite sure how to force the dump to occur in the spawned process.&lt;/p&gt;

</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12371145">DERBY-2775</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12467048" name="10_3work.sql" size="568" author="kmarsden" created="Tue, 28 Dec 2010 16:16:29 +0000"/>
                            <attachment id="12464903" name="ClassLoaderUpgrade.java" size="1906" author="kmarsden" created="Mon, 29 Nov 2010 22:04:09 +0000"/>
                            <attachment id="12467049" name="TestGetFunctions.java" size="1183" author="kmarsden" created="Tue, 28 Dec 2010 16:16:29 +0000"/>
                            <attachment id="12467120" name="derby-4913_diff.txt" size="6643" author="kmarsden" created="Wed, 29 Dec 2010 16:17:46 +0000"/>
                            <attachment id="12467128" name="derby-4913_diff2.txt" size="6757" author="kmarsden" created="Wed, 29 Dec 2010 18:47:37 +0000"/>
                            <attachment id="12464922" name="derby-4913_initcause_diff.txt" size="732" author="kmarsden" created="Tue, 30 Nov 2010 00:10:14 +0000"/>
                            <attachment id="12467460" name="derby-4913_testfix_diff.txt" size="2647" author="kmarsden" created="Tue, 4 Jan 2011 20:04:34 +0000"/>
                            <attachment id="12467050" name="derby.log" size="33065" author="kmarsden" created="Tue, 28 Dec 2010 16:16:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Nov 2010 03:46:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24528</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    <customfieldvalue key="10427"><![CDATA[Workaround attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0gyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36566</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>