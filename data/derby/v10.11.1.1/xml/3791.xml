<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3791/DERBY-3791.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3791] Excessive memory usage when fetching small Clobs</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3791</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When investigating &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3312&quot; title=&quot;Local Network Server Performance degradation with 10.2 or later&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3312&quot;&gt;&lt;del&gt;DERBY-3312&lt;/del&gt;&lt;/a&gt; I found out that performance with the embedded driver has decreased a lot as well.&lt;br/&gt;
Analysis on trunk indicate excessive memory usage, causing high allocation and garbage collection costs.&lt;/p&gt;

&lt;p&gt;I believe there was another major performance problem in 10.3, but it appears fixed in trunk. I have not spent time identifying this problem.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12400722">DERBY-3791</key>
            <summary>Excessive memory usage when fetching small Clobs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Jul 2008 09:52:33 +0100</created>
                <updated>Wed, 1 Jul 2009 17:28:52 +0100</updated>
                            <resolved>Tue, 5 Aug 2008 18:22:43 +0100</resolved>
                                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12615582" author="kristwaa" created="Tue, 22 Jul 2008 12:24:24 +0100"  >&lt;p&gt;I ran some tests using SingleRecordSelectClient (found in the svn repository).&lt;br/&gt;
I used default settings and ran five times with one client and five times with 16 clients. The results are &quot;normalized&quot;, where the throughput obtained with 10.2.2.1 is defined as 100%.&lt;/p&gt;

&lt;p&gt;100% 100% 10.2.2.1&lt;br/&gt;
075% 216% 10.3.3.0&lt;br/&gt;
079% 231% 10.4.1.3&lt;br/&gt;
078% 231% trunk&lt;br/&gt;
146% 394% trunk-buffer-fix&lt;br/&gt;
167% 456% trunk-StringClob-fix&lt;/p&gt;

&lt;p&gt;As can be seen, we do have a regression when using one client. The results obtained with SingleRecordSelectClient are a bit different than those I saw with the LobPerf repro posted under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3312&quot; title=&quot;Local Network Server Performance degradation with 10.2 or later&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3312&quot;&gt;&lt;del&gt;DERBY-3312&lt;/del&gt;&lt;/a&gt;. This might be because the repro doesn&apos;t commit after each select, but SingleRecordSelectClient does. This can cause the list of open Clobs to get large and might further reduce the performance.&lt;/p&gt;

&lt;p&gt;I&apos;ve played with two fixes. One is really simple, where one buffer is removed and another one is adjusted according to the Clob size. Without the fix, we allocated at least 32KB character buffers for each Clob. Needless to say, this is quite a lot when the Clob itself has between one and five characters.&lt;/p&gt;

&lt;p&gt;The second fix adds another InternalClob implementation, which I have called StringClob. This is used for Clobs that are too small to be represented as streams. Currently these Clobs are represented as a byte array in memory. It turns out we start out with a byte array (from store), convert it to a string, convert it back to a byte array and then finally we convert whatever data the user requests to strings again.&lt;br/&gt;
Adding yet another internal Clob representation is not exactly good regarding testing and code volume, but because it is so simple I consider doing it for the extra performance.&lt;/p&gt;

&lt;p&gt;Before I continue working on the StringClob fix, I want to clean up the InternalClob interface slightly.&lt;/p&gt;</comment>
                            <comment id="12616819" author="kristwaa" created="Fri, 25 Jul 2008 10:22:28 +0100"  >&lt;p&gt;&apos;derby-3791-1a-buffer_fix.diff&apos; makes UTF8Reader allocate a smaller buffer if possible.&lt;br/&gt;
The following alternatives are considered (if possible):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;length of the byte stream (if available)&lt;/li&gt;
	&lt;li&gt;the maximum allowed length for the field (if set)&lt;/li&gt;
	&lt;li&gt;the maximum size of the buffer&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In addition, the buffering of the internal stream is removed because it is already buffered at lower levels.&lt;/p&gt;

&lt;p&gt;Note that the buffer can still be too large because we get information about the size in number of bytes. Since we don&apos;t know how many chars we get from the number of bytes, I decided to assume one char per byte. The patch will improve the situation for small streams anyway. For larger streams, the maximum buffer size will be used (8 KB).&lt;/p&gt;

&lt;p&gt;suites.All passed.&lt;br/&gt;
Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12616820" author="kristwaa" created="Fri, 25 Jul 2008 10:25:00 +0100"  >&lt;p&gt;Ticked patch available flag.&lt;br/&gt;
I hope to backport patch 1 to 10.4 and possibly 10.3.&lt;br/&gt;
Regarding StringClob, it will only go into trunk and I will create a subissue for it.&lt;/p&gt;</comment>
                            <comment id="12616856" author="knutanders" created="Fri, 25 Jul 2008 12:44:17 +0100"  >&lt;p&gt;The patch looks fine to me.&lt;/p&gt;

&lt;p&gt;Just to check that I&apos;ve understood correctly, removing the BufferedInputStream won&apos;t affect the performance negatively because the underlying stream gets its data from a byte array, so buffering the data in another byte array on top of that won&apos;t improve the speed at which data can be read. Is that about right?&lt;/p&gt;</comment>
                            <comment id="12616885" author="kristwaa" created="Fri, 25 Jul 2008 14:44:39 +0100"  >&lt;p&gt;That is about right.&lt;br/&gt;
Of course there is an exception, and I&apos;m not sure how to handle it yet.&lt;br/&gt;
When a Clob is created with Connection.createClob and grows big enough, or a Clob is fetched from the database and then modified, data is copied to a temporary file on disk.&lt;br/&gt;
If you then read from this Clob again, you get a stack that looks something like this (seen from Clob.getCharacterStream):&lt;br/&gt;
  ClobUpdatableReader&lt;br/&gt;
    UTF8Reader&lt;br/&gt;
      LOBInputStream&lt;br/&gt;
        LOBStreamControl&lt;br/&gt;
          LOBFile&lt;br/&gt;
            (Storage)RandomAccessFile&lt;/p&gt;

&lt;p&gt;As far as I can see, this stack will be unbuffered (in our Java code, don&apos;t know how the OS can help here) after patch 1a is applied.&lt;br/&gt;
The code is getting pretty complex down in LOBStreamControl and LOBFile, so I think patch 1a has to be reworked to account for the buffering in a sensible way higher up in the stack - probably in UTF8Reader.&lt;/p&gt;

&lt;p&gt;I didn&apos;t see any performance degradation in suites.All with the patch, but that probably just means we don&apos;t test this code path very well. I&apos;ll see if I can write a series of tests and maybe put them under java/testing/org/apache/derbyTesting/perf/basic/jdbc/.&lt;/p&gt;

&lt;p&gt;I&apos;m clearing the patch available flag, patch 1a will not be committed.&lt;/p&gt;</comment>
                            <comment id="12619043" author="kristwaa" created="Fri, 1 Aug 2008 16:29:28 +0100"  >&lt;p&gt;&apos;derby-3791-2a-buffer-adjustments.diff&apos; adjusts the buffer sizes of the internal char array and the BufferedInputStream.&lt;br/&gt;
If the Clob is known to be smaller than 8 KB (maximum allowed buffer size), the buffer is set to match the Clob size.&lt;br/&gt;
Note that the internal buffer is for characters, whereas the stream buffers bytes. The same size is used for both.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 681723.&lt;/p&gt;</comment>
                            <comment id="12619965" author="kristwaa" created="Tue, 5 Aug 2008 18:22:43 +0100"  >&lt;p&gt;Backported to 10.4 with revision 682813.&lt;br/&gt;
I tried merging to 10.3, but got a single conflict (didn&apos;t have time to investigate, might be a simple one to fix).&lt;/p&gt;</comment>
                            <comment id="12662961" author="kristwaa" created="Mon, 12 Jan 2009 14:17:19 +0000"  >&lt;p&gt;Closed the issue.&lt;br/&gt;
There might still be a small optimization possibility for small Clobs (not stored as a stream) by not creating a TemporaryClob for them, but I don&apos;t think it is worth the hassle at the moment.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12385938">DERBY-3312</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12386866" name="derby-3791-1a-buffer_fix.diff" size="3460" author="kristwaa" created="Fri, 25 Jul 2008 10:22:28 +0100"/>
                            <attachment id="12387351" name="derby-3791-2a-buffer-adjustments.diff" size="4481" author="kristwaa" created="Fri, 1 Aug 2008 16:29:28 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Jul 2008 11:44:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0sev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38421</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>