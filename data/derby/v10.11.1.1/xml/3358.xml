<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3358/DERBY-3358.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3358] After an incorrect(unsuccesfull) startMaster comand, further correct startMaster attempts also fail.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3358</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Slave and master servers started.&lt;/p&gt;

&lt;p&gt;startSlave:&lt;br/&gt;
CONNECT &apos;jdbc:derby://atum11:9999/test;startSlave=true;slaveHost=atum11;slavePort=8989&apos;;&lt;br/&gt;
ERROR XRE08: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE08, SQLERRMC: Replication slave mode started successfully for database &apos;test&apos;. Connection refused because the database is in replication slave mode. &lt;/p&gt;

&lt;p&gt;startMaster without specifying slavePort - will use default?&lt;br/&gt;
CONNECT &apos;jdbc:derby://atum11:8888/test;startMaster=true;slaveHost=atum11&apos;;&lt;br/&gt;
ERROR XRE04: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE04, SQLERRMC: nullXRE04&lt;br/&gt;
master derby.log:&lt;br/&gt;
2008-01-29 10:02:53.097 GMT:&lt;br/&gt;
 Booting Derby version The Apache Software Foundation - Apache Derby - 10.4.0.0 alpha - (615841M): instance c013800d-0117-c4fb-9156-000003bf6570&lt;br/&gt;
on database directory /export/home/tmp/os136789/Replication_common_Trunk/master/test  &lt;/p&gt;

&lt;p&gt;Database Class Loader started - derby.database.classpath=&apos;&apos;&lt;br/&gt;
2008-01-29 10:02:53.256 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_2,5,main&amp;#93;&lt;/span&gt; (XID = 419), (SESSIONID = 0), (DATABASE = test), (DRDAID = &lt;/p&gt;
{1}), Cleanup action starting&lt;br/&gt;
java.sql.SQLException: Could not establish a connection to the peer of the replicated database &apos;null&apos;.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
Cleanup action completed&lt;br/&gt;
2008-01-29 10:02:53.260 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_2,5,main&amp;#93;&lt;/span&gt; (DATABASE = test), (DRDAID = {1}
&lt;p&gt;), Could not establish a connection to the peer of the replicated database &apos;null&apos;.&lt;/p&gt;

&lt;p&gt;startMaster specyfying slavePort:&lt;br/&gt;
CONNECT &apos;jdbc:derby://atum11:8888/test;startMaster=true;slaveHost=atum11;slavePort=8989&apos;;&lt;br/&gt;
ERROR XRE04: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE04, SQLERRMC: nullXRE04&lt;br/&gt;
master derby.log:&lt;br/&gt;
2008-01-29 10:03:38.201 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_2,5,main&amp;#93;&lt;/span&gt; (XID = 420), (SESSIONID = 1), (DATABASE = test), (DRDAID = &lt;/p&gt;
{2}), Cleanup action starting&lt;br/&gt;
java.sql.SQLException: Could not establish a connection to the peer of the replicated database &apos;null&apos;.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
Cleanup action completed&lt;br/&gt;
2008-01-29 10:03:38.205 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_2,5,main&amp;#93;&lt;/span&gt; (DATABASE = test), (DRDAID = {2}
&lt;p&gt;), Could not establish a connection to the peer of the replicated database &apos;null&apos;.&lt;/p&gt;




&lt;p&gt;Additional observation/comment:&lt;br/&gt;
----------------------------------------&lt;br/&gt;
It would be helpful for debugging if slaveHost and slavePort were written in error messages and into derby.log.&lt;/p&gt;

</description>
                <environment>Trunk (615841) + patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3205&quot; title=&quot;Replication: Add connection url command options for starting, stopping slave and for failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3205&quot;&gt;&lt;strike&gt;DERBY-3205&lt;/strike&gt;&lt;/a&gt;/stopSlave_v1b</environment>
        <key id="12387364">DERBY-3358</key>
            <summary>After an incorrect(unsuccesfull) startMaster comand, further correct startMaster attempts also fail.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jan 2008 10:19:21 +0000</created>
                <updated>Thu, 2 May 2013 03:29:13 +0100</updated>
                            <resolved>Mon, 7 Apr 2008 09:51:43 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12563456" author="jorgenlo" created="Tue, 29 Jan 2008 10:34:44 +0000"  >&lt;p&gt;I think this is caused by not unplugging the Socket in MasterController when the master replication functionality is turned off.&lt;/p&gt;</comment>
                            <comment id="12563458" author="olesolberg" created="Tue, 29 Jan 2008 10:36:27 +0000"  >&lt;p&gt;If in this state we do a stopMaster command a NPE is thrown:&lt;/p&gt;

&lt;p&gt;CONNECT &apos;jdbc:derby://atum11:8888/test;stopMaster=true&apos;;&lt;br/&gt;
ERROR XJ001: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;/p&gt;

&lt;p&gt;master derby.log:&lt;br/&gt;
2008-01-29 10:24:07.228 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_4,5,main&amp;#93;&lt;/span&gt; (XID = 423), (SESSIONID = 4), (DATABASE = test), (DRDAID = &lt;/p&gt;
{6}), Cleanup action starting&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.MasterController.stopMaster(MasterController.java:213)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.stopReplicationMaster(RawStore.java:526)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMAccessManager.stopReplicationMaster(RAMAccessManager.java:938)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.stopReplicationMaster(BasicDatabase.java:388)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleStopReplicationMaster(EmbedConnection.java:683)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:344)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(EmbedConnection40.java:54)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:211)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)&lt;br/&gt;
	at org.apache.derby.impl.drda.Database.makeConnection(Database.java:234)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.getConnFromDatabaseName(DRDAConnThread.java:1346)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.verifyUserIdPassword(DRDAConnThread.java:1296)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseSECCHK(DRDAConnThread.java:3033)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnection(DRDAConnThread.java:1090)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:932)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:277)&lt;br/&gt;
Cleanup action completed&lt;br/&gt;
2008-01-29 10:24:07.228 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_4,5,main&amp;#93;&lt;/span&gt; Cleanup action starting&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.MasterController.stopMaster(MasterController.java:213)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.stopReplicationMaster(RawStore.java:526)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMAccessManager.stopReplicationMaster(RAMAccessManager.java:938)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.stopReplicationMaster(BasicDatabase.java:388)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleStopReplicationMaster(EmbedConnection.java:683)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:344)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(EmbedConnection40.java:54)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:211)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)&lt;br/&gt;
	at org.apache.derby.impl.drda.Database.makeConnection(Database.java:234)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.getConnFromDatabaseName(DRDAConnThread.java:1346)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.verifyUserIdPassword(DRDAConnThread.java:1296)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseSECCHK(DRDAConnThread.java:3033)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnection(DRDAConnThread.java:1090)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:932)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:277)&lt;br/&gt;
Cleanup action completed&lt;br/&gt;
2008-01-29 10:24:07.231 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_4,5,main&amp;#93;&lt;/span&gt; (DATABASE = test), (DRDAID = {6}
&lt;p&gt;), Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;</comment>
                            <comment id="12566992" author="narayanan" created="Fri, 8 Feb 2008 11:33:55 +0000"  >&lt;p&gt;The boot method of the service module is called only once upon boot time. On all other times&lt;br/&gt;
this method will not be called. We pass the host name and the port number in a properties&lt;br/&gt;
object where the attributes replicationMode, slavehost, slaveport, dbname are initialized.&lt;br/&gt;
(I confirmed this by printing the slavehost and the slaveport in the boot method and noticed that&lt;br/&gt;
this gets printed only once during the initial initialization).&lt;/p&gt;

&lt;p&gt;The first time startMaster happens with the wrong port number these attributes are intialized&lt;br/&gt;
and do not get initialized on subsequent calls to startMaster since the boot method is never&lt;br/&gt;
called. Hence we keep trying with the first initialized values resulting in the connection&lt;br/&gt;
problems.&lt;/p&gt;

&lt;p&gt;A simple solution would be to move initialization of the attributes to the call to startMaster.&lt;/p&gt;

&lt;p&gt;I think a similar thing would need to be done for the other replication commands as well.&lt;/p&gt;

&lt;p&gt;I am not an expert in the Module and Monitor part of the codebase. I am hoping that people who&lt;br/&gt;
are familiar with this area could pls tell me if my analysis is correct and if the fix proposed&lt;br/&gt;
would be the right one to go with.&lt;/p&gt;</comment>
                            <comment id="12567023" author="jorgenlo" created="Fri, 8 Feb 2008 12:51:36 +0000"  >&lt;p&gt;I don&apos;t think the problem is best solved by moving code from MasterController#boot to MC#startMaster, but rather to unboot the MasterFactory if startMaster fails by throwing an exception. &lt;/p&gt;

&lt;p&gt;While experimenting with this I found another closely related bug though: after a successful startMaster, a new startMaster connection attempt will hang. Instead of a hang, it should throw an exception.&lt;/p&gt;</comment>
                            <comment id="12567026" author="jorgenlo" created="Fri, 8 Feb 2008 12:57:11 +0000"  >&lt;p&gt;Hang in master server if startMaster command is given twice already reported by  Ole Solberg: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3374&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-3374&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12568058" author="narayanan" created="Tue, 12 Feb 2008 11:29:22 +0000"  >&lt;p&gt;&amp;gt;I don&apos;t think the problem is best solved by moving code from MasterController#boot &lt;br/&gt;
&amp;gt;to MC#startMaster, but rather to unboot the MasterFactory if startMaster fails by &lt;br/&gt;
&amp;gt;throwing an exception.&lt;/p&gt;

&lt;p&gt;A module can be stopped. I guess that is what you meant by unbooted here. The&lt;br/&gt;
javadoc for the stop method says this&lt;/p&gt;

&lt;p&gt;&quot;The module may be found via a findModule() method until some time after&lt;br/&gt;
 this method returns. Therefore the factory must be prepared to reject requests&lt;br/&gt;
 to it once it has been stopped. In addition other modules may cache a reference&lt;br/&gt;
 to the module and make requests of it after it has been stopped, these requests&lt;br/&gt;
 should be rejected as well.&quot;&lt;/p&gt;

&lt;p&gt;Basically you would not be clearing the startup parameters or making the findServiceModule&lt;br/&gt;
return a null or invalid value by stopping(unbooting). It is upto to the logic within the&lt;br/&gt;
MasterController to handle this.&lt;/p&gt;

&lt;p&gt;I still do not think hostName and portNumber ought to be startup parameters for the MasterController&lt;br/&gt;
module.&lt;/p&gt;

&lt;p&gt;I think they are parameters for the master start (replication start) functionality and ought to form&lt;br/&gt;
part of the paramters of the startMasterController method.&lt;/p&gt;

&lt;p&gt;Suppose the other functionality provided stop, failover required specific paramters to be passed&lt;br/&gt;
we would need to pass them while calling these methods, what would happen if one of these parameters&lt;br/&gt;
had been wrong? I think the same case applies to startMaster as well. &lt;/p&gt;</comment>
                            <comment id="12568063" author="jorgenlo" created="Tue, 12 Feb 2008 11:54:02 +0000"  >&lt;p&gt;No, what I mean with &quot;unboot&quot; is to remove the module from the monitor. The monitor should in turn be calling MasterFactory#stop.&lt;/p&gt;

&lt;p&gt;Unless we remove the module from the monitor, there will always be a reference to this object even when replication is not running. Hence, gc cannot remove the object from memory. I think that qualifies as a memory leak.&lt;/p&gt;

&lt;p&gt;I have no idea how to unboot a module. I have the same problem with removing the SlaveFactory after a successful failover. I experimented a little bit with Monitor.getMonitor().shutdown(slaveFac) in SlaveDatabase, but it seems to shutdown the entire database. This is, of course, unacceptable.&lt;/p&gt;

&lt;p&gt;I see this text in the Monitor class javadoc:&lt;/p&gt;

&lt;p&gt;&quot;Optionally -  an individual module within a service may be shutdown, this will in turn shutdown any modules it started if those module are not in use by other modules within the service. This would be handled by the monitor, not the module itself. &quot;&lt;/p&gt;

&lt;p&gt;However, I can&apos;t see that this functionality has been implemented.&lt;/p&gt;</comment>
                            <comment id="12568107" author="narayanan" created="Tue, 12 Feb 2008 13:30:37 +0000"  >&lt;p&gt;&amp;gt;However, I can&apos;t see that this functionality has been implemented.&lt;/p&gt;

&lt;p&gt;i did not either and that is why I thought that you had thought about stop.&lt;/p&gt;</comment>
                            <comment id="12571983" author="narayanan" created="Sun, 24 Feb 2008 23:24:20 +0000"  >&lt;p&gt;There seems to be no satisfactory solution to unbooting a module.&lt;/p&gt;

&lt;p&gt;Hence I am going ahead with the workaround suggested by me earlier.&lt;/p&gt;

&lt;p&gt;Please find below the workaround implementation explained in more detail.&lt;/p&gt;

&lt;p&gt;Implementation description&lt;br/&gt;
---------------------------&lt;/p&gt;

&lt;p&gt;The properties object that is passed to the boot method can no longer&lt;br/&gt;
be used to initialize the MasterController startup parameters. This needs&lt;br/&gt;
to be moved to the startMaster method.&lt;/p&gt;

&lt;p&gt;A successful startup should be recorded by a boolean variable (active).&lt;/p&gt;

&lt;p&gt;Each of the methods (other than startMaster) in the MasterController that form the interface to this module&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;stopMaster&lt;/li&gt;
	&lt;li&gt;startFailover&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;should check for the boolean variable active. If it is false they should throw an exception stating that&lt;br/&gt;
the master module is not active.&lt;/p&gt;

&lt;p&gt;active should be set to false in &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;stopMaster and&lt;/li&gt;
	&lt;li&gt;when startMaster fails.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A few observations&lt;br/&gt;
------------------&lt;/p&gt;

&lt;p&gt;stopMaster is called from printStackAndStopMaster. printStackAndStopMaster is specifically a method&lt;br/&gt;
that logs log shipper exceptions. So doing a logShipper.flushBuffer() in stopMaster does not seem logical.&lt;br/&gt;
I will wait till later today to raise a separate JIRA for this. I do not want to fix this issue as part of this JIRA.&lt;/p&gt;

&lt;p&gt;A possible fix for the above would be to separate the flushBuffer and the stopMaster operations.&lt;/p&gt;</comment>
                            <comment id="12572038" author="narayanan" created="Mon, 25 Feb 2008 09:53:50 +0000"  >&lt;p&gt;Please find below a file by file explanation of the changes for this patch&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/master/MasterController.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Added a variable boolean that indicates whether the master controller is currently running or has&lt;br/&gt;
  been stopped. I thought I could manage with the earlier boolean variable stopMasterController but&lt;br/&gt;
  decided against it because it seemed more tied with the stopMaster operation.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;moved start up parameter initialization from boot to startMaster method. This makes the canSupport&lt;br/&gt;
  method also a place holder that returns true always.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;changed the startMaster, stopMaster and the startFailover methods to take into account the boolean&lt;br/&gt;
  active.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;replaced the earlier uses of stopMasterController with active.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/store/raw/RawStore.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The replication properties that are part of the bootServiceModule call no longer contain the&lt;br/&gt;
  startup parameters. These have instead been moved to the startMaster method.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The replicationProps are empty and not null because a null passed to a bootServiceModule call&lt;br/&gt;
  results in a NullPointerException.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/iapi/services/replication/master/MasterFactory.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Changed the startMaster declaration to now accept the startup parameters as the method arguments.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M      java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Added two new messages for the cases when the master has already been booted and when the given&lt;br/&gt;
  replication mode is not supported.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;I tried running a repro where I connected multiple times with the wrong port number to the slave and finally attempted&lt;br/&gt;
a right connection. It works OK for me.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8002&apos;;&lt;br/&gt;
ERROR XJ001: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8003&apos;;&lt;br/&gt;
ERROR XJ001: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8004&apos;;&lt;br/&gt;
ERROR XJ001: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
ij&amp;gt;  connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; select * from employee;&lt;br/&gt;
EMPNO      |NAME                          &lt;br/&gt;
------------------------------------------&lt;br/&gt;
1          |narayanan                     &lt;br/&gt;
2          |satya                         &lt;br/&gt;
3          |sanjay                        &lt;br/&gt;
4          |Anurag                        &lt;/p&gt;

&lt;p&gt;4 rows selected&lt;br/&gt;
ij(CONNECTION1)&amp;gt; drop table employee;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; create table test(i int primary key, name varchar(40));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into test values(1,&apos;N&apos;);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into test values(2,&apos;A&apos;);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into test values(3,&apos;R&apos;);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; select * from test;&lt;br/&gt;
I          |NAME                                    &lt;br/&gt;
----------------------------------------------------&lt;br/&gt;
1          |N                                       &lt;br/&gt;
2          |A                                       &lt;br/&gt;
3          |R                                       &lt;/p&gt;

&lt;p&gt;3 rows selected&lt;br/&gt;
ij(CONNECTION1)&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;failover=true&apos;;&lt;br/&gt;
ERROR XRE20: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE20, SQLERRMC: Failover performed successfully for database &apos;replicationdb&apos;, the database has been shutdown.&lt;/p&gt;</comment>
                            <comment id="12572441" author="oysteing" created="Tue, 26 Feb 2008 11:57:25 +0000"  >&lt;p&gt;Thanks, for your patch Narayanan.  I tried testing the patch, but the&lt;br/&gt;
bug reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3454&quot; title=&quot;&amp;#39;java.lang.NullPointerException&amp;#39; is thrown when starting a master db before a slave one&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3454&quot;&gt;&lt;del&gt;DERBY-3454&lt;/del&gt;&lt;/a&gt; seems to get in the way.  Her are my&lt;br/&gt;
comments: &lt;/p&gt;

&lt;p&gt;1. MasterController:&lt;/p&gt;

&lt;p&gt;   a. boot():  An explanation of why boot is empty would be good.&lt;/p&gt;

&lt;p&gt;   b. canSupport(): I do not see that it is necessary to change this&lt;br/&gt;
      implementation.  This implementation implemenation still only&lt;br/&gt;
      supports asynchronous replication.&lt;/p&gt;

&lt;p&gt;   c. I feel the comments regarding the testing of active in&lt;br/&gt;
      startMaster, stopMaster, and startFailover is a bit confusing.&lt;br/&gt;
      It seems to be more a documentation of the change that is made&lt;br/&gt;
      than of the resulting code, and I fear that it may confuse&lt;br/&gt;
      people who do not know the history of the code.  Also, I am not&lt;br/&gt;
      sure your use of &apos;idempotent&apos; makes sense.&lt;/p&gt;

&lt;p&gt;   d. startMaster(): Why not merge the to tests that give&lt;br/&gt;
      REPLICATION_MODE_NOT_SUPPORTED in the same if statement?&lt;/p&gt;

&lt;p&gt;2. RawStore:&lt;/p&gt;

&lt;p&gt;   a. It seems unecessary that RawStore#startReplicationMaster convert&lt;br/&gt;
      port number to String, and that MasterController#startMaster&lt;br/&gt;
      needs to convert it back to int.&lt;/p&gt;

&lt;p&gt;3. Messages&lt;/p&gt;

&lt;p&gt;   a. To be similar to the existing messages, I suggest leaving &apos;the&apos;&lt;br/&gt;
      in &apos;... has already been booted for the database ...&apos;&lt;/p&gt;
</comment>
                            <comment id="12572796" author="narayanan" created="Wed, 27 Feb 2008 05:47:33 +0000"  >&lt;p&gt;Oystein says&lt;/p&gt;

&lt;p&gt;&amp;gt; Also, I am not sure your use of &apos;idempotent&apos; makes sense.&lt;/p&gt;

&lt;p&gt;Comments in the patch&lt;/p&gt;

&lt;p&gt;&amp;gt; This makes the stopMaster&lt;br/&gt;
&amp;gt; //operation idempotent, will keep returning successfully when&lt;br/&gt;
&amp;gt; //repeatedly called on an already started replication instance.&lt;/p&gt;

&lt;p&gt;A link I found on the web&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nostalgia.wikipedia.org/wiki/Idempotent&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://nostalgia.wikipedia.org/wiki/Idempotent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The link says&lt;/p&gt;

&lt;p&gt;&amp;gt;In computing, the term idempotent refers to something &lt;br/&gt;
&amp;gt;which has the same  effect if used multiple times as it does &lt;br/&gt;
&amp;gt;if used only once.&lt;/p&gt;

&lt;p&gt;I find the usage of idempotent appropriate in the context of the stopMaster&lt;br/&gt;
method. I do not think it is mis-placed. But I have no problems removing the&lt;br/&gt;
word and replacing it with a simpler sentence.&lt;/p&gt;

</comment>
                            <comment id="12572798" author="narayanan" created="Wed, 27 Feb 2008 06:03:52 +0000"  >&lt;p&gt;&amp;gt;I feel the comments regarding the testing of active in&lt;br/&gt;
&amp;gt;startMaster, stopMaster, and startFailover is a bit confusing.&lt;br/&gt;
&amp;gt;It seems to be more a documentation of the change that is made&lt;br/&gt;
&amp;gt;than of the resulting code, and I fear that it may confuse&lt;br/&gt;
&amp;gt;people who do not know the history of the code.&lt;/p&gt;

&lt;p&gt;General view (my thinking when I wrote the comments)&lt;/p&gt;

&lt;p&gt;I wrote the comments from the point of view of a person who&lt;br/&gt;
would try to understand this code while single stepping using&lt;br/&gt;
an IDE.&lt;/p&gt;

&lt;p&gt;I have also tried to explain why I tried to write the methods the&lt;br/&gt;
way I have in the individual methods.&lt;/p&gt;

&lt;p&gt;I would really appreciate it if you could give an example for just&lt;br/&gt;
one method, re-wording the comments in a way you think is right&lt;br/&gt;
so that I can follow the same on the other methods. &lt;/p&gt;

&lt;p&gt;comments in startMaster&lt;/p&gt;

&lt;p&gt;&amp;gt;//Check if the master has already been started. It is wrong to attempt &lt;br/&gt;
&amp;gt;//startMaster on a already running master since the start parameters&lt;br/&gt;
&amp;gt;//can vary with each start and the question of idempotence is not&lt;br/&gt;
&amp;gt;//applicable here (unlike stopMaster).&lt;/p&gt;

&lt;p&gt;I was trying to say that taking a connection with the startMaster&lt;br/&gt;
attribute repeatedly should throw an exception. Can you please give&lt;br/&gt;
an example as to what would be an appropriating re-wording here?&lt;br/&gt;
Was the problem with the usage of the word idempotent? Was the mention&lt;br/&gt;
of the start parameters a implementation specific thing that should&lt;br/&gt;
be avoided?&lt;/p&gt;

&lt;p&gt;comments in stopMaster&lt;/p&gt;

&lt;p&gt;&amp;gt;//This can happen only if the replication master module was&lt;br/&gt;
&amp;gt;//loaded previously and was later stopped. If replication was&lt;br/&gt;
&amp;gt;//never loaded an exception would be thrown because the master&lt;br/&gt;
&amp;gt;//factory module will not be found. This makes the stopMaster&lt;br/&gt;
&amp;gt;//operation idempotent, will keep returning successfully when&lt;br/&gt;
&amp;gt;//repeatedly called on an already started replication instance.&lt;/p&gt;

&lt;p&gt;This comment explains what would happen if a bootServiceModule&lt;br/&gt;
was called and was later stopped by calling a stopMaster or the&lt;br/&gt;
boot itself fails. active becomes false.&lt;/p&gt;

&lt;p&gt;I can remove this comment if you think it is inappropriate but&lt;br/&gt;
I think it serves to explain why I made the method return harmlessly&lt;br/&gt;
when it is called repeatedly&lt;/p&gt;

&lt;p&gt;startFailover&lt;/p&gt;

&lt;p&gt;&amp;gt;//It is not correct to stop the master and then attempt a failover.&lt;br/&gt;
&amp;gt;//The control would come here because the master module is already&lt;br/&gt;
&amp;gt;//loaded and a findService for the master module will not fail. But&lt;br/&gt;
&amp;gt;//since this module has been stopped failover does not suceed.&lt;/p&gt;

&lt;p&gt;I guess you are suggesting that usage of words like findService which is&lt;br/&gt;
code specific is not right?&lt;/p&gt;

&lt;p&gt;But I thought anyone who would follow the code while sigle-stepping using&lt;br/&gt;
an IDE would find this useful because it would explain when the control&lt;br/&gt;
would come here&lt;/p&gt;</comment>
                            <comment id="12572800" author="narayanan" created="Wed, 27 Feb 2008 06:10:07 +0000"  >&lt;p&gt;&amp;gt;boot():  An explanation of why boot is empty would be good.&lt;/p&gt;

&lt;p&gt;&amp;gt;It seems to be more a documentation of the change that is made&lt;br/&gt;
&amp;gt;than of the resulting code, and I fear that it may confuse&lt;br/&gt;
&amp;gt;people who do not know the history of the code&lt;/p&gt;

&lt;p&gt;In order to explain why the boot method is empty I would need to&lt;br/&gt;
explain why the change was made (i.e.) mention that the boot&lt;br/&gt;
method is loaded only once and because of that the boot time&lt;br/&gt;
parameters once wrong would result in repeated startMaster attempts&lt;br/&gt;
failing.&lt;/p&gt;

&lt;p&gt;I would in doing the above be contradicting the comment change&lt;br/&gt;
requested in the latter part of the comment I have pasted.&lt;/p&gt;

&lt;p&gt;Or again I am making a mistake of not wording the comments correctly.&lt;br/&gt;
Can you please help me with your view of what you think would be a &lt;br/&gt;
right wording of the comments here?&lt;/p&gt;</comment>
                            <comment id="12573137" author="narayanan" created="Thu, 28 Feb 2008 03:03:24 +0000"  >&lt;p&gt;In the attached patch I have addressed all the comments except&lt;br/&gt;
the following&lt;/p&gt;

&lt;p&gt;&amp;gt;d. startMaster(): Why not merge the to tests that give&lt;br/&gt;
&amp;gt;REPLICATION_MODE_NOT_SUPPORTED in the same if statement? &lt;/p&gt;

&lt;p&gt;I have moved this test to canSupport as suggested. So I did not&lt;br/&gt;
need to do this change.&lt;/p&gt;

&lt;p&gt;I added the comments to the boot method, but am not sure&lt;br/&gt;
if it matches your expectation. If it does not pls do mention and&lt;br/&gt;
I shall submit a new patch.&lt;/p&gt;

&lt;p&gt;I have not changed the comments to active in startMaster, stopMaster and&lt;br/&gt;
startFailover. Here again I am not sure about the nature of the modification&lt;br/&gt;
you expected me to do. I request for more help from you here on the&lt;br/&gt;
style of the comments that would be expected. I shall submit a new&lt;br/&gt;
patch with the suggested modification.&lt;/p&gt;</comment>
                            <comment id="12573145" author="narayanan" created="Thu, 28 Feb 2008 04:21:29 +0000"  >&lt;p&gt;&amp;gt;Thanks, for your patch Narayanan. I tried testing the patch, but the&lt;br/&gt;
&amp;gt;bug reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3454&quot; title=&quot;&amp;#39;java.lang.NullPointerException&amp;#39; is thrown when starting a master db before a slave one&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3454&quot;&gt;&lt;del&gt;DERBY-3454&lt;/del&gt;&lt;/a&gt; seems to get in the way.&lt;/p&gt;

&lt;p&gt;You are correct. Every wrong connection attempt keeps throwing a&lt;br/&gt;
NPE. But when the correct port is mentioned the connection succeeds.&lt;br/&gt;
If the earlier bug, reported in this patch, had existed it would not have&lt;br/&gt;
succeeded, but would have continued with the NPE&apos;s.&lt;/p&gt;</comment>
                            <comment id="12574489" author="oysteing" created="Mon, 3 Mar 2008 13:15:30 +0000"  >&lt;p&gt;Naraynan, sorry for the late response to your questions to the&lt;br/&gt;
comments I made on your code comments.  I will try to clarify:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;startMaster: You say: &quot;It is wrong to attempt startMaster on a&lt;br/&gt;
   already running master since the start parameters can vary with&lt;br/&gt;
   each start and the question of idempotence is not applicable here&lt;br/&gt;
   (unlike stopMaster).&quot;  In my opinion, attempting startMaster on an&lt;br/&gt;
   already running master, should give an exception, not because&lt;br/&gt;
   parameters may vary, but because you by definition cannot start an&lt;br/&gt;
   already started master.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stopMaster: It seems I have misunderstood what the code actually&lt;br/&gt;
   does here.  I thought that stopMaster when replication was not on,&lt;br/&gt;
   would be flagged as an error, and in my opinion that would be the&lt;br/&gt;
   right thing to do.  Anyhow, your implementation does not make&lt;br/&gt;
   stopMaster fully idempotent since you will write another&lt;br/&gt;
   REPLICATION_MASTER_STOPPED message to derby.log.  I do not think&lt;br/&gt;
   that is a good idea since it will make it more difficult to tell&lt;br/&gt;
   when the replication was actually stopped.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;startFailover:  Comment is ok, but should be placed inside if&lt;br/&gt;
   statement.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12574492" author="oysteing" created="Mon, 3 Mar 2008 13:26:14 +0000"  >&lt;p&gt;In addition to my previous post, I have the following comments to the&lt;br/&gt;
v2 patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It seems you have not addressed by 3a comment.  I guess that may be&lt;br/&gt;
   my fault since I wrote &quot;leaving &apos;the&apos;&quot; when I meant &quot;leaving out&lt;br/&gt;
   &apos;the&apos;&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MasterFactory: It seems the comment /* Property values */ have been&lt;br/&gt;
   moved.  I guess that was not intentional.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12575552" author="narayanan" created="Thu, 6 Mar 2008 04:00:44 +0000"  >&lt;p&gt;Thank you for the comments Oystein&lt;/p&gt;

&lt;p&gt;&amp;gt;- startMaster: &lt;span class=&quot;error&quot;&gt;&amp;#91;comment snipped&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Changed the comment to&lt;/p&gt;

&lt;p&gt;//It is wrong to attempt startMaster on a already&lt;br/&gt;
//started master.&lt;/p&gt;

&lt;p&gt;and moved it inside if.&lt;/p&gt;

&lt;p&gt;&amp;gt;- stopMaster: &lt;span class=&quot;error&quot;&gt;&amp;#91;comment snipped&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If the master is not active I now throw an exception&lt;/p&gt;

&lt;p&gt;throw StandardException.newException&lt;br/&gt;
                    (SQLState.REPLICATION_NOT_IN_MASTER_MODE);&lt;/p&gt;

&lt;p&gt;&amp;gt;- startFailover: Comment is ok, but should be placed inside if&lt;br/&gt;
&amp;gt;  statement. &lt;/p&gt;

&lt;p&gt;fixed!&lt;/p&gt;

&lt;p&gt;&amp;gt;- It seems you have not addressed by 3a comment. I guess that may be&lt;br/&gt;
&amp;gt;  my fault since I wrote &quot;leaving &apos;the&apos;&quot; when I meant &quot;leaving out&lt;br/&gt;
&amp;gt;  &apos;the&apos;&quot;. &lt;/p&gt;

&lt;p&gt;XRE11, XRE06, XRE04 also seem to be using the article &apos;the&apos;.&lt;/p&gt;

&lt;p&gt;Just to learn more about the use of &apos;the&apos; I nosed into the&lt;br/&gt;
Wren and Martin in the rack nearby and found out that &apos;the&apos;&lt;br/&gt;
is a definite article that is used to point out some particular&lt;br/&gt;
person or thing.&lt;/p&gt;

&lt;p&gt;So in our case we are pointing out a particular specific database!&lt;/p&gt;

&lt;p&gt;But I agree that the general consensus is leaving out the&lt;br/&gt;
article and also that exceptions messages rarely follow grammatical&lt;br/&gt;
rules ( :-D ) but&lt;/p&gt;

&lt;p&gt;place more emphasis on clarity in summarizing exception cause and in&lt;br/&gt;
conformance with messages in the same family!&lt;/p&gt;

&lt;p&gt;fixed it!&lt;/p&gt;

&lt;p&gt;&amp;gt;- MasterFactory: It seems the comment /* Property values */ have been&lt;br/&gt;
&amp;gt;  moved. I guess that was not intentional. &lt;/p&gt;

&lt;p&gt;Sorry, mea culpa, fixed it!&lt;/p&gt;</comment>
                            <comment id="12575572" author="narayanan" created="Thu, 6 Mar 2008 06:20:00 +0000"  >&lt;p&gt;oops, I hurried in submitting v3. I found a few problems which I shall duly enumerate&lt;br/&gt;
when I submit a v4 with the problems I found corrected. I also missed running the repro&lt;br/&gt;
on this.&lt;/p&gt;

&lt;p&gt;I request v3 to be please ignored&lt;/p&gt;</comment>
                            <comment id="12575579" author="narayanan" created="Thu, 6 Mar 2008 06:31:58 +0000"  >&lt;p&gt;In this comment there are two things being suggested for the implementation&lt;/p&gt;

&lt;p&gt;&amp;gt;- stopMaster: It seems I have misunderstood what the code actually&lt;br/&gt;
&amp;gt;   does here. I thought that stopMaster when replication was not on,&lt;br/&gt;
&amp;gt;   would be flagged as an error, and in my opinion that would be the&lt;br/&gt;
&amp;gt;   right thing to do. &lt;/p&gt;

&lt;p&gt;Throw an exception if replication has been stopped&lt;/p&gt;

&lt;p&gt;&amp;gt;   Anyhow, your implementation does not make&lt;br/&gt;
&amp;gt;   stopMaster fully idempotent since you will write another&lt;br/&gt;
&amp;gt;   REPLICATION_MASTER_STOPPED message to derby.log. I do not think&lt;br/&gt;
&amp;gt;   that is a good idea since it will make it more difficult to tell&lt;br/&gt;
&amp;gt;   when the replication was actually stopped. &lt;/p&gt;

&lt;p&gt;This part is confusing,&lt;/p&gt;

&lt;p&gt;I agree that it is not a good idea to write a replication stopped message&lt;br/&gt;
each time stopMaster is called&lt;/p&gt;

&lt;p&gt;But is throwing an exception if replication is stopped suggested? &lt;/p&gt;

&lt;p&gt;Or should the stop master method exit without doing anything?&lt;/p&gt;

&lt;p&gt;I would personally go for throwing the exception, because upon retrospection it&lt;br/&gt;
seems the right thing to do to tell the user that replication has been stopped&lt;br/&gt;
rather than just be quiet.&lt;/p&gt;

&lt;p&gt;Wondering what pushed me towards idempotence in the first place :-/ .&lt;/p&gt;

&lt;p&gt;I will modify v3 to throw an exception. Pls do mention if this is not the right thing&lt;br/&gt;
to do.&lt;/p&gt;</comment>
                            <comment id="12575623" author="narayanan" created="Thu, 6 Mar 2008 09:23:06 +0000"  >&lt;p&gt;Modified stopMaster to throw&lt;/p&gt;

&lt;p&gt;throw StandardException.newException(SQLState.REPLICATION_MASTER_ALREADY_BOOTED, dbname);&lt;/p&gt;

&lt;p&gt;stopMaster is used in  printStackAndStopMaster(Throwable t). I modified stopMaster to log&lt;br/&gt;
a ReplicationLogger.logError(MessageId.REPLICATION_MASTER_STOPPED, t, dbname);. The master&lt;br/&gt;
is stopped anyways, so I thought it would be OK to use that SQLState.&lt;/p&gt;

&lt;p&gt;The rest of the changes are identical to the previous patch&lt;/p&gt;</comment>
                            <comment id="12575624" author="narayanan" created="Thu, 6 Mar 2008 09:23:27 +0000"  >&lt;p&gt;The repro worked on v4 without problems&lt;/p&gt;</comment>
                            <comment id="12575651" author="oysteing" created="Thu, 6 Mar 2008 10:52:39 +0000"  >&lt;p&gt;Thanks for the follow-up on my comments Narayanan.&lt;br/&gt;
I have checked that the reported issue has been fixed.&lt;br/&gt;
Patch v4 committed as revsion 634218.&lt;/p&gt;</comment>
                            <comment id="12575705" author="jorgenlo" created="Thu, 6 Mar 2008 13:41:59 +0000"  >&lt;p&gt;Since stopMaster throws StandardException - isn&apos;t it a bit overkill to catch Throwable?&lt;/p&gt;

&lt;p&gt;+        try &lt;/p&gt;
{
+            stopMaster();
+        }
&lt;p&gt; catch (Throwable t_stopmaster) &lt;/p&gt;
{
+            //The stop master threw an exception saying the replication
+            //has been stopped already.
+            ReplicationLogger.
+                logError(MessageId.REPLICATION_MASTER_STOPPED, t, dbname);
+        }

&lt;p&gt;BTW: did you mean to log the stack trace of t here or should it be t_stopmaster?&lt;/p&gt;</comment>
                            <comment id="12575729" author="narayanan" created="Thu, 6 Mar 2008 14:58:35 +0000"  >&lt;p&gt;&amp;gt; Since stopMaster throws StandardException - isn&apos;t it a bit overkill to catch Throwable? &lt;/p&gt;

&lt;p&gt;No I do not think it is Overkill!&lt;/p&gt;

&lt;p&gt;When printStackAndStopMaster(Throwable t)  catches all exceptions as a Throwable I think &lt;br/&gt;
it only makes it more uniform that the stopMaster exception is caught as a Throwable&lt;br/&gt;
too.&lt;/p&gt;

&lt;p&gt;I see that logging the stack trace as a issue that needs a follow-up. I meant it to be&lt;br/&gt;
t_stopmaster.&lt;/p&gt;</comment>
                            <comment id="12575735" author="jorgenlo" created="Thu, 6 Mar 2008 15:09:52 +0000"  >&lt;p&gt;Ok, but is it intentional to e.g. log an OutOfMemoryError as a replication master stopped message?&lt;/p&gt;</comment>
                            <comment id="12575738" author="narayanan" created="Thu, 6 Mar 2008 15:19:48 +0000"  >&lt;p&gt;&amp;gt;Ok, but is it intentional to e.g. log an OutOfMemoryError as a replication master stopped message?&lt;/p&gt;

&lt;p&gt;The whole point of a printStackTrace and stop master method I believe was to log the exception stack&lt;br/&gt;
for the problem and let the process from where the method was called proceed unaffected wasn&apos;t it?&lt;br/&gt;
If that was the aim I really do not see why I would throw this isolated exception and not log it and&lt;br/&gt;
let it disturb for example the shutdown process of the derby system.&lt;/p&gt;

&lt;p&gt;If I were to use the stopmaster method as I am going to do for the issue Derby-3447 I would rather log&lt;br/&gt;
the &quot;OutOfMemory&quot; error thrown from the &quot;stopMaster&quot;, and let the Monitor succeed in shutting&lt;br/&gt;
down this module, than cause it to fail the shutdown process for the derby system.&lt;/p&gt;</comment>
                            <comment id="12575759" author="narayanan" created="Thu, 6 Mar 2008 16:30:42 +0000"  >&lt;p&gt;The attached patch throw t_stopmaster instead of t in the printStackAndStopMaster&lt;br/&gt;
method.&lt;/p&gt;</comment>
                            <comment id="12576102" author="jorgenlo" created="Fri, 7 Mar 2008 09:43:30 +0000"  >&lt;p&gt;I now understand why you are catching Throwable. I still don&apos;t agree that it is a good thing to do because there are many pitfalls, but I guess that&apos;s just a matter of opinion. Here is some food-for-thought:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The class javadoc of java.lang.Error says:&lt;br/&gt;
&quot;An Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions.&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I interpret this as being something &quot;bigger&quot; than replication that should be reported further up the system. I checked how TransactionResourceImpl#handleException deals with Errors and found, e.g., that it has special treatment for ThreadDeath Errors.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Looking more closely at ThreadDeath, the javadoc says:&lt;br/&gt;
&quot;An application should catch instances of this class only if it must clean up after being terminated asynchronously. If ThreadDeath is caught by a method, it is important that it be re-thrown so that the thread actually dies.&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I haven&apos;t checked the other Errors, but there may be similar pitfalls around. &lt;/p&gt;</comment>
                            <comment id="12576108" author="narayanan" created="Fri, 7 Mar 2008 10:04:02 +0000"  >&lt;p&gt;On retrospection I think you are right. Thank you for the digging up&lt;br/&gt;
more on the StandardException issue. &lt;/p&gt;

&lt;p&gt;Pls find attached a patch that catches a StandardException.&lt;/p&gt;

&lt;p&gt;The previous patch had been broken by a checkin so I had to&lt;br/&gt;
regenerate the patch anyway.&lt;/p&gt;</comment>
                            <comment id="12576240" author="oysteing" created="Fri, 7 Mar 2008 15:36:41 +0000"  >&lt;p&gt;Thanks, Narayanan for the follow-up.&lt;br/&gt;
Patch committed as revision 634694.&lt;br/&gt;
I took the liberty to modify the signature of  printStackAndStopMaster to take Exception instead of Throwable.&lt;/p&gt;</comment>
                            <comment id="12586278" author="narayanan" created="Mon, 7 Apr 2008 09:51:43 +0100"  >&lt;p&gt;All relevant patches have been submitted and committed.&lt;br/&gt;
Resolving issue!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12390029">DERBY-3489</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376390" name="Derby3358.diff" size="14530" author="narayanan" created="Mon, 25 Feb 2008 09:53:50 +0000"/>
                            <attachment id="12376391" name="Derby3358.stat" size="371" author="narayanan" created="Mon, 25 Feb 2008 09:53:50 +0000"/>
                            <attachment id="12376686" name="Derby3358_v2.diff" size="12492" author="narayanan" created="Thu, 28 Feb 2008 03:03:24 +0000"/>
                            <attachment id="12376687" name="Derby3358_v2.stat" size="371" author="narayanan" created="Thu, 28 Feb 2008 03:03:24 +0000"/>
                            <attachment id="12377223" name="Derby3358_v3.diff" size="11664" author="narayanan" created="Thu, 6 Mar 2008 04:00:44 +0000"/>
                            <attachment id="12377224" name="Derby3358_v3.stat" size="371" author="narayanan" created="Thu, 6 Mar 2008 04:00:44 +0000"/>
                            <attachment id="12377236" name="Derby3358_v4.diff" size="12846" author="narayanan" created="Thu, 6 Mar 2008 09:23:06 +0000"/>
                            <attachment id="12377237" name="Derby3358_v4.stat" size="371" author="narayanan" created="Thu, 6 Mar 2008 09:23:06 +0000"/>
                            <attachment id="12377264" name="Derby3358_v5.diff" size="743" author="narayanan" created="Thu, 6 Mar 2008 16:30:42 +0000"/>
                            <attachment id="12377265" name="Derby3358_v5.stat" size="91" author="narayanan" created="Thu, 6 Mar 2008 16:30:42 +0000"/>
                            <attachment id="12377328" name="Derby3358_v6.diff" size="893" author="narayanan" created="Fri, 7 Mar 2008 10:04:02 +0000"/>
                            <attachment id="12377329" name="Derby3358_v6.stat" size="91" author="narayanan" created="Fri, 7 Mar 2008 10:04:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Jan 2008 10:34:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23593</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lrb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37343</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>