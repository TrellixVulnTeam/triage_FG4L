<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:07:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-346/DERBY-346.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-346] running jdbcapi/xaSimplePostive.sql under the DerbyNetClient framework gives   error &quot;Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.&quot;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-346</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Running jdbcapi/xaSimplePositive.sql with network client  causes  an error  in the last case:&lt;/p&gt;

&lt;p&gt;Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.&lt;/p&gt;

&lt;p&gt;The trace on the client is:&lt;br/&gt;
ij(XA)&amp;gt; select * from APP.global_xactTable where gxid is not null order by gxid;&lt;br/&gt;
ERROR XJ05C: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ05C, SQLERRMC: XJ05C.S&lt;br/&gt;
org.apache.derby.client.am.SqlException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ05C, SQLERRMC: XJ05C.S&lt;br/&gt;
	at org.apache.derby.client.am.Statement.completeSqlca(Statement.java:1354)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.completeOpenQuery(Statement.java:1025)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.parseOpenQueryFailure(NetStatementReply.java:503)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.parseOPNQRYreply(NetStatementReply.java:226)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.readOpenQuery(NetStatementReply.java:56)&lt;br/&gt;
	at org.apache.derby.client.net.StatementReply.readOpenQuery(StatementReply.java:49)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatement.readOpenQuery_(NetStatement.java:151)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.readOpenQuery(Statement.java:1021)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.flowExecute(Statement.java:1556)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeX(Statement.java:631)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.execute(Statement.java:622)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:299)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:433)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:312)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:203)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:169)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:55)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:60)&lt;/p&gt;


&lt;p&gt;On the server, the trace is:&lt;/p&gt;

&lt;p&gt;Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.&lt;br/&gt;
SQL Exception: Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:79)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:96)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:160)&lt;br/&gt;
	at org.apache.derby.jdbc.EmbedXAConnection.checkHoldCursors(EmbedXAConnection.java:712)&lt;br/&gt;
	at org.apache.derby.jdbc.XAStatementControl.checkHoldCursors(XAStatementControl.java:193)&lt;br/&gt;
	at org.apache.derby.iapi.jdbc.BrokeredPreparedStatement.execute(BrokeredPreparedStatement.java:426)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAStatement.execute(DRDAStatement.java:548)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:3533)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:871)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:226)&lt;br/&gt;
handle SQLException here&lt;/p&gt;


&lt;p&gt;I have been trying to get the jdbcapi/xaSimplePostive.sql test running with network client.  The changes for  DERBY -246 and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-339&quot; title=&quot;Network client XA should only keep XA state for transaction branch association, to track whether to send commit in autocommit mode.  All other state and state related decisions should be deferred to the server.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-339&quot;&gt;&lt;del&gt;DERBY-339&lt;/del&gt;&lt;/a&gt;  allow all but the last case in xaSimplePositve to pass.   Unfortunately I have not  yet been able  to strip down the test to get a smaller reproducable case.  &lt;/p&gt;

</description>
                <environment></environment>
        <key id="12311251">DERBY-346</key>
            <summary>running jdbcapi/xaSimplePostive.sql under the DerbyNetClient framework gives   error &quot;Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.&quot;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Sat, 11 Jun 2005 03:38:37 +0100</created>
                <updated>Thu, 23 Jun 2005 04:17:11 +0100</updated>
                            <resolved>Thu, 23 Jun 2005 04:16:42 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12313336" author="kmarsden" created="Sat, 11 Jun 2005 09:04:24 +0100"  >&lt;p&gt;This patch changes Network Server to pass the holdability to the prepare method of BrokeredConnection30 when running under JDK14. &lt;br/&gt;
It also adds the jdbcapi/xaSimplePositive.sql test to the derbynetclientmats test suite.  The netxapositive test has been removed as it was a subset of &lt;br/&gt;
xaSimplePositive.&lt;/p&gt;

&lt;p&gt;Note:It seems that under JDK13 the default holdability for BrokeredConnections in global transactions is  consistently, CLOSE_CURSORS_AT_COMMIT, but for JDK141,  the default holdability is sometimes set to HOLD_CURSORS_OVER_COMMIT. &lt;/p&gt;

&lt;p&gt;Ran  jdbcapi/xaSimplePositive.sql test under JDK131 and JDK142 as well as derbyentclientmats.&lt;/p&gt;</comment>
                            <comment id="12313654" author="kmarsden" created="Wed, 15 Jun 2005 08:58:12 +0100"  >&lt;p&gt;Mamta posted this summary of   holdability behaviour for use in debugging this issue.  Client should match the embedded behaviour.&lt;/p&gt;


&lt;p&gt;Just to summarize, the holdability table will look the same for EmbedConnection as well as BrokeredConnection.&lt;/p&gt;

&lt;p&gt;                        Global Transaction                             Local Transaction&lt;br/&gt;
JDK13    CLOSE_CURSORS_AT_COMMIT        conn holdability (Default HOLD_CURSORS_OVER_COMMIT)&lt;br/&gt;
JDK14+   CLOSE_CURSORS_AT_COMMIT       conn holdability (Default HOLD_CURSORS_OVER_COMMIT)&lt;/p&gt;

&lt;p&gt;A Connection object will have it&apos;s holdability set to default which is HOLD_CURSORS_OVER_COMMIT. When the connection joins a global transaction, the holdability will get switched internally to CLOSE_CURSORS_AT_COMMIT. When the connection leaves the global transaction and becomes part of local transaction, the holdability is restored to what it was before entering the global transaction. It works this way in both jdk13 and jdk14+. One thing to keep in mind is that PreparedStatement get the holdability from where they are prepared and not where they are executed,&lt;/p&gt;

&lt;p&gt; for instance,&lt;br/&gt;
Start Local Transaction&lt;br/&gt;
Connection holdability (default - HOLD_CURSORS_OVER_COMMIT)&lt;br/&gt;
PreparedStatement (holdability will be HOLD_CURSORS_OVER_COMMIT)&lt;br/&gt;
ResultSet from PreparedStatement will have holdability as HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
Start Global Transaction&lt;br/&gt;
Connection holdability switches to CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
Another ResultSet from PreparedStatement will attempt to have the preparedStatement&apos;s holdability and that will cause exception because Global transactions do not support holdable cursors.&lt;br/&gt;
Exit Global Transaction and become part of Local Transaction&lt;br/&gt;
Connection holdability back to HOLD_CURSORS_OVER_COMMIT&lt;/p&gt;

&lt;p&gt;I have come across one bug with jdk13 though, where the holdability is not getting restored back to HOLD_CURSORS_OVER_COMMIT when the connection becomes part of local transaction after leaving global transaction. I will enter a JIRA entry for it and start working on it.&lt;/p&gt;
</comment>
                            <comment id="12314247" author="kmarsden" created="Thu, 23 Jun 2005 04:12:17 +0100"  >&lt;p&gt;This issue was fixed by Mamta&apos;s fixes for embedded holdability for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-366&quot; title=&quot;In jdk13, when a connection transitions from global transaction to local transaction, its default holdability of HOLD_CURSORS_OVER_COMMIT is not restored.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-366&quot;&gt;&lt;del&gt;DERBY-366&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following checkin adds the xaSimplePositive.sql test to the client suite and removes netxaPositve, which was a subset of xaSimplePositive.&lt;/p&gt;

&lt;p&gt;Transmitting file data ...&lt;br/&gt;
Committed revision 192968.&lt;/p&gt;</comment>
                            <comment id="12314248" author="kmarsden" created="Thu, 23 Jun 2005 04:15:15 +0100"  >&lt;p&gt;This issue was fixed with Mamta&apos;s fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt; and DERBY366.  I think this one is actually a dup of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12314250" author="kmarsden" created="Thu, 23 Jun 2005 04:16:42 +0100"  >&lt;p&gt;Fixed with fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-366&quot; title=&quot;In jdk13, when a connection transitions from global transaction to local transaction, its default holdability of HOLD_CURSORS_OVER_COMMIT is not restored.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-366&quot;&gt;&lt;del&gt;DERBY-366&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="27488">DERBY-8</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21910</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy17xb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40934</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>