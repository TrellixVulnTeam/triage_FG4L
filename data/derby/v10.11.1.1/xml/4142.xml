<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4142/DERBY-4142.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4142] java.lang.VerifyError causing java.sql.SQLException: Cannot create an instance of generated class ... in lang.GeneratedColumnsTest and GeneratedColumnsPermsTest  on IBM iseries</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4142</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This results in 22 errors.&lt;/p&gt;

&lt;p&gt;Here&apos;s the stack trace with an insane build:&lt;/p&gt;

&lt;p&gt;1) test_005_basicInsert(org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest)java.sql.SQLException: Cannot create an instance of generated class org.apache.derby.exe.acd83d18d1x0120x62bdx2dffxffffb19003081.&lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:196)&lt;br/&gt;
	at java.lang.Exception.&amp;lt;init&amp;gt;(Exception.java:41)&lt;br/&gt;
	at java.sql.SQLException.&amp;lt;init&amp;gt;(SQLException.java:40)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedSQLException.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.chattyPrepare(GeneratedColumnsHelper.java:147)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.goodStatement(GeneratedColumnsHelper.java:125)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test_005_basicInsert(GeneratedColumnsTest.java:427)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;org/apache/derby/exe/acd83d18d1x0120x62bdx2dffxffffb19003081 0000 0000 : java.lang.VerifyError&apos;.&lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:196)&lt;br/&gt;
	at java.lang.Exception.&amp;lt;init&amp;gt;(Exception.java:41)&lt;br/&gt;
	at java.sql.SQLException.&amp;lt;init&amp;gt;(SQLException.java:40)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedSQLException.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	... 43 more&lt;br/&gt;
Caused by: java.lang.VerifyError: org/apache/derby/exe/acd83d18d1x0120x62bdx2dffxffffb19003081 0000 0000 &lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:196)&lt;br/&gt;
	at java.lang.Error.&amp;lt;init&amp;gt;(Error.java:49)&lt;br/&gt;
	at java.lang.VerifyError.&amp;lt;init&amp;gt;(VerifyError.java:34)&lt;br/&gt;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)&lt;br/&gt;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)&lt;br/&gt;
	at org.apache.derby.iapi.services.loader.ClassInfo.getNewInstance(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.LoadedGeneratedClass.newInstance(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.ReflectGeneratedClass.newInstance(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericActivationHolder.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.getActivation(Unknown Source)&lt;br/&gt;
	... 39 more&lt;/p&gt;</description>
                <environment>IBM iseries (AS 400) with ibm 1.5 (build 1.5.0_13-b05)</environment>
        <key id="12421939">DERBY-4142</key>
            <summary>java.lang.VerifyError causing java.sql.SQLException: Cannot create an instance of generated class ... in lang.GeneratedColumnsTest and GeneratedColumnsPermsTest  on IBM iseries</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Apr 2009 04:53:44 +0100</created>
                <updated>Thu, 13 Jan 2011 21:09:06 +0000</updated>
                            <resolved>Tue, 30 Jun 2009 20:05:58 +0100</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.2.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12695413" author="kmarsden" created="Fri, 3 Apr 2009 16:00:48 +0100"  >&lt;p&gt;I don&apos;t know if this is relevant in this case as I have not checked the code, but we have found in the past that the iseries verifier is more strict than other JVM&apos;s, while still being correct.  See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-488&quot; title=&quot;DatabaseMetaData.getColumns() fails on iSeries JDK 1.4 with verfier error on generated class.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-488&quot;&gt;&lt;del&gt;DERBY-488&lt;/del&gt;&lt;/a&gt; for an example of this.   Since GeneratedColumns is a new feature, it may have a similar error in the code we generate.&lt;/p&gt;
</comment>
                            <comment id="12696420" author="myrna" created="Tue, 7 Apr 2009 07:51:59 +0100"  >&lt;p&gt;Also lang/autoincrement.sql fails in this manner:&lt;br/&gt;
2095a2096,2102&lt;br/&gt;
&amp;gt; ERROR XBCM2: Cannot create an instance of generated class org.apache.derby.exe&lt;br/&gt;
.ac363c44a2x0120x7f2cx914fxffffb5b8e96142.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: &apos;org/apache/derby/exe/ac363c44a2x0120x7f2cx914fxf&lt;br/&gt;
fffb5b8e96142 0000 0000 : java.lang.VerifyError&apos;.&lt;br/&gt;
&amp;gt; ij(CONN2)&amp;gt; alter table d4006 alter column y default 42;&lt;br/&gt;
&amp;gt; ERROR 42X14: &apos;Y&apos; is not a column in table or VTI &apos;D4006&apos;.&lt;br/&gt;
&amp;gt; ij(CONN2)&amp;gt; alter table d4006 alter column y default null;&lt;br/&gt;
&amp;gt; ERROR 42X14: &apos;Y&apos; is not a column in table or VTI &apos;D4006&apos;.&lt;br/&gt;
&amp;gt; ij(CONN2)&amp;gt; drop table d4006;&lt;br/&gt;
2097,2102d2103&lt;br/&gt;
&amp;lt; ij(CONN2)&amp;gt; alter table d4006 alter column y default 42;&lt;br/&gt;
&amp;lt; ERROR 42XA7: &apos;Y&apos; is a generated column. You cannot change its default value.&lt;br/&gt;
&amp;lt; ij(CONN2)&amp;gt; alter table d4006 alter column y default null;&lt;br/&gt;
&amp;lt; ERROR 42XA7: &apos;Y&apos; is a generated column. You cannot change its default value.&lt;br/&gt;
&amp;lt; ij(CONN2)&amp;gt; drop table d4006;&lt;br/&gt;
&amp;lt; 0 rows inserted/updated/deleted&lt;/p&gt;</comment>
                            <comment id="12696653" author="myrna" created="Tue, 7 Apr 2009 18:56:25 +0100"  >&lt;p&gt;Note that although this is likely a Derby issue, the IBM 1.6 SR3 does not show a java.lang.VerifyError.&lt;/p&gt;</comment>
                            <comment id="12698845" author="kmarsden" created="Tue, 14 Apr 2009 18:36:34 +0100"  >&lt;p&gt;Myrna asked me to post some poiters  on tracking down this issue.&lt;br/&gt;
I thought we had a Wiki page on debugging generated code issues, but I don&apos;t see it, so here are some pointers on getting started as I remember them.&lt;br/&gt;
1) Try to reduce the issue down to a single statement.&lt;br/&gt;
2) Put derby.debug.true=DumpClassFile in your derby.properties&lt;br/&gt;
3) Run the statement and you will get a class file (e.g. ac12564092x0120xa5a3x8f46x000.class)&lt;br/&gt;
4) Put . in your classpath.&lt;br/&gt;
5) move the class file to a directory org/apache/derby/exe&lt;br/&gt;
6) Use javap -c org.apache.derby.exe.ac12564092x0120xa5a3x8f46x000 to decompile the class &lt;br/&gt;
7) Use java -verify org.apache.derby.exe.ac12564092x0120xa5a3x8f46x000 to perhaps get more information on verification of the class.&lt;/p&gt;

&lt;p&gt;As I recall the javap -c step croaks at the point where their is an issue, but I am not sure about that.  &lt;br/&gt;
But let&apos;s say your problem is in setRowCountCheckVector.  You then want to do a search of the code of that string in quotes and you will find the place where the code is generated.  Once you find that, post and we will look further.&lt;/p&gt;
</comment>
                            <comment id="12698855" author="rhillegas" created="Tue, 14 Apr 2009 18:57:11 +0100"  >&lt;p&gt;I have had good success decompiling the generated code by using the free Jode decompiler. I find that Jode succeeds where most decompilers fail. In addition, I have found that the decompiled code is easy to read and can be compiled into byte code again. Not all decompilers produce compilable code. Here is the script which I use to drive Jode:&lt;/p&gt;

&lt;p&gt;#! /bin/bash&lt;br/&gt;
#&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Run the jode decompiler on a class. E.g.:&lt;br/&gt;
#&lt;/li&gt;
	&lt;li&gt;runjode acf81e0010x011cxddd8xfcabx0000000feab00&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;classStub=$1&lt;/p&gt;

&lt;p&gt;. setupClasspath&lt;/p&gt;

&lt;p&gt;export CLASSPATH=$CLASSPATH:$SW/javaDecompilers/jode/jode-1.1.2-pre1.jar:.&lt;/p&gt;

&lt;p&gt;echo $CLASSPATH&lt;/p&gt;

&lt;p&gt;mkdir org&lt;br/&gt;
mkdir org/apache&lt;br/&gt;
mkdir org/apache/derby&lt;br/&gt;
mkdir org/apache/derby/exe&lt;/p&gt;

&lt;p&gt;cp $classStub.class org/apache/derby/exe/&lt;/p&gt;


&lt;p&gt;#java -cp $CLASSPATH jode.decompiler.Main --help $*&lt;br/&gt;
java -cp $CLASSPATH jode.decompiler.Main org.apache.derby.exe.$classStub&lt;/p&gt;</comment>
                            <comment id="12699013" author="bryanpendleton" created="Wed, 15 Apr 2009 02:20:39 +0100"  >&lt;p&gt;I think that &lt;a href=&quot;http://wiki.apache.org/db-derby/DumpClassFile&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DumpClassFile&lt;/a&gt; may be the wiki page you were&lt;br/&gt;
remembering. The instructions on that page are pretty close to the instructions given here;&lt;br/&gt;
I&apos;ll add some additional notes about javap and about jode.&lt;/p&gt;</comment>
                            <comment id="12713766" author="kmarsden" created="Wed, 27 May 2009 22:53:22 +0100"  >&lt;p&gt;Based on the stack trace, hopefully this will reproduce the issue.  Run create.sql to create the database and then repro.sql with the derby.properties attached.&lt;/p&gt;</comment>
                            <comment id="12714194" author="myrna" created="Thu, 28 May 2009 23:13:39 +0100"  >&lt;p&gt;Attaching the result of the decompile and verify step.&lt;/p&gt;</comment>
                            <comment id="12714201" author="myrna" created="Thu, 28 May 2009 23:26:03 +0100"  >&lt;p&gt;downloaded wrong file&lt;/p&gt;</comment>
                            <comment id="12714202" author="kmarsden" created="Thu, 28 May 2009 23:26:06 +0100"  >&lt;p&gt;Teh verify output just has a java.lang.NoClassDefFoundError.  Maybe a classpath issue?&lt;/p&gt;</comment>
                            <comment id="12714204" author="myrna" created="Thu, 28 May 2009 23:28:19 +0100"  >&lt;p&gt;no, simple typo in the class name. I deleted that one and uploaded one done with the correct file name (cut-and-paste didn&apos;t do it for me either). But I&apos;m not sure the actual result isn&apos;t very useful after all.&lt;/p&gt;</comment>
                            <comment id="12716323" author="myrna" created="Thu, 4 Jun 2009 17:54:31 +0100"  >&lt;p&gt;I&apos;m attaching the decompile result of the decompile with jode (as Rick had said he&apos;s had good results it seemed worthwhile trying it out).&lt;br/&gt;
I then turned the class into d4142generated.java (to simplify the name, also attached) and then compiled that class with javac. &lt;br/&gt;
This gives:&lt;/p&gt;

&lt;p&gt;d4142generated.java:100: e2() in org.apache.derby.exe.d4142generated cannot implement e2() in org.apache.derby.iapi.services.loader.GeneratedByteCode; overridden method does not throw java.lang.Exception&lt;br/&gt;
    public Object e2() throws StandardException, Exception {&lt;br/&gt;
                  ^&lt;br/&gt;
d4142generated.java:81: e1() in org.apache.derby.exe.d4142generated cannot implement e1() in org.apache.derby.iapi.services.loader.GeneratedByteCode; overridden method does not throw java.lang.Exception&lt;br/&gt;
    public Object e1() throws StandardException, Exception {&lt;br/&gt;
                  ^&lt;br/&gt;
d4142generated.java:77: e0() in org.apache.derby.exe.d4142generated cannot implement e0() in org.apache.derby.iapi.services.loader.GeneratedByteCode; overridden method does not throw java.lang.Exception&lt;br/&gt;
    public Object e0() throws StandardException, Exception {&lt;br/&gt;
                  ^&lt;br/&gt;
d4142generated.java:86: incompatible types&lt;br/&gt;
found   : org.apache.derby.iapi.sql.Row&lt;br/&gt;
required: org.apache.derby.iapi.sql.execute.ExecRow&lt;br/&gt;
	    = /&lt;b&gt;TYPE_ERROR&lt;/b&gt;/ row;&lt;br/&gt;
	                     ^&lt;/p&gt;

&lt;p&gt;I suspect the last one is our problem, and will work to fix that issue first.&lt;/p&gt;</comment>
                            <comment id="12716447" author="myrna" created="Thu, 4 Jun 2009 23:56:18 +0100"  >&lt;p&gt;Attaching a patch for this issue - just causing a cast of the &apos;Row&apos; resulting in the generated columns code in DMLModStatementNode.java to ExecRow.&lt;/p&gt;

&lt;p&gt;The tests lang/autoincrement.sql and junit tests lang.GeneratedColumnsTest and lang.GeneratedColumnsPermsTest pass with this patch with ibm15 on iseries. I&apos;ll run derbyall and suites.All now.&lt;/p&gt;

&lt;p&gt;I would appreciate a review, for there&apos;s some questions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Will getCurrentRow() always return an ExecRow in this case?&lt;/li&gt;
	&lt;li&gt;Would it be better instead to declare the field as a Row instead of an ExecRow?&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12716455" author="kmarsden" created="Fri, 5 Jun 2009 00:46:58 +0100"  >&lt;p&gt;Linking to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-481&quot; title=&quot;implement SQL generated columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-481&quot;&gt;&lt;del&gt;DERBY-481&lt;/del&gt;&lt;/a&gt; (implement SQL generated columns) where this issue was introduced.&lt;/p&gt;</comment>
                            <comment id="12717813" author="mamtas" created="Tue, 9 Jun 2009 21:30:21 +0100"  >&lt;p&gt;Myrna, I reviewed the patch. As for whether getCurrentRow() always return an ExecRow in this case, I am not sure about that. I will look further into the code to see if we can make that assumption. Otherwise, we probably should change the signature to declare the field as a Row instead of ExecRow.&lt;/p&gt;</comment>
                            <comment id="12717849" author="mamtas" created="Tue, 9 Jun 2009 23:37:34 +0100"  >&lt;p&gt;Myrna, I looked through the code more and I think we are safe to do the CASTing to ExecRow. Even though, iapi.sql.Activation interface has following method declaration&lt;br/&gt;
	public Row getCurrentRow(int resultSetNumber);&lt;br/&gt;
The actual implementation of the method in impl.sql.execute.BaseActivation has following code&lt;br/&gt;
public Row getCurrentRow(int resultSetNumber)&lt;/p&gt;
{
        return row[resultSetNumber];
}
&lt;p&gt;Note that the row arrary has been defined as an array of &quot;ExecRow&quot; rather than &quot;Row&quot;. I think this row arrary gets filled by implementation classes of interface CursorResultSet with following method&lt;br/&gt;
	ExecRow getCurrentRow() throws StandardException;&lt;br/&gt;
Agin, notice that the method is defined to return ExecRow.&lt;/p&gt;

&lt;p&gt;So, in short, I think we are ok CASTing Row to ExecRow in the generated code.&lt;/p&gt;</comment>
                            <comment id="12717864" author="myrna" created="Wed, 10 Jun 2009 00:29:41 +0100"  >&lt;p&gt;Thanks for reviewing the patch Mamta!&lt;/p&gt;

&lt;p&gt;I&apos;ve been trying to test a patched build with ibm 1.5. on iseries, but have run into trouble:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;OOM with suites.All. I&apos;ve been running with -Xmx1024M -Xms1024M before and that worked in the past...Not sure what&apos;s going on now. A second run (with 2048M) only got worse (sooner) OOM behavior and after that I had trouble getting rid of my processes&lt;/li&gt;
	&lt;li&gt;apparent hang with derbyall:lang/wisconsin.java. I have stupidly deleted the original test dir, but judging from the suite&apos;s output files, no output was created after 3 1/2 hours. On rerun I let it go for 20 mins, but apart from the database getting booted (derby.log) nothing at all showed up in any of the output files (i.e. .tmp was empty). During the 10.5.1.1 test cycle this test took about 5 mins (and passed).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, the original problem appears addressed (as I said, the 3 failing tests now pass), but I will investigate these behaviors, and run on another type of machine just to be safe.&lt;/p&gt;</comment>
                            <comment id="12717918" author="mamtas" created="Wed, 10 Jun 2009 06:12:58 +0100"  >&lt;p&gt;Myrna, I applied your patch on my client. I will run the tests on my Windows XP machine with ibm15. I know you are encountering the problem on iseries but I will run the tests just for basic sanity check.&lt;/p&gt;</comment>
                            <comment id="12717948" author="knutanders" created="Wed, 10 Jun 2009 07:49:09 +0100"  >&lt;p&gt;I think I would feel more comfortable with one of the solutions that&lt;br/&gt;
avoided the cast. I agree with Mamta that the cast is safe, but making&lt;br/&gt;
the signatures say explicitly that the method always returns an ExecRow&lt;br/&gt;
sounds cleaner. Then we also get a compile-time check of the assumption,&lt;br/&gt;
instead of just a run-time check as we get with the cast.&lt;/p&gt;

&lt;p&gt;Although the simplest way to fix it is to change the field to type Row&lt;br/&gt;
(should be safe because it is only used to call Row.setColumn()), I&lt;br/&gt;
think it would also make sense to change the return type of&lt;br/&gt;
Activation.getCurrentRow() to ExecRow. That would make it consistent&lt;br/&gt;
with Activation.setCurrentRow() which already is declared to take an&lt;br/&gt;
ExecRow, and make it clear that the returned value is always an ExecRow.&lt;/p&gt;</comment>
                            <comment id="12717966" author="knutanders" created="Wed, 10 Jun 2009 08:30:25 +0100"  >&lt;p&gt;The patch d4142-kah-noField.diff shows an (untested) alternative to changing the return type of the field. It simply removes the field and keeps the current row on the stack. A field is not needed since the current row doesn&apos;t need to survive between invocations of the method, so I think this simplification of the generated class would be good anyway.&lt;/p&gt;</comment>
                            <comment id="12718050" author="knutanders" created="Wed, 10 Jun 2009 13:42:23 +0100"  >&lt;p&gt;FWIW, all the regression tests ran cleanly on my machine with the patch that removes the problematic field.&lt;/p&gt;</comment>
                            <comment id="12718087" author="mamtas" created="Wed, 10 Jun 2009 15:06:03 +0100"  >&lt;p&gt;I agree with Knut and prefer changing the return type Activation.getCurrentRow() to ExecRow since rest of the code is referencing to that object as ExecRow rather than just Row.&lt;/p&gt;

&lt;p&gt;also, I had to kill my suite test last night because the machine was getting really hot(not just because of this suite run, My machine has been heating up a lot lately). Have fired the tests again earlier this morning.If we decide to update the patch with the review comments, I will refire the tests.&lt;/p&gt;</comment>
                            <comment id="12718148" author="myrna" created="Wed, 10 Jun 2009 18:43:07 +0100"  >&lt;p&gt;Well, the hang in wisconsin occurred with the build on one of my environments, without changes, but not another. So I must have messed that tree up somehow.&lt;br/&gt;
I&apos;ll try Knut&apos;s patch (in the environment that&apos;s good) and report back...&lt;/p&gt;</comment>
                            <comment id="12718591" author="myrna" created="Thu, 11 Jun 2009 20:09:30 +0100"  >&lt;p&gt;Attaching the suites.All result of the latest run - this is insane jars with Knut&apos;s patch.&lt;br/&gt;
Unfortunately, I got numerous OOM errors and some &apos;cannot flush to disk&apos; failures.&lt;br/&gt;
They may well be unrelated to this issue, but I cannot look into this further until July 14.&lt;/p&gt;</comment>
                            <comment id="12718595" author="myrna" created="Thu, 11 Jun 2009 20:21:11 +0100"  >&lt;p&gt;Forgot to say - the OOM errors were on iseries - I ran suites.All and derbyall with the same build on Linux without any failures.&lt;/p&gt;</comment>
                            <comment id="12725649" author="kmarsden" created="Tue, 30 Jun 2009 15:40:07 +0100"  >&lt;p&gt;Attached are the results of my iseries run on 10.5 with d4142-kah-noField.diff patch and a sane build (suites.all_10.5.1.2.789449_with_kahd4142.txt).   The tests that previously failed before the fix now pass and I did not see any OutOfMemoryErrors.    I did see some lock timeouts and some grant/revoke errors that need investigation, but I don&apos;t think could be related to this patch, so I plan to go ahead and check this in later today if nobody objects.&lt;/p&gt;</comment>
                            <comment id="12725752" author="kmarsden" created="Tue, 30 Jun 2009 20:05:57 +0100"  >&lt;p&gt;Committed fixes to trunk and 10.5.  Resolving this issue.  Thanks Knut and Myrna for your work on this issue.&lt;/p&gt;</comment>
                            <comment id="12725901" author="kmarsden" created="Wed, 1 Jul 2009 03:53:00 +0100"  >&lt;p&gt;Actually that first run I posted (suites.all_10.5.1.2.789449_with_kahd4142.txt) was with IBM 1.6.&lt;br/&gt;
I ran again with IBM 1.5 and saw only known issues I think  with InternationalConnectTest and some errors connecting to network server, but again no OutOfMemoryExceptions.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12312855">DERBY-481</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12409914" name="DERBY-4142.diff" size="701" author="myrna" created="Thu, 4 Jun 2009 23:56:18 +0100"/>
                            <attachment id="12409216" name="create.sql" size="157" author="kmarsden" created="Wed, 27 May 2009 22:53:22 +0100"/>
                            <attachment id="12410285" name="d4142-kah-noField.diff" size="1703" author="knutanders" created="Wed, 10 Jun 2009 08:30:25 +0100"/>
                            <attachment id="12409894" name="d4142generated.java" size="4529" author="myrna" created="Thu, 4 Jun 2009 17:54:31 +0100"/>
                            <attachment id="12409312" name="decompile.out" size="8587" author="myrna" created="Thu, 28 May 2009 23:13:39 +0100"/>
                            <attachment id="12409217" name="derby.properties" size="32" author="kmarsden" created="Wed, 27 May 2009 22:53:22 +0100"/>
                            <attachment id="12409215" name="repro.sql" size="79" author="kmarsden" created="Wed, 27 May 2009 22:53:22 +0100"/>
                            <attachment id="12409893" name="runjodedecompile.out" size="4973" author="myrna" created="Thu, 4 Jun 2009 17:54:31 +0100"/>
                            <attachment id="12412173" name="suites.all_10.5.1.2.789449_with_kahd4142.txt" size="686086" author="kmarsden" created="Tue, 30 Jun 2009 15:40:07 +0100"/>
                            <attachment id="12410423" name="suitesall.out" size="596755" author="myrna" created="Thu, 11 Jun 2009 20:09:30 +0100"/>
                            <attachment id="12409314" name="verify.out" size="242" author="myrna" created="Thu, 28 May 2009 23:26:03 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Apr 2009 15:00:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24055</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0nmf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37645</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>