<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5702/DERBY-5702.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5702] Creating a foreign key constraint does not automatically create a statistics row if foreign key constraint will share a backing index created for a primary key</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5702</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When a foreign key constraints is created on a column which already has a primary key constraint, the statistics for foreign key constraint do not get created automatically. Have to run update statistics by hand to add statistics for foreign key constraint. I hope my understanding of statistics creation is correct in this regards. Following script shows the issue&lt;/p&gt;

&lt;p&gt;java -Dderby.storage.indexStats.auto=false -Dij.exceptionTrace=true org.apache.derby.tools.ij&lt;br/&gt;
connect &apos;jdbc:derby:db1;create=true&apos;; &lt;br/&gt;
CREATE TABLE TEST_TAB_1 &lt;br/&gt;
( &lt;br/&gt;
    ID INTEGER NOT NULL primary key&lt;br/&gt;
); &lt;br/&gt;
CREATE TABLE TEST_TAB_2 &lt;br/&gt;
( &lt;br/&gt;
   ID INTEGER not null, ID1 INTEGER not null&lt;br/&gt;
); &lt;br/&gt;
insert into TEST_TAB_1 values (1); &lt;br/&gt;
insert into test_tab_2 values(1,1);&lt;br/&gt;
CALL SYSCS_UTIL.SYSCS_UPDATE_STATISTICS(&apos;APP&apos;,&apos;TEST_TAB_1&apos;, null); &lt;br/&gt;
CALL SYSCS_UTIL.SYSCS_UPDATE_STATISTICS(&apos;APP&apos;,&apos;TEST_TAB_2&apos;, null); &lt;/p&gt;

&lt;p&gt;--At this point, we will find statistics row for primary key constraint on TEST_TAB_1&lt;br/&gt;
select &lt;br/&gt;
c.TABLEID, &lt;br/&gt;
c.CONGLOMERATENUMBER, &lt;br/&gt;
c.CONGLOMERATENAME, &lt;br/&gt;
c.ISINDEX, &lt;br/&gt;
c.ISCONSTRAINT, &lt;br/&gt;
c.CONGLOMERATEID, &lt;br/&gt;
t.TABLEID, &lt;br/&gt;
t.TABLENAME, &lt;br/&gt;
t.TABLETYPE, &lt;br/&gt;
s.STATID, &lt;br/&gt;
s.REFERENCEID, &lt;br/&gt;
s.TABLEID, &lt;br/&gt;
s.CREATIONTIMESTAMP, &lt;br/&gt;
s.TYPE, &lt;br/&gt;
s.VALID, &lt;br/&gt;
s.COLCOUNT, &lt;br/&gt;
CAST(STATISTICS AS VARCHAR(40)) as STATISTICS &lt;br/&gt;
from sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID = t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID = t.TABLEID &lt;br/&gt;
where t.TABLENAME = &apos;TEST_TAB_1&apos; and c.ISINDEX = false; &lt;/p&gt;

&lt;p&gt;--Now create primary key constraint on TEST_TAB_2 &lt;br/&gt;
ALTER TABLE TEST_TAB_2 &lt;br/&gt;
                ADD CONSTRAINT TEST_TAB_2_PK_1&lt;br/&gt;
        		PRIMARY KEY (id);&lt;/p&gt;

&lt;p&gt;--At this point, we will find statistics row for primary key constraint on TEST_TAB_2&lt;br/&gt;
select &lt;br/&gt;
c.TABLEID, &lt;br/&gt;
c.CONGLOMERATENUMBER, &lt;br/&gt;
c.CONGLOMERATENAME, &lt;br/&gt;
c.ISINDEX, &lt;br/&gt;
c.ISCONSTRAINT, &lt;br/&gt;
c.CONGLOMERATEID, &lt;br/&gt;
t.TABLEID, &lt;br/&gt;
t.TABLENAME, &lt;br/&gt;
t.TABLETYPE, &lt;br/&gt;
s.STATID, &lt;br/&gt;
s.REFERENCEID, &lt;br/&gt;
s.TABLEID, &lt;br/&gt;
s.CREATIONTIMESTAMP, &lt;br/&gt;
s.TYPE, &lt;br/&gt;
s.VALID, &lt;br/&gt;
s.COLCOUNT, &lt;br/&gt;
CAST(STATISTICS AS VARCHAR(40)) as STATISTICS &lt;br/&gt;
from sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID = t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID = t.TABLEID &lt;br/&gt;
where t.TABLENAME = &apos;TEST_TAB_2&apos; and c.ISINDEX = false; &lt;/p&gt;

&lt;p&gt;--Now if we create a foreign key constraint on TEST_TAB_2(ID), there will be no statistics created for it.&lt;br/&gt;
ALTER TABLE TEST_TAB_2&lt;br/&gt;
                ADD CONSTRAINT TEST_TAB_2_FK_1 &lt;br/&gt;
        		FOREIGN KEY(id) REFERENCES TEST_TAB_1(id);&lt;/p&gt;

&lt;p&gt;--still only one statistics row for TEST_TAB_2&lt;br/&gt;
select &lt;br/&gt;
c.TABLEID, &lt;br/&gt;
c.CONGLOMERATENUMBER, &lt;br/&gt;
c.CONGLOMERATENAME, &lt;br/&gt;
c.ISINDEX, &lt;br/&gt;
c.ISCONSTRAINT, &lt;br/&gt;
c.CONGLOMERATEID, &lt;br/&gt;
t.TABLEID, &lt;br/&gt;
t.TABLENAME, &lt;br/&gt;
t.TABLETYPE, &lt;br/&gt;
s.STATID, &lt;br/&gt;
s.REFERENCEID, &lt;br/&gt;
s.TABLEID, &lt;br/&gt;
s.CREATIONTIMESTAMP, &lt;br/&gt;
s.TYPE, &lt;br/&gt;
s.VALID, &lt;br/&gt;
s.COLCOUNT, &lt;br/&gt;
CAST(STATISTICS AS VARCHAR(40)) as STATISTICS &lt;br/&gt;
from sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID = t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID = t.TABLEID &lt;br/&gt;
where t.TABLENAME = &apos;TEST_TAB_2&apos; and c.ISINDEX = false; &lt;/p&gt;

&lt;p&gt;--Running statistics creation by hand will create 2nd statistics row for TEST_TAB_2&lt;br/&gt;
CALL SYSCS_UTIL.SYSCS_UPDATE_STATISTICS(&apos;APP&apos;,&apos;TEST_TAB_2&apos;, null); &lt;/p&gt;

&lt;p&gt;&amp;#8211; now will have 2 statistics rows for TEST_TAB_2&lt;br/&gt;
select &lt;br/&gt;
c.TABLEID, &lt;br/&gt;
c.CONGLOMERATENUMBER, &lt;br/&gt;
c.CONGLOMERATENAME, &lt;br/&gt;
c.ISINDEX, &lt;br/&gt;
c.ISCONSTRAINT, &lt;br/&gt;
c.CONGLOMERATEID, &lt;br/&gt;
t.TABLEID, &lt;br/&gt;
t.TABLENAME, &lt;br/&gt;
t.TABLETYPE, &lt;br/&gt;
s.STATID, &lt;br/&gt;
s.REFERENCEID, &lt;br/&gt;
s.TABLEID, &lt;br/&gt;
s.CREATIONTIMESTAMP, &lt;br/&gt;
s.TYPE, &lt;br/&gt;
s.VALID, &lt;br/&gt;
s.COLCOUNT, &lt;br/&gt;
CAST(STATISTICS AS VARCHAR(40)) as STATISTICS &lt;br/&gt;
from sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID = t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID = t.TABLEID &lt;br/&gt;
where t.TABLENAME = &apos;TEST_TAB_2&apos; and c.ISINDEX = false; &lt;/p&gt;

&lt;p&gt;--If I create foreign key on a column that does not share backing index with primary key, stats will get created automatically&lt;br/&gt;
ALTER TABLE TEST_TAB_2&lt;br/&gt;
                ADD CONSTRAINT TEST_TAB_2_FK_2 &lt;br/&gt;
        		FOREIGN KEY(id1) REFERENCES TEST_TAB_1(id);&lt;/p&gt;

&lt;p&gt;--will have additional constraint row for new foreign key constraint on TEST_TAB_2&lt;br/&gt;
select &lt;br/&gt;
c.TABLEID, &lt;br/&gt;
c.CONGLOMERATENUMBER, &lt;br/&gt;
c.CONGLOMERATENAME, &lt;br/&gt;
c.ISINDEX, &lt;br/&gt;
c.ISCONSTRAINT, &lt;br/&gt;
c.CONGLOMERATEID, &lt;br/&gt;
t.TABLEID, &lt;br/&gt;
t.TABLENAME, &lt;br/&gt;
t.TABLETYPE, &lt;br/&gt;
s.STATID, &lt;br/&gt;
s.REFERENCEID, &lt;br/&gt;
s.TABLEID, &lt;br/&gt;
s.CREATIONTIMESTAMP, &lt;br/&gt;
s.TYPE, &lt;br/&gt;
s.VALID, &lt;br/&gt;
s.COLCOUNT, &lt;br/&gt;
CAST(STATISTICS AS VARCHAR(40)) as STATISTICS &lt;br/&gt;
from sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID = t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID = t.TABLEID &lt;br/&gt;
where t.TABLENAME = &apos;TEST_TAB_2&apos; and c.ISINDEX = false; &lt;/p&gt;</description>
                <environment></environment>
        <key id="12551931">DERBY-5702</key>
            <summary>Creating a foreign key constraint does not automatically create a statistics row if foreign key constraint will share a backing index created for a primary key</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                            <label>derby_triage10_10</label>
                    </labels>
                <created>Fri, 20 Apr 2012 21:57:00 +0100</created>
                <updated>Tue, 18 Sep 2012 16:29:10 +0100</updated>
                                            <version>10.8.2.2</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13258636" author="mikem" created="Fri, 20 Apr 2012 23:35:26 +0100"  >&lt;p&gt;Is there any user level problem with this situation.  In this situation I think the optimizer in the worst case sees 2 indexes that are on exactly the same keys in same order.  One index is unique and one is not.  The optimizer should always choose the unique one, when it chooses unique indexes it should never look at the statistics.  &lt;/p&gt;

&lt;p&gt;If anyone chooses to fix this issue, they should look at optimizes creation of the statistic row - at least for single column indexes.  There is no need to scan the whole table when you know the underlying index is unique.  &lt;/p&gt;

&lt;p&gt;I would rate this issue as minor, unless a user level issue is known.&lt;/p&gt;</comment>
                            <comment id="13271690" author="mamtas" created="Wed, 9 May 2012 19:48:01 +0100"  >&lt;p&gt;While working on an upgrade test for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4115&quot; title=&quot;Provide a way to drop statistics information&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4115&quot;&gt;&lt;del&gt;DERBY-4115&lt;/del&gt;&lt;/a&gt;, I found that a missing statistics like this can be created with update statistics procedure but that procedure was added in 10.5 and hence is only available in 10.5 and higher. Additionally, A table compress is supposed to update the statistics as well which was added in 10.1 but I found that running table compress did not create this missing statistics. So, whenever we decide to fix this issue, we probably want to also see why table compress would not add missing statistics for a constraint which is sharing a backing index.&lt;/p&gt;</comment>
                            <comment id="13457888" author="knutanders" created="Tue, 18 Sep 2012 16:29:10 +0100"  >&lt;p&gt;Derby 10.10 triage: Adjusting priority and urgency per Mike&apos;s comments.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12548973">DERBY-5681</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Apr 2012 22:35:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>237763</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy09tr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>