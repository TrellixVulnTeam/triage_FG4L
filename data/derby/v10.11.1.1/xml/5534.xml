<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5534/DERBY-5534.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5534] ResultSet#updateFloat, #updateDouble do not check for NaN and other conditions on client</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5534</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In updateXXX, where XXX is one of Float or Double, embedded throws value out of range when the argument is Float.NaN or Double.NaN, the client does not catch it.&lt;/p&gt;

&lt;p&gt;The server will balk when the row is updated, though, in ResultSet#updateRow. It will be more regular if this is caught in updateXXX also on the client as other range errors are.  The SQL state seen is 22003, which is what embedded throws on updateXXX. See also &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5533&quot; title=&quot;Client differs from embedded when rs.updateInt overflows: 22015 vs 22003&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5533&quot;&gt;&lt;del&gt;DERBY-5533&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12534895">DERBY-5534</key>
            <summary>ResultSet#updateFloat, #updateDouble do not check for NaN and other conditions on client</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                            <label>derby_triage10_9</label>
                    </labels>
                <created>Tue, 13 Dec 2011 01:49:15 +0000</created>
                <updated>Sun, 20 May 2012 14:15:36 +0100</updated>
                                            <version>10.8.2.2</version>
                                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13168517" author="dagw" created="Tue, 13 Dec 2011 17:15:53 +0000"  >&lt;p&gt;Offline, Knut alerted me to the fact that related to this issue is the fact that the DB2 limits enforced by the Derby engine, are also not checked by the client on rs#updateXXX, but is only seen when rs#updateRow is performed as an error returned from the server. If we choose to lift the DB2 specific restriction (cf. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3398&quot; title=&quot;Support min/max values for Java types float/double in real/double columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3398&quot;&gt;&lt;del&gt;DERBY-3398&lt;/del&gt;&lt;/a&gt;), this asymmetry would disappear though.&lt;/p&gt;</comment>
                            <comment id="13171066" author="dagw" created="Fri, 16 Dec 2011 16:50:24 +0000"  >&lt;p&gt;Even if &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3398&quot; title=&quot;Support min/max values for Java types float/double in real/double columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3398&quot;&gt;&lt;del&gt;DERBY-3398&lt;/del&gt;&lt;/a&gt; were lifted, the client needs to check underflow, e.g. when trying to do updateDouble(Double.MIN_VALUE) on a REAL column. The server does check this, cf. SQLReal#setValue(double): it check against 0.0 before and after narrowing double to float.&lt;/p&gt;</comment>
                            <comment id="13172602" author="dagw" created="Mon, 19 Dec 2011 20:57:49 +0000"  >&lt;p&gt;Cf also &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5546&quot; title=&quot;ResultSet#updateBigDecimal on a REAL column does not do underflow checking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5546&quot;&gt;&lt;del&gt;DERBY-5546&lt;/del&gt;&lt;/a&gt;: even the embedded driver misses the underflow check when converting from BigDecimal: make sure to add it for client too when we fix this issue.&lt;/p&gt;</comment>
                            <comment id="13210427" author="kmarsden" created="Fri, 17 Feb 2012 18:26:54 +0000"  >
&lt;p&gt;Triage for 10.9.  Marking normal urgency also Newcomer.  Verified this test still fails when enabled for client. I am not totally sure what happens to the value, does something get updated since there is no exception?&lt;/p&gt;


&lt;p&gt;  This test in ParameterMappingTest&lt;/p&gt;

&lt;p&gt;        // Remove test when &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5534&quot; title=&quot;ResultSet#updateFloat, #updateDouble do not check for NaN and other conditions on client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5534&quot;&gt;DERBY-5534&lt;/a&gt; is fixed&lt;br/&gt;
        if (usingEmbedded()) &lt;/p&gt;
{
            assertUpdateState(rs, &quot;F04&quot;,
                              _X, Float.NaN, XXX_FLOAT, &quot;22003&quot;);
            assertUpdateState(rs, &quot;F04&quot;,
                              _X, Double.MIN_VALUE, XXX_DOUBLE, &quot;22003&quot;);

            // REAL DB2 limits: remove if DERBY-3398 is implemented
            assertUpdateState(rs, &quot;F04&quot;, bdSmallestPosFloatValue, &quot;22003&quot;);
            assertUpdateState(rs, &quot;F04&quot;, bdSmallestNegFloatValue, &quot;22003&quot;);

            assertUpdateState(rs, &quot;F04&quot;, bdMaxFloatValue, &quot;22003&quot;);
            assertUpdateState(rs, &quot;F04&quot;, bdMinFloatValue, &quot;22003&quot;);
        }


&lt;p&gt;here was 1 failure:&lt;br/&gt;
) testDerby5533UpdateXXX(org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest)junit.framework&lt;br/&gt;
ionFailedError: exception expected&lt;br/&gt;
       at org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest.assertUpdateState(ParameterMap&lt;br/&gt;
t.java:5051)&lt;br/&gt;
       at org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest.testDerby5533UpdateXXX(Paramet&lt;br/&gt;
ngTest.java:4775)&lt;br/&gt;
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:88)&lt;br/&gt;
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)&lt;br/&gt;
       at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
       at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
       at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
       at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
       at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
       at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
       at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
       at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
       at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
       at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
       at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
       at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 18,  Failures: 1,  Errors: 0&lt;/p&gt;
</comment>
                            <comment id="13210700" author="dagw" created="Sat, 18 Feb 2012 00:44:01 +0000"  >&lt;p&gt;Hi Kathey, cf this quote from the description &quot;The server will balk when the row is updated, though, in ResultSet#updateRow. It will be more regular if this is caught in updateXXX&quot;, i.e. we get an error, but later/in another method call than on embedded. In the test we only do updateXXX, so no exception.&lt;/p&gt;</comment>
                            <comment id="13279660" author="rsjay1976" created="Sun, 20 May 2012 05:37:15 +0100"  >&lt;p&gt;Curious in taking up this task. I also noted in comment that to reproduce this behavior, parametermappingtest need to be enabled for client. How can this be done?.&lt;/p&gt;</comment>
                            <comment id="13279742" author="rsjay1976" created="Sun, 20 May 2012 14:15:36 +0100"  >&lt;p&gt;Please ignore my previous query, I ran the tests and verified that the test runs in both embedded and network modes&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12534820">DERBY-5533</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12535489">DERBY-5546</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12384960">DERBY-3290</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12388178">DERBY-3398</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 17 Feb 2012 18:26:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>220579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0brj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35724</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>