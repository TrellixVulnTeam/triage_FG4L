<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2667/DERBY-2667.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2667] Improve diagnostic information for failed  derby JUnit tests</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2667</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>
&lt;p&gt;Provide a more full featured TestRunner for Derby testing.&lt;/p&gt;

&lt;p&gt;junit.textui.TestRunner is not very robust. It does not for example print the tests as they run or print chained exceptions, create separate files for the full report and just failures.   It would be great to have a standardized TestRunner that everyone uses.  Perhaps someone already has one that they would like to contribute as a starter.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12369643">DERBY-2667</key>
            <summary>Improve diagnostic information for failed  derby JUnit tests</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 May 2007 06:05:34 +0100</created>
                <updated>Mon, 4 May 2009 19:22:24 +0100</updated>
                            <resolved>Wed, 29 Apr 2009 16:49:06 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12496888" author="djd" created="Fri, 18 May 2007 15:37:39 +0100"  >&lt;p&gt;Not sure if &quot;robust&quot; is the right tem here, do you really mean a &quot;more informative&quot; test runner?&lt;/p&gt;

&lt;p&gt;junit.textui.TestRunner does in fact print chained exceptions, it&apos;s Derby that is not chaining the exceptions. I had a fix that did chain the exceptions but it broke on jdk16 so it was backed out and put into a Jira entry which I think has yet to be fixed. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2472&quot; title=&quot;Use Throwable.initCause() to improve error reporting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2472&quot;&gt;&lt;del&gt;DERBY-2472&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the separate file issue, have you looked at the way ant runs junit tests? We have the top-level junit-all target and that provides a whole lot of information in XML that can help in diagnosing issues. It&apos;s also standard so that others tools know how to handle the information, e.g. CruiseControl presents the ant junit task output as web-pages complete with sections for failed tests etc.&lt;/p&gt;</comment>
                            <comment id="12496914" author="kmarsden" created="Fri, 18 May 2007 16:33:26 +0100"  >&lt;p&gt;I am having trouble running junit-all and junitreport.  (Permissions errors of course).  Any idea how to resolve this issue?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/problem-with-junitreport-target-tf3753226.html#a10606491&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/problem-with-junitreport-target-tf3753226.html#a10606491&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12496921" author="djd" created="Fri, 18 May 2007 17:01:45 +0100"  >&lt;p&gt;junitreport has an existing issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2234&quot; title=&quot;ant junitreport gives fatal error during transformation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2234&quot;&gt;&lt;del&gt;DERBY-2234&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also see some permission problems running junit-all (in cruise control), I was planning on looking into it today to see if it was my environment or not.&lt;/p&gt;</comment>
                            <comment id="12496950" author="mikem" created="Fri, 18 May 2007 17:53:58 +0100"  >&lt;p&gt;What I am looking for is a runner that produces text based output that is appropriate for offline nightly test suites.  I like to run whatever test runner the systems that are running regression tests against the code line are.  Currently I believe this is sun jvm nightly, sun jvm tinderbox and ibm jvm nightly.  This was if I match my environment it is likely the tool will work.    While it is great&lt;br/&gt;
that people can pick/choose their runner - it would be nice to have at least one runner recommended as the default runner that&lt;br/&gt;
developers could use and nightly regression tests would also use.&lt;/p&gt;

&lt;p&gt;When I started I first tried the ant option, but immediately ran into memory issues, but noticed nightly runs using the other tools&lt;br/&gt;
just worked. &lt;/p&gt;

&lt;p&gt;What I am looking for is:&lt;br/&gt;
o a tool that will run all the tests without failing, and is tested to continue to do so every night.&lt;br/&gt;
o complete set of stack traces, including any nested exceptions.  Dan points out this is likely a derby issue&lt;br/&gt;
o the ability to run all the tests and then come back and have a shot at figuring out what went wrong and when.  Things&lt;br/&gt;
    that would help are:&lt;br/&gt;
    o printing each test as it runs.  Sometimes when you get errors in teardown the stack gives you no idea what test the teardown&lt;br/&gt;
        actually is failing for.&lt;br/&gt;
    o preserve the persistent information when a failure occurs.  Most important is the derby.log as it may have more information. &lt;br/&gt;
        But a copy of the database is also interesting, especially in cases of non reproducible errors where this may have been &lt;br/&gt;
       our one chance to gather info, or to allow someone to debug a system specific problem when they don&apos;t have access to that&lt;br/&gt;
       type of system. &lt;br/&gt;
        This may be a test issue rather than the runner.  I wonder if we just need to write some generic &quot;tearDown&quot; that  on error or&lt;br/&gt;
         failure copies current state somewhere&lt;/p&gt;</comment>
                            <comment id="12496976" author="djd" created="Fri, 18 May 2007 18:41:08 +0100"  >&lt;p&gt;I think most of those requirements are fulfilled by the ant junit task, except for the last one, which as you say is a test issue not a test runner issue.&lt;/p&gt;

&lt;p&gt;I don&apos;t see any memory issues running junit-all, I run it as a continuous integration test against Derby. I am getting a few tests failing but have only just started looking into that.&lt;/p&gt;

&lt;p&gt;Note that with the first one I&apos;m looking at the lack of information in trying to solve the failure is not due to a test runner issue, but Derby not providing any information, e.g. I just entered &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2671&quot; title=&quot;Errors/messages early in starting the network server through NetworkServerControl.start() are not reported to the PrintWriter passed into start().&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2671&quot;&gt;&lt;del&gt;DERBY-2671&lt;/del&gt;&lt;/a&gt; for the bug where early failures in starting the network server are lost.&lt;/p&gt;

&lt;p&gt;I think that dependance on a single junit test runner is not a good approach,  Derby and the tests themselves should be providing information that can be useful in any test runner. Diversity in test runners may also expose bugs in Derby, e.g. I would say that I only entered &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2671&quot; title=&quot;Errors/messages early in starting the network server through NetworkServerControl.start() are not reported to the PrintWriter passed into start().&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2671&quot;&gt;&lt;del&gt;DERBY-2671&lt;/del&gt;&lt;/a&gt; because I was running in a different test runner to my usual use of the swing one.&lt;/p&gt;</comment>
                            <comment id="12498125" author="knutanders" created="Wed, 23 May 2007 07:27:26 +0100"  >&lt;p&gt;I&apos;m attaching the two test runners I have written and granting licence to ASF in case someone wants to play with them. MemRunner runs all the tests in suites.All and reports the increase/decrease in memory footprint for each fixture. TimeRunner runs all the tests in suites.All and reports how many milliseconds each fixture took.&lt;/p&gt;</comment>
                            <comment id="12502329" author="olesolberg" created="Thu, 7 Jun 2007 14:01:36 +0100"  >&lt;p&gt;In the regression testing and also in more experimental testing I have felt a need for more details in the JUnit test reports - e.g. to convince myself that a test was really executed.&lt;br/&gt;
I have done this by modifying &apos;java/testing/org/apache/derbyTesting/junit/BaseTestCase.java&apos; to print the test method name, and have also included a printout of the time (in ms.) used by the test method.&lt;br/&gt;
I use &quot;-Dderby.tests.trace=true&quot; to turn this on.&lt;br/&gt;
  Attachement JUnitMethodTrace.diff.txt.&lt;/p&gt;

&lt;p&gt;&apos;java/testing/org/apache/derbyTesting/unitTests/junit/FormatableBitSetTest.java&apos; currently uses JUnit TestCase and would thus not give the desired extra information: The JUnitMethodTrace_Extra.diff.txt patch changes that by using &apos;BaseTestCase&apos;.&lt;br/&gt;
  Attachement JUnitMethodTrace_Extra.diff.txt &lt;/p&gt;




&lt;p&gt;Example output:&lt;br/&gt;
.&lt;br/&gt;
testSetCharacterStream used 200ms .&lt;br/&gt;
testGetAsciiStream used 664ms .&lt;br/&gt;
testGetCharacterStream used 638ms .&lt;br/&gt;
testGetCharacterStreamWithUnicode used 817ms .&lt;br/&gt;
testTriggersWithClobColumn used 2453ms .&lt;br/&gt;
testGetSubString used 431ms E.&lt;br/&gt;
testGetSubStringWithUnicode used 855ms .&lt;br/&gt;
testPositionString used 713ms .&lt;br/&gt;
testPositionStringWithUnicode used 739ms .&lt;br/&gt;
testPositionClob used 4204ms .&lt;br/&gt;
testPositionClobWithUnicode used 4832ms .&lt;br/&gt;
testSmallClobFields used 82ms .&lt;br/&gt;
testGetClobFromIntColumn used 302ms F.&lt;br/&gt;
testSetClobToIntColumn used 412ms F.&lt;br/&gt;
testRaisingOfExceptionsClob used 523ms F.&lt;br/&gt;
testSetClob used 1116ms .&lt;br/&gt;
testPositionAgressive used 9073ms .&lt;br/&gt;
testClobAfterClose used 587ms .&lt;br/&gt;
testLockingClob used 60695ms .&lt;br/&gt;
testLockingWithLongRowClob used 60178ms .&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;/p&gt;</comment>
                            <comment id="12509215" author="knutanders" created="Fri, 29 Jun 2007 23:09:34 +0100"  >&lt;p&gt;Thanks Ole! This looks useful to me.&lt;/p&gt;

&lt;p&gt;Committed JUnitMethodTrace.diff.txt with revision 552046 after resolving a conflict with another commit in TestConfiguration. I also removed the two new instance variables in BaseTestCase since testCaseName could be accessed through getName(), and the call to TestConfiguration.getCurrent().doTrace() should happen in runBare() (calling it from the constructor could cause the wrong TestConfiguration object to be used).&lt;/p&gt;</comment>
                            <comment id="12509216" author="knutanders" created="Fri, 29 Jun 2007 23:10:15 +0100"  >&lt;p&gt;Committed JUnitMethodTrace_Extra.diff.txt with revision 552047.&lt;/p&gt;</comment>
                            <comment id="12566403" author="mkutty" created="Thu, 7 Feb 2008 00:06:22 +0000"  >&lt;p&gt;Attaching a patch which will copy the derby.log file of the failed test to the dir user.dir/fail/clientname/testclass/testname. Please review and if looks useful please commit&lt;/p&gt;</comment>
                            <comment id="12566407" author="djd" created="Thu, 7 Feb 2008 00:17:34 +0000"  >&lt;p&gt;It would be good to add comments to the code so that it&apos;s clear to readers what the purpose of the code is.&lt;/p&gt;

&lt;p&gt;The streams for the files don&apos;t seem to get closed.&lt;/p&gt;

&lt;p&gt;The caught exception is never re-thrown, so this will hide any failures.&lt;/p&gt;

&lt;p&gt;Fetching the property user.dir is likely to result in a security exception since it&apos;s not in a priv block,&lt;br/&gt;
the class has a utility method for reading system properties, but it&apos;s not needed since one does&lt;br/&gt;
not need to read user.dir to access files in the current directory. Something like new File(&quot;system&quot;, &quot;derby.log&quot;) should work.&lt;/p&gt;

&lt;p&gt;Also it would be good to test that the file derby.log exists, it&apos;s not guaranteed that a test will create it.&lt;/p&gt;

&lt;p&gt;Also probably better not to construct file paths using File.separator, instead use File objects.&lt;/p&gt;</comment>
                            <comment id="12567626" author="dyret" created="Mon, 11 Feb 2008 13:12:12 +0000"  >&lt;p&gt;Removing the patch flag since the latest review comments indicate that another rev of the patch is required.&lt;/p&gt;</comment>
                            <comment id="12569444" author="mkutty" created="Fri, 15 Feb 2008 22:36:26 +0000"  >&lt;p&gt;Thanks for the comments Dan. Please review the new patch attached. I hope I answered all your comments in that patch. Please review and if everything looks good, please commit&lt;/p&gt;</comment>
                            <comment id="12570179" author="knutanders" created="Tue, 19 Feb 2008 11:18:22 +0000"  >&lt;p&gt;The check of testDir.exists() looks misplaced. If it returns false, the construction of a FileInputStream would have failed with FileNotFoundException two lines above it.&lt;/p&gt;

&lt;p&gt;Also, I think it would be best only to create the FileOutputStream if testDir exists. Otherwise, we&apos;ll create an empty file for each failing test that doesn&apos;t have a derby.log file.&lt;/p&gt;

&lt;p&gt;Many of the lines use a mix of tabs and spaces for indentation.&lt;/p&gt;

&lt;p&gt;Should new File(&quot;System&quot;, &quot;derby.log&quot;); use &quot;system&quot; instead? I don&apos;t think it will work on case-sensitive file systems, since the directory created by the framework is called &quot;system&quot;.&lt;/p&gt;</comment>
                            <comment id="12570367" author="myrna" created="Tue, 19 Feb 2008 18:49:26 +0000"  >&lt;p&gt;I am wondering why you choose to only catch Exceptions? &lt;br/&gt;
For instance, a &apos;normal&apos; failure would be likely a Throwable, e.g.  a junit.framework.AssertionFailedError...&lt;br/&gt;
Maybe it makes sense to save derby.log when a Throwable is encountered?&lt;/p&gt;</comment>
                            <comment id="12570512" author="mkutty" created="Wed, 20 Feb 2008 00:45:39 +0000"  >&lt;p&gt;Thanks for the comments. Please find the modified patch and I hope I tried to  address all your comments in that patch. Please review&lt;/p&gt;</comment>
                            <comment id="12570621" author="knutanders" created="Wed, 20 Feb 2008 09:12:44 +0000"  >&lt;p&gt;Is the check for (running != null) necessary? I don&apos;t see how it could be null.&lt;/p&gt;

&lt;p&gt;First two lines use spaces for indentation, the rest use tabs. Would be good to use one of them consistently. Since the surrounding code uses spaces, I think that&apos;s the best option.&lt;/p&gt;

&lt;p&gt;Should the call to getFailureFolder() also be moved inside the if? Then we don&apos;t create a folder unless we have to.&lt;/p&gt;

&lt;p&gt;Would it make sense to put a try/finally block inside the catch block and re-throw the exception in the finally clause? This way we make sure that the original exception is not hidden if saving derby.log fails for some reason.&lt;/p&gt;</comment>
                            <comment id="12571227" author="mkutty" created="Thu, 21 Feb 2008 23:14:53 +0000"  >&lt;p&gt;Thanks for your comments. Here is the new patch. Please ereview&lt;/p&gt;</comment>
                            <comment id="12571270" author="myrna" created="Fri, 22 Feb 2008 03:17:36 +0000"  >&lt;p&gt;Thanks Manjula, I like the latest patch.&lt;/p&gt;

&lt;p&gt;I committed patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2667&quot; title=&quot;Improve diagnostic information for failed  derby JUnit tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2667&quot;&gt;&lt;del&gt;DERBY-2667&lt;/del&gt;&lt;/a&gt;_diff_02_21.txt with revision 630077.&lt;/p&gt;

&lt;p&gt;Probably superfluous, but, I do want to point out that  the TestConfiguration.getFailureFolder creates a &apos;fail&apos; folder, and all directories underneath (fail/&amp;lt;configuration&amp;gt;/&amp;lt;testName&amp;gt;/&amp;lt;failedFixtureName&amp;gt;).&lt;br/&gt;
This means, that if you run a subsequent failing fixture test in the same top level directory, previous derby.logs will be overwritten, and also, old run&apos;s fail directories won&apos;t get cleaned out.&lt;/p&gt;</comment>
                            <comment id="12571303" author="knutanders" created="Fri, 22 Feb 2008 08:15:01 +0000"  >&lt;p&gt;Thanks for addressing my comments. Please double check the indentation settings in your IDE, though. The latest patch reintroduced the strange indentation from the earlier patches (each line starts with eight space characters, but for some reason tabs are appended if more indentation is needed).&lt;/p&gt;</comment>
                            <comment id="12571603" author="kmarsden" created="Fri, 22 Feb 2008 21:30:36 +0000"  >&lt;p&gt;In eclipse I see a warning for this finally block&lt;br/&gt;
     	finally&lt;/p&gt;
{        		
        			throw running;
        	}
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;finally block does not complete normally.&lt;/p&gt;

&lt;p&gt;I think this is because we lose any exception that occurs in saving off the derby.log file.&lt;br/&gt;
I assume though that that was intentional because it is more important to preserve the&lt;br/&gt;
exception that occurred running the  test, than the one that occurred saving the file.  Is &lt;br/&gt;
that correct.  I found this thread about the warning:&lt;br/&gt;
&lt;a href=&quot;http://dev.eclipse.org/newslists/news.eclipse.tools.jdt/msg10787.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dev.eclipse.org/newslists/news.eclipse.tools.jdt/msg10787.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12571607" author="mkutty" created="Fri, 22 Feb 2008 21:45:10 +0000"  >&lt;p&gt;Yes, that was my intention. But no harm if I can catch the exception from saving the file too. Do you have any good suggestion for that?&lt;/p&gt;</comment>
                            <comment id="12571630" author="kmarsden" created="Fri, 22 Feb 2008 23:02:35 +0000"  >&lt;p&gt;No suggestion. I just hadn&apos;t seen the warning before so wanted to make sure I understood what it meant.&lt;/p&gt;</comment>
                            <comment id="12572428" author="kristwaa" created="Tue, 26 Feb 2008 11:15:56 +0000"  >&lt;p&gt;&apos;derby-2667-WriteExceptionsToFileAsTheyHappen.diff&apos; is a patch that makes BaseTestCase also write the stack trace to file when an error occurs. The file will be written to the same location as derby.log, and currently it will overwrite any existing file.&lt;br/&gt;
I have only tested it lightly, but it seems to work fine for me. Is it something we could consider adding?&lt;/p&gt;

&lt;p&gt;The reason why I wrote it, is that it is sometimes very annoying to wait for suites.All to finish when you get an error/failure on the first line of dots...&lt;/p&gt;</comment>
                            <comment id="12572458" author="dagw" created="Tue, 26 Feb 2008 12:45:46 +0000"  >&lt;p&gt;Re derby-2667-WriteExceptionsToFileAsTheyHappen.diff: Why not append to the fle instead of overwriting?  I tend to find the first error/failure the most interesting...&lt;/p&gt;</comment>
                            <comment id="12572461" author="kristwaa" created="Tue, 26 Feb 2008 13:07:49 +0000"  >&lt;p&gt;Well, maybe I misunderstood, but if you overwrite, it will be because you run the test / suite again, won&apos;t it?&lt;br/&gt;
The naming logic of the failure folder seems  to consist of something related to connection / JDBCClient, the test class and the test method.&lt;br/&gt;
So as an example:&lt;br/&gt;
./Embedded_40/BlobClob4BlobTest/testBlobAfterClosingConnection/stacktrace.out&lt;/p&gt;

&lt;p&gt;I just assumed there could be only one exception thrown for a single run (in runBare), but maybe my comment above regarding overwriting was a bit confusing.&lt;br/&gt;
I haven&apos;t actually studied the logic for the failure folder naming, but maybe someone else has some info?&lt;/p&gt;

&lt;p&gt;But of course, appending to the file might still be a good thing to do, or maybe a timestamp or something in the filename?&lt;br/&gt;
(if you tend to run the tests from the same location over and over again when testing/debugging)&lt;/p&gt;</comment>
                            <comment id="12572468" author="dagw" created="Tue, 26 Feb 2008 13:37:35 +0000"  >&lt;p&gt;Thanks, Kristian, I was not thinking of the multiple runs case. As long as the first failure/error&lt;br/&gt;
in one run is not clobbered by a subsequent one in the same run, I am OK with this solution.&lt;/p&gt;
</comment>
                            <comment id="12572496" author="kristwaa" created="Tue, 26 Feb 2008 14:33:59 +0000"  >&lt;p&gt;Dag, it is a valid concern and I have not actually verified that no files are overwritten in all configurations.&lt;br/&gt;
People should feel free to do this, or we could just do the easy thing and add a timestamp and append to the file.&lt;/p&gt;</comment>
                            <comment id="12703914" author="kmarsden" created="Wed, 29 Apr 2009 01:35:59 +0100"  >&lt;p&gt;Several improvements have been made under this issue over several releases, actually none to the TestRunner itself.   I am thinking resolving it now so more specific issues can be opened and resolved in the release where they were fixed. There is one outstanding patch from Kristian that would be very useful, but the patch no longer applies to trunk.&lt;/p&gt;

&lt;p&gt;Should I leave this open until that makes it in, or just close this one out and open a new one to print the failure trace to the fail directory as they happen?&lt;/p&gt;</comment>
                            <comment id="12704013" author="kristwaa" created="Wed, 29 Apr 2009 08:05:15 +0100"  >&lt;p&gt;I&apos;d say close this one and create a new one for the second feature.&lt;br/&gt;
Once it is logged, I&apos;ll refresh the patch and ready it for review.&lt;/p&gt;</comment>
                            <comment id="12704165" author="kmarsden" created="Wed, 29 Apr 2009 16:48:07 +0100"  >&lt;p&gt;Changing title to more accurately reflect what was done under this issue.&lt;/p&gt;</comment>
                            <comment id="12704166" author="kmarsden" created="Wed, 29 Apr 2009 16:49:06 +0100"  >&lt;p&gt;Closing this issue. I will open up another one for the pending patch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12424182">DERBY-4199</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12374925" name="DERBY-2667_diff_02_06.txt" size="1414" author="mkutty" created="Thu, 7 Feb 2008 00:06:22 +0000"/>
                            <attachment id="12375724" name="DERBY-2667_diff_02_15.txt" size="1523" author="mkutty" created="Fri, 15 Feb 2008 22:36:26 +0000"/>
                            <attachment id="12376178" name="DERBY-2667_diff_02_21.txt" size="1829" author="mkutty" created="Thu, 21 Feb 2008 23:14:53 +0000"/>
                            <attachment id="12375982" name="DERBY-2667_diff_2_19.txt" size="1533" author="mkutty" created="Wed, 20 Feb 2008 00:45:39 +0000"/>
                            <attachment id="12374924" name="DERBY-2667_stat_02_06.txt" size="69" author="mkutty" created="Thu, 7 Feb 2008 00:06:22 +0000"/>
                            <attachment id="12375723" name="DERBY-2667_stat_02_15.txt" size="71" author="mkutty" created="Fri, 15 Feb 2008 22:36:26 +0000"/>
                            <attachment id="12375981" name="DERBY-2667_stat_02_19.txt" size="69" author="mkutty" created="Wed, 20 Feb 2008 00:45:39 +0000"/>
                            <attachment id="12376177" name="DERBY-2667_stat_02_21.txt" size="69" author="mkutty" created="Thu, 21 Feb 2008 23:14:53 +0000"/>
                            <attachment id="12359170" name="JUnitMethodTrace.diff.txt" size="4999" author="olesolberg" created="Thu, 7 Jun 2007 14:01:31 +0100"/>
                            <attachment id="12359171" name="JUnitMethodTrace_Extra.diff.txt" size="833" author="olesolberg" created="Thu, 7 Jun 2007 14:01:36 +0100"/>
                            <attachment id="12357954" name="MemRunner.java" size="1184" author="knutanders" created="Wed, 23 May 2007 07:27:26 +0100"/>
                            <attachment id="12357953" name="TimeRunner.java" size="900" author="knutanders" created="Wed, 23 May 2007 07:27:26 +0100"/>
                            <attachment id="12376477" name="derby-2667-WriteExceptionsToFileAsTheyHappen.diff" size="1714" author="kristwaa" created="Tue, 26 Feb 2008 11:15:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 May 2007 14:37:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30559</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0xov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39276</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>