<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:24:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3270/DERBY-3270.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3270] Delayed (on-demand) creation of current user schema makes select from view belonging to other schema fail.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3270</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The enclosed repro fails with error 42Y07 &apos;Schema BILL does not exist&apos;, even though&lt;br/&gt;
the query does not reference that schema; it selects from joe.myview.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12384407">DERBY-3270</key>
            <summary>Delayed (on-demand) creation of current user schema makes select from view belonging to other schema fail.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Dec 2007 13:46:19 +0000</created>
                <updated>Thu, 6 Mar 2014 00:05:44 +0000</updated>
                            <resolved>Fri, 16 Jan 2009 18:57:34 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12550450" author="dagw" created="Tue, 11 Dec 2007 14:04:07 +0000"  >&lt;p&gt;A workaround is to make the referenced table in the view contain an explicit schema prefix (joe.mytable)&lt;br/&gt;
in this case. Another workaround is to create a schema object for the user referencing the view.&lt;/p&gt;

&lt;p&gt;Note that the table name &lt;b&gt;is&lt;/b&gt; eventually resolved correctly; a similar table, bill.mytable in the repro,&lt;br/&gt;
is not chosen, even if the view reference does not have an explicit schema in the table reference.&lt;/p&gt;</comment>
                            <comment id="12647079" author="kmarsden" created="Wed, 12 Nov 2008 22:14:57 +0000"  >&lt;p&gt;Here is the full stack trace.&lt;br/&gt;
java.sql.SQLException: Schema &apos;BILL&apos; does not exist&lt;br/&gt;
java.sql.SQLException: Schema &apos;BILL&apos; does not exist&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2201)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:614)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(EmbedStatement.java:152)&lt;br/&gt;
        at Main.doSingleDriver(Main.java:55)&lt;br/&gt;
        at Main.main(Main.java:71)&lt;br/&gt;
Caused by: ERROR 42Y07: Schema &apos;BILL&apos; does not exist&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(DataDictionaryImpl.java:1487)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.QueryTreeNode.getSchemaDescriptor(QueryTreeNode.java:1343)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.QueryTreeNode.getSchemaDescriptor(QueryTreeNode.java:1276)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.TableName.bind(TableName.java:238)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.FromBaseTable.getMatchingColumn(FromBaseTable.java:2524)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.FromList.bindColumnReference(FromList.java:602)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ColumnReference.bindExpression(ColumnReference.java:349)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumn.bindExpression(ResultColumn.java:588)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressions(ResultColumnList.java:696)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SelectNode.bindExpressions(SelectNode.java:443)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.FromSubquery.bindExpressions(FromSubquery.java:216)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.FromList.bindExpressions(FromList.java:350)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SelectNode.bindExpressions(SelectNode.java:427)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressions(DMLStatementNode.java:227)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DMLStatementNode.bind(DMLStatementNode.java:140)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:236)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:314)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConne&lt;br/&gt;
ctionContext.java:796)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
        ... 3 more&lt;/p&gt;</comment>
                            <comment id="12648779" author="kmarsden" created="Tue, 18 Nov 2008 22:15:27 +0000"  >&lt;p&gt;Attached is my first attempt at a fix for this issue.  The fix changes TableName.bind() to call the getSchemaDescriptor call that does not throw an exception instead of the one that does and to set the schemaName to null if it gets a null SchemaDescriptor back.  The patch also adds a test for this issue.&lt;br/&gt;
The patch has the virtues of 1) fixing the issue and 2) passing regression tests.&lt;/p&gt;

&lt;p&gt;I am not really sure that this is the right fix though.  I don&apos;t understand why we are trying to bind to schema &quot;bill&quot; at all when the select is directly from the joe schema.  The query in the end with this fix does indeed select from the joe schema, but why the intermediate step of binding to bill I don&apos;t know.  I&apos;d appreciate any input on the issue and the patch.&lt;/p&gt;


</comment>
                            <comment id="12649431" author="dagw" created="Thu, 20 Nov 2008 17:52:45 +0000"  >&lt;p&gt;What seems to be the problem is the following. The column reference&lt;br/&gt;
(A; expanded from *) is attempted bound against the table MYTABLE&lt;br/&gt;
twice inside FromBaseTable#getMatchingColumn: &lt;/p&gt;

&lt;p&gt;First, when the view is created. At this time the current compilation&lt;br/&gt;
schema is JOE and there is no problem.&lt;/p&gt;

&lt;p&gt;Second, the SELECT is bound, the view is expanded to a subquery (under&lt;br/&gt;
DMLStatementNode#bind&apos;s call to bindTables-&amp;gt;bindNonVTITables, parsed&lt;br/&gt;
and table reference bound using the original schema, see comment in&lt;br/&gt;
that method), and then later the expressions are bound under&lt;br/&gt;
DMLStatementNode#bind&apos;s call to bindExpressions. This time the&lt;br/&gt;
compilation schema is reset to BILL, however. &lt;br/&gt;
In FromBaseTable#getMatchingColumn, the call:&lt;/p&gt;

&lt;p&gt;  columnsTableName.bind(this.getDataDictionary());&lt;/p&gt;

&lt;p&gt;tries to bind the unqualified table name (MYTABLE) and finds the current schema&lt;br/&gt;
BILL. If BILL already exists, this goes well, if not, we see&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3270&quot; title=&quot;Delayed (on-demand) creation of current user schema makes select from view belonging to other schema fail.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3270&quot;&gt;&lt;del&gt;DERBY-3270&lt;/del&gt;&lt;/a&gt;. Now, if this is bound incorrectly, why does it work? It&lt;br/&gt;
seems this binding is inconsequential, in that columnsTableName is a&lt;br/&gt;
local variable, and if we follow the logic in getMatchingColumn after&lt;br/&gt;
the binding, we see that the matching happens with this call:&lt;/p&gt;

&lt;p&gt;  if (columnsTableName == null || columnsTableName.equals(exposedTableName))&lt;br/&gt;
  {&lt;br/&gt;
     resultColumn = resultColumns.getResultColumn(columnReference.getColumnName());&lt;/p&gt;

&lt;p&gt;exposedTableName has the same (wrong) binding, derived from&lt;br/&gt;
FromTable#origTableName, so the equals test works. Next, we basically&lt;br/&gt;
just checks if &quot;A&quot; is present in resultColumns. resultColumns is&lt;br/&gt;
correct since the table was bound correctly already.&lt;/p&gt;

&lt;p&gt;I am not sure what the right fix is here, though. It would appear that&lt;br/&gt;
binding schema incorrectly as done in getMatchingColumn (and for origTableName) &lt;br/&gt;
is not good, and the first patch doesn&apos;t address that. &lt;/p&gt;

&lt;p&gt;Maybe we could note the original compilation schema in the root of the view subquery&lt;br/&gt;
subsituted from the view name in the original query and find that&lt;br/&gt;
(walking up the tree) when the current default schema is looked up&lt;br/&gt;
somehow?&lt;/p&gt;</comment>
                            <comment id="12649441" author="rhillegas" created="Thu, 20 Nov 2008 18:31:12 +0000"  >&lt;p&gt;Thanks for this analysis, Dag. It seems to me that the problem could be fixed if the second binding did not occur. Maybe the view substitution logic could mark the subquery as &quot;already bound&quot; and this  could short-circuit the later re-binding. Haven&apos;t looked at the code and am just waving my hands here.&lt;/p&gt;</comment>
                            <comment id="12649759" author="kmarsden" created="Fri, 21 Nov 2008 19:02:57 +0000"  >&lt;p&gt;Unchecking patch available while I try a new approach. Thanks Dag and Rick for the comments. I will try to digest them and come up with something better.&lt;/p&gt;</comment>
                            <comment id="12649846" author="dagw" created="Fri, 21 Nov 2008 23:22:30 +0000"  >&lt;p&gt;Here is a patch suggestion (derby-3270-dhw) that makes ViewsTest and the lang suite run ok. Haven&apos;t run all regressions yet. Could this be a reasonable solution? It basically takes note of the &lt;br/&gt;
compilation schema of the view when it is being expanded and sets it as current compilation schema when expressions in the subquery are being bound, too..&lt;/p&gt;
</comment>
                            <comment id="12649859" author="dagw" created="Fri, 21 Nov 2008 23:55:20 +0000"  >&lt;p&gt;Re-attaching the patch; removing a superfluous diff from my experimenting.&lt;/p&gt;</comment>
                            <comment id="12650284" author="kmarsden" created="Mon, 24 Nov 2008 19:13:59 +0000"  >&lt;p&gt;Thanks Dag for the patch!  I noticed a couple small typos in the comments&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If this subquery represents and expanded view, we need this to bind&lt;br/&gt;
I think it should be &quot;an&quot; instead of  &quot;and&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;being froma view.&lt;br/&gt;
&quot;from&quot; and &quot;a&quot; should be  separate words.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As for the patch itself, I am not sure I understand the impact of changing the compilation schema in other contexts.  It would be good if someone else more familiar with this code could review.  Would you like me to run tests with the patch? I&apos;d be happy to do so.&lt;/p&gt;
</comment>
                            <comment id="12650370" author="dagw" created="Mon, 24 Nov 2008 23:03:33 +0000"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;I did run the regression successfully. The intention is that the view&apos;s compilation schema only be used&lt;br/&gt;
when binding the part of the query tree that represents a view expansion.  I guess query transformations/optimizations could come into play and blur the limits of what is what in the tree, but I would have thought that only happened after binding time. When you say other contexts,&lt;br/&gt;
I am not sure what you are referring to, but I would also appreciate if someone who knows this&lt;br/&gt;
code better could have a look at it, I freely admit I can&apos;t overview all the possible consequences here. Note that Rick did something similar for computed column computation, cf. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3945&quot; title=&quot;Generation clauses which mention user-coded functions may produce different resuls depending on who performs the triggering INSERT/UPDATE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3945&quot;&gt;&lt;del&gt;DERBY-3945&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I&apos;ll upload a revision to fix the typos.&lt;/p&gt;</comment>
                            <comment id="12650411" author="dagw" created="Tue, 25 Nov 2008 00:32:34 +0000"  >&lt;p&gt;Uploaded dhw-2 patch fixing typos, eol whitespace and long lines.&lt;/p&gt;</comment>
                            <comment id="12650612" author="bryanpendleton" created="Tue, 25 Nov 2008 16:18:12 +0000"  >&lt;p&gt;Assuming all the tests pass, I think Dag&apos;s suggested fix sounds promising.&lt;/p&gt;

&lt;p&gt;In the code itself, the terms &quot;origCompilationSchema&quot; and &quot;currCompilationSchema&quot;&lt;br/&gt;
seem perhaps too generic. It would be interesting to consider whether the&lt;br/&gt;
code is any more self-evident if we used the terms &quot;statementCompilationSchema&quot;&lt;br/&gt;
and &quot;expandedViewCompilationSchema&quot; or something like that. Perhaps that&lt;br/&gt;
aids in comprehension, or perhaps it just crufts up the code even more.&lt;/p&gt;

&lt;p&gt;Views, triggers, procedures, constraints and other &quot;deferred&quot; compilation&lt;br/&gt;
objects in the language seem to be thorny. They involve little snippets of SQL which&lt;br/&gt;
are parsed and compiled at awkward times in processing, and the rules for&lt;br/&gt;
how to interpret the ambiguities that arise are complex. It would be nice if we&lt;br/&gt;
can figure out ways to treat these various cases in common, so as Dag observed&lt;br/&gt;
mimic&apos;ing what we do for generated columns in view processing seems on the&lt;br/&gt;
face of it appealing.&lt;/p&gt;</comment>
                            <comment id="12650650" author="kmarsden" created="Tue, 25 Nov 2008 17:53:38 +0000"  >&lt;p&gt;Unassigning myself from this issue. Looks like Dag has a promising patch and I am out for a while and don&apos;t want to hold up progress.&lt;/p&gt;</comment>
                            <comment id="12651674" author="dagw" created="Fri, 28 Nov 2008 22:00:57 +0000"  >&lt;p&gt;I plan to see if there is a way to share logic for the cases where we temporarily set the current schema&lt;br/&gt;
back; at a minimum to make naming uniform. I&apos;ll be out the next two week, so feel free&lt;br/&gt;
to grab this issue.&lt;/p&gt;</comment>
                            <comment id="12661404" author="dagw" created="Wed, 7 Jan 2009 01:43:05 +0000"  >&lt;p&gt;Uploading a new version of this patch, derby-3270-dhw-3, which&lt;br/&gt;
introduces new push/pop methods to the compiler context to save the&lt;br/&gt;
default compilation schema when it needs to be temporarily changed.  I&lt;br/&gt;
have made use of this in all the three places where this is currently&lt;br/&gt;
done, so as to hopefully make it easier to maintain this pattern.&lt;/p&gt;

&lt;p&gt;Re-running regressions.&lt;/p&gt;
</comment>
                            <comment id="12661659" author="rhillegas" created="Wed, 7 Jan 2009 18:42:26 +0000"  >&lt;p&gt;Thanks, Dag. Factoring out this common logic seems like a great idea to me.&lt;/p&gt;</comment>
                            <comment id="12663011" author="dagw" created="Mon, 12 Jan 2009 17:13:58 +0000"  >&lt;p&gt;Thanks, Rick.&lt;br/&gt;
I intend to commit this in a couple of days if there are no further comments.&lt;/p&gt;</comment>
                            <comment id="12664616" author="dagw" created="Fri, 16 Jan 2009 18:57:34 +0000"  >&lt;p&gt;Resolving committed patch derby-3270-dhw-3 as svn 735084.&lt;br/&gt;
Not closing until we decide whether this should be backported.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                                                <inwardlinks description="Is contained by">
                                        <issuelink>
            <issuekey id="12699020">DERBY-6498</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12408290">DERBY-3945</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12671616">DERBY-6361</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12371432" name="Main.java" size="1945" author="dagw" created="Tue, 11 Dec 2007 13:57:58 +0000"/>
                            <attachment id="12394619" name="derby-3270-dhw-2.diff" size="6477" author="dagw" created="Tue, 25 Nov 2008 00:32:34 +0000"/>
                            <attachment id="12394620" name="derby-3270-dhw-2.stat" size="227" author="dagw" created="Tue, 25 Nov 2008 00:32:34 +0000"/>
                            <attachment id="12397254" name="derby-3270-dhw-3.diff" size="10576" author="dagw" created="Wed, 7 Jan 2009 01:44:52 +0000"/>
                            <attachment id="12397255" name="derby-3270-dhw-3.stat" size="457" author="dagw" created="Wed, 7 Jan 2009 01:44:52 +0000"/>
                            <attachment id="12394467" name="derby-3270-dhw.diff" size="6464" author="dagw" created="Fri, 21 Nov 2008 23:55:20 +0000"/>
                            <attachment id="12394468" name="derby-3270-dhw.stat" size="227" author="dagw" created="Fri, 21 Nov 2008 23:55:20 +0000"/>
                            <attachment id="12394196" name="derby-3270_diff.txt" size="2956" author="kmarsden" created="Tue, 18 Nov 2008 22:15:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 12 Nov 2008 22:14:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23536</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0nof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37654</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>