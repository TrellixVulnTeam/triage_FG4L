<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4038/DERBY-4038.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4038] On Z/OS store/access.sql fails with encryptionAES and encryptionDES</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4038</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;On Z/OS access.sql fails for encryptionAES and encryptionDES. The diff is big but I can&apos;t quite make out what the problem is. Maybe just a change of query plans.&lt;/p&gt;</description>
                <environment>java version &amp;quot;1.6.0&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build pmz6460sr3-20081108_01(SR3))&lt;br/&gt;
IBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 z/OS s390x-64 jvmmz6460-20081107_25433 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20081105_025433_BHdSMr&lt;br/&gt;
JIT  - r9_20081031_1330&lt;br/&gt;
GC   - 20081027_AB)&lt;br/&gt;
JCL  - 20081106_01&lt;br/&gt;
$ pwd</environment>
        <key id="12413579">DERBY-4038</key>
            <summary>On Z/OS store/access.sql fails with encryptionAES and encryptionDES</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Jan 2009 00:59:33 +0000</created>
                <updated>Wed, 12 Jan 2011 22:24:22 +0000</updated>
                            <resolved>Mon, 11 Jan 2010 17:00:12 +0000</resolved>
                                    <version>10.3.3.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12668686" author="kmarsden" created="Fri, 30 Jan 2009 01:00:39 +0000"  >&lt;p&gt;Attaching diff and out files for the test failure.&lt;/p&gt;</comment>
                            <comment id="12726897" author="knutanders" created="Fri, 3 Jul 2009 12:20:10 +0100"  >&lt;p&gt;Triaged for 10.5.2. Removed store component.&lt;/p&gt;

&lt;p&gt;I compared the attached access.out with the canon in the 10.3 branch. The only difference I found was that on some of the lines in the attached file tab characters had been replaced by a \u00 character.&lt;/p&gt;</comment>
                            <comment id="12779014" author="myrna" created="Tue, 17 Nov 2009 17:54:09 +0000"  >&lt;p&gt;I have played with this for a while, and I&apos;ve come to 3 conclusions:&lt;br/&gt;
1. Knut is right, it seems the only diff is that in some parts of the runtime statistics output the tabs have been replaced by another character&lt;br/&gt;
2. This is intermittent.&lt;br/&gt;
 Kathey reported the failure in the platform tests for 10.5.1.0 and 10.5.1.1 but not for (the discarded) 10.5.2.0.&lt;br/&gt;
I ran encryptionAll on a zseries machine a couple of times and never got a failure. I ran derbyall a couple of times and access.sql failed once in encryptionBlowfish - with the character-replacement happening in about 18 instances (as opposed to 7 in the log Kathey attached).&lt;br/&gt;
3. the diff output created by the test is singularly unhelpful.&lt;/p&gt;

&lt;p&gt;It&apos;s possible there&apos;s something wrong with the generateUTF8OutFile code in functionTests.harness.RunTest; I&apos;m not sure why that would be intermittent though.&lt;br/&gt;
One way to fix this would be to convert the test to junit.&lt;/p&gt;</comment>
                            <comment id="12779290" author="myrna" created="Wed, 18 Nov 2009 04:40:04 +0000"  >&lt;p&gt;I forgot to mention that I ran tests with 10.5.1.1 - because no errors got reported with 10.5.2.0, I wanted to make sure I could duplicate the behavior where it had been reported.&lt;/p&gt;

&lt;p&gt;After looking some more, it appears to me that in the one error situation I got (encryptionBlowfish with 18 diffing sections) the .tmp and .out are diffing in the tab characters; so that would point to something not being correct in the Sed class rather than the generateUTF8OutFile method.&lt;/p&gt;

&lt;p&gt;converting to junit still is the correct thing to do.&lt;/p&gt;</comment>
                            <comment id="12785672" author="myrna" created="Fri, 4 Dec 2009 00:30:16 +0000"  >&lt;p&gt;I&apos;ve been working on converting access.sql; and I noticed that section testing &quot;partial row runtime statistics&quot; actually has a section that&apos;s not doing what it was meant to do judging by the comments; it looks as if there&apos;s supposed to be 4 iterations&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;no index&lt;/li&gt;
	&lt;li&gt;with index&lt;/li&gt;
	&lt;li&gt;no index, deleted rows&lt;/li&gt;
	&lt;li&gt;with index, deleted rows&lt;br/&gt;
But, because the index does not get dropped anywhere, we get an error creating the index for the fourth iteration, and the 3rd and 4th iterations are exactly the same. &lt;br/&gt;
Perhaps the 4th iteration was copied by mistake, for I see that without index, you don&apos;t see the &quot;deleted rows visited&quot; line in the statistics. &lt;br/&gt;
Still, when running the queries without an index but with deleted rows the statistics show a different (higher) number of total rows visited, so I&apos;ll be modifying the converted test to exercise that combination too.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12789461" author="myrna" created="Fri, 11 Dec 2009 19:01:51 +0000"  >&lt;p&gt;I&apos;m attaching a patch that&apos;s a first attempt at converting this test.&lt;/p&gt;

&lt;p&gt;I made a few changes where I figured the original test was doing something odd:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;as indicated in a previous comment, changed the sequence of events and updating of statistics in the partial row runtime statistics test case / fixture so it&apos;s now doing 4 different things. In doing so, there&apos;s no longer a duplicate index warning returned for a create index foo_cover statement; I assumed generating that error that wasn&apos;t the point of the test.&lt;/li&gt;
	&lt;li&gt;changed the table in the CheckTable call in CS track 2241 test case from &apos;FOO&apos; to B2441, assuming it was meant to check the table in the test case at hand.&lt;/li&gt;
	&lt;li&gt;fixed up test case for cs track 2778:&lt;/li&gt;
	&lt;li&gt;made the create index work&lt;/li&gt;
	&lt;li&gt;fixed up the call using --derby-properties which for some reason gave a syntax error.&lt;/li&gt;
	&lt;li&gt;added a few select statements to CS495B (because then I could filter out&lt;br/&gt;
  a method to do the test 3 times)&lt;/li&gt;
	&lt;li&gt;removed the call to procedure WAIT_FOR_POST_COMMIT as it didn&apos;t appear to&lt;br/&gt;
  be used anywhere.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I still need to:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add it into store._Suite.java (and run suites.All to make sure this test doesn&apos;t interfere with other tests)&lt;/li&gt;
	&lt;li&gt;hang the encryption scenarios around this one&lt;br/&gt;
  (the access.sql test is run with encryption Algorithms AES,Blowfish,CFB,DES,ECB,OFB (through various encryption&amp;lt;ABC&amp;gt;.runalls) and DESede (through encryption all running storemats))&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;However, I&apos;d like some input on this conversion so far.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Was I misinterpreting the use of WAIT_FOR_POST_COMMIT? What would be the purpose of it?&lt;/li&gt;
	&lt;li&gt;I added more questions in //TODOs within the converted test, the main of which are that it seems to me some of the test cases don&apos;t seem to do any checking of what they&apos;re supposed to check. For instance, the reclaim deleted rows doesn&apos;t seem to check anything is reclaimed.&lt;/li&gt;
	&lt;li&gt;Are there obvious improvements to the flow of the test framework?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12790899" author="mikem" created="Tue, 15 Dec 2009 19:19:27 +0000"  >&lt;p&gt;comments from review of the patch:&lt;/p&gt;


&lt;p&gt;&amp;gt; - removed the call to procedure WAIT_FOR_POST_COMMIT as it didn&apos;t appear to&lt;br/&gt;
&amp;gt; be used anywhere.&lt;br/&gt;
sounds good, it is not called so remove all reference to it.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; - Was I misinterpreting the use of WAIT_FOR_POST_COMMIT? What would be the pur&lt;br/&gt;
pose of it?&lt;br/&gt;
It is not called, leftover cruft.&lt;/p&gt;


&lt;p&gt;comments on TODO&apos;s:&lt;br/&gt;
+        // TODO: check on what the following comment from the original test&lt;br/&gt;
+        // means. I don&apos;t think this test is currently checking whether the&lt;br/&gt;
+        // optimizer is picking the index, might be worthwhile adding it.&lt;/p&gt;

&lt;p&gt;At this point not sure history of this, I would just remove comment.&lt;/p&gt;

&lt;p&gt;+        // as subset of columns, with qualifier not in list&lt;br/&gt;
+        //TODO: this comment is not matching the expected results. OK?&lt;br/&gt;
+        // should be 5,3,1 and 50,30,10&lt;br/&gt;
+        doQuery(st, &quot;select e, c, a from foo where foo.b = 20&quot;,&lt;br/&gt;
comment looks bad, just fix the comment.&lt;/p&gt;

&lt;p&gt;+    // TODO: how does this check that rows are reclaimed or not? How?&lt;br/&gt;
looks like all work was moved to the subroutine, so probably should move&lt;br/&gt;
comments to the subroutine from the caller.  At least the part of the comments&lt;br/&gt;
that make sense.&lt;/p&gt;

&lt;p&gt;The code just tries to exercise the post commit path, but agree that it does&lt;br/&gt;
not specifically verify the reclaim.  This is hard to do from a user level&lt;br/&gt;
test, in a way that is reproducible across different hardware, jvms.  The&lt;br/&gt;
values are just hand picked to exercise different paths through the code.&lt;br/&gt;
One could try to use space table to verify sizes of the tables, but this&lt;br/&gt;
has caused non-reproducible results in cases where timing of background threads&lt;br/&gt;
are different.&lt;/p&gt;

&lt;p&gt;// TODO: change this call into a call to SYSCS_DIAG.SPACE_TABLE&lt;br/&gt;
I agree, it should use the current supported interface.&lt;/p&gt;

&lt;p&gt;+        // TODO: original test had 1 pages visited.&lt;br/&gt;
+        // But now that it&apos;s converted, we get 0 pages, which also&lt;br/&gt;
+        // seems reasonable to me. Or not?&lt;br/&gt;
This seems like it might be a problem.  Can you print out the full query&lt;br/&gt;
plan on failure of the assert.  It is hard to know what is going on from&lt;br/&gt;
just this one piece of info.&lt;/p&gt;

&lt;p&gt;The main point of this test is that is should use the index whether there&lt;br/&gt;
are zero or 1 rows.  We choose to force this because if we use index we get&lt;br/&gt;
row level locking, but if we use table scan we are going to get table level&lt;br/&gt;
locking - so better concurrency in the edge case.&lt;/p&gt;

&lt;p&gt;+    // TODO: in which way does this check qualifiers?&lt;br/&gt;
qualifiers are just things like a = 1 and b = 20.  When test was written the&lt;br/&gt;
code in language and store to evaluate these were changing.  The changes&lt;br/&gt;
especially had some new logic to handle &quot;and&quot; and &quot;or&quot;.  So the test just&lt;br/&gt;
has some of these cases and tests them by making sure the right results&lt;br/&gt;
come back.&lt;/p&gt;</comment>
                            <comment id="12792265" author="myrna" created="Fri, 18 Dec 2009 01:07:56 +0000"  >&lt;p&gt;Attaching a second patch. &lt;br/&gt;
I&apos;ve run the test in the suite, and there were 2 NPE failures in unrelated tests because of my changes to the runtimestatisticsParser, so I&apos;ve fixed that up.&lt;br/&gt;
I&apos;ve also removed a coupld of the TODOs that seemed to be ok.&lt;/p&gt;

&lt;p&gt;I&apos;ve tried to figure out why the converted test fixtures regarding CS track 4595 show 0 pages visited instead of 1 (with index scans) but I&apos;m no closer.&lt;br/&gt;
I&apos;ve printed them out instead of letting it assert - &lt;br/&gt;
in the way this test works currently, various subsequent test fixtures in this same test will fail if one fails, because tables won&apos;t get dropped.&lt;br/&gt;
I&apos;m attaching the output from the test.&lt;/p&gt;

&lt;p&gt;I&apos;ll work on adding the proper SYSCS_DIAG.Spacetable calls next, this patch isn&apos;t ready for commit yet.&lt;/p&gt;</comment>
                            <comment id="12794895" author="myrna" created="Mon, 28 Dec 2009 19:33:35 +0000"  >&lt;p&gt;Attaching a 3rd patch. &lt;br/&gt;
I think this addresses the previous comments, including using SYSCS_DIAG.SpaceTable calls. The problem with the 0 pages visited was (duh) because no data was actually fetched in the converted test - after I added a check the statistics do show 1 pages visted.&lt;/p&gt;

&lt;p&gt;My next step is to run this test through the various encryptions.&lt;/p&gt;

&lt;p&gt;I tried to add this test to suites.EncryptionSuite.baseSuite, which then looked like this:&lt;br/&gt;
------------&lt;br/&gt;
        TestSuite suite = new TestSuite(&quot;Encryption Algorithm: &quot; + algorithm);&lt;br/&gt;
        //...&lt;br/&gt;
        suite.addTestSuite(EncryptionSuite.class);&lt;br/&gt;
        suite.addTestSuite(org.apache.derbyTesting.functionTests.tests.store.AccessTest.class);&lt;br/&gt;
       return suite;&lt;br/&gt;
------------&lt;br/&gt;
but that resulted in the decorateSQL in AccessTest not being honored. &lt;/p&gt;

&lt;p&gt;Does anyone have a suggestion how to put those two pieces of the puzzle together?&lt;/p&gt;</comment>
                            <comment id="12796317" author="myrna" created="Mon, 4 Jan 2010 19:41:15 +0000"  >&lt;p&gt;I have played with various scenarios...&lt;br/&gt;
I can modify AccessTest fixtures to create the PADSTRING stored procedure without using the decorateSQL...&lt;br/&gt;
Or I can modify EncryptionSuite to have a setUp and tearDown method to create and shutdown the stored procedure...&lt;/p&gt;

&lt;p&gt;But the SystemPropertyTestSetup and the Decorator.encryptedDatabase don&apos;t work together, because for SystemPropertyTestSetup the database has to be rebooted and the required boot password  is local to Decorator.encryptedDatabase().&lt;/p&gt;

&lt;p&gt;I&apos;ll experiment getting a EncryptedSystemPropertyTestSetup, but in the mean time, really the only bit that&apos;s affected by not having the SystemProperties is that in the test case for CS1346 (a and b), half the time the length(a) of long1 and long2 is different when we have the property derby.optimizer.ruleBasedOptimization set to true (3240) vs. when it is false (3024).&lt;br/&gt;
(the other half of the time it&apos;s already 3024 characters). &lt;/p&gt;

&lt;p&gt;Is that part of the test important to be verified with encryption?&lt;/p&gt;</comment>
                            <comment id="12797197" author="mikem" created="Wed, 6 Jan 2010 17:45:57 +0000"  >&lt;p&gt;I would be fine getting the test to run without that property.  I did some investigation and don&apos;t see any reason for it for the validity of the test.  My best guess is this is one way a long time ago we used to try to avoid intermittent query plan / ordering problems.&lt;/p&gt;

&lt;p&gt;Looking at the original test I see one of the results is as follows.  Any chance what you are seeing is not &quot;different&quot; lengths but different orders.  In that case I would say just throw an order by in and don&apos;t worry about the property:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select LENGTH(a) from long2;&lt;br/&gt;
1&lt;br/&gt;
-----------&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3240&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;br/&gt;
3024&lt;/p&gt;</comment>
                            <comment id="12797799" author="myrna" created="Thu, 7 Jan 2010 21:47:06 +0000"  >&lt;p&gt;Indeed the difference with that property was an ordering differrence.&lt;br/&gt;
I&apos;m uploading patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4038&quot; title=&quot;On Z/OS store/access.sql fails with encryptionAES and encryptionDES&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4038&quot;&gt;&lt;del&gt;DERBY-4038&lt;/del&gt;&lt;/a&gt;.diff_4 which has added order by clauses to the statements showing an ordering difference depending on the property.&lt;br/&gt;
So, now the test willrun &lt;b&gt;with&lt;/b&gt; the property when it&apos;s just the test, but without when the databases are encrypted.&lt;br/&gt;
In this patch I also removed the old access.sql test.&lt;br/&gt;
Regressions ran fine.&lt;/p&gt;

&lt;p&gt;I intend to commit this  in a day or so if there are no further comments.&lt;/p&gt;</comment>
                            <comment id="12798731" author="myrna" created="Mon, 11 Jan 2010 17:00:11 +0000"  >&lt;p&gt;commited the latest patch with revision 897938.&lt;/p&gt;

&lt;p&gt;In the past, some of the steps in the access.sql test caused instability (i.e. intermittent errors), specifically in the area of the spacetable checks. The offending checks were removed (see revision 393896), but it&apos;s possible that the converted test has some of this. I think those should be handled in separate JIRA issues; the main problem of this issue has been corrected.&lt;br/&gt;
(I did run suites.All without errors on zseries with patched jars).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12427752" name="DERBY-4038.diff_1" size="81480" author="myrna" created="Fri, 11 Dec 2009 19:01:51 +0000"/>
                            <attachment id="12428378" name="DERBY-4038.diff_2" size="82340" author="myrna" created="Fri, 18 Dec 2009 01:07:56 +0000"/>
                            <attachment id="12429023" name="DERBY-4038.diff_3" size="81966" author="myrna" created="Mon, 28 Dec 2009 19:33:34 +0000"/>
                            <attachment id="12429678" name="DERBY-4038.diff_4" size="448120" author="myrna" created="Thu, 7 Jan 2010 21:47:06 +0000"/>
                            <attachment id="12429679" name="DERBY-4038.stat_4" size="1623" author="myrna" created="Thu, 7 Jan 2010 21:47:06 +0000"/>
                            <attachment id="12399076" name="access.diff" size="137184" author="kmarsden" created="Fri, 30 Jan 2009 01:00:39 +0000"/>
                            <attachment id="12399077" name="access.out" size="306397" author="kmarsden" created="Fri, 30 Jan 2009 01:00:39 +0000"/>
                            <attachment id="12428379" name="runaccess.out" size="10938" author="myrna" created="Fri, 18 Dec 2009 01:07:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Jul 2009 11:20:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23983</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0o2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37717</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>