<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3362/DERBY-3362.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3362] ControlRow NPE</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3362</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have a NPE in Derby 10.3.2.1 (10.3.1.4 does not show this behaviour) that is probably the same one discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3216&quot; title=&quot;do row level lock space reclamation in btree of indiv rows.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3216&quot;&gt;&lt;del&gt;DERBY-3216&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FATAL 38406 &lt;span class=&quot;error&quot;&gt;&amp;#91;Main&amp;#93;&lt;/span&gt; (Start.java:153) - Start FAILED&lt;br/&gt;
org.springframework.transaction.TransactionSystemException: Could not commit JDBC transaction; nested exception is java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
Caused by:&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)&lt;br/&gt;
        at com.aaa.bbb.cccFactory$ddd.add(cccFactory.java:324)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.reload(ggg.java:44)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.startup(ggg.java:57)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startupEee(Start.java:170)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startup(Start.java:146)&lt;br/&gt;
        at com.aaa.start.Starter.startup(Starter.java:264)&lt;br/&gt;
        at com.aaa.start.Main.startup(Main.java:270)&lt;br/&gt;
        at com.aaa.start.Main.main(Main.java:199)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        ... 21 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)&lt;br/&gt;
        ... 15 more&lt;/p&gt;

&lt;p&gt;and derby.log:&lt;/p&gt;

&lt;p&gt;2008-01-28 08:26:36.148 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Executing prepared statement: SELECT COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM ZZZ WHERE nID IS NULL :End prepared statement&lt;br/&gt;
2008-01-28 08:26:36.150 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Committing&lt;br/&gt;
2008-01-28 08:26:36.188 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Cleanup action starting&lt;br/&gt;
2008-01-28 08:26:36.188 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Failed Statement is: null with 2 parameters begin parameter #1: 1 :end parameter begin parameter #2: 1 :end param&lt;br/&gt;
eter&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)&lt;br/&gt;
        at com.aaa.bbb.cccFactory$ddd.add(cccFactory.java:324)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.reload(ggg.java:44)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.startup(ggg.java:57)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startupEee(Start.java:170)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startup(Start.java:146)&lt;br/&gt;
        at com.aaa.start.Starter.startup(Starter.java:264)&lt;br/&gt;
        at com.aaa.start.Main.startup(Main.java:270)&lt;br/&gt;
        at com.aaa.start.Main.main(Main.java:199)&lt;br/&gt;
Cleanup action completed&lt;/p&gt;


&lt;p&gt;This is a long transaction that has suddenly started throwing a NPE.&lt;br/&gt;
Nothing strange happens during the transaction, but on closing I get&lt;br/&gt;
the NPE.&lt;/p&gt;

&lt;p&gt;If I reorder some of the statements in the transaction (keeping&lt;br/&gt;
functional equivalence) the NPE is sometimes not thrown.&lt;/p&gt;

&lt;p&gt;I have already moved any table/index create statements to a different (previously committed) transaction. (I have had a few NPE before and locking issues that led me to this practice).&lt;/p&gt;

&lt;p&gt;For a while I thought that shutting down derby after creating tables solved the problem, but this has been proven false.&lt;/p&gt;

&lt;p&gt;I have tried to run with a sane version, but then I am blocked by too many &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3360&quot; title=&quot;Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3360&quot;&gt;&lt;del&gt;DERBY-3360&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also:&lt;/p&gt;

&lt;p&gt;On occasion the transaction DOES commit. Or seems to, but then Derby becomes unresponsive, the db files do not grow, but CPU rises and new connections can connect but get no response to commands. I don&apos;t know if this is really connected or not, but I thought I would mention it, as this unresponsive problem is what I am supposed to be diagnosing. When I say seems to commit, I mean that sometimes commit returns, sometimes it doesn&apos;t. Not very helpful, I know.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12387403">DERBY-3362</key>
            <summary>ControlRow NPE</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="northshorefiend">James Alan Shepherd</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jan 2008 20:22:49 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:24 +0000</updated>
                            <resolved>Mon, 10 Mar 2008 19:55:26 +0000</resolved>
                                    <version>10.3.2.1</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12564121" author="mikem" created="Wed, 30 Jan 2008 18:35:13 +0000"  >&lt;p&gt;if possible could you post the whole derby.log.  I am trying to figure out what in the transaction may be causing the null pointer.&lt;br/&gt;
Kinds of things I am looking for is huge numbers of deletes in the transaction, ddl in the transaction like alter table, compress&lt;br/&gt;
table, drop/create index.  All of these are of course supposed to be supported but just trying to guess at how to reproduce this.&lt;/p&gt;

&lt;p&gt;Maybe you could try with JIT disabled to try and get a line number for the Nullpointer?&lt;/p&gt;

&lt;p&gt;of course if you could post a standalone repro that would be most help.&lt;/p&gt;</comment>
                            <comment id="12564216" author="northshorefiend" created="Wed, 30 Jan 2008 23:22:37 +0000"  >&lt;p&gt;Can&apos;t publish the derby log I&apos;m afraid.&lt;/p&gt;

&lt;p&gt;Only a few deletes in the transaction, it&apos;s a data import script. Almost all of the deletes are in stored procs/ triggers that will delete no rows. No ddl/indexes changed.&lt;/p&gt;

&lt;p&gt;I tried -Djava.compiler=NONE but I still didn&apos;t get any line numbers. Is there another/better way to disable JIT?&lt;/p&gt;

&lt;p&gt;I tried the 32bit HotSpot instead of 64bit same thing happened.&lt;/p&gt;

&lt;p&gt;Increasing the heap doesn&apos;t seem to make any difference.&lt;/p&gt;

&lt;p&gt;Java(TM) SE Runtime Environment (build 1.6.0_03-b05)&lt;br/&gt;
Java HotSpot(TM) Server VM (build 1.6.0_03-b05, mixed mode)&lt;/p&gt;

&lt;p&gt;I&apos;ll try to test on a 1.5 JVM  later in the week, just in case.&lt;/p&gt;</comment>
                            <comment id="12564236" author="kmarsden" created="Thu, 31 Jan 2008 00:11:01 +0000"  >&lt;p&gt;To get the line numbers you should run with a debug build. Download db-derby-10.3.2.1-lib-debug.zip  from &lt;a href=&quot;http://db.apache.org/derby/releases/release-10.3.2.1.cgi&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/releases/release-10.3.2.1.cgi&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12564430" author="northshorefiend" created="Thu, 31 Jan 2008 18:01:05 +0000"  >&lt;p&gt;lib-debug appears to be a sane build, which as I mentioned above has problems before we even get to this one.&lt;/p&gt;

&lt;p&gt;I rolled my own 10.3.2.1 with:&lt;/p&gt;

&lt;p&gt;debug=true&lt;br/&gt;
optimize=false&lt;br/&gt;
sane=false&lt;/p&gt;

&lt;p&gt;everything else as in BUILDING.txt&lt;/p&gt;

&lt;p&gt;this gets me the line numbers in the log below.&lt;/p&gt;

&lt;p&gt;With these settings it seems that I always get the NPE if I create the db in one tran, then import in another.&lt;/p&gt;

&lt;p&gt;Restarting the JVM and skipping the create db, importing into the (now) exising db, always seems to succeed.&lt;/p&gt;

&lt;p&gt;The only other difference is that I&apos;m running with a bit more XXMaxPermSpace.&lt;/p&gt;


&lt;p&gt;2008-01-31 15:37:59.134 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1967), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Committing&lt;br/&gt;
2008-01-31 15:37:59.172 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1967), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Cleanup action starting&lt;br/&gt;
2008-01-31 15:37:59.172 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1967), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Failed Statement is: null&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(ControlRow.java:878)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:844)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:820)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(BTreePostCommit.java:462)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(BTreePostCommit.java:278)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Xact.java:2059)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Xact.java:832)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Xact.java:868)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Xact.java:663)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.commit(RAMTransaction.java:1980)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(GenericLanguageConnectionContext.java:1161)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(GenericLanguageConnectionContext.java:981)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(TransactionResourceImpl.java:237)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.commit(EmbedConnection.java:1109)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)&lt;/p&gt;</comment>
                            <comment id="12573933" author="kmarsden" created="Fri, 29 Feb 2008 20:19:11 +0000"  >&lt;p&gt;With IBM 1.6 on linux I saw a similar trace to this in the log of a failed stress/stress.muilti &lt;br/&gt;
run.  It may be the same bug.&lt;/p&gt;

&lt;p&gt;2008-02-29 12:53:15.995 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;derby.rawStoreDaemon,5,derby.daemons&amp;#93;&lt;/span&gt; Cleanup action starting&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClient(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.BasicDaemon.work(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.BasicDaemon.run(Unknown Source)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:735)&lt;br/&gt;
Cleanup action completed&lt;/p&gt;</comment>
                            <comment id="12573936" author="kmarsden" created="Fri, 29 Feb 2008 20:25:33 +0000"  >&lt;p&gt;Also so the same trace with encryption/multi on Windows XP with IBM 1.5 on the same day 2/28/2008&lt;/p&gt;</comment>
                            <comment id="12573937" author="kmarsden" created="Fri, 29 Feb 2008 20:27:35 +0000"  >&lt;p&gt;Marking this as a regression since the user reports it does not occur with 10.3.1.4&lt;/p&gt;</comment>
                            <comment id="12573978" author="kmarsden" created="Fri, 29 Feb 2008 21:54:42 +0000"  >&lt;p&gt;Attached is the derby.log from the stress.multi run. I have the database and other test output files, but all of that is too big for Jira.   Please let me know if they are needed and I will put them somewhere else.&lt;/p&gt;</comment>
                            <comment id="12574021" author="kmarsden" created="Sat, 1 Mar 2008 00:12:49 +0000"  >&lt;p&gt;I put the full zipped test directory at:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~kmarsden/DERBY-3362/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~kmarsden/DERBY-3362/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12574991" author="knutanders" created="Tue, 4 Mar 2008 13:56:52 +0000"  >&lt;p&gt;The method BTreePostCommit.purgeRowLevelCommittedDeletes() was added&lt;br/&gt;
in 10.3.2.1 (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3216&quot; title=&quot;do row level lock space reclamation in btree of indiv rows.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3216&quot;&gt;&lt;del&gt;DERBY-3216&lt;/del&gt;&lt;/a&gt;), which explains why this is not seen on&lt;br/&gt;
10.3.1.4.&lt;/p&gt;

&lt;p&gt;In that issue, I posted the following question after reviewing the&lt;br/&gt;
code (no answer from the submitter, though):&lt;/p&gt;

&lt;p&gt;&amp;gt; In the same method, I see this piece of code:&lt;br/&gt;
&amp;gt; + if ((controlRow = ControlRow.get(open_btree, page_number)) == null)&lt;br/&gt;
&amp;gt; + return;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; As far as I can see, it is impossible that ControlRow.get() returns&lt;br/&gt;
&amp;gt; null, so by returning successfully when controlRow is null, we might&lt;br/&gt;
&amp;gt; be hiding future bugs. Wouldn&apos;t it be better to skip the null&lt;br/&gt;
&amp;gt; checking and just let the method fail with an NPE when controlRow is&lt;br/&gt;
&amp;gt; dereferenced?&lt;/p&gt;

&lt;p&gt;Looking at it again, I&apos;m wondering if the check is actually there to&lt;br/&gt;
ensure that purgeRowLevelCommittedDeletes() is a no-op if the page&lt;br/&gt;
doesn&apos;t exist. However, it is wrong since ControlRow.get() will fail&lt;br/&gt;
instead of returning null if the page cannot be found.&lt;/p&gt;

&lt;p&gt;Would it work if we changed the above mentioned code like this?&lt;/p&gt;

&lt;p&gt;Page p = open_btree.container.getPage(page_number);&lt;br/&gt;
if (p == null) &lt;/p&gt;
{
    // page doesn&apos;t exist, no rows to reclaim
    return;
}
&lt;p&gt;controlRow = ControlRow.getControlRowForPage();&lt;/p&gt;

&lt;p&gt;In that case, the null check would make sense, and I think the NPE&lt;br/&gt;
would go away.&lt;/p&gt;</comment>
                            <comment id="12575435" author="jkuhnert" created="Wed, 5 Mar 2008 17:55:20 +0000"  >&lt;p&gt;If someone attaches a jar with the diff applied I can test it in my app where I&apos;m consistently able to re-produce it,  though that probably doesn&apos;t help unit tests. &lt;/p&gt;</comment>
                            <comment id="12575437" author="mikem" created="Wed, 5 Mar 2008 17:59:00 +0000"  >&lt;p&gt;previous diff file was wrong file.&lt;/p&gt;

&lt;p&gt;not ready for commit, have not run full tests. Am having trouble reproducing in my environment but pretty sure this will fix the issue. It fixed it when I by hand caused the code down the path that is being reported by the submitted stack traces.&lt;/p&gt;

&lt;p&gt;If it passes full set of tests and I can&apos;t come up with a repro test case, will likely commit soon.&lt;/p&gt;</comment>
                            <comment id="12575439" author="kmarsden" created="Wed, 5 Mar 2008 18:01:14 +0000"  >&lt;p&gt;Is this likely to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3487&quot; title=&quot;stress.multi fails with org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED No page at pagenumber: 6; ContainerHandle = BaseContainerHandle:(Container(0, 65))&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3487&quot;&gt;&lt;del&gt;DERBY-3487&lt;/del&gt;&lt;/a&gt; with a sane build. That I got 17 times out of &lt;br/&gt;
50 repeated runs on my linux machine.  I can try with the patch there if you &lt;br/&gt;
think it is the same issue.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12575454" author="kmarsden" created="Wed, 5 Mar 2008 18:50:34 +0000"  >&lt;p&gt;kicked off repeated runs. I&apos;ll let you know how its going in a few hours.&lt;/p&gt;</comment>
                            <comment id="12575498" author="kmarsden" created="Wed, 5 Mar 2008 21:16:59 +0000"  >&lt;p&gt;Ten runs and the ASSERT has not hit.  &lt;/p&gt;</comment>
                            <comment id="12575520" author="mikem" created="Thu, 6 Mar 2008 01:09:04 +0000"  >&lt;p&gt;I applied the fix to the trunk, and after seeing if any new reports come in will look at backporting to 10.3.&lt;br/&gt;
I was never able to reproduce the problem in my environments using the stress test, only by hacking the code temporarily to force it into the patch described by the posted test cases.  It passed all the &lt;br/&gt;
regular tests for me.&lt;/p&gt;</comment>
                            <comment id="12577143" author="mikem" created="Mon, 10 Mar 2008 19:55:26 +0000"  >&lt;p&gt;fixed in trunk and backported to 10.3 branch.&lt;/p&gt;</comment>
                            <comment id="12599395" author="atyyeung" created="Fri, 23 May 2008 16:02:53 +0100"  >&lt;p&gt;Is this bug fixed in 10.3.2.2?&lt;/p&gt;

&lt;p&gt;I&apos;m using org.apache.derby.core_10.3.2.2-616146, and I got the same problem.&lt;/p&gt;

&lt;p&gt;java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)&lt;br/&gt;
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)&lt;br/&gt;
	... 32 more&lt;br/&gt;
Caused by: &lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)&lt;br/&gt;
	... 36 more&lt;/p&gt;</comment>
                            <comment id="12599418" author="mikem" created="Fri, 23 May 2008 17:26:39 +0100"  >&lt;p&gt;The first &quot;released&quot; version in the 10.3 branch  that includes this fix is 10.3.3.0, this just got announced a few days ago - see:&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-user/200805.mbox/%3c54ac72d70805211242y29d4a0bcyf6ae518a7a8f1767@mail.gmail.com%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-user/200805.mbox/%3c54ac72d70805211242y29d4a0bcyf6ae518a7a8f1767@mail.gmail.com%3e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are building your own releases, it was fixed in the 10.2.2 branch with change number 634101.   If JIRA has an &quot;unreleased&quot; version marked as the fix in, it means it was fixed in the branch but at least at the time of the fix a release had not been made.  Sometimes the comments will say which JIRA version fixes it, otherwise the svn tab can be used to see when the fix went in.&lt;/p&gt;

&lt;p&gt;The version you are running is an earlier version of 10.2.2 - ie. 616146.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12377185" name="b3362.diff" size="1423" author="mikem" created="Wed, 5 Mar 2008 17:59:00 +0000"/>
                            <attachment id="12376869" name="derbylog.zip" size="1529332" author="kmarsden" created="Fri, 29 Feb 2008 21:54:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Jan 2008 18:35:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23596</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lqv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37341</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>