<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:21:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4393/DERBY-4393.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4393] lang.SequenceTest fails w/ &quot;Sequence &apos;ALPHA_SEQ&apos; already exists.&quot; on phoneME/cvm</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4393</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Seen since 2009-09-03. Possibly related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4284&quot; title=&quot;All Columns become Nullable when Using left join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4284&quot;&gt;&lt;del&gt;DERBY-4284&lt;/del&gt;&lt;/a&gt; / svn 811009?&lt;/p&gt;

&lt;p&gt;See e.g. &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/javaME/testing/testlog/ubuntu/820325-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/javaME/testing/testlog/ubuntu/820325-suitesAll_diff.txt&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;20) testCreateWithSchemaDropWithNoSchema(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)java.sql.SQLException: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateWithSchemaDropWithNoSchema(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at sun.misc.CVM.runMain(Unknown Source)&lt;br/&gt;
Caused by: ERROR X0Y68: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 55 more&lt;br/&gt;
21) testCreateWithSchemaSpecifiedCreateTrue(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)java.sql.SQLException: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateWithSchemaSpecifiedCreateTrue(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at sun.misc.CVM.runMain(Unknown Source)&lt;br/&gt;
Caused by: ERROR X0Y68: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 55 more&lt;br/&gt;
22) testCreateWithSchemaSpecified(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)java.sql.SQLException: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateWithSchemaSpecified(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at sun.misc.CVM.runMain(Unknown Source)&lt;br/&gt;
Caused by: ERROR X0Y68: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 55 more&lt;br/&gt;
23) testImplicitSchemaCreation(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)java.sql.SQLException: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testImplicitSchemaCreation(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at sun.misc.CVM.runMain(Unknown Source)&lt;br/&gt;
Caused by: ERROR X0Y68: Sequence &apos;ALPHA_SEQ&apos; already exists.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 55 more&lt;br/&gt;
24) testDropSequence(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)java.sql.SQLException: Sequence &apos;MYSEQ1&apos; already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testDropSequence(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(Unknown Source)&lt;br/&gt;
	at junit.extensions.TestSetup.run(Unknown Source)&lt;br/&gt;
	at sun.misc.CVM.runMain(Unknown Source)&lt;br/&gt;
Caused by: ERROR X0Y68: Sequence &apos;MYSEQ1&apos; already exists.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 55 more&lt;/p&gt;</description>
                <environment>OS:&lt;br/&gt;
Linux .... 32bits&lt;br/&gt;
Linux 2.6.22-14-generic #1 SMP Sun Oct 14 23:05:12 GMT 2007 GNU/Linux&lt;br/&gt;
&lt;br/&gt;
JVM:&lt;br/&gt;
Product: phoneME Advanced (phoneme_advanced_mr2-b116)&lt;br/&gt;
Profile: Foundation Profile Specification 1.1&lt;br/&gt;
JVM:     CVM phoneme_advanced_mr2-b116 (interpreter loop)&lt;br/&gt;
</environment>
        <key id="12437003">DERBY-4393</key>
            <summary>lang.SequenceTest fails w/ &quot;Sequence &apos;ALPHA_SEQ&apos; already exists.&quot; on phoneME/cvm</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olesolberg">Ole Solberg</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Oct 2009 12:34:14 +0100</created>
                <updated>Wed, 18 Nov 2009 20:50:44 +0000</updated>
                            <resolved>Thu, 8 Oct 2009 11:09:25 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12761431" author="dagw" created="Fri, 2 Oct 2009 01:43:03 +0100"  >&lt;p&gt;It seems the success of this test is dependent on the order of the fixtures:&lt;/p&gt;

&lt;p&gt;testDropOtherSchemaSequence faisl to drop alpha.alpha_seq, so if that fixture is run &lt;b&gt;before&lt;/b&gt;&lt;br/&gt;
testCreateWithSchemaDropWithNoSchema, the latter would fail as seen.&lt;/p&gt;</comment>
                            <comment id="12762116" author="olesolberg" created="Mon, 5 Oct 2009 09:48:12 +0100"  >&lt;p&gt;Partial patch. Cleanup (drop) for &quot;CREATE SEQUENCE alpha_seq&quot;.&lt;br/&gt;
Does NOT fix the &lt;b&gt;failure&lt;/b&gt; in SequenceTest on phoneME/cvm:&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testCreateOtherSchemaSequence(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)junit.framework.ComparisonFailure: Unexpected SQL state. expected:&amp;lt;4250&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;4250&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12762154" author="olesolberg" created="Mon, 5 Oct 2009 12:20:00 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_2.diff.txt replaces &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_1.diff.txt:&lt;br/&gt;
adding cleanup in  &apos;testDuplicateCreationFailure()&apos;.&lt;/p&gt;</comment>
                            <comment id="12762164" author="olesolberg" created="Mon, 5 Oct 2009 13:43:00 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_3.diff.txt replaces &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_2.diff.txt.&lt;/p&gt;

&lt;p&gt;This patch also fixes the &lt;br/&gt;
&apos;1) testCreateOtherSchemaSequence(org.apache.derbyTesting.functionTests.tests.lang.SequenceTest)junit.framework.ComparisonFailure: Unexpected SQL state. expected:&amp;lt;4250&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;4250&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;&amp;gt; &apos;&lt;br/&gt;
problem by forcing the &apos;ALPHA&apos; schema to be created/existing when testCreateOtherSchemaSequence is run.&lt;/p&gt;</comment>
                            <comment id="12762185" author="rhillegas" created="Mon, 5 Oct 2009 15:24:58 +0100"  >&lt;p&gt;This is a familiar problem on the phoneME platform, where the tests run in the opposite order that they run on other VMs. When I write test cases, I tackle this problem by putting some unique identifier in the name of the test case and then incorporating that identifier into the names of all the schema objects referenced by the test case. This is a simple way to guarantee that the object names won&apos;t collide if the tests run in a different order.&lt;/p&gt;

&lt;p&gt;So for instance, the first test case would look like this:&lt;/p&gt;

&lt;p&gt;    public void test_01_CreateSequence() throws SQLException &lt;/p&gt;
{
        Statement s = createStatement();
        s.executeUpdate(&quot;CREATE SEQUENCE mySeq_01&quot;);
    }

&lt;p&gt;An alternative solution would be to put some logic in the tearDown() method to destroy the schemas created by the test cases.&lt;/p&gt;

&lt;p&gt;I don&apos;t recommend putting cleanup logic in the test cases themselves. That approach is brittle because a test case can fail before it gets to its cleanup logic. The previous two approaches don&apos;t have this problem.&lt;/p&gt;</comment>
                            <comment id="12762442" author="dagw" created="Tue, 6 Oct 2009 00:05:13 +0100"  >&lt;p&gt;I like the idiom of the &lt;/p&gt;

&lt;p&gt;new CleanDatabaseTestSetup(suite) {&lt;br/&gt;
            /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Creates the tables used in the test cases.&lt;/li&gt;
	&lt;li&gt;@exception SQLException if a database error occurs&lt;br/&gt;
             */&lt;br/&gt;
            protected void decorateSQL(Statement s) throws SQLException 
{
                  // DDL
            }
&lt;p&gt;        }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;since, then the cleanup is automatic after each fixture and no convention is needed.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Edited 2009-10-06: Correction: The cleanup happens only after the &lt;em&gt;entire test&lt;/em&gt; has been run, so it does not solve the problem of the test cases inside one test messing up for each other. Another option is to set autocommit off and then never commit inside a test case. The teardown method will roll back any changes made (Knut&apos;s suggestion, thx). *&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12762628" author="olesolberg" created="Tue, 6 Oct 2009 15:06:36 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_4.diff.txt replaces &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_3.diff.txt.&lt;br/&gt;
Still has the cleanup logic in the testcase, but uses a more &quot;symmetric&quot; approach.&lt;br/&gt;
I found creating a tearDown difficult for this suite - but I may be missing something.&lt;/p&gt;

&lt;p&gt;The &apos;new CleanDatabaseTestSetup(suite) &lt;/p&gt;
{ ... }
&lt;p&gt;&apos; idiom is already used so after the suite is done everything should be clean, even if some testcase in the suite does not behave well.&lt;/p&gt;</comment>
                            <comment id="12762986" author="olesolberg" created="Wed, 7 Oct 2009 11:22:19 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4393&quot; title=&quot;lang.SequenceTest fails w/ &amp;quot;Sequence &amp;#39;ALPHA_SEQ&amp;#39; already exists.&amp;quot; on phoneME/cvm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4393&quot;&gt;&lt;del&gt;DERBY-4393&lt;/del&gt;&lt;/a&gt;_4.diff.txt committed to trunk as revision 822641.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12325742">DERBY-712</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12421263" name="DERBY-4393_1.diff.txt" size="685" author="olesolberg" created="Mon, 5 Oct 2009 09:48:12 +0100"/>
                            <attachment id="12421279" name="DERBY-4393_2.diff.txt" size="1323" author="olesolberg" created="Mon, 5 Oct 2009 12:20:00 +0100"/>
                            <attachment id="12421282" name="DERBY-4393_3.diff.txt" size="1991" author="olesolberg" created="Mon, 5 Oct 2009 13:43:00 +0100"/>
                            <attachment id="12421428" name="DERBY-4393_4.diff.txt" size="1972" author="olesolberg" created="Tue, 6 Oct 2009 15:06:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Oct 2009 00:43:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24230</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38285</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>