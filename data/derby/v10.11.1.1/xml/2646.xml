<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:42:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2646/DERBY-2646.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2646] Cleanup of Clob control/support structures</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2646</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12369355">DERBY-2646</key>
            <summary>Cleanup of Clob control/support structures</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12343409">DERBY-1341</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 May 2007 08:07:36 +0100</created>
                <updated>Thu, 2 Oct 2008 17:16:27 +0100</updated>
                            <resolved>Sat, 9 Jun 2007 17:08:25 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12497387" author="kristwaa" created="Mon, 21 May 2007 10:11:37 +0100"  >&lt;p&gt;Changed the name of the issue to reflect the fact that only work related to Clob will be tracked here.&lt;/p&gt;</comment>
                            <comment id="12497392" author="kristwaa" created="Mon, 21 May 2007 10:29:19 +0100"  >&lt;p&gt;&apos;derby-2646-01a_trailing_space.diff&apos; is a patch for removing trailing spaces in ClobStreamControl and EmbedClob.&lt;br/&gt;
I&apos;m committing this without review, it only deletes trailing spaces. It is a preparation for other changes, to avoid potentially confusing diffs.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 540083.&lt;/p&gt;</comment>
                            <comment id="12497486" author="kristwaa" created="Mon, 21 May 2007 16:24:02 +0100"  >&lt;p&gt;I&apos;m planning to do a review and cleanup of the underlying structures of Clob in the embedded driver. I foresee that ClobStreamControl and maybe EmbedClob will be affected by this, but some other classes might have to be changed as well.&lt;/p&gt;

&lt;p&gt;My current plans:&lt;br/&gt;
 1) Write a new test for Clob.&lt;br/&gt;
    Only methods defined by JDBC 3 or earlier will be tested. Currently these tests reside in jdbcapi/ClobTest.java (in my sandbox), but there is already a ClobTest in the jdbc4 package. I would prefer to rename the jdbc4 one to something else. Any opinions on this?&lt;/p&gt;

&lt;p&gt; 2) Review and rewrite ClobStreamControl as appropriate.&lt;br/&gt;
    I will focus especially on getting the byte and clob positions right, as it has been suggested these have been mixed up on occasions. Changes might propagate to EmbedClob, but I hope the changes there will be minimal.&lt;/p&gt;

&lt;p&gt;Preliminary findings:&lt;br/&gt;
When executing the new tests, I quickly got tangled up in the current difference of behavior between the embedded and the client driver for setBytes etc. I do not plan to work on these, as I understand other work going on at the moment will fix these issues when the switch to locators is made effective.&lt;br/&gt;
I also see differences in handling of the &quot;ASCII&quot; encoding, probably related to the client using US-ASCII and embedded ISO-8859-1. I believe the latter is the correct one, and that enabling locators might resolve the issues.&lt;br/&gt;
Last, I see an UTFDataFormat exception when inserting some Norwegian characters with setAsciiStream.&lt;/p&gt;

&lt;p&gt;If people have comments, questions or additions to my little plan, please let me know.&lt;br/&gt;
I do plan to get this issue done for 10.3.&lt;/p&gt;</comment>
                            <comment id="12498867" author="kristwaa" created="Thu, 24 May 2007 23:16:33 +0100"  >&lt;p&gt;&apos;derby-2646-02a-clob-reorg.diff&apos; is a stab at reorganizing the upper level Clob code in the embedded driver.&lt;br/&gt;
I have run suites.All without failures.&lt;/p&gt;

&lt;p&gt;Please note that the patch, although operational, is preliminary. I&apos;m sorry it became so big, but I think it will be hard to split it up into smaller parts. I&apos;m also very short on time, but I still feel this is worth getting done for 10.3.&lt;br/&gt;
For now I&apos;m primarily interested in design feedback, but other kinds of feedback (bugs, suggestions etc) are welcome too.&lt;/p&gt;

&lt;p&gt;Although I plan to address more cleanup and bugs in later patches, a few fixes were incorporated into the 2a patch. For instance, ClobTest has 3 failures/errors when run against trunk, but none when run with the patch.&lt;/p&gt;

&lt;p&gt;Comments on the patch:&lt;br/&gt;
 a) EmbedClob now works against the new interface InternalClob&lt;/p&gt;

&lt;p&gt; b) There are two different kinds of internal Clob representations; StoreStreamClob (which is read-only) and ClobStreamControl (which I might rename, name suggestions? TemporaryClob?). If you fetch an existing Clob from the database, you start out with a StoreStreamClob. If you modify it, the Clob content is copied into ClobStreamControl. The switch is done in EmbedClob.&lt;/p&gt;

&lt;p&gt; c) I need to look into exception handling. For various reasons it seems many methods must throw SQLExceptions. StoreStreamControl tends to get StandardException from store, ClobStreamControl tends to get StandardException/SQLException from LOBStreamControl. And of course IOException is well represented.&lt;/p&gt;

&lt;p&gt; d) I need to look into/verify synchronization (on the connection child). Can anyone please enlighten me on the importance of calling setupContextStack/restoreContextStack?&lt;/p&gt;

&lt;p&gt; e) All character positions in InternalClob are 1-based. Byte positions are 0-based.&lt;/p&gt;

&lt;p&gt; f) Positioning streams at character positions are done by reading the byte stream from position 0 and counting characters. This implies UTF-8 decoding. Changing this will not happen in this patch/issue. Different improvements might be suitable for the store streams and the temporary Clobs (i.e. caching positions or changing to UTF-16).&lt;/p&gt;


&lt;p&gt;My apologies for bringing a rather big change to the community this close to the freeze date. However, unless I get serious pushback, I will drive this forward to completion for 10.3.&lt;/p&gt;</comment>
                            <comment id="12499827" author="kristwaa" created="Tue, 29 May 2007 16:58:36 +0100"  >&lt;p&gt;&apos;derby-2646-03a-internalclob.diff&apos; deprecates version 02a.&lt;br/&gt;
The patch defines a new interface for internal Clob objects. The point of this is to make better use of OO programming techniques, and also to split the code into smaller pieces. This will make it easer to both review and debug.&lt;/p&gt;

&lt;p&gt;I plan to have two imlementations:&lt;br/&gt;
 a) StoreStreamClob - a read-only Clob working on streams from store&lt;br/&gt;
 b) ClobStreamControl - a writable Clob working on a memory or disk image of the content&lt;/p&gt;

&lt;p&gt;I plan to rename the latter to TemporaryClob, as Derby operates on copies of the Clob value when modifications are done.&lt;br/&gt;
The switch between the implementations/representations is one-way; you operate on store streams until you modify the Clob. Note that using Connection.createClob() will create a temporary Clob.&lt;/p&gt;

&lt;p&gt;As a side note, the matter of representing the temporary Clob in memory or on disk is left to LOBStreamControl.&lt;/p&gt;

&lt;p&gt;This patch will be committed shortly.&lt;/p&gt;

&lt;p&gt;More patches will follow.&lt;/p&gt;</comment>
                            <comment id="12499929" author="kristwaa" created="Tue, 29 May 2007 22:07:35 +0100"  >&lt;p&gt;Committed patch version 03a (InternalClob) to trunk with revision 542641.&lt;br/&gt;
This piece of code is not yet in use.&lt;/p&gt;</comment>
                            <comment id="12501133" author="kristwaa" created="Mon, 4 Jun 2007 09:06:55 +0100"  >&lt;p&gt;&apos;derby-2646-04a-storestreamclob_utf8util.diff&apos; includes the following changes:&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/jdbc/StoreStreamClob.java&lt;br/&gt;
    Added StoreStreamClob, which implements InternalClob. It represents&lt;br/&gt;
    a Clob on top of a stream from store, and is read-only.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/InternalClob.java&lt;br/&gt;
    Modified JavaDoc. An important aspect of some of the methods is only&lt;br/&gt;
    described by the JavaDoc, it is not possible to see from the method&lt;br/&gt;
    signature alone. This is that EOFException is thrown if the position&lt;br/&gt;
    is larger than the length of the Clob. Should the signature include&lt;br/&gt;
    both EOFException and IOException in the throws-clause?&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/iapi/util/UTF8Util.java&lt;br/&gt;
    Created a utility class for operations on byte streams encoded as&lt;br/&gt;
    UTF-8. Currently only a few skip methods are in there. The goal of&lt;br/&gt;
    this class is to centralize the error-prone activity of decoding&lt;br/&gt;
    UTF-8 encoded streams. Please review!&lt;br/&gt;
    The main internal method does look a bit verbose to me, but I don&apos;t&lt;br/&gt;
    think it is worth trimming down and &quot;obfuscating&quot; it until it is&lt;br/&gt;
    shown to have performance problems.&lt;/p&gt;

&lt;p&gt;Again, none of this code is enabled. This will happen in the next patch,&lt;br/&gt;
where EmbedClob and StoreStreamControl will be modified. There will also&lt;br/&gt;
be a separate patch for additional tests.&lt;/p&gt;

&lt;p&gt;I expect to commit this code really fast.&lt;/p&gt;</comment>
                            <comment id="12501168" author="kristwaa" created="Mon, 4 Jun 2007 10:55:26 +0100"  >&lt;p&gt;&apos;derby-2646-04b-storestreamclob_utf8util.diff&apos; is the same as version 04a, except that the methods StoreStreamClob.getByteLength() and StoreStreamClob.resetStoreStream() (private) were changed to honor and take care of the encoded length in the store stream.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 544111.&lt;/p&gt;</comment>
                            <comment id="12501231" author="kristwaa" created="Mon, 4 Jun 2007 15:40:24 +0100"  >&lt;p&gt;&apos;derby-2646-05a-tests.diff&apos; contains a series of tests for Clob.&lt;br/&gt;
More tests can/should be added, they are far from complete.&lt;/p&gt;

&lt;p&gt;There is one &quot;normal&quot; test, &apos;jdbcapi/ClobTest&apos;. It is not enabled in any suite yet, as two of the tests fails with the current implementation due to UTFDataFormatException (which again is due to positioning/boundary errors). They will be enabled as part of the next patch for this issue.&lt;/p&gt;

&lt;p&gt;There is also four package-private test classes, all based off the abstract superclass &apos;InternalClobTest&apos;.&lt;br/&gt;
The test classes test the following cases:&lt;br/&gt;
  SmallStoreStreamTest: Small read-only Clobs from a store stream&lt;br/&gt;
  BiggerStoreStreamTest: Bigger read-only Clobs from a store stream, size should cause crossing of various buffer sizes and boundaries.&lt;br/&gt;
  SmallTemporaryClobTest: Temorary read-write Clobs held in memory.&lt;br/&gt;
  BiggerTemporaryClobTest:  Temporary read-write Clobs stored on disk due to their size.&lt;/p&gt;

&lt;p&gt;Transition from read-only to read-write is not tested in the package-private tests, as transition is the responsibility of EmbedClob. I also considered adding encryption to BiggerTemporaryClobTest, but decided to put this on hold and address it in a later patch. I think we have some performance issues with encrypted Clobs, but it can be due to the test implementation and should be determined before any conclusions are taken.&lt;/p&gt;

&lt;p&gt;The required framework for package-private tests are not in place. I will possibly address this later, but for now the package private tests must be compiled and run manually.&lt;br/&gt;
The simplest is to issue for instance this javac command from trunk after having compiled Derby the normal way:&lt;br/&gt;
javac -d classes/ -classpath classes/:tools/java/junit.jar java/testing/org/apache/derby/impl/jdbc/*java&lt;br/&gt;
Then run them with &apos;classes/&apos; in the classpath:&lt;br/&gt;
java junit.textui.TestRunner org.apache.derby.impl.jdbc._Suite&lt;/p&gt;</comment>
                            <comment id="12501520" author="kristwaa" created="Tue, 5 Jun 2007 12:08:54 +0100"  >&lt;p&gt;&apos;derby-2646-05b-tests.diff&apos; fixes a few things I forgot in 05a; license headers, removed some temporary testing stuff, also added a one more test to ClobTest.&lt;/p&gt;

&lt;p&gt;Note that these tests are still not enabled.&lt;/p&gt;

&lt;p&gt;Committed &apos;derby-2646-05b-tests.diff&apos; to trunk with revision 544445.&lt;/p&gt;</comment>
                            <comment id="12501522" author="knutanders" created="Tue, 5 Jun 2007 12:11:34 +0100"  >&lt;p&gt;In UTF8Util, there is a private method called isDerbyEOFMarker() which isn&apos;t used. Is it a left-over that should be removed?&lt;br/&gt;
I was also wondering, would it be cleaner if internalSkip() returned an instance of a private inner class with two long members instead of an array of longs?&lt;/p&gt;</comment>
                            <comment id="12501527" author="kristwaa" created="Tue, 5 Jun 2007 12:23:05 +0100"  >&lt;p&gt;Thanks for the comments Knut Anders.&lt;/p&gt;

&lt;p&gt;I&apos;m wondering if you could create a separate Jira for these issues?&lt;/p&gt;

&lt;p&gt;My plan was to create a utility class that works nicely, which obviously requires some more work. When we have confidence that it is fast enough and bug-free, we can start using it other places in Derby.&lt;/p&gt;

&lt;p&gt;If you create the new Jira I can address you comments in a separate patch. The method you commented should be removed, or maybe rewritten and fitted into skipInternal?&lt;br/&gt;
Using a private internal class also sounds like a good idea.&lt;/p&gt;</comment>
                            <comment id="12501532" author="knutanders" created="Tue, 5 Jun 2007 12:52:55 +0100"  >&lt;p&gt;&amp;gt;I&apos;m wondering if you could create a separate Jira for these issues?&lt;br/&gt;
Done. Logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2760&quot; title=&quot;Clean-up issues for UTF8Util.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2760&quot;&gt;&lt;del&gt;DERBY-2760&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12501548" author="knutanders" created="Tue, 5 Jun 2007 13:52:14 +0100"  >&lt;p&gt;StoreStreamClob has a volatile boolean field released. Could you elaborate a bit on why it needs to be volatile?&lt;/p&gt;

&lt;p&gt;The field storeStream has a comment which says @GuardedBy(&quot;synchronizationObject&quot;). I&apos;m not sure I understand, since there are many methods that access storeStream without synchronizing on synchronizationObject.&lt;/p&gt;</comment>
                            <comment id="12501559" author="kristwaa" created="Tue, 5 Jun 2007 14:47:16 +0100"  >&lt;p&gt;I was planning to use it to ensure visibility of the variable without having to obtain a lock. This it achieves, but since release() is closing the store stream as well, I need to obtain a lock to ensure the stream is not closed while an operation is being performed on it. Thus the volatile modifier must go away (I will fix this at once).&lt;/p&gt;

&lt;p&gt;And the reason why you don&apos;t understand much of the synchronization policy, is because it is not yet in place &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
The task grew a bit bigger than expected, and I need to push it out to &quot;get things done&quot;. It is also bad to track all these things under this issue.&lt;br/&gt;
I have created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2762&quot; title=&quot;Document, verify and fix synchronization issues related to Clob in the embedded driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2762&quot;&gt;DERBY-2762&lt;/a&gt; to track the synchronization issue. There are also some related issues already filed, and I hope we can link them up soon.&lt;/p&gt;

&lt;p&gt;Even though there are important things not yet addressed regarded to Clob, all our tests passes...&lt;br/&gt;
As a little warning, we might see some instabilities related to Clobs. There are two reasons; this rewrite on the embedded side, and the enabling of locator support on the client side. I think we should get these improvements into trunk ASAP and then address the remaining issues.&lt;/p&gt;</comment>
                            <comment id="12501566" author="knutanders" created="Tue, 5 Jun 2007 15:04:41 +0100"  >&lt;p&gt;Thanks for explaining the synchronization and opening a new issue!&lt;/p&gt;

&lt;p&gt;One more minor comment. Aren&apos;t these checks in StoreStreamClob&apos;s constructor redundant?&lt;/p&gt;

&lt;p&gt;        if (stream == null) &lt;/p&gt;
{
            throw new IllegalArgumentException(&quot;Stream cannot be &amp;lt;null&amp;gt;&quot;);
        }
&lt;p&gt;        if (conChild == null) &lt;/p&gt;
{
            throw new IllegalArgumentException(&quot;conChild cannot be &amp;lt;null&amp;gt;&quot;);
        }
&lt;p&gt;        if (!(stream instanceof Resetable)) &lt;/p&gt;
{
            throw new IllegalArgumentException(&quot;Stream must be resetable: &quot; +
                stream.toString());
        }

&lt;p&gt;Without these checks, the constructor would have thrown NullPointerException (for the first two) and ClassCastException (for the last one). I&apos;m not sure throwing IllegalArgumentException instead of NPE/CCE adds any value. Perhaps we should remove the checks and add @throws tags to the javadoc stating explicitly that we get NPE when stream or conChild is null and CCE if stream is not a Resetable?&lt;/p&gt;</comment>
                            <comment id="12501575" author="knutanders" created="Tue, 5 Jun 2007 15:27:57 +0100"  >&lt;p&gt;&amp;gt; d) I need to look into/verify synchronization (on the connection&lt;br/&gt;
&amp;gt; child). Can anyone please enlighten me on the importance of calling&lt;br/&gt;
&amp;gt; setupContextStack/restoreContextStack?&lt;/p&gt;

&lt;p&gt;I wondered about this myself when I looked at the patch. It seems like the existing clob/blob implementation sets up the context stack most of the times it accesses the stream to/from store, but not always. Perhaps someone else knows the details about when it is required?&lt;/p&gt;</comment>
                            <comment id="12501576" author="kristwaa" created="Tue, 5 Jun 2007 15:31:21 +0100"  >&lt;p&gt;Yes you are right, they are now redundant.&lt;/p&gt;

&lt;p&gt;I say now because earlier the variables were not accessed in the constructor but simply tucked away, and you would get the NPE/CCE when you executed some other method on the Clob object. For the reasons you mention, they should now be removed. Committed check removals and JavaDoc additions to trunk with revision 544503.&lt;/p&gt;

&lt;p&gt;Thanks a lot!&lt;/p&gt;</comment>
                            <comment id="12501581" author="kristwaa" created="Tue, 5 Jun 2007 15:55:52 +0100"  >&lt;p&gt;&apos;derby-2646-06a-embedclob_clobstreamcontrol.diff&apos; is the last planned patch for this issue.&lt;br/&gt;
It changes EmbedClob to use the new InternalClob interface, and updates ClobStreamControl accordingly (basically removes functionality moved to StoreStreamClob).&lt;/p&gt;

&lt;p&gt;A few comments on changes in ClobStreamControl:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I added a simple caching mechanism for the last character position accessed. The cache simply stores the corresponding byte position. Its primary objective is to reduce the penalty taken when writing/reading one byte/char at a time.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;It no longer extends LOBStreamControl, but keeps a reference to an instance of it (composition). This caused the addition of some methods that only forwards the calls to LOBStreamControl.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There will be a version 06b of this patch, which I plan to commit tomorrow morning, but I wanted to give people a change to have a look. For the curious, I suggest applying the patch and looking at the Java source files instead of the diff. The changes are partly very extensive.&lt;/p&gt;

&lt;p&gt;What remains for 06b is any last minute changes I might see fit and the enabling of the tests. Note that also this patch will have some shortcomings that have to be addressed through other Jiras (for instance &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2762&quot; title=&quot;Document, verify and fix synchronization issues related to Clob in the embedded driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2762&quot;&gt;DERBY-2762&lt;/a&gt; and the streaming issues).&lt;/p&gt;

&lt;p&gt;All feedback is appreciated!&lt;/p&gt;</comment>
                            <comment id="12501909" author="kristwaa" created="Wed, 6 Jun 2007 12:50:26 +0100"  >&lt;p&gt;&apos;derby-2646-06b-embedclob_clobstreamcontrol.diff&apos; is based on 06a, but includes the following changes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Enables the new jdbcapi/ClobTest.&lt;/li&gt;
	&lt;li&gt;Fixed two bugs in ClobStreamControl related to the position caching.&lt;/li&gt;
	&lt;li&gt;A few doc changes.&lt;/li&gt;
	&lt;li&gt;Cleaned up some code in the jdbc4/ClobTest and enabled a few more methods to be tested for throwing an exception after free is called. There is a bug in this area (code not tested earlier), but it requires addition of SQLStates and to define the correct behavior of setString so I will report/handle it separately.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the last major patch for this issue. Please test the Clob functionality.&lt;br/&gt;
If you find bugs, please ask if it is known already, or file a Jira for it.&lt;/p&gt;

&lt;p&gt;Committed version 06b to trunk with revision 544814.&lt;br/&gt;
Will resolve/close in a few days if appropriate.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12371026">DERBY-2769</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12370911">DERBY-2760</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12370923">DERBY-2762</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12357732" name="derby-2646-01a_trailing_space.diff" size="14620" author="kristwaa" created="Mon, 21 May 2007 10:29:18 +0100"/>
                            <attachment id="12357733" name="derby-2646-01a_trailing_space.stat" size="130" author="kristwaa" created="Mon, 21 May 2007 10:29:19 +0100"/>
                            <attachment id="12358168" name="derby-2646-02a-clob-reorg.diff" size="71315" author="kristwaa" created="Thu, 24 May 2007 23:16:33 +0100"/>
                            <attachment id="12358200" name="derby-2646-02a-clob-reorg.stat" size="705" author="kristwaa" created="Fri, 25 May 2007 09:22:21 +0100"/>
                            <attachment id="12358439" name="derby-2646-03a-internalclob.diff" size="8120" author="kristwaa" created="Tue, 29 May 2007 16:58:36 +0100"/>
                            <attachment id="12358831" name="derby-2646-04a-storestreamclob_utf8util.diff" size="23968" author="kristwaa" created="Mon, 4 Jun 2007 09:06:55 +0100"/>
                            <attachment id="12358832" name="derby-2646-04a-storestreamclob_utf8util.stat" size="191" author="kristwaa" created="Mon, 4 Jun 2007 09:06:55 +0100"/>
                            <attachment id="12358840" name="derby-2646-04b-storestreamclob_utf8util.diff" size="24818" author="kristwaa" created="Mon, 4 Jun 2007 10:55:26 +0100"/>
                            <attachment id="12358866" name="derby-2646-05a-tests.diff" size="48274" author="kristwaa" created="Mon, 4 Jun 2007 15:40:23 +0100"/>
                            <attachment id="12358867" name="derby-2646-05a-tests.stat" size="609" author="kristwaa" created="Mon, 4 Jun 2007 15:40:24 +0100"/>
                            <attachment id="12358946" name="derby-2646-05b-tests.diff" size="50634" author="kristwaa" created="Tue, 5 Jun 2007 12:08:53 +0100"/>
                            <attachment id="12358973" name="derby-2646-06a-embedclob_clobstreamcontrol.diff" size="52523" author="kristwaa" created="Tue, 5 Jun 2007 15:55:52 +0100"/>
                            <attachment id="12358974" name="derby-2646-06a-embedclob_clobstreamcontrol.stat" size="329" author="kristwaa" created="Tue, 5 Jun 2007 15:55:52 +0100"/>
                            <attachment id="12359073" name="derby-2646-06b-embedclob_clobstreamcontrol.diff" size="60626" author="kristwaa" created="Wed, 6 Jun 2007 12:50:26 +0100"/>
                            <attachment id="12359074" name="derby-2646-06b-embedclob_clobstreamcontrol.stat" size="583" author="kristwaa" created="Wed, 6 Jun 2007 12:50:26 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 5 Jun 2007 11:11:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30553</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0yh3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39403</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>