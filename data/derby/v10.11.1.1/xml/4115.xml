<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:41:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4115/DERBY-4115.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4115] Provide a way to drop statistics information</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4115</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Now that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-269&quot; title=&quot;Provide some way to update index cardinality statistics (e.g. reimplement update statistics)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-269&quot;&gt;&lt;del&gt;DERBY-269&lt;/del&gt;&lt;/a&gt; has been resolved,  users can update statistics, but once they do, they are committed to using and maintaining the statistics, even if it doesn&apos;t improve performance or they have difficulty maintaining the statistics on a regular basis.  It would be good to have a way to drop statistics information so that users could revert to the prior behavior if needed.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12419334">DERBY-4115</key>
            <summary>Provide a way to drop statistics information</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                            <label>derby_backport_reject_10_8</label>
                    </labels>
                <created>Tue, 24 Mar 2009 19:03:26 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:08 +0100</updated>
                            <resolved>Tue, 22 May 2012 04:24:34 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                            <comments>
                            <comment id="13244029" author="kristwaa" created="Mon, 2 Apr 2012 09:15:07 +0100"  >&lt;p&gt;This seems like a simple system procedure to implement, and could be useful now that automatic updates of index cardinality statistics is enabled by default. We just saw a user report where the statistics were messed up due to a bug in Derby, and this caused the istat daemon to go crazy. A bug in the daemon itself would also be easier to work around if it is possible to discard existing statistics after the daemon has been disabled.&lt;/p&gt;

&lt;p&gt;Has this feature never been implemented due to lack of demand, or are there potential issues that haven&apos;t been noted in this JIRA?&lt;/p&gt;</comment>
                            <comment id="13244305" author="mikem" created="Mon, 2 Apr 2012 17:35:28 +0100"  >&lt;p&gt;Of course can&apos;t say without seeing an implementation, but I can&apos;t think of potential issues for not implementing this.  And give &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; it seems even more useful.  One problem is I don&apos;t think we can backport this feature, as adding a new system procedure&lt;br/&gt;
would create compatibility/upgrade issues.  So would not help 10.8 users but would help in the future for 10.9 and above.  &lt;/p&gt;

&lt;p&gt;And it would be great if the implementation handled the unexpected rows caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;, since even after this bug is fixed&lt;br/&gt;
we may always in the future still see these rows as people upgrade old dbs to new derby versions.&lt;/p&gt;</comment>
                            <comment id="13244317" author="mikem" created="Mon, 2 Apr 2012 17:40:21 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; can leave bad rows in statistics catalog, would be good to have a way to manually get rid of this bad row.  I think it would be hard to implement going after just the bad row as I think it references an object that does not exist anymore.  So seems sufficient to provide a way to drop all statistics, and have the implementation handle this unexpected row also.&lt;/p&gt;</comment>
                            <comment id="13244624" author="kmarsden" created="Mon, 2 Apr 2012 22:05:05 +0100"  >&lt;p&gt;&amp;gt;Has this feature never been implemented due to lack of demand, or are there potential issues that haven&apos;t been noted in this JIRA? &lt;/p&gt;

&lt;p&gt;I filed it in response to a specific user case where it would have been helpful.   Now with automatic index stat it is more needed.  I think it hasn&apos;t been picked up before now because folks just haven&apos;t had the bandwidth and it is not a bug so doesn&apos;t get reviewed often with triage. I think it would be a great addition and am marking it High Value Fix in case anyone finds that inspiring #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13259826" author="mamtas" created="Mon, 23 Apr 2012 19:43:35 +0100"  >&lt;p&gt;Are we talking about dropping statistics for a specific table or all the tables in a given schema? I think either could be implemented but wanted to double check the scope of the procedure.&lt;/p&gt;</comment>
                            <comment id="13260056" author="mikem" created="Mon, 23 Apr 2012 23:56:16 +0100"  >&lt;p&gt;I suggest an incremental approach, but add enough arguments for future expansion.  I would think a good first step would be a call that dropped all the statistics for a single table.  So include schema, table and indexname arguments, but for first step only support null for&lt;br/&gt;
indexname which would mean drop all stats for a table.&lt;/p&gt;

&lt;p&gt;Next step might be to support dropping just those stats on a particular index.  &lt;/p&gt;</comment>
                            <comment id="13260236" author="mamtas" created="Tue, 24 Apr 2012 06:36:38 +0100"  >&lt;p&gt;This is first incremental patch(not ready for commit). It just has the very basic prototype for a stored procedure which will eventually drop the statistics for a given table or it&apos;s index. The procedure at this point just has a println priting the parameters that were passed to it.&lt;/p&gt;

&lt;p&gt;I have added one call to this procedure to make sure that it gets invoked without any error.&lt;/p&gt;

&lt;p&gt;Next, I plan to write upgrade test to make sure that this method will not be available on pre-10.9 dbs, soft=upgraded dbs. It should only be available on hard upgraded dbs.&lt;/p&gt;</comment>
                            <comment id="13260399" author="kristwaa" created="Tue, 24 Apr 2012 10:53:51 +0100"  >&lt;p&gt;&amp;gt; Next, I plan to write upgrade test to make sure that this method will not be available on pre-10.9 dbs, soft=upgraded dbs. It should only be available on hard upgraded dbs. &lt;/p&gt;

&lt;p&gt;It&apos;s been a while since I looked into upgrade and stored procedures. Does the restriction above come from the fact that we can&apos;t support the alternative behavior? That would be to allow the procedure to be called on a soft upgraded database to remove orphaned statistics, and then continue using the older version afterwards. This way the problem can be fixed without moving off the current Derby version.&lt;br/&gt;
Even if the above is technically possible, I&apos;m fine with forbidding it if it conflicts with our current policy. I was just a bit curious &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13260706" author="mamtas" created="Tue, 24 Apr 2012 17:57:00 +0100"  >&lt;p&gt;I forgot to mention in my earlier patch that I have given the new routine(SYSCS_DROP_STATISTICS) public access (same as existing update statistics procedure). This happens in DataDictionaryImpl, where SYSCS_DROP_STATISTICS is added to the list of public access procedures in sysUtilProceduresWithPublicAccess. Just wanted to bring this up since it is not very obvious. Thanks&lt;/p&gt;

&lt;p&gt;Also, please let me know if we should use a different name for this procedure. I am using SYSCS_DROP_STATISTICS in the attached patch.&lt;/p&gt;</comment>
                            <comment id="13260712" author="mikem" created="Tue, 24 Apr 2012 18:08:42 +0100"  >&lt;p&gt;&amp;gt;t&apos;s been a while since I looked into upgrade and stored procedures. Does the restriction above come from the fact that we can&apos;t support &amp;gt;the alternative behavior? That would be to allow the procedure to be called on a soft upgraded database to remove orphaned statistics, &amp;gt;and then continue using the older version afterwards. This way the problem can be fixed without moving off the current Derby version.&lt;br/&gt;
&amp;gt;Even if the above is technically possible, I&apos;m fine with forbidding it if it conflicts with our current policy. I was just a bit curious &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;I think it &quot;might&quot; be possible, but that we should not do it for soft upgrade.  The idea with soft upgrade is that a user should be able to run 10.9 software in soft upgrade mode and then go back to running 10.1 software if it is a 10.1 database.  If their application has calls to the new drop statistics routine it is very likely not to work when run in 10.1 software and we don&apos;t want to be supporting that.  This specific routine might work for some subset of situation, but the policy to disable new syntax features in soft upgrade seems clean and leads &lt;br/&gt;
to easily understood behavior, rather than allow some and not others.  &lt;/p&gt;</comment>
                            <comment id="13260783" author="mikem" created="Tue, 24 Apr 2012 19:23:47 +0100"  >&lt;p&gt;I am good with the name of the procedure, and with respect to roles and permissions I think it should just function the same way as update statistics routine does.  &lt;/p&gt;</comment>
                            <comment id="13261172" author="mamtas" created="Wed, 25 Apr 2012 01:31:07 +0100"  >&lt;p&gt;I am attaching second incremental patch(DERBY4115_patch2_diff) which takes care of some of the test failures(expected failures because of the addition of a new system procedure). I am rerunning the junit suite to make sure there is no other test failing because of the new stored procedure. I will also run derbyall to see if it has any problems. Thanks&lt;/p&gt;</comment>
                            <comment id="13261858" author="mamtas" created="Wed, 25 Apr 2012 19:00:26 +0100"  >&lt;p&gt;I am attaching another patch(DERBY4115_patch3_diff) which is similar to patch 2 with the addition of basic upgrade test for the new procedure. This test ensures that drop statistics procedure is available only after hard upgrade.&lt;/p&gt;</comment>
                            <comment id="13261884" author="mamtas" created="Wed, 25 Apr 2012 19:18:50 +0100"  >&lt;p&gt;As the next step, I am looking at actually implementing the routine now that the ground work is done. I think the implementation should be similar to update statistics, ie allow the code to go through ALTER TABLE where permission/privilege checking, table/schema/index name validations happen automatically and we can implement the routine through ALTER TABLE. This will require changing ALTER TABLE syntax(same as we did for update statistics) but it will be an internal syntax and won&apos;t be available to an end user directly. &lt;/p&gt;</comment>
                            <comment id="13263173" author="mamtas" created="Thu, 26 Apr 2012 22:51:58 +0100"  >&lt;p&gt;Attaching patch, DERBY4115_patch4_diff, which is same as previous patch but now has changes to sqlgrammar.,jj to recognize the internal syntax ALTER TABLE tablename ALL DROP STATISTICS or ALTER TABLE tablename DROP STATISTICS indexname. Currently, this just calls the code for update statistics. This is of course wrong but I wanted to see that the basic framework to support new syntax works in the grammar.&lt;/p&gt;

&lt;p&gt;Next, I plan to change the new procedure to actually send the ALTER TABLE DROP STATISTICS call when the procedure is invoked.&lt;/p&gt;

&lt;p&gt;After thatt, I plan to make changes so that we call some dummy code(as the first step) in alter table when DROP STATISTICS is requested by the new stored procedure through the sql grammar..&lt;/p&gt;</comment>
                            <comment id="13263284" author="bryanpendleton" created="Fri, 27 Apr 2012 01:56:11 +0100"  >&lt;p&gt;Is this syntax just an example? Or is this the intended syntax? I&apos;m trying to figure out what the word &quot;ALL&quot; means in &quot;ALL DROP STATISTICS&quot;, and whether it should be &quot;DROP ALL STATISTICS&quot; instead.&lt;/p&gt;</comment>
                            <comment id="13263300" author="mamtas" created="Fri, 27 Apr 2012 02:54:34 +0100"  >&lt;p&gt;Hi Bryan, thanks for looking at the patch. &lt;/p&gt;

&lt;p&gt;The syntax indeed is &quot;ALL DROP STATISTICS&quot;. It pretty much mirrors what we have implemented for updated statistics which has the internal syntax of &quot;ALL UPDATE STATISTICS&quot;. I am not sure why we chose it to be that way. May be it was easier to implement it that way in the parser and since this is internal only syntax, may be we decided to go ahead with &quot;ALL UPDATE STATISTICS&quot; rather than &quot;UPDATE ALL STATISTICS&quot;.&lt;/p&gt;</comment>
                            <comment id="13265863" author="mamtas" created="Tue, 1 May 2012 16:33:03 +0100"  >&lt;p&gt;Attaching DERBY4115_patch5_diff, which is similar to earlier patch(DERBY4115_patch4_diff) but now has the new procedure actually calling the ALTER TABLE to drop the statistics rather than just ding a println. Additionally, I also had to change sqlgrammar.jj compared to the last patch. This is because of the parsing conflict that can arise when a table has a column named STATISTICS and an index named STATISTICS. If the user wants to drop the column STATISTICS, they will issue ALTER TABLE t1 DROP STATISITCS. If the user wants to drop the statistics for index STATISTICS, the patch 4(earlier patch) would generate ALTER TABLE DROP STATISITCS indexanme. This causes the parser to get confused and give an error. In order to solve this problem, without spending too much time on the syntax since it is an internal only syntax anyways(since a user will not be issue this ALTER TABLE syntax directly to drop the statisitcs), I have changed the grammar to use following internal syntax for dropping statisitcs ALTER TABLE STATISTICS DROP indexname&lt;/p&gt;

&lt;p&gt;So, following will be the internal syntax for various formats of update and drop statisitcs generated through SYSCS_UPDATE_STATISTICS and SYSCS_DROP_STATISTICS&lt;br/&gt;
ALTER TABLE ALL DROP STATISITCS &amp;#8211; when the user wants all the statistics for a table to be dropped&lt;br/&gt;
ALTER TABLE STATISTICS DROP indexname - when the user wants only indexname&apos;s statistics dropped&lt;br/&gt;
Corresponding update statistics syntax are as follows&lt;br/&gt;
ALTER TABLE ALL UODATE STATISITCS &amp;#8211; when the user wants all the statistics for a table to be updated&lt;br/&gt;
ALTER TABLE UPDATE STATISTICS indexname - when the user wants only indexname&apos;s statistics updated&lt;/p&gt;

&lt;p&gt;For consistency purposes, I could change the update statistics single index to match the drop statistics single index as follows but first I want to focus on finishing the changes for drop statistics&lt;br/&gt;
ALTER TABLE STATISTICS UPDATE indexname - when the user wants only indexname&apos;s statistics updated&lt;/p&gt;

&lt;p&gt;The details of all the changes in this patch are listed below.&lt;br/&gt;
1)Added a new routine SYSCS_DROP_STATISTICS, with public access similar to SYSCS_UPDATE_STATISTICS. This happens in DataDictionaryImpl, where SYSCS_DROP_STATISTICS is added to the list of public access procedures in sysUtilProceduresWithPublicAccess&lt;br/&gt;
2)The new stored procedure implementation is similar to update statistics, ie allow the routine to go through ALTER TABLE where permission/privilege checking, table/schema/index name validations happen automatically and we implement the routine logic through extension of ALTER TABLE syntax. This new syntax for ALTER TABLE syntax(same as we did for update statistics) is an internal syntax only and won&apos;t be available to an end user directly. &lt;br/&gt;
3)This patch changes sqlgrammar.jj to recognize the following internal syntaxes for ALTER TABLE&lt;br/&gt;
a)ALTER TABLE tablename ALL DROP STATISTICS &lt;br/&gt;
The existing(corresponding syntax) for update statistics is as follows&lt;br/&gt;
ALTER TABLE tablename ALL UPDATE STATISTICS &lt;br/&gt;
b)ALTER TABLE tablename STATISTICS DROP indexname&lt;br/&gt;
The existing(corresponding syntax) for update statistics is as follows&lt;br/&gt;
ALTER TABLE tablename UPDATE STATISTICS indexname&lt;br/&gt;
Notice the two syntaxes for index level statistics are different for drop vs update.(the reason for the syntax difference is explained above)&lt;br/&gt;
4)The patch takes care of some of the test failures(expected failures because of the addition of a new system procedure).&lt;br/&gt;
5)The patch adds basic upgrade test for the new procedure. This test ensures that drop statistics procedure is available only after hard upgrade. &lt;/p&gt;

&lt;p&gt;Next step to do is to add more tests(regular and upgrade tests). Add more comments in the code where appropriate.&lt;/p&gt;

&lt;p&gt;Future improvement step (which could go as patch of it&apos;s own) could be -&lt;br/&gt;
For consistency purposes, we could change the update statistics single index to match the drop statistics single index but first I want to focus on finishing the changes for drop statistics&lt;/p&gt;</comment>
                            <comment id="13269538" author="kristwaa" created="Mon, 7 May 2012 12:35:51 +0100"  >&lt;p&gt;Hi Mamta,&lt;/p&gt;

&lt;p&gt;I had a look at patch 5. The tests ran sucessfully, and my simple manual invokations behaved like they should.&lt;br/&gt;
Here are some comments, suggestions, and questions about the patch:&lt;br/&gt;
 a) Inconsistent use of tabs and spaces for indentation.&lt;br/&gt;
 b) Would it be okay to use (indexNameForStatistics == null) instead of&lt;br/&gt;
    dropStatisticsAll to reduce the state of the class? The relationship&lt;br/&gt;
    could be documented with dropStatistics.&lt;br/&gt;
 c) Typo in sqlgrammar.jj&lt;br/&gt;
    &quot;By the type&quot; -&amp;gt; &quot;By the time&quot;&lt;br/&gt;
 d) SystemProcedures.SYSCS_DROP_STATISTICS:&lt;br/&gt;
    o typo in @param indexname. Also, I don&apos;t understand the comment about&lt;br/&gt;
      indexname being the empty string. Is that allowed? The parser falls over&lt;br/&gt;
      if I try to specify it as an argument to the SQL call.&lt;br/&gt;
    o incorrect @exception (or @throws) in Javadoc&lt;br/&gt;
    o debug println&lt;br/&gt;
 e) What&apos;s the reason for the change in Changes10_2?&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;</comment>
                            <comment id="13270864" author="mamtas" created="Tue, 8 May 2012 22:47:07 +0100"  >&lt;p&gt;Kristian, thanks for taking the time to review the patch. Here are my answers.&lt;br/&gt;
 a) Inconsistent use of tabs and spaces for indentation. &lt;br/&gt;
   I will fix this. Not sure why Eclipse is not consistent in using one vs the others.&lt;/p&gt;

&lt;p&gt; b) Would it be okay to use (indexNameForStatistics == null) instead of &lt;br/&gt;
    dropStatisticsAll to reduce the state of the class? The relationship &lt;br/&gt;
    could be documented with dropStatistics. &lt;br/&gt;
  I wondered about this myself when I copied the model for update statistics for drop statistics. My gut feeling is that this was done in order to avoid the conflict with pre-existing 4 parameter init() method for compress table and hence we may have decided to add a new init method with 5 parameters but I am not 100% sure about this theory. I am planning on uploading a patch soon which will update upgrade tests and more regular tests for drop statistics. If there are no comments on that patch, I would like to go ahead and commit that patch. We can address the redundancy of extra parameter dropStatisticsAll/updateStatisticsAll in a future patch.&lt;/p&gt;

&lt;p&gt; c) Typo in sqlgrammar.jj &lt;br/&gt;
    &quot;By the type&quot; -&amp;gt; &quot;By the time&quot; &lt;br/&gt;
  I will fix this.&lt;/p&gt;

&lt;p&gt; d) SystemProcedures.SYSCS_DROP_STATISTICS: &lt;br/&gt;
    o typo in @param indexname. Also, I don&apos;t understand the comment about &lt;br/&gt;
      indexname being the empty string. Is that allowed? The parser falls over &lt;br/&gt;
      if I try to specify it as an argument to the SQL call. &lt;br/&gt;
    o incorrect @exception (or @throws) in Javadoc &lt;br/&gt;
    o debug println &lt;br/&gt;
  I will fix this.&lt;/p&gt;

&lt;p&gt; e) What&apos;s the reason for the change in Changes10_2? &lt;br/&gt;
  The test after hard upgrades seem to check how many system procedures have public access. Since the drop statistics procedure has public access(similar to update statistics), we need to include that in the expected resultset list.&lt;/p&gt;</comment>
                            <comment id="13271039" author="mamtas" created="Wed, 9 May 2012 04:21:27 +0100"  >&lt;p&gt;Kristian, as for your following comment&lt;br/&gt;
d) SystemProcedures.SYSCS_DROP_STATISTICS: &lt;br/&gt;
    o Also, I don&apos;t understand the comment about &lt;br/&gt;
      indexname being the empty string. Is that allowed? The parser falls over &lt;br/&gt;
      if I try to specify it as an argument to the SQL call. &lt;/p&gt;

&lt;p&gt;You are right, that giving an empty string makes the parse give following exception. I tried using empty string with compress table/update statistics procedure and saw the same behavior. I will go ahead and file a jira for that issue in general.&lt;br/&gt;
ij&amp;gt; call syscs_util.SYSCS_DROP_STATISTICS( &apos;APP&apos;, &apos;T1&apos;, &apos;&apos; );&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&apos; was thrown while evaluating an expression.&lt;br/&gt;
java.sql.SQLException: The exception &apos;java.sql.SQLException: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&apos; was thrown while evaluating an expression.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:98)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:278)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:431)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2360)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1334)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
Caused by: java.sql.SQLException: The exception &apos;java.sql.SQLException: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&apos; was thrown while evaluating an expression.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
        ... 17 more&lt;br/&gt;
Caused by: java.sql.SQLException: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:424)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2360)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:153)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:107)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1685)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1513)&lt;br/&gt;
        at org.apache.derby.catalog.SystemProcedures.SYSCS_DROP_STATISTICS(SystemProcedures.java:792)&lt;br/&gt;
        at org.apache.derby.exe.acace4c0a3x0137x2f19xcc22x00000013e5701.g0(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:611)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:75)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
        ... 10 more&lt;br/&gt;
Caused by: ERROR 42X01: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(ParserImpl.java:153)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:357)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:99)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:1103)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:134)&lt;br/&gt;
        ... 24 more&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&lt;br/&gt;
java.sql.SQLSyntaxErrorException: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:92)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:424)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2360)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:153)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:107)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1685)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1513)&lt;br/&gt;
        at org.apache.derby.catalog.SystemProcedures.SYSCS_DROP_STATISTICS(SystemProcedures.java:792)&lt;br/&gt;
        at org.apache.derby.exe.acace4c0a3x0137x2f19xcc22x00000013e5701.g0(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:611)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:75)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
Caused by: java.sql.SQLException: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
        ... 30 more&lt;br/&gt;
Caused by: ERROR 42X01: Syntax error: Encountered &quot;\&quot;&quot; at line 1, column 40.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(ParserImpl.java:153)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:357)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:99)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:1103)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:134)&lt;br/&gt;
        ... 24 more&lt;br/&gt;
Issue the &apos;help&apos; command for general information on IJ command syntax.&lt;br/&gt;
Any unrecognized commands are treated as potential SQL commands and executed directly.&lt;br/&gt;
Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.&lt;/p&gt;</comment>
                            <comment id="13271057" author="mamtas" created="Wed, 9 May 2012 05:01:51 +0100"  >&lt;p&gt;Created following jira for exception thrown when empty string is passed for index name to update/drop statistics procedures&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5750&quot; title=&quot;Sending an empty string as table name to compress table procedure or empty string as index name to update statistics procedure makes the parser throw an exception.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5750&quot;&gt;&lt;del&gt;DERBY-5750&lt;/del&gt;&lt;/a&gt; Sending an empty string as table name to compress table procedure or empty string as index name to update statistics procedure makes the parser throw an exception.&lt;/p&gt;</comment>
                            <comment id="13271529" author="mamtas" created="Wed, 9 May 2012 17:15:36 +0100"  >&lt;p&gt;Attaching another patch, DERBY4115_patch6_diff.txt, which has more tests including upgrade tests. Additionally, it also fixes code in AlterTableConstantAction to make sure that it sends invalidation signal to dependent statements when statistics are dropped on a table. I found this bug in my previous patch while trying to write a test where the query plan chosen for the query should have changed after the statistics were dropped.&lt;/p&gt;

&lt;p&gt;While writing the upgrade tests, I found that a meaningful test for drop statistics could only be written for Derby releases 10.5 and higher. We have found that when constraints end up sharing same backing index, Derby won&apos;t create statistics for them. This is issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5702&quot; title=&quot;Creating a foreign key constraint does not automatically create a statistics row if foreign key constraint will share a backing index created for a primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5702&quot;&gt;DERBY-5702&lt;/a&gt;. But if we run update statistics on that constraint, we will be able to get the statistics for such a constraint. Later, when the constraint is dropped, because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;, the statistics row for such a constraint(one that shares it&apos;s backing index with another constraint) is never dropped. We can use drop statistics procedure introduced in this jira to take care of such hanging indexes. But since update statistics procedure is only available in 10.5 and higher, I couldn&apos;t demonstrate use of drop statistics to drop hanging statistics rows.&lt;/p&gt;

&lt;p&gt;I have also taken care of some of the review comments by Kristian.&lt;/p&gt;

&lt;p&gt;The details of all the changes in this patch are listed below. &lt;br/&gt;
1)Added a new routine SYSCS_DROP_STATISTICS, with public access similar to SYSCS_UPDATE_STATISTICS. This happens in DataDictionaryImpl, where SYSCS_DROP_STATISTICS is added to the list of public access procedures in sysUtilProceduresWithPublicAccess &lt;br/&gt;
2)The new stored procedure implementation is similar to update statistics, ie allow the routine to go through ALTER TABLE where permission/privilege checking, table/schema/index name validations happen automatically and we implement the routine logic through extension of ALTER TABLE syntax. This new syntax for ALTER TABLE syntax(same as we did for update statistics) is an internal syntax only and won&apos;t be available to an end user directly. &lt;br/&gt;
3)This patch changes sqlgrammar.jj to recognize the following internal syntaxes for ALTER TABLE &lt;br/&gt;
a)ALTER TABLE tablename ALL DROP STATISTICS &lt;br/&gt;
The existing(corresponding syntax) for update statistics is as follows &lt;br/&gt;
ALTER TABLE tablename ALL UPDATE STATISTICS &lt;br/&gt;
b)ALTER TABLE tablename STATISTICS DROP indexname &lt;br/&gt;
The existing(corresponding syntax) for update statistics is as follows &lt;br/&gt;
ALTER TABLE tablename UPDATE STATISTICS indexname &lt;br/&gt;
Notice the two syntaxes for index level statistics are different for drop vs update.(the reason for the syntax difference is explained above) &lt;br/&gt;
4)After the statistics are dropped, we send invalidation signal to dependent statements so they would get recompiled when they are executed next time. This will make sure that they pick the correct plan given the statistics for the table.&lt;br/&gt;
5)The patch takes care of some of the test failures(expected failures because of the addition of a new system procedure). &lt;br/&gt;
6)The patch adds basic upgrade test for the new procedure. This test ensures that drop statistics procedure is available only after hard upgrade. &lt;br/&gt;
7)While writing the upgrade tests, I found that a meaningful test for drop statistics could only be written for Derby releases 10.5 and higher. We have found that when constraints end up sharing same backing index, Derby won&apos;t create statistics for them. This is issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5702&quot; title=&quot;Creating a foreign key constraint does not automatically create a statistics row if foreign key constraint will share a backing index created for a primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5702&quot;&gt;DERBY-5702&lt;/a&gt;. But if we run update statistics on that constraint, we will be able to get the statistics for such a constraint. Later, when the constraint is dropped, because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;, the statistics row for such a constraint(one that shares it&apos;s backing index with another constraint) is never dropped. We can use drop statistics procedure introduced in this jira to take care of such hanging indexes. But since update statistics procedure is only available in 10.5 and higher, I couldn&apos;t demonstrate use of drop statistics to drop hanging statistics rows.&lt;/p&gt;

&lt;p&gt;If there are no further comments on this patch, I will work on the committing this patch tomorrow. Thanks&lt;/p&gt;</comment>
                            <comment id="13271735" author="mamtas" created="Wed, 9 May 2012 20:55:25 +0100"  >&lt;p&gt;This issue can&apos;t be backported because of the changes to the contents of the system tables.&lt;/p&gt;</comment>
                            <comment id="13280150" author="kristwaa" created="Mon, 21 May 2012 14:49:57 +0100"  >&lt;p&gt;Attaching patch 7a, which moves the upgrade test from BasicSetup to Changes10_9. With the changes going in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; there are more states to consider, and it makes more sense to move the test such that you don&apos;t have to consider all states (i.e. the expected number of statistics entries).&lt;br/&gt;
I also corrected a bug which would fail if the test ever ran on 10.9 (it expected to fail when trying to invoke SYSCS_DROP_STATISTICS, but this would have suceeded on 10.9).&lt;/p&gt;

&lt;p&gt;The upgrade tests passed for 10.1.1.0 and 10.8.2.2.&lt;br/&gt;
I expect to commit this patch shortly, since I have basically only moved code (I also removed some ifs).&lt;br/&gt;
Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="13280195" author="kristwaa" created="Mon, 21 May 2012 15:57:09 +0100"  >&lt;p&gt;suites.All completed with patch 7a.&lt;br/&gt;
Committed to trunk with revision 1341059.&lt;/p&gt;</comment>
                            <comment id="13685135" author="knutanders" created="Mon, 17 Jun 2013 10:19:08 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12548973">DERBY-5681</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="32488">DERBY-269</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12523926" name="DERBY4115_patch1_diff.txt" size="4112" author="mamtas" created="Tue, 24 Apr 2012 06:36:37 +0100"/>
                            <attachment id="12524089" name="DERBY4115_patch2_diff.txt" size="7451" author="mamtas" created="Wed, 25 Apr 2012 01:31:07 +0100"/>
                            <attachment id="12524314" name="DERBY4115_patch3_diff.txt" size="11223" author="mamtas" created="Wed, 25 Apr 2012 19:00:26 +0100"/>
                            <attachment id="12524774" name="DERBY4115_patch4_diff.txt" size="18378" author="mamtas" created="Thu, 26 Apr 2012 22:51:58 +0100"/>
                            <attachment id="12525177" name="DERBY4115_patch5_diff.txt" size="34822" author="mamtas" created="Tue, 1 May 2012 16:33:03 +0100"/>
                            <attachment id="12526179" name="DERBY4115_patch6_diff.txt" size="52776" author="mamtas" created="Wed, 9 May 2012 17:15:35 +0100"/>
                            <attachment id="12528426" name="derby-4115-7a-move_test.diff" size="13053" author="kristwaa" created="Mon, 21 May 2012 14:49:57 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12554698">DERBY-5756</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 2 Apr 2012 08:15:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31138</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0bov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35712</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>