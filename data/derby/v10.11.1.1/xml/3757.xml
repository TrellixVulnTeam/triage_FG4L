<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3757/DERBY-3757.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3757] &apos;ASSERT FAILED transaction table has null entry when running new StressMultiTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3757</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When trying the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1764&quot; title=&quot;Rewrite stress.multi as a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1764&quot;&gt;&lt;del&gt;DERBY-1764&lt;/del&gt;&lt;/a&gt;-V2.diff patch of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1764&quot; title=&quot;Rewrite stress.multi as a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1764&quot;&gt;&lt;del&gt;DERBY-1764&lt;/del&gt;&lt;/a&gt;, I got this assertion running the test. It appears to be a bug iin Derby.&lt;/p&gt;

&lt;p&gt;1) testStressMulti(org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest)java.sql.SQLException: Java exception: &apos;ASSERT FAILED transaction table has null entry: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2183)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1325)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.jav&lt;br/&gt;
a:317)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:803)&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED transaction table has null entry&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.TransactionTable.getTransactionInfo(TransactionTable.java:968)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.XactFactory.getTransactionInfo(XactFactory.java:991)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.RawStore.getTransactionInfo(RawStore.java:1153)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMAccessManager.getTransactionInfo(RAMAccessManager.java:912)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Deadlock.buildException(Deadlock.java:266)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(ConcurrentLockSet.java:613)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.AbstractPool.lockObject(AbstractPool.java:117)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForWrite(RowLocking3.java:248)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(HeapController.java:504)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(HeapController.java:638)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(B2IRowLocking3.java:335)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(B2IRowLocking3.java:628)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(B2IRowLockingRR.java:112)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeForwardScan.java:304)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(BTreeScan.java:1809)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(TableScanResultSet.java:680)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(IndexRowToBaseRowResultSet.java:3&lt;br/&gt;
73)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:255)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:186)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:424)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:246)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:384)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatement.java:175)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.update(StressMultiTest.&lt;br/&gt;
java:471)&lt;br/&gt;
        ... 2 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 3, Failures: 0, Errors: 1 &lt;/p&gt;</description>
                <environment>Windows XP&lt;br/&gt;
java version &amp;quot;1.5.0&amp;quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build pwi32dev-20070201 (SR4))&lt;br/&gt;
IBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 Windows XP x86-32 j9vmwi3223-20070201 (JIT enabled)&lt;br/&gt;
J9VM - 20070131_11312_lHdSMR&lt;br/&gt;
JIT  - 20070109_1805ifx1_r8&lt;br/&gt;
GC   - 200701_09)&lt;br/&gt;
JCL  - 20070131&lt;br/&gt;
</environment>
        <key id="12399561">DERBY-3757</key>
            <summary>&apos;ASSERT FAILED transaction table has null entry when running new StressMultiTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Jul 2008 21:52:56 +0100</created>
                <updated>Wed, 12 Jan 2011 22:24:21 +0000</updated>
                            <resolved>Mon, 4 Jan 2010 12:07:47 +0000</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12614876" author="kmarsden" created="Fri, 18 Jul 2008 22:21:40 +0100"  >&lt;p&gt;This issue was discovered during the conversion of stress.multi (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1764&quot; title=&quot;Rewrite stress.multi as a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1764&quot;&gt;&lt;del&gt;DERBY-1764&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12614907" author="mikem" created="Fri, 18 Jul 2008 23:42:45 +0100"  >&lt;p&gt;I don&apos;t think this code is doing the right kind of synchronization, but given that it is for diagnosics only I am not sure it is worth adding additional synchronization.  Would appreciate another set of eyes to try and figure out how the null entry comes about.&lt;/p&gt;

&lt;p&gt;The code in public TransactionInfo[] getTransactionInfo(), synchronizes on &quot;this&quot;&lt;br/&gt;
 synchronized(this)&lt;br/&gt;
 {&lt;br/&gt;
     int ntran = trans.size();&lt;br/&gt;
     tinfo = new TransactionTableEntry&lt;span class=&quot;error&quot;&gt;&amp;#91;ntran&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;     LogInstant logInstant = null;&lt;br/&gt;
     int i = 0;&lt;/p&gt;

&lt;p&gt;     for (Enumeration e = trans.elements();&lt;br/&gt;
          e.hasMoreElements(); )&lt;/p&gt;
     {
         TransactionTableEntry ent =
             (TransactionTableEntry)e.nextElement();

         if (ent != null)
             tinfo[i++] = (TransactionTableEntry)ent.clone();

         if (SanityManager.DEBUG)
             SanityManager.ASSERT(ent != null, &quot;transaction table has nul
&quot;);
     }
&lt;p&gt; }&lt;/p&gt;


&lt;p&gt;But the rest of the routine, like add and remove element seems to count on the automatic synchronization of the &lt;br/&gt;
HashTable which is a field of this class.  So could a concurrent remove or add to the hash table affect the &lt;br/&gt;
middle of looping through the Enumeration and get a null?&lt;/p&gt;

&lt;p&gt;I would lean toward just getting rid of this assert for this routine which is used only for diagnostics like vti and error messages.&lt;/p&gt;</comment>
                            <comment id="12615950" author="knutanders" created="Wed, 23 Jul 2008 11:51:52 +0100"  >&lt;p&gt;It looks to me as if the rest of the class actually uses synchronization on &quot;this&quot; when entries are added to or removed from the  hash table. The exception is if it happens during recovery (which is single-threaded and therefore OK), but it also looks like there&apos;s a code path from Xact.close() -&amp;gt; XactFactory.remove() -&amp;gt; Xact.remove() -&amp;gt; Hashtable.remove() that is not synchronized on &quot;this&quot; and which is likely causing the assert failure by removing an entry while another thread is iterating over the table.&lt;/p&gt;

&lt;p&gt;Although this failure is seen in debug code, I think it indicates that the synchronization scheme used in TransactionTable is flawed, so I would feel more comfortable if we fixed the synchronization. I have tried to understand how the synchronization in this class is supposed to work before, but with no success.&lt;/p&gt;

&lt;p&gt;What I have problem understanding, is when to synchronize on which object. The class javadoc says that the class depends on Hashtable synchronization, but says nothing about synchronization on &quot;this&quot;. Some of the methods explicitly synchronize on &quot;this&quot;, others on &quot;trans&quot;, some rely on the implicit synchronization from the Hashtable class, and some have a synchronized (this) block enclosing a synchronized (trans) block. Some of the code even says that we need synchronization on &quot;this&quot; here without synchronizing on &quot;this&quot;.&lt;/p&gt;</comment>
                            <comment id="12620948" author="ebirkenes" created="Fri, 8 Aug 2008 16:03:26 +0100"  >&lt;p&gt;This patch just comments out the assert in org.apache.derby.impl.store.raw.xact.TransactionTable.&lt;/p&gt;</comment>
                            <comment id="12721957" author="espinha" created="Fri, 19 Jun 2009 20:39:55 +0100"  >&lt;p&gt;I have hit this bug when doing changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;. It doesn&apos;t seem to be connected, but the failure has happened at a different place. The underlying error in derby.log seems to be the same though.&lt;/p&gt;

&lt;p&gt;Here&apos;s the stack trace for the failure:&lt;br/&gt;
-----------&lt;del&gt;8&amp;lt;&lt;/del&gt;---------------------&lt;br/&gt;
junit.framework.AssertionFailedError: Caused by: &lt;br/&gt;
java.sql.SQLNonTransientConnectionException: Network protocol exception: DSS length not 0 at end of same id chain parse.  The connection has been terminated.&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeQuery(Statement.java:483)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.select(StressMultiTest.java:535)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.java:409)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: Network protocol exception: DSS length not 0 at end of same id chain parse.  The connection has been terminated.&lt;br/&gt;
	at org.apache.derby.client.net.Reply.endOfSameIdChainData(Reply.java:1174)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.readOpenQuery(NetStatementReply.java:66)&lt;br/&gt;
	at org.apache.derby.client.net.StatementReply.readOpenQuery(StatementReply.java:50)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatement.readOpenQuery_(NetStatement.java:156)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.readOpenQuery(Statement.java:1478)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.flowExecute(Statement.java:2095)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeQueryX(Statement.java:489)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeQuery(Statement.java:474)&lt;br/&gt;
	... 3 more&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.handleException(StressMultiTest.java:331)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.access$200(StressMultiTest.java:70)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.java:425)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;</comment>
                            <comment id="12726982" author="knutanders" created="Fri, 3 Jul 2009 15:25:58 +0100"  >&lt;p&gt;Triaged for 10.5.2. As far as I understand, the database does not need to rebooted after this failure, so unchecking crash.&lt;/p&gt;</comment>
                            <comment id="12770253" author="myrna" created="Mon, 26 Oct 2009 23:18:08 +0000"  >&lt;p&gt;I got this stack running StressMultiTest pretty consistently after applying patch diff8 for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1465&quot; title=&quot;NetworkServerControl.start() should throw an exception and not just  print  exceptions  if the server fails to start&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1465&quot;&gt;&lt;del&gt;DERBY-1465&lt;/del&gt;&lt;/a&gt; to trunk updated to revision  827796, with ibm1.5 and sane jars. &lt;/p&gt;</comment>
                            <comment id="12791555" author="knutanders" created="Wed, 16 Dec 2009 19:59:34 +0000"  >&lt;p&gt;I&apos;ve looked more at the synchronization in the TransactionTable class (see comment on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3092&quot; title=&quot;Use java.util.concurrent in TransactionTable to improve scalability&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3092&quot;&gt;&lt;del&gt;DERBY-3092&lt;/del&gt;&lt;/a&gt;), and I believe that getTransactionInfo() should synchronize on &quot;trans&quot; instead of &quot;this&quot;. Synchronization on &quot;this&quot; is used to prevent transaction table entries from changing status to update transactions, which is not important for that method. Instead, we should synchronize on &quot;trans&quot; to prevent entries from being removed between the calls to hasMoreElements() and nextElement().&lt;/p&gt;

&lt;p&gt;As to Mike&apos;s question about how nextElement() could end up returning null, I think the key is that the Enumeration object returned by Hashtable.elements() is not thread-safe. Although all of Hashtable&apos;s public methods are synchronized, none of the methods of the returned Enumeration object are synchronized. This means that there&apos;s nothing preventing Hashtable.remove() from being called and executed in one thread while another thread is executing nextElement().&lt;/p&gt;

&lt;p&gt;I looked at OpenJDK&apos;s implementation of Hashtable, and it looks to me that executing remove() while nextElement() is executing, depending on the exact timing, may result in nextElement() returning null or throwing NoSuchElementException. (The manifestation as a NoSuchElementException is logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3916&quot; title=&quot;StressMultiTest fails with protocol error due to java.util.NoSuchElementException in org.apache.derby.impl.store.raw.xact.TransactionTable.getTransactionInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3916&quot;&gt;&lt;del&gt;DERBY-3916&lt;/del&gt;&lt;/a&gt;.) If we synchronize on the Hashtable object, we would prevent both of these problems.&lt;/p&gt;</comment>
                            <comment id="12791565" author="knutanders" created="Wed, 16 Dec 2009 20:17:37 +0000"  >&lt;p&gt;Here&apos;s a patch that changes the synchronization in the method and adds a comment about why. I believe this patch fixes this issue and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3916&quot; title=&quot;StressMultiTest fails with protocol error due to java.util.NoSuchElementException in org.apache.derby.impl.store.raw.xact.TransactionTable.getTransactionInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3916&quot;&gt;&lt;del&gt;DERBY-3916&lt;/del&gt;&lt;/a&gt;, but I haven&apos;t run any tests yet.&lt;/p&gt;</comment>
                            <comment id="12791830" author="knutanders" created="Thu, 17 Dec 2009 07:35:00 +0000"  >&lt;p&gt;Regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="12793287" author="knutanders" created="Mon, 21 Dec 2009 18:19:14 +0000"  >&lt;p&gt;Committed revision 892912. If the fix doesn&apos;t cause any problems, and StressMultiTest does not run into this issue anymore, we should probably back-port it to 10.5 to make StressMultiTest run cleanly on that branch too. (StressMultiTest was introduced in 10.5.)&lt;/p&gt;</comment>
                            <comment id="12796155" author="knutanders" created="Mon, 4 Jan 2010 12:07:47 +0000"  >&lt;p&gt;Merged fix to 10.5 and committed revision 895609.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12406695">DERBY-3916</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12348657">DERBY-1764</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12387826" name="Derby-3757_1.diff" size="696" author="ebirkenes" created="Fri, 8 Aug 2008 16:03:26 +0100"/>
                            <attachment id="12428217" name="sync_trans.diff" size="1022" author="knutanders" created="Wed, 16 Dec 2009 20:17:37 +0000"/>
                            <attachment id="12411253" name="testStressMulti.tar.gz" size="2170277" author="espinha" created="Fri, 19 Jun 2009 20:39:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Jul 2008 22:42:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23828</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0o2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37719</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>