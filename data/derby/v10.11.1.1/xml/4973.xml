<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4973/DERBY-4973.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4973] NullPointerException in  updatelocks.sql encryption tests on IBM 1.6</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4973</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The IBM 1.6 results for Jan 13, 2011 show the following failure for IBM 1.6 on XP&lt;/p&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;End:   TestEnc jdk1.6.0 DerbyNetClient derbynetclientmats:encodingTests 2011-01-14 00:05:38 ***
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/encryptionAll/storemats/storemats/updatelocks.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: updatelocks jdk1.6.0 storemats:storemats 2011-01-14 00:18:37 ***&lt;br/&gt;
19859a19860,19868&lt;br/&gt;
&amp;gt; ERROR 38000: The exception &apos;java.lang.NullPointerException&apos; was thrown while evaluating an expression.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
&amp;gt; ij&amp;gt; next scan_cursor;&lt;br/&gt;
&amp;gt; A          |B          |C                                                                                                                               &lt;br/&gt;
&amp;gt; --------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
&amp;gt; -3         |-30        |-three                                                                                                                          &lt;br/&gt;
&amp;gt; ij&amp;gt; update a set a=3,b=30,c=&apos;three&apos; where current of scan_cursor;&lt;br/&gt;
&amp;gt; 1 row inserted/updated/deleted&lt;br/&gt;
&amp;gt; ij&amp;gt; select * from lock_table order by tabname, type desc, mode, cnt, lockname;&lt;br/&gt;
19861a19871&lt;br/&gt;
&amp;gt; APP     |UserTran|TABLE   |1   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
19866,19876d19875&lt;br/&gt;
&amp;lt; -3         |-30        |-three                                                                                                                          &lt;br/&gt;
&amp;lt; ij&amp;gt; update a set a=3,b=30,c=&apos;three&apos; where current of scan_cursor;&lt;br/&gt;
&amp;lt; 1 row inserted/updated/deleted&lt;br/&gt;
&amp;lt; ij&amp;gt; select * from lock_table order by tabname, type desc, mode, cnt, lockname;&lt;br/&gt;
&amp;lt; USERNAME|TRANTYPE|TYPE    |CNT |MODE|TABNAME     |LOCKNAME  |STATE|STATUS  &lt;br/&gt;
&amp;lt; ---------------------------------------------------------------------------&lt;br/&gt;
&amp;lt; APP     |UserTran|TABLE   |1   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
&amp;lt; APP     |UserTran|TABLE   |1   |X   |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
&amp;lt; ij&amp;gt; next scan_cursor;&lt;br/&gt;
&amp;lt; A          |B          |C                                                                                                                               &lt;br/&gt;
&amp;lt; --------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   updatelocks jdk1.6.0 storemats:storemats 2011-01-14 00:19:24 ***&lt;br/&gt;
------------------------------------------------------&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Stack trace is:&lt;br/&gt;
Fri Jan 14 00:19:08 PST 2011 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 2648), (SESSIONID = 1), (DATABASE = wombat), (DRDAID = null), Failed Statement is: select * from lock_table order by tabname, type desc, mode, cnt, lockname&lt;/p&gt;

&lt;p&gt;ERROR 38000: The exception &apos;java.lang.NullPointerException&apos; was thrown while evaluating an expression.&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.error.StandardException.unexpectedUserException(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSet(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.HashTableResultSet.getNextRowFromRowSource(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.store.access.BackingStoreHashtable.getNextRowFromRowSource(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.store.access.BackingStoreHashtable.&amp;lt;init&amp;gt;(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.HashTableResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.JoinResultSet.openRight(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.SortResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.main(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.tools.ij.main(Unknown Source)&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.NullPointerException&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.xact.Xact.getContextId(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.xact.TransactionTableEntry.getTransactionTypeString(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.diag.TransactionTable.getString(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.types.SQLChar.setValueFromResultSet(Unknown Source)&lt;/p&gt;

&lt;p&gt;	... 25 more&lt;/p&gt;

&lt;p&gt;============= begin nested exception, level (1) ===========&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.xact.Xact.getContextId(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.xact.TransactionTableEntry.getTransactionTypeString(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.diag.TransactionTable.getString(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.types.SQLChar.setValueFromResultSet(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSet(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.HashTableResultSet.getNextRowFromRowSource(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.store.access.BackingStoreHashtable.getNextRowFromRowSource(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.store.access.BackingStoreHashtable.&amp;lt;init&amp;gt;(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.HashTableResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.JoinResultSet.openRight(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.SortResultSet.openCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.main(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.tools.ij.main(Unknown Source)&lt;/p&gt;

&lt;p&gt;============= end nested exception, level (1) ===========&lt;/p&gt;</description>
                <environment>Booting Derby version The Apache Software Foundation - Apache Derby - 10.8.0.0 alpha - (1058840): instance a816c00e-012d-839a-de59-ffff9cf6fc6d &lt;br/&gt;
on database directory C:\jartest\JarResults.2011-01-13\ibm16_derbyall\derbyall\encryptionAll\storemats\storemats\updatelocks\wombat  with class loader sun.misc.Launcher$&lt;a href=&apos;mailto:AppClassLoader@4bf94bf9&apos;&gt;AppClassLoader@4bf94bf9&lt;/a&gt; &lt;br/&gt;
Loaded from file:/C:/jartest/classes/derby.jar&lt;br/&gt;
&lt;br/&gt;
java.vendor=IBM Corporation&lt;br/&gt;
java.runtime.version=jvmwi3260sr9-20101124_69295&lt;br/&gt;
java.fullversion=JRE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260sr9-20101124_69295 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20101124_069295&lt;br/&gt;
JIT  - r9_20101028_17488ifx2&lt;br/&gt;
GC   - 20101027_AA&lt;br/&gt;
</environment>
        <key id="12495625">DERBY-4973</key>
            <summary>NullPointerException in  updatelocks.sql encryption tests on IBM 1.6</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Jan 2011 21:37:07 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:46 +0100</updated>
                            <resolved>Wed, 15 Feb 2012 23:03:41 +0000</resolved>
                                    <version>10.8.1.2</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12981941" author="kmarsden" created="Fri, 14 Jan 2011 22:00:55 +0000"  >&lt;p&gt;Attaching full test results.&lt;/p&gt;</comment>
                            <comment id="12981943" author="kmarsden" created="Fri, 14 Jan 2011 22:05:18 +0000"  >&lt;p&gt;This is the method with the NPE:&lt;br/&gt;
	Get my transaction context Id&lt;br/&gt;
	*/&lt;br/&gt;
	public final String getContextId() &lt;/p&gt;
	{
		return (xc == null) ? null : xc.getIdName();
	}


&lt;p&gt;I think this might be some sort of inlining JVM issue as it seems prepared for xc to be null.&lt;/p&gt;
</comment>
                            <comment id="12983950" author="kmarsden" created="Thu, 20 Jan 2011 00:20:31 +0000"  >
&lt;p&gt;I checked with Mike Matrigali  to double check that if it might be possible  that the xc field could be nulled out after the check but before the dereference in the line &lt;br/&gt;
return (xc == null) ? null : xc.getIdName(); &lt;/p&gt;

&lt;p&gt;The particular case of failure of a locktable query, the query is looking at the transaction context of other transactions in flux, so that might actually be possible.  I am thinking maybe the reason we see this with the new JVM might be that perhaps the compiler was changes to do two reads of the field in this case instead of one.   I am going to put in some sleeps to try to expose the issue and then ultimately per Mike&apos;s suggestion, recode the method to avoid the double read, like:&lt;/p&gt;

&lt;p&gt;tempxc = xc;&lt;br/&gt;
return (tempxc == null) ? null : tempxc.getIdName();&lt;/p&gt;

&lt;p&gt;That way we can avoid adding synchronization to this low level code for the benefit of the locktable query and ensure just one read.&lt;/p&gt;</comment>
                            <comment id="12983977" author="dagw" created="Thu, 20 Jan 2011 01:17:15 +0000"  >&lt;p&gt;Perhaps we should also make xc volatile, so the reader is forced to refresh the value from memory?&lt;/p&gt;</comment>
                            <comment id="12984317" author="kmarsden" created="Thu, 20 Jan 2011 18:19:27 +0000"  >&lt;p&gt;Dag could you elaborate on the benefit of making xc volatile?&lt;/p&gt;

&lt;p&gt; I guess one good thing is that it would be  self documenting that it might be changed by other threads, but actually in this case it would have been nice for a thread local copy to be made so it wouldn&apos;t change. Perhaps that is the difference we are seeing between SR8 and SR9 is that now it is refreshing the value from memory, whereas before it was not?  I guess though that absence of volatile means that it can cache a thread local copy, but is not a requirement that it does.&lt;/p&gt;

</comment>
                            <comment id="12984335" author="dagw" created="Thu, 20 Jan 2011 19:10:41 +0000"  >&lt;p&gt;Ah, yes, I guess I misunderstood what you are trying to achieve here. I thought that the correct behaviour would be to actually &lt;b&gt;see&lt;/b&gt; the change by another thread, but in a thread safe way. If you need a thread local copy, then adding volatile wouldn&apos;t help surely. But yes, if volatile is &lt;b&gt;not&lt;/b&gt; used, the thread is not forced to reread from memory if the compiler knows it hasn&apos;t been changed by the current thread. Or that&apos;s how I understand it anyway&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html#volatile&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html#volatile&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12984365" author="kmarsden" created="Thu, 20 Jan 2011 20:04:47 +0000"  >&lt;p&gt;I think then that I won&apos;t make it volatile and will add the tempxc code to make sure it is just read once and is stable for the duration of the getContextId() call.  &lt;/p&gt;

&lt;p&gt;Note: To pop the bug more reliably, I changed the code to have a sleep between the check and the dereference:&lt;br/&gt;
public final String getContextId() &lt;br/&gt;
	{&lt;br/&gt;
		//return (xc == null) ? null : xc.getIdName();&lt;br/&gt;
	    if (xc == null)&lt;br/&gt;
	        return null;&lt;br/&gt;
	    else {&lt;br/&gt;
	        try &lt;/p&gt;
{
                Thread.currentThread().sleep(100);
            }
&lt;p&gt; catch (InterruptedException e) &lt;/p&gt;
{
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
&lt;p&gt;	        return xc.getIdName();&lt;br/&gt;
	    }&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;With this change I see the NullPointerException on SR8 as well as Sun JDK 1.6, so I think this is definitely a Derby bug and not a JVM issue as I first thought.  There may be SR9 changes so that they don&apos;t use a thread local copy where they can, but I don&apos;t think that they are required to do so, they just have that option.&lt;/p&gt;
</comment>
                            <comment id="12984426" author="kmarsden" created="Thu, 20 Jan 2011 21:51:41 +0000"  >&lt;p&gt;Here is the patch to ensure just a single read of xc in Xact.getContextId(). Running tests...&lt;/p&gt;
</comment>
                            <comment id="12986687" author="kmarsden" created="Tue, 25 Jan 2011 21:18:06 +0000"  >&lt;p&gt;ported this back as far as 10.3.  I am sure it exists back to 10.1, but won&apos;t bother for now.&lt;/p&gt;</comment>
                            <comment id="13685351" author="knutanders" created="Mon, 17 Jun 2013 10:19:46 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12468907" name="derby-4973_diff.txt" size="1127" author="kmarsden" created="Thu, 20 Jan 2011 21:51:41 +0000"/>
                            <attachment id="12468416" name="updatelocks_results.zip" size="964252" author="kmarsden" created="Fri, 14 Jan 2011 22:00:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Jan 2011 01:17:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24565</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0e2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36099</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>