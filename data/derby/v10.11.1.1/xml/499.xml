<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:28:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-499/DERBY-499.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-499] Expose BOOLEAN datatype to end users</title>
                <link>https://issues.apache.org/jira/browse/DERBY-499</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Veaceslav Chicu started an email thread on 8 August 2005 titled &quot;boolean type&quot;. He was disappointed that Derby doesn&apos;t support the ansi BOOLEAN datatype. On closer inspection, Derby does internally support this type but does not expose this support to end users.&lt;/p&gt;

&lt;p&gt;Derby should let users declare table columns of type BOOLEAN. This should be an indexable datatype.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12313174">DERBY-499</key>
            <summary>Expose BOOLEAN datatype to end users</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Aug 2005 04:45:47 +0100</created>
                <updated>Thu, 2 May 2013 03:29:06 +0100</updated>
                            <resolved>Wed, 29 Sep 2010 18:49:11 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>16</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="12318397" author="rhillegas" created="Thu, 11 Aug 2005 07:27:55 +0100"  >&lt;p&gt;Hi Myrna,&lt;/p&gt;

&lt;p&gt;Do you know of any specific support that&apos;s missing or are you just concerned that something might not work? Any specifics you have here would help. Thanks.&lt;/p&gt;</comment>
                            <comment id="12358162" author="rhillegas" created="Tue, 22 Nov 2005 01:38:38 +0000"  >&lt;p&gt;I have attached a thin functional specification describing expected SQL and JDBC behavior for the re-enabled BOOLEAN datatype.&lt;/p&gt;</comment>
                            <comment id="12358399" author="kmarsden" created="Thu, 24 Nov 2005 03:06:15 +0000"  >
&lt;p&gt;It would be good to document  the value that BOOLEAN true/false will return when returned as SMALLINT to   pre 10.2  drda clients,  and non-Derby clients.  Clarification of getXXX, setXXX and metadata would be good too and is being discussed on this thread.&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Re%3A-jira-Updated%3A-%28DERBY-499%29-Expose-BOOLEAN-datatype-to-end-users-t593782.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re%3A-jira-Updated%3A-%28DERBY-499%29-Expose-BOOLEAN-datatype-to-end-users-t593782.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12359186" author="rhillegas" created="Sat, 3 Dec 2005 07:55:36 +0000"  >&lt;p&gt;Update functional spec: Responses to various comments. Added UNKNOWN literal. Added section on casts. JDBC API determined by matrix of conditions. Described results of getXXX() calls and limitations.&lt;/p&gt;</comment>
                            <comment id="12359442" author="rhillegas" created="Wed, 7 Dec 2005 03:09:26 +0000"  >&lt;p&gt;This patch (bug499.diff) enables the BOOLEAN datatype as described in the functional&lt;br/&gt;
spec (BooleanFS.html). On my machine, this patch passes the derbyall&lt;br/&gt;
and compatibility suite tests.  This patch affects the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;br/&gt;
A      java/engine/org/apache/derby/iapi/reference/DRDAConstants.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/FdocaConstants.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/SQLTypes.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/EXTDTAInputStream.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/AppRequester.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/db2Compatibility.sql&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/lang&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/lang/BooleanTest.java&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/lang/default_app.properties&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/lang/LangSuite.java&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/lang/build.xml&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/CompatibilitySuite.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/testScript.xml&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/JDBCDriverTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/db2Compatibility.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/implicitConversions.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/metadata.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/syscat.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/util/DerbyJUnitTest.java&lt;br/&gt;
M      java/testing/build.xml&lt;br/&gt;
M      java/client/org/apache/derby/client/net/FdocaConstants.java&lt;br/&gt;
M      java/client/org/apache/derby/client/net/NetConfiguration.java&lt;br/&gt;
M      java/client/org/apache/derby/client/net/Typdef.java&lt;br/&gt;
M      java/client/org/apache/derby/client/net/NetStatementRequest.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/CrossConverters.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/Types.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/Cursor.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/SignedBinary.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/DatabaseMetaData.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/ColumnMetaData.java&lt;/p&gt;

&lt;p&gt;A brief description of these changes follows:&lt;/p&gt;

&lt;p&gt;1) sqlgrammar.jj - Small changes here to enable the BOOLEAN type and&lt;br/&gt;
   its literals: true, false, and unknown.&lt;/p&gt;

&lt;p&gt;2) DRDAConstants.java - This new file holds common definitions of the&lt;br/&gt;
   DRDA and DB2 datatypes plus Derby&apos;s product identifiers. Client and&lt;br/&gt;
   server code now share these constants. This file adds new DRDA&lt;br/&gt;
   datatypes for BOOLEAN as well as for other datatypes we may add in&lt;br/&gt;
   10.2. The Open Group is almost at the point where I can submit&lt;br/&gt;
   these types for approval.&lt;/p&gt;

&lt;p&gt;   Note that an additional piece of cleanup can be done later: Right&lt;br/&gt;
   now, Typdef.java has a long table (environmentTables_) of magic&lt;br/&gt;
   numbers which are really just the DRDA datatypes. This table should&lt;br/&gt;
   be scrubbed to use the constants from DRDAConstants.java.&lt;/p&gt;

&lt;p&gt;3) AppRequester.java - This server class, which already held product version&lt;br/&gt;
   info, now reports whether the connected client can handle the new&lt;br/&gt;
   BOOLEAN datatype.&lt;/p&gt;

&lt;p&gt;4) Various other changes to the DRDA network layer to recognize&lt;br/&gt;
   BOOLEAN and handle it correctly based on the client&apos;s capabilities.&lt;/p&gt;

&lt;p&gt;5) JDBCDriverTest.java - Additional compatibility tests added to track&lt;br/&gt;
   assertions from the functional spec.&lt;/p&gt;

&lt;p&gt;6) LangSuite.java - A new JUnit suite currently containing one test:&lt;br/&gt;
   BooleanTest.java. LangSuite itself is wired into the derbylang&lt;br/&gt;
   suite. I&apos;m thinking that over time, we can migrate existing derbylang&lt;br/&gt;
   tests into this suite and also wire in new JUnit-based language&lt;br/&gt;
   tests.&lt;/p&gt;

&lt;p&gt;7) BooleanTest.java - SQL tests for the BOOLEAN datatype. These&lt;br/&gt;
   supplement the JDBC tests for BOOLEAN found in JDBCDriverTest.&lt;/p&gt;

&lt;p&gt;8) testScript.xml - Now tracks the trunk/embedded combination on&lt;br/&gt;
   jdk1.3 and 1.5.&lt;/p&gt;

&lt;p&gt;I hope that when this submission is committed, it will be complete&lt;br/&gt;
enough that we can use it as a template for adding additional&lt;br/&gt;
datatypes (such as XML) to our network layer.&lt;/p&gt;

&lt;p&gt;A later submission will address changes to the user docs.&lt;/p&gt;</comment>
                            <comment id="12359491" author="rhillegas" created="Wed, 7 Dec 2005 07:47:05 +0000"  >&lt;p&gt;I am attaching bug499_doc.zip, which contains changes to the Tuning and Reference guides. This zip file contains:&lt;/p&gt;

&lt;p&gt;o bug499_doc.diff - the svn diffs for these doc changes&lt;br/&gt;
o ref - a directory containing the html for the Reference guide, including these changes&lt;/p&gt;

&lt;p&gt;I successfully built the html and pdf versions of these two documents. However, I had to increase the vm&apos;s memory in order to build the pdf version of the Reference guide. I didn&apos;t explore how much to increase the memory. I simply set the ant options as follows before invoking the build:&lt;/p&gt;

&lt;p&gt;  export ANT_OPTS=&quot;-Xmx512m&quot;&lt;/p&gt;

&lt;p&gt;Here&apos;s a summary of the doc changes I made:&lt;/p&gt;

&lt;p&gt;TUNING GUIDE&lt;/p&gt;

&lt;p&gt;I added boolean to the table of getXXX() and setXXX() methods described in the section titled &quot;Use the appropriate getXXX and setXXX methods for the type&quot;&lt;/p&gt;

&lt;p&gt;REFERENCE GUIDE&lt;/p&gt;

&lt;p&gt;I added a section on boolean to the &quot;Data type&quot; roundup.&lt;/p&gt;

&lt;p&gt;I also added a row and column for boolean to the &quot;CAST&quot; page under &quot;Built-in functions&quot;. I also added to that page a paragraph describing the legal conversions to and from boolean.&lt;/p&gt;</comment>
                            <comment id="12359678" author="rhillegas" created="Thu, 8 Dec 2005 09:54:13 +0000"  >&lt;p&gt;Attached new rev of patch (bug499.diff) addressing initial issues with BooleanTest raised by Dan: 1) BooleanTest now extends DerbyJUnitTest rather than LangSuite. 2) Used Integers rather than Shorts to model SMALLINTs in the assertRow() calls which track casts from BOOLEAN to numeric and string types. New rev of BooleanTest runs cleanly.&lt;/p&gt;</comment>
                            <comment id="12359680" author="bandaram" created="Thu, 8 Dec 2005 11:17:30 +0000"  >&lt;p&gt;This patch doesn&apos;t allow all boolean expressions. Following would fail:&lt;/p&gt;

&lt;p&gt;     Select a&amp;gt;b from t&lt;br/&gt;
     values myFunc(current date &amp;gt; &apos;1/1/99&apos;)&lt;/p&gt;

&lt;p&gt;If you look at additiveExpression() function in sqlgrammar.jj, it has a third parameter &apos;inSelectClause&apos;. This is currently used to prevent sending boolean values to clients, since there is no support for Boolean. (before the patch)&lt;/p&gt;</comment>
                            <comment id="12359711" author="kmarsden" created="Thu, 8 Dec 2005 16:54:18 +0000"  >&lt;p&gt;Looks like good progress on Boolean.   &lt;/p&gt;


&lt;p&gt;Code Comments and questions&lt;/p&gt;

&lt;p&gt;0)&lt;br/&gt;
I do kind of wish  constant reorganization and partial addition of other new types were in  separate patches.  &lt;/p&gt;

&lt;p&gt;1)&lt;br/&gt;
My biggest question about  the patch are the new types and the assignment of these temporary codes.   Will these be finalized before 10.2? Why have some other types be added to the DRDATypes but not the SQL Types.  I was wondering if it might pose any conflict with work underway for XML?&lt;/p&gt;


&lt;p&gt;// Experimental types. These codes will change when the Open Group&lt;br/&gt;
	// publishes an addendum to the DRDA spec covering these&lt;br/&gt;
	// datatypes.&lt;/p&gt;

&lt;p&gt;	public	static final int DRDA_TYPE_BOOLEAN = 0xD0;&lt;br/&gt;
	public	static final int DRDA_TYPE_NBOOLEAN = 0xD1;&lt;br/&gt;
	public	static final int DRDA_TYPE_XML = 0xD2;&lt;br/&gt;
	public	static final int DRDA_TYPE_NXML = 0xD3;&lt;br/&gt;
	public	static final int DRDA_TYPE_NATCHAR = 0xD4;&lt;br/&gt;
	public	static final int DRDA_TYPE_NNATCHAR = 0xD5;&lt;br/&gt;
	public	static final int DRDA_TYPE_NATVARCHAR = 0xD6;&lt;br/&gt;
	public	static final int DRDA_TYPE_NNATVARCHAR = 0xD7;&lt;br/&gt;
	public	static final int DRDA_TYPE_LONGNATVARCHAR = 0xD8;&lt;br/&gt;
	public	static final int DRDA_TYPE_NLONGNATVARCHAR = 0xD9;&lt;br/&gt;
	public	static final int DRDA_TYPE_NATCLOB = 0xDA;&lt;br/&gt;
	public	static final int DRDA_TYPE_NNATCLOB = 0xDB;&lt;/p&gt;

&lt;p&gt;	// extensions to the db2 datatypes&lt;br/&gt;
    public	static final  int DB2_SQLTYPE_BOOLEAN = 1000;     // BOOLEAN&lt;br/&gt;
    public	static final  int DB2_SQLTYPE_NBOOLEAN = 1001;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;2)&lt;br/&gt;
DRDAConnThread comments&lt;/p&gt;

&lt;p&gt;In readAndSetParams it looks like BOOLEAN is not being handled.  Are the client parameters still being sent as SMALLINT  parameters?  &lt;/p&gt;


&lt;p&gt;Line 6576&lt;br/&gt;
I think rather than a makeint method in DRDAConnThread I would rather see a writeByte(boolean b) method in  DDMWriter similar to writeShort(boolean b), &lt;/p&gt;

&lt;p&gt;changing &lt;br/&gt;
writer.writeByte( makeInt( (Boolean) val ) );&lt;/p&gt;

&lt;p&gt;to &lt;br/&gt;
writer.writeByte((Boolean) val ).booleanValue() );&lt;/p&gt;

&lt;p&gt;3)&lt;br/&gt;
There seem to be places in the client code that have case statements for all the types, for example, many of the methods in CrossConverters. Does boolean need to be handled in these cases?&lt;/p&gt;


&lt;p&gt;4)&lt;br/&gt;
DatabaseMetadata.getTypeInfo() doesn&apos;t seem to return BOOLEAN/BIT.  I think there has to be a differentiation of the output based on the client JVM version.  &lt;/p&gt;



&lt;p&gt;Test comments&lt;/p&gt;

&lt;p&gt;5)&lt;br/&gt;
What client/server version combinations did you run the Compatibility tests?&lt;/p&gt;

&lt;p&gt;5)&lt;br/&gt;
Would you consider adding a boolean column to an ij test  in the netmats suite like supersimple.sql to verify the ij formatting is ok and also provide some testing with earlier clients that it is being sent as smallint for clients other than derby 10.2 client?&lt;/p&gt;

&lt;p&gt;6)&lt;br/&gt;
Should jdbcapi/parameterMapping.java  be updated for the new type? I know it is  not junit but does  provide a comprehensive picture of the type behaviour and it shouldn&apos;t be too hard to add a type to that test.&lt;/p&gt;

&lt;p&gt;7)&lt;br/&gt;
It seems more important than ever that we have at least some very basic client/server compatibility testing with the the 10.1.1.0  release as part of derbyall.  &lt;/p&gt;
</comment>
                            <comment id="12359837" author="rhillegas" created="Fri, 9 Dec 2005 11:08:37 +0000"  >&lt;p&gt;Satheesh, thank you for pointing out the disabling code in the inSelectClause() production. I will fix this and add appropriate test cases.&lt;/p&gt;

&lt;p&gt;Kathey, thank you for going through the network code so carefully. Some responses follow:&lt;/p&gt;

&lt;p&gt;0) I understand your misgivings. I do however see some value in rolling some ongoing cleanup into patches. I tried to steer a middle course here: I moved the datatype ids to a common file but I deferred the rototill of Typdef.java to a later submission. I hope this is ok. Please let me know if you think this is a showstopper.&lt;/p&gt;

&lt;p&gt;1) I certainly hope that the Open Group will finalize the new datatypes in the 10.2 timeframe. It&apos;s a slow process. I don&apos;t see a conflict with Army&apos;s work on XML but Army and I can work together on this.&lt;/p&gt;

&lt;p&gt;You are right, that if we include the DRDA types, we should include corresponding DB2 types. I will add these as more placeholders.&lt;/p&gt;

&lt;p&gt;2) Yes, the BOOLEANS are coming from the client as SMALLINT. I agree that it would be better to send these as booleans. I will make that change. I will also make the other changes you suggest here.&lt;/p&gt;

&lt;p&gt;3) I can add the CrossConverter code you suggest. But I can&apos;t answer your question: Obviously the tests I have written don&apos;t stress this code. Can you help me understand what test cases will stress this code?&lt;/p&gt;

&lt;p&gt;4) Thanks for catching this. I will add BOOLEAN to getTypeInfo().&lt;/p&gt;

&lt;p&gt;5i) I ran the compatibility suite in the following combinations:&lt;/p&gt;

&lt;p&gt;o I allowed the server to range over the following options: 10.0.2.1, 10.1.1.0, 10.1.2.0, and mainline.&lt;br/&gt;
o Each server was run on the following vms: 1.3, 1.4, and 1.5&lt;br/&gt;
o For each combination of server and server vm, I allowed the client to range over the following options: DB2JCC, 10.1.1.0, 10.1.2.0, and mainline.&lt;br/&gt;
o For each combination of server, server vm, and client, I ran the client on the following vms: 1.3, 1.4, and 1.5.&lt;/p&gt;

&lt;p&gt;In addition, I ran the mainline in an embedded configuration on the following vms: 1.3, 1.4, and 1.5.&lt;/p&gt;

&lt;p&gt;5ii) Thanks for suggesting this. I will add some boolean cases to an existing ij test to verify formatting. I have already tested with older clients and verified that BOOLEAN goes to old clients as SMALLINT.&lt;/p&gt;

&lt;p&gt;6) Thanks for this suggestion too. I will add boolean cases to jdbcapi/parameterMapping.&lt;/p&gt;

&lt;p&gt;7) I welcome your creative suggestions here. The best idea I have been able to come up with is the running of the compatibility suite as part of some nightly or weekly verification.&lt;/p&gt;</comment>
                            <comment id="12360081" author="rhillegas" created="Sun, 11 Dec 2005 07:29:39 +0000"  >&lt;p&gt;I have made the parser change which Satheesh pointed out. I also removed new DRDA datatypes not actually needed by this submission as Kathey requested. To accomodate the parser change, I had to update a couple unit tests:&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\impl\sql\compile\sqlgrammar.jj&lt;br/&gt;
A      java\engine\org\apache\derby\iapi\reference\DRDAConstants.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\FdocaConstants.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\SQLTypes.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\EXTDTAInputStream.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\NetworkServerControlImpl.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\AppRequester.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\DRDAConnThread.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\aggregate.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\subquery.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\db2Compatibility.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\logop.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\schemas.sql&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\lang&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\lang\BooleanTest.java&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\lang\default_app.properties&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\lang\LangSuite.java&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\lang\build.xml&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\compatibility\CompatibilitySuite.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\compatibility\testScript.xml&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\junitTests\compatibility\JDBCDriverTest.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\subquery.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\db2Compatibility.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\implicitConversions.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\metadata.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\syscat.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\logop.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\valuesclause.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\schemas.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\aggregate.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\suites\derbylang.runall&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\util\DerbyJUnitTest.java&lt;br/&gt;
M      java\testing\build.xml&lt;br/&gt;
M      java\client\org\apache\derby\client\net\FdocaConstants.java&lt;br/&gt;
M      java\client\org\apache\derby\client\net\NetConfiguration.java&lt;br/&gt;
M      java\client\org\apache\derby\client\net\Typdef.java&lt;br/&gt;
M      java\client\org\apache\derby\client\net\NetStatementRequest.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\CrossConverters.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\Types.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\Cursor.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\SignedBinary.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\DatabaseMetaData.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\ColumnMetaData.java&lt;/p&gt;

&lt;p&gt;Once this first increment is committed, I will work on another patch to address Kathey&apos;s other concerns.&lt;/p&gt;</comment>
                            <comment id="12360693" author="rhillegas" created="Sun, 18 Dec 2005 08:17:47 +0000"  >&lt;p&gt;Various changes have accumulated in the mainline since I posted this patch a week ago. I have merged in those changes and run derbyall cleanly. I am reattaching the merged patch.&lt;/p&gt;</comment>
                            <comment id="12360945" author="djd" created="Wed, 21 Dec 2005 02:51:47 +0000"  >&lt;p&gt;Patch passes the tests but has some minor issues:&lt;/p&gt;

&lt;p&gt;The file name in the copyright/licence header for the new files does not match the file name.&lt;/p&gt;

&lt;p&gt;The new DRDA constants file has Copyright Rick Hillegas which is not acceptable to the ASF.&lt;/p&gt;
</comment>
                            <comment id="12360947" author="rhillegas" created="Wed, 21 Dec 2005 03:35:04 +0000"  >&lt;p&gt;Fix the copyright notice as Dan requested. The new patch is called bug499_rev2.diff. If you diff it against the previous patch, you will see that this is the only difference.&lt;/p&gt;</comment>
                            <comment id="12360953" author="djd" created="Wed, 21 Dec 2005 04:18:06 +0000"  >&lt;p&gt;The file/class names in the copyright/licence header for the new files are still wrong:&lt;/p&gt;

&lt;p&gt;Eg.&lt;/p&gt;

&lt;p&gt;+++ java/engine/org/apache/derby/iapi/reference/DRDAConstants.java      (revisio&lt;br/&gt;
n 0)&lt;br/&gt;
@@ -0,0 +1,215 @@&lt;br/&gt;
+/*&lt;br/&gt;
+&lt;br/&gt;
+   Derby - Class org.apache.derbyTesting.functionTests.tests.compatibility.JDBC&lt;br/&gt;
DriverTest&lt;br/&gt;
+&lt;/p&gt;
</comment>
                            <comment id="12360975" author="rhillegas" created="Wed, 21 Dec 2005 05:46:18 +0000"  >&lt;p&gt;Let&apos;s try this again. The bug499_rev3.diff patch addresses the filename issue.&lt;/p&gt;</comment>
                            <comment id="12360996" author="rhillegas" created="Wed, 21 Dec 2005 08:46:52 +0000"  >&lt;p&gt;Hi Dan,&lt;/p&gt;

&lt;p&gt;It occurs to me that I may still have the class/filename wrong. Could you help me out? Here is the filename line from my latest attempt (bug499_rev3.diff):&lt;/p&gt;

&lt;p&gt;    Derby - Class org.apache.derby.iapi.reference.DRDAConstants&lt;/p&gt;

&lt;p&gt;Unless I am losing my mind, this appears to follow the pattern for all the other classes in that package. For instance, here is the filename line from neighboring Attribute.java:&lt;/p&gt;

&lt;p&gt;   Derby - Class org.apache.derby.iapi.reference.Attribute&lt;/p&gt;

&lt;p&gt;But this doesn&apos;t agree with the format in your last comment:&lt;/p&gt;

&lt;p&gt;    java/engine/org/apache/derby/iapi/reference/DRDAConstants.java (revision 0) &lt;/p&gt;

&lt;p&gt;Can you point me at a file which models a correct pattern? Thanks.&lt;/p&gt;</comment>
                            <comment id="12360998" author="djd" created="Wed, 21 Dec 2005 08:59:49 +0000"  >&lt;p&gt;You have the format correct, my last comment was just an example of one of the places you had the name wrong and it was an extract from svn diff. That&apos;s where the  java/engine/org/apache/derby/iapi/reference/DRDAConstants.java (revision 0)  comes from.&lt;/p&gt;</comment>
                            <comment id="12361000" author="rhillegas" created="Wed, 21 Dec 2005 09:23:30 +0000"  >&lt;p&gt;Thanks, Dan. I hope that this next patch addresses the class/filename and copyright problems: bug499_rev4.diff. I think that the previous rev corrected the class/filename in DRDAConstants.java. This version corrects the class/filenames in the remaining newly added source files: LangSuite.java and BooleanTest.java. I think that the copyright notices in those classes were ok to begin with. Let me know if anything else needs sanding down here.&lt;/p&gt;</comment>
                            <comment id="12361007" author="djd" created="Wed, 21 Dec 2005 09:58:08 +0000"  >&lt;p&gt;Committed revision 358163 for patch bug499_rev4.diff.&lt;/p&gt;

&lt;p&gt;I think the BOOLEAN type should be added to some of the table driven tests like parameterMapping.java and casting.java before this jira entry is closed. In looking that the data type conversion routines the other day it seems&lt;br/&gt;
that there are some strange conversions to/from BOOLEAN allowed. E.g. BOOLEAN to VARCHAR FOR BIT DATA.&lt;/p&gt;

&lt;p&gt;I did &lt;b&gt;not&lt;/b&gt; commit the documentaton changes.&lt;/p&gt;</comment>
                            <comment id="12362034" author="kmarsden" created="Sat, 7 Jan 2006 10:47:56 +0000"  >&lt;p&gt;lang/syscat and jdbcapi/metadata test output for &lt;/p&gt;

&lt;p&gt;java version &quot;1.3.1_15&quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.1_15-b01)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.3.1_15-b01, mixed mode)&lt;/p&gt;</comment>
                            <comment id="12362035" author="kmarsden" created="Sat, 7 Jan 2006 10:57:01 +0000"  >&lt;p&gt;Ignore previously deleted comment on this issue.&lt;/p&gt;

&lt;p&gt;There are two failures in jdk131 that I think might be related to the patch for this issue.  Test output is attached as jdk131BooleanFailures.zip. &lt;/p&gt;

&lt;p&gt;derbyall/derbynetclientmats/derbynetmats.fail:jdbcapi/metadata.java&lt;br/&gt;
derbyall/derbynetclientmats/derbynetmats.fail:lang/syscat.sql&lt;/p&gt;</comment>
                            <comment id="12362216" author="rhillegas" created="Tue, 10 Jan 2006 01:25:37 +0000"  >&lt;p&gt;Hi Kathey: Thanks for finding this discrepancy. I think this is what&apos;s going on: I checked in new canons for these tests, which reflect the behavior of these tests with the Derby client under jdk 1.4. However, the old behavior of these tests is still preserved on jdk 1.3 (as documented in the functional spec for this feature). I believe that the appropriate action is to check in vm-specific canons for these tests to handle the 1.3 run. If you think this is urgent, I can pull together a patch for this. Otherwise, I can defer this cleanup to the next patch, which will address your other concerns.&lt;/p&gt;</comment>
                            <comment id="12362231" author="kmarsden" created="Tue, 10 Jan 2006 03:13:22 +0000"  >&lt;p&gt;For metadata.java, you may want to avoid  additional canons because it would mean that you would also have to update the bumpversion target.  (The output of this test changes with every new version).  It would best I think  if the difference can be handled programatically in the test.&lt;/p&gt;

&lt;p&gt;In terms of when this should be addressed,  my personal opinion is that it is  never good to have test failures for any significant length of time.   When do you expect to submit your next patch?&lt;/p&gt;</comment>
                            <comment id="12362329" author="rhillegas" created="Wed, 11 Jan 2006 00:00:38 +0000"  >&lt;p&gt;Hi Kathey: The attached patch bug499_jdk13tests.diff fixes the regressions you found in the metadata.java and syscat.sql tests under jdk13:&lt;/p&gt;

&lt;p&gt;M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\syscat.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\metadata_test.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\metadata.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\syscat.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\odbc_metadata.out&lt;br/&gt;
D      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\metadata.out&lt;br/&gt;
D      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\syscat.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\odbc_metadata.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk13&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk13\metadata.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk13\syscat.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk14\metadata.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk14\syscat.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\metadata.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\syscat.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\odbc_metadata.out&lt;/p&gt;

&lt;p&gt;Along the way I made the following improvements to these tests:&lt;/p&gt;

&lt;p&gt;o I removed the printing of version numbers in the output of metadata.java. Instead, this test now compares version numbers internally. Keeping this test in sync with the release variables in dnc.properties now involves changing a couple constants in metadata.java rather than updating 10 canons. As extra credit, someone may want to further improve this test by removing the hard-coded version constants and, instead, get version information from Configuration.java. That depends on one&apos;s feelings about what the point of this version check is.&lt;/p&gt;

&lt;p&gt;o I removed a potential instability from syscat.sql by adding ORDER BY clauses to several queries whose results were not well-defined.&lt;/p&gt;

&lt;p&gt;My first attempt at fixing these regressions did not catch odbc_metadata. So I had 3 failures in derbyall: odbc_metadata under embedded, DerbyNetClient, and DerbyNet. I have fixed them. I have verified that all three tests (metadata, odbc_metadata, and syscat) run cleanly in all three configurations (embedded, DerbyNetClient, and DerbyNet) under jdk1.4 and jdk1.3.&lt;/p&gt;

&lt;p&gt;I believe there is a remaining piece of cleanup here: the j9_foundation canons for metadata and odbc_metadata. I would appreciate it if those canons could be fixed by someone who has installed the small device configuration.&lt;/p&gt;</comment>
                            <comment id="12362474" author="djd" created="Thu, 12 Jan 2006 02:54:40 +0000"  >&lt;p&gt;The functional spec lists BOOLEAN to and from CLOB as being a valid cast. This does not match the existing behaviour for CLOB where it can only be cast to/from a character type.&lt;/p&gt;</comment>
                            <comment id="12362582" author="rhillegas" created="Fri, 13 Jan 2006 10:30:52 +0000"  >&lt;p&gt;It&apos;s, admittedly, an odd set of casts and I wonder if anyone really needs them. The casts between BOOLEAN and CLOB are inherited from the old Cloudscape days. It appears to me that these are required casts according to section 6.12 of volume 2 of the 2003 ANSI spec.&lt;/p&gt;</comment>
                            <comment id="12362673" author="rhillegas" created="Sat, 14 Jan 2006 02:13:06 +0000"  >&lt;p&gt;I have attached a second rev of the patch to fix the problems in the jdk13 testrun: bug499_jdk13tests_rev2.diff. I hope that this patch addresses Kathey&apos;s concerns:&lt;/p&gt;

&lt;p&gt;1) Still tests the version related metadata calls.&lt;br/&gt;
2) Allows the tests to pass on all jvms&lt;br/&gt;
3) Keeps a single bumpversion target for release&lt;/p&gt;

&lt;p&gt;This version of the patch differs from the previous version as follows:&lt;/p&gt;

&lt;p&gt;o Re-instates the explicit printing of the version information from the metadata calls&lt;br/&gt;
o Eliminates any need to change the odbc_metadata canons&lt;br/&gt;
o Adds the new metadata canons to the list managed by the bumplastdigit release target in tools/release/build.xml&lt;/p&gt;

&lt;p&gt;I have cleanly run derbyall against this patch. I have also cleanly run the metadata and syscat tests in embedded, DerbyNetClient, and DerbyClient modes on jdk1.3 and jdk1.4. The patch contains the following:&lt;/p&gt;

&lt;p&gt;M      tools\release\build.xml&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\syscat.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\metadata_test.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\syscat.out&lt;br/&gt;
D      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\metadata.out&lt;br/&gt;
D      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\syscat.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk13&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk13\metadata.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk13\syscat.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk14\metadata.out&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk14\syscat.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\syscat.out&lt;/p&gt;</comment>
                            <comment id="12363050" author="fuzzylogic" created="Wed, 18 Jan 2006 08:39:23 +0000"  >&lt;p&gt;I&apos;ve committed the patch bug499_jdk13tests_rev2.diff with a couple of minor changes. I dropped the metadata_test.java diff, since it looked leftover from the previous patch and no longer needed. And instead of putting the jdk13 masters in a subdirectory, I put them at the top level.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at the doc patch next.&lt;/p&gt;</comment>
                            <comment id="12364521" author="kmarsden" created="Tue, 31 Jan 2006 13:31:52 +0000"  >&lt;p&gt;Marking this issue to block &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-499&quot; title=&quot;Expose BOOLEAN datatype to end users&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-499&quot;&gt;&lt;del&gt;DERBY-499&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With Dan&apos;s review of the first checkin he noted that there was still work needed in the area of casting and comparisons for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-499&quot; title=&quot;Expose BOOLEAN datatype to end users&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-499&quot;&gt;&lt;del&gt;DERBY-499&lt;/del&gt;&lt;/a&gt;.    Hopefully that work will resolve this issue.   &lt;/p&gt;</comment>
                            <comment id="12364527" author="kmarsden" created="Tue, 31 Jan 2006 14:19:37 +0000"  >&lt;p&gt;marking this issue to block &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-499&quot; title=&quot;Expose BOOLEAN datatype to end users&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-499&quot;&gt;&lt;del&gt;DERBY-499&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With Dan&apos;s review of the first checkin he noted that there was still work needed in the area of casting and comparisons for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-499&quot; title=&quot;Expose BOOLEAN datatype to end users&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-499&quot;&gt;&lt;del&gt;DERBY-499&lt;/del&gt;&lt;/a&gt;. Hopefully that work will resolve this issue. &lt;/p&gt;

&lt;p&gt;ignore previous link from 877. Slipped a digit&lt;/p&gt;</comment>
                            <comment id="12366414" author="rhillegas" created="Wed, 15 Feb 2006 09:12:46 +0000"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;I agree that this feature is not ready to be exposed to customers and I doubt that I will find time to finish it by our release date. I think that the server-to-client logic is pretty solid but I don&apos;t want to deal with compatiblity issues related to the unfinished client-to-server logic. Here I think the problem is that we are sending one-byte values from the server to the client but we are still sending 2 byte quantities in the other direction. Let me throw out some options for what we could do:&lt;/p&gt;

&lt;p&gt;1) We could back out the patch. I don&apos;t know how hard this is. If it&apos;s easy, it might be the best thing to do. Please advise me on this.&lt;/p&gt;

&lt;p&gt;2) We could disable the client-to-server compatibility problems by not allowing BOOLEAN as the type of columns and procedures/functions. Basically we could resurrect the disabling checks in the parser. For extra credit we could continue to test the new functionality under a tracepoint to make sure it does not regress as we move forward.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I understand your issue with the metadata. Could you elaborate?&lt;/p&gt;

&lt;p&gt;Most of the illegal casts and comparisons are existing problems left over from Cloudscape. These illegal casts and comparisons occur in 10.1. The original effort to remove the BOOLEAN datatype was only partially successful. At the end of the day, we can forbid BOOLEAN columns but we can&apos;t remove the fundamental, resolving datatype of the WHERE clause. When considering bug 887, it is important to not balk at a gnat but swallow a camel. The newly introduced cases have caused us to stumble across something very old and very broken on which our production code relies. I don&apos;t think we can ignore bug 887 even if we back out 499. In my opinion, the presence or absence of the 499 code does not affect whether we should fix 887 for release 10.2.&lt;/p&gt;

&lt;p&gt;Let me punch up the importance of this point: Our own production code already relies on pre-existing illegal casts and comparisons. Quite likely, some of our customers do too.&lt;/p&gt;

&lt;p&gt;In summary:&lt;/p&gt;

&lt;p&gt;o I think that we should back out user-declarable BOOLEAN columns/args one way or another.&lt;/p&gt;

&lt;p&gt;o If (1) and (2) are showstoppers, they are showstoppers regardless of what we do about user-declarable BOOLEAN columns/args.&lt;/p&gt;</comment>
                            <comment id="12366417" author="kmarsden" created="Wed, 15 Feb 2006 10:00:35 +0000"  >&lt;p&gt;Apparently there was a problem with my original mail going to the list so I will make a link here.&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-499#action_12366383&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-499#action_12366383&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Ricks response he said&lt;/p&gt;

&lt;p&gt;&amp;gt;Let me punch up the importance of this point: Our own production code already &amp;gt;relies on pre-existing illegal casts and comparisons. Quite likely, some of our customers do too.&lt;/p&gt;

&lt;p&gt;Yes, this is one problem I am happy to defer to another day. It would only be exacerbated now by allowing user-declarable BOOLEAN columns/args.&lt;/p&gt;


&lt;p&gt;&amp;gt;In summary:&lt;/p&gt;

&lt;p&gt;&amp;gt;o I think that we should back out user-declarable BOOLEAN columns/args one way or another.&lt;/p&gt;

&lt;p&gt;great in svn merge  you can just reverse the order of change number to back out the patch, but there may be conflicts due to intervening changes.&lt;/p&gt;

&lt;p&gt;svn merge -r 1234:1233   &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;o If (1) and (2) are showstoppers, they are showstoppers regardless of what we do about user-declarable BOOLEAN columns/args.&lt;/p&gt;

&lt;p&gt;I don&apos;t think so.  If we just leave it just like 10.1 is for now and think on this whole problem a bit more for how to create a BOOLEAN type for 10.3.&lt;/p&gt;
</comment>
                            <comment id="12412208" author="rhillegas" created="Thu, 18 May 2006 00:43:57 +0100"  >&lt;p&gt;I am attaching a proposal for adding the BOOLEAN datatype to the DRDA spec.&lt;/p&gt;</comment>
                            <comment id="12412210" author="rhillegas" created="Thu, 18 May 2006 00:47:50 +0100"  >&lt;p&gt;I am also attaching the DRDA proposal as html. The two versions are BooleanType.sxw and BooleanType.html.&lt;/p&gt;</comment>
                            <comment id="12422748" author="rhillegas" created="Fri, 21 Jul 2006 20:06:40 +0100"  >&lt;p&gt;Linking this issue to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1029&quot; title=&quot;Backout boolean work from the 10.2 branch immediately after the branch is created&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1029&quot;&gt;&lt;del&gt;DERBY-1029&lt;/del&gt;&lt;/a&gt;. That issue backs out most of the work done for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-499&quot; title=&quot;Expose BOOLEAN datatype to end users&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-499&quot;&gt;&lt;del&gt;DERBY-499&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12422750" author="rhillegas" created="Fri, 21 Jul 2006 20:09:40 +0100"  >&lt;p&gt;Unassigning myself from this issue. If someone wants to tackle this in the future, please consult &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1029&quot; title=&quot;Backout boolean work from the 10.2 branch immediately after the branch is created&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1029&quot;&gt;&lt;del&gt;DERBY-1029&lt;/del&gt;&lt;/a&gt;. In order to implement BOOLEAN, you will need to:&lt;/p&gt;

&lt;p&gt;1) Get the BOOLEAN datatype into the DRDA spec&lt;br/&gt;
2) Secure the community&apos;s permission for a major release which will let you change the behavior of implicit and explicit BOOLEAN casts.&lt;/p&gt;</comment>
                            <comment id="12438551" author="rhillegas" created="Thu, 28 Sep 2006 21:49:51 +0100"  >&lt;p&gt;Assign to release 11 because of the compatibility issues surrounding the current,  non-ANSI casting behavior of BOOLEAN.&lt;/p&gt;</comment>
                            <comment id="12438720" author="rhillegas" created="Fri, 29 Sep 2006 15:03:25 +0100"  >&lt;p&gt;Attaching a slightly revised version of the DRDA proposal for BOOLEAN. This revision includes some copy-editting changes. In addition, it mentions coercion between BOOLEAN and ONE-BYTE-INTEGER rather than TWO-BYTE-INTEGER. The DBIOP Consortium is now ready to entertain proposals from its advisers. This is the version I will submit.&lt;/p&gt;</comment>
                            <comment id="12438761" author="rhillegas" created="Fri, 29 Sep 2006 18:39:35 +0100"  >&lt;p&gt;Attaching an html version of the DRDA proposal for people who don&apos;t have OpenOffice.&lt;/p&gt;</comment>
                            <comment id="12467622" author="fuzzylogic" created="Thu, 25 Jan 2007 20:42:10 +0000"  >&lt;p&gt;Unsetting Fix Version on unassigned issues.&lt;/p&gt;</comment>
                            <comment id="12494501" author="rhillegas" created="Wed, 9 May 2007 14:53:48 +0100"  >&lt;p&gt;I abandoned a previous attempt to implement the BOOLEAN datatype. Now I am attaching a new functional spec, describing a new attempt. Your feedback is appreciated.&lt;/p&gt;</comment>
                            <comment id="12593018" author="lau" created="Tue, 29 Apr 2008 15:09:12 +0100"  >&lt;p&gt;This spec looks good to me !&lt;/p&gt;

&lt;p&gt;When can we expect to have a BOOLEAN data type in Derby ?&lt;/p&gt;</comment>
                            <comment id="12593024" author="rhillegas" created="Tue, 29 Apr 2008 15:24:16 +0100"  >&lt;p&gt;Thanks for the interest in this feature, Laurent. The issue is currently unassigned, waiting for someone to pick it up. I would be happy to coach someone through the process.&lt;/p&gt;</comment>
                            <comment id="12756274" author="rojares" created="Wed, 16 Sep 2009 23:59:07 +0100"  >&lt;p&gt;Isn&apos;t it about time this issue is picked up?&lt;br/&gt;
I mean boolean type is the simplest and most elementary of all datatypes.&lt;br/&gt;
It seems quite amazing that this type would be too hard to implement whereas Derby has such obscure and useless types like XML?&lt;/p&gt;

&lt;p&gt;I mean it almost seems the world has gone mad! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;But seriously, why did you abandon the implementation Rick?&lt;/p&gt;

&lt;p&gt;I would be happy to help when time permits.&lt;/p&gt;</comment>
                            <comment id="12756512" author="rhillegas" created="Thu, 17 Sep 2009 13:40:03 +0100"  >&lt;p&gt;Hi Rami,&lt;/p&gt;

&lt;p&gt;The problems with re-enabling the BOOLEAN datatype center on backward-compatibility concerns. I hope to be able to put some time during the 10.6 cycle into fixing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-887&quot; title=&quot;Select statement returns wrong number of rows if you compare an integer column with a boolean expression in the where clause&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-887&quot;&gt;&lt;del&gt;DERBY-887&lt;/del&gt;&lt;/a&gt;. That&apos;s a casting bug which stood in the way of the first attempt to re-enable BOOLEAN. One way forward on this issue might be to split the work into smaller increments. For instance, if we just implemented BOOLEAN for embedded usage, that might reduce the compatibility issues. I would be happy to give you advice about how to tackle this issue if you want to help out.&lt;/p&gt;

&lt;p&gt;I stopped working on this issue because it was not a high priority for my company.&lt;/p&gt;</comment>
                            <comment id="12757096" author="rojares" created="Fri, 18 Sep 2009 11:42:47 +0100"  >&lt;p&gt;I will try my sword first with adding comments to derby (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4379&quot; title=&quot;Let&#180;s add comments to Derby SQL Syntax&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4379&quot;&gt;DERBY-4379&lt;/a&gt;)&lt;br/&gt;
If that seems simple enough I will start helping you on this one.&lt;/p&gt;</comment>
                            <comment id="12916214" author="rhillegas" created="Wed, 29 Sep 2010 18:49:11 +0100"  >&lt;p&gt;Closing this issue now that the user documentation is checked in.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12328203">DERBY-887</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12459157">DERBY-4583</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12465874">DERBY-4684</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12466190">DERBY-4692</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467327">DERBY-4704</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12461883">DERBY-4613</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12464438">DERBY-4657</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12464439">DERBY-4658</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12464440">DERBY-4659</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467231">DERBY-4703</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467904">DERBY-4714</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467937">DERBY-4716</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12468086">DERBY-4720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12468450">DERBY-4730</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12468756">DERBY-4737</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12329337">DERBY-1029</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12464682">DERBY-4663</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12369372">DERBY-2651</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12356975" name="BooleanFS.html" size="82951" author="rhillegas" created="Wed, 9 May 2007 14:53:48 +0100"/>
                            <attachment id="12321106" name="BooleanFS.html" size="8179" author="rhillegas" created="Sat, 3 Dec 2005 07:55:36 +0000"/>
                            <attachment id="12341983" name="BooleanType.html" size="30337" author="rhillegas" created="Fri, 29 Sep 2006 18:39:35 +0100"/>
                            <attachment id="12334246" name="BooleanType.html" size="30347" author="rhillegas" created="Thu, 18 May 2006 00:47:50 +0100"/>
                            <attachment id="12341974" name="BooleanType.sxw" size="12706" author="rhillegas" created="Fri, 29 Sep 2006 15:03:25 +0100"/>
                            <attachment id="12334245" name="BooleanType.sxw" size="12710" author="rhillegas" created="Thu, 18 May 2006 00:43:57 +0100"/>
                            <attachment id="12321397" name="bug499.diff" size="260386" author="rhillegas" created="Sun, 18 Dec 2005 08:17:47 +0000"/>
                            <attachment id="12321190" name="bug499_doc.zip" size="597353" author="rhillegas" created="Wed, 7 Dec 2005 07:47:05 +0000"/>
                            <attachment id="12321845" name="bug499_jdk13tests.diff" size="713768" author="rhillegas" created="Wed, 11 Jan 2006 00:00:38 +0000"/>
                            <attachment id="12321941" name="bug499_jdk13tests_rev2.diff" size="709318" author="rhillegas" created="Sat, 14 Jan 2006 02:13:06 +0000"/>
                            <attachment id="12321468" name="bug499_rev2.diff" size="260436" author="rhillegas" created="Wed, 21 Dec 2005 03:35:04 +0000"/>
                            <attachment id="12321472" name="bug499_rev3.diff" size="260409" author="rhillegas" created="Wed, 21 Dec 2005 05:46:18 +0000"/>
                            <attachment id="12321479" name="bug499_rev4.diff" size="260401" author="rhillegas" created="Wed, 21 Dec 2005 09:23:30 +0000"/>
                            <attachment id="12321796" name="jdk131BooleanFailures.zip" size="68665" author="kmarsden" created="Sat, 7 Jan 2006 10:47:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 Aug 2005 04:51:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0p3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37883</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>