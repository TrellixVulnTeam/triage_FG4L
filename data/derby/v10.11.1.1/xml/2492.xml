<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:52:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2492/DERBY-2492.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2492] convert checkDataSource, checkDataSource30 and checkDriver.java to junit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2492</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12365918">DERBY-2492</key>
            <summary>convert checkDataSource, checkDataSource30 and checkDriver.java to junit</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Mar 2007 18:45:07 +0100</created>
                <updated>Wed, 1 Jul 2009 00:40:19 +0100</updated>
                            <resolved>Mon, 14 May 2007 18:31:58 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12487186" author="myrna" created="Fri, 6 Apr 2007 09:10:19 +0100"  >&lt;p&gt;I just committed the first version of the converted test for checkDataSource and checkDataSource30: DataSourceTest.java with revision 526087.&lt;br/&gt;
Also temporarily added a method to SecurityCheck.java, which will be replacing the similar inspect method when I remove checkDataSource*. &lt;br/&gt;
The only place where SecurityCheck is actually used, is in the checkDataSource tests, as far as I could see. ResultSetMiscTest loads the class, but doesn&apos;t actually call any methods, or so it seems to me).&lt;/p&gt;

&lt;p&gt;There are some things left to do with this test, marked with &apos;// TODO:&apos; &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the fixtures testGlobalLocalInterleaf() and testReuseAcrossGlobalLocal() leave the system&lt;br/&gt;
  in a locked state - with embedded, shutting down the database and reconnecting release the&lt;br/&gt;
  locks, but with Network Server / DerbyNetClient that action results in a DRDA_Protocol &lt;br/&gt;
  error for testGlobalLocalInterleaf, and another, severe, protocol error for testReuse...&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  This is not new - I&apos;ve had trouble before running checkDataSource* with remote server, because&lt;br/&gt;
  of the bad state the test leaves the database in.&lt;/p&gt;

&lt;p&gt;  I think there might be a bug somewhere, because even though all statements, preparedstatements,&lt;br/&gt;
  connections, resources, have been closed, the locks are stell held. Or I could just be missing&lt;br/&gt;
  something...&lt;/p&gt;

&lt;p&gt;  Hopefully someone else can have a look and identify the problem.&lt;br/&gt;
  I will log a separate bug for it, for I don&apos;t think fixing this need be part of the conversion effort.&lt;/p&gt;

&lt;p&gt;  In the meantime, these two tests do not run with DerbyNetClient.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;there are some other differences between Network Server/ DerbyNetClient and embedded that I need to find out/check if they are known bugs, or need to log new bugs for and hang off the bug for differences (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-310&quot; title=&quot;Document and/or change Derby client code to match behavior with Embedded driver where possible.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-310&quot;&gt;&lt;del&gt;DERBY-310&lt;/del&gt;&lt;/a&gt;). The differences were present in the original masters for DerbyNetClient, so there  &lt;b&gt;should&lt;/b&gt; be bugs, or the behavior &lt;b&gt;should&lt;/b&gt; be documented.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   these differences are:&lt;br/&gt;
     1. testAllDataSources(), through assertConnectionOK() and testReuseAcrossGlobalLocal() through queryOnStatement(), returns a different connection when comparing a connection obtained from a ConnectionPoolDataSource or an XADataSource, and Statement.getConnection() on a statement created by doing Connection.createStatement().&lt;br/&gt;
        Note, that currently, testReuseAcrossGlobalLocal has been switched off for NetworkServer, but I first added a if(usingEmbedded()) block to ignore this difference in both places where I saw this diff pop up.&lt;/p&gt;

&lt;p&gt;     2. There is a difference in the ReadOnly value returned in testGlobalLocalInterleaf() in the XATransaction after setting ReadOnly. NetworkServer appears to not listen, Embedded has the changed value.&lt;/p&gt;

&lt;p&gt;     3. In testReuseAcrossGlobalLocal() when testing on a closed XAConnection, xac2.getXAResource() does not return an error with NetworkServer, but does with Embedded.&lt;/p&gt;

&lt;p&gt;     4. testXAHoldability(), when testing holdability of a statement created with holdability true, outside the global transaction, the holdability inside global transaction is different. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Finally, the setUp() and tearDown() methods are a little inelegant and probably could be improved.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12487263" author="kmarsden" created="Fri, 6 Apr 2007 17:06:34 +0100"  >
&lt;p&gt;It is correct for the holdability to change to CLOSE_CURSORS_AT_COMMIT &lt;br/&gt;
in the global transaction..  I filed this issue as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2481&quot; title=&quot;Client PreparedStatement  in a global xact does not  downgrade ResultSetHoldability to CLOSE_CURSORS_AT_COMMIT&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2481&quot;&gt;&lt;del&gt;DERBY-2481&lt;/del&gt;&lt;/a&gt;, but &lt;br/&gt;
looking just now I think&lt;br/&gt;
it might be a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1370&quot; title=&quot;Embedded and client driver differ in the holdability reported inside a global transaction for statements that were created with HOLD_CURSORS_OVER_COMMIT outside the transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1370&quot;&gt;DERBY-1370&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;

</comment>
                            <comment id="12487483" author="myrna" created="Mon, 9 Apr 2007 07:31:14 +0100"  >&lt;p&gt;So, from the list above, we get the following bugs:&lt;br/&gt;
1. Statement.getConnection() is different from the ofiringal XA(or ConnectionPool)DataSource.getConnection() - &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2531&quot; title=&quot;client returns different connection on s.getConnection() on a statement obtained from a ConnectionPoolDataSource or XADataSource than the original connection.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2531&quot;&gt;&lt;del&gt;DERBY-2531&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
2. ReadOnly in global transaction not reset - &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-911&quot; title=&quot;Connection.setReadOnly is a no-op in Network Client. It works fine with embedded client.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-911&quot;&gt;DERBY-911&lt;/a&gt;&lt;br/&gt;
3. XAConnection.getXAResource() on closed connection does not give SQLException - &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2532&quot; title=&quot;Client does not return SQLException on XAConnection.getXAResource() on a closed connection, Embedded does&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2532&quot;&gt;&lt;del&gt;DERBY-2532&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
4. testXAHoldability does not get changed to CLOSE_CURSORS_AT_COMMIT inside global transaction - &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1370&quot; title=&quot;Embedded and client driver differ in the holdability reported inside a global transaction for statements that were created with HOLD_CURSORS_OVER_COMMIT outside the transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1370&quot;&gt;DERBY-1370&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12487485" author="myrna" created="Mon, 9 Apr 2007 07:43:29 +0100"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2533&quot; title=&quot;Analysis needed on local/global interleaf of global/local connections to see if locks remaining open is acceptable, and why it gives Protocol errors with DerbyNetClient on subsequent connections to db&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2533&quot;&gt;DERBY-2533&lt;/a&gt; to reflect the spin-off task of addressing the bad state of the db. I think there might be a bug - if all connections, statements, etc. are closed, should there still be locks?&lt;/p&gt;</comment>
                            <comment id="12491269" author="myrna" created="Tue, 24 Apr 2007 13:51:12 +0100"  >&lt;p&gt;forgot to reinstate the checking for correct connection info printing.&lt;/p&gt;</comment>
                            <comment id="12491391" author="myrna" created="Tue, 24 Apr 2007 19:26:41 +0100"  >&lt;p&gt;completed the last TODO with revision 532005.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12366798">DERBY-2533</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12328455">DERBY-911</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12343871">DERBY-1370</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12366793">DERBY-2531</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12366794">DERBY-2532</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12367195">DERBY-2547</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12367196">DERBY-2548</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Apr 2007 16:06:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30478</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0u6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38707</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>