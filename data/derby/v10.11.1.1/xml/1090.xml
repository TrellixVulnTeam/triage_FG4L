<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:40:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1090/DERBY-1090.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1090] Implement Connection.isValid as defined by JDBC4</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1090</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The Javadoc for JDBC4 says this about Connection.isValid:&lt;/p&gt;

&lt;p&gt;boolean isValid(int timeout) throws SQLException&lt;/p&gt;

&lt;p&gt;Returns true if the connection has not been closed and is still valid. The driver shall submit a query on the connection or use some other mechanism that positively verifies the connection is still valid when this method is called. &lt;/p&gt;

&lt;p&gt;The query submitted by the driver to validate the connection shall be executed in the context of the current transaction. &lt;/p&gt;

&lt;p&gt;Parameters: timeout - - The time in seconds to wait for the database operation used to validate the connection to complete. If the timeout period expires before the operation completes, this method returns false. A value of 0 indicates a timeout is not applied to the database operation. &lt;/p&gt;

&lt;p&gt;Returns: true if the connection is valid, false otherwise &lt;/p&gt;</description>
                <environment></environment>
        <key id="12329999">DERBY-1090</key>
            <summary>Implement Connection.isValid as defined by JDBC4</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12328833">DERBY-945</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olav">Olav Sandstaa</assignee>
                                    <reporter username="olav">Olav Sandstaa</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Mar 2006 05:25:09 +0000</created>
                <updated>Wed, 29 Aug 2012 22:39:37 +0100</updated>
                            <resolved>Mon, 15 May 2006 16:03:35 +0100</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12371144" author="olav" created="Tue, 21 Mar 2006 05:28:21 +0000"  >&lt;p&gt;In case someone else have suggestions or ideas on how to best implement this functionality, here are some high-level initial thoughts on how to implement it:&lt;/p&gt;

&lt;p&gt;  -to check the validity of the connection, issue a simple query like&lt;br/&gt;
   e.g., &quot;VALUES (1)&quot;&lt;/p&gt;

&lt;p&gt;  -to implement the timeout, use the setQueryTimeout() method. &lt;/p&gt;

&lt;p&gt;This will hopefully be sufficient in the embedded version as I expect that for all error situations where the connection no longer is valid, an exception will be thrown when issuing the query.&lt;/p&gt;

&lt;p&gt;For the Derby client we probably need some timeout mechanism in the client code (in addition to setting the query timeout) in order to detect that the server has not responded within before the specified timeout has elapsed. I have not studied the network code in details yet to find out if it already has code or hooks for specifying a timeout on the DRDA request to the server. Any suggestions on how to best implement this are welcome.&lt;/p&gt;</comment>
                            <comment id="12371161" author="djd" created="Tue, 21 Mar 2006 07:06:08 +0000"  >&lt;p&gt;In embedded would it  be sufficient just to call the isClosed() method?&lt;/p&gt;</comment>
                            <comment id="12371210" author="olav" created="Tue, 21 Mar 2006 19:48:52 +0000"  >&lt;p&gt;Dan, thanks for the suggestion of only using isClosed in the embedded driver. I have also wondered if calling isClosed would be sufficient, and actually I have not been able to create a scenario where isClosed returns false followed by simple query that fails.&lt;/p&gt;

&lt;p&gt;The main reasons for including execution of a simple query also in the embedded driver are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I do not know the code well enough to be sure that there will not be situations where isClosed returns false and a query returns e.g., a timeout or exception due to some resource constraints, deadlock or other error situations.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;It will make the behavior and implementation more similar between what is done in the embedded and in the client driver.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I will probably submit a patch for how isValid can be implemented for the Embedded server containing both a check for isClosed and a query. If you or other on the list still thinks it is unnecessary to include execution of a query I will remove it.&lt;/p&gt;</comment>
                            <comment id="12371245" author="djd" created="Tue, 21 Mar 2006 23:13:38 +0000"  >
&lt;p&gt;The query case actually seems somewhat harder to me, and one needs to understand the code far more, than the isClosed approach.&lt;br/&gt;
Maybe this knowledge needs to exist for the client implementation anyway. I think one has to see how many ways the query can fail and&lt;br/&gt;
then see how many map to the connection being not valid. I don&apos;t believe the query failing, always means the connection is not valid.&lt;br/&gt;
If the query failed due to out of memory error, then the connection is still valid.&lt;/p&gt;

&lt;p&gt;There&apos;s no requirement for the embedded and client dirver to have identical implementations, the embedded gains performance&lt;br/&gt;
by having direct access to the engine, something that is clearly not possible with the client. This naturally leads to different implementations&lt;br/&gt;
for various methods.&lt;/p&gt;</comment>
                            <comment id="12371306" author="olav" created="Wed, 22 Mar 2006 05:34:12 +0000"  >&lt;p&gt;Thanks for commenting on this, Dan. I agree that using a query is more complicated than just checking for isClosed. So if checking for isClosed is sufficient to verify that the connection is &quot;valid&quot; we should go for that approach in the embedded driver as it is less complex and has better performance. &lt;/p&gt;

&lt;p&gt;Still, I think the purpose of adding the isValid method to the JDBC standard is to positively determine that it is possible to run queries on it. I am not convinced that your example of a simple query on the connection failing due to out of memory should still return that the connection is &quot;valid&quot;? I expect this is a method that will be used together with a connection pool implementation where either the pool or the user will use this for &quot;ensuring&quot; the connection is &quot;valid&quot; before it is used for something. And having a connection that returns out of memory errors on every query is not something that an application would think is a &quot;useful&quot; connection to have around (on the other side, creating a new connection does probably not make the situation any better in this case). The JavaDoc for isValid (see the test in the Jira issue) strongly indicates that we actually should take the cost of running a query against the database.&lt;/p&gt;

&lt;p&gt;Anyway, I have no strong opinions on whether to just check isClosed or issue a query against the database. But since I now happen to have a patch that solves this using a query I will upload this patch tonight. Tomorrow moring I will upload a new patch that is only checking for isClosed. I do not expect anyone to do a review or commit any of these, but it might trigger some more comments and opinions from other on the list. &lt;/p&gt;</comment>
                            <comment id="12371310" author="olav" created="Wed, 22 Mar 2006 05:50:46 +0000"  >&lt;p&gt;The patch contains one alternative implementation of  Connection.isValid() for the embedded driver by verifying that the connection&lt;br/&gt;
is open (by calling isClosed()) and by running a simple query (&quot;VALUES (1)&quot;) against the database. If the connection is closed or if the query returns any SQL exception, isValid returns false. To support the timeout defined as a parameter to isValid, setQueryTimeout is used.&lt;/p&gt;

&lt;p&gt;Testing:&lt;/p&gt;

&lt;p&gt;The patch extends the TestConnectionMethods.java test with test for isValid in the following cases:&lt;/p&gt;

&lt;p&gt;  -wrong parameter values (negative timeout)&lt;br/&gt;
  -isValid with no timeout&lt;br/&gt;
  -isValid with a specified timeout&lt;br/&gt;
  -isValid on a connection that is closed&lt;br/&gt;
  -isValid on a &quot;open connection&quot; to a database that is shutdown&lt;/p&gt;

&lt;p&gt;I plan to submit an alternative patch that is checking only for isClosed as well as a more complete patch containing an implementation of isValid for the Derby client driver.&lt;/p&gt;

&lt;p&gt;svn status reports:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection40.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestConnection.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestConnectionMethods.java&lt;/p&gt;

&lt;p&gt;I have run the JDBC4 tests using Java 1.6 and derbyall using 1.5 under Solaris 10 x86. Only errors seen in the regression test was reported.&lt;/p&gt;

&lt;p&gt;The patch is complete for the embedded driver and could be reviewed and committed, but I expect that we should wait until we have decided if using only isClosed is a better and sufficient solution.&lt;/p&gt;
</comment>
                            <comment id="12371312" author="davidvc" created="Wed, 22 Mar 2006 06:01:03 +0000"  >&lt;p&gt;Hi, Olav.  It&apos;s not clear to me what a committer needs to do with this patch.  You have checked the box saying you intend it for inclusion to the project, but you also say other, alternate patches are on  the way.  Do you want a committer to commit this, or is it just for review?&lt;/p&gt;</comment>
                            <comment id="12371422" author="olav" created="Wed, 22 Mar 2006 22:21:43 +0000"  >&lt;p&gt;Hi, David. The main purpose of sending in the patch was to get opinions from more people on what would be the best alternative solution to check if a connection is valid in the embedded driver. The current alternatives are:&lt;/p&gt;

&lt;p&gt;  a) check if connection is not closed followed by a simple query against the database (this is implemented by the patch I submitted yesterday)&lt;br/&gt;
  b) just check that the connection is not closed (I plan to submit an alternative patch for this soon)&lt;/p&gt;

&lt;p&gt;Dan has suggested that checking for isClosed could be sufficient in the embedded version. It would be good to hear if other have opinions about this. If I do not get other suggestions I will probably propose that the next patch (checking only for isClosed) being reviewed and commited.&lt;/p&gt;</comment>
                            <comment id="12371698" author="olav" created="Fri, 24 Mar 2006 18:24:16 +0000"  >&lt;p&gt;This patch (embedded1090-isclosed.diff)  implementations Connection.isValid() for the embedded driver by verifying that the connection &lt;br/&gt;
is not closed (by calling isClosed()). If the connection is closed, isValid returns false, otherwise it returns true. The timeout defined as a parameter to isValid is not used.&lt;/p&gt;

&lt;p&gt;Compared to the previous patch I sent a few days ago (embedded1090-query.diff), this patch does not run any query against Derby to validate the&lt;br/&gt;
connection. My proposal (also based on suggestions from Dan) is that we only check for isClosed() in the embedded driver. I have not experienced any situation where isClosed returned false and the query failed. If we later discover situations where the connection is not &quot;valid&quot; even if isValid returns true, we can add a query as done in my first patch to isValid.&lt;/p&gt;

&lt;p&gt;Testing: &lt;/p&gt;

&lt;p&gt;The patch extends the TestConnectionMethods.java test with test for isValid in the following cases: &lt;/p&gt;

&lt;p&gt;  -wrong parameter values (negative timeout) &lt;br/&gt;
  -isValid with no timeout &lt;br/&gt;
  -isValid with a specified timeout &lt;br/&gt;
  -isValid on a connection that is closed &lt;br/&gt;
  -isValid on a &quot;open connection&quot; to a database that is shutdown &lt;/p&gt;

&lt;p&gt;svn status reports: &lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection40.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestConnectionMethods.java&lt;/p&gt;

&lt;p&gt;I have run the JDBC4 tests using Java 1.6 and derbyall using Java 1.5 under Solaris 10 x86. Only errors seen in the regression test was reported (runtimeinfo failed in derbynetmats).&lt;/p&gt;

&lt;p&gt;The patch is complete for the embedded driver and can be reviewed and committed.&lt;/p&gt;</comment>
                            <comment id="12371853" author="rhillegas" created="Sat, 25 Mar 2006 23:20:45 +0000"  >&lt;p&gt;Looks good to me. The jdbc4 tests run cleanly. Derbyall only has errors which I see in a clean client: wisconsin, sysinfo, sysinfo_withproperties, xaSimplePositive, and a new failure in SURTest caused by:&lt;/p&gt;

&lt;p&gt;&amp;gt; java.lang.NoSuchMethodError: main&lt;br/&gt;
&amp;gt; Exception in thread &quot;main&quot;&lt;br/&gt;
Test Failed.&lt;/p&gt;

&lt;p&gt;I have committed embedded1090_isClosed.diff at subversion revision 388771.&lt;/p&gt;</comment>
                            <comment id="12375562" author="olav" created="Fri, 21 Apr 2006 21:36:17 +0100"  >&lt;p&gt;This patch (client1090_patch1.diff) implements the Connection.isValid for the network client. The connection is valid if (a) it is not closed (checked isClosed()) and (b) a simple query (&quot;VALUES (1)&quot;) is executed successfully. Any exception thrown by the query execution is treated as if the connection is not valid.&lt;/p&gt;

&lt;p&gt;If a timeout is specified this is handled by setting a query timeout for executing the query (queryTimeout() is used). &lt;/p&gt;

&lt;p&gt;The implementation handles most failure situations, with the exception of a hanging server that is not returning any reply to the client. I plan to submit a fix for this in a separte patch. &lt;/p&gt;

&lt;p&gt;The isValid() call is tested for the following scenarios:&lt;/p&gt;

&lt;p&gt;  -illegal parameter values (negative timeout)&lt;br/&gt;
  -no timeout value&lt;br/&gt;
  -with a timeout specified&lt;br/&gt;
  -on a connection to a database that has been shutdown&lt;br/&gt;
  -on a connection to a network server that has been stopped&lt;/p&gt;

&lt;p&gt;svn status reports:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestConnectionMethods.java&lt;br/&gt;
M      java/client/org/apache/derby/client/net/NetConnection40.java&lt;/p&gt;

&lt;p&gt;I have run the JDBC4 tests and derbyall with the patch. Only failure was in tools/derbyrunjartest.java.&lt;/p&gt;

&lt;p&gt;The patch can be reviewed and committed.&lt;/p&gt;</comment>
                            <comment id="12375577" author="dyret" created="Fri, 21 Apr 2006 22:44:13 +0100"  >&lt;p&gt;I have looked at the patch, and I think it looks good, and can be committed.&lt;/p&gt;</comment>
                            <comment id="12375649" author="rhillegas" created="Sat, 22 Apr 2006 06:50:58 +0100"  >&lt;p&gt;I concur, looks good. JDBC4 tests run cleanly. Derbyall runs cleanly modulo wisconsin noise. Committed at subversion revision 396028.&lt;/p&gt;</comment>
                            <comment id="12376259" author="olav" created="Tue, 25 Apr 2006 21:54:51 +0100"  >&lt;p&gt;Dyre and Rick, thanks for reviewing and committing the patch.&lt;/p&gt;</comment>
                            <comment id="12376267" author="olav" created="Tue, 25 Apr 2006 22:20:33 +0100"  >&lt;p&gt;The first implementation of Connection.isValid() for the client driver handles most failuire situations. One situation that is not handled is if the server &quot;hangs&quot; and the client does not receive a reply. The application will be hanging &quot;forever&quot; in the isValid() call due to the blocking read on the socket even if a timeout value has been specified. I plan to submit a fix to this problem by setting a timeout on the socket before the read is called on the socket (using java.net.socket.setSoTimeout). One potential problem with using socket.setSoTimeout is that its implementation is platform dependent. Some operating systems might not support the timeout value and block forever on socket operations even if a timeout is set.&lt;/p&gt;

&lt;p&gt;I would appreciate to hear if anybody has better or alternative solutions on how to handle the problem with blocking socket read and hanging server. &lt;/p&gt;
</comment>
                            <comment id="12376800" author="olav" created="Fri, 28 Apr 2006 04:15:22 +0100"  >&lt;p&gt;This patch (client1090_patch2.diff) addresses the problem of Connection.isValid() hanging infinite if the server is either &quot;hanging&quot; or not sending a reply. &lt;/p&gt;

&lt;p&gt;The reason for the client to hang in these situations is that blocking read (and write) is used for receiving replies from the Derby network server. To avoid the client hanging infinite in the blocking read when the caller has specified a timeout to isValid() we set a maximum timeout value on the socket (by using java.net.socket.setSoTimeout()) before the query is sent to the server. Thus, if the server does not respond within the specified timeout period the blocking read will return with an exception.&lt;br/&gt;
If this exception is thrown, isValid will return false for this connection. The timeout on the socket is reset to whatever value it had before the call to isValid. Thus, this socket timeout should only influence on the query issued by the isValid code.&lt;/p&gt;

&lt;p&gt;The implementation has been tested by setting a very low timeout value and introducing a delay in the network server.&lt;/p&gt;

&lt;p&gt;svn status reports:&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/net/NetAgent.java&lt;br/&gt;
M      java/client/org/apache/derby/client/net/NetConnection40.java&lt;/p&gt;

&lt;p&gt;I have run the JDBC4 tests and derbyall with the patch. Only failure was in tools/derbyrunjartest.java.&lt;/p&gt;

&lt;p&gt;The patch can be reviewed and committed.&lt;/p&gt;</comment>
                            <comment id="12376938" author="rhillegas" created="Fri, 28 Apr 2006 21:46:01 +0100"  >&lt;p&gt;Looks solid. JDBC4 tests run cleanly. So does derbyall modulo the wisconsin noise. Committed at subversion revision 397899.&lt;/p&gt;</comment>
                            <comment id="12383193" author="olav" created="Fri, 12 May 2006 19:17:53 +0100"  >&lt;p&gt;This patch (brokeredlogical1090.diff) implemets support for Connection.isValid for pooled and XA connections. &lt;/p&gt;

&lt;p&gt;Testing of isValid for pooled and XA connections is implemented in the jdbc4/ConnectionTest.junit. This test is currently not part of either the jdbc4 suite or derbyall. &lt;/p&gt;

&lt;p&gt;svn status reports:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection40.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionTest.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/LogicalConnection40.java&lt;/p&gt;

&lt;p&gt;I have run the jdbc4/ConnectionTest.junig, the JDBC4 test suite and derbyall with the patch. Only failure was in tools/derbyrunjartest.java. &lt;/p&gt;

&lt;p&gt;The patch can be reviewed and committed.&lt;/p&gt;</comment>
                            <comment id="12383384" author="rhillegas" created="Sat, 13 May 2006 21:53:10 +0100"  >&lt;p&gt;The brokeredlogical1090.diff patch looks solid. JDBC4 tests pass. Derbyall passes modulo expected diffs in wisconsin and SuicideOfStreaming. Committed at subversion revision 406101.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12605318">DERBY-5912</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12327405" name="brokeredlogical1090.diff" size="4667" author="olav" created="Fri, 12 May 2006 19:17:53 +0100"/>
                            <attachment id="12325671" name="client1090_patch1.diff" size="12781" author="olav" created="Fri, 21 Apr 2006 21:36:17 +0100"/>
                            <attachment id="12325969" name="client1090_patch2.diff" size="5183" author="olav" created="Fri, 28 Apr 2006 04:15:22 +0100"/>
                            <attachment id="12324545" name="embedded1090-isclosed.diff" size="7877" author="olav" created="Fri, 24 Mar 2006 18:24:15 +0000"/>
                            <attachment id="12324424" name="embedded1090-query.diff" size="12417" author="olav" created="Wed, 22 Mar 2006 05:50:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Mar 2006 07:06:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29853</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0a93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35479</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>