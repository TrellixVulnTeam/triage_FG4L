<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3457/DERBY-3457.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3457] Closing a logical connection must close all associated logical statements</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3457</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When a logical connection is closed, all open logical statements created by this connection must be closed.&lt;br/&gt;
The closing is important per the general principle of cleaning up resources, but especially so in the case of statement pooling, as not closing the logical statement can cause side effects on another logical connection (sharing the same physical connection).&lt;/p&gt;</description>
                <environment>Client-server with statement pooling enabled in the client driver.</environment>
        <key id="12389388">DERBY-3457</key>
            <summary>Closing a logical connection must close all associated logical statements</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Sat, 23 Feb 2008 16:09:57 +0000</created>
                <updated>Fri, 27 Jun 2008 14:16:16 +0100</updated>
                            <resolved>Thu, 28 Feb 2008 20:19:07 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12571752" author="kristwaa" created="Sat, 23 Feb 2008 16:11:52 +0000"  >&lt;p&gt;Fixed typo in summary.&lt;/p&gt;</comment>
                            <comment id="12571782" author="kristwaa" created="Sat, 23 Feb 2008 19:47:59 +0000"  >&lt;p&gt;&apos;derby-3457-1a-stmt_closing.diff&apos; is a fix that makes closing a caching logical statement close all associated logical statements as well.&lt;br/&gt;
One thing I&apos;d like feedback on, is what we should do if closing a statement throws an exception?&lt;br/&gt;
 a) swallow it, abandon the logical statement and continue&lt;br/&gt;
 b) throw the exception to the user (on the first occurrence)&lt;br/&gt;
 c) catch exception, continue closing remaining statements, then rethrow exception&lt;br/&gt;
 d) &amp;lt;your-approach-here&amp;gt;&lt;br/&gt;
Patch 1a does (a).&lt;/p&gt;

&lt;p&gt;I have a test for the issue, but it needs some polishing before I post it. It contains a number of other tests for statement pooling as well.&lt;br/&gt;
When testing I happened to forget applying the patch that enables statement pooling, but the test still failed. I will investigate further (more testing and search JIRA) and see if there is an existing bug in the client driver (when doing connection pooling) or if my test is incorrect.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12572549" author="kristwaa" created="Tue, 26 Feb 2008 16:32:44 +0000"  >&lt;p&gt;&apos;derby-3457-1b-stmt_closing.diff&apos; is a refreshed patch due to other changes to the same files.&lt;/p&gt;

&lt;p&gt;Patch ready ready for review, see description above.&lt;/p&gt;</comment>
                            <comment id="12572901" author="kristwaa" created="Wed, 27 Feb 2008 13:08:10 +0000"  >&lt;p&gt;&apos;derby-3457-2a-stmt_registration.diff&apos; is a partial patch adding registration of the logical statements when they are created. I will add the remaining logic as patch 1c (or higher).&lt;br/&gt;
I split patch 1b into two parts, because I need review of the most critical part of the change, and I think the changes done in 2a is pretty straight forward and not as important as 1c will be.&lt;/p&gt;

&lt;p&gt;Committed 2a to trunk with revision 631577.&lt;br/&gt;
Patch 1c will follow shortly.&lt;/p&gt;</comment>
                            <comment id="12572906" author="kristwaa" created="Wed, 27 Feb 2008 13:40:32 +0000"  >&lt;p&gt;&apos;derby-3457-1c-stmt_closing.diff&apos; adds the closing logic for logical statements.&lt;br/&gt;
The basic approach taken is that each new logical statement is registered by the StatementCacheInteractor.&lt;br/&gt;
When a logical statement is explicitly closed, it removes itself from the list of open statements.&lt;br/&gt;
When the caching logical connection is closed, it iterates through the list of open statements and closes them.&lt;/p&gt;

&lt;p&gt;Possible issues:&lt;br/&gt;
 a) What should happen if closing a statement throws exception?&lt;br/&gt;
    Currently, the close procedure is aborted, and I&apos;m not quite sure what state the connection is left in.&lt;br/&gt;
    The close can fail on statement reset, or on physical statement close. Not sure which errors can occur, except for network problems.&lt;/p&gt;

&lt;p&gt;There is also a possible issue with calling super.close in CachingLogicalConnection. That method cannot close open statements when called from a CLC, but it should do it when called on a LogicalConnection. This suggests a bug somewhere, and I have to look into this to determine if the existing LogicalConnection has a bug, or if it is the new code I have added.&lt;/p&gt;

&lt;p&gt;Patch 1c ready for review.&lt;/p&gt;</comment>
                            <comment id="12572969" author="dyret" created="Wed, 27 Feb 2008 16:50:35 +0000"  >&lt;p&gt;Hi Kristian, I had a quick look at the patch, and I think it looks good.&lt;/p&gt;

&lt;p&gt;Wrt. how to handle a failing close(), I&apos;m wondering if Statement.close() can ever fail with a recoverable error? If it can&apos;t (and I don&apos;t think it can), then I think the current approach will work well. The cleanup is aborted, but presumably neither the physical statement or even the physical connection will be usable in this case, so a graceful bailout seems the best one can do...&lt;/p&gt;

&lt;p&gt;I guess I don&apos;t fully understand your last comment. super.close() in CLC would refer to LogicalConnection.close(), right? But this method does not close any LogicalStatements, does it? It has a comment saying that it needs to do so, but it doesn&apos;t do it, I think. Is that to avoid the failure?&lt;/p&gt;</comment>
                            <comment id="12572987" author="kristwaa" created="Wed, 27 Feb 2008 17:14:14 +0000"  >&lt;p&gt;Thanks for the review Dyre!&lt;/p&gt;

&lt;p&gt;I basically agree with you on the close failure issue, but I can&apos;t say I&apos;m 100% sure. Unless someone gives me pushback, I think I&apos;ll stick with the current approach (bailing out on first exception thrown).&lt;/p&gt;

&lt;p&gt;My last comment was rooted in the code comment that you also noticed.&lt;br/&gt;
I need to verify what is actually happening. I see a few scenarios:&lt;br/&gt;
 1) LogicalConnection actually closes the statements somehow, rendering the statement pooling almost useless.&lt;br/&gt;
 2) LogicalConnection does not close statements at all, and I&apos;ll log a bug in JIRA.&lt;br/&gt;
    This would affect environments using connection pooling (CP, XA), but not statement pooling.&lt;/p&gt;

&lt;p&gt;Solution to (1) &lt;b&gt;could&lt;/b&gt; be to introduce a second close method, one that does not close the statements (that would instead happen when you close the PooledConnection). The comment should be removed.&lt;br/&gt;
For (2), a mechanism must be put into place and the comment can be removed. Maybe we can use / come up with a shared mechanism for LC and CLC, I don&apos;t know yet. Maybe even something in am.Connection can be used, I know it keeps track of statements it creates.&lt;/p&gt;

&lt;p&gt;I&apos;ll get back with more information later, hopefully tomorrow.&lt;/p&gt;</comment>
                            <comment id="12573430" author="kristwaa" created="Thu, 28 Feb 2008 20:19:06 +0000"  >&lt;p&gt;I committed patch &apos;derby-3457-1c-stmt_closing.diff&apos; to trunk with revision 632112.&lt;/p&gt;

&lt;p&gt;Regarding the issues mentioned in my previous comment, I need to look more into it. For now I do know that LogicalConnection re-prepares open statements when a new logical connection is obtained. This breaks the statement cache, as there might be statements that are no longer valid there.&lt;br/&gt;
A typical example of an invalid statement, is one that is referring to a table that has been deleted. With the current strategy (and statement pooling enabled), the user won&apos;t get the exception before calling ps.execute(), where as he/she would get it on Connection.prepare() earlier. If there is no matching statement in the cache, the behavior will be unchanged.&lt;/p&gt;

&lt;p&gt;Regardless of the issues above, logical statements must still be marked as closed when the logical connection is closed.&lt;br/&gt;
Further issues will be handled as bugs under separate JIRAs, and tests will be committed as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3329&quot; title=&quot;Enable statement pooling in the client JDBC driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3329&quot;&gt;&lt;del&gt;DERBY-3329&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12608765" author="kristwaa" created="Fri, 27 Jun 2008 14:16:16 +0100"  >&lt;p&gt;Closing the issue.&lt;/p&gt;

&lt;p&gt;The reprepare logic in Connection.completeReset has been disabled for statement pooling environments. I have not yet been able to trigger the reprepare logic anyway, because the list of open statements is always empty.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12386516">DERBY-3326</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376316" name="derby-3457-1a-stmt_closing.diff" size="10642" author="kristwaa" created="Sat, 23 Feb 2008 19:47:59 +0000"/>
                            <attachment id="12376317" name="derby-3457-1a-stmt_closing.stat" size="304" author="kristwaa" created="Sat, 23 Feb 2008 19:47:59 +0000"/>
                            <attachment id="12376504" name="derby-3457-1b-stmt_closing.diff" size="10572" author="kristwaa" created="Tue, 26 Feb 2008 16:32:44 +0000"/>
                            <attachment id="12376623" name="derby-3457-1c-stmt_closing.diff" size="5843" author="kristwaa" created="Wed, 27 Feb 2008 13:40:32 +0000"/>
                            <attachment id="12376622" name="derby-3457-2a-stmt_registration.diff" size="5764" author="kristwaa" created="Wed, 27 Feb 2008 13:08:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Feb 2008 16:50:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30865</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ys7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39453</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>