<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:46:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3568/DERBY-3568.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3568] Convert jdbcapi/savepointJdbc30_JSR169.java and jdbcapi/savepointJdbc30_XA.java to JUnit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3568</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;These are the last two in the jdk14 suite and might be a good beginner task.  &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12392260">DERBY-3568</key>
            <summary>Convert jdbcapi/savepointJdbc30_JSR169.java and jdbcapi/savepointJdbc30_XA.java to JUnit</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ebirkenes">Erlend Birkenes</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Mar 2008 14:40:46 +0000</created>
                <updated>Wed, 1 Jul 2009 00:40:22 +0100</updated>
                            <resolved>Thu, 24 Apr 2008 08:46:08 +0100</resolved>
                                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12583121" author="ebirkenes" created="Fri, 28 Mar 2008 18:11:38 +0000"  >&lt;p&gt;My first attempt at converting to JUnit.&lt;/p&gt;</comment>
                            <comment id="12583145" author="djd" created="Fri, 28 Mar 2008 19:01:47 +0000"  >&lt;p&gt;I don&apos;t think there&apos;s any need for the fields in the class, namely:&lt;/p&gt;

&lt;p&gt;+    Connection con, con2;&lt;br/&gt;
+    ResultSet rs1, rs2, rs1WithHold, rs2WithHold;&lt;br/&gt;
+    Savepoint savepoint1, savepoint2, savepoint3, savepoint4;&lt;br/&gt;
+    Statement s,s2; &lt;/p&gt;

&lt;p&gt;A test fixture always corresponds to a new instance of the class, so while it appears the setup maybe sharing these objects across multiple fixtures, it&apos;s not. Each fixture will be in its own object and run its own setup and teardown methods.&lt;/p&gt;

&lt;p&gt;Local variables are more natural for a fixture since they are indeed locally scoped to be used only in that fixture.&lt;/p&gt;

&lt;p&gt;Also, the utility methods and parent class already handle a single connection being shared across the setup, fixture and teardown method, so this is not required:&lt;/p&gt;

&lt;p&gt;+        con = getConnection();&lt;/p&gt;

&lt;p&gt;Each getConnection() call (or the utility methods such as createStatement(), prepareStatement() etc.) already use a single connection, so there&apos;s no need for a field to store it, it&apos;s already handled by the parent class.&lt;/p&gt;</comment>
                            <comment id="12583163" author="kmarsden" created="Fri, 28 Mar 2008 19:41:23 +0000"  >&lt;p&gt;Thanks for the quick work and patch.  Looks like a good first effort.  Below are some comments.&lt;/p&gt;

&lt;p&gt;some general comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add the test to jdbcapi._Suite&lt;/li&gt;
	&lt;li&gt;Remove the test from the jdbcapi suite in the old harness and remove masters.&lt;/li&gt;
	&lt;li&gt;Run suites.All and derbyall.&lt;/li&gt;
	&lt;li&gt;Keep connections,result sets, statements and savepoints local to&lt;br/&gt;
the fixtures.   These do not get cleaned up by JUnit.&lt;/li&gt;
	&lt;li&gt;I wonder if there is a Jira issue that nested savepoints are not&lt;br/&gt;
  supported with the client driver.  If not we should file one.&lt;/li&gt;
	&lt;li&gt;There are comments that refer to JCC that can probably be changed to client instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some detailed comments on the code:&lt;/p&gt;

&lt;p&gt;suite() &lt;br/&gt;
Instead of !TestUtil.isNetFramework() use usingEmbedded() in BaseJDBCTestCase.&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/javadoc/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.html#usingEmbedded(&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/javadoc/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.html#usingEmbedded(&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I&apos;m not sure though if the current code is going to get things running at all with network server.  I have always just used TestConfiguration.defaultSuite() and had the fixtures return if usingDerbyNetClient() if I don&apos;t want them to run, but it may make more sense not to add them into the suite at all as you have attempted to do.  CallableTest has an example of how this can be done.&lt;/p&gt;


&lt;p&gt;setup()/teardown() - Instead of creating the tables once per fixture, you can it once using  CleanDatabaseSetup and decorateSQL and then the cleanup will be automatic.  See BatchUpdateTest for an example.&lt;/p&gt;


&lt;p&gt;When catching an exception check that the SQLState that you get is correct with&lt;br/&gt;
assertSQLState.&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/javadoc/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.html#assertSQLState(java.lang.String,%20java.sql.SQLException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/javadoc/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.html#assertSQLState(java.lang.String,%20java.sql.SQLException&lt;/a&gt;)&lt;/p&gt;


&lt;p&gt;If no exception is expected, it is better just to let the exception be thrown instead of catching it and printing a message.  e.g. Instead of &lt;br/&gt;
      try &lt;/p&gt;
{
            savepoint2 = con.setSavepoint(&quot;s1&quot;);
        }
&lt;p&gt; catch (SQLException se) &lt;/p&gt;
{
            fail(&quot;After releasing a savepoint, should be able to reuse it&quot;);
        }
&lt;p&gt;just use &lt;br/&gt;
 savepoint2 = con.setSavepoint(&quot;s1&quot;);&lt;/p&gt;


&lt;p&gt;I see a few failures when I run the test.&lt;br/&gt;
testSavepointsInBatch: &lt;br/&gt;
java.sql.SQLException: Table/View &apos;t1&apos; does not exist.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2082)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:614)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(EmbedStatement.java:152)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertEscapedTableRowCount(BaseJDBCTestCase.java:895)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertTableRowCount(BaseJDBCTestCase.java:879)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.SavepointJdbc30_JSR169Test.testSavepointsInBatch(SavepointJdbc30_JSR169Test.java:489)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: ERROR 42X05: Table/View &apos;t1&apos; does not exist.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromBaseTable.bindTableDescriptor(FromBaseTable.java:2451)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(FromBaseTable.java:2175)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromList.bindTables(FromList.java:310)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.bindNonVTITables(SelectNode.java:390)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bindTables(DMLStatementNode.java:199)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bind(DMLStatementNode.java:137)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:236)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:314)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:768)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
	... 25 more&lt;/p&gt;


&lt;p&gt;testBug5817 &lt;br/&gt;
java.sql.SQLException: &apos;DROP TABLE&apos; cannot be performed on &apos;SAVEPOINT&apos; because it does not exist.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2082)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:614)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.SavepointJdbc30_JSR169Test.testBug5817(SavepointJdbc30_JSR169Test.java:633)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: ERROR 42Y55: &apos;DROP TABLE&apos; cannot be performed on &apos;SAVEPOINT&apos; because it does not exist.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:303)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DDLStatementNode.getTableDescriptor(DDLStatementNode.java:296)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DDLStatementNode.getTableDescriptor(DDLStatementNode.java:263)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DropTableNode.bindStatement(DropTableNode.java:97)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:314)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:768)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
	... 23 more&lt;/p&gt;

&lt;p&gt;xtestRollbackWillReleaseLaterSavepoints&lt;br/&gt;
java.sql.SQLException: Table/View &apos;t1&apos; does not exist.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2082)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:614)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(EmbedStatement.java:152)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertEscapedTableRowCount(BaseJDBCTestCase.java:895)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertTableRowCount(BaseJDBCTestCase.java:879)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.SavepointJdbc30_JSR169Test.xtestRollbackWillReleaseLaterSavepoints(SavepointJdbc30_JSR169Test.java:758)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: ERROR 42X05: Table/View &apos;t1&apos; does not exist.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromBaseTable.bindTableDescriptor(FromBaseTable.java:2451)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(FromBaseTable.java:2175)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromList.bindTables(FromList.java:310)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.bindNonVTITables(SelectNode.java:390)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bindTables(DMLStatementNode.java:199)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bind(DMLStatementNode.java:137)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:236)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:314)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:768)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
	... 23 more&lt;/p&gt;
</comment>
                            <comment id="12583494" author="ebirkenes" created="Sun, 30 Mar 2008 23:53:51 +0100"  >&lt;p&gt;Here is my second attempt.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I moved database setup to CleanDatabaseSetup and decorateSQL so it only happens once. setUp() now only makes sure that AutoCommit is off.&lt;/li&gt;
	&lt;li&gt;I now keep everything local in the fixtures.&lt;/li&gt;
	&lt;li&gt;Instead of !TestUtil.isNetFramework() I now use usingEmbedded() in BaseJDBCTestCase.&lt;/li&gt;
	&lt;li&gt;I changed JCC to client in comments.&lt;/li&gt;
	&lt;li&gt;I now assertSQLState when catching exception.&lt;/li&gt;
	&lt;li&gt;I don&apos;t catch unexpected exceptions anymore.&lt;/li&gt;
	&lt;li&gt;Added the test to jdbcapi._Suite&lt;/li&gt;
	&lt;li&gt;Removed the test from the jdbcapi suite in the old harness&lt;/li&gt;
	&lt;li&gt;Removed masters.&lt;/li&gt;
	&lt;li&gt;Ran suites.All and derbyall.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12583688" author="kmarsden" created="Mon, 31 Mar 2008 14:45:18 +0100"  >&lt;p&gt;Thanks Erlend for the new patch. I am the one that suggested removing the old test, but I guess that wasn&apos;t such a smart idea as it causes a build failure because the savepointJDbc30_XA test still extends from it.&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 10 source files to C:\svn3\trunk\classes&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\svn3\trunk\java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\savepointJdbc30_XA.java:42: c&lt;br/&gt;
nnot find symbol&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol: class savepointJdbc30_JSR169&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; public class savepointJdbc30_XA  extends savepointJdbc30_JSR169{&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                          ^&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\svn3\trunk\java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\savepointJdbc30_XA.java:62: c&lt;br/&gt;
nnot find symbol&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method runTests(java.lang.String,java.sql.Connection,java.sql.Connection)&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.derbyTesting.functionTests.tests.jdbcapi.savepointJdbc30_XA&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             runTests(&quot;connections from XADataSource (local tranasaction)&quot;,&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                 ^&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\svn3\trunk\java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\savepointJdbc30_XA.java:68: c&lt;br/&gt;
nnot find symbol&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method dumpSQLExceptions(java.sql.SQLException)&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.derbyTesting.functionTests.tests.jdbcapi.savepointJdbc30_XA&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                 dumpSQLExceptions(e);&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                     ^&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 3 errors&lt;/p&gt;

&lt;p&gt;Other comments.&lt;/p&gt;

&lt;p&gt;I think we still have a problem that this won&apos;t run with network server.    You will have to use the clientServerDecorator to get it to run with network server.  See CallableStatmentTest for an example of how to use the clientServerDecorator and omit some tests for running with client.&lt;/p&gt;

&lt;p&gt;When creating statements, you can just use createStatement() instead of con.createStatement() and then the statements will get closed automatically.&lt;/p&gt;

&lt;p&gt;In decorateSQL, I think we can omit the code that tries to drop  the tables and catches  the exception. I think we can assume a clean database.&lt;/p&gt;

&lt;p&gt;I think in JDBCHarnessJavaTest we can just remove the savepointJdbc30_JSR169 line instead of commenting it out.&lt;/p&gt;

&lt;p&gt;All else looks good.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12586214" author="ebirkenes" created="Mon, 7 Apr 2008 01:12:47 +0100"  >&lt;p&gt;The third version. &lt;br/&gt;
I merged jdbcapi/SavepointJdbc30_JSR169 and /jdbcapi/SavepointJdbc30_XA back into one file. The split and jdbcapi/savepointJdbc30_XA.java is mentioned here: &lt;a href=&quot;http://wiki.apache.org/db-derby/CdcTesting&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/CdcTesting&lt;/a&gt; so that should be changed also..&lt;/p&gt;

&lt;p&gt;and I think I have set everything up properly with the decorators this time.&lt;/p&gt;


&lt;p&gt;Please comment. &lt;/p&gt;</comment>
                            <comment id="12586499" author="kmarsden" created="Mon, 7 Apr 2008 20:06:50 +0100"  >&lt;p&gt;Erlend, I think the changes look good except we are missing the Client XA tests. &lt;br/&gt;
The base tests should run 4 times: embedded, client, embedded xa, client xa.&lt;br/&gt;
I am going to go ahead and commit this patch after I run some tests and then you can &lt;br/&gt;
put in a followup patch to add client xa.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12586564" author="kmarsden" created="Mon, 7 Apr 2008 23:33:58 +0100"  >&lt;p&gt;Committed revision 645716. In followup patch,please add client xa tests and remove master/savepointJdbc30_XA.out&lt;/p&gt;</comment>
                            <comment id="12588451" author="ebirkenes" created="Sun, 13 Apr 2008 23:42:45 +0100"  >&lt;p&gt;Added client XA tests and deleted master/savepointJdbc30_XA.out&lt;/p&gt;</comment>
                            <comment id="12588831" author="kmarsden" created="Mon, 14 Apr 2008 23:42:02 +0100"  >&lt;p&gt;Committed revision 648041. I fixed up indentation and added the Apache header which we forgot with the first checkin.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12589225" author="myrna" created="Tue, 15 Apr 2008 21:35:29 +0100"  >&lt;p&gt;some minor comments: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;there are still some orphaned files:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt;/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/savepointJdbc30_JSR169.out&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt;/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/savepointJdbc30_JSR169.out&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt;/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/savepointJdbc30_XA.out&lt;/li&gt;
	&lt;li&gt;there is an orphaned reference in:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt;/java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNet.exclude&lt;/li&gt;
	&lt;li&gt;I think setting of and references to JDBCAPI_TESTS_EMEBDDED_JDBC3 in JDBCJavaHarnessTest can just be removed rather than commented out. The JDBCJavaHarnessTest was intended (as I understand it) to allow a number of tests to run under junit without actually converting them; if things disappear from here that&apos;s fine.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12589236" author="myrna" created="Tue, 15 Apr 2008 22:06:14 +0100"  >&lt;p&gt;I removed those references with revision 648413.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12396671">DERBY-3687</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12378803" name="DERBY-3568.diff" size="40526" author="ebirkenes" created="Fri, 28 Mar 2008 18:11:38 +0000"/>
                            <attachment id="12378910" name="DERBY-3568_2.diff" size="94196" author="ebirkenes" created="Sun, 30 Mar 2008 23:53:51 +0100"/>
                            <attachment id="12379520" name="DERBY-3568_3.diff" size="111860" author="ebirkenes" created="Mon, 7 Apr 2008 01:12:47 +0100"/>
                            <attachment id="12380030" name="DERBY-3568_4.diff" size="9427" author="ebirkenes" created="Sun, 13 Apr 2008 23:42:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Mar 2008 18:11:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30906</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0u1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38687</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>