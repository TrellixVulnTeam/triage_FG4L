<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:14:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4426/DERBY-4426.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4426] With generated columns,  INSERT with DEFAULT inside a VALUES clause inside a UNION fails.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4426</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Repro on trunk:&lt;/p&gt;

&lt;p&gt; create table mytab (i int generated always as (j*2), j int);&lt;br/&gt;
insert into mytab values (default,1) union values (default,2);&lt;/p&gt;

&lt;p&gt;ERROR XJ001: Java exception: &apos;ASSERT FAILED col&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; is null: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;ASSERT FAILED col&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; is null: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2204)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1323)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:363)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;ASSERT FAILED col&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; is null: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	... 17 more&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED col&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; is null&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(MergeSort.java:474)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeInserter.insert(MergeInserter.java:98)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.SortResultSet.loadSorter(SortResultSet.java:326)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:270)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:415)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12439197">DERBY-4426</key>
            <summary>With generated columns,  INSERT with DEFAULT inside a VALUES clause inside a UNION fails.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                            <label>derby_backport_reject_10_5</label>
                    </labels>
                <created>Tue, 27 Oct 2009 17:16:09 +0000</created>
                <updated>Tue, 15 Mar 2011 20:27:08 +0000</updated>
                            <resolved>Tue, 15 Mar 2011 20:27:08 +0000</resolved>
                                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12770589" author="dagw" created="Tue, 27 Oct 2009 17:35:38 +0000"  >&lt;p&gt;This is related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4413&quot; title=&quot;INSERT from SELECT DISTINCT gives assertFailure (sane), or  NPE (insane) in presence of generated columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4413&quot;&gt;&lt;del&gt;DERBY-4413&lt;/del&gt;&lt;/a&gt;, it&apos;s just that in this case the sorting&lt;br/&gt;
happens as a part of evaluating a UNION, and this time, the empty&lt;br/&gt;
&quot;stub&quot; column of the generated column (to be filled in later), &lt;b&gt;is&lt;/b&gt;&lt;br/&gt;
part of the sort key.&lt;/p&gt;

&lt;p&gt;I have revisited the standard here, and it seems DEFAULT is actually&lt;br/&gt;
not allowed inside the UNION here: The production that allows DEFAULT&lt;br/&gt;
as part of its derivation is the &amp;lt;contextually typed table&lt;br/&gt;
constructor&amp;gt; (SQL 2003, section 7.3), which is only used in a&lt;br/&gt;
production here:&lt;/p&gt;

&lt;p&gt;&amp;lt;insert statement&amp;gt; ::=&lt;br/&gt;
   INSERT INTO &amp;lt;insertion target&amp;gt; &amp;lt;insert columns and source&amp;gt;&lt;br/&gt;
   &amp;lt;insertion target&amp;gt; ::= &amp;lt;table name&amp;gt;&lt;br/&gt;
   &amp;lt;insert columns and source&amp;gt; ::=&lt;br/&gt;
   &amp;lt;from subquery&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;from constructor&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;from default&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;&amp;lt;from constructor&amp;gt; ::=&lt;br/&gt;
   [ &amp;lt;left paren&amp;gt; &amp;lt;insert column list&amp;gt; &amp;lt;right paren&amp;gt; ]&lt;br/&gt;
   [ &amp;lt;override clause&amp;gt; ]&lt;br/&gt;
   &amp;lt;contextually typed table value constructor&amp;gt;&lt;/p&gt;

&lt;p&gt;If a UNION is present, it is derivable only via the &amp;lt;from subquery&amp;gt;,&lt;br/&gt;
which in turn leads to a &quot;normal&quot; &amp;lt;table value constructor&amp;gt;,&lt;br/&gt;
cf. section 7.13 &amp;lt;query expression&amp;gt;:&lt;/p&gt;

&lt;p&gt;&amp;lt;simple table&amp;gt; ::=&lt;br/&gt;
   &amp;lt;query specification&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;table value constructor&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;explicit table&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;and I can&apos;t see that DEFAULT is allowed as part of a  &amp;lt;table value&lt;br/&gt;
constructor&amp;gt;. This seems reasonable, because the default values should&lt;br/&gt;
logically be applied only after the result set has been computed, cf&lt;br/&gt;
arguments for this in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4413&quot; title=&quot;INSERT from SELECT DISTINCT gives assertFailure (sane), or  NPE (insane) in presence of generated columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4413&quot;&gt;&lt;del&gt;DERBY-4413&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4413?focusedCommentId=12769532&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12769532&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-4413?focusedCommentId=12769532&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12769532&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the column behind the DEFAULT is an identity column or a normal&lt;br/&gt;
base column, the query succeeds, so I would say we are too liberal&lt;br/&gt;
here. It only works because in those two cases, the values are&lt;br/&gt;
assigned &quot;early&quot; in the sense of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4413&quot; title=&quot;INSERT from SELECT DISTINCT gives assertFailure (sane), or  NPE (insane) in presence of generated columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4413&quot;&gt;&lt;del&gt;DERBY-4413&lt;/del&gt;&lt;/a&gt;, so the sorting needed by&lt;br/&gt;
UNION can work for the default columns.&lt;/p&gt;

&lt;p&gt;Tagging this issue with &quot;Deviation from standard&quot;.&lt;/p&gt;</comment>
                            <comment id="12780631" author="knutanders" created="Fri, 20 Nov 2009 16:31:54 +0000"  >&lt;p&gt;Also note that we don&apos;t generally allow VALUES DEFAULT in sub-queries, even in an INSERT context:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; insert into t2 select * from (values default) v;&lt;br/&gt;
ERROR 42Y85: The DEFAULT keyword is only allowed in a VALUES clause when the VALUES clause appears within an INSERT statement.&lt;/p&gt;

&lt;p&gt;I think the reason why it&apos;s accepted in UNIONs, is that multi-row VALUES queries happen to be implemented as UNIONs of single-row VALUES queries. I&apos;d say we should forbid using DEFAULT in UNION too.&lt;/p&gt;</comment>
                            <comment id="12780649" author="dagw" created="Fri, 20 Nov 2009 16:55:49 +0000"  >&lt;p&gt;+1 to forbid using DEFAULT in UNION.&lt;/p&gt;</comment>
                            <comment id="12783006" author="dagw" created="Fri, 27 Nov 2009 01:46:24 +0000"  >&lt;p&gt;Uploading a patch that checks for illegal use of DEFAULT inside top level set operators with an INSERT (inside subqueries, illegal use of DEFAULT is already being caught).&lt;br/&gt;
Added test cases to ColumnDefaultsTest and GeneratedColumnsTest.&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;</comment>
                            <comment id="12783007" author="dagw" created="Fri, 27 Nov 2009 01:49:16 +0000"  >&lt;p&gt;Marking Release Note needed, since this case for example used to work:&lt;/p&gt;

&lt;p&gt;create table neg(c1 int default 10);&lt;br/&gt;
insert into neg values (default) union values (default);&lt;/p&gt;

&lt;p&gt;but would now be flagged.&lt;/p&gt;</comment>
                            <comment id="12783009" author="dagw" created="Fri, 27 Nov 2009 02:23:52 +0000"  >&lt;p&gt;Attaching release note.&lt;/p&gt;</comment>
                            <comment id="12783076" author="knutanders" created="Fri, 27 Nov 2009 09:42:58 +0000"  >&lt;p&gt;The patch and the release note look good to me. (But perhaps change &quot;toes to the SQL standard&quot; to &quot;follows the SQL standard&quot;?)&lt;/p&gt;

&lt;p&gt;According to the test coverage reports, SingleChildResultSetNode.replaceDefaults() is never called by the existing tests. I haven&apos;t checked if any of your tests exercise that code path, but assuming they don&apos;t, do you know of a way to devise a test for it to verify that the changes are correct?&lt;/p&gt;</comment>
                            <comment id="12783129" author="dagw" created="Fri, 27 Nov 2009 16:23:44 +0000"  >&lt;p&gt;Attaching a revision &quot;b&quot; of this patch, which moves the method from TableOperatorNode to SetOperatorNode (more accurate here), and also removes it from SingleChildResultSetNode (not needed). Added one more test case to ColumnDefaultsTest to show that we do catch illegal DEFAULT inside subqueries in an INSERT context, as well. Also fixed some mixed tab/whitespace resulting from cut/paste work.&lt;/p&gt;

&lt;p&gt;Changed the wording as suggested by Knut for releaseNotes.html, uploading new rev.&lt;/p&gt;

&lt;p&gt;Re-running regressions.&lt;/p&gt;</comment>
                            <comment id="12783193" author="dagw" created="Sat, 28 Nov 2009 01:05:35 +0000"  >&lt;p&gt;Another slightly improved version of the releaseNote, making explicit that the compiler gives&lt;br/&gt;
a statement severity level error (42Y85).&lt;/p&gt;</comment>
                            <comment id="12783195" author="dagw" created="Sat, 28 Nov 2009 01:19:12 +0000"  >&lt;p&gt;As to your comment, Knut &quot;do you know of a way to devise a test for it&lt;br/&gt;
to verify that the changes are correct?&quot;, I am not sure that I do,&lt;br/&gt;
except for studying the code as to what top level result sets at this&lt;br/&gt;
point of processing in an INSERT can have DEFAULT syntactically,&lt;br/&gt;
outside subqueries, and adding test cases for those. The catch-all&lt;br/&gt;
method in RSN does nothing.&lt;/p&gt;</comment>
                            <comment id="12783611" author="knutanders" created="Mon, 30 Nov 2009 11:07:48 +0000"  >&lt;p&gt;Thanks for the new patch. It looks good to me. I think removing the method from SingleChildResultSetNode is safe since the VALUES clause must be hidden in a subquery if that node is the top-level source for the insert. Also, it seems like in the phase where replaceDefaults() is called, the source for the insert is still a SelectNode if it&apos;s not a subclass of SetOperatorNode. So it seems like replaceDefaults() is currently a no-op in all cases, except set operations, so your restructuring of the code makes sense.&lt;/p&gt;

&lt;p&gt;Perhaps, just to verify that this assumption holds and doesn&apos;t change later, we could adjust the patch slightly:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Make the default implementation in ResultSetNode throw an assert error&lt;/li&gt;
	&lt;li&gt;Override the method in SelectNode. The override should be a no-op (with a comment saying that DEFAULTs in select lists or subqueries are rejected elsewhere)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m +1 to the patch with or without that change.&lt;/p&gt;

&lt;p&gt;The release note also looks fine.&lt;/p&gt;</comment>
                            <comment id="12783778" author="dagw" created="Mon, 30 Nov 2009 18:28:14 +0000"  >&lt;p&gt;Thanks, Knut. I agree it would be good to move that no-op to SelectNode, so as to catch&lt;br/&gt;
any wrong usage in the future, uploading patch derby-4426c for that, rerunning regressions.&lt;/p&gt;</comment>
                            <comment id="12783888" author="dagw" created="Mon, 30 Nov 2009 22:23:06 +0000"  >&lt;p&gt;Committed derby-4426c as svn 885595.&lt;/p&gt;</comment>
                            <comment id="13007148" author="kmarsden" created="Tue, 15 Mar 2011 20:26:28 +0000"  >&lt;p&gt;open to add derby_backport_reject label&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12440634">DERBY-4442</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12426259" name="derby-4426.diff" size="11041" author="dagw" created="Fri, 27 Nov 2009 02:04:19 +0000"/>
                            <attachment id="12426258" name="derby-4426.stat" size="735" author="dagw" created="Fri, 27 Nov 2009 01:46:24 +0000"/>
                            <attachment id="12426284" name="derby-4426b.diff" size="11780" author="dagw" created="Fri, 27 Nov 2009 16:23:44 +0000"/>
                            <attachment id="12426285" name="derby-4426b.stat" size="809" author="dagw" created="Fri, 27 Nov 2009 16:23:44 +0000"/>
                            <attachment id="12426436" name="derby-4426c.diff" size="13007" author="dagw" created="Mon, 30 Nov 2009 18:28:14 +0000"/>
                            <attachment id="12426437" name="derby-4426c.stat" size="889" author="dagw" created="Mon, 30 Nov 2009 18:28:14 +0000"/>
                            <attachment id="12426309" name="releaseNote.html" size="4319" author="dagw" created="Sat, 28 Nov 2009 01:05:35 +0000"/>
                            <attachment id="12426286" name="releaseNote.html" size="4232" author="dagw" created="Fri, 27 Nov 2009 16:23:44 +0000"/>
                            <attachment id="12426260" name="releaseNote.html" size="4228" author="dagw" created="Fri, 27 Nov 2009 02:23:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Nov 2009 16:31:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24248</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0hdj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36633</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>