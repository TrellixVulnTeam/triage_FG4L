<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2026/DERBY-2026.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2026] Setting a login timeout in client driver can lead to query timeout</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2026</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Setting the login timeout by using DriverManager.setLoginTimeout(int&lt;br/&gt;
seconds) also affects the amount of time the client driver is waiting&lt;br/&gt;
for a query to finish. For instance, setting the login timeout to 10&lt;br/&gt;
seconds will result in any queries taking more than 10 seconds to fail&lt;br/&gt;
with the following exception:&lt;/p&gt;


&lt;p&gt;Exception thrown: java.sql.SQLException: A communications error has been detected: Read timed out.&lt;br/&gt;
java.sql.SQLException: A communications error has been detected: Read timed out.&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:46)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:345)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.executeQuery(Statement.java:414)&lt;br/&gt;
        at LoginTimeout.main(LoginTimeout.java:53)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: A communications error has been detected: Read timed out.&lt;br/&gt;
        at org.apache.derby.client.net.NetAgent.throwCommunicationsFailure(NetAgent.java:408)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.fill(Reply.java:176)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Reply.java:215)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.readDssHeader(Reply.java:317)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.startSameIdChainParse(Reply.java:1147)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.readPrepareDescribeOutput(NetStatementReply.java:51)&lt;br/&gt;
        at org.apache.derby.client.net.StatementReply.readPrepareDescribeOutput(StatementReply.java:40)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatement.readPrepareDescribeOutput_(NetStatement.java:139)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.readPrepareDescribeOutput(Statement.java:1341)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.flowExecute(Statement.java:1977)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.executeQueryX(Statement.java:420)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.executeQuery(Statement.java:405)&lt;br/&gt;
        ... 1 more&lt;br/&gt;
Caused by: java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
        at java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:129)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.fill(Reply.java:174)&lt;br/&gt;
        ... 11 more&lt;/p&gt;</description>
                <environment>Client driver on most platforms</environment>
        <key id="12354444">DERBY-2026</key>
            <summary>Setting a login timeout in client driver can lead to query timeout</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="olav">Olav Sandstaa</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Nov 2006 11:05:04 +0000</created>
                <updated>Wed, 3 Sep 2014 09:31:39 +0100</updated>
                            <resolved>Tue, 24 Aug 2010 00:19:56 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12446210" author="olav" created="Wed, 1 Nov 2006 11:14:24 +0000"  >&lt;p&gt;This is a repro showing that setting the login timeout to 10 seconds makes the folloiwng query to fail with the exception shown in the JIRA report. &lt;/p&gt;

&lt;p&gt;To run the repro:&lt;/p&gt;

&lt;p&gt;1. start a Derby network server&lt;br/&gt;
2. update the jdbcUrl in the java program with the correct server and port number&lt;br/&gt;
3. Run the repro program. This program should produce the execption after about 10 seconds.&lt;/p&gt;

&lt;p&gt;To make the program succeed, remove the call to DriverManager.setLoginTimeout(). Note that the program then might&lt;br/&gt;
take about 2 to 10 minutes to complete the query.&lt;/p&gt;

&lt;p&gt;This repro will fail to reproduce the bug if you have a machine that is much faster than than the one I am using or if you are running on an operating system that does not support setting a timeout on blocking socket calls.&lt;/p&gt;</comment>
                            <comment id="12728624" author="knutanders" created="Wed, 8 Jul 2009 11:49:59 +0100"  >&lt;p&gt;Triaged for 10.5.2.&lt;/p&gt;</comment>
                            <comment id="12761790" author="dagw" created="Sat, 3 Oct 2009 01:51:31 +0100"  >&lt;p&gt;Setting &quot;seen in production&quot; flag, cf. &lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Re:-%27Read-timed-out%27-error-on-update-query-p25352256.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re:-%27Read-timed-out%27-error-on-update-query-p25352256.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12894607" author="mamtas" created="Mon, 2 Aug 2010 18:21:41 +0100"  >&lt;p&gt;The issue is setting a login timeout is also causing the queries to time out within that time. I did some debugging of the code and following is what I saw.&lt;/p&gt;

&lt;p&gt;It appears that if the user has asked for login timeout, then during the connection setup time , we call setSoTimeout on the the socket which is used for communication. &lt;/p&gt;

&lt;p&gt;The api defination for setSoTimeout api on Socket says follows&lt;br/&gt;
public void setSoTimeout(int timeout) throws SocketException &lt;br/&gt;
	Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds. With this option set to a &lt;br/&gt;
	non-zero timeout, a read() call on the InputStream associated with this Socket will block for only this &lt;br/&gt;
	amount of time. If the timeout expires, a java.net.SocketTimeoutException is raised, though the &lt;br/&gt;
	Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. &lt;br/&gt;
	The timeout must be &amp;gt; 0. A timeout of zero is interpreted as an infinite timeout. &lt;br/&gt;
Parameters:&lt;br/&gt;
timeout - the specified timeout, in milliseconds. &lt;br/&gt;
Throws: &lt;br/&gt;
SocketException - if there is an error in the underlying protocol, such as a TCP error.&lt;/p&gt;

&lt;p&gt;So, it looks like that this setSoTimeout setting is applicable not just for the login time but also for every interaction after that &lt;br/&gt;
which in our test case includes the query execution. &lt;/p&gt;

&lt;p&gt;The code path for setSoTimeout call on socket through our connection set up is as follows&lt;br/&gt;
Thread &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; (Suspended)	&lt;br/&gt;
	NetAgent.&amp;lt;init&amp;gt;(NetConnection, LogWriter, int, String, int, int) line: 142	&lt;br/&gt;
	NetConnection.newAgent_(LogWriter, int, String, int, int) line: 1016	&lt;br/&gt;
	NetConnection(Connection).&amp;lt;init&amp;gt;(LogWriter, int, String, int, String, Properties) line: 322	&lt;br/&gt;
	NetConnection.&amp;lt;init&amp;gt;(NetLogWriter, int, String, int, String, Properties) line: 208	&lt;br/&gt;
	ClientJDBCObjectFactoryImpl.newNetConnection(LogWriter, int, String, int, String, Properties) line: 270	&lt;br/&gt;
	ClientDriver.connect(String, Properties) line: 140	&lt;br/&gt;
	DriverManager.getConnection(String, Properties, ClassLoader) line: 572	&lt;br/&gt;
	DriverManager.getConnection(String) line: 218	&lt;br/&gt;
	Derby2026LoginTimeout.main(String[]) line: 52	&lt;br/&gt;
In the stack above, Derby2026LoginTimeout is the repro provided in the jira. I just changed the repro&apos;s name and the jdbc url inside the repro.&lt;/p&gt;

&lt;p&gt;I am not sure at this point how(or if it can be done) but may be a fix would be to have the setSoTimeout be set only while the connection is being made. Once we have the connection, go back and rest the setSoTimeout to 0. I noticed following api in derby.client.net.NetAgent.java&lt;br/&gt;
    protected void setTimeout(int timeout) &lt;br/&gt;
This api changes the timeout on socket to the passed value. I wonder if this api can be somehow used to change the timeout value to 0 after the connection has been established. As of right now, there is only one caller to NetAgent.setTimeout method and that call is from derby.client.Net.NetConnection40.isValid(int) method.&lt;/p&gt;</comment>
                            <comment id="12896165" author="mamtas" created="Fri, 6 Aug 2010 22:39:40 +0100"  >&lt;p&gt;I am attaching a patch, DERBY2026_LoginTimeout_diff_patch1.txt, which is a very simple fix. Basically, after the connection has been set, I am setting the setSoTimeout on socket back to 0. Because, user intended the login time out only for the connection time and not for all the interaction between client and server. Setting the setSoTimeout on socket to 0 will make sure that we do not end up using login time out as also query time out. Please let me know if anyone has any feedback on this fix.&lt;/p&gt;

&lt;p&gt;I am running junit suite right now(I have intermittently seen NetworkServerControlClientCommandTest.testPing fail intermittently but it happens with and without my patch). Once junit tests run successfully, I will run derbyall and if all goes well, I will go ahead and commit the patch.&lt;/p&gt;</comment>
                            <comment id="12896176" author="mikem" created="Fri, 6 Aug 2010 23:33:46 +0100"  >&lt;p&gt;The code change makes sense to me.  I don&apos;t know a lot about this code, but as long as the connection is complete by the point of your added code my reading of the socket interface makes it look like this is the right change.&lt;/p&gt;

&lt;p&gt;some questions about testing for this issue:&lt;br/&gt;
1) Do the existing tests exercise set login timeout, so that we have some coverage that your change does not break the existing logic.  &lt;br/&gt;
2) Are you going to add a junit test that will show the bug before your change&lt;br/&gt;
and verify that it is fixed after the change?&lt;/p&gt;

&lt;p&gt;Does anyone know if this socket timeout stuff is used for query timeout, and if so will this change have any affect?&lt;/p&gt;</comment>
                            <comment id="12897438" author="kmarsden" created="Wed, 11 Aug 2010 21:35:18 +0100"  >&lt;p&gt;DriverManager is pretty vague, but I am getting pretty confused on the various timeout options in DataSources and Sockets. For DataSource I see:&lt;/p&gt;

&lt;p&gt;setLoginTimeout&lt;br/&gt;
 A value of zero specifies that the timeout is the default system timeout if there is one; otherwise, it specifies that there is no timeout. When a DataSource object is created, the login timeout is initially zero.&lt;/p&gt;

&lt;p&gt;On Socket setSoTimout I see:&lt;br/&gt;
The timeout must be &amp;gt; 0. A timeout of zero is interpreted as an infinite timeout. &lt;/p&gt;

&lt;p&gt;So I guess according to spec with  setLoginTimeout set, after we make the connection, it should restore things to the system default, not call setSoTimeout(0) to make it infinite but I don&apos;t actually see an option to do that with setSoTimeout on the socket.  &lt;/p&gt;

&lt;p&gt;Furthermore, I have a report from a user using the existing code that is seeing timeouts on queries after calling setLoginTimeout(0) which I think should change things to an &lt;br/&gt;
infinite timeout but does not appear to be doing so.  Of course if that is the case, neither Mamta&apos;s fix nor restoring to the default after the connection would help them.  &lt;/p&gt;

&lt;p&gt;Sorry for the rambling. I will do some experiments on my machine and hopefully get access to the user&apos;s to try and  understand all this better.   Any comments of pearls of wisdom in this area are welcome.&lt;/p&gt;

</comment>
                            <comment id="12897524" author="kmarsden" created="Thu, 12 Aug 2010 01:18:45 +0100"  >&lt;p&gt;Mamta&apos;s fixes the issue with DriverManager but it is still an issue with a DataSource. See LoginTimoutWithDataSource.java.  &lt;/p&gt;

&lt;p&gt;As an aside, I am trying to write a test to verify that setLoginTimeout does actually cause a connect to timeout and have verified this manually by using setLoginTimeout(1) and creating a new db but it seems sometimes even 1 second is enough time to create a database. I am looking for a reliable way to slow down the connect. Myrna suggested forcing a large recovery to slow things down but I would like something more predictable. Ideas welcome.&lt;/p&gt;</comment>
                            <comment id="12897576" author="lilywei" created="Thu, 12 Aug 2010 05:49:10 +0100"  >&lt;p&gt;I read it from the google search saying &quot;Java NIO(nonblocking IO) and using blocking sockets is that the SO_TIMEOUT is not used anymore even if you set it.&quot; Java NIO can be switch on by use one Selector per SocketChannel and select() for OP_READ or OP_WRITE before every read or write.  Will this be why infinite timeout does not work on DataSource?  &lt;/p&gt;

&lt;p&gt;One observation: ClientDataSource. getLoginTimeout() return 10 instead of 10000 after I do ClientDataSource.setLoginTimeout(10) Is this expected? The same goes to DriverManager. &lt;/p&gt;</comment>
                            <comment id="12897858" author="mamtas" created="Thu, 12 Aug 2010 18:49:36 +0100"  >&lt;p&gt;I am on vacation for this week and next week. Will look more into this after I am back but I did want to point out that setting the setLoginTimeout to infinite ie 0 after a user has made a connection will only affect the future connections. The existing connection which was made with a finite login timeout will continue to have that timeout property set on the socket it had used to create the connection. At least this is what I think from my research on this jira. If my interpretation is correct, then Kathey, I think my proposed fix might help them with their problem.&lt;/p&gt;</comment>
                            <comment id="12899670" author="kmarsden" created="Wed, 18 Aug 2010 01:44:29 +0100"  >&lt;p&gt;Attached is a patch for this issue derby-2026_diff.txt which builds on Mamta&apos;s change.  There were two more instances when the soTimeout needed to be reset after completing the connection. The change Mamta made was the path for DriverManger. The other two cases were after completing the  connections obtained from DataSources and also after reset of pooled conenctions. Tests have been added to ConnectTest for DriverManager and J2EEDataSourceTest for the data sources.  I have not yet run regressions, but will do so tonight.. Please review&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12899854" author="kmarsden" created="Wed, 18 Aug 2010 15:14:23 +0100"  >&lt;p&gt;I went ahead and submitted to trunk and will leave this open while I backport to 10.5&lt;/p&gt;</comment>
                            <comment id="12899862" author="kmarsden" created="Wed, 18 Aug 2010 15:43:31 +0100"  >&lt;p&gt;One thing I forgot to mention on the patch was that I am a bit concerned with the length of time the new tests take to run, which is about 2 minutes because the various configurations require the long query be run 6 times.  Right now I have the loginTimeout set to 10 seconds and the query to sleep 20.  I am not sure the best way to speed it up and make it reliable even on slow hardware or with slow jvm options.  One thought that occurred to me is perhaps I could time the length it takes for a connection and use that as a baseline.&lt;/p&gt;

</comment>
                            <comment id="12899869" author="lilywei" created="Wed, 18 Aug 2010 16:14:38 +0100"  >&lt;p&gt;Predict timeout timing is always hard across platforms. Use the accurate time it takes for a connection is more efficient. However, I will recommend 30% buffer for different platform behavior. &lt;/p&gt;

&lt;p&gt;From looking at the change, I am assuming socket timeout is used for query timeout. &lt;br/&gt;
Will it make more sense to separate LoginTimeout and query timeout value for Derby with different datasource? From NetConnection constractor path(line 206 on java/client/org/apache/derby/client/net/CetConnection.java), the driverManagerLoginTimeout is also get use as query timeout. In the future, should we need to separate these two types of timeout?&lt;/p&gt;
</comment>
                            <comment id="12899931" author="kmarsden" created="Wed, 18 Aug 2010 18:55:28 +0100"  >&lt;p&gt;Porting the patch to 10.6 I see the following timeout on a connect in a later test. I think this is because the tests I added do not correctly reset the login timeout on the DriverManager and various DataSources after running the test.  I will make that change and submit shortly to trunk.&lt;/p&gt;

&lt;p&gt;1) testReplication_Encrypted_1_miniLoad_negative(org.apache.derbyTesting.functio&lt;br/&gt;
nTests.tests.replicationTests.ReplicationRun_Local_Encrypted_1)java.sql.SQLNonTr&lt;br/&gt;
ansientConnectionException: A communications error has been detected: Read timed&lt;br/&gt;
 out.&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLE&lt;br/&gt;
xceptionFactory40.java:70)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.&lt;br/&gt;
java:358)&lt;br/&gt;
        at org.apache.derby.jdbc.ClientDriver.connect(ClientDriver.java:149)&lt;br/&gt;
        at java.sql.DriverManager.getConnection(DriverManager.java:322)&lt;br/&gt;
        at java.sql.DriverManager.getConnection(DriverManager.java:273)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.Replicat&lt;br/&gt;
ionRun.bootMasterDatabase(ReplicationRun.java:863)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.Replicat&lt;br/&gt;
ionRun.makeReadyForReplication(ReplicationRun.java:2746)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.Replicat&lt;br/&gt;
ionRun_Local_Encrypted_1.testReplication_Encrypted_1_miniLoad_negative(Replicati&lt;br/&gt;
onRun_Local_Encrypted_1.java:132)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:48)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
109)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.Replicat&lt;br/&gt;
ionRun.runBare(ReplicationRun.java:207)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: A communications erro&lt;br/&gt;
r has been detected: Read timed out.&lt;br/&gt;
        at org.apache.derby.client.net.NetAgent.throwCommunicationsFailure(NetAg&lt;br/&gt;
ent.java:415)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.fill(Reply.java:176)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Reply.java&lt;br/&gt;
:218)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.readDssHeader(Reply.java:320)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.startSameIdChainParse(Reply.java:11&lt;br/&gt;
60)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnectionReply.readSecurityCheck(NetC&lt;br/&gt;
onnectionReply.java:112)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnection.readSecurityCheckAndAccessR&lt;br/&gt;
db(NetConnection.java:843)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnection.flowSecurityCheckAndAccessR&lt;br/&gt;
db(NetConnection.java:768)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnection.flowUSRIDONLconnect(NetConn&lt;br/&gt;
ection.java:601)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnection.flowConnect(NetConnection.j&lt;br/&gt;
ava:408)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnection.&amp;lt;init&amp;gt;(NetConnection.java:2&lt;br/&gt;
18)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnection40.&amp;lt;init&amp;gt;(NetConnection40.ja&lt;br/&gt;
va:77)&lt;br/&gt;
        at org.apache.derby.client.net.ClientJDBCObjectFactoryImpl40.newNetConne&lt;br/&gt;
ction(ClientJDBCObjectFactoryImpl40.java:269)&lt;br/&gt;
        at org.apache.derby.jdbc.ClientDriver.connect(ClientDriver.java:83)&lt;br/&gt;
        ... 34 more&lt;br/&gt;
Caused by: java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
        at java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:141)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.fill(Reply.java:174)&lt;br/&gt;
        ... 46 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 12463,  Failures: 0,  Errors: 1&lt;/p&gt;</comment>
                            <comment id="12901663" author="kmarsden" created="Tue, 24 Aug 2010 00:19:56 +0100"  >&lt;p&gt;Resolving this issue. I won&apos;t port  it further back than 10.5 right now.&lt;/p&gt;</comment>
                            <comment id="13586835" author="dagw" created="Tue, 26 Feb 2013 06:11:05 +0000"  >&lt;p&gt;Did we ever make a positive test, i.e. to show that a login timeout actually does throw the expected SQLTimeoutException?&lt;br/&gt;
I can&apos;t find it right now; if we don&apos;t have one I&apos;ll file an improvement issue.&lt;/p&gt;</comment>
                            <comment id="14119617" author="knutanders" created="Wed, 3 Sep 2014 09:31:39 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12634415">DERBY-6094</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12451467" name="DERBY2026_LoginTimeout_diff_patch1.txt" size="506" author="mamtas" created="Fri, 6 Aug 2010 22:39:40 +0100"/>
                            <attachment id="12344084" name="LoginTimeout.java" size="2125" author="olav" created="Wed, 1 Nov 2006 11:14:24 +0000"/>
                            <attachment id="12451844" name="LoginTimeoutWithDataSource.java" size="1983" author="kmarsden" created="Thu, 12 Aug 2010 01:18:45 +0100"/>
                            <attachment id="12452344" name="derby-2026_diff.txt" size="8613" author="kmarsden" created="Wed, 18 Aug 2010 01:44:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Jul 2009 10:49:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22842</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0om7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37806</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>