<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1101/DERBY-1101.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1101] ResultSet.getHoldabilty will return incorrect value when the ResultSet is obtained from a procedure call</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1101</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;EmbedResultSet40.getHoldability returns the holdability of the statement returned by ResultSet.getStatement().&lt;br/&gt;
When a ResultSet is created by a procedure call, its holdability may not match the holdability of the Statement  that called the procedure, which is probably what ResultSet.getStatement() should return.&lt;/p&gt;

&lt;p&gt;This may not be exposed as a bug yet, but I think this method should be directly obtaining the holdability of the ResultSet using the Activation.getResultSetHoldability() method, rather than through a Statement. Seems a safer approach.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12330197">DERBY-1101</key>
            <summary>ResultSet.getHoldabilty will return incorrect value when the ResultSet is obtained from a procedure call</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Mar 2006 04:34:16 +0000</created>
                <updated>Wed, 9 Jan 2008 17:39:02 +0000</updated>
                            <resolved>Thu, 6 Apr 2006 15:55:49 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12370114" author="djd" created="Mon, 13 Mar 2006 11:21:37 +0000"  >&lt;p&gt;Statement&apos;s can&apos;t change their holdability, but I think there is a problem or potential problem here.&lt;/p&gt;</comment>
                            <comment id="12370153" author="knutanders" created="Mon, 13 Mar 2006 19:05:58 +0000"  >&lt;p&gt;Dan Debrunner wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; EmbedResultSet40.getHoldability returns the holdability of the&lt;br/&gt;
&amp;gt; statement returned by ResultSet.getStatement().  When a ResultSet is&lt;br/&gt;
&amp;gt; created by a procedure call, its holdability may not match the&lt;br/&gt;
&amp;gt; holdability of the Statement that called the procedure, which is&lt;br/&gt;
&amp;gt; probably what ResultSet.getStatement() should return.&lt;/p&gt;

&lt;p&gt;Are you saying that there is a problem with&lt;br/&gt;
EmbedResultSet.getStatement()? It doesn&apos;t return what you say it&lt;br/&gt;
&quot;probably should return&quot;.&lt;/p&gt;

&lt;p&gt;For instance, if you have &lt;/p&gt;

&lt;p&gt;  stmt.execute(&quot;call mystoredprocedure(1,2,3)&quot;);&lt;br/&gt;
  ResultSet rs = stmt.getResultSet();&lt;/p&gt;

&lt;p&gt;then&lt;/p&gt;

&lt;p&gt;  stmt != rs.getStatement()&lt;/p&gt;

&lt;p&gt;The javadoc for ResultSet.getStatement() says:&lt;/p&gt;

&lt;p&gt;  Retrieves the Statement object that produced this ResultSet&lt;br/&gt;
  object. If the result set was generated some other way, such as by a&lt;br/&gt;
  DatabaseMetaData method, this method may return null.&lt;/p&gt;

&lt;p&gt;Since the ResultSet object was produced by a Statement internally in&lt;br/&gt;
the stored procedure, and not by the Statement which called the&lt;br/&gt;
procedure, I believe the current implementation of&lt;br/&gt;
EmbedResultSet.getStatement() is correct.&lt;/p&gt;

&lt;p&gt;&amp;gt; This may not be exposed as a bug yet, but I think this method should&lt;br/&gt;
&amp;gt; be directly obtaining the holdability of the ResultSet using the&lt;br/&gt;
&amp;gt; Activation.getResultSetHoldability() method, rather than through a&lt;br/&gt;
&amp;gt; Statement. Seems a safer approach.&lt;/p&gt;

&lt;p&gt;Actually, at one point I tried to use Activation to get the result set&lt;br/&gt;
holdability, but since TemporaryRowHolderResultSet.getActivation() has&lt;br/&gt;
a THROWASSERT to make sure it is not called, I used getStatement()&lt;br/&gt;
instead.&lt;/p&gt;</comment>
                            <comment id="12370158" author="knutanders" created="Mon, 13 Mar 2006 19:20:22 +0000"  >&lt;p&gt;Attaching a small program that tests what&lt;br/&gt;
EmbedResultSet40.getHoldability() returns when the result set is&lt;br/&gt;
returned from a stored procedure.&lt;/p&gt;

&lt;p&gt;All combinations of the CallableStatement being holdable/non-holdable&lt;br/&gt;
and the statement inside the stored procedure being holdable or&lt;br/&gt;
non-holdable are tested. The program also tests whether it is possible&lt;br/&gt;
to do next() after commit().&lt;/p&gt;

&lt;p&gt;Output from the test program:&lt;/p&gt;

&lt;p&gt;Testing holdability - &lt;br/&gt;
  Statement: HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
  Procedure: HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
Internally in stored procedure:&lt;br/&gt;
  ResultSet.getHoldability(): HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
  ResultSet is in fact holdable&lt;br/&gt;
Externally:&lt;br/&gt;
  ResultSet.getHoldability(): HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
  ResultSet is in fact holdable&lt;/p&gt;

&lt;p&gt;Testing holdability - &lt;br/&gt;
  Statement: HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
  Procedure: CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
Internally in stored procedure:&lt;br/&gt;
  ResultSet.getHoldability(): CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
  ResultSet is in fact not holdable&lt;br/&gt;
Externally:&lt;br/&gt;
  ResultSet.getHoldability(): CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
  ResultSet is in fact not holdable&lt;/p&gt;

&lt;p&gt;Testing holdability - &lt;br/&gt;
  Statement: CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
  Procedure: HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
Internally in stored procedure:&lt;br/&gt;
  ResultSet.getHoldability(): HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
  ResultSet is in fact holdable&lt;br/&gt;
Externally:&lt;br/&gt;
  ResultSet.getHoldability(): HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
  ResultSet is in fact holdable&lt;/p&gt;

&lt;p&gt;Testing holdability - &lt;br/&gt;
  Statement: CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
  Procedure: CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
Internally in stored procedure:&lt;br/&gt;
  ResultSet.getHoldability(): CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
  ResultSet is in fact not holdable&lt;br/&gt;
Externally:&lt;br/&gt;
  ResultSet.getHoldability(): CLOSE_CURSORS_AT_COMMIT&lt;br/&gt;
  ResultSet is in fact not holdable&lt;/p&gt;

&lt;p&gt;For all these cases, the observed holdability is the same as the&lt;br/&gt;
holdability returned by getHoldability(). Hence, I don&apos;t think the&lt;br/&gt;
current implementation of getHoldability() returns wrong results when&lt;br/&gt;
using stored procedures.&lt;/p&gt;</comment>
                            <comment id="12370189" author="djd" created="Mon, 13 Mar 2006 23:06:32 +0000"  >&lt;p&gt;Thanks for following up on this Knut, you said:&lt;/p&gt;

&lt;p&gt;&amp;gt; Since the ResultSet object was produced by a Statement internally in&lt;br/&gt;
&amp;gt; the stored procedure, and not by the Statement which called the&lt;br/&gt;
&amp;gt; procedure, I believe the current implementation of&lt;br/&gt;
&amp;gt; EmbedResultSet.getStatement() is correct. &lt;/p&gt;

&lt;p&gt;I&apos;m not sure, for four reasons:&lt;/p&gt;

&lt;p&gt;   1) It&apos;s impossible to match this behaviour in client mode.&lt;/p&gt;

&lt;p&gt;   2) Logically the statement that created the JDBC ResultSet is the one that executed&lt;br/&gt;
    the CALL statement. I think the model defined by the SQL standard is that the&lt;br/&gt;
    JDBC ResultSet created within the procedure is turned into a SQL result set&lt;br/&gt;
    by the database engine and then the client JDBC creates a JDBC ResultSet from &lt;br/&gt;
     the SQL result set. It just so happens that Derby can omit the conversion into&lt;br/&gt;
     an internal ResultSet.&lt;/p&gt;

&lt;p&gt;   3) Once Derby supports SQL procedures, and a JDBC ResultSet is returned&lt;br/&gt;
    then the only Statement that makes sense is the one that invoked the CALL procedure.&lt;/p&gt;

&lt;p&gt;    4) JDBC 4.0 - Why was the method ResultSet.getHoldability added? It can only be because&lt;br/&gt;
     it can return a different value to rs.getStatement().getResultSetHoldability().&lt;/p&gt;
</comment>
                            <comment id="12370196" author="knutanders" created="Mon, 13 Mar 2006 23:47:28 +0000"  >&lt;p&gt;OK, I see your point. I&apos;m not able to tell whether or not you are&lt;br/&gt;
right, though...&lt;/p&gt;

&lt;p&gt;One way to implement getHoldability() without being dependent on&lt;br/&gt;
getStatement() is to add a holdability variable to EmbedResultSet and&lt;br/&gt;
put something like this in the constructor:&lt;/p&gt;

&lt;p&gt;    if (theResults instanceof TemporaryRowHolderResultSet ||&lt;br/&gt;
        !theResults.getActivation().getResultSetHoldability()) &lt;/p&gt;
{
        holdability = JDBC30Translation.CLOSE_CURSORS_AT_COMMIT;
    }
&lt;p&gt; else &lt;/p&gt;
{
        holdability = JDBC30Translation.HOLD_CURSORS_OVER_COMMIT;
    }

&lt;p&gt;Do you think this is a better approach?&lt;/p&gt;</comment>
                            <comment id="12370247" author="djd" created="Tue, 14 Mar 2006 05:54:51 +0000"  >&lt;p&gt;This code&lt;/p&gt;

&lt;p&gt; if (theResults instanceof TemporaryRowHolderResultSet || &lt;/p&gt;

&lt;p&gt;is pushing knowledge of the underlying implementation layers up into the JDBC layer,&lt;br/&gt;
ideally JDBC layer should just be dealing with the interfaces specified by the language layer.&lt;/p&gt;

&lt;p&gt;I have a long term idea for improving performance by removing most/all runtime statistics code from&lt;br/&gt;
any language ResultSet implementation, and instead having it in a single delegation/wrapper&lt;br/&gt;
language ResultSet. Thus when runtime statistics is enabled each real implementation of a language&lt;br/&gt;
ResultSet would be wrapped in one of these runtime statistics  that would maintain costs, timing etc.&lt;br/&gt;
Currently this is not an easy change because there is code that performs specific instanceof checks&lt;br/&gt;
on ResultSet references in various places, which is really a breakdown of modularity.&lt;/p&gt;

&lt;p&gt;I&apos;d be more interested to know why TemporaryRowHolderResultSet is breaking the contract of getActivation.&lt;/p&gt;

&lt;p&gt;Not sure why a field is needed in EmbedResultSet, when the activation already maintains the state, it seems a&lt;br/&gt;
bug to me that TemporaryRowHolderResultSet  is not honouring its contract.&lt;/p&gt;</comment>
                            <comment id="12370267" author="knutanders" created="Tue, 14 Mar 2006 06:50:07 +0000"  >&lt;p&gt;&amp;gt; Daniel John Debrunner commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1101&quot; title=&quot;ResultSet.getHoldabilty will return incorrect value when the ResultSet is obtained from a procedure call&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1101&quot;&gt;&lt;del&gt;DERBY-1101&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&amp;gt; ----------------------------------------------&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Not sure why a field is needed in EmbedResultSet, when the&lt;br/&gt;
&amp;gt; activation already maintains the state, it seems a bug to me that&lt;br/&gt;
&amp;gt; TemporaryRowHolderResultSet is not honouring its contract.&lt;/p&gt;

&lt;p&gt;No need to have a field. (But having code in the constructor really&lt;br/&gt;
helped exposing errors in derbyall, since the constructor is run far&lt;br/&gt;
more frequently than getHoldability().)&lt;/p&gt;

&lt;p&gt;It seems like all places a new TemporaryRowHolderImpl is created, an&lt;br/&gt;
Activation is readily available. Would it make sense to simply pass&lt;br/&gt;
that activation down to the TemporaryRowHolderImpl object and further&lt;br/&gt;
down to the TemporaryRowHolderResultSet?&lt;/p&gt;</comment>
                            <comment id="12371546" author="knutanders" created="Thu, 23 Mar 2006 19:12:56 +0000"  >&lt;p&gt;I have attached a patch (derby-1101-testcase-v1.diff) which adds a regression test for this issue to the jdbc40 test suite. The test doesn&apos;t fail, since the bug isn&apos;t exposed until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1111&quot; title=&quot;getStatement() for a ResultSet returned from a procedure in embedded mode must return the Statement that executed the CALL procedure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1111&quot;&gt;&lt;del&gt;DERBY-1111&lt;/del&gt;&lt;/a&gt; is fixed. Test case is committed in revision 388144.&lt;/p&gt;</comment>
                            <comment id="12371686" author="knutanders" created="Fri, 24 Mar 2006 16:03:49 +0000"  >&lt;p&gt;Patch derby-1101-v1.diff modifies EmbedResultSet.getHoldability() so that it uses getActivation() instead of getStatement(). Please let me know if you have any comments. Thanks.&lt;/p&gt;</comment>
                            <comment id="12373440" author="djd" created="Thu, 6 Apr 2006 08:19:03 +0100"  >&lt;p&gt;Just to add that section 16.1.3.1 of JDBC 4.0 (proposed final draft) states:&lt;/p&gt;

&lt;p&gt;&quot;In the case of a SQL CALL statement, the holdability of any returned ResultSets are determined&lt;br/&gt;
by the stored procedure, independent of the holdability level specified to the SQL CALL statement.&quot;&lt;/p&gt;</comment>
                            <comment id="12373445" author="djd" created="Thu, 6 Apr 2006 08:38:35 +0100"  >&lt;p&gt;Patch derby-1101-v1.diff  committed (had to merge EmbedResultSet.java by hand)&lt;/p&gt;</comment>
                            <comment id="12373487" author="knutanders" created="Thu, 6 Apr 2006 15:55:49 +0100"  >&lt;p&gt;Thanks for committing the patch, Dan! I had forgotten that it was there myself. Please close the issue if you think it is resolved.&lt;/p&gt;</comment>
                            <comment id="12373525" author="djd" created="Fri, 7 Apr 2006 03:10:28 +0100"  >&lt;p&gt;Closed - Actually I only realised once I was adding the contribution line in the commit message that this was a patch provided by a committer. For some reason I thought it was someone else. Since I&apos;d got so far I thought I might as well continue. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12385906">DERBY-3311</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12324494" name="derby-1101-testcase-v1.diff" size="7301" author="knutanders" created="Thu, 23 Mar 2006 19:12:53 +0000"/>
                            <attachment id="12324541" name="derby-1101-v1.diff" size="2855" author="knutanders" created="Fri, 24 Mar 2006 16:03:26 +0000"/>
                            <attachment id="12324542" name="derby-1101-v1.stat" size="134" author="knutanders" created="Fri, 24 Mar 2006 16:03:47 +0000"/>
                            <attachment id="12324088" name="testderby1101.java" size="5119" author="knutanders" created="Mon, 13 Mar 2006 19:20:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 13 Mar 2006 19:05:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22306</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zsf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39616</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>