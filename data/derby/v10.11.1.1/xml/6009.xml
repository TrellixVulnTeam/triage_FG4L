<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:49:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6009/DERBY-6009.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6009] Need stricter checking of ORDER BY clause in VALUES expressions</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6009</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;We only support column numbers in ORDER BY clauses in VALUES expression, as seen by this error message:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values 1,2 order by 1+2;&lt;br/&gt;
ERROR 42878: The ORDER BY clause of a SELECT UNION statement only supports unqualified column references and column position numbers. Other expressions are not currently supported. (errorCode = 30000)&lt;/p&gt;

&lt;p&gt;However, the checks let some unsupported expressions through and produce strange results. For example:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values 1 order by 1+2;&lt;br/&gt;
1          |2          &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |3          &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;

&lt;p&gt;It should probably have raised the same exception as the first query. And if not, the result should only have had one column.&lt;/p&gt;

&lt;p&gt;And the next example should probably have raised a syntax error too, instead of a NullPointerException:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values 1 order by int(1);&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;. (errorCode = 0)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12622888">DERBY-6009</key>
            <summary>Need stricter checking of ORDER BY clause in VALUES expressions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                            <label>derby_backport_reject_10_9</label>
                    </labels>
                <created>Fri, 7 Dec 2012 10:15:23 +0000</created>
                <updated>Fri, 26 Jul 2013 18:54:26 +0100</updated>
                            <resolved>Thu, 3 Jan 2013 04:07:00 +0000</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                    <version>10.6.2.1</version>
                    <version>10.7.1.1</version>
                    <version>10.8.1.2</version>
                    <version>10.8.2.2</version>
                    <version>10.9.1.0</version>
                                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13539105" author="dagw" created="Sun, 23 Dec 2012 22:28:24 +0000"  >&lt;p&gt;There are more anomalies, this time with a select, cf. this statement:&lt;/p&gt;

&lt;p&gt;&amp;gt;create table t(i int, j int, k float);&lt;br/&gt;
&amp;gt;insert into t values (1,1,1.0),(3,9,9.0),(2,4,4.0);&lt;br/&gt;
&amp;gt;select * from t;&lt;br/&gt;
I          |J          |K                     &lt;br/&gt;
----------------------------------------------&lt;br/&gt;
1          |1          |1.0                   &lt;br/&gt;
3          |9          |9.0                   &lt;br/&gt;
2          |4          |4.0  &lt;/p&gt;

&lt;p&gt;&amp;gt;select * from t order by 3+1;&lt;br/&gt;
I          |J          |K                     &lt;br/&gt;
----------------------------------------------&lt;br/&gt;
2          |4          |4.0                   &lt;br/&gt;
3          |9          |9.0                   &lt;br/&gt;
1          |1          |1.0                   &lt;/p&gt;

&lt;p&gt;So, the constant expression (which even if evaluated) would give a number of a non-present column, #4, isn&apos;t flagged, and strangely, the rows are returned backwards.&lt;/p&gt;
</comment>
                            <comment id="13539780" author="dagw" created="Thu, 27 Dec 2012 01:00:35 +0000"  >&lt;p&gt;One approach would be to forbid order by expression if the expression does not contain a column reference &lt;b&gt;or&lt;/b&gt; is a simple integer constant.&lt;br/&gt;
It seems that even if the expression evaluates to a valid column number the result is wrong, so I think we should just flag those:&lt;/p&gt;

&lt;p&gt;&amp;gt; select i from t order by i; &amp;#8211; column 1&lt;br/&gt;
1 &lt;br/&gt;
2 &lt;br/&gt;
3 &lt;/p&gt;

&lt;p&gt;&amp;gt; select i from t order by 1+0; &amp;#8211; i.e. column 1&lt;br/&gt;
2 &lt;br/&gt;
3 &lt;br/&gt;
1 &lt;/p&gt;

&lt;p&gt;If a column is referenced it works as expected, though:&lt;br/&gt;
&amp;gt; select i from t order by i+0&lt;br/&gt;
1 &lt;br/&gt;
2 &lt;br/&gt;
3 &lt;/p&gt;

&lt;p&gt;&amp;gt; select i from t order by -i+0&lt;br/&gt;
3 &lt;br/&gt;
2 &lt;br/&gt;
1&lt;/p&gt;

&lt;p&gt;Can anyone think of a valid use cases for expressions that do not reference columns? I&apos;ll have a look at what the standard says on this.&lt;/p&gt;

</comment>
                            <comment id="13539784" author="dagw" created="Thu, 27 Dec 2012 01:17:28 +0000"  >&lt;p&gt;It seems the standard allows the sort key to not determine the ordering. I also find no requirement that a column reference be present. Also cf. SQL 2011 section 10.10 general rules clause i): &quot;i) Two rows that are not distinct with respect to the &amp;lt;sort specification&amp;gt;s are said to be peers of each other. The relative ordering of peers is implementation-dependent.&quot; I guess we shouldn&apos;t touch this behavior for SELECT anyway.&lt;/p&gt;</comment>
                            <comment id="13539796" author="dagw" created="Thu, 27 Dec 2012 02:24:48 +0000"  >&lt;p&gt;For &quot;values 1,2 order by 1+2&quot;, the code the throws the exception was added as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2459&quot; title=&quot;Ordering on a CASE-expression casues a NullPointerException when using a UNION&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2459&quot;&gt;&lt;del&gt;DERBY-2459&lt;/del&gt;&lt;/a&gt; &quot;Ordering on a CASE-expression casues a NullPointerException when using a UNION&quot;. That patch may or may not have considered the union node&apos;s r&#244;le in the VALUES clause, I&apos;ll investigate a bit.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Update:&amp;#93;&lt;/span&gt; This seems not to have been the case; the existing tests checks for the fact that added pulled up order by columns (as seen in the presence of expressions), would get removed when the set operator&apos;s RCL is constructed (cf Bryan&apos;s analysis in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2459&quot; title=&quot;Ordering on a CASE-expression casues a NullPointerException when using a UNION&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2459&quot;&gt;&lt;del&gt;DERBY-2459&lt;/del&gt;&lt;/a&gt;), i.e. resultCol would be null:&lt;/p&gt;

&lt;p&gt;			if (resultCol == null)&lt;br/&gt;
				throw StandardException.newException(SQLState.LANG_UNION_ORDER_BY);&lt;/p&gt;

&lt;p&gt;I think I&apos;ll avoid touching this mechanism for the VALUES checking. The text of the error message is also a bit misleading: the fact that table value constructors are implemented using UNION would be unknown to most users.&lt;/p&gt;</comment>
                            <comment id="13539802" author="dagw" created="Thu, 27 Dec 2012 02:32:19 +0000"  >&lt;p&gt;For the record, ordering by column numbers is non-standard, it was last allowed in SQL-92. Since newer versions of the standard allow expressions, there is a semantic ambiguity when a single integer is used: Derby considers it to be a column number &lt;b&gt;only&lt;/b&gt; if it is a a single integer literal, otherwise the expression is treated as a post-92 value expression.&lt;/p&gt;</comment>
                            <comment id="13539853" author="dagw" created="Thu, 27 Dec 2012 07:38:30 +0000"  >&lt;p&gt;Attaching a patch which adds info in the OrderByList on whether it&apos;s attached to a table value constructor or not. If it is, we throw a new exception &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; if the order by expression isn&apos;t a column number. Added new tests; running regressions.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; ERROR 4287B: &quot;In this context, the ORDER BY clause may only specify a column number.&quot;&lt;/p&gt;
</comment>
                            <comment id="13539864" author="knutanders" created="Thu, 27 Dec 2012 08:29:16 +0000"  >&lt;p&gt;Thanks for investigating, Dag.&lt;/p&gt;

&lt;p&gt;&amp;gt; For the record, ordering by column numbers is non-standard, it was last&lt;br/&gt;
&amp;gt; allowed in SQL-92. Since newer versions of the standard allow expressions,&lt;br/&gt;
&amp;gt; there is a semantic ambiguity when a single integer is used: Derby considers&lt;br/&gt;
&amp;gt; it to be a column number &lt;b&gt;only&lt;/b&gt; if it is a a single integer literal,&lt;br/&gt;
&amp;gt; otherwise the expression is treated as a post-92 value expression.&lt;/p&gt;

&lt;p&gt;So in the case of ORDER BY 1+2, the sort key is the expression 1+2. That is,&lt;br/&gt;
the value 3. Not column #1 + column #2, and not column #3. And since the sort&lt;br/&gt;
key evaluates to the exact same value for every row, any ordering is OK.&lt;/p&gt;

&lt;p&gt;I think this means the SELECT statements listed above are OK.&lt;/p&gt;

&lt;p&gt;As to the VALUES statements, we have:&lt;/p&gt;

&lt;p&gt;1) VALUES 1,2 ORDER BY 1+2: Currently throws a syntax error. It could continue&lt;br/&gt;
to do that, as it&apos;s not particularly useful to order results by a constant, or&lt;br/&gt;
we could allow it and return the values 1 and 2 in no particular order.&lt;/p&gt;

&lt;p&gt;2) VALUES 1 ORDER BY 1+2: Currently returns one row with two columns. If we&lt;br/&gt;
allow (1), this query should return a single row with a single&lt;br/&gt;
column. Otherwise, it should raise the same error as (1).&lt;/p&gt;

&lt;p&gt;3) VALUES 1 ORDER BY INT(1): Currently throws NullPointerException. If (1) and&lt;br/&gt;
(2) raise syntax errors, so should this query. Otherwise, it should return a&lt;br/&gt;
single row with a single column.&lt;/p&gt;</comment>
                            <comment id="13541033" author="dagw" created="Sun, 30 Dec 2012 02:34:10 +0000"  >&lt;p&gt;Thanks for looking at this one, Knut. The current patch does throw 1 and 2). I&apos;ll file another bug for 3) since it&apos;s a different issue. Btw, it happens for SELECT, too. Once, that&apos;s fixed, it should throw error on 3) due to the new patch here.&lt;/p&gt;

&lt;p&gt;[The NPE happens when pulling up the order by expression seemingly due to a compiler phase problem: &lt;/p&gt;

&lt;p&gt;Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CastNode.getConstantValueAsObject(CastNode.java:851)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OrderByColumn.isReferedColByNum(OrderByColumn.java:466)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OrderByColumn.pullUpOrderByColumn(OrderByColumn.java:403)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OrderByList.pullUpOrderByColumns(OrderByList.java:195)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:254)&lt;/p&gt;

&lt;p&gt;The variable sourceCTI is (still) null; being set by CastNode# bindCastNodeOnly, which presumably hasn&apos;t yet been run.&lt;br/&gt;
]&lt;/p&gt;

&lt;p&gt;Uploading version b of this patch; there was a trailing a blanks issue in the canon for the orderby.sql script, otherwise the regressions passed without error.&lt;/p&gt;</comment>
                            <comment id="13541034" author="dagw" created="Sun, 30 Dec 2012 04:04:36 +0000"  >&lt;p&gt;Now, with our understanding that a constant expression allows arbitrary (implementation &lt;b&gt;dependent&lt;/b&gt;, not implementation defined, ordering), do we think it has any value to open up for this for the VALUES clause? I continue to think it would be ok to give an error message (but with the improved error message i propose in my patch). For SELECT, we should continue to allow it (it&apos;s the standard; upwards compatibility). For set operations the current restrictions continue to apply, cf &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2459&quot; title=&quot;Ordering on a CASE-expression casues a NullPointerException when using a UNION&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2459&quot;&gt;&lt;del&gt;DERBY-2459&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Opinions?&lt;/p&gt;</comment>
                            <comment id="13541039" author="dagw" created="Sun, 30 Dec 2012 05:01:52 +0000"  >&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6027&quot; title=&quot;ORDER BY a cast expression gives NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6027&quot;&gt;&lt;del&gt;DERBY-6027&lt;/del&gt;&lt;/a&gt; for the NPE issue and linking.&lt;/p&gt;</comment>
                            <comment id="13541414" author="bryanpendleton" created="Mon, 31 Dec 2012 16:57:46 +0000"  >&lt;p&gt;Dag, your proposal sounds fine to me; I think that would be good behavior. Isn&apos;t it amazing how&lt;br/&gt;
much trouble it is to retain ancient, no-longer-wanted features of a language, such as the ability&lt;br/&gt;
to reference columns by ordinal position? I wonder if the SQL standard defines a process for&lt;br/&gt;
deprecating unwanted features over time. We could start to build our own list of features we&apos;d&lt;br/&gt;
be willing to deprecate, should that ever become possible...&lt;/p&gt;</comment>
                            <comment id="13541980" author="dagw" created="Wed, 2 Jan 2013 03:17:15 +0000"  >&lt;p&gt;Thanks, Bryan. Yes, it is indeed painful, especially when the old and the new features make code semantically ambiguous as it does here.. I wish we could remove this, but I suspect users would find that painful; other databases also retain the column number ordering, e.g. I checked and found it in PostgreSQL, Oracle and DB2 at least, so the standard&apos;s removal of this hasn&apos;t been a resounding success... I don&apos;t know if there is such a process, I suspect that&apos;s the kind of this they leave to implementers...&lt;/p&gt;</comment>
                            <comment id="13542082" author="knutanders" created="Wed, 2 Jan 2013 10:56:35 +0000"  >&lt;p&gt;The proposal sounds fine to me too.&lt;/p&gt;

&lt;p&gt;It might be worthwhile adding a short comment to the new check in OrderByColumn. Something like &quot;In VALUES expressions, only allow ordering by column numbers&quot; would suffice. And a javadoc comment describing OrderByList.setOrderingWhat() might also be in order, as the method name itself is a bit cryptic.&lt;/p&gt;</comment>
                            <comment id="13542698" author="dagw" created="Thu, 3 Jan 2013 04:06:17 +0000"  >&lt;p&gt;Thanks, Knut. Uploading version c of this patch, which makes the method setOrderingWhat into a standard node &quot;init&quot; method (the explicit constructor method called by the node factory) with Javadoc explaining the parameter. Also added a comment as you suggest in OrderByColumn.&lt;br/&gt;
Committed as svn 1428160.&lt;/p&gt;</comment>
                            <comment id="13542701" author="dagw" created="Thu, 3 Jan 2013 04:13:20 +0000"  >&lt;p&gt;Candidate for back-porting, but it may be such a corner case it&apos;s not worth it.&lt;/p&gt;</comment>
                            <comment id="13720995" author="kmarsden" created="Fri, 26 Jul 2013 18:54:26 +0100"  >&lt;p&gt;I agree this does not look worthwhile to backport.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12625512">DERBY-6027</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12562446" name="derby-6009.diff" size="8922" author="dagw" created="Thu, 27 Dec 2012 07:39:00 +0000"/>
                            <attachment id="12562447" name="derby-6009.stat" size="501" author="dagw" created="Thu, 27 Dec 2012 07:39:00 +0000"/>
                            <attachment id="12562701" name="derby-6009b.diff" size="9026" author="dagw" created="Sun, 30 Dec 2012 02:35:10 +0000"/>
                            <attachment id="12562702" name="derby-6009b.stat" size="501" author="dagw" created="Sun, 30 Dec 2012 02:35:10 +0000"/>
                            <attachment id="12563024" name="derby-6009c.diff" size="9622" author="dagw" created="Thu, 3 Jan 2013 04:06:17 +0000"/>
                            <attachment id="12563025" name="derby-6009c.stat" size="501" author="dagw" created="Thu, 3 Jan 2013 04:06:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 23 Dec 2012 22:28:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>296465</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyy45r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>233015</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>