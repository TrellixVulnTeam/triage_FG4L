<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1497/DERBY-1497.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1497] assert failure in MessageUtil, because exception thrown with too many parameters when handling OutOfMemoryError</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1497</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If the VM throws a OutOfMemoryException, which is caught in:&lt;br/&gt;
NetStatementReply.copyEXTDTA:&lt;/p&gt;

&lt;p&gt;    protected void copyEXTDTA(NetCursor netCursor) throws DisconnectException {&lt;br/&gt;
        try {&lt;br/&gt;
            parseLengthAndMatchCodePoint(CodePoint.EXTDTA);&lt;br/&gt;
            byte[] data = null;&lt;br/&gt;
            if (longValueForDecryption_ == null) &lt;/p&gt;
{
                data = (getData(null)).toByteArray();
            }
&lt;p&gt; else &lt;/p&gt;
{
                data = longValueForDecryption_;
                dssLength_ = 0;
                longValueForDecryption_ = null;
            }
&lt;p&gt;            netCursor.extdtaData_.add(data);&lt;br/&gt;
        } catch (java.lang.OutOfMemoryError e) &lt;/p&gt;
{     &amp;lt;--- outofmemory
            agent_.accumulateChainBreakingReadExceptionAndThrow(new DisconnectException(agent_,
                new ClientMessageId(SQLState.NET_LOB_DATA_TOO_LARGE_FOR_JVM),
                e));  &amp;lt;----- message does not take parameters, causing assert failure
        }
&lt;p&gt;    } &lt;/p&gt;

&lt;p&gt;Instead of getting the message: java.sql.SQLException: Attempt to fully materialize lob data that is too large for the JVM.  The connection has been terminated.&lt;br/&gt;
I am getting an assert: &lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED Number of parameters expected for message id 58009.C.6 (0) does not match number of arguments received (1)&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:119) &lt;/p&gt;</description>
                <environment></environment>
        <key id="12345744">DERBY-1497</key>
            <summary>assert failure in MessageUtil, because exception thrown with too many parameters when handling OutOfMemoryError</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12314092">DERBY-550</parent>
                                    <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="andreask">Andreas Korneliussen</assignee>
                                    <reporter username="andreask">Andreas Korneliussen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Jul 2006 17:17:40 +0100</created>
                <updated>Thu, 13 Jul 2006 17:47:57 +0100</updated>
                            <resolved>Thu, 13 Jul 2006 17:47:27 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12420258" author="andreask" created="Tue, 11 Jul 2006 17:24:41 +0100"  >&lt;p&gt;The attached patch fixes the problem by not providning the error object as parameter to message.&lt;/p&gt;</comment>
                            <comment id="12420300" author="andreask" created="Tue, 11 Jul 2006 20:34:58 +0100"  >&lt;p&gt;Committed revision 420821.&lt;/p&gt;</comment>
                            <comment id="12420324" author="bryanpendleton" created="Tue, 11 Jul 2006 22:28:56 +0100"  >&lt;p&gt;It seems like it would be nice if we printed the original exception&apos;s stack trace&lt;br/&gt;
somewhere prior to discarding it.&lt;/p&gt;

&lt;p&gt;Otherwise, when this happens, all we&apos;ll know is that we ran out of memory, but we&lt;br/&gt;
will lose some potentially useful information about exactly which line of code we&lt;br/&gt;
were on when we ran out of memory.&lt;/p&gt;</comment>
                            <comment id="12420328" author="andreask" created="Tue, 11 Jul 2006 22:59:45 +0100"  >&lt;p&gt;Sure that would be an improvement. It would only work on java 6, since other VMs do not give a stack trace on OutOfMemoryError.&lt;/p&gt;

&lt;p&gt;Before the patch, the stack trace from OutOfMemoryError was already lost, since the code used this constructor of DisconnectException:&lt;br/&gt;
 public DisconnectException(Agent agent, ClientMessageId msgid, Object arg1) {&lt;br/&gt;
        this(agent, msgid, new Object[] &lt;/p&gt;
{ arg1 }
&lt;p&gt;);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;which at some point would call:&lt;/p&gt;

&lt;p&gt;public DisconnectException(Agent agent, ClientMessageId msgid,&lt;br/&gt;
        Object[] args, SqlCode sqlcode) &lt;/p&gt;
{
        this(agent, msgid, args, sqlcode, (Throwable)null);
    }
&lt;p&gt;(The OutOfMemoryException is part of args, not throwable, and its stacktrace lost)&lt;/p&gt;</comment>
                            <comment id="12420826" author="andreask" created="Thu, 13 Jul 2006 17:38:22 +0100"  >&lt;p&gt;Will update the fix so that a constructor of DisconnectException which takes Throwable is used.&lt;br/&gt;
After applying the new fix, the stack trace for the exception contains the following information when running the BlobOutOfMem repro in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-550&quot; title=&quot;BLOB : java.lang.OutOfMemoryError with network JDBC driver (org.apache.derby.jdbc.ClientDriver)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-550&quot;&gt;&lt;del&gt;DERBY-550&lt;/del&gt;&lt;/a&gt; on Java 6 (Mustang):&lt;/p&gt;

&lt;p&gt;java.sql.SQLException: Attempt to fully materialize lob data that is too large for the JVM.  The connection has been terminated.&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:94)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:344)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:278)&lt;br/&gt;
        at derbytest.BlobOutOfMem.main(BlobOutOfMem.java:104)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: Attempt to fully materialize lob data that is too large for the JVM.  The connection has been terminated.&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.copyEXTDTA(NetStatementReply.java:1486)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.parseCNTQRYreply(NetResultSetReply.java:139)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.readFetch(NetResultSetReply.java:41)&lt;br/&gt;
        at org.apache.derby.client.net.ResultSetReply.readFetch(ResultSetReply.java:40)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSet.readFetch_(NetResultSet.java:205)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.flowFetch(ResultSet.java:4160)&lt;br/&gt;
        at org.apache.derby.client.net.NetCursor.getMoreData_(NetCursor.java:1182)&lt;br/&gt;
        at org.apache.derby.client.am.Cursor.stepNext(Cursor.java:176)&lt;br/&gt;
        at org.apache.derby.client.am.Cursor.next(Cursor.java:195)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.nextX(ResultSet.java:299)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:269)&lt;br/&gt;
        ... 1 more&lt;br/&gt;
Caused by: java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
        at java.util.Arrays.copyOf(Arrays.java:2786)&lt;br/&gt;
        at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:94)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.getData(Reply.java:786)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.copyEXTDTA(NetStatementReply.java:1478)&lt;br/&gt;
        ... 11 more&lt;/p&gt;</comment>
                            <comment id="12420827" author="andreask" created="Thu, 13 Jul 2006 17:40:18 +0100"  >&lt;p&gt;New patch which  preserves the stack trace of OutOfMemoryError, as cause.&lt;/p&gt;</comment>
                            <comment id="12420828" author="andreask" created="Thu, 13 Jul 2006 17:47:27 +0100"  >&lt;p&gt;Committed revision 421566.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12336635" name="DERBY-1497.diff" size="722" author="andreask" created="Tue, 11 Jul 2006 17:24:41 +0100"/>
                            <attachment id="12336795" name="DERBY-1497v2.diff" size="711" author="andreask" created="Thu, 13 Jul 2006 17:40:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Jul 2006 21:28:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30018</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy159z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40505</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>