<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:36:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-528/DERBY-528.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-528] Support for DRDA Strong User ID and Password Substitute Authentication (USRSSBPWD) scheme</title>
                <link>https://issues.apache.org/jira/browse/DERBY-528</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This JIRA will add support for (DRDA) Strong User ID and Password Substitute Authentication (USRSSBPWD) scheme in the network client/server driver layers.&lt;/p&gt;

&lt;p&gt;Current Derby DRDA network client  driver supports encrypted userid/password (EUSRIDPWD) via the use of DH key-agreement protocol - however current Open Group DRDA specifications imposes small prime and base generator values (256 bits) that prevents other JCE&apos;s  to be used as java cryptography providers - typical minimum security requirements is usually of 1024 bits (512-bit absolute minimum) when using DH key-agreement protocol to generate a session key.&lt;/p&gt;

&lt;p&gt;Strong User ID and Password Substitute Authentication (USRSSBPWD) is part of DRDA specifications as another alternative to provide ciphered passwords across the wire.&lt;/p&gt;

&lt;p&gt;Support of USRSSBPWD authentication scheme will enable additional JCE&apos;s to  be used when encrypted passwords are required across the wire.&lt;/p&gt;

&lt;p&gt;USRSSBPWD authentication scheme will be specified by a Derby network client user via the securityMechanism property on the connection UR - A new property value such as ENCRYPTED_PASSWORD_SECURITY will be defined in order to support this new (DRDA) authentication scheme.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12313663">DERBY-528</key>
            <summary>Support for DRDA Strong User ID and Password Substitute Authentication (USRSSBPWD) scheme</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="forsini">Francois Orsini</assignee>
                                    <reporter username="forsini">Francois Orsini</reporter>
                        <labels>
                    </labels>
                <created>Tue, 23 Aug 2005 04:19:01 +0100</created>
                <updated>Wed, 1 Jul 2009 01:34:38 +0100</updated>
                            <resolved>Fri, 22 Sep 2006 19:50:38 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12329464" author="djd" created="Fri, 16 Sep 2005 04:43:47 +0100"  >&lt;p&gt;This is marked as fix in 10.1.2, but &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-528&quot; title=&quot;Support for DRDA Strong User ID and Password Substitute Authentication (USRSSBPWD) scheme&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-528&quot;&gt;&lt;del&gt;DERBY-528&lt;/del&gt;&lt;/a&gt; is a new feature, thus is it suitable for the 10.1.2 release, or the 10.1 branch. Typically branches are restricted to bug fixes and minor improvements.&lt;/p&gt;</comment>
                            <comment id="12329829" author="kmarsden" created="Mon, 19 Sep 2005 22:01:33 +0100"  >&lt;p&gt;Changing to 10.2 instead of the 10.1.2 bug fix release  since this is a new feature.&lt;/p&gt;</comment>
                            <comment id="12416241" author="forsini" created="Thu, 15 Jun 2006 03:16:44 +0100"  >&lt;p&gt;These are the changes to support Strong Password Substitute DRDA security mechanim (SECMEC_USRSSBPWD) in Derby&apos;s network client driver and network server code. Am also going to post a description of the changes to help the review.&lt;/p&gt;</comment>
                            <comment id="12416242" author="forsini" created="Thu, 15 Jun 2006 03:17:50 +0100"  >&lt;p&gt;svn status of the files impacted by the changes to support (SECMEC_USRSSBPWD)&lt;/p&gt;</comment>
                            <comment id="12416243" author="forsini" created="Thu, 15 Jun 2006 03:20:16 +0100"  >&lt;p&gt;Updated testing table for the testSecMec.java DRDA security mechanism test(s) - added tests combo for Strong Password Substitute DRDA security mechanism (SECMEC_USRSSBPWD).&lt;/p&gt;</comment>
                            <comment id="12416267" author="davidvc" created="Thu, 15 Jun 2006 06:25:28 +0100"  >&lt;p&gt;One comment: In the test output, I noticed a lot of the following changes in master/DerbyNetClient/testSecMec.out&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;
	&lt;ol&gt;
		&lt;li&gt;jdbc:derby://xxxFILTERED_HOSTNAMExxx:xxxFILTEREDPORTxxx/wombat;password=hobbes;securityMechanism=9 - EXCEPTION Security exception encountered, see next exception for details. Caused by exception class java.security.NoSuchProviderException: null&lt;br/&gt;
-TEST_DS (password=hobbes,securityMechanism=9)EXCEPTION testSecurityMechanism()  Security exception encountered, see next exception for details. Caused by exception class java.security.NoSuchProviderException: null&lt;br/&gt;
+# jdbc:derby://xxxFILTERED_HOSTNAMExxx:xxxFILTEREDPORTxxx/wombat;password=hobbes;securityMechanism=9 - EXCEPTION Security exception encountered, see next exception for details.&lt;br/&gt;
+TEST_DS (password=hobbes,securityMechanism=9)EXCEPTION testSecurityMechanism()  Security exception encountered, see next exception for details.&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note that the &quot;Caused by&quot; string has been removed.  This string is printed out when you run in JDK 1.3, as exception chaining is not supported in this revision of the JDK.  The fact that it has been removed leads me to suspect that master/DerbyNetClient/testSecMec.out is specific to JDK 1.3.  Further investigation shows that there is also a master/DerbyNetClient/jdk14/testSecMec.out.  I suspect that you replaced the JDK 1.3 master file with an output file from a JDK 1.4 or greater test run?  I speak from painful experience... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12416270" author="forsini" created="Thu, 15 Jun 2006 07:21:05 +0100"  >&lt;p&gt;Yes indeed - good catch - I did copy it to the wrong location - I was testing with a 1.5 JVM lately  - I &apos;m going to undo and copy it to:&lt;br/&gt;
trunk/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/jdk14&lt;br/&gt;
assuming I don&apos;t also have to copy it under the &apos;jdk15&apos; master directory but am guessing not or it would be there already &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
&lt;b&gt;change to be in the next changes revision package&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="12416300" author="bernt" created="Thu, 15 Jun 2006 16:03:23 +0100"  >&lt;p&gt;At a first glance:&lt;br/&gt;
NetConnectionRequest.java has only whitespace changes and should not be part of the patch.&lt;br/&gt;
There&apos;s a lot of cosmetic whitespace changes in several of the files (makes it harder to review the patch).&lt;/p&gt;

&lt;p&gt; In ClientBaseDataSource.getUpgradedSecurityMechanism you no longer support USRIDPWD. Is that the case or have I missed something?&lt;/p&gt;</comment>
                            <comment id="12416339" author="kmarsden" created="Thu, 15 Jun 2006 22:08:05 +0100"  >&lt;p&gt;Thanks so much for this important fix.&lt;/p&gt;

&lt;p&gt;Can you test this change with &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;new server/10.1.1.0 client&lt;br/&gt;
   -new client/10.1.1.0 server release &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To make sure that there are no compatibility issues associated with the change.&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/releases/release-10.1.1.0.cgi&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/releases/release-10.1.1.0.cgi&lt;/a&gt;&lt;br/&gt;
Also it would be great to see tests added to org.apache.derbyTesting.functionTests.tests.junitTests.derbyNet.CompatibilityTest to verify that the negotiation happens properly.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12417060" author="bernt" created="Wed, 21 Jun 2006 16:38:27 +0100"  >&lt;p&gt;EncryptionManager (this applies DecryptionManager) actually implements two distinct objects in your patch, only distinguished by the overloaded constructor. They should be separated into different classes (possibly with an abstract base class if needed).&lt;/p&gt;</comment>
                            <comment id="12420836" author="forsini" created="Thu, 13 Jul 2006 18:32:48 +0100"  >&lt;p&gt;Thanks for the comments / feedback.&lt;/p&gt;

&lt;p&gt;I have attached some new changes which include some bug fixes. Merged with the latest as well.&lt;/p&gt;

&lt;p&gt;@Bernt&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I have removed NetConnectionRequest.java&lt;/li&gt;
	&lt;li&gt;USRIDPWD is the default if EUSRIDPWD was not supported by the client - I had made the default USRSSBPWD (strong password substitute) as it can be supported by all the clients &amp;gt;= 10.2 and JVM from 1.3.1 -  I have reverted back to a default of USRIDPWD because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; which I have to fix as if I make USRSSBPWD the default, it will cause a protocol exception on derby servers prior to 10.2; until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; is fixed and can be handled better on the client..as well as doing the right thing on the server when returning supported SECMEC&apos;s as part of ACCSECRD.&lt;/li&gt;
	&lt;li&gt;Regarding  EncryptionManager and DecryptionManager - there are comments in the code stating that these classes will be refactored to be more modular as they share a lot of similar code - It will also be easier to add support for other DRDA security mechanisms - I will log a JIRA and would live to implement this separately as I had started to do it when we were on the topic of shared code/classes, some months ago.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So for now, USRSSBPWD  is no longer the default after EUSRIDPWD in the client until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; is fixed or a temporary handling of the protocol exception reported as in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; is duoable in Derby&apos;s client driver.&lt;/p&gt;

&lt;p&gt;@Kathey - Yes, I have tested all the compatibility combos - my main issue is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; which causes the COMPAT test to fail when going CLIENT_10.2----&amp;gt; SERVER_PRE_10_2 - otherwise all the tests were passing...If I can put a temporary workaround to handle the protocol exception (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt;) in the client, then I will put USRSSBPWD back as the default secMec to use on the client &lt;em&gt;when&lt;/em&gt; EUSRIDPWD cannot be used...In the meantime, we can leave USRIDPWD as the 2nd default in ClientBaseDataSource until either a workaround is found or &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; is fixed (after the commit of this JIRA). I have traced that correct message exchanges is happening as well.&lt;/p&gt;</comment>
                            <comment id="12421257" author="rhillegas" created="Sat, 15 Jul 2006 01:06:20 +0100"  >&lt;p&gt;I will take a look at this patch. Thanks, Francois.&lt;/p&gt;</comment>
                            <comment id="12421259" author="kmarsden" created="Sat, 15 Jul 2006 01:25:24 +0100"  >&lt;p&gt;Francois said ...:&lt;br/&gt;
&amp;gt;- my main issue is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt; which causes the COMPAT test to fail when going CLIENT_10.2----&amp;gt; SERVER_PRE_10_2&lt;/p&gt;

&lt;p&gt;I would not like to see this go in  and cause regression even one  who&apos;s root cause is an existing bug.  I think it is bad practice to indroduce a regression even with the intent of fixing it.&lt;/p&gt;

&lt;p&gt;Is it possible to have server specific behaviour using NetDatabaseMetadata.computeFeatureSet()  or does this all happen too early?  &lt;/p&gt;</comment>
                            <comment id="12421312" author="kmarsden" created="Sat, 15 Jul 2006 17:20:43 +0100"  >&lt;p&gt;Thanks Francois for this important change and thank you for including comments in the code.  Even with the comments, I  started reviewing the patch and  am finding it hard because of two things.&lt;/p&gt;

&lt;p&gt;1) I  did not understand the high level strategy when I started review, for example I am not sure why the Client security mechanisms have been moved into BasicAuthenticationServiceImpl&lt;/p&gt;

&lt;p&gt; 2) I see that you hit &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1363&quot; title=&quot;Derby should publish a well defined coding convention per the db project guidlines&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1363&quot;&gt;DERBY-1363&lt;/a&gt;, a bug in the Derby project itself.  Even though we don&apos;t have a coding standard I think it would be good for the added code to match the surrounding code style and indentation.   I added this to &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyContributorChecklist&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyContributorChecklist&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;When you submit the new patch to fix 10.2 client with 10.1 server, I was wondering if you could provide an overview of your strategy and the associated code changes made.  I think it will make things easier for reviewers.  Good examples are  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-928&quot; title=&quot;Add ability to network server to accept connections with a certain security mechanism.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-928&quot;&gt;&lt;del&gt;DERBY-928&lt;/del&gt;&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-928#action_12366294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-928#action_12366294&lt;/a&gt;  and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-170&quot; title=&quot;Inserting large string value into non-existent table causes communication link failure over Network Server.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-170&quot;&gt;&lt;del&gt;DERBY-170&lt;/del&gt;&lt;/a&gt; changes.html&lt;/p&gt;

&lt;p&gt;Thanks &lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12421609" author="rhillegas" created="Mon, 17 Jul 2006 14:13:45 +0100"  >&lt;p&gt;Hi Francois,&lt;/p&gt;

&lt;p&gt;Derbyall had one error when I applied this patch: testSecMec under DerbyNet.&lt;/p&gt;</comment>
                            <comment id="12421654" author="forsini" created="Mon, 17 Jul 2006 17:24:27 +0100"  >&lt;p&gt;@Rick - I have to update the canons for testSecMec when it is run under the DerbyNet framework - Thanks.&lt;/p&gt;

&lt;p&gt;@Kathey:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The current changes are &lt;b&gt;not&lt;/b&gt; causing a regression with the compatibility tests - I have entered &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1517&quot; title=&quot;Derby Network Client to handle list of SECMEC(s) returned by existing/released DRDA Derby Network Servers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1517&quot;&gt;DERBY-1517&lt;/a&gt; in order to try and fix the existing issue of not being able to parse a list of SECMEC(s) returned by the server during ACCSECRD when a securityMechanism is not supported by this last one .&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;No client security mechanism have been moved to BasicAuthenticationServiceImpl - I&apos;ve added some logic during BUILTIN authentication to treat a password substitute - There is no way to decrypt a password substitute, hence during authentication, I go through the means of authenticating a password substitute by taking the BUILTIN stored one and regenerating a SECMEC_USRSSBPWD to compare with the passed-in (substitute) one...&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Coding standards - Am going to look into this - I usually am very careful with coding guidelines.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Many thanks for the comments.&lt;/p&gt;</comment>
                            <comment id="12421969" author="forsini" created="Tue, 18 Jul 2006 22:18:24 +0100"  >&lt;p&gt;Here is additional information about this JIRA:&lt;/p&gt;

&lt;p&gt;This patch implements DRDA  Strong Password Substitute security mechanism (USRSSBPWD) in the Derby network client and  DRDA server - Ultimately we want to &lt;br/&gt;
have  USRSSBPWD be the 2nd-best upgrade choice after Encrypted userid &amp;amp; password (EUSRIDPWD) when this last one cannot be used with certain JVM&apos;s. There &lt;br/&gt;
is also an existing JIRA-1517 which needs to be addressed in order to make USRSSBPWD a possible SecMec upgrade choice for a DerbyNetClient datasource.&lt;/p&gt;

&lt;p&gt;USRSSBPWD&apos;s SecMec implementation presented a challenge due to the non-recoverability of the client password in the DRDA server - Effectively, USRSSBPWD &lt;br/&gt;
causes a substitute password (in-lieu of the client&apos;s original one)  to be generated and sent to the DRDA server - Basically, there is no way to decrypt or &lt;br/&gt;
recover the substitute password on the server side. The server must regenerate a substitute password on its side and compare it with the one sent by the &lt;br/&gt;
client. Some 8-byte random seeds are exchanged between the client and server and are used to generate the hashed password substitute along with the userName and &lt;br/&gt;
some spec&apos;ed constant value. When the server generates on its turn the password substitute, it obviously needs to do it against the user&apos;s stored password within the &lt;br/&gt;
authentication realm repository (i.e. BUILTIN).&lt;/p&gt;

&lt;p&gt;In the current implementation, USRSSBPWD is only supported with Derby&apos;s BUILTIN authentication scheme as well as when there is no authentication enabled (NONE scheme).&lt;/p&gt;

&lt;p&gt;On the DRDA server, USRSSBPWD can be forced to be the only SecMec to support by setting the property &apos;derby.drda.securityMechanism&apos; to the newly introduced &lt;br/&gt;
STRONG_PASSWORD_SUBSTITUTE_SECURITY string which maps to USRSSBPWD (See impl/drda/NetworkServerControlImpl.java changes).&lt;/p&gt;

&lt;p&gt;Tests:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;derbynet/testSecMec.java functional test has been expanded to use and test USRSSBPWD security mechanism (STRONG_PASSWORD_SUBSTITUTE_SECURITY)&lt;/li&gt;
	&lt;li&gt;Full compatibility tests are running successfully.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Flow of events w/ source impacts when authenticating via SECMEC_USRSSBPWD:&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;On the Derby network client side (driver), strong password substitute can be set to authenticate via the existing connection attribute &apos;securityMechanism&apos;  with a value of &apos;8&apos;. SECMEC_USRSSBPWD (0x8) has therefore been added to client/net/NetConfiguration.java.&lt;/p&gt;

&lt;p&gt;Right now and as mentioned above, the security mechanism cannot be upgraded in the client datasource due to the fact that old servers do not support USRSSBPWD and return a list of SECMEC(s) which cannot be processed by the derby network client (see JIRA-926 &amp;amp; JIRA-1517) - Eventhough USRSSBPWD was tested to be considered as a possible security mechanism upgrade on the client, the changes in ClientBaseDataSource.java have been disabled - Logic placeholders have been left (commented out) so that it can be re-enabled once JIRA-1517 is addressed.&lt;/p&gt;

&lt;p&gt;(client) Flow orchestration of authentication via USRSSBPWD, is implemented in client/net/NetConnection.java as it is currently done for other DRDA SecMec&apos;s handling- I tried to respect and follow as much as possible the current flow infrastructure in place which is already used by similar DRDA security mechanisms (i.e. EUSRIDPWD) - See flowUSRSSBPWDconnect().&lt;/p&gt;

&lt;p&gt;As defined by the DRDA v3 specs, the client generates an 8-byte random seed which is sent as part of the SECTKN parameter during ACCSEC - The DRDA server parses ACCSEC and determine if the SECMEC is supported - It does this in by calling validateSecMecUSRSSBPWD() during the parsing of the ACCSEC - The server rules for this implementation phase to use USRSSBPWD as a valid SecMec for this connection are:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Current authentication provider is Derby BUILTIN or NONE. (database and system level are supported)&lt;/li&gt;
	&lt;li&gt;Application requester is &apos;DNC&apos; (Derby Network Client) and version of the client is &amp;gt;= 10.2&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If the server can authenticate via USRSSBPWD , it retrieves the client seed for this connection and generates an 8-byte random server (target) seed which gets sent back to the client as part of the SECTKN in the ACCSECRD response. Pretty much all the server logic to handle the communication and message parsing is in impl/drda/DRDAConnThread.java.&lt;/p&gt;

&lt;p&gt;The client now has all the elements to generate the password substitute (client &amp;amp; server seeds, userName) and calls passwordSubstituteForUSRSSBPWD().&lt;/p&gt;

&lt;p&gt;client/am/EncryptionManager contains the logic to generate the password substitute - As previously specified, the password cannot be recovered on the server side, hence and for the implementation to work successfully with Derby BUILTIN authentication, the password, before being substituted, is also hashed the same way as it is stored in Derby. Otherwise, it would not be possible to authenticate a client with the existing BUILTIN Derby authentication scheme.&lt;/p&gt;

&lt;p&gt;Once the password substitute has been generated, it is sent as part of the SECCHK command which is parsed in DRDAConnThread. A connection to the database will be verified by calling verifyUserIdPassword() in parseSECCHK() as it is done for other security mechanisms.&lt;/p&gt;

&lt;p&gt;Internally and during user credentials validation in DRDAConnThread.getConnFromDatabaseName(), I&apos;m setting some attributes as part of the connection properties to pass the client and server seeds, as well as the SecMec value for the BUILTIN authentication logic to regenerate the password substitute - I&apos;ve only expanded the BUILTIN authentication scheme to be capable of authenticating a password substitute with some hashed stored password in Derby. The attributes which are used to pass-in information to the BUILTIN provider are defined in org/apache/derby/iapi/reference/Attribute.java&lt;/p&gt;

&lt;p&gt;    /*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Internal attributes. Mainly used by DRDA and Derby BUILTIN&lt;/li&gt;
		&lt;li&gt;authentication provider in some security mechanism context&lt;/li&gt;
		&lt;li&gt;(SECMEC_USRSSBPWD).&lt;br/&gt;
    */&lt;br/&gt;
    String DRDA_SECTKN_IN = &quot;drdaSecTokenIn&quot;;&lt;br/&gt;
    String DRDA_SECTKN_OUT = &quot;drdaSecTokenOut&quot;;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The changes are they are right now are pretty isolated - I believe that once JIRA-1517 is addressed, we can make USRSSBPWD be the default upgraded network security mechanism for the context where the JVMs restrict the use of EUSRIDPWD. In the meantime, these changes provide a mean to authenticate on the network and not pass in clear-text the password during Derby authentication.&lt;/p&gt;

&lt;p&gt;I have fixed the indentation issues due to mixing old-generation code (where 4-space tab was not a must) with new one I had added in some of the classes.&lt;/p&gt;

&lt;p&gt;I&apos;ve fixed the master (out) canons for DerbyNet when running testSecMec.java as well.&lt;/p&gt;

&lt;p&gt;Kathey ,as you offered, I would appreciate if you could run testSecMec under DerbyNet with JCC 2.6 and 2.8 - I have only got JCC 2.4 and this is what II used for Derbynet.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;</comment>
                            <comment id="12421970" author="forsini" created="Tue, 18 Jul 2006 22:21:26 +0100"  >&lt;p&gt;Here is a new updated changes package based on earlier comments.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed indentation issues&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added DerbyNet testSecMec updated canon (out) master files (missing JCC 2.6 and 2.8 for testSecMec)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed a few comments in the code&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12422486" author="rhillegas" created="Thu, 20 Jul 2006 21:45:22 +0100"  >&lt;p&gt;I&apos;m afraid I see a security violation when I run against the jar files. I do not see this problem when I run against the classtree. The error occurs in the DerbyNetClient framework in derbynet/testProtocol.java:&lt;/p&gt;

&lt;p&gt;299 add&lt;br/&gt;
&amp;gt; Exception in thread &quot;main&quot; java.security.AccessControlException: access denied (java.net.SocketPermission &lt;br/&gt;
127.0.0.1:1527 connect,resolve)&lt;br/&gt;
Test Failed.&lt;/p&gt;</comment>
                            <comment id="12422498" author="knutanders" created="Thu, 20 Jul 2006 22:22:49 +0100"  >&lt;p&gt;Rick, the error you see is logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1545&quot; title=&quot;derbynet/testProtocol.java fails with security manager enabled&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1545&quot;&gt;&lt;del&gt;DERBY-1545&lt;/del&gt;&lt;/a&gt; and is not related to the patch.&lt;/p&gt;</comment>
                            <comment id="12422633" author="rhillegas" created="Fri, 21 Jul 2006 13:56:35 +0100"  >&lt;p&gt;I am far from being an expert on this area of the code. The changes, however, are very well commented and, coupled with the extensive notes in this JIRA, allow me to understand the patch.&lt;/p&gt;

&lt;p&gt;Kathey, do you have any feedback now that Francois has attached his extensive notes?&lt;/p&gt;</comment>
                            <comment id="12422636" author="kmarsden" created="Fri, 21 Jul 2006 14:11:46 +0100"  >&lt;p&gt;My functional concerns about 10.2 client not working with 10.1 server have been taken care of by reverting to the CLEAR_TEXT_PASSWORD default. I will try out the patch today and will submit the JCC masters. I got sidetracked with some other  issues.  It would be great if Sunitha could also take a look at the code changes as she did similar work for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-928&quot; title=&quot;Add ability to network server to accept connections with a certain security mechanism.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-928&quot;&gt;&lt;del&gt;DERBY-928&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
</comment>
                            <comment id="12422814" author="kmarsden" created="Sat, 22 Jul 2006 06:36:36 +0100"  >&lt;p&gt;Running the testSecMec test I am getting symptoms that look like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1114&quot; title=&quot;derbynet/testSecMec.java fails intermittently and test exits mysteriously when server is shutdown as part of the testrun.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1114&quot;&gt;&lt;del&gt;DERBY-1114&lt;/del&gt;&lt;/a&gt; on all JVM&apos;s  I have tried,  where the test exits in the middle   I think this is specific to my environment and have seen it in the past without the patch,.This will make me finally  update my jdk and get it resolved.  If you get Sunitha&apos;s review before you get the JCC masters from me, don&apos;t wait for the JCC masters I will update after. &lt;/p&gt;

&lt;p&gt;One other note.  It might be good to open another Jira Issue to document this change.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12423196" author="forsini" created="Tue, 25 Jul 2006 00:26:13 +0100"  >&lt;p&gt;I have run against several JVM&apos;s versions and I have not encountered this symptom thus far - It&apos;s probably due to the fact I&apos;m running Sun JVM 1.4.2_08 (amongst others) and not 1.4.2_06 as being reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1114&quot; title=&quot;derbynet/testSecMec.java fails intermittently and test exits mysteriously when server is shutdown as part of the testrun.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1114&quot;&gt;&lt;del&gt;DERBY-1114&lt;/del&gt;&lt;/a&gt;. None of my 1.5 JVM are beta either.&lt;/p&gt;

&lt;p&gt;  &amp;gt; One other note. It might be good to open another Jira Issue to document this change&lt;/p&gt;

&lt;p&gt;Let me know if you intend to do it or wait until you update your JVMs/JDKs - I can do it also but I&apos;d rather wait until you updated your environment...&lt;/p&gt;

&lt;p&gt;Thanks Kathey.&lt;/p&gt;</comment>
                            <comment id="12423493" author="skambha" created="Wed, 26 Jul 2006 01:16:59 +0100"  >&lt;p&gt;Thanks Francois for working on this feature.  I think this will be a great addition to Derby.&lt;/p&gt;

&lt;p&gt;The v3 patch does not apply cleanly in my eclipse IDE but it was fairly easy to take care of the conflict.&lt;br/&gt;
Maybe it might be best to regenerate a patch.&lt;/p&gt;

&lt;p&gt;Thanks for taking care of most of the unwanted diffs, but there are still places where there are spurious diffs because of tabs/spaces etc. It might be good to remove them.&lt;/p&gt;

&lt;p&gt;TESTING: Since the codepath for the builtin authentication is changed when security mechanism is set to 8,&lt;br/&gt;
I think some tests should be added when builtin authentication is used, and security mechanism&lt;br/&gt;
is set to 8.&lt;/p&gt;

&lt;p&gt;First, just some thoughts. I think they are fine, but just wanted to mention them in case &lt;br/&gt;
someone else had a better idea for these.&lt;/p&gt;

&lt;p&gt;a)  java/engine/org/apache/derby/iapi/reference/Attribute.java&lt;br/&gt;
I am not sure if this class should have the internal variables like drdaSecTokenIn etc.&lt;br/&gt;
I remember Dan opening a jira issue &lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-1151&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-1151&lt;/a&gt; &lt;br/&gt;
mentioning about how instance variables in Attribute.java are picked up by ij.&lt;/p&gt;

&lt;p&gt;b)java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;/p&gt;

&lt;p&gt;+    private final static String AUTHENTICATION_PROVIDER_BUILTIN_CLASS =&lt;br/&gt;
+    &quot;org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl&quot;;&lt;br/&gt;
+&lt;br/&gt;
+    private final static String AUTHENTICATION_PROVIDER_NONE_CLASS =&lt;br/&gt;
+    &quot;org.apache.derby.impl.jdbc.authentication.NoneAuthenticationServiceImpl&quot;;&lt;br/&gt;
+&lt;/p&gt;

&lt;p&gt;Wonder if it is ok to use the implementation class names here. Is it possible to let&lt;br/&gt;
the authentication to just fail, if the authentication is not builtin and if it is not none.&lt;br/&gt;
I think these checks are made for the handshake between client and server, in order to &lt;br/&gt;
support the upgrade of the security mechanism, correct?&lt;/p&gt;

&lt;p&gt;c)&lt;br/&gt;
 Index: java/client/org/apache/derby/client/net/NetConnection.java&lt;br/&gt;
I am not sure I understand these checks.  Will there be a case when the dataSource_.getUser()&lt;br/&gt;
will not be the same as the dataSource_.propertyDefault_user.   Can you elaborate on this case. &lt;br/&gt;
and why do we not update the user_ ?&lt;/p&gt;

&lt;p&gt;+        String userName = user_;&lt;br/&gt;
+        &lt;br/&gt;
.....&lt;br/&gt;
+        if (dataSource_ != null)&lt;br/&gt;
+        {&lt;br/&gt;
+            String dataSourceUserName = dataSource_.getUser();&lt;br/&gt;
+            if (!dataSourceUserName.equals(&quot;&quot;) &amp;amp;&amp;amp;&lt;br/&gt;
+                userName.equalsIgnoreCase(&lt;br/&gt;
+                    dataSource_.propertyDefault_user) &amp;amp;&amp;amp;&lt;br/&gt;
+                !dataSourceUserName.equalsIgnoreCase(&lt;br/&gt;
+                    dataSource_.propertyDefault_user))&lt;br/&gt;
+            &lt;/p&gt;
{
+                userName = dataSourceUserName;
+            }
&lt;p&gt;+        }&lt;/p&gt;


&lt;p&gt;Some issues:&lt;/p&gt;

&lt;p&gt;1)Non portable code. String.getBytes() will use the default encoding.&lt;br/&gt;
This code wont work if the client and server are on different platforms with different&lt;br/&gt;
default encoding. &lt;/p&gt;

&lt;p&gt;In Index: java/client/org/apache/derby/client/am/EncryptionManager.java&lt;/p&gt;

&lt;p&gt;+		byte[] userBytes = userName.getBytes();&lt;/p&gt;

&lt;p&gt;Also in code added in BasicAuthenticationServiceImpl.java&lt;/p&gt;

&lt;p&gt;Maybe you can use the toHexByte() to get bytes from the string. &lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/AvoidNonPortableMethods&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/AvoidNonPortableMethods&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;2)Index: java/client/org/apache/derby/jdbc/ClientBaseDataSource.java&lt;/p&gt;

&lt;p&gt;Can you please explain why the below three lines have been removed. &lt;br/&gt;
@@ -887,15 +904,8 @@&lt;br/&gt;
         if (prop.containsKey(Attribute.CLIENT_TRACE_APPEND)) &lt;/p&gt;
{
             setTraceFileAppend(getTraceFileAppend(prop));
         }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (prop.containsKey(Attribute.CLIENT_SECURITY_MECHANISM)) 
{
-            setSecurityMechanism(getSecurityMechanism(prop));
-        }
&lt;p&gt;         if (prop.containsKey(Attribute.CLIENT_RETIEVE_MESSAGE_TEXT)) &lt;/p&gt;
{
             setRetrieveMessageText(getRetrieveMessageText(prop));
         }
&lt;p&gt;     }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;3)&lt;br/&gt;
Index: java/client/org/apache/derby/client/am/EncryptionManager.java&lt;br/&gt;
I think this has to be within the SanityManager.DEBUG block. &lt;/p&gt;

&lt;p&gt;+        // Assert we have a SHA-1 Message Digest already instantiated&lt;br/&gt;
+        SanityManager.ASSERT((messageDigest != null) &amp;amp;&amp;amp;&lt;br/&gt;
+                              (SHA_1_DIGEST_ALGORITHM.equals(&lt;br/&gt;
+                                              messageDigest.getAlgorithm())));&lt;/p&gt;

&lt;p&gt;trace calls in DRDAConnThread should be in SanityManager.DEBUG blocks.&lt;br/&gt;
+                        trace(&quot;parseACCSEC - SECCHKCD_NOTSUPPORTED &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; - &quot; + securityMechanism + &quot; &amp;lt;&amp;gt; &quot; + server.getSecurityMechanism() + &quot;\n&quot;);&lt;/p&gt;

&lt;p&gt;Rest are minor comments - might be good to add more comments if possible.&lt;/p&gt;

&lt;p&gt;4)Might be good to add javadoc like comments for the arguments also, specially in case of this &lt;br/&gt;
method. I like the comments you added, may be good to explicitly mention that the sourceSeed &lt;br/&gt;
is Rdr and the targetSeed_ is Rds.&lt;/p&gt;

&lt;p&gt;EncryptionManager.java&lt;br/&gt;
+	 */&lt;br/&gt;
+    public byte[] substitutePassword(&lt;br/&gt;
+                String userName,&lt;br/&gt;
+                String password,&lt;br/&gt;
+                byte[] sourceSeed_,&lt;br/&gt;
+                byte[] targetSeed_) throws SqlException {&lt;/p&gt;

&lt;p&gt;In Attribute.java:&lt;br/&gt;
It would be nice to have a comment, just a line that says this is RDr or the seed sent by the client.&lt;br/&gt;
Attribute.DRDA_SECTKN_IN &lt;/p&gt;

&lt;p&gt;In DRDAConnThread.validateSecMecUSRSSBPWD()&lt;br/&gt;
+            if (database != null)&lt;br/&gt;
+                database.secTokenOut = myTargetSeed;&lt;br/&gt;
I think, if we reached to this point, database wont be null. If database is null, &lt;br/&gt;
I think there will be some other serious issue.&lt;/p&gt;

&lt;p&gt;ClientBaseDataSource.java.&lt;br/&gt;
I think the comment needs to be updated.&lt;br/&gt;
+     * 3. if password is available, if client does not support EUSRIDPWD, then&lt;br/&gt;
+     * USRSSBPWD is returned.&lt;/p&gt;


&lt;p&gt;&amp;#8211; Most of the toHexByte, toHexString functions seem to be copied across multiple places. I did see &lt;br/&gt;
that you added comments that all these functions should probably be shared.  Maybe it might&lt;br/&gt;
be best to add a jira issue&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, so when we get back to discussing code sharing, we will clean &lt;br/&gt;
up all this code that seems to be now added in two places apart from existing engine code.  &lt;/p&gt;

&lt;p&gt;&amp;#8211; Comments in testSecMec.java should probably be updated to reflect that  &lt;br/&gt;
upgrade to USRSSBPWD does not happen currently.&lt;/p&gt;

&lt;p&gt;Thanks so much for all your work on this. &lt;br/&gt;
Sunitha.&lt;/p&gt;</comment>
                            <comment id="12426292" author="forsini" created="Mon, 7 Aug 2006 20:09:09 +0100"  >&lt;p&gt;Sunitha, many thanks for this excellent and thorough review.&lt;/p&gt;

&lt;p&gt;I&apos;ve addressed all of the comments - I&apos;ve run derbyall as well as derbynet/testSecMec.java and derbynet/dataSourcePermissions_net.java under different JVM&apos;s.&lt;/p&gt;

&lt;p&gt;  &amp;gt; Spurious diffs because of tabs/spaces etc&lt;/p&gt;

&lt;p&gt;Took care of them.&lt;/p&gt;

&lt;p&gt;  &amp;gt; Additional testing with securityMechanism=8 and BUILTIN&lt;/p&gt;

&lt;p&gt;When I had USRSSBPWD upgraded by default, it was exercised a lot more, throughout testSecMec.java and dataSourcePermissions_net.java&lt;/p&gt;

&lt;p&gt;I have added a new test as part of testSecMec.java - method is testUSRSSBPWD_with_BUILTIN()&lt;/p&gt;

&lt;p&gt;a) Actually, these are internal connection attributes, which are passed on the connection URL. There really are connection attributes except that they are not exposed - in a similar way as the DRDAID_ATTR attribute. Some attributes such as CRYPTO_EXTERNAL_KEY_VERIFY_FILE and referenced in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1151&quot; title=&quot;ij does not issue a warning if the attribute verifyKey.dat is set on an embedded URL.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1151&quot;&gt;DERBY-1151&lt;/a&gt; are not.&lt;/p&gt;

&lt;p&gt;b) The 2 checks are necessary as support for USRSSBPWD SecMec only works if Derby&apos;s authentication scheme is BUILTIN or NONE. It has to be done this way as we cannot risk to go ahead and fail authenticating against the Derby engine later during parseSECCHK() - As the password substitute cannot be decrypted, I know for sure that I can regenerate it via the updated BUILTIN scheme which now gets support for it - And as far as the NONE authentication scheme, we do not care as we never check the password, so the password substitute will never get checked...This has to be checked/verified early enough and hence why it is being done during parseACCSEC().&lt;/p&gt;

&lt;p&gt;c) Yes, dataSource_.getUser() can be different than dataSource_.propertyDefault_user if a non-null user is specified as part of the getConnection() in ClientDataSource or/and if some connectionAttributes are set via setConnectionAttributes() - also, datasource values can &lt;br/&gt;
be updated when updateDataSourceValues() gets called in ClientDataSource.getConnection() - I did not want to update user_ as the processing of USRSSBPWD is pretty isolated - I think I could do it but I might want to treat it as a separate JIRA for the simple reason that even with other DRDA security mechanism such as EUSRIDPWD, we keep encrypting the original userName and not the one that gets passed via connection attributes...I think this needs to be addressed as a separate JIRA which I will enter to also fix the current  behavior with some other SecMec...This of course, will &lt;b&gt;not&lt;/b&gt; have any impact on the user authentication.&lt;/p&gt;

&lt;p&gt;Issues:&lt;/p&gt;

&lt;p&gt;1) I had noted that one as well- I have fixed both EncryptionManager.java and AuthenticationServiceBase.java to use toHexByte() instead.&lt;/p&gt;

&lt;p&gt;2) I removed it because it was duplicated and therefore set twice in the the updateDataSourceValues() method&lt;/p&gt;

&lt;p&gt;3) Took care of them all&lt;/p&gt;

&lt;p&gt;4) Took care of them all - going to enter a JIRA for the toHexByte, toHexString methods to be reconciled into one location when we have fully &lt;/p&gt;

&lt;p&gt;addressed the code sharing aspect of things.&lt;/p&gt;

&lt;p&gt;Ensured Javadoc was generated properly.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;Am hoping Kathey can run testSecMec with JCC 2.6 and 2.8 and generate the 2 additional testSecMec.out master canon output files for DerbyNet...&lt;/p&gt;</comment>
                            <comment id="12426560" author="rhillegas" created="Tue, 8 Aug 2006 14:07:43 +0100"  >&lt;p&gt;Thanks, Francois for all the hard work on this! And thanks, Sunitha, for the thorough review. Derbyall passes cleanly on this patch (modulo the wisconsin noise). Unless some serious objection is raised to this patch, I intend to commit it tomorrow.&lt;/p&gt;</comment>
                            <comment id="12426718" author="skambha" created="Tue, 8 Aug 2006 22:08:18 +0100"  >&lt;p&gt;I looked at the v4 patch. Thanks Francois for taking care of all my comments and for taking  the effort to clean up  the spurious diffs.&lt;/p&gt;

&lt;p&gt;The patch applies cleanly.  &lt;/p&gt;

&lt;p&gt;If you or Rick can take care of #1,  I vote  +1 for commit  of the v4 patch.  The other comments are very minor and  can be taken care of as a separate followon patch. &lt;/p&gt;

&lt;p&gt;1)There are actually no real changes in dataSourcePermissions_net.java and this file should not be committed.&lt;/p&gt;

&lt;p&gt;2)testSecMec.java&lt;br/&gt;
First, thanks for the addition of the new testcase.&lt;/p&gt;

&lt;p&gt;--In the testUSRSSBPWD_with_BUILTIN(), the case here &quot;USRSSBPWD + BUILTIN (T0)&quot; seems to suggest that builtin authentication is used, but at this point the builtin authentication wont happen as you also mention in the comment. &lt;br/&gt;
It would be good to update it.&lt;/p&gt;

&lt;p&gt;+            // Shutdown &apos;wombat&apos; database for BUILTIN&lt;br/&gt;
+            // authentication to take effect the next time it is&lt;br/&gt;
+            // booted - derby.connection.requireAuthentication is a&lt;br/&gt;
+            // static property.&lt;br/&gt;
+		    getConnectionUsingDriverManager(getJDBCUrl(&lt;br/&gt;
+                &quot;wombat&quot;,&quot;user=neelima;password=lee;shutdown=true;securityMechanism=&quot; +&lt;br/&gt;
+                SECMEC_USRSSBPWD),&quot;USRSSBPWD + BUILTIN (T0):&quot;);&lt;br/&gt;
+&lt;/p&gt;

&lt;p&gt;&amp;#8211; Comment needs to be fixed.  &lt;br/&gt;
+&lt;br/&gt;
+            // Turn on BUILTIN authentication   &amp;lt;-------&lt;br/&gt;
+            cs = conn.prepareCall(&lt;br/&gt;
+                &quot;CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(?, ?)&quot;);&lt;br/&gt;
+            &lt;br/&gt;
+            cs.setString(1, &quot;derby.connection.requireAuthentication&quot;);&lt;br/&gt;
+            cs.setString(2, &quot;false&quot;);&lt;br/&gt;
---------------------------&lt;/p&gt;

&lt;p&gt;I agree with your responses for #c and #4 in your previous comment to filing jiras for the issues found.   &lt;/p&gt;

&lt;p&gt;Thanks for the great work. &lt;br/&gt;
Sunitha.&lt;/p&gt;</comment>
                            <comment id="12426727" author="forsini" created="Tue, 8 Aug 2006 22:40:23 +0100"  >&lt;p&gt;Many thanks Sunitha for looking at v4 and catching these - I&apos;m going to take care of 1) and 2) and post a v5 diffs based on the latest on main.&lt;/p&gt;

&lt;p&gt;Cheers.&lt;/p&gt;</comment>
                            <comment id="12426867" author="forsini" created="Wed, 9 Aug 2006 08:47:08 +0100"  >&lt;p&gt;Sunitha/Rick - Please find v5 of the diffs and stat attached.&lt;/p&gt;

&lt;p&gt;I have taken care of the latest posted comments 1) and 2)  as well as run derbyall.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12426919" author="rhillegas" created="Wed, 9 Aug 2006 14:50:38 +0100"  >&lt;p&gt;Thanks to Francois for this important feature and to Sunitha for the thoughtful review. Committed 528_diff_v5.diff at subversion revision 430056.&lt;/p&gt;</comment>
                            <comment id="12427651" author="skambha" created="Sat, 12 Aug 2006 00:33:13 +0100"  >&lt;p&gt;Hi Francois, Just wondering, if  you will be adding documentation for this feature ?  I opened a new jira for doc issue for derby.drda.securityMechanism . I did not add the strong userid password option there, because I wasnt sure if this was going to be documented.  It would be nice if and when we document this, the doc for the derby.drda.securityMechanism is also updated. &lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="12427660" author="forsini" created="Sat, 12 Aug 2006 01:19:06 +0100"  >&lt;p&gt;Hi Sunitha,&lt;/p&gt;

&lt;p&gt;I have updated the documentation but it is in HTML format - I don&apos;t know how to update the documentation for Derby yet - What I wanted to do is post the updated HTML for the 10.2 guides posted thus far (per page being affected) and see if someone could help getting this updated in the doc trunk...&lt;/p&gt;

&lt;p&gt;This feature definitely needs to be documented...&lt;/p&gt;

&lt;p&gt;I&apos;m going to post the changes.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;--francois&lt;/p&gt;</comment>
                            <comment id="12430331" author="forsini" created="Thu, 24 Aug 2006 22:13:56 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1747&quot; title=&quot;Documentation for 10.2 Strong Password Substitute feature&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1747&quot;&gt;&lt;del&gt;DERBY-1747&lt;/del&gt;&lt;/a&gt; is the documentation JIRA for this feature.&lt;/p&gt;</comment>
                            <comment id="12436968" author="fuzzylogic" created="Fri, 22 Sep 2006 19:50:38 +0100"  >&lt;p&gt;Marking resolved, merged to 10.2 with revision 436936.&lt;/p&gt;</comment>
                            <comment id="12551285" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:42 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335464" name="528_SecMec_Testing_Table.txt" size="8771" author="forsini" created="Thu, 15 Jun 2006 03:20:16 +0100"/>
                            <attachment id="12335462" name="528_diff_v1.txt" size="145574" author="forsini" created="Thu, 15 Jun 2006 03:16:44 +0100"/>
                            <attachment id="12336802" name="528_diff_v2.txt" size="197632" author="forsini" created="Thu, 13 Jul 2006 18:32:48 +0100"/>
                            <attachment id="12337125" name="528_diff_v3.txt" size="250858" author="forsini" created="Tue, 18 Jul 2006 22:21:26 +0100"/>
                            <attachment id="12338309" name="528_diff_v4.txt" size="269040" author="forsini" created="Mon, 7 Aug 2006 20:09:09 +0100"/>
                            <attachment id="12338451" name="528_diff_v5.txt" size="268486" author="forsini" created="Wed, 9 Aug 2006 08:47:08 +0100"/>
                            <attachment id="12335463" name="528_stat_v1.txt" size="1312" author="forsini" created="Thu, 15 Jun 2006 03:17:50 +0100"/>
                            <attachment id="12336801" name="528_stat_v2.txt" size="1531" author="forsini" created="Thu, 13 Jul 2006 18:32:48 +0100"/>
                            <attachment id="12337124" name="528_stat_v3.txt" size="1717" author="forsini" created="Tue, 18 Jul 2006 22:21:26 +0100"/>
                            <attachment id="12338308" name="528_stat_v4.txt" size="1822" author="forsini" created="Mon, 7 Aug 2006 20:09:09 +0100"/>
                            <attachment id="12338450" name="528_stat_v5.txt" size="1717" author="forsini" created="Wed, 9 Aug 2006 08:47:08 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10361"><![CDATA[Security]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Sep 2005 03:43:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29593</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0svz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38498</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>