<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:07:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-966/DERBY-966.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-966] creating a preparedStatement outside of a Global tran using a ClientXADatasource  will result in an &quot;SqlException: Cannot set holdability&quot;  if the statement  is used in a Global transaction</title>
                <link>https://issues.apache.org/jira/browse/DERBY-966</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;creating a preparedStatement outside of a Global tran using &lt;br/&gt;
an xa datasource will result in an exception if the statement &lt;br/&gt;
is used in a Global (i.e. xa transaction).  &lt;/p&gt;

&lt;p&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-346&quot; title=&quot;running jdbcapi/xaSimplePostive.sql under the DerbyNetClient framework gives   error &amp;quot;Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-346&quot;&gt;&lt;del&gt;DERBY-346&lt;/del&gt;&lt;/a&gt;  and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt; may be relevant to this issue.&lt;/p&gt;


&lt;p&gt;User noted &lt;br/&gt;
1) setting the holdability on the connection to &lt;br/&gt;
CLOSE_CURSORS_AT_COMMIT doesn&apos;t seem to be taken affect, since &lt;/p&gt;

&lt;p&gt;the problem is observed to happen even if I set the the &lt;br/&gt;
holdability to CLOSE_CURSORS_AT_COMMIT before creating the &lt;br/&gt;
statement. (maybe another bug)&lt;/p&gt;

&lt;p&gt;2) setting the holdability to close_cursor_at_commit on the PS &lt;br/&gt;
when creating it, doesn&apos;t seem to be affecting the outcome, &lt;br/&gt;
this, not sure its even honored (maybe another bug)&lt;/p&gt;

&lt;p&gt;Test case is below:&lt;/p&gt;


&lt;p&gt;import java.sql.Connection;&lt;br/&gt;
import java.sql.PreparedStatement;&lt;br/&gt;
import java.sql.ResultSet;&lt;br/&gt;
import java.sql.SQLException;&lt;br/&gt;
import java.sql.Statement;&lt;/p&gt;

&lt;p&gt;import javax.sql.XAConnection;&lt;br/&gt;
import javax.transaction.xa.XAException;&lt;br/&gt;
import javax.transaction.xa.XAResource;&lt;br/&gt;
import javax.transaction.xa.Xid;&lt;/p&gt;

&lt;p&gt;import com.ibm.db2.jcc.DB2Xid;&lt;/p&gt;

&lt;p&gt;class CursorHoldProblem&lt;br/&gt;
{&lt;/p&gt;


&lt;p&gt;	public static PreparedStatement pstmt = null;&lt;br/&gt;
    public static void main (String args [])throws Exception {&lt;br/&gt;
    	org.apache.derby.jdbc.ClientXADataSource ds = new &lt;br/&gt;
		org.apache.derby.jdbc.ClientXADataSource();&lt;/p&gt;

&lt;p&gt;    	System.out.println(&quot;getting connection&quot;);&lt;br/&gt;
    	ds.setDatabaseName(&quot;sample&quot;);&lt;br/&gt;
		//ds.setTraceFile(&quot;trace.out&quot;);&lt;br/&gt;
		ds.setConnectionAttributes(&quot;create=true&quot;);&lt;br/&gt;
        conn1 = ds.getConnection();&lt;/p&gt;

&lt;p&gt;System.out.println(conn1.getMetaData().getDatabaseProductVersion&lt;br/&gt;
());&lt;/p&gt;

&lt;p&gt;        PreparedStatement ps1 = null;&lt;br/&gt;
         try&lt;br/&gt;
         &lt;/p&gt;
{
        	 System.out.println(&quot;creating  table&quot;);
             ps1 = conn1.prepareStatement(&quot;CREATE TABLE TAB1(COL1 INT NOT NULL)&quot;);
             ps1.executeUpdate();
        	 System.out.println(&quot;done creating  table&quot;);
             conn1.commit ();
         }
&lt;p&gt; catch (SQLException x)&lt;/p&gt;
         {
             System.out.println (&quot;table already exists&quot;);
             conn1.commit();
         }


&lt;p&gt;         XAConnection pc1 = ds.getXAConnection();&lt;br/&gt;
         XAResource xar1 = pc1.getXAResource();&lt;br/&gt;
         Xid xid1 = createXid(11);&lt;br/&gt;
         Connection conn = pc1.getConnection();&lt;/p&gt;

&lt;p&gt;         System.out.println(&quot;get Holidability returning: &quot; +  &lt;br/&gt;
conn.getHoldability());&lt;br/&gt;
        conn.setHoldability(ResultSet.CLOSE_CURSORS_AT_COMMIT); &lt;br/&gt;
   //==&amp;gt; setting this has no affect  &lt;/p&gt;

&lt;p&gt;        doSelect(conn, 23);&lt;/p&gt;

&lt;p&gt;        xar1.start(xid1, XAResource.TMNOFLAGS);&lt;/p&gt;

&lt;p&gt;        doSomeWork1(conn, 66);&lt;br/&gt;
        doSelect(conn, 50);&lt;/p&gt;

&lt;p&gt;        xar1.end(xid1, XAResource.TMSUCCESS);&lt;/p&gt;

&lt;p&gt;        int prp1 = xar1.prepare(xid1);&lt;br/&gt;
        System.out.println(&quot;prp1 is: &quot; + prp1);&lt;/p&gt;

&lt;p&gt;        if (prp1 == XAResource.XA_OK)&lt;br/&gt;
           xar1.commit(xid1, false);&lt;br/&gt;
       }&lt;/p&gt;

&lt;p&gt;    private static void doSomeWork1(Connection conn, int &lt;br/&gt;
deptno) throws SQLException &lt;/p&gt;
    {
        Statement stmt = conn.createStatement();
        int cnt = stmt.executeUpdate(&quot;INSERT INTO tab1 VALUES (&quot; + deptno + &quot;)&quot;);
        System.out.println(&quot;No of rows Affected &quot; + cnt);
        stmt.close();
        stmt = null;
    }

&lt;p&gt;    private static void doSelect(Connection conn, int deptno) &lt;br/&gt;
throws SQLException &lt;br/&gt;
    {&lt;/p&gt;

&lt;p&gt;        if (pstmt == null)&lt;br/&gt;
        	pstmt = conn.prepareStatement(&quot;select * from tab1&quot;);&lt;br/&gt;
        ResultSet rset1 = pstmt.executeQuery();&lt;br/&gt;
        while (rset1.next())&lt;/p&gt;
       {
       	System.out.println(&quot;==&amp;gt;: &quot; + rset1.getString(1));
        break;
       }        
&lt;p&gt;    }&lt;/p&gt;


&lt;p&gt;    static Xid createXid(int bids) throws XAException &lt;/p&gt;
{
        byte[] gid = new byte[1];
        gid[0] = (byte) 9;
        byte[] bid = new byte[1];
        bid[0] = (byte) bids;
        byte[] gtrid = new byte[64];
        byte[] bqual = new byte[64];
        System.arraycopy(gid, 0, gtrid, 0, 1);
        System.arraycopy(bid, 0, bqual, 0, 1);
        Xid xid = new DB2Xid(0x1234, gtrid, bqual);
        return xid;
    }
&lt;p&gt;      &lt;br/&gt;
}&lt;/p&gt;</description>
                <environment></environment>
        <key id="12328903">DERBY-966</key>
            <summary>creating a preparedStatement outside of a Global tran using a ClientXADatasource  will result in an &quot;SqlException: Cannot set holdability&quot;  if the statement  is used in a Global transaction</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djd">Daniel John Debrunner</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Feb 2006 03:56:37 +0000</created>
                <updated>Tue, 25 Apr 2006 04:54:58 +0100</updated>
                            <resolved>Tue, 25 Apr 2006 04:54:58 +0100</resolved>
                                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12366837" author="djd" created="Sat, 18 Feb 2006 04:26:00 +0000"  >&lt;p&gt;Need to run embedded xa tests against client as well&lt;/p&gt;</comment>
                            <comment id="12366839" author="djd" created="Sat, 18 Feb 2006 04:26:23 +0000"  >&lt;p&gt;Need to run embedded xa tests against client as well&lt;/p&gt;</comment>
                            <comment id="12367407" author="djd" created="Thu, 23 Feb 2006 05:37:38 +0000"  >&lt;p&gt;The bug is that the holdability of the connection or statement is being ignored by Derby for client connections&lt;br/&gt;
when the connection is obtained from an XA data source.&lt;/p&gt;

&lt;p&gt;Statements that are created with holdability  HOLD_CURSORS_OVER_COMMIT  while in the local transaction should throw errors if they are used in the global transaction as holdable cursors are not supported there.&lt;/p&gt;</comment>
                            <comment id="12367429" author="djd" created="Thu, 23 Feb 2006 07:35:37 +0000"  >&lt;p&gt;1) Change DRDAStatement to use the EngineConnection.prepareStatement() method that has a holdability parameter. This ensures prepares on a connection that was obtained from a XADataSource (or a ConnectionPoolDataSource) do not lose the holdability requested by the application.&lt;/p&gt;

&lt;p&gt;2) Change the client&apos;s state of holdability to match the embedded in that a Connection&apos;s holdability is set to close cursors on commit when it has an active global XA transaction.&lt;/p&gt;

&lt;p&gt;Passes derbyall, gives the correct behaviour when running the derby966 tests in XATest against the client. This test needs a little more work&lt;br/&gt;
and a couple of client XA fixes before running in derbynetclientmats can be enabled.&lt;/p&gt;

&lt;p&gt;Patch addresses this issue completely.&lt;/p&gt;</comment>
                            <comment id="12367443" author="djd" created="Thu, 23 Feb 2006 08:16:29 +0000"  >&lt;p&gt;This will be fixed by the patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-966&quot; title=&quot;creating a preparedStatement outside of a Global tran using a ClientXADatasource  will result in an &amp;quot;SqlException: Cannot set holdability&amp;quot;  if the statement  is used in a Global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-966&quot;&gt;&lt;del&gt;DERBY-966&lt;/del&gt;&lt;/a&gt;. Confirmed by testing with XATest.java with the client.&lt;/p&gt;</comment>
                            <comment id="12367579" author="kmarsden" created="Fri, 24 Feb 2006 06:53:30 +0000"  >&lt;p&gt;Thanks Dan for fixing this issue.  The change looks good to me.&lt;/p&gt;

&lt;p&gt;I got a little confused wondering why the code you took out of computeFeatureSet was ever there to start with.  Usually that method is used to set supportsXXX fields that differentiate behaviour based on server versions.&lt;/p&gt;</comment>
                            <comment id="12368452" author="djd" created="Thu, 2 Mar 2006 13:54:32 +0000"  >&lt;p&gt;svn commit   #380278 resolved this issue. Had a typo in the issue number in the svm commit comment, entered &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-996&quot; title=&quot;storetests/st_derby715.java fails in J2ME in 10.1 branch&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-996&quot;&gt;&lt;del&gt;DERBY-996&lt;/del&gt;&lt;/a&gt; instead of 966.&lt;/p&gt;</comment>
                            <comment id="12369100" author="djd" created="Tue, 7 Mar 2006 07:41:13 +0000"  >&lt;p&gt;fixed in 10.1 branch and trunk&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12311893">DERBY-434</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12311894">DERBY-435</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12329142">DERBY-1005</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12323295" name="derby966_diff.txt" size="21106" author="djd" created="Thu, 23 Feb 2006 07:35:37 +0000"/>
                            <attachment id="12323296" name="derby966_status.txt" size="465" author="djd" created="Thu, 23 Feb 2006 07:35:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 18 Feb 2006 04:26:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22224</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16mf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40723</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>