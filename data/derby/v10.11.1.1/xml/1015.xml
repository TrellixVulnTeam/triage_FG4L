<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1015/DERBY-1015.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1015] Define interface between network server and engine through Java interfaces.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1015</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;API between the network server and engine is not well defined, leading to inconsistent &amp;amp; multiple ways of handling the different objects returned, such as reflection, explicit casting etc. This in turn has lead to bugs such as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-966&quot; title=&quot;creating a preparedStatement outside of a Global tran using a ClientXADatasource  will result in an &amp;quot;SqlException: Cannot set holdability&amp;quot;  if the statement  is used in a Global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-966&quot;&gt;&lt;del&gt;DERBY-966&lt;/del&gt;&lt;/a&gt; . &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1005&quot; title=&quot;getHoldability does not return CLOSE_CURSORS_AT_COMMIT in a global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1005&quot;&gt;&lt;del&gt;DERBY-1005&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1006&quot; title=&quot;Client allows setHoldability to HOLD_CURSORS_OVER_COMMIT  on both connection and statement in a global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1006&quot;&gt;&lt;del&gt;DERBY-1006&lt;/del&gt;&lt;/a&gt;, and access to underlying objects by the application that should be hidden.&lt;/p&gt;

&lt;p&gt;Define interfaces, such as EngineConnection, that both EmbedConnection and BrokeredConnection implement. Thus the network server can rely on the fact that any connection it obtains will implement EngineConnection, and call the required methods through that interface.&lt;/p&gt;

&lt;p&gt;Most likely will need EngineConnection, EnginePreparedStatement and EngineResultSet.. These interfaces would be internal to derby and not exposed to applications.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12329269">DERBY-1015</key>
            <summary>Define interface between network server and engine through Java interfaces.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djd">Daniel John Debrunner</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Feb 2006 02:34:32 +0000</created>
                <updated>Tue, 20 Mar 2007 23:38:37 +0000</updated>
                            <resolved>Fri, 14 Jul 2006 18:59:36 +0100</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12412847" author="skambha" created="Tue, 23 May 2006 08:31:41 +0100"  >&lt;p&gt;I am proposing the following interface for the EnginePreparedStatement for use in the network server. &lt;/p&gt;

&lt;p&gt;snippet:&lt;/p&gt;

&lt;p&gt;+public interface EnginePreparedStatement extends PreparedStatement &lt;/p&gt;
{
+ 
+ /**
+  * Immitate the function in JDBC 3.0
+  *
+  * Retrieves the number, types and properties of this PreparedStatement
+  * object&apos;s parameters.
+  *
+  * @return a EmbedParameterSetMetaData object that contains information about the
+  * number, types and properties of this PreparedStatement object&apos;s parameters.
+  * @exception SQLException if a database access error occurs
+    */
+    public EmbedParameterSetMetaData getEmbedParameterSetMetaData()
+    throws SQLException;
+    
+    
+}

&lt;p&gt;EmbedPreparedStatement implements EnginePreparedStatement&lt;br/&gt;
BrokeredPreparedStatement implements EnginePreparedStatement&lt;/p&gt;

&lt;p&gt;Thoughts/comments ?   Thanks.&lt;/p&gt;</comment>
                            <comment id="12412857" author="djd" created="Tue, 23 May 2006 11:28:58 +0100"  >&lt;p&gt;I wonder if this new interface should be returning EmbedParameterSetMetaData or should an interface be defined for the parameter meta data? Of course once jdk 1.3 stops being supported the returned type could be the regular JDBD class.&lt;/p&gt;</comment>
                            <comment id="12418344" author="skambha" created="Thu, 29 Jun 2006 08:04:49 +0100"  >&lt;p&gt;Thanks for the feedbac, Dan. &lt;/p&gt;

&lt;p&gt;Looking at this some more, I think it is better to define a new interface for ParameterMetaData for the following reasons:&lt;br/&gt;
&amp;#8211; no need to import a impl class in iapi &lt;br/&gt;
&amp;#8211; this implementation seems clean for use in server. &lt;/p&gt;

&lt;p&gt;So the new interface EnginePreparedStatement will return EngineParameterMetaData instead of EmbedParameterSetMetaData.&lt;/p&gt;

&lt;p&gt;Here are the two interfaces I am proposing:  &lt;/p&gt;

&lt;p&gt;NEW INTERFACE: EngineParameterMetaData&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;An internal api only, mainly for use in the network server.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;This interface imitates the ParameterMetaData interface from JDBC3.0&lt;/li&gt;
	&lt;li&gt;We want to provide the ParameterMetaData functionality to JDKs before JDBC3.0.&lt;/li&gt;
	&lt;li&gt;org.apache.derby.iapi.jdbc.EnginePreparedStatement interface returns an object&lt;/li&gt;
	&lt;li&gt;of this type on a getEmbedParameterSetMetaData&lt;/li&gt;
	&lt;li&gt;Once,JDK1.3 stops being supported, this interface can be removed and&lt;/li&gt;
	&lt;li&gt;instead the JDBC 3.0 class ParameterMetaData can be used&lt;br/&gt;
 */&lt;br/&gt;
public interface EngineParameterMetaData  
{
    public int getParameterCount();
    public int isNullable(int param) throws SQLException;
    public boolean isSigned(int param) throws SQLException;
    public int getPrecision(int param) throws SQLException;        
    public int getScale(int param) throws SQLException;
    public int getParameterType(int param) throws SQLException;
    public String getParameterTypeName(int param) throws SQLException;
    public String getParameterClassName(int param) throws SQLException;
    public int getParameterMode(int param) throws SQLException;
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(Note: javadoc comments for the methods will be added in the actual patch)&lt;/p&gt;

&lt;p&gt;EmbedParameterSetMetaData implements EngineParameterMetaData&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
NEW INTERFACE: EnginePreparedStatement&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Additional methods the embedded engine exposes on its&lt;/li&gt;
	&lt;li&gt;PreparedStatement object implementations. An internal api only, mainly&lt;/li&gt;
	&lt;li&gt;for the network server. Allows consistent interaction between embedded&lt;/li&gt;
	&lt;li&gt;PreparedStatement and Brokered PreparedStatements.&lt;/li&gt;
	&lt;li&gt;&lt;p&gt; */&lt;br/&gt;
public interface EnginePreparedStatement extends PreparedStatement &lt;/p&gt;
{
    
    /**
     * Immitate the getParameterMetaData() that is in JDBC 3.0
     * Once,JDK1.3 stops being supported, instead of returning EngineParameterMetaData
     * the JDBC 3.0 Class - ParameterMetaData can be used.
     *
     * Retrieves the number, types and properties of this PreparedStatement
     * object&apos;s parameters.
     *
     * @return a EngineParameterMetaData object that contains information about the
     * number, types and properties of this PreparedStatement object&apos;s parameters.
     * @exception SQLException if a database access error occurs
     */
    public EngineParameterMetaData getEmbedParameterSetMetaData()
        throws SQLException;
    
}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;EmbedPreparedStatement implements EnginePreparedStatement&lt;br/&gt;
BrokeredPreparedStatement implements EnginePreparedStatement &lt;br/&gt;
--------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Thoughts/comments ? Thanks. &lt;/p&gt;</comment>
                            <comment id="12419382" author="skambha" created="Thu, 6 Jul 2006 09:27:11 +0100"  >&lt;p&gt;I have been looking at derby1015 in context of fixing derby-1227. I am attaching a patch &apos;derby1015.diff.txt&apos; and corresponding &apos;derby1015.stat.txt&apos; for feedback.&lt;/p&gt;

&lt;p&gt;&amp;#8211; This patch is a partial fix for the issues mentioned in derby-1015.  Partial since, it only defines new interface for the PreparedStatement and ParameterMetaData. &lt;/p&gt;

&lt;p&gt;This patch does the following&lt;/p&gt;

&lt;p&gt;1) Defines two new interfaces for use in network server. &lt;/p&gt;

&lt;p&gt;EnginePreparedStatement - This will be used to get a consistent interaction between the BrokeredPreparedStatement and the EmbedPreparedStatement&lt;br/&gt;
EngineParameterMetaData - This interface is defined for the ParameterMetaData.&lt;/p&gt;

&lt;p&gt;EmbedPreparedStatement implements EnginePreparedStatement&lt;br/&gt;
BrokeredPreparedStatement implements EnginePreparedStatement&lt;br/&gt;
EmbedParameterSetMetaData implements EngineParameterMetaData&lt;/p&gt;

&lt;p&gt;The interface details are as mentioned in the previous comment. &lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-1015#action_12418344&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-1015#action_12418344&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;2) Code changes to make use of the newly defined interfaces in the network server.  &lt;/p&gt;

&lt;p&gt;svn stat:&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\EmbedPreparedStatement.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\EmbedParameterSetMetaData.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\jdbc\BrokeredPreparedStatement.java&lt;br/&gt;
A      java\engine\org\apache\derby\iapi\jdbc\EngineParameterMetaData.java&lt;br/&gt;
A      java\engine\org\apache\derby\iapi\jdbc\EnginePreparedStatement.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\DRDAStatement.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\DRDAConnThread.java&lt;/p&gt;


&lt;p&gt;I ran derbyall on linux/ibm142 and tests ran OK.&lt;/p&gt;

&lt;p&gt;I looked at the code coverage for the code snippet in derby-1227 and I see that our current tests already exercise that codepath.  Not sure how best to address testing for this patch.  I&apos;d appreciate suggestions/feedback.&lt;/p&gt;

&lt;p&gt;I tried to run javadoc to verify if all the javadoc comments were ok, but  have not been successful in getting it to work.   I&apos;ll look at my setup again.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="12420156" author="skambha" created="Tue, 11 Jul 2006 03:18:38 +0100"  >&lt;p&gt;I am attaching a phase 2 patch ( derby1015.p2.diff.txt, derby1015.p2.stat.txt)  to address adding the new interface for ResultSet.  &lt;/p&gt;

&lt;p&gt;This patch derby1015.p2.diff.txt  can be applied independently of the derby1015.diff.txt.   &lt;/p&gt;

&lt;p&gt;The changes in this patch include&lt;br/&gt;
&amp;#8211; add a new interface EngineResultSet  for use in Network Server&lt;br/&gt;
&amp;#8211;  make changes in network server code to make use of this interface instead of EmbedResultSet.&lt;/p&gt;

&lt;p&gt;Ran derbyall on linux/ibm142 OK on linux. &lt;/p&gt;

&lt;p&gt;Can someone please review this patch.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12420160" author="skambha" created="Tue, 11 Jul 2006 03:36:34 +0100"  >&lt;p&gt;Please note, there are two pending patches waiting for review. &lt;br/&gt;
derby1015.diff.txt, derby1015.p2.diff.txt.&lt;/p&gt;

&lt;p&gt;These two patches will cover the case of adding new interfaces for PreparedStatement, ResultSet, ParameterMetaData and make use of these interfaces in the server code. &lt;/p&gt;

&lt;p&gt;Since Dan already added the new interfaces for Statement and Connection., I believe with these two patches(derby1015.diff.txt, derby1015.p2.diff.txt), the cases mentioned in the jira description will be covered.   &lt;/p&gt;

&lt;p&gt;As an aside, I did a search for Embed* in drda code and came across cases where the server code uses EmbedSQLException. I wonder if the server should be using EmbedSQLException or should a interface be defined for use in the server.  Comments/Thoughts ?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12420677" author="davidvc" created="Thu, 13 Jul 2006 01:03:27 +0100"  >&lt;p&gt;I looked at the patches, and they look quite good, very simple and direct, and creating what I think is a very useful and important abstraction between the network server and the engine.  &lt;/p&gt;

&lt;p&gt;I think it would be good to complete the abstraction and not depend directly on any engine classes, including EmbedSQLException, but I would argue that should be a separate JIRA.&lt;/p&gt;

&lt;p&gt;I&apos;ll work on getting this committed.&lt;/p&gt;</comment>
                            <comment id="12420702" author="djd" created="Thu, 13 Jul 2006 02:23:07 +0100"  >&lt;p&gt;Since David is further ahead than me here I will defer to him for the commit&lt;/p&gt;</comment>
                            <comment id="12420740" author="davidvc" created="Thu, 13 Jul 2006 06:04:53 +0100"  >&lt;p&gt;Committed revision 421435.  Passes derbynetclientmats on JDK 1.5&lt;/p&gt;</comment>
                            <comment id="12420749" author="skambha" created="Thu, 13 Jul 2006 07:29:05 +0100"  >&lt;p&gt;Thanks David for the review and commit.  The # 421435  revision number only took care of the derby1015.diff.txt .  That commit missed adding two files EnginePreparedStatement and EngineParameterMetaData. &lt;/p&gt;

&lt;p&gt;I am opening this issue, because there is another patch that needs to be committed. derby1015.p2.diff.txt.   &lt;/p&gt;

&lt;p&gt;Can someone commit this too if it looks ok.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12420750" author="davidvc" created="Thu, 13 Jul 2006 07:36:47 +0100"  >&lt;p&gt;I will take care of committing the second patch as well.&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12421178" author="skambha" created="Fri, 14 Jul 2006 18:59:36 +0100"  >&lt;p&gt;This issue has been fixed.  &lt;/p&gt;

&lt;p&gt;The two patches (derby1015.diff.txt, derby1015.p2.diff.txt) were committed as &lt;br/&gt;
URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=421435&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=421435&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=421460&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=421460&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=421497&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=421497&amp;amp;view=rev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;There are many  more commits that happened for this issue by dan. Please see the subversion commit view  for all the changes related to this jira.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12336617" name="Derby1015.p2.diff.txt" size="3224" author="skambha" created="Tue, 11 Jul 2006 03:18:38 +0100"/>
                            <attachment id="12336396" name="derby1015.diff.txt" size="20087" author="skambha" created="Thu, 6 Jul 2006 09:27:11 +0100"/>
                            <attachment id="12336618" name="derby1015.p2.stat.txt" size="199" author="skambha" created="Tue, 11 Jul 2006 03:18:38 +0100"/>
                            <attachment id="12336397" name="derby1015.stat.txt" size="512" author="skambha" created="Thu, 6 Jul 2006 09:27:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 23 May 2006 07:31:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29817</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy12s7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40101</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>