<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:38:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4932/DERBY-4932.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4932] Move the StringColumnVTI to the public api</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4932</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have found StringColumnVTI to be a very useful class for removing the drudgery of writing a table function. I would like to move it to move it into the package with the other public vti machinery and then expose it as part of Derby&apos;s public api.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12492533">DERBY-4932</key>
            <summary>Move the StringColumnVTI to the public api</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Dec 2010 19:15:48 +0000</created>
                <updated>Tue, 19 Apr 2011 13:39:13 +0100</updated>
                            <resolved>Fri, 10 Dec 2010 16:53:17 +0000</resolved>
                                                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>Javadoc</component>
                    <component>SQL</component>
                    <component>Tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12968377" author="rhillegas" created="Mon, 6 Dec 2010 19:39:26 +0000"  >&lt;p&gt;Attaching derby-4932-01-aa-exposeVTITemplate.diff. This patch exposes the VTITemplate class as the first step toward publishing the StringColumnVTI. Committed at subversion revision 1042768.&lt;/p&gt;

&lt;p&gt;10.4 was the first release to expose table functions. It was also the first release which exposed classes in the org.apache.derby.vti package. The first classes from that package which were exposed were VTICosting and VTIEnvironment. In 10.6 we also exposed the classes needed to implement restricted table functions: RestrictedVTI and the Restriction classes.&lt;/p&gt;

&lt;p&gt;I think that we should have exposed VTITemplate when we introduced user-written table functions. That class was described in the Cloudscape 3.5 Developer&apos;s Guide.&lt;/p&gt;

&lt;p&gt;A future enhancement would be to write a more extensive tutorial on how to write table functions.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/VTITemplate.java&lt;/p&gt;

&lt;p&gt;Minor tweaks to clarify that VTITemplate is useful for writing new-style table functions as well as old-style VTIs.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      tools/javadoc/publishedapi.ant&lt;/p&gt;

&lt;p&gt;Added VTITemplate to the list of public Derby classes.&lt;/p&gt;</comment>
                            <comment id="12968412" author="rhillegas" created="Mon, 6 Dec 2010 21:09:08 +0000"  >&lt;p&gt;Attaching derby-4932-02-aa-moveStringColumnVTI.diff. This patch moves StringColumnVTI from its test package to the public api. I am running regression tests now.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/vti/StringColumnVTI.java&lt;br/&gt;
D      java/testing/org/apache/derbyTesting/functionTests/tests/lang/StringColumnVTI.java&lt;/p&gt;

&lt;p&gt;Moves the class. Makes StringColumnVTI use the Harmony LOBs rather than its own, cruder implementations. Also stubs out the getMetaData() method which is not needed for table functions.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/build.xml&lt;/p&gt;

&lt;p&gt;Wires StringColumnVTI into the 1.4 build of this package.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      tools/javadoc/publishedapi.ant&lt;/p&gt;

&lt;p&gt;Adds StringColumnVTI to the public api.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/types/HarmonySerialBlob.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/types/HarmonySerialClob.java&lt;/p&gt;

&lt;p&gt;Corrects the header comments for these classes.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/StringArrayVTI.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/AnsiSignatures.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java&lt;/p&gt;

&lt;p&gt;Various changes to reflect the fact that StringColumnVTI moved and its crude LOB implementations have been removed.&lt;/p&gt;</comment>
                            <comment id="12968464" author="dagw" created="Mon, 6 Dec 2010 22:54:35 +0000"  >&lt;p&gt;&amp;gt; I think that we should have exposed VTITemplate when we introduced&lt;br/&gt;
&amp;gt; user-written table functions. That class was described in the&lt;br/&gt;
&amp;gt; Cloudscape 3.5 Developer&apos;s Guide.  A future enhancement would be to&lt;br/&gt;
&amp;gt; write a more extensive tutorial on how to write table functions.&lt;/p&gt;

&lt;p&gt;Both seem good. +1&lt;/p&gt;
</comment>
                            <comment id="12968472" author="knutanders" created="Mon, 6 Dec 2010 23:07:01 +0000"  >&lt;p&gt;Sounds like a useful improvement to me too.&lt;/p&gt;

&lt;p&gt;We also have a copy of StringColumnVTI.java in the demo tree. Should we update the demos to use the public class instead?&lt;/p&gt;</comment>
                            <comment id="12968730" author="rhillegas" created="Tue, 7 Dec 2010 13:35:23 +0000"  >&lt;p&gt;Thanks for your comments, Dag and Knut. I agree that it would be good to use the public version in the demo and retire the version there.&lt;/p&gt;</comment>
                            <comment id="12968790" author="rhillegas" created="Tue, 7 Dec 2010 15:35:33 +0000"  >&lt;p&gt;Attaching derby-4932-02-ab-moveStringColumnVTI.diff. The first rev of this patch passed derbyall. However, the JUnit tests bombed at the outset on an InvocationTargetException raised because StringColumnVTI wasn&apos;t included in the engine jar. This second rev of the patch adds StringColumnVTI to the engine jar. I am re-running the JUnit tests.&lt;/p&gt;

&lt;p&gt;This patch touches the following additional file:&lt;/p&gt;

&lt;p&gt;-----------&lt;/p&gt;

&lt;p&gt;M      tools/jar/extraDBMSclasses.properties&lt;/p&gt;

&lt;p&gt;Adds StringColumnVTI to the list of extra classes which need to be included in the engine jar.&lt;/p&gt;</comment>
                            <comment id="12968816" author="rhillegas" created="Tue, 7 Dec 2010 16:43:41 +0000"  >&lt;p&gt;JUnit tests ran cleanly for me. Committed derby-4932-02-ab-moveStringColumnVTI.diff at subversion revision 1043122.&lt;/p&gt;</comment>
                            <comment id="12968821" author="rhillegas" created="Tue, 7 Dec 2010 17:06:10 +0000"  >&lt;p&gt;Attaching derby-4932-03-aa-useInMemoryDBinDemos.diff. Before changing the demo vtis to use the new StringColumnVTI, I thought it would be good to cleanup the existing demo scripts. This patch makes the demo scripts use an in-memory database. Committed at subversion revision 1043130.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/demo/vtis/sql/demoFileVtis.sql&lt;br/&gt;
M      java/demo/vtis/sql/demoForeignDbmsVtis.sql&lt;/p&gt;</comment>
                            <comment id="12968894" author="rhillegas" created="Tue, 7 Dec 2010 19:09:57 +0000"  >&lt;p&gt;Attaching derby-4932-04-aa-retireDemoVersion.diff. This patch removes the demo version of StringColumnVTI. I will run the regression tests.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/StringColumnVTI.java&lt;/p&gt;

&lt;p&gt;Add some accessors to expose column name information which some subclasses need.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;D      java/demo/vtis/java/org/apache/derbyDemo/vtis/core/StringColumnVTI.java&lt;/p&gt;

&lt;p&gt;Retire this class.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/demo/vtis/java/org/apache/derbyDemo/vtis/core/XmlVTI.java&lt;br/&gt;
M      java/demo/vtis/java/org/apache/derbyDemo/vtis/example/DerbyJiraReportVTI.java&lt;/p&gt;

&lt;p&gt;Use new accessors to look up column names.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/demo/vtis/java/org/apache/derbyDemo/vtis/core/FlatFileVTI.java&lt;/p&gt;

&lt;p&gt;Extend public version of StringColumnVTI.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/demo/vtis/java/org/apache/derbyDemo/vtis/example/ApacheServerLogVTI.java&lt;/p&gt;

&lt;p&gt;Eliminate the need for a setWasNull() method.&lt;/p&gt;</comment>
                            <comment id="12969100" author="rhillegas" created="Wed, 8 Dec 2010 00:45:21 +0000"  >&lt;p&gt;Tests passed cleanly for me except for the ping test. Committed derby-4932-04-aa-retireDemoVersion.diff at subversion revision 1043245.&lt;/p&gt;</comment>
                            <comment id="12969460" author="rhillegas" created="Wed, 8 Dec 2010 20:05:14 +0000"  >&lt;p&gt;Attaching derby-4932-05-aa-addJDBC4.0versions.diff. This patch adds JDBC 4.0 versions of VTITemplate and StringColumnVTI. I will run regression tests.&lt;/p&gt;

&lt;p&gt;The VTITemplate and StringColumnVTI classes implement the JDBC 3.0 version of ResultSet. If you extend these classes, adding just the methods described in their header contract, the resulting classes will not compile on Java 6 because they lack stubs for the new methods introduced by JDBC 4.0. This patch introduces VTITemplate40 and StringColumnVTI40. The new classes provide stubs for the methods introduced by JDBC 4.0.&lt;/p&gt;

&lt;p&gt;In addition, now VTITemplate and StringColumnVTI appear only in the JDBC3 version of Derby&apos;s public api. The JDBC4 version contains the *40 equivalents.&lt;/p&gt;

&lt;p&gt;While I was in there, re-wrote VTITemplate so that the stubs throw a more informative notImplemented() exception.&lt;/p&gt;


&lt;p&gt;Note that after this patch is committed, we should hold-off closing this issue. We will want to add a couple methods to the new classes in order to satisfy the JDBC 4.1 (Java 7) contract for ResultSet.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/vti/VTITemplate40.java&lt;br/&gt;
A      java/engine/org/apache/derby/vti/StringColumnVTI40.java&lt;/p&gt;

&lt;p&gt;These classes extend their JDBC 3.0 counterparts but add the new methods introduced by JDBC 4.0.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/StringColumnVTI.java&lt;br/&gt;
M      java/engine/org/apache/derby/vti/VTITemplate.java&lt;/p&gt;

&lt;p&gt;Changed the header comments to indicate that these are the JDBC 3.0 versions. Also rewrote VTITemplate to throw more informative exceptions.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;


&lt;p&gt;M      java/engine/org/apache/derby/vti/build.xml&lt;/p&gt;

&lt;p&gt;Used the appropriate compiler level and libraries for the different JDBC levels.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      tools/javadoc/publishedapi_jdbc3.ant&lt;br/&gt;
M      tools/javadoc/publishedapi_jdbc4.ant&lt;br/&gt;
M      tools/javadoc/publishedapi.ant&lt;/p&gt;

&lt;p&gt;Made the appropriate classes appear in the JDBC3 and JDBC4 public api.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M      tools/jar/extraDBMSclasses.properties&lt;/p&gt;

&lt;p&gt;Added the new *40 classes to the engine jar file.&lt;/p&gt;</comment>
                            <comment id="12969547" author="knutanders" created="Wed, 8 Dec 2010 23:07:35 +0000"  >&lt;p&gt;That reminds me why we decided not to include a public VTI template class back when we exposed table functions...&lt;/p&gt;

&lt;p&gt;I would prefer a solution that didn&apos;t require code changes in the application when moving from one Java version to another. What about having a non-abstract super class of VTITemplate, say VTITemplateBase, that implements the full JDBC 3.0 java.sql.ResultSet interface, and making VTITemplate have abstract overrides of next(), close() and getMetaData()? I think that will stop the compiler from complaining, even if the class doesn&apos;t really implement all of the JDBC 4.0 methods.&lt;/p&gt;</comment>
                            <comment id="12969725" author="rhillegas" created="Thu, 9 Dec 2010 13:20:17 +0000"  >&lt;p&gt;That&apos;s an appealing suggestion, Knut. Thanks, I&apos;ll take a look at that.&lt;/p&gt;</comment>
                            <comment id="12969925" author="rhillegas" created="Thu, 9 Dec 2010 20:17:56 +0000"  >&lt;p&gt;Attaching derby-4932-05-ab-addJDBC4.0versions.diff. This patch implements Knut&apos;s suggestion of creating a non-abstract superclass of VTITemplate. Very sneaky. I will run regression tests.&lt;/p&gt;

&lt;p&gt;With this patch, you should be able to compile under both Java 5 and Java 6 when you extend VTITemplate and StringColumnVTI. There should be no need to add JDBC 4.1 methods to these classes either.&lt;/p&gt;

&lt;p&gt;The public api will include VTITemplate and StringColumnVTI.&lt;/p&gt;

&lt;p&gt;After applying these changes, I was able to use both the Java 5 and Java 6 compilers to build two classes which extend StringColumnVTI: PMDWrapper.java (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4927&quot; title=&quot;Create a table function to wrap ParameterMetaData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4927&quot;&gt;DERBY-4927&lt;/a&gt;) and RSMDWrapper.java (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4926&quot; title=&quot;Create a table function to wrap ResultSetMetaData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4926&quot;&gt;DERBY-4926&lt;/a&gt;). I was also able to use both compilers to build a simple class which extends VTITemplate.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;--------&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/vti/VTITemplateBase.java&lt;/p&gt;

&lt;p&gt;New complete implementation of the JDBC 3.0 ResultSet.&lt;/p&gt;

&lt;p&gt;--------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/VTITemplate.java&lt;/p&gt;

&lt;p&gt;Abstract subclass&lt;/p&gt;

&lt;p&gt;--------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/build.xml&lt;/p&gt;

&lt;p&gt;Adds VTITemplateBase to the JDBC 3.0 build.&lt;/p&gt;</comment>
                            <comment id="12969955" author="dagw" created="Thu, 9 Dec 2010 21:36:51 +0000"  >&lt;p&gt;This looks like a clear usage improvement to me. +1&lt;/p&gt;</comment>
                            <comment id="12969966" author="knutanders" created="Thu, 9 Dec 2010 22:12:06 +0000"  >&lt;p&gt;Thanks, Rick. Does it also work if we make VTITemplateBase non-public? If so, I think we should do that, since we probably don&apos;t want VTITemplateBase to be used directly.&lt;/p&gt;</comment>
                            <comment id="12969994" author="rhillegas" created="Thu, 9 Dec 2010 23:00:01 +0000"  >&lt;p&gt;Thanks for the quick feedback, Dag and Knut. The tests passed cleanly except for known instabilities in testAttributeAccumulatedConnectionCount and testPing. Committed derby-4932-05-ab-addJDBC4.0versions.diff at subversion revision 1044158. I will experiment with making VTITemplateBase non-public tomorrow.&lt;/p&gt;</comment>
                            <comment id="12970183" author="rhillegas" created="Fri, 10 Dec 2010 14:49:36 +0000"  >&lt;p&gt;Attaching derby-4932-06-aa-packageProtection.diff. This patch gives VTITemplateBase package protection, preventing users from directly extending it. I am running regression tests now.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/vti/VTITemplateBase.java&lt;/p&gt;</comment>
                            <comment id="12970231" author="rhillegas" created="Fri, 10 Dec 2010 16:52:36 +0000"  >&lt;p&gt;Test passed cleanly for me on derby-4932-06-aa-packageProtection.diff. Committed at subversion revision 1044431.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12465606" name="derby-4932-01-aa-exposeVTITemplate.diff" size="1694" author="rhillegas" created="Mon, 6 Dec 2010 19:39:26 +0000"/>
                            <attachment id="12465617" name="derby-4932-02-aa-moveStringColumnVTI.diff" size="48816" author="rhillegas" created="Mon, 6 Dec 2010 21:09:08 +0000"/>
                            <attachment id="12465697" name="derby-4932-02-ab-moveStringColumnVTI.diff" size="49564" author="rhillegas" created="Tue, 7 Dec 2010 15:35:33 +0000"/>
                            <attachment id="12465708" name="derby-4932-03-aa-useInMemoryDBinDemos.diff" size="2267" author="rhillegas" created="Tue, 7 Dec 2010 17:06:10 +0000"/>
                            <attachment id="12465724" name="derby-4932-04-aa-retireDemoVersion.diff" size="22236" author="rhillegas" created="Tue, 7 Dec 2010 19:09:57 +0000"/>
                            <attachment id="12465829" name="derby-4932-05-aa-addJDBC4.0versions.diff" size="68175" author="rhillegas" created="Wed, 8 Dec 2010 20:05:14 +0000"/>
                            <attachment id="12465940" name="derby-4932-05-ab-addJDBC4.0versions.diff" size="54619" author="rhillegas" created="Thu, 9 Dec 2010 20:17:56 +0000"/>
                            <attachment id="12465989" name="derby-4932-06-aa-packageProtection.diff" size="561" author="rhillegas" created="Fri, 10 Dec 2010 14:49:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Dec 2010 22:54:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31442</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0gmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36512</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>