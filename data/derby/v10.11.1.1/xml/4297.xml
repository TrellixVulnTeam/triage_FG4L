<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:17 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4297/DERBY-4297.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4297] &apos;compilation time did not compute (0,0,0,0) expected:&lt;16&gt; but was:&lt;0&gt;&apos; in testGroupBySortProps(....tests.lang.XplainStatisticsTest)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4297</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Seen in&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/trunk15/jvm1.5/testing/testlog/CYGWIN_NT-5.1_i686-unknown/790694-org.apache.derbyTesting.functionTests.suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/trunk15/jvm1.5/testing/testlog/CYGWIN_NT-5.1_i686-unknown/790694-org.apache.derbyTesting.functionTests.suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There was 1 failure:&lt;br/&gt;
1) testGroupBySortProps(org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest)junit.framework.AssertionFailedError: compilation time did not compute (0,0,0,0) expected:&amp;lt;16&amp;gt; but was:&amp;lt;0&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.verifySensibleStatementTimings(XplainStatisticsTest.java:707)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testGroupBySortProps(XplainStatisticsTest.java:1011)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</description>
                <environment>OS:&lt;br/&gt;
Microsoft Windows XP Professional - 5.1.2600 Service Pack 3 Build 2600&lt;br/&gt;
CYGWIN_NT-5.1 1.5.25(0.156/4/2) 2008-06-12 19:34 Cygwin&lt;br/&gt;
&lt;br/&gt;
JVM:&lt;br/&gt;
Sun Microsystems Inc.&lt;br/&gt;
java version &amp;quot;1.5.0_16&amp;quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_16-b02)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.5.0_16-b02, mixed mode, sharing)&lt;br/&gt;
</environment>
        <key id="12429462">DERBY-4297</key>
            <summary>&apos;compilation time did not compute (0,0,0,0) expected:&lt;16&gt; but was:&lt;0&gt;&apos; in testGroupBySortProps(....tests.lang.XplainStatisticsTest)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Jul 2009 13:27:58 +0100</created>
                <updated>Fri, 21 Jan 2011 17:52:30 +0000</updated>
                            <resolved>Sat, 5 Dec 2009 01:03:17 +0000</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12785735" author="bryanpendleton" created="Fri, 4 Dec 2009 03:53:57 +0000"  >&lt;p&gt;Hi Ole, I just noticed this, sorry I didn&apos;t pay attention to it before.&lt;/p&gt;

&lt;p&gt;Does this happen routinely? Or did it happen only once?&lt;/p&gt;

&lt;p&gt;The values &quot;16&quot; and &quot;0&quot; are interesting because on Windows,&lt;br/&gt;
System.currentTimeMillis returns values from the 60 Hz timer&lt;br/&gt;
which means that the values often appear to advance in &quot;jumps&quot;&lt;br/&gt;
of 16 (sometimes 15).&lt;/p&gt;

&lt;p&gt;This might be a problem in the test, which is a relatively new test,&lt;br/&gt;
or it might indicate a weakness in the compile_time measurement&lt;br/&gt;
logic in the compilation code.&lt;/p&gt;</comment>
                            <comment id="12785813" author="olesolberg" created="Fri, 4 Dec 2009 08:10:46 +0000"  >&lt;p&gt;Hi Brian, &lt;/p&gt;

&lt;p&gt;I see 9 occurences of this signature since ~2009-07-30 &lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/stats_newest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/stats_newest.html&lt;/a&gt; and the entry for 4297.&lt;/p&gt;</comment>
                            <comment id="12786002" author="bryanpendleton" created="Fri, 4 Dec 2009 17:05:37 +0000"  >&lt;p&gt;I think that this may be due to the way that &apos;compileTime&apos; is computed &lt;br/&gt;
in GenericStatement.prepMinion(). During the processing of the statement,&lt;br/&gt;
GenericStatement computes the overall time that was taken, and breaks&lt;br/&gt;
it down into various phases: parse time, bind time, optimize time, generate time,&lt;br/&gt;
and overall compileTime. It does this by calling System.currentTimeMillis() at&lt;br/&gt;
various points, and recording the value.&lt;/p&gt;

&lt;p&gt;However, I think there is a hole in the current algorithm in which, if the&lt;br/&gt;
System.currentTimeMillis clock &quot;ticks&quot; &lt;b&gt;after&lt;/b&gt; the line&lt;/p&gt;

&lt;p&gt;   generateTime = getCurrentTimeMillis(lcc);     (line 471)&lt;/p&gt;

&lt;p&gt;and &lt;b&gt;before&lt;/b&gt; the line&lt;/p&gt;

&lt;p&gt;   preparedStmt.setCompileTimeMillis(...)        (line 521)&lt;/p&gt;

&lt;p&gt;then we can have a result where compileTime != (parseTime+bindTime+optimizeTime+generateTime),&lt;br/&gt;
which is the invariant being tested by the test.&lt;/p&gt;

&lt;p&gt;I think that we may be able to fix this with the following change (not yet tested):&lt;/p&gt;

&lt;p&gt;Index: GenericStatement.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; GenericStatement.java	(revision 884222)&lt;br/&gt;
+++ GenericStatement.java	(working copy)&lt;br/&gt;
@@ -521,7 +521,7 @@&lt;br/&gt;
 						bindTime - parseTime, //bind time&lt;br/&gt;
 						optimizeTime - bindTime, //optimize time&lt;br/&gt;
 						generateTime - optimizeTime, //generate time&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getElapsedTimeMillis(beginTime),&lt;br/&gt;
+						generateTime - beginTime,//compile time&lt;br/&gt;
 						beginTimestamp,&lt;br/&gt;
 						endTimestamp);&lt;br/&gt;
 				}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m not sure how important or useful these times are, nowadays; modern&lt;br/&gt;
processors are so fast, and System.currentTimeMillis is so slow, then&lt;br/&gt;
in general the times are always (0,0,0,0).&lt;/p&gt;

&lt;p&gt;But I&apos;ll experiment with this change, and if it doesn&apos;t seem to do any harm,&lt;br/&gt;
we can see if it makes this test more reliable.&lt;/p&gt;</comment>
                            <comment id="12786056" author="knutanders" created="Fri, 4 Dec 2009 18:27:04 +0000"  >&lt;p&gt;&amp;gt; I&apos;m not sure how important or useful these times are, nowadays; modern&lt;br/&gt;
&amp;gt; processors are so fast, and System.currentTimeMillis is so slow, then&lt;br/&gt;
&amp;gt; in general the times are always (0,0,0,0). &lt;/p&gt;

&lt;p&gt;Would it make sense to change the unit to nanoseconds and use&lt;br/&gt;
System.nanoTime() on the platforms that support it?&lt;/p&gt;</comment>
                            <comment id="12786282" author="bryanpendleton" created="Sat, 5 Dec 2009 01:03:16 +0000"  >&lt;p&gt;My regression test run was clean so I decided to commit this fix so we can&lt;br/&gt;
see if it improves the behavior of the test or not.&lt;/p&gt;

&lt;p&gt;Knut, thanks for the suggestion about nanoTime. I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4462&quot; title=&quot;Use System.nanoTime on JDK 1.5 and higher to get finer precision internal measurements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4462&quot;&gt;DERBY-4462&lt;/a&gt; to track that idea.&lt;/p&gt;</comment>
                            <comment id="12790203" author="knutanders" created="Mon, 14 Dec 2009 15:22:27 +0000"  >&lt;p&gt;I believe that GenericStatement.getElapsedTimeMillis() is unused after the changes in this issue. The attached patch removes the method. I&apos;ve started the regression tests to verify that it&apos;s no longer needed.&lt;/p&gt;</comment>
                            <comment id="12790300" author="knutanders" created="Mon, 14 Dec 2009 19:14:43 +0000"  >&lt;p&gt;The regression tests passed with the method removed.&lt;br/&gt;
Committed revision 890448.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12427935" name="d4297-unused.diff" size="617" author="knutanders" created="Mon, 14 Dec 2009 15:22:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 4 Dec 2009 03:53:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24165</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0l13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37225</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>