<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6670/DERBY-6670.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6670] Rollback to savepoint allows violation of deferrable constraints</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6670</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The bug is illustrated by the following code snippet:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        Connection c = DriverManager.getConnection(&lt;span class=&quot;code-quote&quot;&gt;&quot;jdbc:derby:memory:db;create=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;);
        c.setAutoCommit(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        Statement s = c.createStatement();
        s.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;create table t1(x &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; primary key initially deferred)&quot;&lt;/span&gt;);
        s.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;insert into t1 values 1,1,1,1&quot;&lt;/span&gt;);

        Savepoint sp = c.setSavepoint();
        s.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;drop table t1&quot;&lt;/span&gt;);
        c.rollback(sp);

        &lt;span class=&quot;code-comment&quot;&gt;// Since there are four identical rows in T1, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; call should have
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// failed because the primary key was violated.
&lt;/span&gt;        c.commit();

        &lt;span class=&quot;code-comment&quot;&gt;// Instead, it succeeds, and all four rows are committed, as can
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// be seen here:
&lt;/span&gt;        ResultSet rs = s.executeQuery(&lt;span class=&quot;code-quote&quot;&gt;&quot;select * from t1&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (rs.next()) {
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(rs.getInt(1));
        }

        &lt;span class=&quot;code-comment&quot;&gt;// Insert yet another row, so that we have five identical rows ...
&lt;/span&gt;        s.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;insert into t1 values 1&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-comment&quot;&gt;// ... and now commit complains ...
&lt;/span&gt;        c.commit();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With auto-commit off, add duplicates into a deferred primary key. Then set a savepoint, drop the table, and roll back to the savepoint.&lt;/p&gt;

&lt;p&gt;Apparently, when you drop the table, information about any constraint violations seen on that table is lost, and that information is not restored when the drop table operation is undone by the rollback to savepoint.&lt;/p&gt;

&lt;p&gt;So when you commit the transaction after having rolled back the drop operation, no deferred checking of constraints happens, and the duplicates you have inserted are committed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12727966">DERBY-6670</key>
            <summary>Rollback to savepoint allows violation of deferrable constraints</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                            <label>derby_backport_reject_10_10</label>
                    </labels>
                <created>Thu, 17 Jul 2014 17:38:55 +0100</created>
                <updated>Thu, 25 Sep 2014 00:15:19 +0100</updated>
                            <resolved>Wed, 30 Jul 2014 22:54:48 +0100</resolved>
                                    <version>10.11.1.1</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14065292" author="rhillegas" created="Thu, 17 Jul 2014 19:20:44 +0100"  >&lt;p&gt;Since calling database procedures causes Derby to create an internal savepoint, this problem can also be caused by dropping the table inside a dbproc and then raising an exception. To see this, first compile the following class&#8230;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;import java.sql.*;

public class zz
{
    public  static  void    dropTable( String tableName )
        throws SQLException
    {
        Connection  conn = DriverManager.getConnection( &quot;jdbc:default:connection&quot; );

        conn.prepareStatement( &quot;drop table &quot; + tableName ).execute();

        throw new SQLException( &quot;Oh sorry, an error occurred.&quot; );
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&#8230;then run the following script&#8230;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;connect &apos;jdbc:derby:memory:db;create=true&apos;;

create procedure dropTable( tableName varchar( 128 ) )
language java parameter style java modifies sql data
external name &apos;zz.dropTable&apos;;

create table t( a int primary key initially deferred );

autocommit off;

insert into t( a ) values ( 1 ), ( 1 );

call dropTable( &apos;T&apos; );

commit;

-- table has duplicate primary key values
select * from t;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14065356" author="rhillegas" created="Thu, 17 Jul 2014 19:50:37 +0100"  >&lt;p&gt;Maybe as a temporary solution for 10.11.1, we could prevent transactions from having both savepoints and work involving deferred constraints.&lt;/p&gt;</comment>
                            <comment id="14065456" author="rhillegas" created="Thu, 17 Jul 2014 20:54:18 +0100"  >&lt;p&gt;Other commands besides DROP TABLE will cause the problem. Compile the following class&#8230;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;import java.sql.*;

public class zz
{
    public  static  void    runStatement( String text )
        throws SQLException
    {
        Connection  conn = DriverManager.getConnection( &quot;jdbc:default:connection&quot; );

        conn.prepareStatement( text ).execute();

        throw new SQLException( &quot;Oh sorry, an error occurred.&quot; );
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&#8230;and run the following script&#8230;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;connect &apos;jdbc:derby:memory:db;create=true&apos;;

create procedure runStatement( tableName varchar( 128 ) )
language java parameter style java modifies sql data
external name &apos;zz.runStatement&apos;;

create table t( a int primary key initially deferred );

autocommit off;

insert into t( a ) values ( 1 ), ( 1 );

-- any of these will cause the problem
--call runStatement( &apos;drop table t&apos; );
--call runStatement( &apos;truncate table t&apos; );
call runStatement( &apos;call syscs_util.syscs_compress_table( &apos;&apos;APP&apos;&apos;, &apos;&apos;T&apos;&apos;, 1 )&apos; );

commit;

-- table has duplicate primary key values
select * from t;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14066131" author="knutanders" created="Fri, 18 Jul 2014 08:20:33 +0100"  >&lt;p&gt;Also just dropping the constraint shows the bug:&lt;br/&gt;
&lt;tt&gt;call runStatement( &apos;alter table t drop primary key&apos; );&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="14066499" author="rhillegas" created="Fri, 18 Jul 2014 17:42:22 +0100"  >&lt;p&gt;Attaching derby-6670-01-aa-forbidSavepointsWithDeferredConstraints.diff. This patch prevents you from creating an explicit savepoint or calling a database procedure while work involving a deferred constraint is in-flight. I am running tests now.&lt;/p&gt;

&lt;p&gt;This is a meat-ax approach to the problem. This is a temporary fix intended for 10.11.1. If this approach seems reasonable, I will log a follow-on issue so that Dag can back out this patch and solve the problem correctly after he returns from vacation. The correct fix could go into a later 10.11.2 maintenance release.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M       java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;/p&gt;

&lt;p&gt;Add an LCC entry point to check whether it&apos;s safe to create a savepoint or call a dbproc.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/execute/CallStatementResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;/p&gt;

&lt;p&gt;Invoke that new method when trying to explicitly manipulate a savepoint or call a dbproc.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/PrimaryKeyTest.java&lt;/p&gt;

&lt;p&gt;Verification that Knut&apos;s original repro is addressed as well as the dbproc case.&lt;/p&gt;</comment>
                            <comment id="14066770" author="rhillegas" created="Fri, 18 Jul 2014 20:33:14 +0100"  >&lt;p&gt;I am abandoning this approach. Test failures in ConstraintCharacteristicsTest suggest that there are places in the client driver where we call internal system procedures, and those operations will also be blocked when doing work on a table with deferrable constraints. I will dig deeper into the code. However, the quickest resolution of this issue may be to wait for Dag to return.&lt;/p&gt;</comment>
                            <comment id="14066805" author="rhillegas" created="Fri, 18 Jul 2014 21:02:25 +0100"  >&lt;p&gt;Some relief may be provided by the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6665&quot; title=&quot;Violation of deferred constraints not detected when conglomerates are erroneously shared&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6665&quot;&gt;&lt;del&gt;DERBY-6665&lt;/del&gt;&lt;/a&gt;. That should eliminate some of the code paths which clear the memory of deferred violations. Right now, the memory is cleared when conglomerate ids change, but by using the logical constraint ids, there should be no need to clear the memory.&lt;/p&gt;</comment>
                            <comment id="14074580" author="rhillegas" created="Fri, 25 Jul 2014 18:00:13 +0100"  >&lt;p&gt;This bug appears to be fixed by derby-6665-01-ae-deferredCheckAndDroppedFK.diff. Using that patch, I have run Knut&apos;s original test case as well as the test cases which call runStatement(). All of those test cases behave correctly now.&lt;/p&gt;</comment>
                            <comment id="14077912" author="dagw" created="Tue, 29 Jul 2014 17:20:24 +0100"  >&lt;p&gt;Uploading a modified version of the patch derby-6665-01-ae-deferredCheckAndDroppedFK.diff: &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12658438/12658438_derby-6670-2-a.diff&quot; title=&quot;derby-6670-2-a.diff attached to DERBY-6670&quot;&gt;derby-6670-2-a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;. While investigating that patch it was found that it made the repro in this issue go away. It turned out this was due to an accidental error in the &quot;ae&quot; patch, but it points the way to a solution:&lt;/p&gt;

&lt;p&gt;The logic in lcc.forgetDeferredConstraintsData failed to match with the ae patch because it compare the UUID of a constraint with the UUID of the index supporting it.  &lt;/p&gt;

&lt;p&gt;By making the checking at commit time use UUIDs of the constraints (PK/unique/FK) and base table (check constraints), the approach of the &quot;ae&quot; patch, we can just skip the checking at commit iff the (transactional) dictionary objects no longer exist. This patch utilizes this by making the logic in the three validation methods in DeferredConstraintsMemory bail out if the dictionary objects cannot be found. This makes the logic immune to the rollback of the drops of tables and/or constraints.&lt;/p&gt;

&lt;p&gt;The patch adds test cases for various &quot;rollback to savepoint&quot; scenarios in fixture testDerby6670.&lt;/p&gt;

&lt;p&gt;This patch isn&apos;t for commit yet - I am still reviewing the rest of it.&lt;/p&gt;</comment>
                            <comment id="14078636" author="dagw" created="Wed, 30 Jul 2014 00:50:37 +0100"  >&lt;p&gt;Attaching version 2 of the augmented &quot;ae&quot; patch, &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12658532/12658532_derby-6670-2-b.diff&quot; title=&quot;derby-6670-2-b.diff attached to DERBY-6670&quot;&gt;derby-6670-2-b.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;. This time I also did a full review of that patch. I believe the refactoring to UUIDs instead of conglomerate ids is sound and as far as I can see, complete. Thanks for the refactoring, Knut and Rick, it makes the code simpler and paves the way for the fix of this issue.&lt;/p&gt;

&lt;p&gt;Details for this patch:&lt;/p&gt;

&lt;p&gt;Review of the &quot;ae&quot; patch and details of changes relative to that one.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java
	modified:   java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Removed forget*. The rest looks OK, change to UUIDs only.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/iapi/sql/conn/SQLSessionContext.java
	modified:   java/engine/org/apache/derby/impl/sql/conn/SQLSessionContextImpl.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Renamed the merged methods here so as not to imply they only work for check constraints: they now work for&lt;br/&gt;
all constraints (there are no longer two variants of the methods).&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/impl/sql/compile/ProjectRestrictNode.java
	modified:   java/engine/org/apache/derby/catalog/UUID.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java
	modified:   java/engine/org/apache/derby/iapi/sql/execute/ResultSetFactory.java
	modified:   java/engine/org/apache/derby/impl/sql/compile/DMLModStatementNode.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/FKInfo.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/ReferencedKeyRIChecker.java
	modified:   java/engine/org/apache/derby/impl/sql/compile/FromBaseTable.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/ConstraintConstantAction.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/CreateConstraintConstantAction.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/CreateIndexConstantAction.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/ForeignKeyRIChecker.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/RIBulkChecker.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/SetConstraintsConstantAction.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/UniqueIndexSortObserver.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/UniqueWithDuplicateNullsIndexSortObserver.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/UpdateResultSet.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/ValidateCheckConstraintResultSet.java
	modified:   java/engine/org/apache/derby/impl/sql/execute/GenericResultSetFactory.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;OK; move to UUIDs only.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/impl/sql/execute/IndexConstantAction.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;OK; move to UUIDs only. But why &quot;transient&quot;?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Removed forgetDeferredConstraintsData calls. Solves &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6670&quot; title=&quot;Rollback to savepoint allows violation of deferrable constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6670&quot;&gt;&lt;del&gt;DERBY-6670&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/impl/sql/execute/DeferredConstraintsMemory.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Made sure we always bail out (all is good) iff dictionary objects do&lt;br/&gt;
not exist when we try to check violations. Solves &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6670&quot; title=&quot;Rollback to savepoint allows violation of deferrable constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6670&quot;&gt;&lt;del&gt;DERBY-6670&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/impl/sql/execute/IndexChanger.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Removed the TODO: mapping back to constraint id is unique (one-to-one) since we do not share indexes&lt;br/&gt;
for deferrable constraints.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/engine/org/apache/derby/impl/sql/execute/InsertResultSet.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;OK; move to UUIDs only, but simplified some unncessary conditionals.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	modified:   java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Added 6670 repro + more rollback to savepoint scenarios.&lt;/p&gt;

&lt;p&gt;Running regressions. &lt;font color=&quot;green&quot;&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Update: regressions passed ok&amp;#93;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;


</comment>
                            <comment id="14079649" author="dagw" created="Wed, 30 Jul 2014 19:00:18 +0100"  >&lt;p&gt;Updating patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12658691/12658691_derby-6670-2-c.diff&quot; title=&quot;derby-6670-2-c.diff attached to DERBY-6670&quot;&gt;derby-6670-2-c.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;, which improves on version &quot;b&quot;, by adding tests for the drop / rollback to savepoint cases for all constraint types.&lt;/p&gt;

&lt;p&gt;Also removed the release of violation information at a successful&lt;br/&gt;
change to immediate constraint mode as part of a SET CONSTRAINTS&lt;br/&gt;
statement, since a rollback to savepoint might re-introduce the&lt;br/&gt;
violations (new variant of this issue hitherto undetected). New test cases added for this, too (#testDerby6670_b).&lt;/p&gt;

&lt;p&gt;Re-running regressions. &lt;font color=&quot;green&quot;&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Update: regression passed without incident&amp;#93;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;</comment>
                            <comment id="14080034" author="jira-bot" created="Wed, 30 Jul 2014 22:52:07 +0100"  >&lt;p&gt;Commit 1614777 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1614777&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1614777&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6670&quot; title=&quot;Rollback to savepoint allows violation of deferrable constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6670&quot;&gt;&lt;del&gt;DERBY-6670&lt;/del&gt;&lt;/a&gt; Rollback to savepoint allows violation of deferrable constraints&lt;/p&gt;

&lt;p&gt;Patch derby-6670-2-c. This patch is a rewrite of the prototype patch&lt;br/&gt;
derby-6665-01-ae-deferredCheckAndDroppedFK.diff which moves from using&lt;br/&gt;
physical conglomerate ids as keys in the internal identification of&lt;br/&gt;
constraints and their indexes for deferrable constraints to&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;UUID for the constraints for primary key, unique and foreign key&lt;/li&gt;
	&lt;li&gt;UUID for base table (or constraint dependening on where in the code)&lt;br/&gt;
  for check constraints&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is essentially only a refactoring which simplifies the code. But&lt;br/&gt;
it also makes possible the fix for this issue, which is to stop&lt;br/&gt;
removing the deferrable constraint violation information when&lt;br/&gt;
constraints are dropped (directory or as a result of the table being&lt;br/&gt;
dropped), since a rollback to savepoint might undo drops, at which&lt;br/&gt;
point we need the violation information again. The solution is to make&lt;br/&gt;
the validation code robust against the absence of dictionary objects&lt;br/&gt;
(tables, constraints): if at commit or &quot;set immediate&quot;, the objects&lt;br/&gt;
are gone we know there is no checking to be done.&lt;/p&gt;

&lt;p&gt;The patch also adds rollback to savepoint test cases in&lt;br/&gt;
ConstraintCharacteristicsTest#testDerby6670_a, including the repro for&lt;br/&gt;
this issue.&lt;/p&gt;

&lt;p&gt;Also removed the release of violation information at a successful&lt;br/&gt;
change to immediate constraint mode as part of a SET CONSTRAINTS&lt;br/&gt;
statement, since a rollback to savepoint might re-introduce the&lt;br/&gt;
violations. New test cases added for this, too (#testDerby6670_b).&lt;/p&gt;</comment>
                            <comment id="14147001" author="mikem" created="Wed, 24 Sep 2014 23:39:26 +0100"  >&lt;p&gt;I believe this bugs is specific to deferrable constraints so marking as not appropriate to backport to 10.10 and previous releases.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12727497">DERBY-6665</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12313704">DERBY-532</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12656529" name="derby-6670-01-aa-forbidSavepointsWithDeferredConstraints.diff" size="8726" author="rhillegas" created="Fri, 18 Jul 2014 17:42:22 +0100"/>
                            <attachment id="12658438" name="derby-6670-2-a.diff" size="96675" author="dagw" created="Tue, 29 Jul 2014 17:20:24 +0100"/>
                            <attachment id="12658437" name="derby-6670-2-a.status" size="3146" author="dagw" created="Tue, 29 Jul 2014 17:20:24 +0100"/>
                            <attachment id="12658532" name="derby-6670-2-b.diff" size="96750" author="dagw" created="Wed, 30 Jul 2014 00:50:37 +0100"/>
                            <attachment id="12658533" name="derby-6670-2-b.status" size="3146" author="dagw" created="Wed, 30 Jul 2014 00:50:37 +0100"/>
                            <attachment id="12658691" name="derby-6670-2-c.diff" size="106961" author="dagw" created="Wed, 30 Jul 2014 19:02:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10364"><![CDATA[Data corruption]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Jul 2014 18:20:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>406071</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzrqiv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>406091</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10050"><![CDATA[Blocker]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>