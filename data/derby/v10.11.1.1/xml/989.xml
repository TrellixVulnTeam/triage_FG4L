<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:52:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-989/DERBY-989.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-989] unit/daemonService.unit fails intermittently: &apos;ran out of time&apos;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-989</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;&quot;Signature&quot;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file unit/unit/daemonService.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: daemonService jdk1.5.0_04 unit:unit 2006-02-14 20:46:42 ***&lt;br/&gt;
2 del&lt;br/&gt;
&amp;lt; &amp;#8211; Unit Test T_DaemonService finished&lt;br/&gt;
2 add&lt;br/&gt;
&amp;gt; ran out of time&lt;br/&gt;
&amp;gt; Shutting down due to unit test failure.&lt;br/&gt;
&amp;gt; Exit due to time bomb&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   daemonService jdk1.5.0_04 unit:unit 2006-02-14 21:47:13 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a href=&quot;http://www.multinet.no/~solberg/public/Apache/Derby/Limited/testSummary-377800.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.multinet.no/~solberg/public/Apache/Derby/Limited/testSummary-377800.html&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;SunOS-5.10 i86pc-i386&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
                <environment>OS: Solaris 10 3/05 s10_74L2a X86 - SunOS 5.10 Generic, JVM: Sun Microsystems Inc. 1.5.0_04&lt;br/&gt;
OS: Solaris 9 9/04 s9s_u7wos_09 SPARC - SunOS 5.9 Generic_118558-11, JVM: Sun Microsystems Inc. 1.5.0_03&lt;br/&gt;
OS: Red Hat Enterprise Linux AS release 3 (Taroon Update 4) - Linux 2.4.21-27.ELsmp #1 SMP Wed Dec 1 21:50:31 EST 2004 GNU/Linux, JVM: Sun Microsystems Inc. 1.5.0_03&lt;br/&gt;
</environment>
        <key id="12328999">DERBY-989</key>
            <summary>unit/daemonService.unit fails intermittently: &apos;ran out of time&apos;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Feb 2006 20:10:45 +0000</created>
                <updated>Wed, 1 Jul 2009 01:09:08 +0100</updated>
                            <resolved>Sat, 14 Oct 2006 09:15:12 +0100</resolved>
                                    <version>10.1.3.2</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.2</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12370593" author="skambha" created="Thu, 16 Mar 2006 06:55:24 +0000"  >&lt;p&gt;Similar diff and test failure also seen during our nightly testruns on 2006-03-14 on ibm142/10.1 codeline, insane jars and on windows. &lt;/p&gt;</comment>
                            <comment id="12374642" author="kmarsden" created="Sun, 16 Apr 2006 00:26:42 +0100"  >&lt;p&gt;I see a failure for this test with 10.2.0.0 alpha - (394001) on IBM 1.4.2&lt;br/&gt;
I don&apos;t see ran out of time.  Is this the same failure or something different?&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: daemonService jdk1.4.2 derbyall:unit 2006-04-14 08:37:02 ***&lt;br/&gt;
2 del&lt;br/&gt;
&amp;lt; &amp;#8211; Unit Test T_DaemonService finished&lt;br/&gt;
2 add&lt;br/&gt;
&amp;gt; Shutting down due to unit test failure.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   daemonService jdk1.4.2 derbyall:unit 2006-04-14 08:46:24 ***&lt;br/&gt;
------------------------------------------------------&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="12416430" author="mikem" created="Fri, 16 Jun 2006 07:27:35 +0100"  >&lt;p&gt;Test run on ibm1.4.2 jvm, last night, 6/14 - build (&lt;/p&gt;

&lt;p&gt;diff:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/unit/daemonService.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: daemonService jdk1.4.2 derbyall:unit 2006-06-15 08:58:59 ***&lt;br/&gt;
2 del&lt;br/&gt;
&amp;lt; &amp;#8211; Unit Test T_DaemonService finished&lt;br/&gt;
2 add&lt;br/&gt;
&amp;gt; ran out of time&lt;br/&gt;
&amp;gt; Shutting down due to unit test failure.&lt;br/&gt;
&amp;gt; Exit due to time bomb&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   daemonService jdk1.4.2 derbyall:unit 2006-06-15 09:59:44 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;probably the underlying error from derby.log:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
org.apache.derbyTesting.unitTests.harness.T_Fail: Test failed - unsubscribed continue to get serviced&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_Fail.testFailMsg(T_Fail.java:95)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.services.T_DaemonService.T03(T_DaemonService.java:247)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.services.T_DaemonService.runTestSet(T_DaemonService.java:118)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.run(T_MultiThreadedIterations.java:180)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:570)&lt;/p&gt;


&lt;p&gt;portion of derby.log for the daemonService test:&lt;br/&gt;
2006-06-15 15:59:00.192 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Starting test  &apos;org.apache.derbyTesting.unitTests.services.T_DaemonService&apos;.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; started&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Iteration 0 took 99876ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Used  memory increased by 24240 is 1557112&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Iteration 0 took 119856ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Iteration 0 took 119872ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Iteration 0 took 119872ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Iteration 0 took 119856ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Iteration 0 took 119856ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Iteration 0 took 119872ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Used  memory increased by 23272 is 1559776&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Used  memory increased by 26944 is 1559600&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Used  memory increased by 26072 is 1560080&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Used  memory increased by 28016 is 1561688&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Used  memory increased by 26984 is 1562000&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Used  memory increased by 27496 is 1560152&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Iteration 0 took 119888ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Iteration 0 took 119888ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Used  memory increased by 27360 is 1563768&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Used  memory increased by 26264 is 1563816&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Iteration 0 took 119919ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Used  memory increased by 29640 is 1565848&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_5&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
org.apache.derbyTesting.unitTests.harness.T_Fail: Test failed - unsubscribed continue to get serviced&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_Fail.testFailMsg(T_Fail.java:95)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.services.T_DaemonService.T03(T_DaemonService.java:247)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.services.T_DaemonService.runTestSet(T_DaemonService.java:118)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.run(T_MultiThreadedIterations.java:180)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:570)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Iteration 1 took 90118ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Used  memory increased by 6736 is 1563840&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Iteration 1 took 80206ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Used  memory increased by -98224 is 1464696&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Iteration 1 took 90227ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Iteration 1 took 90259ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Used  memory increased by -96200 is 1468224&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Used  memory increased by -96488 is 1467784&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Iteration 1 took 100311ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Used  memory increased by -94160 is 1469608&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Iteration 1 took 110380ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Iteration 1 took 110380ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Used  memory increased by -95256 is 1471880&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Iteration 1 took 110411ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Iteration 1 took 110395ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Used  memory increased by -93688 is 1469664&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Used  memory increased by -92864 is 1470136&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Used  memory increased by -79968 is 1470920&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_2&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_3&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Iteration 2 took 110099ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Iteration 2 took 110099ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Used  memory increased by 12880 is 1479200&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Used  memory increased by 12264 is 1479976&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Iteration 2 took 110022ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Used  memory increased by 11112 is 1480296&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Iteration 2 took 109928ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Iteration 2 took 109928ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Used  memory increased by 10832 is 1482880&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Used  memory increased by 12696 is 1483856&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Iteration 2 took 110022ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Iteration 2 took 110006ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Used  memory increased by 17008 is 1488232&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Used  memory increased by 16168 is 1487896&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Iteration 3 took 113674ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Iteration 3 took 113674ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Used  memory increased by 15632 is 1495208&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Used  memory increased by 14984 is 1494408&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Iteration 3 took 124708ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Used  memory increased by 21256 is 1500992&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Iteration 3 took 114702ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Used  memory increased by 17128 is 1499688&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Iteration 3 took 114687ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Used  memory increased by 17296 is 1499688&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Iteration 3 took 135667ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Used  memory increased by 20400 is 1509016&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Iteration 3 took 135667ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Used  memory increased by 22912 is 1509752&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T01&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T02&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T03&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Iteration 4 took 115216ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Iteration 4 took 115216ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; Used  memory increased by 19616 is 1514848&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_6&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; Used  memory increased by 19264 is 1514088&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_9&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Iteration 4 took 115085ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Iteration 4 took 115069ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; Used  memory increased by 12480 is 1512168&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_4&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; Used  memory increased by 10560 is 1512368&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_0&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Iteration 4 took 135931ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; Used  memory increased by 10800 is 1511608&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_1&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Pass - null T_CheckStatus&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Iteration 4 took 135736ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Iteration 4 took 135752ms&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Total memory increased by 0 is 4389376&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; Used  memory increased by 2896 is 1511848&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; Used  memory increased by 3720 is 1512792&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_7&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread_8&amp;#93;&lt;/span&gt; finished with no error&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; FAIL - org.apache.derbyTesting.unitTests.harness.T_Fail: The test failed with an exception: java.lang.InterruptedException: JVMLK007: operation interrupted&lt;br/&gt;
org.apache.derbyTesting.unitTests.harness.T_Fail: The test failed with an exception: java.lang.InterruptedException: JVMLK007: operation interrupted&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_Fail.exceptionFail(T_Fail.java:72)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.runTests(T_MultiThreadedIterations.java:147)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_Generic.Execute(T_Generic.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.runATest(BasicUnitTestManager.java:183)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.runTests(BasicUnitTestManager.java:245)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.boot(BasicUnitTestManager.java:92)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1996)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:290)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1831)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:966)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:398)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.FileMonitor.&amp;lt;init&amp;gt;(FileMonitor.java:59)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:288)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:50)&lt;br/&gt;
2006-06-15 16:59:14.953 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Test &apos;org.apache.derbyTesting.unitTests.services.T_DaemonService&apos; failed&lt;br/&gt;
2006-06-15 16:59:14.953 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Test Summary - Run 1, Passed 0, Failed 1, Skipped 0.&lt;br/&gt;
2006-06-15 16:59:14.953 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Shutting down due to unit test failure, see log for more information.&lt;br/&gt;
2006-06-15 16:59:14.969 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; 2006-06-15 16:59:14.969 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Startup failed due to an exception. See next exception for details. &lt;br/&gt;
ERROR XBM01: Startup failed due to an exception. See next exception for details. &lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:297)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.exceptionStartingModule(Monitor.java:668)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1849)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:966)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:398)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.FileMonitor.&amp;lt;init&amp;gt;(FileMonitor.java:59)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:288)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:50)&lt;br/&gt;
============= begin nested exception, level (1) ===========&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.getService(TopService.java:129)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(BaseMonitor.java:197)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.boot(BasicUnitTestManager.java:102)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1996)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:290)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1831)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:966)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:398)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.FileMonitor.&amp;lt;init&amp;gt;(FileMonitor.java:59)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:288)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:50)&lt;br/&gt;
============= end nested exception, level (1) ===========&lt;/p&gt;</comment>
                            <comment id="12416500" author="olesolberg" created="Fri, 16 Jun 2006 22:02:09 +0100"  >&lt;p&gt;Mike Matrigali wrote:&lt;br/&gt;
Re: are actual result files for sun&apos;s DBTG test runs kept around?&lt;br/&gt;
&amp;gt; I am looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-989&quot; title=&quot;unit/daemonService.unit fails intermittently: &amp;#39;ran out of time&amp;#39;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-989&quot;&gt;&lt;del&gt;DERBY-989&lt;/del&gt;&lt;/a&gt; and it would help to see the derby.log file&lt;br/&gt;
&amp;gt; from the reported diff.  I looked at the public web site:&lt;br/&gt;
&amp;gt; &lt;a href=&quot;http://www.multinet.no/~solberg/public/Apache/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.multinet.no/~solberg/public/Apache/&lt;/a&gt;, but I could&lt;br/&gt;
&amp;gt; only find reports on the results, not the actual results.  I could very&lt;br/&gt;
&amp;gt; well have missed something, and also would not be surprised if for&lt;br/&gt;
&amp;gt; space these were not kept.&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;I have attached derby.log for one case.&lt;/p&gt;

&lt;p&gt;I also put the full dump of the test run in &lt;a href=&quot;http://www.multinet.no/~solberg/public/Apache/Derby/testlog/Linux-2.6.9-34.ELsmp_x86_64-x86_64/411220.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.multinet.no/~solberg/public/Apache/Derby/testlog/Linux-2.6.9-34.ELsmp_x86_64-x86_64/411220.zip&lt;/a&gt; (temporarily).&lt;/p&gt;</comment>
                            <comment id="12418941" author="knutanders" created="Mon, 3 Jul 2006 19:08:29 +0100"  >&lt;p&gt;I have a hypothesis, but it&apos;s hard to verify since the failure is&lt;br/&gt;
intermittent and the test needs much time to finish.&lt;/p&gt;

&lt;p&gt;I believe there are two issues:&lt;/p&gt;

&lt;p&gt;a) BasicDaemon has not enough synchronization between unsubscribe()&lt;br/&gt;
   and serviceClient() to prevent the following order of events&lt;/p&gt;

&lt;p&gt;     1. the daemon thread fetches client N from the service queue&lt;br/&gt;
     2. another thread invokes unsubscribe(N) which removes client N&lt;br/&gt;
        from the queue&lt;br/&gt;
     3. the daemon thread invokes performWork() on client N&lt;/p&gt;

&lt;p&gt;   Because of this, it is possible that performWork() is called on an&lt;br/&gt;
   unsubscribed client, which will cause T_DaemonService.T03() to&lt;br/&gt;
   fail.&lt;/p&gt;

&lt;p&gt;b) When the error &quot;unsubscribed continue to get serviced&quot; is raised in&lt;br/&gt;
   T_DaemonService.T03(), s1 isn&apos;t resubscribed. A call to&lt;br/&gt;
   t_checkStatus() after the failure therefore hangs waiting for an&lt;br/&gt;
   unsubscribed client to be serviced. This causes the time bomb.&lt;/p&gt;</comment>
                            <comment id="12418967" author="knutanders" created="Mon, 3 Jul 2006 22:17:28 +0100"  >&lt;p&gt;Attached a one-line patch (derby-989-timebomb.diff) which removes the time bomb problem. The patch clears the serviceRecord vector each time runTestSet() is called. The old service records are ignored anyway if the previous iteration of the test was successful, but if a previous iteration has failed, they may cause a hang in t_checkStatus().&lt;/p&gt;

&lt;p&gt;This patch does not fix the real problem, it only makes the test finish sooner when it fails. The failure will be reported as &quot;unit test failure&quot; not &quot;time bomb&quot;. This is the same message as reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1537&quot; title=&quot;Boot-time exception when running Derby tests with derbytools.jar in front of derby.jar in the classpath.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1537&quot;&gt;&lt;del&gt;DERBY-1537&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Derbyall ran cleanly with the patch. Reviews and comments are appreciated. Thanks!&lt;/p&gt;</comment>
                            <comment id="12419062" author="knutanders" created="Tue, 4 Jul 2006 17:07:31 +0100"  >&lt;p&gt;The attached patch (derby-989-v1.diff) attempts to solve the real&lt;br/&gt;
problem. Derbyall runs cleanly with the patch. I have not been able to&lt;br/&gt;
reproduce the bug on single-CPU machines (neither with the patch nor&lt;br/&gt;
without the patch). On dual-CPU machines I got these results with&lt;br/&gt;
daemonService.unit:&lt;/p&gt;

&lt;p&gt;Solaris without patch: 80 runs - 5 failures&lt;br/&gt;
Solaris with patch: 80 runs - 0 failures&lt;/p&gt;

&lt;p&gt;Linux without patch: 80 runs - 2 failures&lt;br/&gt;
Linux with patch: 80 runs - 0 failures&lt;/p&gt;

&lt;p&gt;Description of the patch:&lt;/p&gt;

&lt;p&gt;Right before BasicDaemon invokes performWork(), it now checks (inside&lt;br/&gt;
a synchronized block) that the client has not unsubscribed.&lt;br/&gt;
BasicDaemon.unsubscribe() now has a synchronized block which checks&lt;br/&gt;
whether the client that is about to be unsubscribed is being&lt;br/&gt;
serviced. If it is being serviced, unsubscribe() waits until&lt;br/&gt;
performWork() has finished before it returns.&lt;/p&gt;

&lt;p&gt;With this patch, the behaviour of BasicDaemon.unsubscribe()&lt;br/&gt;
changes. Before, it would always return immediately. Now, it returns&lt;br/&gt;
immediately if the client that wants to unsubscribe is not being&lt;br/&gt;
serviced. Otherwise, it waits until the client&apos;s performWork() method&lt;br/&gt;
has finished. This means that if performWork() enters a deadlock,&lt;br/&gt;
unsubscribe() might never return. I think this is acceptable since the&lt;br/&gt;
javadoc for BasicDaemon says:&lt;/p&gt;

&lt;p&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;The&amp;#93;&lt;/span&gt; performWork method should be well behaved - in other words, it&lt;br/&gt;
  should not take too long or hog too many resources or deadlock with&lt;br/&gt;
  anyone else.&lt;/p&gt;

&lt;p&gt;Comments?&lt;/p&gt;</comment>
                            <comment id="12419079" author="andreask" created="Tue, 4 Jul 2006 17:39:51 +0100"  >&lt;p&gt;I have reviewed the code in the patch (derby-989-v1.diff) and would recommend it being committed.&lt;br/&gt;
I think it is acceptable that BasicDaemon.unsubscribe() returns after the client has been serviced.&lt;/p&gt;</comment>
                            <comment id="12419148" author="bryanpendleton" created="Wed, 5 Jul 2006 00:17:53 +0100"  >&lt;p&gt;Thanks for posting the patch. I think it is good work, and I am persuaded that you&lt;br/&gt;
have the right theory and have identified the right problem to fix. Your explanation&lt;br/&gt;
of how this change fixes the problem seems good to me, and your testing results&lt;br/&gt;
certainly show that the patch is effective in removing the problem.&lt;/p&gt;

&lt;p&gt;I&apos;m not very familiar with this code, so these comments are mostly for my own education.&lt;/p&gt;

&lt;p&gt;1) I don&apos;t really see why unsubscribe needs to block if it discovers that the service&lt;br/&gt;
record being unsubscribed is currently performing work. Is this a necessary element&lt;br/&gt;
of the fix, or just a side effect of the implementation?&lt;/p&gt;

&lt;p&gt;2) I think that it is dangerous for unsubscribe to ignore interrupts while waiting for&lt;br/&gt;
the service record to complete its work. I think that if unsubscribe gets an interrupt&lt;br/&gt;
at this time, it should abandon the wait and return, or it should throw an exception.&lt;/p&gt;

&lt;p&gt;3) Introducing the &quot;client number&quot; concept into the service record seems awkward,&lt;br/&gt;
as it doesn&apos;t seem like a natural part of the service record implementation. Also,&lt;br/&gt;
comparing client numbers as a way to answer the question &quot;is this service record&lt;br/&gt;
already unsubscribed&quot; seems somewhat convoluted. Here are two alternate&lt;br/&gt;
ideas that occurred to me:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;perhaps we could refer to the new Service Record field as a &quot;unique id&quot;, and have&lt;br/&gt;
   an &quot;equals&quot; method to compare two ServiceRecord objects, so that we don&apos;t&lt;br/&gt;
   so directly couple the Client Number concept from Basic Daemon into the&lt;br/&gt;
   ServiceRecord class.&lt;/li&gt;
	&lt;li&gt;perhaps there should be an &quot;subscribed&quot; boolean flag in Service Record, with&lt;br/&gt;
   methods &quot;isSubscribed&quot; and &quot;setSubscribed&quot; so that when Basic Daemon wants&lt;br/&gt;
   to ask if a ServiceRecord is already unsubscribed, it could do so directly rather&lt;br/&gt;
   then by fetching the client number and testing it against -1 and so forth.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;4) It seems a little odd that BasicDaemon sometimes synchronizes on the &quot;this&quot;&lt;br/&gt;
object, and sometimes depends on the fact that &quot;subscription&quot; is a Vector and&lt;br/&gt;
thus is inherently synchronized. I&apos;m not saying that anything is necessarily wrong here,&lt;br/&gt;
it was just a red flag to me that there were two levels of synchronization being used&lt;br/&gt;
in the BasicDaemon methods.&lt;/p&gt;
</comment>
                            <comment id="12419163" author="knutanders" created="Wed, 5 Jul 2006 02:27:52 +0100"  >&lt;p&gt;Thank you Andreas and Bryan for reviewing the patch.&lt;/p&gt;

&lt;p&gt;Bryan wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; 1) I don&apos;t really see why unsubscribe needs to block if it discovers&lt;br/&gt;
&amp;gt; that the service record being unsubscribed is currently performing&lt;br/&gt;
&amp;gt; work. Is this a necessary element of the fix, or just a side effect&lt;br/&gt;
&amp;gt; of the implementation?&lt;/p&gt;

&lt;p&gt;It is a necessary element of the fix. The test case that fails does&lt;br/&gt;
the following (everything not related to the failure stripped away):&lt;/p&gt;

&lt;p&gt;  1 subscribe client&lt;br/&gt;
  2 unsubscribe client&lt;br/&gt;
  3 save the number of times the client has been serviced&lt;br/&gt;
  4 do some other testing&lt;br/&gt;
  5 check that the number of times the client has been serviced has&lt;br/&gt;
    not increased&lt;/p&gt;

&lt;p&gt;If unsubscribe() returns while the client is being serviced, parts of&lt;br/&gt;
performWork() might be executed after 3 and before 5. Since&lt;br/&gt;
performWork() is updating the number of times the client has been&lt;br/&gt;
serviced, the check in 5 fails. The only way we can guarantee that&lt;br/&gt;
performWork() is not running after 3 is by waiting in unsubscribe().&lt;/p&gt;

&lt;p&gt;However, my fix assumes that the test is correct. I don&apos;t see anything&lt;br/&gt;
in the code/comments saying that performWork() should never be run&lt;br/&gt;
after unsubscribe() has returned. Actually, the javadoc in BasicDaemon&lt;br/&gt;
says&lt;/p&gt;

&lt;p&gt;  Furthermore, any Serviceable subscriptions, including onDemandOnly,&lt;br/&gt;
  must tolerate spurrious services.&lt;/p&gt;

&lt;p&gt;This could mean that the current behaviour is as expected/designed and&lt;br/&gt;
the test should be changed. It should be as easy as changing point 5&lt;br/&gt;
to &quot;check that the number of times the client has been serviced has&lt;br/&gt;
not increased by more than one&quot;.&lt;/p&gt;

&lt;p&gt;Does anyone have opinions on whether we should fix the Derby code or&lt;br/&gt;
the test? I&apos;m fine with either one of them.&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) I think that it is dangerous for unsubscribe to ignore interrupts&lt;br/&gt;
&amp;gt; while waiting for the service record to complete its work. I think&lt;br/&gt;
&amp;gt; that if unsubscribe gets an interrupt at this time, it should&lt;br/&gt;
&amp;gt; abandon the wait and return, or it should throw an exception.&lt;/p&gt;

&lt;p&gt;I agree. We can&apos;t throw an exception because it would break the&lt;br/&gt;
contract of the DaemonService interface, but I think it&apos;s reasonable&lt;br/&gt;
to abandon the wait and return.&lt;/p&gt;

&lt;p&gt;&amp;gt; 3) Introducing the &quot;client number&quot; concept into the service record&lt;br/&gt;
&amp;gt; seems awkward, as it doesn&apos;t seem like a natural part of the service&lt;br/&gt;
&amp;gt; record implementation. Also, comparing client numbers as a way to&lt;br/&gt;
&amp;gt; answer the question &quot;is this service record already unsubscribed&quot;&lt;br/&gt;
&amp;gt; seems somewhat convoluted. Here are two alternate ideas that&lt;br/&gt;
&amp;gt; occurred to me:&lt;br/&gt;
&amp;gt;  - perhaps we could refer to the new Service Record field as a&lt;br/&gt;
&amp;gt;  &quot;unique id&quot;, and have an &quot;equals&quot; method to compare two&lt;br/&gt;
&amp;gt;  ServiceRecord objects, so that we don&apos;t so directly couple the&lt;br/&gt;
&amp;gt;  Client Number concept from Basic Daemon into the ServiceRecord&lt;br/&gt;
&amp;gt;  class.&lt;/p&gt;

&lt;p&gt;I don&apos;t think we need to have decoupling of ServiceRecord from&lt;br/&gt;
BasicDaemon as a goal. ServiceRecord is a package protected class and&lt;br/&gt;
its only purpose is to aid the implementation of BasicDaemon. It is&lt;br/&gt;
purely an implementation detail of BasicDaemon, and it is not related&lt;br/&gt;
to the DaemonService interface in any way.&lt;/p&gt;

&lt;p&gt;&amp;gt;  - perhaps there should be an &quot;subscribed&quot; boolean flag in Service&lt;br/&gt;
&amp;gt;  Record, with methods &quot;isSubscribed&quot; and &quot;setSubscribed&quot; so that&lt;br/&gt;
&amp;gt;  when Basic Daemon wants to ask if a ServiceRecord is already&lt;br/&gt;
&amp;gt;  unsubscribed, it could do so directly rather then by fetching the&lt;br/&gt;
&amp;gt;  client number and testing it against -1 and so forth.&lt;/p&gt;

&lt;p&gt;I agree that this sounds cleaner. Thanks for the tip!&lt;/p&gt;

&lt;p&gt;&amp;gt; 4) It seems a little odd that BasicDaemon sometimes synchronizes on&lt;br/&gt;
&amp;gt; the &quot;this&quot; object, and sometimes depends on the fact that&lt;br/&gt;
&amp;gt; &quot;subscription&quot; is a Vector and thus is inherently synchronized. I&apos;m&lt;br/&gt;
&amp;gt; not saying that anything is necessarily wrong here, it was just a&lt;br/&gt;
&amp;gt; red flag to me that there were two levels of synchronization being&lt;br/&gt;
&amp;gt; used in the BasicDaemon methods.&lt;/p&gt;

&lt;p&gt;I&apos;m not a fan of this either. However, in this case it seems like the&lt;br/&gt;
vector synchronization and the &quot;this&quot; synchronization guard different&lt;br/&gt;
parts of the state. Synchronization on &quot;this&quot; ensures that the state&lt;br/&gt;
controlling the wait() loops is consistent, and the vector&lt;br/&gt;
synchronization ensures that concurrent modifications of the vector&lt;br/&gt;
don&apos;t interfere with each other. There is probably a cleaner way to&lt;br/&gt;
implement BasicDaemon, but that would be outside the scope of this&lt;br/&gt;
patch, I think.&lt;/p&gt;



&lt;p&gt;Thanks for all your comments! I will wait for comments on my question&lt;br/&gt;
about whether this is a test issue or a code issue before submitting a&lt;br/&gt;
new patch.&lt;/p&gt;</comment>
                            <comment id="12419272" author="knutanders" created="Wed, 5 Jul 2006 21:21:32 +0100"  >&lt;p&gt;derby-989-testfix.diff is an alternative solution. This patch only changes what the test expects, not the behaviour of Derby. With this patch, the test allows the client to be serviced once after it has called unsubscribe().&lt;/p&gt;

&lt;p&gt;Derbyall runs cleanly with the patch, and I&apos;m not able to reproduce the failure in daemonService.unit.&lt;/p&gt;

&lt;p&gt;Comments/opinions on which solution to choose would be greatly appreciated. Thanks!&lt;/p&gt;</comment>
                            <comment id="12419356" author="tsuresh" created="Thu, 6 Jul 2006 07:01:39 +0100"  >&lt;p&gt;Hi Knut, &lt;/p&gt;

&lt;p&gt;Thanks for looking into this failure. I took a quick look at your changes,patch looks  good.  &lt;br/&gt;
 Only minor thing I noticed is :&lt;/p&gt;

&lt;p&gt;In work() method is getting assing to the current service record:&lt;br/&gt;
+		if ((work.getClientNumber() &amp;gt;= 0) &amp;amp;&amp;amp;&lt;br/&gt;
+			(subscription.elementAt(work.getClientNumber()) == null)) &lt;/p&gt;
{
+			/ DERBY-989: client has unsubscribed, skip it
+			continue;
+		}
&lt;p&gt;+				currentlyBeingServiced = work;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;I think the statement &quot;currentlyBeingServiced = work&quot;  can be set only when&lt;br/&gt;
clientNumber &amp;gt; 0 ; in other cases anyway it is not being used; As I understantd&lt;br/&gt;
this patch is fixing only subscribe/unsubscribe type requests. &lt;/p&gt;


&lt;p&gt;I am also bit confused about what should be correct contract of &lt;br/&gt;
unsubscribe() method  should be.  I looked at the derby code &lt;br/&gt;
little bit for cases where unsubcribe() call makes  performWork() in &lt;br/&gt;
execution for that client throws weird errors.  One thing I noticed &lt;br/&gt;
is BasicDaemon:stop() method is called either before the unsubscribe() &lt;br/&gt;
method calls or  immediately after it. stop() method waits for work &lt;br/&gt;
in progress to complete.&lt;/p&gt;

&lt;p&gt;Not sure if this patch will prevent any new issues, that is not addressed&lt;br/&gt;
by calling the daemon stop() method. My choice would be to fix the test, &lt;br/&gt;
unless some one finds a problem in the engine code with usage of &lt;br/&gt;
unsubcribe() method. &lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
-suresh&lt;/p&gt;</comment>
                            <comment id="12419434" author="knutanders" created="Thu, 6 Jul 2006 15:47:10 +0100"  >&lt;p&gt;Thanks for your comments, Suresh! I think I will just fix the test for now since it doesn&apos;t seem like the current behaviour of BasicDaemon causes any real problems, and it&apos;s not clear that unsubscribe() breaks its contract.&lt;/p&gt;</comment>
                            <comment id="12419437" author="knutanders" created="Thu, 6 Jul 2006 16:11:21 +0100"  >&lt;p&gt;Committed derby-989-timebomb.diff and derby-989-testfix.diff into trunk with revision 419479.&lt;/p&gt;

&lt;p&gt;I will also update the javadoc for BasicDaemon (and possibly DaemonService). Thanks for the suggestion, Mike.&lt;/p&gt;</comment>
                            <comment id="12419671" author="knutanders" created="Fri, 7 Jul 2006 17:40:20 +0100"  >&lt;p&gt;Attaching a patch which updates the javadoc for DaemonService and BasicDaemon with information about the case where unsubscribe() is called when the client is being serviced.&lt;/p&gt;</comment>
                            <comment id="12419718" author="bryanpendleton" created="Fri, 7 Jul 2006 22:10:25 +0100"  >&lt;p&gt;Javadoc looks great; thanks for following up on this. I feel that fixing the test and fixing the javadoc in this way is a good resolution.&lt;/p&gt;</comment>
                            <comment id="12420008" author="knutanders" created="Mon, 10 Jul 2006 17:07:18 +0100"  >&lt;p&gt;Thank you for looking at the patch, Bryan! Committed &apos;derby-989-javadoc.diff&apos; into trunk with revision 420465.&lt;/p&gt;</comment>
                            <comment id="12442101" author="skambha" created="Fri, 13 Oct 2006 22:45:42 +0100"  >&lt;p&gt;This diff is seen on 10.1.3.2 codeline also.   Does it make sense to backport this fix to 10.1 codeline ? &lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="12442269" author="knutanders" created="Sat, 14 Oct 2006 09:15:12 +0100"  >&lt;p&gt;Patch merged cleanly from trunk. Test passes. Committed into 10.1 with revision 463899.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12332447">DERBY-1237</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12335551" name="989-411220-derbyall_derbyall_unit_unit_derby.log" size="85271" author="olesolberg" created="Fri, 16 Jun 2006 22:02:09 +0100"/>
                            <attachment id="12336489" name="derby-989-javadoc.diff" size="3318" author="knutanders" created="Fri, 7 Jul 2006 17:40:20 +0100"/>
                            <attachment id="12336490" name="derby-989-javadoc.stat" size="150" author="knutanders" created="Fri, 7 Jul 2006 17:40:20 +0100"/>
                            <attachment id="12336370" name="derby-989-testfix.diff" size="1090" author="knutanders" created="Wed, 5 Jul 2006 21:21:32 +0100"/>
                            <attachment id="12336371" name="derby-989-testfix.stat" size="84" author="knutanders" created="Wed, 5 Jul 2006 21:21:32 +0100"/>
                            <attachment id="12336283" name="derby-989-timebomb.diff" size="643" author="knutanders" created="Mon, 3 Jul 2006 22:17:28 +0100"/>
                            <attachment id="12336284" name="derby-989-timebomb.stat" size="84" author="knutanders" created="Mon, 3 Jul 2006 22:17:28 +0100"/>
                            <attachment id="12336307" name="derby-989-v1.diff" size="3967" author="knutanders" created="Tue, 4 Jul 2006 17:07:31 +0100"/>
                            <attachment id="12336308" name="derby-989-v1.stat" size="150" author="knutanders" created="Tue, 4 Jul 2006 17:07:31 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Mar 2006 06:55:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22243</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0tlj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38613</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>