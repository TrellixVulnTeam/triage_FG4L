<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2717/DERBY-2717.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2717] throw error if non-matching collation ids in like.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2717</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;LIKE should throw an error  if it has mismatching params.  &lt;/p&gt;

&lt;p&gt;Mamta gives the standard references:&lt;br/&gt;
The collation rule for c1 like c2 should be same as c1 = c2 as per SQL specification.&lt;/p&gt;

&lt;p&gt;As per SQL spec, Section 8.5 &amp;lt;like predicate&amp;gt;, Syntax Rules 3d),&lt;br/&gt;
&quot;The collation used for &amp;lt;like predicate&amp;gt; is determined by applying Subclause 9.13, &quot;Collation determination&quot;, with operands CVE, PC, and (if specified) EC.&quot;&lt;/p&gt;

&lt;p&gt;As per SQL spec, Section 8.2 &amp;lt;comparison predicate&amp;gt;, General Rules 3a),&lt;br/&gt;
&quot;Let CS be the collation as determined by Subclause 9.13, &quot;Collation determination&quot;, for the declared types of the two character strings.&quot;&lt;/p&gt;

&lt;p&gt;Please let me know if you have any further questions in this area.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12370460">DERBY-2717</key>
            <summary>throw error if non-matching collation ids in like.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12345445">DERBY-1478</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="mikem">Mike Matrigali</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 May 2007 18:26:45 +0100</created>
                <updated>Fri, 21 Jan 2011 17:50:18 +0000</updated>
                            <resolved>Fri, 1 Jun 2007 18:55:12 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12499861" author="mamtas" created="Tue, 29 May 2007 18:38:14 +0100"  >&lt;p&gt;When we fix this bug, we should add some test cases for LIKE and parameters combination. &lt;/p&gt;</comment>
                            <comment id="12500263" author="mikem" created="Thu, 31 May 2007 01:33:42 +0100"  >&lt;p&gt;I am working on this, but just found that when I do the check the LIKE coming from getColumns() call is generating &lt;br/&gt;
a basic collation id LIKE a user collation constant.  This is the test case call  of the database metadata  from the &lt;br/&gt;
CollationTest2.  The stack looks like:&lt;br/&gt;
1) testEnglishCollation(org.apache.derbyTesting.functionTests.tests.lang.Collat&lt;br/&gt;
onTest2)java.sql.SQLException: Java exception: &apos;org.apache.derby.impl.sql.compi&lt;br/&gt;
e.ParameterNode incompatible with org.apache.derby.impl.sql.compile.CharConstan&lt;br/&gt;
Node: java.lang.ClassCastException&apos;.&lt;br/&gt;
    at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExcept&lt;br/&gt;
onFactory.java:45)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Tr&lt;br/&gt;
nsactionResourceImpl.java:403)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Trans&lt;br/&gt;
ctionResourceImpl.java:346)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnecti&lt;br/&gt;
n.java:1549)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChi&lt;br/&gt;
d.java:81)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedSt&lt;br/&gt;
tement.java:144)&lt;br/&gt;
    at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Driver30.java:9&lt;br/&gt;
)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedConnection.prepareMetaDataStatement(Embe&lt;br/&gt;
Connection.java:1872)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.prepareSPS(EmbedDatabas&lt;br/&gt;
MetaData.java:3638)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQueryUsingSy&lt;br/&gt;
temTables(EmbedDatabaseMetaData.java:3475)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(EmbedD&lt;br/&gt;
tabaseMetaData.java:3523)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(EmbedD&lt;br/&gt;
tabaseMetaData.java:3548)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.doGetCols(EmbedDatabase&lt;br/&gt;
etaData.java:1925)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getColumns(EmbedDatabas&lt;br/&gt;
MetaData.java:1897)&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runDERBY&lt;br/&gt;
2703(CollationTest2.java:1000)&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runTestI&lt;br/&gt;
er(CollationTest2.java:1883)&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.testEngl&lt;br/&gt;
shCollation(CollationTest2.java:1916)&lt;/p&gt;</comment>
                            <comment id="12500786" author="mikem" created="Fri, 1 Jun 2007 18:55:12 +0100"  >&lt;p&gt;Fixed with svn 543554.  &lt;br/&gt;
Throw new error if operands of LIKE do not have matching collations.&lt;br/&gt;
Adds tests for this case in CollationTest2.java&lt;/p&gt;</comment>
                            <comment id="12500806" author="mamtas" created="Fri, 1 Jun 2007 19:44:10 +0100"  >&lt;p&gt;Mike, I probably didn&apos;t spend enough time on the patch to understand this but why is DataTypeDescriptor.getCollationName() not simply calling typeDescriptor.getCollationName()? Also, if we do need to keep DataTypeDescriptor.getCollationName() the way it is right now, then maybe we should use constants strings from StringDataValue for collation names rather than hardcoded strings &quot;UCS_BASIC&quot; and &quot;TERRITORY_BASED&quot;.&lt;/p&gt;</comment>
                            <comment id="12500824" author="mikem" created="Fri, 1 Jun 2007 20:58:07 +0100"  >&lt;p&gt;good catch mamta. I made all the changes to be able to do this correctly and then forgot to go back and change to the top level call.&lt;br/&gt;
Just committed fix for this - 543590.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 May 2007 17:38:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30574</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mbz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37436</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>