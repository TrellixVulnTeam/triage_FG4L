<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:45:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2346/DERBY-2346.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2346] Provide set methods for clob for embedded driver</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2346</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12363010">DERBY-2346</key>
            <summary>Provide set methods for clob for embedded driver</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12343409">DERBY-1341</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anurag">Anurag Shekhar</assignee>
                                    <reporter username="anurag">Anurag Shekhar</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Feb 2007 13:16:04 +0000</created>
                <updated>Thu, 2 May 2013 03:29:02 +0100</updated>
                            <resolved>Wed, 13 Jun 2007 17:10:54 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12480223" author="stan" created="Mon, 12 Mar 2007 23:43:53 +0000"  >&lt;p&gt;This issue was identified as a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-572&quot; title=&quot;Add support for Clob.setCharacterStream(), Clob.setAsciiStream()and Blob.setBinaryStream in embedded, it is already supported in client.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-572&quot;&gt;&lt;del&gt;DERBY-572&lt;/del&gt;&lt;/a&gt; but remains OPEN and MAJOR.  What process should be followed to update this entry ?&lt;/p&gt;</comment>
                            <comment id="12480771" author="anurag" created="Wed, 14 Mar 2007 13:43:43 +0000"  >&lt;p&gt;I have created this issue for supporting all the set methods including streams so I think its better to close 572.&lt;/p&gt;</comment>
                            <comment id="12481138" author="anurag" created="Thu, 15 Mar 2007 13:03:53 +0000"  >&lt;p&gt;This patch is not for commit. Right now it generates failures in postion tests due to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2450&quot; title=&quot;Clob.Position returning wrong value when operating on Reader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2450&quot;&gt;&lt;del&gt;DERBY-2450&lt;/del&gt;&lt;/a&gt;. I will resumbmit it after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2250&quot; title=&quot;Implement USAGE privilege for Jar files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2250&quot;&gt;DERBY-2250&lt;/a&gt; is resolved.&lt;/p&gt;

&lt;p&gt;Description of Patch&lt;br/&gt;
New Files&lt;br/&gt;
java/engine/org/apache/derby/impl/jdbc/ClobStreamControl.java&lt;br/&gt;
This class extends from LOBStreamControl and provides wrapper methods to uses Strings to access LOBData.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/jdbc/ClobAsciiStream.java&lt;br/&gt;
A Stream which assumes all the bytes coming in is ascii char and passes it on to Writer.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/jdbc/ClobUtf8Writer.java&lt;/p&gt;

&lt;p&gt;This class uses ClobStreamControl to updates the clob. User will get this object when it makes calls to retrieve outputstream from clob.&lt;/p&gt;


&lt;p&gt;java/engine/org/apache/derby/impl/jdbc/EmbedClob.java&lt;br/&gt;
Modified to use ClobStreamControl when the clob is materialized.&lt;br/&gt;
Added additional set methods.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/jdbc/UTF8Reader.java&lt;/p&gt;

&lt;p&gt;Added a new constructor to accept length as parameter. When the length is passed to the constructor, it doesn&apos;t tries to read the length from the stream and considers the data from the beginning of the stream.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/jdbc/LOBStreamControl.java&lt;br/&gt;
Added a new method to replace bytes in the middle of file/array when the   new bytes may have a diff length from the original bytes.      &lt;/p&gt;</comment>
                            <comment id="12484126" author="kristwaa" created="Mon, 26 Mar 2007 14:36:46 +0100"  >&lt;p&gt;Comments on &apos;derby-2346-only_for_review.diff&apos;:&lt;br/&gt;
  1) Wrong class name in the Apache header.&lt;br/&gt;
  2) Can ClobAsciiStream.writer be made final?&lt;br/&gt;
  3) Missing JavaDoc for exceptions thrown in EmbedClob-constructors&lt;br/&gt;
  4) In EmbedClob(DataValueDescrptor, EmbedConnection), should the SQLException be passed to StandardException.newException to preserve the cause?&lt;br/&gt;
  5) In EmbedClob.length() there is a double try-catch with identical catch-blocks. I don&apos;t understand why.&lt;br/&gt;
  6) EmbedClob.getSubString(long,int); another double try-catch as in e).&lt;br/&gt;
  7) Why is a new constructor added in UTF8Reader? (because of the streamSize?) Add JavaDoc?&lt;br/&gt;
  8) ClobUtf8Writer.flush() does not follow the contract described by the JavaDoc, where it says it should throw an IOException if called after close. Even though flush() does nothing, it would be good practice to throw it anyway.&lt;br/&gt;
  9) In ClobUtf8Writer.write(), should we preserve the underlying SQLException by calling initCause or similar?&lt;br/&gt;
 10) Probably nothing severe, but maybe String.copyValueOf (static) should be used instead of the String constructor?&lt;br/&gt;
 11) I&apos;m having trouble understanding the arguments for LOBStreamControl.replaceBytes. Are the longs positions for the LOBStreamControl, or for the passed in byte array? I would appreciate some description of the arguments in the JavaDoc. If the methods is only supposed to replace bytes, why do we need both a start and an end position?&lt;br/&gt;
 12) In replaceBytes, I can&apos;t see any consistency-checking for start-/endpos and incoming buffer length. What am I missing?&lt;br/&gt;
 13) In replaceBytes, byte[] tmp is never referenced again. Can it be created directly in the init-call?&lt;br/&gt;
 14) The two do-while(true) loop can both be rewritten to exit on a check in the while-clause. The if (...) break can then be removed.&lt;br/&gt;
 15) Missing class JavaDoc in ClobStreamControl. Why is it needed? How does it differ from LOBStreamControl?&lt;br/&gt;
 16) Is ClobStreamControl.conChild a final variable? &lt;br/&gt;
 17) ClobStreamControl.getStreamPosition() needs more JavaDoc. I understand what it is supposed to do, but the way it is implemented is hard to understand without comments.&lt;br/&gt;
 18) How does the code know it is hitting a character boundary (in UTF-8) when getInputStream(bytePos) is called?&lt;br/&gt;
 19) Variable pos in ClobStreamControl.getStreamPosition() is never used.&lt;br/&gt;
 20) The if checking the in.skip-statements should be rewritten. In this case, as long as skip does not return the same number of bytes skipped as requested, something is wrong.&lt;br/&gt;
 21) It must be clearly documented whether the various methods taking a position argument expects this to be in number of bytes or number of characters.&lt;br/&gt;
 22) ClobStreamControl.insertString() seems to contain testing/debug code. Please revise it.&lt;br/&gt;
 23) General comment: Add more JavaDoc. Current status is there are lots of empty JavaDoc, which is more frustrating than helpful. Also, all the empty return-tags will generate warnings.&lt;br/&gt;
 24) Is all this new/altered functionality covered by existing tests, or will there be new ones written?&lt;/p&gt;


&lt;p&gt;I plan to do another review of the synchronization policy later. If you can describe the intended synchonrization policy used for LOBStreamControl and friends, it will be a lot easier to review and verify.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;</comment>
                            <comment id="12487974" author="anurag" created="Wed, 11 Apr 2007 04:13:12 +0100"  >&lt;p&gt;about patch (derby-2346.v1.diff)&lt;br/&gt;
addressed most of the issues raised by Kristian&lt;/p&gt;

&lt;p&gt;Added a  new class org.apache.derby.impl/jdbc.ClobUpdateableReader.&lt;br/&gt;
This class will reinitialized itself if the clob is modified after issuing Reader to the user application.This was required because UTF8Reader reads the data ahead from the stream and caches it.&lt;/p&gt;

&lt;p&gt;Added a new method in ClobStreamControl to encode string to utf8. I found that getBytes () is not a reliable method hence this method.&lt;/p&gt;

&lt;p&gt;Added a test case for updateable reader.&lt;/p&gt;

&lt;p&gt;Enabled jdbcapi/LOBStreamsTest on embedded driver too.&lt;br/&gt;
Modifed stream comparisons routine of LOBStreamsTest to avoid failure if the number of bytes returned is less than the requested number bytes.&lt;/p&gt;

</comment>
                            <comment id="12488070" author="knutanders" created="Wed, 11 Apr 2007 13:33:08 +0100"  >&lt;p&gt;Could you elaborate on how String.getBytes() is unreliable? As far as&lt;br/&gt;
I can tell, ClobStreamControl.getByteFromString() does exactly the&lt;br/&gt;
same as string.getBytes(&quot;UTF-8&quot;).&lt;/p&gt;

&lt;p&gt;I haven&apos;t done a thorough review, but here are my comments after a&lt;br/&gt;
quick look at the patch:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;It seems a bit odd to me that a number of the methods in&lt;br/&gt;
  ClobStreamControl and LOBStreamControl throw both IOException and&lt;br/&gt;
  SQLException. I would have expected that StandardException was used&lt;br/&gt;
  instead of SQLException at this level of the code. Throwing&lt;br/&gt;
  SQLException at this level tends to lead to awkward code other&lt;br/&gt;
  places. For instance, EmbedClob&apos;s constructor must catch the&lt;br/&gt;
  SQLException and convert it to a StandardException because of this&lt;br/&gt;
  (and the StandardException will be converted back to an SQLException&lt;br/&gt;
  later).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Typo in LOBInputStreeam.isObsoloate: should have been isObsolete?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Typo in ClobStreamControl.getStreamPostition: extra t in position&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ClobStreamControl.getCharLength: long ret = reader.read(dummy) could&lt;br/&gt;
  use int instead of long since Reader.read(char[]) returns an int.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Wouldn&apos;t the code be simpler (and possibly more efficient) if the&lt;br/&gt;
  switch statement in ClobStreamControl.getStreamPosition were&lt;br/&gt;
  replaced with if/else if? For instance, this part of the switch&lt;br/&gt;
+            switch (c &amp;gt;&amp;gt; 4) {&lt;br/&gt;
+                case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:&lt;br/&gt;
  is equivalent to this simple if statement:&lt;br/&gt;
             if ((c &amp;amp; 0x80) == 0)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Would it be better to throw an exception instead of returning -1&lt;br/&gt;
  when getStreamPosition() reads past the end of the stream? I think&lt;br/&gt;
  reading past the end of the stream is always an error, so if an&lt;br/&gt;
  exception is thrown, the callers don&apos;t have to check for a negative&lt;br/&gt;
  return value.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ClobStreamControl.insertString doesn&apos;t look correct to me. Its&lt;br/&gt;
  javadoc comment says that it returns the current byte position, but&lt;br/&gt;
  it always returns str.length(). It also seems like byte positions&lt;br/&gt;
  and char positions are mixed in this line:&lt;br/&gt;
+        endPos = (endPos &amp;lt; 0) ? getCharLength() : pos + endPos;&lt;br/&gt;
  endPos and pos are byte positions, whereas getCharLength() returns&lt;br/&gt;
  the length in characters.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In LOBStreamControl.replaceBytes, this loop might never terminate if&lt;br/&gt;
  end-of-file is reached:&lt;br/&gt;
+            while (sz != 0) 
{
+                int readLen = (int) Math.min (1024, sz);                
+                int actualLength = oldFile.read (tmpByte, 0, readLen);
+                tmpFile.write (tmpByte, 0, actualLength);
+                sz -= actualLength;
+            }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And won&apos;t this loop end up passing rdLen == -1 to write()?&lt;br/&gt;
+            if (endPos &amp;lt; length) {&lt;br/&gt;
+                do &lt;/p&gt;
{
+                    rdLen = oldFile.read (tmpByte, 0, 1024);
+                    tmpFile.write (tmpByte, 0, rdLen);
+                }
&lt;p&gt;while (rdLen &amp;gt;= 1024);&lt;br/&gt;
+            }            &lt;/p&gt;</comment>
                            <comment id="12488163" author="anurag" created="Wed, 11 Apr 2007 20:45:32 +0100"  >&lt;p&gt;This snippet, converting a string of length 1 to byte array and then &lt;br/&gt;
converting back to string returns falls. I haven&apos;t really investigated &lt;br/&gt;
why it happens but probably thats the reason why there is a routine for &lt;br/&gt;
encoding string in utf-8 in other places in code base too.&lt;/p&gt;


&lt;p&gt;     char [] c  = &lt;/p&gt;
{(char) 56249}
&lt;p&gt;;&lt;br/&gt;
     String str = String.copyValueOf (c);&lt;br/&gt;
     byte b [] = str.getBytes (&quot;UTF-8&quot;);&lt;br/&gt;
     String s = new String (b, &quot;UTF-8&quot;);    &lt;br/&gt;
     System.out.println (str.equals(s));&lt;/p&gt;

</comment>
                            <comment id="12488197" author="kristwaa" created="Wed, 11 Apr 2007 22:21:36 +0100"  >&lt;p&gt;Regarding the UTF-8 char -&amp;gt; byte -&amp;gt; char conversion using String methods, I don&apos;t think it is a bug. Unmappable &quot;chars&quot; are represented by &apos;?&apos; (0xf3 / 63).&lt;br/&gt;
In the snippet above, (char)56249 (0xdbb9) happens to be in a PUA area. These codepoints are reserved for private use, and the Unicode standard does not define any characters for them.&lt;/p&gt;

&lt;p&gt;You could use DataOutput/DataInput and write-/readUTF, but I don&apos;t know how efficient this would be. These methods write the strings to the modfied UTF-8 format, and the equals in the example above returns true. I think writing your own method would be acceptable, but it would be interesting if anyone took the time to investigate the cpu/space differences (i.e. what kind of stream can we use underneath? ByteArrayOutputStream? Subclass of it that returns reference to the byte array?)&lt;/p&gt;

&lt;p&gt;Even though the example uses a &quot;very special codepoint&quot;, the database should handle it. An application could potentially use it for its own custom character (not quite sure how though). Further, it seems the &quot;UTF-8&quot; encoding (as used in String.getBytes()) does not promise to encode all unsigned 16 bit values, but only valid Unicode characters.&lt;/p&gt;

&lt;p&gt;I&apos;m not very good with the Unicode terminology, so there might be errors in my comment and maybe important additions. Feel free to correct me.&lt;/p&gt;</comment>
                            <comment id="12489194" author="anurag" created="Mon, 16 Apr 2007 20:01:12 +0100"  >&lt;p&gt;description of derby-2346v2.diff&lt;br/&gt;
changes from previous patch&lt;/p&gt;

&lt;p&gt;1. Fixed typos.&lt;br/&gt;
2. Simplified ClobStreamControl.getStreamPosition&lt;br/&gt;
3. Fixed the bugs Knut pointed in LOBStreamControl.replaceBytes&lt;br/&gt;
4. Added one more test to test update able reader over large clob.&lt;/p&gt;

&lt;p&gt;Changing the exception to StandurdException in ClobStreamControl and LOBStreamControl is a good idea but i will prefer to do it as a separate patch as that going to effect code unrelated to this issue.&lt;/p&gt;</comment>
                            <comment id="12489695" author="anurag" created="Wed, 18 Apr 2007 12:13:32 +0100"  >&lt;p&gt;i had forgot to add ClobUpdateableReaderTest in derby-2346v2.diff attaching new patch derby-2346v3.diff with it.&lt;/p&gt;</comment>
                            <comment id="12489809" author="kristwaa" created="Wed, 18 Apr 2007 17:19:32 +0100"  >&lt;p&gt;Thank you Anurag.&lt;/p&gt;

&lt;p&gt;I want this issue to move on. Therefore I have chosen to commit the version 3 patch, even though it needs more work.&lt;br/&gt;
The reason for the somewhat &quot;premature&quot; commit is that reviewing these big patches is time-consuming. Further, at least for me, it is hard to stay focused...&lt;/p&gt;

&lt;p&gt;Committed &apos;derby-2346v3.diff&apos; to trunk with revision 530085.&lt;br/&gt;
Ran derbyall and suites.All with JDK 1.6 without failures.&lt;/p&gt;

&lt;p&gt;One or more followup patches are required.&lt;br/&gt;
Regarding my own previous comments first:&lt;br/&gt;
1, (3), 4 - 9, 11 - 12, 14, 19 - 20, 22 have been addressed.&lt;br/&gt;
These have not been addressed (or commented/rejected):&lt;br/&gt;
 2) Can the field writer be made final?&lt;br/&gt;
10) There&apos;s another new String() that can be replaced with String.copyValueOf() in EmbedClob. There is also some debug code in there (System.out.printlns).&lt;br/&gt;
13) Not addressed.&lt;br/&gt;
15) A few words for the class JavaDoc?&lt;br/&gt;
16) Not addressed.&lt;br/&gt;
18) I would like a comment on this one.&lt;/p&gt;

&lt;p&gt;17, 21, 23 - 24 are more general. I&apos;ll maybe look at them later.&lt;/p&gt;

&lt;p&gt;I also checked for changes regarding the comments Knut Anders made.&lt;br/&gt;
As far as I can see, you will handle the first one in a separate patch, the two next are addressed, whereas the rest is not addressed or I have not looked into them.&lt;br/&gt;
One comment about the fourth comment: A change has been made, but I don&apos;t think the intended one was made. The variable changed to int (length) should be a long, whereas ret should be changed from long to int.&lt;/p&gt;

&lt;p&gt;I also have a few nits on JavaDoc and some other minor stuff, but I&apos;ll comment on this or make a patch for it later.&lt;/p&gt;


&lt;p&gt;regards,&lt;/p&gt;</comment>
                            <comment id="12490451" author="kristwaa" created="Fri, 20 Apr 2007 21:49:38 +0100"  >&lt;p&gt;Committed a few JavaDoc changes with revision 530912, which removes the JavaDoc warnings.&lt;br/&gt;
Another JavaDoc patch will follow later.&lt;/p&gt;</comment>
                            <comment id="12491511" author="skambha" created="Wed, 25 Apr 2007 03:55:00 +0100"  >&lt;p&gt;I havent done a full review but as I was looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2586&quot; title=&quot;BlobClob4BlobTest.tesPositionAgressive takes very long time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2586&quot;&gt;&lt;del&gt;DERBY-2586&lt;/del&gt;&lt;/a&gt;,  I happened to look at the EmbedClob changes.. and noticed the following statement which can be removed as str is not used in EmbedClob constructor changes.. so making a note here..  &lt;br/&gt;
+                String str = dvd.getString();&lt;/p&gt;</comment>
                            <comment id="12495591" author="kristwaa" created="Mon, 14 May 2007 14:36:12 +0100"  >&lt;p&gt;Committed &apos;derby-2346-4a_javadoc.diff&apos; to trunk with revision 537831.&lt;/p&gt;</comment>
                            <comment id="12496019" author="kristwaa" created="Tue, 15 May 2007 16:23:17 +0100"  >&lt;p&gt;Linked &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2652&quot; title=&quot;Clob.setCharacterStream differs between embedded and client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2652&quot;&gt;&lt;del&gt;DERBY-2652&lt;/del&gt;&lt;/a&gt;, documenting different behavior for Clob.setCharacterStream between embedded and client driver.&lt;/p&gt;</comment>
                            <comment id="12636559" author="kristwaa" created="Fri, 3 Oct 2008 08:16:01 +0100"  >&lt;p&gt;I&apos;m closing this issue, the methods have been implemented.&lt;/p&gt;

&lt;p&gt;Sunitha&apos;s comment seems to have been addressed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12368767">DERBY-2618</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12366477">DERBY-2519</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12317015">DERBY-572</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12369404">DERBY-2652</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12364911">DERBY-2450</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12357258" name="derby-2346-4a_javadoc.diff" size="18507" author="kristwaa" created="Mon, 14 May 2007 14:36:12 +0100"/>
                            <attachment id="12357259" name="derby-2346-4a_javadoc.stat" size="699" author="kristwaa" created="Mon, 14 May 2007 14:36:12 +0100"/>
                            <attachment id="12353374" name="derby-2346-only_for_review.diff" size="28705" author="anurag" created="Thu, 15 Mar 2007 13:03:53 +0000"/>
                            <attachment id="12355296" name="derby-2346.v1.diff" size="55511" author="anurag" created="Wed, 11 Apr 2007 04:13:12 +0100"/>
                            <attachment id="12355635" name="derby-2346v2.diff" size="49277" author="anurag" created="Mon, 16 Apr 2007 20:01:12 +0100"/>
                            <attachment id="12355746" name="derby-2346v3.diff" size="56077" author="anurag" created="Wed, 18 Apr 2007 12:13:32 +0100"/>
                            <attachment id="12355816" name="derby-2346v3.stat" size="997" author="kristwaa" created="Thu, 19 Apr 2007 10:59:46 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Mar 2007 23:43:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30395</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ygv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39402</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>