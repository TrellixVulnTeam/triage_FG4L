<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1848/DERBY-1848.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1848] jdbcapi/SetQueryTimeoutTest.java fails on IBM  wctme 5.7</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1848</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following is the diff:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: SetQueryTimeoutTest jdk1.3.1 subset - 2.2 derbyall:jdbcapi 2006-09-10 11:07:05 ***&lt;br/&gt;
7 del&lt;br/&gt;
&amp;lt; Statement 1 completed&lt;br/&gt;
8 del&lt;br/&gt;
&amp;lt; Statement 2 completed&lt;br/&gt;
9 del&lt;br/&gt;
&amp;lt; Statement 3 completed&lt;br/&gt;
10 del&lt;br/&gt;
&amp;lt; Testing timeout with an execute operation&lt;br/&gt;
11 del&lt;br/&gt;
&amp;lt; Statements that should time out timed out, and statements that should complete completed&lt;br/&gt;
12 del&lt;br/&gt;
&amp;lt; Testing setting a negative timeout value&lt;br/&gt;
13 del&lt;br/&gt;
&amp;lt; Negative timeout value caused exception, as expected&lt;br/&gt;
14 del&lt;br/&gt;
&amp;lt; Execute returned a ResultSet&lt;br/&gt;
15 del&lt;br/&gt;
&amp;lt; Testing that Statement remembers timeout.&lt;br/&gt;
16 del&lt;br/&gt;
&amp;lt; Testing that PreparedStatement remembers timeout.&lt;br/&gt;
17 del&lt;br/&gt;
&amp;lt; Testing that CallableStatement remembers timeout.&lt;br/&gt;
18 del&lt;br/&gt;
&amp;lt; Testing timeout with executeUpdate call.&lt;br/&gt;
19 del&lt;br/&gt;
&amp;lt; Test SetQueryTimeoutTest PASSED&lt;br/&gt;
19a7,11&lt;br/&gt;
&amp;gt; Test SetQueryTimeoutTest FAILED&lt;br/&gt;
&amp;gt; org.apache.derbyTesting.functionTests.tests.jdbcapi.SetQueryTimeoutTest$TestFailedException: Unexpected exception in 1: java.sql.SQLException: The statement has been cancelled or timed out.&lt;br/&gt;
&amp;gt; ERROR XCL52: The statement has been cancelled or timed out.&lt;br/&gt;
&amp;gt; java.sql.SQLException: Invalid transaction state.&lt;br/&gt;
&amp;gt; java.sql.SQLException: Invalid transaction state.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   SetQueryTimeoutTest jdk1.3.1 subset - 2.2 derbyall:jdbcapi 2006-09-10 11:07:26 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>Windows</environment>
        <key id="12349880">DERBY-1848</key>
            <summary>jdbcapi/SetQueryTimeoutTest.java fails on IBM  wctme 5.7</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="kartha">Rajesh Kartha</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Sep 2006 01:25:19 +0100</created>
                <updated>Fri, 21 Jan 2011 17:49:17 +0000</updated>
                            <resolved>Wed, 11 Jun 2008 05:37:47 +0100</resolved>
                                    <version>10.2.2.1</version>
                    <version>10.3.1.4</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12504018" author="army" created="Tue, 12 Jun 2007 22:55:57 +0100"  >&lt;p&gt;Saw this on 10.3 trunk (svn 546339) on June 11th 2007, as well.&lt;/p&gt;</comment>
                            <comment id="12526494" author="kmarsden" created="Tue, 11 Sep 2007 16:32:57 +0100"  >&lt;p&gt;Unchecking Regession checkbox as this is not a confirmed product regression&lt;/p&gt;</comment>
                            <comment id="12530601" author="army" created="Thu, 27 Sep 2007 00:51:46 +0100"  >&lt;p&gt;For what it&apos;s worth, I saw this failure against 10.4 trunk (svn 579424) with weme6.1, as well.  The test is now a JUnit test and the assertion failure is:&lt;/p&gt;

&lt;p&gt;  Output at line 7 expected:&amp;lt;Statement 1 completed&amp;gt; but was:&amp;lt;Test SetQueryTimeoutTest FAILED&amp;gt;&lt;/p&gt;

&lt;p&gt;That same diff also shows up in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2997&quot; title=&quot;suites.All hangs with failures with weme 6.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2997&quot;&gt;&lt;del&gt;DERBY-2997&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12569593" author="kmarsden" created="Sat, 16 Feb 2008 16:57:31 +0000"  >&lt;p&gt;Saw this against weme6.1 on February 16, 2008 on trunk.&lt;/p&gt;</comment>
                            <comment id="12595720" author="mikem" created="Fri, 9 May 2008 22:11:42 +0100"  >&lt;p&gt;Saw again on the trunk in the following results, most recently on 5/6/08&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/649735-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/649735-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/649735-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/649735-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/650349-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/650349-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/654381-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/weme6.1/654381-suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There was 1 failure:&lt;br/&gt;
1) SetQueryTimeoutTest(org.apache.derbyTesting.functionTests.tests.jdbcapi.JDBCHarnessJavaTest)junit.framework.ComparisonFailure: Output at line 7 expected:&amp;lt;Statement 1 completed&amp;gt; but was:&amp;lt;Test SetQueryTimeoutTest FAILED&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon(CanonTestCase.java:100)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.HarnessJavaTest.runTest(HarnessJavaTest.java:91)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="12599461" author="mamtas" created="Fri, 23 May 2008 19:49:06 +0100"  >&lt;p&gt;I have a scaled down reproducible version (it reproduces about once in 10runs of the program) of jdbcapi/SetQueryTimeoutTest.java. I have been running my test with weme 6.1 on the trunk. I will spend time on understanding the test better to see what sequence of sqls result into time out errors.&lt;/p&gt;</comment>
                            <comment id="12599465" author="mamtas" created="Fri, 23 May 2008 19:55:30 +0100"  >&lt;p&gt;Actually, it is not totally stand-alone test case. It is relying on a method declared inside SetQueryTimeoutTest.java for a user-defined function. So, in order to run the standalone JDBC program(DERBY_1848_Repro.java ), you need to have SetQueryTimeoutTest in your classpath. I will work on removing that dependency from the standalone java program.&lt;/p&gt;</comment>
                            <comment id="12599480" author="mamtas" created="Fri, 23 May 2008 20:29:08 +0100"  >&lt;p&gt;This updated reproducible program does not reference code inside SetQueryTimeoutTest.java&lt;/p&gt;</comment>
                            <comment id="12600372" author="mamtas" created="Wed, 28 May 2008 06:34:30 +0100"  >&lt;p&gt;After looking at the stand-alone test case more, what I have found is that it creates 100 Connection objects (2 would have been sufficient in the stand alone test case) and then sets TRANSACTION_READ_UNCOMMITTED on each of those Connection objects. Later, using the first Connection object, it creates 2 PreparedStatements, StatementA and StatementB. StatementA will later be set with a query timeoute of 1secs but StatementB has no timeout set on it. Next, using the second Connection object, the test program creates 2 PreparedStatements, StatementC and StatementD. Both these PreparedStatements do not have any timeout set on them. Then we start 4 separate threads using each of the PreparedStatement objects and fetch the data from them. (All the 4 PreparedStatements are made using the same SQL). The program expects only StatementA to timeout because it has non-zero query timeout set on it. It expects the other 3 PreparedStatements to finish with no timeouts. But for some reason, with weme6.1, the test times out every now and then for StatementB. I was wondering if this rings a bell to anyone. In the mean time, I am trying to debug this further.&lt;/p&gt;</comment>
                            <comment id="12600576" author="mamtas" created="Wed, 28 May 2008 19:56:08 +0100"  >&lt;p&gt;I just wanted to note the fact that this issue seems specific to J2ME implementation (I have only tested using IBM&apos;s J2ME implementation weme6.1). The same test program after repeated executions (I tried about 30 times) with IBM jdks 1.5 and 1.4 does not fail. &lt;/p&gt;</comment>
                            <comment id="12602064" author="mamtas" created="Tue, 3 Jun 2008 21:41:04 +0100"  >&lt;p&gt;Around each position moving request on a ResultSet object (next/previous/first/last etc), Derby pushes the StatementContext for that Statement (EmbedResultSet.movePosition). And once the ResultSet positioning is over, the StatementContext is popped back. This happens in EmbedResultSet.moveposition(int,int,String) method.&lt;/p&gt;

&lt;p&gt;During the pushing of the StatementContext (in GenericLangaugeConnectionContext.pushStatementContext), we mark the StatementContext to &lt;br/&gt;
be in use by calling  GenericStatementContext.setInUse. This setInUse method checks if query timeout is set on the Statement, and if yes, then it starts a Timer which uses CancelQueryTask to keep track of when the Statement execution should be marked timedout (The setting of the CancelQueryTask happens in GenericStatementContext.setInUse).&lt;/p&gt;

&lt;p&gt;Once the requested positioning is done on the ResultSet object, Derby goes through the process of popping the StatementContext. This happens in GenericLangaugeConnectionContext.popStatementContext. Here, we mark the StatementContext as not in use since we are going to pop the StatementContext. This work gets done in GenericStatementContext.clearInUse. clearInUse checks if there is a timeout timer associated with the StatementContext (this association was done in pushStatementContext) and if yes, then it disassociates the timer and then marks the timer object as null. It also goes ahead and marks the cancel query flag to flase (cancellationFlag). The cancellationFlag tells whether the query associated with the StatementContext has exceeded the timeout limit. If user never set a query timeout on the Statement object, cancellationFlag will always be false. But if the user has set a query timeout, then this flag will be set to true by the CancelQueryTask when it finds that the Statement has run over it&apos;s limit of timeout amount. We do not throw an exception for query timeout as soon as the flag gets set to true. The cancellationFlag gets checked only when the user has requested a position movement on the ResultSet object. &lt;/p&gt;

&lt;p&gt;So, one possible scenario can be that we push a StatementContext because user has requested say, ResultSet.next. During push, we set a query timeout timer because user has requested for timeout on the query. Then we go through the code for moving to next row in the ResultSet. The first thing we check there is if the query is marked cancelled (by checking cancellationFlag on StatementContext). If yes, then we throw an exception. But for this case, let&apos;s assume the query has not timeed out yet. Hence we go through the rest of the code for moving to next row. While we are doing&lt;br/&gt;
this(ie before we are finished with the code for moving to next row), say the timer times out and the timer goes and sets cancellationFlag to true (this happens in CancelQueryTask.run() which lives in the class GenericStatementContext). But this setting of flag is little too late for the current movement within the ResultSet object because we had just checked the flag earlier and it was set to false at that time. So, at this point, we just finish the ResultSet movement and then pop the StatementContext without throwning any exception. If the user has asked for another ResultSet movement after the current one, we will catch the query timeout, go through popping the current Statement Context and then throw an exception. The &lt;br/&gt;
popping of the StatementContext marks the StatementContext associated with the query timeout timer to false and then it nullifies the query timeout timer.&lt;/p&gt;

&lt;p&gt;What seems to be happening in case of weme6.1 occassionally is that once the query timeout has been set and detected (which causes us to nullify the CancelQueryTask associated with the StatementContext being popped and throw exception), Derby somehow manages to set the query timeout to true again and we end up detecting it again and apparently we associate that timeout with a StatementContext that has not even requested a query timeout on it.&lt;/p&gt;


&lt;p&gt;I wondered if someone familiar with this query timeout code can see what can cause us to set the timeout again when apparently we have nulled out the timer (in GenericLangaugeConnectionContext.popStatementContext).&lt;/p&gt;</comment>
                            <comment id="12603689" author="mamtas" created="Mon, 9 Jun 2008 22:07:29 +0100"  >&lt;p&gt;I think fixing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3338&quot; title=&quot;CancelQueryTask.forgetContext() could be simplified.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3338&quot;&gt;&lt;del&gt;DERBY-3338&lt;/del&gt;&lt;/a&gt; will fix this jira entry as well. More info can be found in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3338&quot; title=&quot;CancelQueryTask.forgetContext() could be simplified.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3338&quot;&gt;&lt;del&gt;DERBY-3338&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12604117" author="mamtas" created="Wed, 11 Jun 2008 05:37:47 +0100"  >&lt;p&gt;I am resolving this issue because I think fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3338&quot; title=&quot;CancelQueryTask.forgetContext() could be simplified.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3338&quot;&gt;&lt;del&gt;DERBY-3338&lt;/del&gt;&lt;/a&gt; should fix this issue. If the problem reappears on the test machines, we can reopen this issue.&lt;/p&gt;</comment>
                            <comment id="12604361" author="mamtas" created="Wed, 11 Jun 2008 23:13:19 +0100"  >&lt;p&gt;Migrated the changes into 10.4 codeline(with revision 666871). Will work on migrating next to 10.3 codeline. &lt;/p&gt;</comment>
                            <comment id="12604550" author="mamtas" created="Thu, 12 Jun 2008 16:54:09 +0100"  >&lt;p&gt;Migrated the changes into 10.3.3.1 codeline also with revision 667136.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12386811">DERBY-3338</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12382692" name="DERBY_1848_Repro.java" size="16017" author="mamtas" created="Fri, 23 May 2008 20:29:08 +0100"/>
                            <attachment id="12382683" name="DERBY_1848_Repro.java" size="15675" author="mamtas" created="Fri, 23 May 2008 19:49:06 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 12 Jun 2007 21:55:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22748</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mzr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37543</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>