<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:45:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3634/DERBY-3634.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3634] Cannot use row_number() in ORDER BY clause</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3634</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following query works correctly:&lt;/p&gt;

&lt;p&gt;select abs(a), row_number() over ()&lt;br/&gt;
from t&lt;br/&gt;
where a &amp;gt; 100 and a &amp;lt; 111&lt;br/&gt;
order by abs(a)&lt;/p&gt;

&lt;p&gt;I expected the following query to also work, but it raised an exception:&lt;/p&gt;

&lt;p&gt;select abs(a), row_number() over ()&lt;br/&gt;
from t&lt;br/&gt;
where a &amp;gt; 100 and a &amp;lt; 111&lt;br/&gt;
order by row_number() over ()&lt;/p&gt;

&lt;p&gt;This is the error I saw: &quot;ERROR 42X01: Syntax error: Encountered &quot;over&quot; at line 5, column 23&quot;.&lt;/p&gt;

&lt;p&gt;Here are the reasons why I think that this syntax is supposed to be supported:&lt;/p&gt;

&lt;p&gt;According to my reading of the 2003 SQL spec, the ORDER BY clause should be able to sort on any expression in the SELECT list. That includes OLAP expressions. I believe this is so because, according to part 2, section 10.10 (&amp;lt;sort specification&amp;gt;), a &amp;lt;sort key&amp;gt; can be any &amp;lt;value expression&amp;gt; and if you follow the grammar for &amp;lt;value expression&amp;gt;, it can resolve to be a &amp;lt;value expression primary&amp;gt; (see section 6.3), which can in turn resolve to be a &amp;lt;window function&amp;gt;. This reasoning is supported by tracing the hotlinks on the following page which lays out the SQL 2003 BNF: &lt;a href=&quot;http://savage.net.au/SQL/sql-2003-2.bnf.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://savage.net.au/SQL/sql-2003-2.bnf.html&lt;/a&gt; This interpretation is further supported by the example of an ORDER BY clause referencing an OLAP expression which is provided on page 23 of the introduction to OLAP written by Fred Zemke, Krishna Kulkarni, Andy Witkowski, and Bob Lyle: www.cse.iitb.ac.in/dbms/Data/Papers-Other/SQL1999/OLAP-99-154r2.pdf&lt;/p&gt;</description>
                <environment></environment>
        <key id="12394334">DERBY-3634</key>
            <summary>Cannot use row_number() in ORDER BY clause</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Apr 2008 19:43:48 +0100</created>
                <updated>Tue, 13 Jul 2010 19:03:38 +0100</updated>
                            <resolved>Fri, 23 Oct 2009 19:07:53 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12597452" author="knutanders" created="Fri, 16 May 2008 13:45:43 +0100"  >&lt;p&gt;Fixed typo in summary.&lt;/p&gt;</comment>
                            <comment id="12645775" author="knutanders" created="Fri, 7 Nov 2008 14:49:20 +0000"  >&lt;p&gt;There&apos;s a similar problem when you use an alias in the ORDER BY clause:&lt;/p&gt;

&lt;p&gt;This query works:&lt;/p&gt;

&lt;p&gt;select abs(a) c, row_number() over ()&lt;br/&gt;
from t&lt;br/&gt;
where a &amp;gt; 100 and a &amp;lt; 111&lt;br/&gt;
order by c&lt;/p&gt;

&lt;p&gt;Whereas this query fails (ERROR 42X78: Column &apos;C&apos; is not in the result of the query expression.):&lt;/p&gt;

&lt;p&gt;select abs(a), row_number() over () c&lt;br/&gt;
from t&lt;br/&gt;
where a &amp;gt; 100 and a &amp;lt; 111&lt;br/&gt;
order by c&lt;/p&gt;</comment>
                            <comment id="12728076" author="knutanders" created="Tue, 7 Jul 2009 13:58:26 +0100"  >&lt;p&gt;Triaged for 10.5.2. Made it Unassigned because there has been no activity.&lt;/p&gt;</comment>
                            <comment id="12744825" author="dagw" created="Wed, 19 Aug 2009 02:12:31 +0100"  >&lt;p&gt;While looking into the issues logged against the present&lt;br/&gt;
ROW_NUMBER/WINDOW functionality (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3634&quot; title=&quot;Cannot use row_number() in ORDER BY clause&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3634&quot;&gt;&lt;del&gt;DERBY-3634&lt;/del&gt;&lt;/a&gt;(1), &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3635&quot; title=&quot;Cannot build SELECT LIST expressions involving row_number()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3635&quot;&gt;&lt;del&gt;DERBY-3635&lt;/del&gt;&lt;/a&gt;(2),&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4069&quot; title=&quot;Wrong behavior when ROW_NUMBER is combined with ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4069&quot;&gt;&lt;del&gt;DERBY-4069&lt;/del&gt;&lt;/a&gt;(3), I was hard pressed to find a way to fix these without&lt;br/&gt;
doing a major rewrite.&lt;/p&gt;

&lt;p&gt;1) &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3634&quot; title=&quot;Cannot use row_number() in ORDER BY clause&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3634&quot;&gt;&lt;del&gt;DERBY-3634&lt;/del&gt;&lt;/a&gt; Cannot use row_number() in ORDER BY clause&lt;br/&gt;
2) &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3635&quot; title=&quot;Cannot build SELECT LIST expressions involving row_number()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3635&quot;&gt;&lt;del&gt;DERBY-3635&lt;/del&gt;&lt;/a&gt; Cannot build SELECT LIST expressions involving row_number()&lt;br/&gt;
3) &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4069&quot; title=&quot;Wrong behavior when ROW_NUMBER is combined with ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4069&quot;&gt;&lt;del&gt;DERBY-4069&lt;/del&gt;&lt;/a&gt; Wrong behavior when ROW_NUMBER is combined with ORDER BY&lt;/p&gt;

&lt;p&gt;This patch is a proof-of-concept (not for commit!) for restructuring&lt;br/&gt;
the row_number/windowing code, which solves the three issues above and&lt;br/&gt;
adds some generality as well. &lt;/p&gt;

&lt;p&gt;It does not yet address &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3505&quot; title=&quot;Current implementation of ROW_NUMBER() window function does not stop execution once criteria is met&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3505&quot;&gt;DERBY-3505&lt;/a&gt; &quot;Current implementation of&lt;br/&gt;
ROW_NUMBER() window function does not stop execution once criteria is&lt;br/&gt;
met&quot;.&lt;/p&gt;

&lt;p&gt;For details, see the write-up in derby-3634-a.txt.&lt;/p&gt;

&lt;p&gt;The patch adds new tests for the new functionality. Regressions ran cleanly.&lt;/p&gt;</comment>
                            <comment id="12745001" author="knutanders" created="Wed, 19 Aug 2009 12:11:41 +0100"  >&lt;p&gt;I noticed another row_number() problem that I don&apos;t think is mentioned in any of the bug reports. You cannot use row_number() in EXCEPT queries. (It works in UNION queries, though.)&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select x, row_number() over() from t except select x, row_number() over () from t;&lt;br/&gt;
ERROR 42X77: Column position &apos;2&apos; is out of range for the query expression.&lt;/p&gt;

&lt;p&gt;With your patch, this query starts working too, so it looks like it must be doing something right. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12745732" author="dagw" created="Fri, 21 Aug 2009 01:00:41 +0100"  >&lt;p&gt;Attaching version &quot;b&quot; of this patch. Relative to &quot;a&quot;, it adds:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;formatting cleanup, whitespace, long lines etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Makes ROW_NUMBER work inside an ORDER BY clause in the presence of&lt;br/&gt;
  a WHERE clause. It was optimized away because it was erroneously&lt;br/&gt;
  found to be constant relative to the restriction, see SelectNode&apos;s&lt;br/&gt;
  call to orderByList.removeConstantColumns(wherePredicates). &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Letting WdwFunctionNode overload methods isConstantExpression and&lt;br/&gt;
  constantExpression to return &quot;false&quot; solved the problem. A new test&lt;br/&gt;
  case has been added to OLAPTest to verify this use case.&lt;/p&gt;

&lt;p&gt;The patch it not production-ready, it lacks some Javadocs still, but&lt;br/&gt;
otherwise, I think it is ready for a review.&lt;/p&gt;</comment>
                            <comment id="12747691" author="bryanpendleton" created="Tue, 25 Aug 2009 23:27:11 +0100"  >&lt;p&gt;Hi Dag, thanks for working on this. I&apos;ve just started reading your detailed writeups; they are very helpful &amp;#8211; thanks!&lt;/p&gt;

&lt;p&gt;I think it would be nice to spell out the word &quot;Window&quot; in the code, so we&apos;d have&lt;br/&gt;
WindowFunctionNode, not WdwFunctionNode, etc.&lt;/p&gt;</comment>
                            <comment id="12748014" author="dagw" created="Wed, 26 Aug 2009 17:26:53 +0100"  >&lt;p&gt;Thanks for looking at this, Bryan!&lt;br/&gt;
I agree, I intend to change the names to &quot;window&quot; all over;&lt;br/&gt;
I only shortened it because the old windowing code is still in the code base (the present patch doesn&apos;t remove it except for in the grammar), intention being that it would be easy to see what&apos;s old and what&apos;s new.&lt;/p&gt;</comment>
                            <comment id="12748616" author="bryanpendleton" created="Fri, 28 Aug 2009 00:27:18 +0100"  >&lt;p&gt;I read through your writeup in more detail &amp;#8211; it looks great!&lt;/p&gt;

&lt;p&gt;Am I correct in understanding that the &quot;window function node&quot; classes would be the place&lt;br/&gt;
where we could add additional window functions in the future, such as RANK, NTILE, or&lt;br/&gt;
maybe moving averages and things like that?&lt;/p&gt;

&lt;p&gt;Regarding leaving the complete syntax present in the parser, but with parts commented out,&lt;br/&gt;
what is the tradeoff between doing that, versus having the unsupported syntax variants be&lt;br/&gt;
present and recognized by the parser, but throw some sort of &quot;sorry, not yet implemented&quot; exception?&lt;/p&gt;

&lt;p&gt;Regarding keeping the patch simpler for review, perhaps you could post two patches:&lt;br/&gt;
1) the first patch would delete the old code that we aren&apos;t going to keep around any more&lt;br/&gt;
2) the second patch would be your proposed new code, with all the function names, etc.&lt;br/&gt;
as you actually intend them to be.&lt;/p&gt;

&lt;p&gt;That way, patch #2 would still be a manageable size (wouldn&apos;t include large diffs for removal&lt;br/&gt;
of old code) but it would also be possible to apply both patches in sequence and see the&lt;br/&gt;
proposed codeline as you intend it to really look (&quot;window&quot; rather than &apos;wdw&quot;, etc.)&lt;/p&gt;

&lt;p&gt;Anyway, now that I&apos;ve read through your design notes, I&apos;ll try to find some time to read&lt;br/&gt;
through the actual code soon.&lt;/p&gt;</comment>
                            <comment id="12748661" author="dagw" created="Fri, 28 Aug 2009 04:40:58 +0100"  >&lt;p&gt;Thanks for looking at this, Bryan!&lt;/p&gt;

&lt;p&gt;Yes, that was indeed my intention for the &quot;window function node&quot; classes.&lt;/p&gt;

&lt;p&gt;Regarding the ordering of patches, what you propose makes sense, I&lt;br/&gt;
guess I hesitated to do that at first since I wasn&apos;t sure how long it&lt;br/&gt;
would take to replace the old code, and it&apos;s tedious to maintain&lt;br/&gt;
sequences of dependent patches. But the removal patch would be quite stable, &lt;br/&gt;
so I&apos;ll get on to that.&lt;/p&gt;</comment>
                            <comment id="12751226" author="dagw" created="Fri, 4 Sep 2009 00:58:51 +0100"  >&lt;p&gt;Uploading patch derby-3634-remove, which removes the old windowing&lt;br/&gt;
code so as to make the new patch able to use legible &quot;window&quot;&lt;br/&gt;
identifiers wihtout risk of crashing with old code as well as make&lt;br/&gt;
that patch smaller, as suggested by Bryan.&lt;/p&gt;

&lt;p&gt;This patch is essentially a &quot;backwards merge&quot; of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2998&quot; title=&quot;Add support for ROW_NUMBER() window function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2998&quot;&gt;&lt;del&gt;DERBY-2998&lt;/del&gt;&lt;/a&gt; mods, cf.&lt;br/&gt;
&lt;a href=&quot;http://svnbook.red-bean.com/en/1.5/svn-book.html#svn.branchmerge.basicmerging.undo&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svnbook.red-bean.com/en/1.5/svn-book.html#svn.branchmerge.basicmerging.undo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;svn merge -c -634057 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -633251 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -633067 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -633058 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -632992 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -632988 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -632494 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -601311 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -601309 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c -601021 &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;plus some conflict resolutions and final svn deletes. Running&lt;br/&gt;
regressions.&lt;/p&gt;

&lt;p&gt;Btw, if the new patch doesn&apos;t make the cut, it should be easy to &quot;undo&quot;&lt;br/&gt;
this one again, reviving the old functionality &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12751474" author="dagw" created="Fri, 4 Sep 2009 15:19:52 +0100"  >&lt;p&gt;Regressions passed with the patch derby-3634-remove applied. I intend to commit this patch&lt;br/&gt;
if there are no objections to my approach here.&lt;/p&gt;</comment>
                            <comment id="12754244" author="rhillegas" created="Fri, 11 Sep 2009 18:36:38 +0100"  >&lt;p&gt;+1 to your approach, Dag. I think it will make it easier to follow your new approach to modelling the window structures.&lt;/p&gt;</comment>
                            <comment id="12759017" author="mickyp" created="Thu, 24 Sep 2009 06:30:01 +0100"  >&lt;p&gt;I am a user for derby.&lt;/p&gt;

&lt;p&gt;I don&apos;t know how to apply this patch. It seems that I need to checkout all sources codes and apply this patch then recompile all and jar them to derby.jar. But I don&apos;t think it&apos;s a good way to do for me.&lt;/p&gt;

&lt;p&gt;Will the new release of derby apply the patch and when will be released?&lt;/p&gt;</comment>
                            <comment id="12759125" author="bryanpendleton" created="Thu, 24 Sep 2009 15:06:54 +0100"  >&lt;p&gt;Hi Micky. Your general understanding of how to use the patch is correct. It&apos;s not hard, but you have&lt;br/&gt;
to be comfortable with the overall concepts of working with Java source code. You can find more&lt;br/&gt;
information about working directly with the Derby source code here:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/dev/derby_source.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/dev/derby_source.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/ForNewDevelopers&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/ForNewDevelopers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Successful usage of a patch in a variety of environments increases the likelihood that&lt;br/&gt;
it will be committed to Derby and incorporated in future releases.&lt;/p&gt;</comment>
                            <comment id="12760372" author="mickyp" created="Mon, 28 Sep 2009 21:29:34 +0100"  >&lt;p&gt;Hi, does this patch only be applied to trunk at svn?&lt;/p&gt;

&lt;p&gt;I  checkout two source codes, one is from trunk, the other is from branch 10.5.&lt;br/&gt;
Only the codes from trunk will be compiled after applying the patch. And this trunk is 10.6 beta which is not suitable for my derby database (10.5)&lt;/p&gt;

&lt;p&gt;When I apply the patch to branch 10.5 and run Ant to compile it, there are some errors I don&apos;t know how to solve as following&lt;/p&gt;

&lt;p&gt;====&lt;/p&gt;

&lt;p&gt;compile:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 417 source files to C:\eclipse-galileo\workspace\derby-10.5\classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\eclipse-galileo\workspace\derby-10.5\java\engine\org\apache\derby\impl\sql\compile\ResultColumnList.java:4223: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method isWindowFunction()&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.derby.impl.sql.compile.ResultColumn&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 			if (rc.isWindowFunction()){&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 			      ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\eclipse-galileo\workspace\derby-10.5\java\engine\org\apache\derby\impl\sql\compile\ResultColumnList.java:4238: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method isWindowFunction()&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.derby.impl.sql.compile.ResultColumn&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 			if (rc.isWindowFunction()){&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 			      ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 2 errors&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;br/&gt;
====&lt;/p&gt;

&lt;p&gt;Is any suggesstion?&lt;/p&gt;
</comment>
                            <comment id="12760440" author="bryanpendleton" created="Tue, 29 Sep 2009 00:44:41 +0100"  >&lt;p&gt;Hi Micky,&lt;/p&gt;

&lt;p&gt;Currently, the patch only applies to the trunk.&lt;/p&gt;

&lt;p&gt;You can use the trunk code with your current 10.5 database as follows:&lt;br/&gt;
1) Make a backup of your 10.5 database and restore it to a testing location (IMPORTANT!)&lt;br/&gt;
2) When you run the modified, patched, trunk software to access your test copy&lt;br/&gt;
of your database, pass -Dderby.database.allowPreReleaseUpgrade=true&lt;/p&gt;

&lt;p&gt;This special flag tells the Derby software that it&apos;s OK to open your database using&lt;br/&gt;
the unreleased trunk code, and it will automatically be upgraded to 10.6 trunk format.&lt;br/&gt;
This automatic upgrade, which cannot be undone, is why it is CRITICAL that you&lt;br/&gt;
do this with a testing copy of your database, NOT with your production data.&lt;/p&gt;

&lt;p&gt;If these instructions are confusing, please let us know and I can try to explain some more.&lt;/p&gt;</comment>
                            <comment id="12760490" author="mickyp" created="Tue, 29 Sep 2009 05:02:05 +0100"  >&lt;p&gt;Dear Bryan,&lt;/p&gt;

&lt;p&gt;After apply the patch and use it as you said &quot;pass -Dderby.database.allowPreReleaseUpgrade=true&quot; to run, &lt;br/&gt;
there is syntax error as following, &quot;&#35486;&#27861;&#37679;&#35492;&#65306;Encountered &quot;(&quot; at line 1, column 41&#12290;&quot; (in chinese)&lt;br/&gt;
the error may be translated to &quot;Syntax error: Encountered &quot;(&quot; at line 1, column 41.&quot; in english.&lt;/p&gt;

&lt;p&gt;the SQL query string is&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
SELECT * FROM ( SELECT ROW_NUMBER() OVER() AS rownum, event_log.* FROM event_log WHERE event_log.id&amp;lt;=2147483647) AS TR WHERE rownum &amp;gt;= 2189 AND rownum &amp;lt;= 2288&lt;br/&gt;
&amp;#8212;&lt;/p&gt;

&lt;p&gt;Notice that the SQL query string just doesn&apos;t include the &quot;ORDER BY&quot; clause and cause error.&lt;br/&gt;
Before apply the patch, the SQL query string works well.&lt;/p&gt;

&lt;p&gt;The trunk revision I checkout is 819006.&lt;/p&gt;

&lt;p&gt;How to solve this?&lt;/p&gt;

&lt;p&gt;Thanks your help in advance.&lt;/p&gt;</comment>
                            <comment id="12760520" author="knutanders" created="Tue, 29 Sep 2009 08:24:58 +0100"  >&lt;p&gt;Which patch did you apply? derby-3634-remove.diff removes the support for ROW_NUMBER from trunk in preparation for the fix, so that it will be easier to understand the final patch that will add a completely new implementation of ROW_NUMBER later. If this was the patch you tried, you&apos;ll probably have more luck with derby-3634-b.diff, which is a proof of concept for the planned fix.&lt;/p&gt;</comment>
                            <comment id="12760618" author="dagw" created="Tue, 29 Sep 2009 15:27:09 +0100"  >&lt;p&gt;Hi Micky, I upload derby-3634-c, a slight revision of the proof-of-concept patch (not for production!) which applies&lt;br/&gt;
cleanly against the current trunk at svn (@819907) , so that you may try it out. &lt;br/&gt;
I am currently running full regression tests on it.&lt;/p&gt;</comment>
                            <comment id="12760636" author="mickyp" created="Tue, 29 Sep 2009 17:10:12 +0100"  >&lt;p&gt;@Knut&lt;br/&gt;
Thank for your help.&lt;br/&gt;
I just used the wrong patch derby-3634-remove.diff as you said. After I apply derby-3634-b.diff, SQL query works well but can&apos;t be used for &quot;ORDER BY&quot; query. It show error as later description.&lt;/p&gt;

&lt;p&gt;@Dag&lt;br/&gt;
Thank for your help.&lt;br/&gt;
When I use browser to open &lt;a href=&quot;http://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;, it shows 819978 revision. But I use the same link in Eclipse SVN Repository, the trunk revision always shows 819006 from yesterday even I refresh it. I don&apos;t know why ..., and I also use TortoiseSVN (Windows version) to explore that link, it still shows 819006 at trunk and 819547 at branch in Repository Browser of TortoiseSVN.&lt;/p&gt;

&lt;p&gt;After apply the derby-3634-c.diff patch, it compiles and jar OK. The SQL query string as I mentioned at 28/Sep/09 09:02 PM works well.&lt;br/&gt;
My target is to use ROW_NUMBER() with ORDER BY in one SQL query, but there shows a error as following:&lt;br/&gt;
&apos;Syntax error: Encountered &quot;ORDER&quot; at line 1, column 113&apos;&lt;/p&gt;

&lt;p&gt;the SQL query string is&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
SELECT * FROM ( SELECT ROW_NUMBER() OVER() AS rownum, event_log.* FROM event_log WHERE event_log.id&amp;lt;=2147483647 ORDER BY id DESC) AS TR WHERE rownum &amp;gt;= 2189 AND rownum &amp;lt;= 2288&lt;br/&gt;
&amp;#8212;&lt;/p&gt;

&lt;p&gt;It clearly that the syntax error is caused by the ORDER which is added. But I think the derby-3634-c.diff patch is to solve this problem, am I right?&lt;/p&gt;

&lt;p&gt;Is there something I missed?&lt;/p&gt;</comment>
                            <comment id="12760936" author="dagw" created="Wed, 30 Sep 2009 16:53:57 +0100"  >&lt;p&gt;The problem here is that you have an ORDER BY in a sub-select, which&lt;br/&gt;
is currently not allowed by Derby. ORDER BY is only allowed on the&lt;br/&gt;
outer SELECT. This patch does allow you to use ROW_NUMBER() in the&lt;br/&gt;
order by clause, but this is not what you want, it seems.&lt;/p&gt;

&lt;p&gt;E.g. SELECT ... ORDER BY ROW_NUMBER() OVER () &lt;br/&gt;
is allowed by the patch&lt;/p&gt;

&lt;p&gt;I plan to work on relaxing this restriction as part of the 10.6 work.&lt;/p&gt;

&lt;p&gt;You could probably achieve what you want by using the new OFFSET/FETCH&lt;br/&gt;
FIRST syntax introduced in 10.5, cf.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/ref/rrefsqljoffsetfetch.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/ref/rrefsqljoffsetfetch.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12761032" author="dagw" created="Wed, 30 Sep 2009 23:43:16 +0100"  >&lt;p&gt;Committed derby-3634-remove-2 as svn 820483 and 820494.&lt;/p&gt;</comment>
                            <comment id="12761035" author="dagw" created="Wed, 30 Sep 2009 23:45:54 +0100"  >&lt;p&gt;Note that the proof-of-concept patch is no longer applicable on trunk after derby-3634-remove-2 was committed. Update to svn 820482 if you need it. A new version of derby-3634-c with the proper window naming will appear soon, meanwhile ROW_NUMBER() is unavailable on trunk.&lt;/p&gt;</comment>
                            <comment id="12761308" author="mickyp" created="Thu, 1 Oct 2009 20:25:33 +0100"  >&lt;p&gt;Thank you, Dag.&lt;/p&gt;

&lt;p&gt;The OFFSET/FETCH function is suitable for my application. It works well. I just wanted to use LIMIT and searched results in ROW_NUMBER of derby before. &lt;/p&gt;

&lt;p&gt;Now I wonder what&apos;s the different between them? And which one has better efficiency in core codes?&lt;/p&gt;</comment>
                            <comment id="12761326" author="dagw" created="Thu, 1 Oct 2009 21:17:42 +0100"  >&lt;p&gt;The row_number() is part of SQL&apos;s OLAP machinery and has been in the standard since 1999, I think.&lt;br/&gt;
Until SQL 008 added the new OFFSET/FETCH FIRST syntax, there was no way to achieve &quot;LIMIT&quot; functionality via standard SQL without using the rather more indirect ROW_NUMBER window function.&lt;br/&gt;
If the underlying result set is not materialized (depends on the actual query), the OFFSET/FETCH FIRST is better, because it will stop reading rows from the table once the the # of fetch rows have been seen. For the time being, a WHERE predicate on ROW_NUMBER() is not optimized, so as long as you keep draining the result set, all rows from the underlying (sub)query will be read. There is currently no optimization for skipping (OFFSET); all rows are read internally but discarded until we hit the offset.&lt;/p&gt;</comment>
                            <comment id="12761780" author="dagw" created="Sat, 3 Oct 2009 00:50:14 +0100"  >&lt;p&gt;Uploading a cleaned up version of the last prototype patch. Please see notes in&lt;br/&gt;
derby-3634-newimpl-1.txt attached for details. &lt;/p&gt;

&lt;p&gt;This version is fairly close to a committable state, I hope. &lt;br/&gt;
Comments are much appreciated!&lt;/p&gt;
</comment>
                            <comment id="12762245" author="dagw" created="Mon, 5 Oct 2009 17:33:57 +0100"  >&lt;p&gt;Uploading derby-3634-newimpl-2, which just adds a metadata test fixture for ROW_NUMBER() to OLAPTest, and fixes some end-of-line blanks/too long lines.&lt;/p&gt;</comment>
                            <comment id="12762979" author="knutanders" created="Wed, 7 Oct 2009 11:02:34 +0100"  >&lt;p&gt;Hi Dag,&lt;br/&gt;
I applied the patch and tried some random queries. Most of them worked as expected, but some of them caused assert failures:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values row_number() over ();&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED cannot get interface without operand: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from t where exists (select row_number() over () from t);&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED generatedRef is null.  replaceCallsWithColumnReferences() has not been called on this WindowFunctionNode.  Make surethe node is under a ResultColumn as expected.: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from t where row_number() over () &amp;gt; 3;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED cannot get interface without operand: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select row_number() over (), count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by row_number() over ();&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED generatedRef is null.  replaceCallsWithColumnReferences() has not been called on this WindowFunctionNode.  Make surethe node is under a ResultColumn as expected.: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by row_number() over ();&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED cannot get interface without operand: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;</comment>
                            <comment id="12763132" author="dagw" created="Wed, 7 Oct 2009 18:04:58 +0100"  >&lt;p&gt;Thanks for test driving this, Knut! More cases to handle, it seems! I&apos;m not sure all of these are even allowed, will consult spec.&lt;/p&gt;</comment>
                            <comment id="12763317" author="dagw" created="Thu, 8 Oct 2009 01:29:36 +0100"  >&lt;p&gt;Some comments on your cases, Knut.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values row_number() over ();&lt;/p&gt;

&lt;p&gt;This should be flagged. SQL 2003, section 4.14.9 Windowed tables says:&lt;br/&gt;
&quot;A window is a transient data structure associated with a &amp;lt;table&lt;br/&gt;
expression&amp;gt;.&quot;  A window function like ROW_NUMBER is always defined&lt;br/&gt;
relative a window, and there is no &amp;lt;table expression&amp;gt; here and hence&lt;br/&gt;
no window either.&lt;/p&gt;

&lt;p&gt;Explicitly, in 4.15.3: Window functions may only appear in the &amp;lt;select&lt;br/&gt;
list&amp;gt; of a &amp;lt;query specification&amp;gt; or &amp;lt;select statement: single row&amp;gt;, or&lt;br/&gt;
the &amp;lt;order by clause&amp;gt; of a simple table query.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from t where exists (select row_number() over () from t);&lt;/p&gt;

&lt;p&gt;Bug.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from t where row_number() over () &amp;gt; 3;&lt;/p&gt;

&lt;p&gt;Should be flagged, cf. 4.15.3 quoted above.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select row_number() over (), count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by row_number() over ();&lt;br/&gt;
ij&amp;gt; select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by row_number() over ();&lt;/p&gt;

&lt;p&gt;Both should be flagged, GROUP BY allows &amp;lt;ordinary grouping set&amp;gt; -&amp;gt;&lt;br/&gt;
&amp;lt;grouping column reference&amp;gt;. Cf. 4.15.3 quoted above as well.&lt;/p&gt;</comment>
                            <comment id="12763419" author="knutanders" created="Thu, 8 Oct 2009 09:51:51 +0100"  >&lt;p&gt;Another thing I noticed, was a change in behaviour. Given this sequence of statements&lt;/p&gt;

&lt;p&gt;create table t (x int);&lt;br/&gt;
insert into t values 1,2,3;&lt;br/&gt;
select * from (select row_number() over (), x from t) s(r,x) where x &amp;gt; 2;&lt;/p&gt;

&lt;p&gt;the old implementation would return (3,3) whereas the new implementation returns (1,3), probably because the restriction (x&amp;gt;2) is now pushed down. This is not a bug, as the order of the rows in the inner select is undefined, but it might have some consequences that need to be handled when ORDER BY in sub-selects is implemented (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4397&quot; title=&quot;Allow ORDER BY in subqueries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4397&quot;&gt;&lt;del&gt;DERBY-4397&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Similarly, some may perhaps find it unintuitive that this query now returns 1 for all parameter values in (1,2,3), whereas it previously returned different values for different parameter values:&lt;/p&gt;

&lt;p&gt;    select r from (select row_number() over (), x from t) s(r,x) where x = ?&lt;/p&gt;

&lt;p&gt;But again, it&apos;s not a bug.&lt;/p&gt;</comment>
                            <comment id="12763799" author="dagw" created="Fri, 9 Oct 2009 04:49:18 +0100"  >&lt;p&gt;Uploading derby-3634-newimpl-3. Re-running regressions now.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Inserted code to avoid pushdown of predicate if there is an ORDER BY&lt;br/&gt;
  and a window function because that would make ROW_NUMBER give wrong&lt;br/&gt;
  result, e.g.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    SELECT * from (SELECT ROW_NUMBER() OVER (), j FROM T&lt;br/&gt;
                   ORDER BY j) WHERE j=5&lt;/p&gt;

&lt;p&gt;  Note that ORDER BY in a subselect is not supported until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4397&quot; title=&quot;Allow ORDER BY in subqueries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4397&quot;&gt;&lt;del&gt;DERBY-4397&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
  is completed, so this is just to future-proof the code.  We could&lt;br/&gt;
  elect to always avoid push-down here, since the results may be&lt;br/&gt;
  surprising to some users (ROW_NUMBER() always being 1 for first&lt;br/&gt;
  matching row above), but relying on the order without an ORDER BY is&lt;br/&gt;
  inherently not protable and brittle, so I chose still push down the&lt;br/&gt;
  restrict in such cases, since it&apos;s a valid SQL result, but I am&lt;br/&gt;
  willing to reconsider this decision.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Knut&apos;s bug: Remove an ASSERT in WindowFunctionNode#getGeneratedRef,&lt;br/&gt;
  since there is a valid use case in which the reference is null when&lt;br/&gt;
  retrieved, cf.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  SELECT * FROM t WHERE EXISTS (SELECT ROW_NUMBER() OVER () FROM t)&lt;/p&gt;

&lt;p&gt;  in which case the top PRN of the subquery sitting over a&lt;br/&gt;
  WindowResultSetNode just contains a RC which is boolean constant&lt;br/&gt;
  true.  This means that the&lt;br/&gt;
  WindowFunctionNode#replaceCallsWithColumnReferences will not have&lt;br/&gt;
  been called for a window function call (one of&lt;br/&gt;
  SelectNode.windowFuncCalls), so the returned &lt;/p&gt;
{@code generatedRef}
&lt;p&gt; is&lt;br/&gt;
  null. Another approach would have been to remove the window function&lt;br/&gt;
  call from SelectNode.windowFuncCalls, but that seems more complex.&lt;/p&gt;

&lt;p&gt;  Since the generated ref may now be null, a test is added for this&lt;br/&gt;
  case in WindowResultSetNode#addNewColumns.&lt;/p&gt;

&lt;p&gt;  Added a new test case to OLAPTest to check that this query works.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added check that a window function is not used in a WHERE clause&lt;br/&gt;
  (except when nested inside a subquery). Added test cases for this to&lt;br/&gt;
  OLAPTest.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added check that a window function is not used in a GROUP BY column&lt;br/&gt;
  expression (except when nested inside a subquery, but see&lt;br/&gt;
  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4403&quot; title=&quot;Assert failure (sane) or NullPointerException (insane) when attempting to GROUP BY expression containing scalar subquery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4403&quot;&gt;&lt;del&gt;DERBY-4403&lt;/del&gt;&lt;/a&gt;). Added test cases for this to OLAPTest.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added check that a window function is not used in a HAVING BY column&lt;br/&gt;
  expression (except when nested inside a subquery). Added test cases&lt;br/&gt;
  for this to OLAPTest. SQL 2003, section 7.10 SR 4.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed GroupByNode#addNewColumnsForAggregation to allow window&lt;br/&gt;
  functions inside a subquery in a HAVING clause, e.g.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  select sum(a) from t5 group by b&lt;br/&gt;
               having b = (select row_number() over () + 3&lt;br/&gt;
                               from t5 where a=1)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added check that a window function is not used in a VALUES row&lt;br/&gt;
  constructor (except when nested inside a subquery).  Added test&lt;br/&gt;
  cases for this to OLAPTest.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added check that a window function is not used inside an aggregate&lt;br/&gt;
  function.  Added test cases for this to OLAPTest. SQL 2003, section&lt;br/&gt;
  10.9 SR 7.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added check that a window function is not used inside a JOIN ON&lt;br/&gt;
  clause, (except when nested inside a subquery).  Added test cases&lt;br/&gt;
  for this to OLAPTest. SQL 2003, section 7.7 SR 5.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12763979" author="knutanders" created="Fri, 9 Oct 2009 12:39:32 +0100"  >&lt;p&gt;Patch #3 appears to be missing some files, so I&apos;m not able to compile with it.&lt;/p&gt;</comment>
                            <comment id="12764052" author="dagw" created="Fri, 9 Oct 2009 16:31:57 +0100"  >&lt;p&gt;Sorry, here is the full patch. Regressions ran ok.&lt;/p&gt;</comment>
                            <comment id="12766011" author="knutanders" created="Thu, 15 Oct 2009 12:05:40 +0100"  >&lt;p&gt;After &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3002&quot; title=&quot;Add support for GROUP BY ROLLUP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3002&quot;&gt;&lt;del&gt;DERBY-3002&lt;/del&gt;&lt;/a&gt;, the patch needs to be refreshed because of a conflict in OLAPTest.&lt;/p&gt;</comment>
                            <comment id="12766028" author="knutanders" created="Thu, 15 Oct 2009 12:36:12 +0100"  >&lt;p&gt;Thanks Dag, it looks like the problems I found in the previous patch have been fixed. Noticed another problem with this query (inspired by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4391&quot; title=&quot;NullPointerException when comparing indexed column with result from a set operation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4391&quot;&gt;&lt;del&gt;DERBY-4391&lt;/del&gt;&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int unique, y int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values (1,2);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t where x &amp;gt; (select row_number() over () from sysibm.sysdummy1 union select 1-row_number() over () from sysibm.sysdummy1 where 1=0);&lt;br/&gt;
ERROR 21000: Scalar subquery is only allowed to return a single row.&lt;/p&gt;

&lt;p&gt;But the scalar subquery does return a single row:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select row_number() over () from sysibm.sysdummy1 union select 1-row_number() over () from sysibm.sysdummy1 where 1=0;&lt;br/&gt;
1                   &lt;br/&gt;
--------------------&lt;br/&gt;
1                   &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;</comment>
                            <comment id="12766097" author="dagw" created="Thu, 15 Oct 2009 16:38:56 +0100"  >&lt;p&gt;Thanks for looking again, Knut. The last error you see seems not introduced by this patch, you can see it in this query as well (without the patch):&lt;/p&gt;

&lt;p&gt;select * from t where i &amp;gt; (values 1 union select j from t where 1=0)&lt;/p&gt;

&lt;p&gt;It only happens if the outer selected column &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; is unique; if I change the query to &lt;/p&gt;

&lt;p&gt;select * from t where j &amp;gt; (values 1 union select j from t where 1=0)&lt;/p&gt;

&lt;p&gt;it works as expected.&lt;/p&gt;</comment>
                            <comment id="12766102" author="dagw" created="Thu, 15 Oct 2009 16:46:13 +0100"  >&lt;p&gt;Re-spinning this patch, resolving conflict in OLAPTest plus fixed an omission in the new GroupByColumn accept method (to heed any skipChildren).&lt;/p&gt;</comment>
                            <comment id="12766228" author="knutanders" created="Thu, 15 Oct 2009 21:29:48 +0100"  >&lt;p&gt;OK, thanks, I&apos;ll file a separate bug then.&lt;/p&gt;</comment>
                            <comment id="12766247" author="knutanders" created="Thu, 15 Oct 2009 22:00:04 +0100"  >&lt;p&gt;Logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4411&quot; title=&quot;Scalar subquery erroneously rejected for not returning exactly one row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4411&quot;&gt;&lt;del&gt;DERBY-4411&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By the way, the syntax rules in SQL:2003, part 2, 14.1 &amp;lt;declare cursor&amp;gt; say&lt;/p&gt;

&lt;p&gt;18) If an &amp;lt;order by clause&amp;gt; is specified, then:&lt;br/&gt;
a) Let OBC be the &amp;lt;order by clause&amp;gt;. Let NSK be the number of &amp;lt;sort specification&amp;gt;s in OBC. For each&lt;br/&gt;
   i between 1 (one) and NSK, let Ki be the &amp;lt;sort key&amp;gt; contained in the i-th &amp;lt;sort specification&amp;gt; in OBC.&lt;br/&gt;
b) Each Ki shall contain a &amp;lt;column reference&amp;gt; and shall not contain a &amp;lt;subquery&amp;gt; or a &amp;lt;set function&lt;br/&gt;
   specification&amp;gt;.&lt;/p&gt;

&lt;p&gt;What exactly does this mean? ROW_NUMBER() OVER () doesn&apos;t contain a &amp;lt;column reference&amp;gt;, so should ORDER BY ROW_NUMBER() OVER () be rejected because of this? On the other hand, (ROW_NUMBER() OVER () + COL1) does contain a &amp;lt;column reference&amp;gt;, so ORDER BY (ROW_NUMBER() OVER () + COL1) would be fine? I&apos;m sure I&apos;m missing something, but what?&lt;/p&gt;</comment>
                            <comment id="12766346" author="dagw" created="Fri, 16 Oct 2009 01:25:09 +0100"  >&lt;p&gt;Yes, that&apos;s how I read it, too (no col.ref -&amp;gt; rejection). A window function is explicitly allowed inside an ORDER BY clause, though, cf. SQL 2003:2, section 4.15.3 &quot;Window functions&quot;:&lt;/p&gt;

&lt;p&gt;&quot;Window functions may only appear in the &amp;lt;select list&amp;gt; of a &amp;lt;query specification&amp;gt; or &amp;lt;select statement: single row&amp;gt;, or the &amp;lt;order by clause&amp;gt; of a simple table query.&quot;&lt;/p&gt;

&lt;p&gt;But Derby is more lenient, allowing &amp;lt;sort key&amp;gt;s without column references, so I think ROW_NUMBER doesn&apos;t introduce anything new in this respect, as you found in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4406&quot; title=&quot;Wrong order when using ORDER BY on non-deterministic function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4406&quot;&gt;&lt;del&gt;DERBY-4406&lt;/del&gt;&lt;/a&gt; (&quot;ORDER BY RANDOM()&quot;)&lt;/p&gt;</comment>
                            <comment id="12766452" author="knutanders" created="Fri, 16 Oct 2009 08:40:55 +0100"  >&lt;p&gt;I agree. Derby already accepts sort keys without column references, so there&apos;s no reason why we should treat ROW_NUMBER differently from any other no-arg function in an ORDER BY clause.&lt;/p&gt;</comment>
                            <comment id="12769334" author="dagw" created="Fri, 23 Oct 2009 19:07:10 +0100"  >&lt;p&gt;Committed derby-3634-newimpl-4 as svn 829155, resolving.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12375659">DERBY-2998</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12415425">DERBY-4069</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12394338">DERBY-3635</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12416941" name="derby-3634-a.diff" size="101933" author="dagw" created="Wed, 19 Aug 2009 02:12:31 +0100"/>
                            <attachment id="12416942" name="derby-3634-a.stat" size="2948" author="dagw" created="Wed, 19 Aug 2009 02:12:31 +0100"/>
                            <attachment id="12416943" name="derby-3634-a.txt" size="38228" author="dagw" created="Wed, 19 Aug 2009 02:12:31 +0100"/>
                            <attachment id="12417196" name="derby-3634-b.diff" size="115610" author="dagw" created="Fri, 21 Aug 2009 01:00:41 +0100"/>
                            <attachment id="12417197" name="derby-3634-b.stat" size="3169" author="dagw" created="Fri, 21 Aug 2009 01:00:41 +0100"/>
                            <attachment id="12420793" name="derby-3634-c.diff" size="104794" author="dagw" created="Tue, 29 Sep 2009 15:27:09 +0100"/>
                            <attachment id="12420794" name="derby-3634-c.stat" size="2197" author="dagw" created="Tue, 29 Sep 2009 15:27:09 +0100"/>
                            <attachment id="12421176" name="derby-3634-newimpl-1.diff" size="112517" author="dagw" created="Sat, 3 Oct 2009 00:50:14 +0100"/>
                            <attachment id="12421177" name="derby-3634-newimpl-1.stat" size="2314" author="dagw" created="Sat, 3 Oct 2009 00:50:14 +0100"/>
                            <attachment id="12421178" name="derby-3634-newimpl-1.txt" size="38558" author="dagw" created="Sat, 3 Oct 2009 00:50:14 +0100"/>
                            <attachment id="12421301" name="derby-3634-newimpl-2.diff" size="115654" author="dagw" created="Mon, 5 Oct 2009 17:33:56 +0100"/>
                            <attachment id="12421302" name="derby-3634-newimpl-2.stat" size="2345" author="dagw" created="Mon, 5 Oct 2009 17:33:57 +0100"/>
                            <attachment id="12421744" name="derby-3634-newimpl-3.diff" size="127477" author="dagw" created="Fri, 9 Oct 2009 16:31:57 +0100"/>
                            <attachment id="12421745" name="derby-3634-newimpl-3.stat" size="2785" author="dagw" created="Fri, 9 Oct 2009 16:31:57 +0100"/>
                            <attachment id="12422243" name="derby-3634-newimpl-4.diff" size="126129" author="dagw" created="Thu, 15 Oct 2009 16:46:13 +0100"/>
                            <attachment id="12422244" name="derby-3634-newimpl-4.stat" size="2748" author="dagw" created="Thu, 15 Oct 2009 16:46:13 +0100"/>
                            <attachment id="12420958" name="derby-3634-remove-2.diff" size="60716" author="dagw" created="Wed, 30 Sep 2009 23:43:16 +0100"/>
                            <attachment id="12420959" name="derby-3634-remove-2.stat" size="1571" author="dagw" created="Wed, 30 Sep 2009 23:43:16 +0100"/>
                            <attachment id="12418564" name="derby-3634-remove.diff" size="75293" author="dagw" created="Fri, 4 Sep 2009 00:58:51 +0100"/>
                            <attachment id="12418565" name="derby-3634-remove.stat" size="1633" author="dagw" created="Fri, 4 Sep 2009 00:58:51 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 May 2008 12:45:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23758</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0pkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37961</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>