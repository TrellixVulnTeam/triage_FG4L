<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:33:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-23/DERBY-23.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-23] just booting jdbc driver and shutting down seem to leak memory</title>
                <link>https://issues.apache.org/jira/browse/DERBY-23</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Reporting for Daniel John Debrunner.&lt;/p&gt;

&lt;p&gt;Doing simple boot and shutdown of the driver in a loop&lt;br/&gt;
seem to grow the heap forever:&lt;br/&gt;
new org.apache.derby.jdbc.EmbeddedDriver(); //boot the driver&lt;br/&gt;
DriverManager.getConnection(&quot;jdbc:derby:;shutdown=true&quot;); &lt;br/&gt;
//shutdown the cloudscape instance completely&lt;/p&gt;

&lt;p&gt;after booting and shutting down 1516 times, memory used is  &lt;br/&gt;
~~41931056 bytes.&lt;br/&gt;
Sample GC Output:&lt;br/&gt;
1931.93: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43484K-&amp;gt;43243K(65088K), 0.1779751 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1933.13: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43511K-&amp;gt;43270K(65088K), 0.1914383 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1934.47: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43538K-&amp;gt;43297K(65088K), 0.1808878 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1935.68: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43564K-&amp;gt;43324K(65088K), 0.4461623 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1937.43: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43591K-&amp;gt;43350K(65088K), 0.1842980 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1938.63: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43617K-&amp;gt;43377K(65088K), 0.1873431 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1939.85: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43644K-&amp;gt;43404K(65088K), 0.1948505 secs&amp;#93;&lt;/span&gt;&lt;br/&gt;
1941.07: &lt;span class=&quot;error&quot;&gt;&amp;#91;Full GC 43671K-&amp;gt;43430K(65088K), 0.1790895 secs&amp;#93;&lt;/span&gt;&lt;/p&gt;
</description>
                <environment></environment>
        <key id="27528">DERBY-23</key>
            <summary>just booting jdbc driver and shutting down seem to leak memory</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="tulika">Tulika Agrawal</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Sep 2004 20:20:45 +0100</created>
                <updated>Tue, 19 Jul 2011 13:17:23 +0100</updated>
                            <resolved>Tue, 22 Aug 2006 14:02:12 +0100</resolved>
                                    <version>10.0.2.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12329592" author="knutanders" created="Sat, 17 Sep 2005 08:45:53 +0100"  >&lt;p&gt;When I looked into this issue, I found a problem with the synchronization. If Derby is shut down right after the driver is loaded, the AntiGC thread will continue to run in most cases. Fixing this problem made the heap grow slower, but it was not enough to stop the memory leak entirely.&lt;/p&gt;</comment>
                            <comment id="12329815" author="knutanders" created="Mon, 19 Sep 2005 17:58:15 +0100"  >&lt;p&gt;The memory leak comes from three sources:&lt;/p&gt;

&lt;p&gt;1) The AntiGC thread is sometimes not terminated. This happens when&lt;br/&gt;
   Derby is shut down right after the driver is loaded, because the&lt;br/&gt;
   run() method in AntiGC starts with setting a boolean variable which&lt;br/&gt;
   is used to decide when the thread should stop. The same variable is&lt;br/&gt;
   set when a request to shut down Derby is sent, and if the shutdown&lt;br/&gt;
   is requested before the AntiGC thread has started running, the&lt;br/&gt;
   request to shut down Derby might not be noticed by AntiGC which&lt;br/&gt;
   will run forever.&lt;/p&gt;

&lt;p&gt;Solution: Don&apos;t set the boolean variable in AntiGC&apos;s run() method. It&lt;br/&gt;
is enough that it is being set when the object is initialized.&lt;/p&gt;

&lt;p&gt;2) Every time the driver is loaded, a new ThreadGroup is created. They&lt;br/&gt;
   don&apos;t seem to be garbage collected even when all their threads have&lt;br/&gt;
   finished.&lt;/p&gt;

&lt;p&gt;Solution: Set the daemon property on the ThreadGroups. This way a&lt;br/&gt;
ThreadGroup will be destroyed when its last running thread (or thread&lt;br/&gt;
group) is destroyed.&lt;/p&gt;

&lt;p&gt;3) The Java Heap Analysis Tool reported that a huge number of&lt;br/&gt;
   ContextManager and ContextService objects were kept in the&lt;br/&gt;
   heap. The objects were not accessible from the root set, but they&lt;br/&gt;
   were not garbage collected, probably because of some cyclic&lt;br/&gt;
   references which the gc cannot handle.&lt;/p&gt;

&lt;p&gt;Solution: Break the reference cycle by nulling out the references to&lt;br/&gt;
the lists of ContextManagers when ContextService objects are stopped.&lt;/p&gt;

&lt;p&gt;The attached patch seems to fix the problems mentioned above. Derbyall&lt;br/&gt;
runs fine, and top reports that the memory usage does not increase&lt;br/&gt;
when running a loop where the driver is loaded (with&lt;br/&gt;
Class.forName(&quot;org...EmbeddedDriver&quot;).newInstance()) and unloaded&lt;br/&gt;
(with DriverManager.getConnection(&quot;jdbc:derby:;shutdown=true&quot;)). That&lt;br/&gt;
is, the memory usage of course increased during the first iteration,&lt;br/&gt;
but not during the approximately 8.5 million next ones.&lt;/p&gt;

&lt;p&gt;I will submit tests later.&lt;/p&gt;</comment>
                            <comment id="12329861" author="djd" created="Tue, 20 Sep 2005 00:46:57 +0100"  >&lt;p&gt;Patch looks good to me, the explanation was clear and very useful.&lt;/p&gt;</comment>
                            <comment id="12329889" author="bandaram" created="Tue, 20 Sep 2005 04:05:50 +0100"  >&lt;p&gt;Good fix. Wonder if adding the explanations in the code, where possible, would be more useful than leaving them in Jira entry.&lt;/p&gt;

&lt;p&gt;Bernt expressed interest in commiting the change, so I am not commiting this to SVN.&lt;/p&gt;</comment>
                            <comment id="12329956" author="knutanders" created="Tue, 20 Sep 2005 16:39:01 +0100"  >&lt;p&gt;Attached patch with comments where appropriate.&lt;/p&gt;</comment>
                            <comment id="12330073" author="knutanders" created="Wed, 21 Sep 2005 17:34:34 +0100"  >&lt;p&gt;Fixed in revision 290644.&lt;/p&gt;</comment>
                            <comment id="12331469" author="knutanders" created="Thu, 6 Oct 2005 17:22:32 +0100"  >&lt;p&gt;As I have mentioned on derby-dev earlier, there is a problem with the&lt;br/&gt;
current fix. After the fix was committed, store/encryptDatabase.sql&lt;br/&gt;
sometimes failed because one or more rawStoreDaemon threads printed a&lt;br/&gt;
NullPointerException to System.err.&lt;/p&gt;

&lt;p&gt;For an example, see:&lt;br/&gt;
&lt;a href=&quot;http://www.multinet.no/~solberg/public/Apache/TinderBox_Derby/testlog/SunOS-5.10_i86pc-i386/290646-encryptionCFB_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.multinet.no/~solberg/public/Apache/TinderBox_Derby/testlog/SunOS-5.10_i86pc-i386/290646-encryptionCFB_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason for this is that the fix nulls out the reference from the&lt;br/&gt;
ContextService to the list of ContextManagers when the ContextService&lt;br/&gt;
is stopped. Some threads with references to the ContextService might&lt;br/&gt;
still be alive when the ContextService is stopped, and they get&lt;br/&gt;
NullPointerExceptions when accessing the stopped ContextService.&lt;/p&gt;

&lt;p&gt;I have only been able to reproduce this behaviour with the&lt;br/&gt;
store/encryptDatabase.sql test on multi-cpu machines running with a&lt;br/&gt;
heavy background load. It seems like the threads that get&lt;br/&gt;
NullPointerExceptions are orphan threads (like the ones described in&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-594&quot; title=&quot;Some rawStoreDaemon threads are not stopped&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-594&quot;&gt;&lt;del&gt;DERBY-594&lt;/del&gt;&lt;/a&gt;) that have not yet been able to start because of the heavy&lt;br/&gt;
background load. The problem might go away when &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-594&quot; title=&quot;Some rawStoreDaemon threads are not stopped&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-594&quot;&gt;&lt;del&gt;DERBY-594&lt;/del&gt;&lt;/a&gt; is resolved,&lt;br/&gt;
but I think it needs further investigation.&lt;/p&gt;</comment>
                            <comment id="12363267" author="knutanders" created="Fri, 20 Jan 2006 01:27:11 +0000"  >&lt;p&gt;I have attached a patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-23&quot; title=&quot;just booting jdbc driver and shutting down seem to leak memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-23&quot;&gt;&lt;del&gt;DERBY-23&lt;/del&gt;&lt;/a&gt;-npe.diff) that addresses the&lt;br/&gt;
NullPointerException messages from rawStoreDaemon threads we have seen&lt;br/&gt;
in derbyall on some occasions.&lt;/p&gt;

&lt;p&gt;The NullPointerExceptions are thrown because&lt;br/&gt;
ContextService.threadContextList is set to null in&lt;br/&gt;
ContextService.stop(), but some of the daemon threads might still try&lt;br/&gt;
to access the variable. The patch adds checks for threadContextList&lt;br/&gt;
being null, and returns null or false in those cases instead of&lt;br/&gt;
failing with a NullPointerException.&lt;/p&gt;

&lt;p&gt;Five tests in derbyall failed when this patch was applied, but that&lt;br/&gt;
seems to be what one should expect these days. All of the failures are&lt;br/&gt;
also seen in the daily regression tests.&lt;/p&gt;

&lt;p&gt;Feel free to review and comment on the patch. Thanks.&lt;/p&gt;</comment>
                            <comment id="12429699" author="knutanders" created="Tue, 22 Aug 2006 14:02:12 +0100"  >&lt;p&gt;I&apos;m marking this issue as resolved.&lt;/p&gt;

&lt;p&gt;The reason why I haven&apos;t resolved it before, is that I still see OutOfMemoryError on some platforms. These errors are caused by the background threads running with a lower priority than the the main thread, and therefore many of the background threads don&apos;t get enough CPU time to shut down. If the main thread takes a break now and then, I don&apos;t see OutOfMemoryError on any platform. That is,&lt;/p&gt;

&lt;p&gt;    while (true) &lt;/p&gt;
{
        Class.forName(&quot;org.apache.derby.jdbc.EmbeddedDriver&quot;).newInstance();
        DriverManager.getConnection(&quot;jdbc:derby:;shutdown=true&quot;);
        Thread.sleep(1);
    }

&lt;p&gt;runs reliably with no memory leak on all platforms I have tested. I don&apos;t want to add a regression test for this issue, since I fear it will be timing dependent and might cause noise in the nightly testing.&lt;/p&gt;

&lt;p&gt;I think the issue can be closed because the remaining problem is unlikely to be seen in a real-world application (who will spend all their CPU time on loading and unloading the driver?). If it turns out to be a problem, I see these possible solutions:&lt;/p&gt;

&lt;p&gt;  1) On shutdown, wait for all background threads to terminate.&lt;br/&gt;
  2) On shutdown, raise the priority of the background threads.&lt;/p&gt;

&lt;p&gt;If someone feels this should be addressed, please open a new issue.&lt;/p&gt;</comment>
                            <comment id="12551264" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:37 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12514531">DERBY-5343</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12322133" name="DERBY-23-npe.diff" size="2653" author="knutanders" created="Fri, 20 Jan 2006 01:27:11 +0000"/>
                            <attachment id="12322134" name="DERBY-23-npe.stat" size="78" author="knutanders" created="Fri, 20 Jan 2006 01:27:11 +0000"/>
                            <attachment id="12314464" name="DERBY-23-with_comments.diff" size="2154" author="knutanders" created="Tue, 20 Sep 2005 16:39:01 +0100"/>
                            <attachment id="12314440" name="DERBY-23.diff" size="1788" author="knutanders" created="Mon, 19 Sep 2005 17:58:15 +0100"/>
                            <attachment id="12314441" name="DERBY-23.stat" size="228" author="knutanders" created="Mon, 19 Sep 2005 17:58:15 +0100"/>
                            <attachment id="12322135" name="derbyall_report.txt" size="209464" author="knutanders" created="Fri, 20 Jan 2006 01:27:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 17 Sep 2005 07:45:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21723</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36356</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>