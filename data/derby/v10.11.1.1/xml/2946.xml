<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:32:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2946/DERBY-2946.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2946] In soft upgrade mode, the metadata queries do not get compiled in SYS schema. This will cause problems in future releases of Derby.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2946</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;EmbedDatabaseMetaData implements metadata queries. The implementation of metadata queries in EmbedDatabaseMetaData checks if we are in soft upgrade mode (getPreparedQuery() has following code)&lt;br/&gt;
if (notInSoftUpgradeMode())&lt;br/&gt;
	s = getPreparedQueryUsingSystemTables(queryName, net);&lt;br/&gt;
else {&lt;br/&gt;
	try &lt;/p&gt;
{
		//Can&apos;t use stored prepared statements because we are in soft upgrade
		//mode and hence need to get metadata sql from metadata.properties file 
		//or metadata_net.properties
		String queryText = getQueryFromDescription(queryName, net);
		s = getEmbedConnection().prepareMetaDataStatement(queryText);
	}
&lt;p&gt; catch (Throwable t) &lt;/p&gt;
{
		throw handleException(t);
	}
&lt;p&gt; &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;So, when running in soft upgrade mode, we do not go through SYSSTATEMENT but this will cause the metadata query to run in whatever the current schema may be rather than in SYS schema. This is not a problem in Derby 10.3 release because during soft upgarde, the collation will always be UCS_BASIC and hence collation mismatch can&apos;t happen.&lt;/p&gt;

&lt;p&gt;But in Derby 10.3, a user can create a database with territory based collation. When such a database will be in soft upgrade mode for say Derby 10.4, the metadata queries will run into problem if they are run in a user schema. This is because in soft upgrade mode, we do not go through SYSSTATEMENTS and instead compile the metadata queries in current schema. If the current schema is user schema, then character string literals in metadata queries will get the collation type of territory based and when compared with character string colunms from SYS tables with collation type of UCS_BASIC, we will end up getting compilation error for the metadata queries. So, before the next release, we will have to fix this problem. One solution may be to somehow make the current compilation schema as SYS when running the metadata queries in soft upgrade mode.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12374010">DERBY-2946</key>
            <summary>In soft upgrade mode, the metadata queries do not get compiled in SYS schema. This will cause problems in future releases of Derby.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Jul 2007 19:44:13 +0100</created>
                <updated>Wed, 5 Sep 2007 09:28:48 +0100</updated>
                            <resolved>Wed, 5 Sep 2007 06:53:41 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12523043" author="mamtas" created="Mon, 27 Aug 2007 17:36:04 +0100"  >&lt;p&gt;While working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-573&quot; title=&quot;Provide support for optimizer overrides in Derby.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-573&quot;&gt;&lt;del&gt;DERBY-573&lt;/del&gt;&lt;/a&gt; (optimizer overrides), we made the decision for metadata calls to always goto metadata.properties rather than SYSSTATEMENTS during soft upgrade. The reason for this was that there were changes made to the metadata queries such that they were recognized only by the 10.2 release and 10.2 code was changed to look for the updated metadata queries and hence when running in soft upgrade mode, the 10.2 engine was expecting the metadata queries which corresponded to 10.2 release rather than pre-10.2 release. &lt;/p&gt;

&lt;p&gt;This approach of going to metadata.properties rather than SYSSTATMENTS during soft upgrade poses a challenge for collation though. The reason for it is that when the metadata queries are run using the plan in the SYSSTATEMENTS table, they are always run in the SYS schema. And hence when the metadata query has something like following in it&apos;s WHERE clause&lt;br/&gt;
P.SELECTPRIV = &apos;Y&apos;&lt;br/&gt;
the left hand side will have collation of UCS_BASIC because column SELECTPRIV is from a table in SYS schema. The constant character string &apos;Y&apos; on the right hand side will also have collation of UCS_BASIC because constant character strings pick up their collation from current compilation schema which is SYS when the metadata queries are run using SYSSTATEMENTS and hence we do not run into mismatched collation types. But during soft upgrade, when the same clause is run, the left hand side will have collation type of UCS_BASIC because it belongs to a table in SYS schema but the constant character string &apos;Y&apos; will have collation for whatever the current compilation schema may be. So, if the metadata query is getting run in soft upgrade mode when the current compilation schema is a user schema, then P.SELECTPRIV = &apos;Y&apos; will fail because the collation of the 2 sides do not match. So, the challenege is to somehow make the current compilation schema to be SYS schema only for the duration of metadata query run during a soft upgrade. At this point, I am not sure how to do it and I will continue looking at it but I will appreciate if someone has any thoughts on the approach or any thoughts on how to change the compilation schema to be SYS during the metadata query execution in soft upgrade mode.&lt;/p&gt;</comment>
                            <comment id="12523074" author="knutanders" created="Mon, 27 Aug 2007 19:15:14 +0100"  >&lt;p&gt;Just a thought...&lt;/p&gt;

&lt;p&gt;In GenericLanguageConnectionContext, there is a method which looks like this:&lt;/p&gt;

&lt;p&gt;        public PreparedStatement prepareInternalStatement(SchemaDescriptor compilationSchema, String sqlText, boolean isForReadOnly, boolean forMetaData) &lt;br/&gt;
	    throws StandardException &lt;/p&gt;
        {
	    return connFactory.getStatement(compilationSchema, sqlText, isForReadOnly).prepare(this, forMetaData);
    	}

&lt;p&gt;Would it work if we added something like&lt;br/&gt;
    if (forMetaData) compilationSchema = systemSchema;&lt;br/&gt;
to this method?&lt;/p&gt;</comment>
                            <comment id="12523312" author="mamtas" created="Tue, 28 Aug 2007 20:05:53 +0100"  >&lt;p&gt;Knut, thanks for the pointer. I will followup on it to see if it can accomplish the job,&lt;/p&gt;</comment>
                            <comment id="12524991" author="mamtas" created="Wed, 5 Sep 2007 06:53:41 +0100"  >&lt;p&gt;Revision 572880 fixes this Jira entry. The commit comments are as follows. Thanks to Knut for his suggestion on code change. That did the trick.&lt;/p&gt;

&lt;p&gt;Commit comments&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2946&quot; title=&quot;In soft upgrade mode, the metadata queries do not get compiled in SYS schema. This will cause problems in future releases of Derby.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2946&quot;&gt;&lt;del&gt;DERBY-2946&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The character string literals take their collation from the current compilation schema. Derby&apos;s metadata queries have lots of comparisons where a character string literal is compared with a character string column from SYS schema. The character string columns from SYS schema have the collation of UCS_BASIC. If the metadata queries get run with user schema as current compilation schema, then the character string constants in metadata queries will get a collation of territory based and this mismatch in collation of character string constants and character string columns will cause the metadata queries to fail. This situation can arise in the current softupgrade code. In softupgrade mode, we do not ensure that the current compilation schema is SYS schema. A simple change in GenericLanguageConnectionContext(GLCC) takes care of that problem. In GLCC, with this checkin, we check if the query being executed is a metadata query and if yes, then we should set the current compilation schema to be SYS schema for that metadata query execution. This takes care of the soft upgrade problem. Outside of soft upgrade mode, we do not have problems with metadata queries because during a normal run/hard upgrade, we go to SYSSTATEMENTS to run metadata queries and that code path ensures that the current compilation schema is SYS schema.&lt;/p&gt;
</comment>
                            <comment id="12525015" author="knutanders" created="Wed, 5 Sep 2007 09:28:48 +0100"  >&lt;p&gt;Changed fix version from 11.0.0.0 to 10.4.0.0.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Aug 2007 18:15:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23334</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy115b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39836</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>