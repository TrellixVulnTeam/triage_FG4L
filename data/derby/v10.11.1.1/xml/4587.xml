<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:36:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4587/DERBY-4587.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4587] Add tools for improved analysis and understanding of query plans and execution statistics</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4587</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I think it would be great to see some work in the area of tools for helping&lt;br/&gt;
with the analysis of complex query execution. Quite frequently, users of&lt;br/&gt;
Derby have trouble comprehending (a) how their query is being translated&lt;br/&gt;
into a query plan by the optimizer, and (b) what the execution-time resource&lt;br/&gt;
usage of the various parts of the query is.&lt;/p&gt;

&lt;p&gt;There are low-level features in Derby which capture this information and&lt;br/&gt;
record it, such as logQueryPlan, and the XPLAIN tables, but there is a lot&lt;br/&gt;
of opportunity for designing higher-level tools which can process the query&lt;br/&gt;
plan and execution statistics information and present it in a more&lt;br/&gt;
comprehensible fashion. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12459386">DERBY-4587</key>
            <summary>Add tools for improved analysis and understanding of query plans and execution statistics</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nirmal">Nirmal Fernando</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                            <label>gsoc</label>
                            <label>gsoc2010</label>
                            <label>mentor</label>
                    </labels>
                <created>Wed, 17 Mar 2010 14:54:48 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:48 +0100</updated>
                            <resolved>Mon, 15 Nov 2010 12:25:19 +0000</resolved>
                                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                    <component>Tools</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12847873" author="nirmal" created="Sun, 21 Mar 2010 03:51:14 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I read &lt;a href=&quot;http://db.apache.org/derby/docs/dev/getstart/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/getstart/&lt;/a&gt; to get an idea about how Derby works, because it&apos;s the most appropriate start in my view.&lt;br/&gt;
But if you can direct me to some guides on developing Derby, that would be really great !! I&apos;ve downloaded, both bin &amp;amp; src of the final release of Derby and also I&apos;ve checked out Derby Trunk through SVN repository, but not quite sure about how can I modify and compile/build the source code.&lt;/p&gt;

&lt;p&gt;Thanks !!&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Nirmal&lt;/p&gt;</comment>
                            <comment id="12847935" author="bryanpendleton" created="Sun, 21 Mar 2010 15:26:07 +0000"  >&lt;p&gt;Hi Nirmal,&lt;br/&gt;
You can find lots of development-related information here: &lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyDev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyDev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find information about compiling and testing Derby from source code&lt;br/&gt;
in the BIULDING.html file in the root of the source tree that you checked out.&lt;/p&gt;</comment>
                            <comment id="12847940" author="nirmal" created="Sun, 21 Mar 2010 16:17:41 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for the link !! I will look in to it.&lt;/p&gt;

&lt;p&gt;I had read Postgres&apos;s graphical explain plan (&lt;a href=&quot;http://www.postgresonline.com/journal/index.php?/archives/27-Reading-PgAdmin-Graphical-Explain-Plans.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.postgresonline.com/journal/index.php?/archives/27-Reading-PgAdmin-Graphical-Explain-Plans.html&lt;/a&gt;) today to get an idea about the tool to be developed. &lt;/p&gt;

&lt;p&gt;Derby doesn&apos;t has a GUI, so where can we display the visual explain of a query? &lt;/p&gt;
</comment>
                            <comment id="12847946" author="bryanpendleton" created="Sun, 21 Mar 2010 17:12:07 +0000"  >&lt;p&gt;Perhaps we can somehow share the Postgres tool? That is, if we can figure out&lt;br/&gt;
what input it analyzes to produce the graphical display, perhaps we could&lt;br/&gt;
write a tool which re-processes the Derby query plan output into the format&lt;br/&gt;
that the Postgres tool reads, and then just use the Postgres tool to display&lt;br/&gt;
Derby query plans.&lt;/p&gt;</comment>
                            <comment id="12847948" author="nirmal" created="Sun, 21 Mar 2010 17:19:00 +0000"  >&lt;p&gt;Ya, that would be possible.&lt;br/&gt;
I&apos;ll read on Postgres to see how they perform this task.&lt;/p&gt;
</comment>
                            <comment id="12848086" author="eranda" created="Mon, 22 Mar 2010 11:26:08 +0000"  >&lt;p&gt;Hi Nirmal,&lt;br/&gt;
Here is a link of a screen-cast which done by Tiago which shows how to set Derby environment. This might help you to build the trunk. &lt;br/&gt;
&lt;a href=&quot;http://www.vimeo.com/5376690&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.vimeo.com/5376690&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12848130" author="nirmal" created="Mon, 22 Mar 2010 13:54:50 +0000"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;Thanks for the link !!!&lt;/p&gt;</comment>
                            <comment id="12848184" author="nirmal" created="Mon, 22 Mar 2010 16:08:08 +0000"  >&lt;p&gt;Hi Bryan, &lt;/p&gt;

&lt;p&gt;PostgreSQL is developed mostly in the C programming language. So, will it be possible to combine/use PostgreSQL tools with Derby? Don&apos;t we need to look in to a different Java Open Source tool or Can we get the idea from PostgreSQL and implement a Java tool?&lt;/p&gt;</comment>
                            <comment id="12848412" author="mikem" created="Mon, 22 Mar 2010 22:41:02 +0000"  >&lt;p&gt;does anyone know about the software licence for postgres, it should be compatible with the apache license before any of it is used to include software in derby.&lt;/p&gt;</comment>
                            <comment id="12848505" author="shelan" created="Tue, 23 Mar 2010 02:44:45 +0000"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;PostgreSQL is released under the PostgreSQL License, a liberal Open Source license, similar to the BSD or MIT licenses.Since it is BSD like PostgreSQL is compatible with apache license.&lt;/p&gt;
</comment>
                            <comment id="12848516" author="nirmal" created="Tue, 23 Mar 2010 03:12:42 +0000"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;This is the license of PostgreSQL (&lt;a href=&quot;http://wiki.postgresql.org/wiki/FAQ#What_is_the_license_of_PostgreSQL.3F&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.postgresql.org/wiki/FAQ#What_is_the_license_of_PostgreSQL.3F&lt;/a&gt;), I attached a screen shot.&lt;/p&gt;</comment>
                            <comment id="12849662" author="nirmal" created="Thu, 25 Mar 2010 11:05:38 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://anoncvs.postgresql.org/cvsweb.cgi/~checkout~/pgsql/src/tools/backend/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anoncvs.postgresql.org/cvsweb.cgi/~checkout~/pgsql/src/tools/backend/index.html&lt;/a&gt; shows how PostgreSQL processes a query.&lt;/p&gt;

&lt;p&gt;I would like to know how derby processes a query, can you please mention a resource document  that I can study on?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12849708" author="bryanpendleton" created="Thu, 25 Mar 2010 14:15:56 +0000"  >&lt;p&gt;There is some information in the Derby wiki:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/LanguageSystem&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/LanguageSystem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is also lots of good information in the Derby docs, particularly here:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/tuning/ctunoptimz39739.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/tuning/ctunoptimz39739.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All of these documents can always be improved, so it would be great if you&lt;br/&gt;
can improve and expand on these sections as you study Derby. You can&lt;br/&gt;
edit the wiki directly; you can submit doc patches for improvement just&lt;br/&gt;
as you would code patches. Thanks!&lt;/p&gt;</comment>
                            <comment id="12850030" author="nirmal" created="Fri, 26 Mar 2010 07:35:26 +0000"  >&lt;p&gt;Bryan, I like to create some graphical views of processes that are used by Derby. As I know Derby has no graphical views in its documentation or wikis that will help to understand the concepts in a higher level. So, is it a worth thing to do?&lt;/p&gt;</comment>
                            <comment id="12850142" author="bryanpendleton" created="Fri, 26 Mar 2010 14:06:27 +0000"  >&lt;p&gt;I think the use of graphics in the wiki to improve the presentation &lt;br/&gt;
of the material would be helpful. I&apos;m not sure what tools our current&lt;br/&gt;
wiki technology has for describing graphics. Simply pasting in an&lt;br/&gt;
image might work, but how would others in the community edit that&lt;br/&gt;
image in the future?&lt;/p&gt;</comment>
                            <comment id="12850143" author="bryanpendleton" created="Fri, 26 Mar 2010 14:09:22 +0000"  >&lt;p&gt;Regarding Postgres and licensing: Is there any way that we can avoid&lt;br/&gt;
incorporating the Postgres code into our code base, by instead simply&lt;br/&gt;
arranging to emit output which can be used by the Postgres tools as is?&lt;/p&gt;

&lt;p&gt;That way, an interested user could:&lt;br/&gt;
a) download Derby and use it&lt;br/&gt;
b) separately and independently download the Postgres tools&lt;br/&gt;
c) Following our instructions, emit Derby query plans in the&lt;br/&gt;
Postgres-style format&lt;br/&gt;
d) Following our instructions, load those query plans into the Postgres tool for viewing&lt;/p&gt;

&lt;p&gt;Then we&apos;d just continue to be two independent projects, with no confusion&lt;br/&gt;
over source code sharing.&lt;/p&gt;</comment>
                            <comment id="12850478" author="nirmal" created="Sat, 27 Mar 2010 05:50:06 +0000"  >&lt;p&gt;Ya, it will be a problem if we upload an image!! But, since the image creation can be done through MSWord, I have a bit tedious solution, but not sure whether you all prefer anything other than editing in the wiki itself.&lt;/p&gt;</comment>
                            <comment id="12850509" author="nirmal" created="Sat, 27 Mar 2010 12:54:15 +0000"  >&lt;p&gt;Regarding Postgres and licensing:&lt;/p&gt;

&lt;p&gt;Graphical query explainer was implemented by PgAdmin III which is a tool uses PostgreSQL at the back end as their server (&lt;a href=&quot;http://www.postgresonline.com/journal/index.php?/archives/27-Reading-PgAdmin-Graphical-Explain-Plans.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.postgresonline.com/journal/index.php?/archives/27-Reading-PgAdmin-Graphical-Explain-Plans.html&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;So, I contacted PgAdmin hackers devs-mailing list to check the possibility of  and following is the reply I got !!&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Le 27/03/2010 07:14, Nirmal Fernando a &#233;crit :&lt;br/&gt;
&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
&amp;gt; Is it possible to integrate pgadmin tool with a different DMS rather than&lt;br/&gt;
&amp;gt; Postgres? If it possible it would be great help if someone can send some&lt;br/&gt;
&amp;gt; helpful links.&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;Nope it&apos;s not possible.&lt;/p&gt;


&lt;p&gt;&amp;#8211;&lt;br/&gt;
Guillaume.&lt;br/&gt;
 &lt;a href=&quot;http://www.postgresqlfr.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.postgresqlfr.org&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;http://dalibo.com&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dalibo.com&lt;/a&gt;&lt;br/&gt;
----------------------------------------------------------------------------------------&lt;/p&gt;

</comment>
                            <comment id="12850597" author="bryanpendleton" created="Sat, 27 Mar 2010 22:34:46 +0000"  >&lt;p&gt;Thanks for asking them, too bad about the answer but at least we tried.&lt;/p&gt;

&lt;p&gt;I&apos;m sure there are other ways to build such tools. For example, another idea I&lt;br/&gt;
thought of was to change the Derby code so that the query plans are&lt;br/&gt;
emitted as XML, and then to use XSLT or a similar tool to transform the&lt;br/&gt;
&quot;raw&quot; query plan XML data into a more readable HTML web page that&lt;br/&gt;
can be displayed by a browser.&lt;/p&gt;</comment>
                            <comment id="12850641" author="asthiwanka" created="Sun, 28 Mar 2010 06:56:25 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;            I was also studying about how Derby works and how also query plans can be&lt;br/&gt;
           displayed in an informative way. Thought of implementing a way to output&lt;br/&gt;
           query plans to XML and convert into HTML like thing will be doable going through&lt;br/&gt;
           Bryan&apos;s idea.As he says there are tools to convert XML to HTML, such as XMLFox &lt;br/&gt;
           or Stylus XSLT Editor tools,etc.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="12850645" author="nirmal" created="Sun, 28 Mar 2010 08:39:12 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Ya, even I expected a positive answer.&lt;/p&gt;

&lt;p&gt;Displaying in a browser sounds interesting. We can create a XSLT style sheet document separately as it templates the graphical query plan. &lt;/p&gt;

&lt;p&gt;XSLT Style Sheet: I think we should first recognize the all possible instances that can be occur in a query such as table_name, sort, hash-join etc. Next we should write the template, as it iteratively looks for the instance occurred at that particular step and displays the image + details (execution time, resource usage), for all the steps that were followed when executing the query. Here image and details can be obtained through the XML file emitted by the query plan.&lt;/p&gt;

&lt;p&gt;Raw XML Document: I think this XML document should contain a predefined set of tags for all possible instances of a query as mentioned above and each tag (Child) should contain sub-children which will describe the image + details. And this will create at the run time in order of the execution procedure.&lt;/p&gt;

&lt;p&gt;Next we should link Raw XML document and the XSL style sheet. This step is fairly easy, we just need to provide the reference to the XSL style sheet inside the XML document.&lt;/p&gt;

&lt;p&gt;After that XSLT compliant browser will transform XML document generated by query plan in to a XHTML page, which will show the graphical query plan + details.&lt;/p&gt;

&lt;p&gt;Like to get your comments on this.&lt;/p&gt;
</comment>
                            <comment id="12850713" author="bryanpendleton" created="Sun, 28 Mar 2010 19:45:32 +0100"  >&lt;p&gt;I think these sound like great ideas. I think it would be good to work on this&lt;br/&gt;
incrementally, starting with a fairly simple stylesheet and then improving it.&lt;/p&gt;

&lt;p&gt;I think this approach could be prototyped to show its feasibility, by&lt;br/&gt;
doing something along the lines of:&lt;/p&gt;

&lt;p&gt;1) Capture a fairly simple query plan, for example capture the query plan for:&lt;/p&gt;

&lt;p&gt;   select from cities where city_name = &apos;New Orleans&apos;;&lt;/p&gt;

&lt;p&gt;2) By hand, convert that captured query plan to an XML format using your text editor&lt;/p&gt;

&lt;p&gt;3) Develop a simple XSLT stylesheet which can display some of the basic query plan information&lt;/p&gt;

&lt;p&gt;4) Attach the original query plan, the XML formatted plan, and the stylesheet, so&lt;br/&gt;
    that the community can see a sample of your ideas.&lt;/p&gt;</comment>
                            <comment id="12850717" author="nirmal" created="Sun, 28 Mar 2010 19:57:09 +0100"  >&lt;p&gt;Ok, Bryan I&apos;ll attach those soon !! &lt;/p&gt;

&lt;p&gt;I&apos;ll post my GSoC 2010 proposal regarding this improvement to get your comments, next week. &lt;/p&gt;</comment>
                            <comment id="12853424" author="nirmal" created="Mon, 5 Apr 2010 17:29:07 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I captured the &quot;query execution plan&quot; by printing out the returning String from &quot;getStatementExecutionPlanText()&quot; method in RunTimeStatisticsImpl.java class.&lt;/p&gt;

&lt;p&gt;Following are the details:&lt;/p&gt;

&lt;p&gt;==============================================================&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from myTable;&lt;br/&gt;
I          |J&lt;br/&gt;
-----------------------&lt;br/&gt;
1          |2&lt;br/&gt;
1          |3&lt;br/&gt;
1          |4&lt;br/&gt;
2          |4&lt;br/&gt;
2          |0&lt;br/&gt;
3          |6&lt;br/&gt;
3          |3&lt;/p&gt;

&lt;p&gt;7 rows selected&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from myTable where i=1;&lt;/p&gt;

&lt;p&gt;I          |J&lt;br/&gt;
-----------------------&lt;br/&gt;
1          |2&lt;br/&gt;
1          |3&lt;br/&gt;
1          |4&lt;/p&gt;

&lt;p&gt;3 rows selected&lt;/p&gt;

&lt;p&gt;This the query plan I printed (starts by @@@@..  and ends with @@@@..)&lt;/p&gt;

&lt;p&gt;@@@@@@@@Table Scan ResultSet for MYTABLE at read committed isolation level using&lt;br/&gt;
 instantaneous share row locking chosen by the optimizer&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 3&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
        Bit set of columns fetched=All&lt;br/&gt;
        Number of columns fetched=2&lt;br/&gt;
        Number of pages visited=1&lt;br/&gt;
        Number of rows qualified=3&lt;br/&gt;
        Number of rows visited=7&lt;br/&gt;
        Scan type=heap&lt;br/&gt;
        start position:&lt;br/&gt;
                null&lt;br/&gt;
        stop position:&lt;br/&gt;
                null&lt;br/&gt;
        qualifiers:&lt;br/&gt;
                Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 0&lt;br/&gt;
                Operator: =&lt;br/&gt;
                Ordered nulls: false&lt;br/&gt;
                Unknown return value: false&lt;br/&gt;
                Negate comparison result: false&lt;br/&gt;
        optimizer estimated row count:            1.20&lt;br/&gt;
        optimizer estimated cost:           30.90&lt;br/&gt;
@@@@@@@&lt;/p&gt;

&lt;p&gt;Statement Name:&lt;br/&gt;
        null&lt;br/&gt;
Statement Text:&lt;br/&gt;
        select * from myTable where i=1&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate T&amp;amp;&lt;/p&gt;

&lt;p&gt;====================================================================&lt;/p&gt;

&lt;p&gt;So, in the graphical explainer for this query, there should be only one image (of the myTable) and under that there are following table of details:&lt;/p&gt;

&lt;p&gt;====================================================================&lt;/p&gt;

&lt;p&gt;Table Scan on myTable&lt;br/&gt;
_______________________________&lt;/p&gt;

&lt;p&gt;Query: select * from myTable where i=1&lt;br/&gt;
Rows: 3&lt;br/&gt;
Optimizer Estimated Cost: 30.90&lt;/p&gt;

&lt;p&gt;====================================================================&lt;/p&gt;

&lt;p&gt;I like to get your comments on this, and also if you need any other information to be included in the graphical explainer please suggest them as well. &lt;br/&gt;
(This was done to do a prototype of the graphical explainer as you suggested. I have already created a sample XML &amp;amp; XSLT file and looking forward to modify it and create a prototype)&lt;/p&gt;

&lt;p&gt;Thanks!!&lt;/p&gt;

</comment>
                            <comment id="12853995" author="bryanpendleton" created="Tue, 6 Apr 2010 15:19:22 +0100"  >&lt;p&gt;I think this is a great way to approach the problem. Your proposal&lt;br/&gt;
seems fine to me; we can always add more information to the&lt;br/&gt;
graphical view over time as we find uses for it. So long as all the&lt;br/&gt;
information is retained in the XML file, such enhancements would&lt;br/&gt;
just involve more logic in the XSLT processing, right?&lt;/p&gt;

&lt;p&gt;You should also have a close look at the information in the Tuning Guide,&lt;br/&gt;
as it describes a lot of the query plan statistics data and how to&lt;br/&gt;
interpret it. In particular, you will probably want to have a look at&lt;br/&gt;
the XPLAIN tables feature that was added to the trunk, and will&lt;br/&gt;
be in the 10.6 release. You can find this feature documented in the&lt;br/&gt;
current &quot;development&quot; manuals, at:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/tuning/ctun_xplain_tables.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/tuning/ctun_xplain_tables.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It seems that you are making very good progress with this idea.&lt;/p&gt;</comment>
                            <comment id="12854029" author="nirmal" created="Tue, 6 Apr 2010 16:57:10 +0100"  >&lt;p&gt;Ya, absolutely, we might just need to add additional &amp;lt;xsl:value-of select =..&amp;gt; tags to display new information. &lt;/p&gt;

&lt;p&gt; I&apos;m already referring the Tuning Guide, and will look at the XPlainTables too (I had looked at only run time statistics).&lt;/p&gt;

&lt;p&gt;Thanks Bryan for your comments, I&apos;ll post the prototype of a Query Explainer soon (query plan, manually written XML file, XSLT style sheet, and a screen-shot of the Explainer).&lt;/p&gt;</comment>
                            <comment id="12854044" author="nirmal" created="Tue, 6 Apr 2010 17:22:32 +0100"  >&lt;p&gt;Rather than print them out, I used derby.language.logQueryPlan = true (to get the more accurate statistics), and following is the derby.log file:&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
2010-04-06 16:04:06.112 GMT:&lt;br/&gt;
 Booting Derby version The Apache Software Foundation - Apache Derby - 10.6.0.0 alpha - (exported): instance a816c00e-0127-d3dd-438c-0000003f3a18&lt;br/&gt;
on database directory C:\OtherNirmal\GSoC\Code\jars\sane\nirmal  &lt;/p&gt;

&lt;p&gt;Database Class Loader started - derby.database.classpath=&apos;&apos;&lt;br/&gt;
2010-04-06 16:04:06.906 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1430), (SESSIONID = 0), (DATABASE = nirmal), (DRDAID = null), Committing&lt;br/&gt;
2010-04-06 16:04:06.907 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1430), (SESSIONID = 0), (DATABASE = nirmal), (DRDAID = null), Rolling backan&lt;br/&gt;
2010-04-06 16:04:06.909 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1431), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), Committing&lt;br/&gt;
2010-04-06 16:04:08.753 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), Begin compiling prepared statement: select * from myTable where i=1 :End prepared statement&lt;br/&gt;
2010-04-06 16:04:09.493 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), End compiling prepared statement: select * from myTable where i=1 :End prepared statement&lt;br/&gt;
2010-04-06 16:04:09.671 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), Executing prepared statement: select * from myTable where i=1 :End prepared statement&lt;br/&gt;
2010-04-06 16:04:09.796 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), Committing&lt;br/&gt;
2010-04-06 16:04:09.989 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), select * from myTable where i=1 ******* Table Scan ResultSet for MYTABLE at read committed isolation level using instantaneous share row locking chosen by the optimizer&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 3&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
	constructor time (milliseconds) = 0&lt;br/&gt;
	open time (milliseconds) = 0&lt;br/&gt;
	next time (milliseconds) = 0&lt;br/&gt;
	close time (milliseconds) = 0&lt;br/&gt;
	next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
	Bit set of columns fetched=All&lt;br/&gt;
	Number of columns fetched=2&lt;br/&gt;
	Number of pages visited=1&lt;br/&gt;
	Number of rows qualified=3&lt;br/&gt;
	Number of rows visited=7&lt;br/&gt;
	Scan type=heap&lt;br/&gt;
	start position:&lt;br/&gt;
		null&lt;br/&gt;
	stop position:&lt;br/&gt;
		null&lt;br/&gt;
	qualifiers:&lt;br/&gt;
		Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 0&lt;br/&gt;
		Operator: =&lt;br/&gt;
		Ordered nulls: false&lt;br/&gt;
		Unknown return value: false&lt;br/&gt;
		Negate comparison result: false&lt;br/&gt;
	optimizer estimated row count:            1.30&lt;br/&gt;
	optimizer estimated cost:           29.56&lt;/p&gt;

&lt;p&gt;2010-04-06 16:04:09.990 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), Committing&lt;br/&gt;
2010-04-06 16:10:07.514 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 1432), (SESSIONID = 1), (DATABASE = nirmal), (DRDAID = null), Rolling back&lt;/p&gt;

&lt;p&gt;2010-04-06 16:10:07.537 GMT:&lt;br/&gt;
Shutting down instance a816c00e-0127-d3dd-438c-0000003f3a18&lt;br/&gt;
----------------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I&apos;m looking to retrieve XPlainTable values now.&lt;/p&gt;</comment>
                            <comment id="12854156" author="asthiwanka" created="Tue, 6 Apr 2010 21:19:25 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;This is what I got when capturing the query plan for query &quot;SELECT * FROM cities WHERE city_name=&apos;New Orleans&apos;; you have presented.(In which the demo database supported with the Derby source code)&lt;/p&gt;

&lt;p&gt;Table Scan ResultSet for CITIES at read committed isolation level using instantaneous share row locking chosen by the optimizer&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 1&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
	constructor time (milliseconds) = 1&lt;br/&gt;
	open time (milliseconds) = 1&lt;br/&gt;
	next time (milliseconds) = 2&lt;br/&gt;
	close time (milliseconds) = 0&lt;br/&gt;
	next time in milliseconds/row = 2&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
	Bit set of columns fetched=All&lt;br/&gt;
	Number of columns fetched=6&lt;br/&gt;
	Number of pages visited=2&lt;br/&gt;
	Number of rows qualified=1&lt;br/&gt;
	Number of rows visited=87&lt;br/&gt;
	Scan type=heap&lt;br/&gt;
	start position:&lt;br/&gt;
		null&lt;br/&gt;
	stop position:&lt;br/&gt;
		null&lt;br/&gt;
	qualifiers:&lt;br/&gt;
		Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 1&lt;br/&gt;
		Operator: =&lt;br/&gt;
		Ordered nulls: false&lt;br/&gt;
		Unknown return value: false&lt;br/&gt;
		Negate comparison result: false&lt;br/&gt;
	optimizer estimated row count:            8.80&lt;br/&gt;
	optimizer estimated cost:           47.82&lt;/p&gt;


&lt;p&gt;And I tried the RUNTIMESTATISTICS attribute for the query and got the following output :&lt;/p&gt;

&lt;p&gt;ij&amp;gt; CALL SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; CALL SYSCS_UTIL.SYSCS_SET_STATISTICS_TIMING(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from cities where city_name=&apos;New Orleans&apos;;&lt;br/&gt;
CITY_ID    |CITY_NAME               |COUNTRY                   |AIR&amp;amp;|LANGUAGE        |COU&amp;amp;&lt;br/&gt;
------------------------------------------------------------------------------------------&lt;br/&gt;
75         |New Orleans             |United States             |MSY |English         |US&lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; VALUES SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();&lt;br/&gt;
1&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Statement Name:&lt;br/&gt;
        null&lt;br/&gt;
Statement Text:&lt;br/&gt;
        select * from cities where city_name=&apos;New Orleans&apos;&lt;br/&gt;
Parse Time: 1&lt;br/&gt;
Bind Time: 2&lt;br/&gt;
Optimize&amp;amp;&lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;

&lt;p&gt;In here it clearly states the the time to generate the query tree from the SQL query in Parse Time and in Bind Time&lt;br/&gt;
it indicates the time to traverse the query tree,etc.&lt;/p&gt;

&lt;p&gt;Looking for an idea to move forward from this stage from you.&lt;/p&gt;

&lt;p&gt;Thanks...!&lt;/p&gt;</comment>
                            <comment id="12854783" author="nirmal" created="Thu, 8 Apr 2010 04:10:08 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I have attached files of the prototype of Derby Query Plan Explainer  which is done to show the feasibility of the project.&lt;/p&gt;

&lt;p&gt;You can simply view the screen shot or you can open the .xml file inside the &quot;Source&quot; folder from your web browser.&lt;/p&gt;

&lt;p&gt;Highly appreciate your comments !!&lt;/p&gt;

&lt;p&gt;Thanks !!&lt;/p&gt;</comment>
                            <comment id="12856485" author="asthiwanka" created="Tue, 13 Apr 2010 17:39:22 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
               I read the Derby reference manual and Derby tuning materials to some extent to get the scope for this project and got to know that all the statistics that are logged into the logQueryPlan are stored in the XPLAIN tables as well.One problem we had earlier was to find out all the statistic data that can occur for a query.I studied the code for XPLAIN tables to some extent and found that there are all the statistic variables that are stored in the tables.So we can grab them from the source code.So it will be very easy to get the values from the XPLAIN tables rather that retrieving them from the derby.log file.&lt;/p&gt;

&lt;p&gt;For example see the following package to understand the above desiption :&lt;br/&gt;
org.apache.derby.iapi.sql.execute.xplain&lt;/p&gt;

&lt;p&gt;FYI : Read the &quot;XPLAIN style tables&quot; in Derby Reference Manual for more information.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="12856905" author="bryanpendleton" created="Wed, 14 Apr 2010 15:12:12 +0100"  >&lt;p&gt;&amp;gt; there are all the statistic variables that are stored in the tables.So we can&lt;br/&gt;
&amp;gt; grab them from the source code.So it will be very easy to get the values&lt;br/&gt;
&amp;gt; from the XPLAIN tables rather that retrieving them from the derby.log file. &lt;/p&gt;

&lt;p&gt;Yes, I think it would be much better to generate the XML form of the query&lt;br/&gt;
plan statistics by querying the XPLAIN tables, than by trying to parse the&lt;br/&gt;
text output of the logged query plan.&lt;/p&gt;

&lt;p&gt;+1 to your suggestion!&lt;/p&gt;
</comment>
                            <comment id="12857244" author="asthiwanka" created="Thu, 15 Apr 2010 10:10:36 +0100"  >&lt;p&gt;Hi Bryan, &lt;br/&gt;
             As I found,here are the tables that have all the statistics information for our need. &lt;br/&gt;
                   1. SYSXPLAIN_STATEMENTS &lt;br/&gt;
                   2. SYSXPLAIN_STATEMENT_TIMINGS &lt;br/&gt;
                   3. SYSXPLAIN_RESULTSETS &lt;br/&gt;
                   4. SYSXPLAIN_RESULTSET_TIMINGS &lt;br/&gt;
                   5. SYSXPLAIN_SCAN_PROPS &lt;br/&gt;
                   6. SYSXPLAIN_SORT_PROPS &lt;/p&gt;

&lt;p&gt;              Earlier we had an issue on &quot;how to filter the result set nodes(or else the overall tree structure) to show in a graphical view&quot;. The SYSXPLAIN_RESULTSETS table captures the information about each result set which is a part of the statement. So we can grab the information about the result set nodes through this table and the timing related statistics through the SYSXPLAIN_RESULTSET_TIMINGS table and so on. &lt;/p&gt;

&lt;p&gt;For example if a statement(query) is used to access a database, the result set information are stored in the SYSXPLAIN_RESULTSETS table.Single statement may have more than one result set node. In such a case we can join the table 1 and table 3 to get the whole set of result sets for the statement executed. &lt;/p&gt;

&lt;p&gt;Like this we have to traverse through all these tables to get the values that we need to view the execution plan in the browser window. &lt;br/&gt;
We can do all these activities through a Java Program and save them through setter methods to a certain Java Object, which has attributes for all the statistics in the above tables.These statistics are same as statistics information in the logQueryPlan. Additionally, in the Java Program,we should have a method to iterate through the result set nodes that we grab from the SYSXPLAIN_RESULTSETS table.Then only we can generate the XML format which maps with each result set node.(The XML should be separated, so that it describes each result set node.)Then we can use XSLT to convert XML to XHTML,etc. &lt;/p&gt;

&lt;p&gt;The other important milestone is to generate the XML from the above mentioned Java Object which owns the statistics information.I have a suggestion to use open source XStream for this task.I am not 100% percent sure whether it is possible.At least we can try it out. &lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="12857316" author="nirmal" created="Thu, 15 Apr 2010 14:49:29 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;*Derby XPLAIN tables are clearly described in &lt;a href=&quot;http://db.apache.org/derby/docs/dev/tuning/ctun_xplain_tables.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/tuning/ctun_xplain_tables.html&lt;/a&gt; and I had gone through it weeks ago.&lt;/p&gt;

&lt;p&gt;*And as we discussed way before and as I included in my GSoC proposal project can be sub divided into two, which I planned to implement in the two phases of GSoC-2010. These are the sub parts:&lt;/p&gt;

&lt;p&gt;1) Build a tool (a small Java program using standard JDBC) which can read the&lt;br/&gt;
query execution data for a SQL statement from the Derby XPLAIN tables and emit&lt;br/&gt;
the data in XML tagged format. This involves specifying the XML schema for the&lt;br/&gt;
data, writing the program to produce the data, and building tests for it.&lt;/p&gt;

&lt;p&gt;2) Build a tool to format the XML-formatted data into visual information in a&lt;br/&gt;
browser, using an XSLT stylesheet. This involves conceptualizing the visual&lt;br/&gt;
display, designing and writing the XSLT stylesheet, and building tests for it.&lt;/p&gt;

&lt;p&gt;*In the phase 1 I have to build a small tool to get values of XPLAIN tables and emit XML data, but because none of the JDBC-side support for SQL/XML is implemented in Derby, it is not possible to bind directly into an XML value or to retrieve an XML value directly from a result set using JDBC. Instead, we must bind and retrieve the XML data as Java strings or character streams by explicitly specifying the appropriate XML operators, XMLPARSE and XMLSERIALIZE, as part of our SQL queries.&lt;/p&gt;

&lt;p&gt;To retrieve XML values from a Derby database using JDBC, we can use the XMLSERIALIZE operator in the SQL query. &lt;/p&gt;

&lt;p&gt;eg: SELECT XMLSERIALIZE (stmt_text as CLOB) FROM myschema.sysxplain_statements&lt;/p&gt;

&lt;p&gt;for more information we can refer &lt;a href=&quot;http://db.apache.org/derby/docs/10.5/ref/rrefsqljtypexml.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/ref/rrefsqljtypexml.html&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;**I did not put any comments here other than this after the GSoC application deadline is simply because I thought it will be unfair to other applicants since this is a some kind of a competition.&lt;/p&gt;

&lt;p&gt;I hope to contribute for this project in this summer and also for the evolution of Derby in future.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12857326" author="bryanpendleton" created="Thu, 15 Apr 2010 15:07:07 +0100"  >&lt;p&gt;Thanks Nirmal! It seems like there is general consensus that this technique&lt;br/&gt;
can be used to build a useful tool.&lt;/p&gt;

&lt;p&gt;I had originally anticipated that the data would be fetched from the XPLAIN&lt;br/&gt;
tables as simple Java data types, then emitted as a single XML document by&lt;br/&gt;
the tool, but I think your suggestion to use XMLSERIALIZE is intriguing.&lt;/p&gt;

&lt;p&gt;Each time we ran a statement such as SELECT XMLSERIALIZE(c) FROM xpl&lt;br/&gt;
we&apos;d get a little &quot;XML fragment&quot;, is that right? Or would get get an entire&lt;br/&gt;
XML document at that point?&lt;/p&gt;

&lt;p&gt;What would be needed to &quot;stitch together&quot; these XML fragments, or collection&lt;br/&gt;
of smaller XML documents, into a single larger XML document representing&lt;br/&gt;
the entire query plan in its XML-formatted form?&lt;/p&gt;

&lt;p&gt;That is, in pseudocode-outline, what might that process look like in the tool code?&lt;/p&gt;</comment>
                            <comment id="12857484" author="nirmal" created="Thu, 15 Apr 2010 19:53:54 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Here I quote from Derby developer&apos;s guide:&lt;/p&gt;

&lt;p&gt;XML data types and operators&lt;/p&gt;

&lt;p&gt;Derby supports the XML data type and a set of operators that work with the XML data&lt;br/&gt;
type, but does not provide JDBC support for the XML data type. The XML data type and&lt;br/&gt;
operators are based on a small subset of the SQL/XML specification.&lt;br/&gt;
The XML data type and operators are defined only in the SQL layer.&lt;br/&gt;
There is no JDBC-side support for XML data types. It is not possible to bind directly&lt;br/&gt;
into an XML value or to retrieve an XML value directly from a result set. Instead, you&lt;br/&gt;
must bind and retrieve the XML data as Java strings or character streams by explicitly&lt;br/&gt;
specifying the appropriate XML operator as part of the SQL statements:&lt;/p&gt;

&lt;p&gt;&#8226; Use the XMLPARSE operator for binding data into XML values.&lt;br/&gt;
&#8226; Use the XMLSERIALIZE operator to retrieve XML values from a result set.&lt;/p&gt;

&lt;p&gt;Additionally, there is no JDBC metadata support for the XML data type.&lt;br/&gt;
The XML data type is not allowed in any of the clauses or operations that are described&lt;br/&gt;
in the section on expressions on LONG data types in Derby and standards.&lt;br/&gt;
For the XML operators to work properly, Derby requires that a JAXP parser, such as&lt;br/&gt;
Apache Xerces, and Apache Xalan are included in the Java classpath. If either the parser&lt;br/&gt;
or Xalan are missing from the classpath, Derby disallows any XML-related operations.&lt;br/&gt;
Classpath and version issues&lt;/p&gt;

&lt;p&gt;Most Java Virtual Machines (JVMs) that are version 1.4 or later have a JAXP parser&lt;br/&gt;
embedded in the JVM. If you are using one of these JVMs, you may not need to add any&lt;br/&gt;
classes to your classpath. Some exceptions exist:&lt;/p&gt;

&lt;p&gt;&#8226; In most version 1.4.2 JVMs, the version of Xalan that comes with the JVM is&lt;br/&gt;
not new enough, so you must override the version of Xalan in the JVM with a&lt;br/&gt;
newer version by using the Endorsed Standards Override Mechanism described&lt;br/&gt;
at &lt;a href=&quot;http://java.sun.com/j2se/1.4.2/docs/guide/standards/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.4.2/docs/guide/standards/&lt;/a&gt;. To use this mechanism,&lt;br/&gt;
download and install a binary distribution of Xalan from Apache and set the system&lt;br/&gt;
property java.endorsed.dirs to point to the Xalan installation directory.&lt;/p&gt;

&lt;p&gt;&#8226; After JVM version 1.4, Sun renamed the JAXP packages. Derby cannot find these&lt;br/&gt;
renamed packages. If you are using a Sun JVM later than version 1.4, download&lt;br/&gt;
and install a binary distribution of Xalan from Apache and place the xalan.jar&lt;br/&gt;
file in your classpath. The xalan.jar file automatically puts into the classpath the&lt;br/&gt;
other required jars that are in the same directory.&lt;/p&gt;


&lt;p&gt;===================================================================&lt;/p&gt;

&lt;p&gt;As you can see this needed XALAN.jar inserted into the CLASSPATH. &lt;/p&gt;

&lt;p&gt;&amp;gt;Each time we ran a statement such as SELECT XMLSERIALIZE(c) FROM xpl &lt;br/&gt;
&amp;gt;we&apos;d get a little &quot;XML fragment&quot;, is that right? Or would get get an entire &lt;br/&gt;
&amp;gt;XML document at that point? &lt;/p&gt;

&lt;p&gt;I think it&apos;s a XML fragment not a whole document. Will look for further details.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to come up with a pseudo code in coming days, I think it&apos;s better if we can first come to a conclusion on using  XMLSERIALIZE considering  its usability, I&apos;ll read up more on this regard. &lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12857506" author="asthiwanka" created="Thu, 15 Apr 2010 20:33:28 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
                   I just tried to figure out how the &quot;sysxplain_resultsets&quot; table behaves.I sent these SQL statements and checked the output.&lt;/p&gt;

&lt;p&gt;1. ij&amp;gt;select * from cities where country=&apos;Sri Lanka&apos; order by city_name;&lt;br/&gt;
2. ij&amp;gt; select stmt_text, xplain_time from MY_STATS.sysxplain_statements order by xplain_time;&lt;br/&gt;
3. ij&amp;gt; select st.stmt_text, rs.op_identifier&lt;br/&gt;
     &amp;gt; from my_stats.sysxplain_statements st&lt;br/&gt;
     &amp;gt; join my_stats.sysxplain_resultsets rs&lt;br/&gt;
     &amp;gt; on st.stmt_id = rs.stmt_id;&lt;/p&gt;

&lt;p&gt;Then I sent the 3rd query again to the database and the output was :&lt;/p&gt;

&lt;p&gt;STMT_TEXT                                                                                                                                                             |OP_IDENTIFIER&lt;br/&gt;
---------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
select * from cities where country=&apos;Sri Lanka&apos; order by city_name                                                                     |SORT&lt;br/&gt;
select * from cities where country=&apos;Sri Lanka&apos; order by city_name                                                                     |TABLESCAN&lt;br/&gt;
select stmt_text, xplain_time from MY_STATS.sysxplain_statements&lt;br/&gt;
order by xplain_time                                                                                                                                                     |SORT&lt;br/&gt;
select stmt_text, xplain_time from MY_STATS.sysxplain_statements&lt;br/&gt;
order by xplain_time                                                                                                                                                    |TABLESCAN&lt;br/&gt;
select st.stmt_text, rs.op_identifier&lt;br/&gt;
from my_stats.sysxplain_statements st&lt;br/&gt;
join my_stats.sysxplain_resultsets rs&lt;br/&gt;
on st.stmt&amp;amp;                                                                                                                                                                  |PROJECTION&lt;br/&gt;
select st.stmt_text, rs.op_identifier&lt;br/&gt;
from my_stats.sysxplain_statements st&lt;br/&gt;
join my_stats.sysxplain_resultsets rs&lt;br/&gt;
on st.stmt&amp;amp;                                                                                                                                                                   |HASHJOIN&lt;br/&gt;
select st.stmt_text, rs.op_identifier&lt;br/&gt;
from my_stats.sysxplain_statements st&lt;br/&gt;
join my_stats.sysxplain_resultsets rs&lt;br/&gt;
on st.stmt&amp;amp;                                                                                                                                                                   |TABLESCAN&lt;br/&gt;
select st.stmt_text, rs.op_identifier&lt;br/&gt;
from my_stats.sysxplain_statements st&lt;br/&gt;
join my_stats.sysxplain_resultsets rs&lt;br/&gt;
on st.stmt&amp;amp;                                                                                                                                                                   |HASHSCAN&lt;/p&gt;

&lt;p&gt;8 rows selected&lt;br/&gt;
______________________________________________&lt;em&gt;END OF THE OUTPUT&lt;/em&gt;__________________________________________________________&lt;/p&gt;

&lt;p&gt;(The third query was sent twice to convince you that the query which tries to retrieve XPLAIN tables itself, is also stored in the XPLAIN tables again)&lt;/p&gt;

&lt;p&gt;This clearly figures out the what type of result sets are generated when running a SQL statement.Here the OP_IDENTIFIER indicates the result set type.&lt;/p&gt;

&lt;p&gt;Let&apos;s take the first query &quot;select * from cities where country=&apos;Sri Lanka&apos; order by city_name;&quot;. This has the result sets TABLESCAN and SORT. Since the first result set performs a scan on the table, the SCAN_RS_ID column in SYSXPLAIN_RESULTSETS can identify the particular row in SYSXPLAIN_SCAN statistics related to the scan behavior. Similarly, SORT statistics can also be retrieved.&lt;/p&gt;

&lt;p&gt;Hope your comments on this.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="12857821" author="bryanpendleton" created="Fri, 16 Apr 2010 15:16:02 +0100"  >&lt;p&gt;Hi! I think you are interpreting the XPLAIN table information accurately.&lt;br/&gt;
You can find additional information about the tables and columns of the XPLAIN&lt;br/&gt;
tables here:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/tuning/ctun_xplain_tables.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/tuning/ctun_xplain_tables.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_statements.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_statements.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_statement_timings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_statement_timings.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_resultsets.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_resultsets.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_resultset_timings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_resultset_timings.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_scan_props.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_scan_props.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_sort_props.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsysxplain_sort_props.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;  the query which tries to retrieve XPLAIN tables itself, is also stored in the XPLAIN tables again&lt;/p&gt;

&lt;p&gt;Yes, this is expected behavior. To stop collecting XPLAIN information, call&lt;br/&gt;
the SET_XPLAIN_SHCEMA system procedure again, with an empty argument:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rref_syscs_set_xplain_schema.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rref_syscs_set_xplain_schema.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12858291" author="nirmal" created="Sun, 18 Apr 2010 11:50:31 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I had a look on using XML operations in Derby more thoroughly and found out following important points:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;In order to retrieve XML data using XMLSERIALIZE, we should first have a table column which is in XML data type.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         So is it possible to change SYSXPLAIN tables such that they store XML data of each row inserted, in a XML data type column?&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;When inserting XML data we have to insert some set of XML keywords, such as Document, Preserve Whitespace.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         eg: insert into t(a) values (XMLPARSE(DOCUMENT &apos;&amp;lt;title&amp;gt;Derby&amp;lt;/title&amp;gt;&apos; PRESERVE WHITESPACE));&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;When using XMLSERIALIZE we should use &apos;as&apos; sql key word,&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        eg: select XMLSERIALIZE(a as CLOB) from t;   //we can use varchar as well&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Execution of XMLSERIALIZE statement will result a small XML fragment.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        eg: &amp;lt;title&amp;gt;Derby&amp;lt;/title&amp;gt;&lt;/p&gt;

&lt;p&gt;I think this will be an easy way, if we can somehow add a XML data type columns to SYSXPLAIN tables.&lt;/p&gt;

&lt;p&gt;May be we can store these small xml fragments in another table with XML data type columns and retrieve the large XML document after the execution of the query. (Note: We may have to write those rows retrieved into a .xml file)&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;


</comment>
                            <comment id="12858301" author="bryanpendleton" created="Sun, 18 Apr 2010 15:48:59 +0100"  >&lt;p&gt;I think that we should avoid changing the schema of the XPLAIN tables.&lt;/p&gt;

&lt;p&gt;For the time being, can we pursue an implementation where the XML&lt;br/&gt;
generation is done in the client side of the tool, perhaps something like:&lt;/p&gt;

&lt;p&gt;  SELECT &apos;&amp;lt;result_set&amp;gt;&apos;||&lt;br/&gt;
              &apos;&amp;lt;type&amp;gt;&apos;||op_identifier||&apos;&amp;lt;/type&amp;gt;&apos;||&lt;br/&gt;
              &apos;&amp;lt;no_opens&amp;gt;&apos;||no_opens||&apos;&amp;lt;/no_opens&amp;gt;&apos;||&lt;br/&gt;
              ... repeat for the other columsn from sysxplain_resultsets...&lt;br/&gt;
              &apos;&amp;lt;/result_set&amp;gt;&apos;&lt;br/&gt;
   FROM xxx.sysxplain_resultsets WHERE ...&lt;/p&gt;

&lt;p&gt;Would an approach like this work to generate the XML format of the query plan data?&lt;/p&gt;</comment>
                            <comment id="12858968" author="nirmal" created="Tue, 20 Apr 2010 18:10:34 +0100"  >&lt;p&gt;Hi Bryan, &lt;/p&gt;

&lt;p&gt;Thanks for the reply. &lt;/p&gt;

&lt;p&gt;I think this approach looks fine. I checked for some queries and successful in VARCHAR, but not for INTEGER, DOUBLE etc. May be &apos;||&apos; is support only for VARCHAR, frankly I do not know about using &apos;||&apos;, if you can guide me to a resource to read on &apos;||&apos;, that would be nice. If the case is that, is there a way that we can convert other data types to varchar?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12859162" author="bryanpendleton" created="Wed, 21 Apr 2010 02:41:14 +0100"  >&lt;p&gt;Can you use&lt;/p&gt;

&lt;p&gt;   CAST (column AS VARCHAR(20))&lt;/p&gt;

&lt;p&gt;to convert the numeric datatypes to strings?&lt;/p&gt;</comment>
                            <comment id="12859255" author="knutanders" created="Wed, 21 Apr 2010 09:21:51 +0100"  >&lt;p&gt;I don&apos;t think you can cast a numeric type to a character type. But there is a CHAR function (&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/ref/rrefbuiltchar.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/ref/rrefbuiltchar.html&lt;/a&gt;) that converts various data types to CHAR.&lt;/p&gt;

&lt;p&gt;So for example: ... || &apos;&amp;lt;no_opens&amp;gt;&apos; || CHAR(no_opens) || &apos;&amp;lt;/no_opens&amp;gt;&apos; || ...&lt;/p&gt;</comment>
                            <comment id="12859351" author="nirmal" created="Wed, 21 Apr 2010 14:31:38 +0100"  >&lt;p&gt;Thanks Knut. That gave me the expected result. But I wonder why it left blank space between the value and the closing tag (This won&apos;t be an affect in this case, just curious though).&lt;/p&gt;

&lt;p&gt;Thanks Bryan for the reply but we cannot convert numeric type to varchar. Any way Knut&apos;s suggestion worked fine so we can use ,&lt;/p&gt;

&lt;p&gt;SELECT &apos;&amp;lt;result_set&amp;gt;&apos;|| &lt;br/&gt;
              &apos;&amp;lt;type&amp;gt;&apos;|| CHAR (op_identifier) ||&apos;&amp;lt;/type&amp;gt;&apos;|| &lt;br/&gt;
              &apos;&amp;lt;no_opens&amp;gt;&apos;||CHAR(no_opens)||&apos;&amp;lt;/no_opens&amp;gt;&apos;|| &lt;br/&gt;
              ... repeat for the other columsn from sysxplain_resultsets... &lt;br/&gt;
              &apos;&amp;lt;/result_set&amp;gt;&apos; &lt;br/&gt;
   FROM xxx.sysxplain_resultsets WHERE ... &lt;br/&gt;
                                                                                     this way to produce small XML fragments, and then stitch them to an .xml file. (of course we need to add XML related lines up front)&lt;/p&gt;

</comment>
                            <comment id="12859829" author="knutanders" created="Thu, 22 Apr 2010 15:34:21 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;The extra blank space comes from the way the CHAR function converts integers to strings. See the paragraph with the title &quot;Integer to character syntax&quot; in the link I posted above. If you want to get rid of the blanks, I think you can use the TRIM function:&lt;/p&gt;

&lt;p&gt;  TRIM(CHAR(no_opens))&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/ref/rreftrimfunc.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/ref/rreftrimfunc.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12859866" author="nirmal" created="Thu, 22 Apr 2010 17:21:46 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for the suggestion, it worked fine.&lt;/p&gt;</comment>
                            <comment id="12868008" author="nirmal" created="Sun, 16 May 2010 18:07:45 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I think it&apos;s time to get finalize the design or the process view of the implementation. We highly appreciate comments on this design from you. I have created a small wiki page mentioning the design we planned. The link to the wiki page is &lt;a href=&quot;http://wiki.apache.org/db-derby/Nirmal/Derby-4587-%20Design%20Details&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/Nirmal/Derby-4587-%20Design%20Details&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks in advance.&lt;/p&gt;</comment>
                            <comment id="12873318" author="nirmal" created="Sat, 29 May 2010 19:22:25 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a patch that will emit query plans to a .xml file. There may be lots of drawbacks, therefore I highly appreciate your comments.&lt;/p&gt;

&lt;p&gt;You can start the new tool like this:&lt;/p&gt;

&lt;p&gt;C:\OtherNirmal\GSoC\Code\jars\sane&amp;gt;java org.apache.derby.tools.ExportQueryPlanAsXML jdbc:derby:nirmal username password MYSCHEMA b9810038-0128-e492-0a47-00000035b7e8 name_of_the_xml_file&lt;/p&gt;

&lt;p&gt;MYSCHEMA - schema you specified when taking statistics&lt;br/&gt;
b9810038-0128-e492-0a47-00000035b7e8 - is the STMT_ID in SYSXPLAIN_STATEMENTS table&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12873334" author="bryanpendleton" created="Sat, 29 May 2010 22:58:10 +0100"  >&lt;p&gt;I successfully applied and built the test, and ran the XML generation tool (once). &lt;br/&gt;
Great work! This is very exciting!&lt;/p&gt;

&lt;p&gt;Some first comments:&lt;br/&gt;
1) I had some trouble running the tool, until I realized that the tool was always&lt;br/&gt;
loading the ClientDriver, and I was trying to create an embedded connection. I&lt;br/&gt;
think we want to support both client-style URLs and embedded-style URLs, so&lt;br/&gt;
we need a way to detect which connection URL is provided, and load the&lt;br/&gt;
appropriate driver.&lt;/p&gt;

&lt;p&gt;2) I had to apply the patch from the &apos;java&apos; directory; it is more conventional to&lt;br/&gt;
create patches to be applied from the &apos;trunk&apos; directory.&lt;/p&gt;

&lt;p&gt;3) I just tried the generation tool with a very simple query in my XPLAIN tables,&lt;br/&gt;
and it seemed to work. If I get a chance, I&apos;ll try to run it against some other XPLAIN output.&lt;/p&gt;

&lt;p&gt;4) I&apos;m not sure that it is helpful for the AccessDatabase class to be catching&lt;br/&gt;
the SQLException errors; it might be better to declare those methods as&lt;br/&gt;
throwing the exceptions and let the exceptions propagate out.&lt;/p&gt;

&lt;p&gt;5) I found the code in createXMLFragment() a bit hard to read; perhaps it&lt;br/&gt;
would be a bit more legible if the long lines were broken up into multiple&lt;br/&gt;
shorter lines?&lt;/p&gt;

&lt;p&gt;6) Have you had a chance to think about how we might go about building&lt;br/&gt;
a regression test suite for the new tool? One possibility would be to extend&lt;br/&gt;
the current XplainStatisticsTest so that, in addition to generating XPLAIN&lt;br/&gt;
data for various query plans, that test also calls your new tool to format the&lt;br/&gt;
data as XML, then checks the XML documents for correctness.&lt;/p&gt;



</comment>
                            <comment id="12873354" author="nirmal" created="Sun, 30 May 2010 02:16:51 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;1) I&apos;ll look into this. Thanks for pointing it out.&lt;/p&gt;

&lt;p&gt;2) I&apos;m sorry about that, I&apos;ve submitted a new patch.&lt;/p&gt;

&lt;p&gt;3) I checked for a query like &quot;select t.* from (tt left outer join t on tt.j = t.x)&quot; it worked fine &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;. NOTE: If some XPLAIN table returns 0 rows, this will not emit that XML tag.&lt;/p&gt;

&lt;p&gt;4) Did you mean to catch them inside the ExportQueryPlanAsXML.main method? or just throw the error everywhere? &lt;/p&gt;

&lt;p&gt;5) Whoops, I thought to do that, but somehow forgot it. I&apos;ve updated it in the new patch.&lt;/p&gt;

&lt;p&gt;6) I&apos;m afraid I hadn&apos;t. But while reading your suggestion, a question popped up in my mind, whether we can/Is it better to, invoke a new tool after closing an ij connection, inside a same regression test? (Just thought)&lt;/p&gt;

&lt;p&gt;Thanks for reviewing the patch this quickly.&lt;/p&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; The XML file generated for the query &quot;select t.* from (tt left outer join t on tt.j = t.x)&quot;:&lt;/p&gt;

&lt;p&gt;&amp;lt;!--&lt;br/&gt;
 Designed &amp;amp; coded by C.S.Nirmal J. Fernando, of University of Moratuwa, Sri Lanka, to prototype Apache Derby Query Explainer&lt;br/&gt;
--&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;plan&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;details&amp;gt;&lt;br/&gt;
&amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
&amp;lt;no_opens&amp;gt;1&amp;lt;/no_opens&amp;gt;&lt;br/&gt;
&amp;lt;returned_rows&amp;gt;4&amp;lt;/returned_rows&amp;gt;&lt;br/&gt;
&amp;lt;/details&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;details&amp;gt;&lt;br/&gt;
&amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
&amp;lt;no_opens&amp;gt;1&amp;lt;/no_opens&amp;gt;&lt;br/&gt;
&amp;lt;returned_rows&amp;gt;4&amp;lt;/returned_rows&amp;gt;&lt;br/&gt;
&amp;lt;/details&amp;gt;&lt;br/&gt;
&#8722;&lt;br/&gt;
&amp;lt;details&amp;gt;&lt;br/&gt;
&amp;lt;node&amp;gt;TABLESCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
&amp;lt;no_opens&amp;gt;1&amp;lt;/no_opens&amp;gt;&lt;br/&gt;
&amp;lt;returned_rows&amp;gt;4&amp;lt;/returned_rows&amp;gt;&lt;br/&gt;
&amp;lt;visited_pages&amp;gt;1&amp;lt;/visited_pages&amp;gt;&lt;br/&gt;
&amp;lt;scan_qualifiers&amp;gt;None&amp;lt;/scan_qualifiers&amp;gt;&lt;br/&gt;
&amp;lt;/details&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;details&amp;gt;&lt;br/&gt;
&amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
&amp;lt;no_opens&amp;gt;4&amp;lt;/no_opens&amp;gt;&lt;br/&gt;
&amp;lt;returned_rows&amp;gt;4&amp;lt;/returned_rows&amp;gt;&lt;br/&gt;
&amp;lt;visited_pages&amp;gt;1&amp;lt;/visited_pages&amp;gt;&lt;br/&gt;
&amp;lt;scan_qualifiers&amp;gt;None&amp;lt;/scan_qualifiers&amp;gt;&lt;br/&gt;
&amp;lt;next_qualifiers&amp;gt;&lt;br/&gt;
Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 0&lt;br/&gt;
Operator: =&lt;br/&gt;
Ordered nulls: false&lt;br/&gt;
Unknown return value: false&lt;br/&gt;
Negate comparison result: false&lt;br/&gt;
&amp;lt;/next_qualifiers&amp;gt;&lt;br/&gt;
&amp;lt;/details&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/plan&amp;gt;&lt;/p&gt;
</comment>
                            <comment id="12873355" author="nirmal" created="Sun, 30 May 2010 02:21:59 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-2.diff patch is created in the trunk folder, and improved readability in AccessDatabase.createXMLFragment() method.&lt;/p&gt;</comment>
                            <comment id="12873429" author="nirmal" created="Sun, 30 May 2010 14:50:12 +0100"  >&lt;p&gt;Earlier patch is updated as the tool recognizes the embedded URLs and network URLs.&lt;/p&gt;

&lt;p&gt;Will this approach general enough?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12873472" author="bryanpendleton" created="Sun, 30 May 2010 20:19:23 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;It seems that the current XML document built by the v3 patch is capturing all&lt;br/&gt;
of the result set nodes, but it is &quot;flattening&quot; them into a simple list, which loses&lt;br/&gt;
some of the information that is present in the query plan.&lt;/p&gt;

&lt;p&gt;I think that we will want to build a richer data structure in the AccessDatabase class,&lt;br/&gt;
in order to capture the the natural tree structure of a query plan. Entries in a query&lt;br/&gt;
plan are structured into parent-child relationships, (there&apos;s a nice writeup on the&lt;br/&gt;
basic concepts here: &lt;a href=&quot;http://en.wikipedia.org/wiki/Query_optimizer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Query_optimizer&lt;/a&gt;) and we need &lt;br/&gt;
to be able to capture that structure into the natural tree structure of the &lt;br/&gt;
resulting XML document.&lt;/p&gt;

&lt;p&gt;For example, consider this simple query:&lt;/p&gt;

&lt;p&gt;  create table t1 (c1 int, c2 varchar(100));&lt;br/&gt;
  create table t2 (a int, b int);&lt;br/&gt;
  select t1.c1, t1,c2 from t1 inner join t2 on c1 = a;&lt;/p&gt;

&lt;p&gt;This query is executed using a 3-level query tree, which can be seen&lt;br/&gt;
by looking at the RS_ID and PARENT_RS_ID columns in SYSXPLAN_RESULTSETS:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select rs_id, op_identifier, parent_rs_id from s2.sysxplain_resultsets;&lt;br/&gt;
RS_ID                                                                   |OP_IDENTIFIER                 |PARENT_RS_ID                        &lt;br/&gt;
--------------------------------------------------------------------------------------------------------&lt;br/&gt;
2589c06b-0128-ea8c-c9a5-000000e76260|PROJECTION                    |NULL                                &lt;br/&gt;
addac06e-0128-ea8c-c9a5-000000e76260|HASHJOIN                      |2589c06b-0128-ea8c-c9a5-00000e76260&lt;br/&gt;
862e0071-0128-ea8c-c9a5-000000e76260|TABLESCAN                     |addac06e-0128-ea8c-c9a5-000000e76260&lt;br/&gt;
5e838074-0128-ea8c-c9a5-000000e76260|HASHSCAN                      |addac06e-0128-ea8c-c9a5-000000e76260&lt;/p&gt;

&lt;p&gt;The PROJECTION node is the &quot;root&quot; of the tree, and it has 1 child, the HASHJOIN node,&lt;br/&gt;
which in turn has two children, the TABLESCAN and HASHSCAN nodes.&lt;/p&gt;

&lt;p&gt;As a tree, it looks something like:&lt;/p&gt;

&lt;p&gt;                PROJECTION&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;                HASHJOIN&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;        &lt;ins&gt;---------&lt;del&gt;&lt;/ins&gt;&lt;/del&gt;-------------+&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;  TABLESCAN           HASHSCAN&lt;/p&gt;

&lt;p&gt;When we format this query into an XML document, the tree structure needs to&lt;br/&gt;
be preserved, so that we end up with an XML document which expresses&lt;br/&gt;
the tree structure using nesting of XML nodes, so that  we get something like:&lt;/p&gt;

&lt;p&gt;  &amp;lt;node&amp;gt;&lt;br/&gt;
  &amp;lt;type&amp;gt;PROJECTION&amp;lt;/type&amp;gt;&lt;br/&gt;
      &amp;lt;node&amp;gt;&lt;br/&gt;
      &amp;lt;type&amp;gt;HASHJOIN&amp;lt;/type&amp;gt;&lt;br/&gt;
          &amp;lt;node&amp;gt;&lt;br/&gt;
          &amp;lt;type&amp;gt;TABLESCAN&amp;lt;/type&amp;gt;&lt;br/&gt;
          &amp;lt;/node&amp;gt;&lt;br/&gt;
          &amp;lt;node&amp;gt;&lt;br/&gt;
          &amp;lt;type&amp;gt;HASHSCAN&amp;lt;/type&amp;gt;&lt;br/&gt;
          &amp;lt;/node&amp;gt;&lt;br/&gt;
      &amp;lt;/node&amp;gt;&lt;br/&gt;
  &amp;lt;/node&amp;gt;&lt;/p&gt;

&lt;p&gt;I think that the tool will need a more sophisticated method for analyzing&lt;br/&gt;
the contents of the SYSXPLAIN tables in order to deduce this query&lt;br/&gt;
plan structure from the PARENT_RS_ID values. &lt;/p&gt;

&lt;p&gt;One idea is to use some of Java&apos;s built-in tree-structured collections&lt;br/&gt;
classes, such as a java.util.TreeMap, to retrieve the data from the&lt;br/&gt;
SYSXPLAIN tables, then after the data has been retrieved, traverse the&lt;br/&gt;
TreeMap in order to emit the XML document with the structure expressed&lt;br/&gt;
as XML node containment.&lt;/p&gt;

&lt;p&gt;Does this make sense?&lt;/p&gt;</comment>
                            <comment id="12875167" author="nirmal" created="Thu, 3 Jun 2010 16:58:14 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I think the tree structure should be built using the XSL style sheet, but as you mentioned we need to have a more richer data structure, which will have attributes such as id, parent_id etc, and in the XML file there will be new xml tags inside &amp;lt;details&amp;gt; tag which will give the values of node_id, parent_id, depth_level etc.&lt;/p&gt;

&lt;p&gt;These days I built a richer data structure called &quot;TreeNode&quot;. This patch contains this new data structure. And I&apos;m printing the nodes as a tree, following are two instances.&lt;/p&gt;

&lt;p&gt;C:\OtherNirmal\GSoC\Code\jars\sane&amp;gt;java org.apache.derby.tools.ExportQueryPlanAs&lt;br/&gt;
XML jdbc:derby:nirmal me mine ME 4d6f406a-0128-f969-2afb-00000035d458 abc&lt;/p&gt;

&lt;p&gt;----------------- Nodes grouped by the depth--------------&lt;/p&gt;

&lt;p&gt;(0,0) &amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
(1,0) &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
(2,0) &amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
(2,1) &amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
(3,0) &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
(4,0) &amp;lt;node&amp;gt;TABLESCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
(4,1) &amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;/p&gt;

&lt;p&gt;----------&lt;del&gt;TREE STRUCTURE&lt;/del&gt;----------------&lt;/p&gt;

&lt;p&gt;&amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
        &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
                        &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
                                &amp;lt;node&amp;gt;TABLESCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
                                &amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;/p&gt;

&lt;p&gt;C:\OtherNirmal\GSoC\Code\jars\sane&amp;gt;java org.apache.derby.tools.ExportQueryPlanAs&lt;br/&gt;
XML jdbc:derby:nirmal me mine MYSCHEMA b9810038-0128-e492-0a47-00000035b7e8 abc&lt;/p&gt;

&lt;p&gt;----------------- Nodes grouped by the depth--------------&lt;/p&gt;

&lt;p&gt;(0,0) &amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
(1,0) &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
(2,0) &amp;lt;node&amp;gt;TABLESCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
(2,1) &amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;/p&gt;

&lt;p&gt;----------&lt;del&gt;TREE STRUCTURE&lt;/del&gt;----------------&lt;/p&gt;

&lt;p&gt;&amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
        &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;TABLESCAN&amp;lt;/node&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;HASHSCAN&amp;lt;/node&amp;gt;&lt;/p&gt;


&lt;p&gt;Note: &lt;br/&gt;
*The patch is not that well commented and clean, I just want to let you know that, now I can recognize the points of each node in the tree. &lt;br/&gt;
*This will not write an xml document, though it takes the file name as input, I&apos;ve just commented it, since I haven&apos;t done with processing new xml tags yet.&lt;/p&gt;

&lt;p&gt;Your ideas are highly appreciated.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12876551" author="bryanpendleton" created="Tue, 8 Jun 2010 06:28:06 +0100"  >&lt;p&gt;I&apos;ve been thinking a little bit about testing. I was wondering whether we&lt;br/&gt;
could change the AccessDatabase class a little bit so that there is an&lt;br/&gt;
alternate constructor which allows a Connection to be passed in. Then,&lt;br/&gt;
it would be possible to extend the XplainStatisticsTest so that it invokes&lt;br/&gt;
the AccessDatabase class to emit the XML format of the various captured&lt;br/&gt;
query plans in each of the test cases, as we ran them.&lt;/p&gt;

&lt;p&gt;What would you think about adding an alternate AccessDatabase constructor&lt;br/&gt;
which took a Connection rather than a jdbcUrl?&lt;/p&gt;</comment>
                            <comment id="12876689" author="nirmal" created="Tue, 8 Jun 2010 15:47:09 +0100"  >&lt;p&gt;Ya, Bryan, it would be fine. &lt;br/&gt;
I think you meant adding something like:&lt;/p&gt;

&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@param aConn&lt;/li&gt;
	&lt;li&gt;@param aSchema&lt;/li&gt;
	&lt;li&gt;@param aQuery&lt;br/&gt;
     */&lt;br/&gt;
	public AccessDatabase(Connection aConn, String aSchema, String aQuery) 
{
		
		conn = aConn;
		schema = aSchema;
    	        query = aQuery;
		
	}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;            while keeping my original constructor. &lt;/p&gt;
</comment>
                            <comment id="12876910" author="bryanpendleton" created="Wed, 9 Jun 2010 02:01:14 +0100"  >&lt;p&gt;Yes, that&apos;s precisely what I meant. With that change in place, it seems&lt;br/&gt;
like we should be able to add something like the diff below, and quickly&lt;br/&gt;
get a fairly substantial suite of tests which call the new XML generation tools.&lt;/p&gt;

&lt;p&gt;The diff below patches into a common subroutine in the existing XplainStatisticsTest&lt;br/&gt;
test suite, and makes it so that, each time we capture a set of XPLAIN data for&lt;br/&gt;
a query in that suite, we then immediately export that data as XML.&lt;/p&gt;

&lt;p&gt;Of course, this doesn&apos;t actually verify the correctness of the XML, but it does&lt;br/&gt;
drive the new XML export code, and so it provides a basis for us to build&lt;br/&gt;
the next level of tests with.&lt;/p&gt;


&lt;p&gt;Index: XplainStatisticsTest.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; XplainStatisticsTest.java	(revision 949434)&lt;br/&gt;
+++ XplainStatisticsTest.java	(working copy)&lt;br/&gt;
@@ -490,6 +490,20 @@&lt;br/&gt;
         throws SQLException&lt;br/&gt;
     {&lt;br/&gt;
         s.execute(&quot;call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(0)&quot;);&lt;br/&gt;
+&lt;br/&gt;
+	ResultSet rs = s.executeQuery(&lt;br/&gt;
+                    &quot;select stmt_id from xpltest.sysxplain_statements&quot;);&lt;br/&gt;
+	while ( rs.hasNext() )&lt;br/&gt;
+	&lt;/p&gt;
{
+	    String stmt_id = rs.getString(1);
+	    AccessDatabase access =
+		new AccessDatabase(getConnection(), &quot;XPLTEST&quot;, stmt_id);
+	    access.initializeDataArray();
+	    access.createXMLFragment();
+	    CreateXMLFile xml_file = new CreateXMLFile();
+	    xml_file.writeTheXMLFile(access.getData(), stmt_id + &quot;.xml&quot;,
+				stmt_id + &quot;.xsl&quot;);
+	}
&lt;p&gt;     }&lt;br/&gt;
     private void verifyXplainUnset(Statement s)&lt;br/&gt;
         throws SQLException&lt;/p&gt;</comment>
                            <comment id="12879035" author="nirmal" created="Tue, 15 Jun 2010 18:27:56 +0100"  >&lt;p&gt;This shows a screen shot took by me for a hand written XML file,  after applying the very basic XSL stylesheet.&lt;/p&gt;</comment>
                            <comment id="12879036" author="nirmal" created="Tue, 15 Jun 2010 18:29:18 +0100"  >&lt;p&gt;This is before expanding the nodes of the tree.&lt;/p&gt;</comment>
                            <comment id="12879038" author="nirmal" created="Tue, 15 Jun 2010 18:36:21 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a very basic XSL style sheet (without enabling displaying a picture), and two screen shots to show how it works and a hand written XML file for testing purposes.&lt;/p&gt;

&lt;p&gt;I decided to build upon this style sheet, adding more features and a look.&lt;/p&gt;

&lt;p&gt;Highly appreciate comments from all of you.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12879045" author="rhillegas" created="Tue, 15 Jun 2010 18:59:53 +0100"  >&lt;p&gt;Thanks, Nirmal. These look good. In particular, I like seeing the ability to collapse and expand nodes. I was a little puzzled by the lack of a top level level, root node. Ultimately, I would expect that at run-time, the tuples would flow out of a single root node at the top.&lt;/p&gt;

&lt;p&gt;This visualization is an improvement over what you can do with xml documents in Firefox today:&lt;/p&gt;

&lt;p&gt;1) The visualization looks cleaner--it doesn&apos;t have the distracting xml tags mixed in with it&lt;/p&gt;

&lt;p&gt;2) Probably this approach will work in a broader range of browsers besides Firefox.&lt;/p&gt;

&lt;p&gt;I was wondering about how hard a different visualization would be: Instead of a structure which looks like a folder tree, how about something which looks more like a left-deep tree? That&apos;s what Derby query plans are today. Extra credit if you could expand and collapse a single node without forcing everthing to the left to expand and collapse at the same time.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12879052" author="nirmal" created="Tue, 15 Jun 2010 19:18:26 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;Thanks for the quick reply.&lt;/p&gt;

&lt;p&gt;I just create a sample XML for testing purposes, that was not for an actual query, that&apos;s why you can&apos;t see a single root node there. I&apos;ve attached a new screen shot showing for possibly a real scenario.&lt;/p&gt;

&lt;p&gt;Sorry if the screen shot was not clear in showing that you only can expand or collapse a single node, not everything to the left, I hope new screen shot is showing this more clearly.&lt;/p&gt;

&lt;p&gt;I&apos;ll look into your suggestion on a left-deep tree, thanks for the idea.&lt;/p&gt;

&lt;p&gt;Please note that these details displayed are just rubbish, since this is only a test work.&lt;/p&gt;

</comment>
                            <comment id="12880513" author="bryanpendleton" created="Sat, 19 Jun 2010 18:22:04 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I think the screen shots are helpful and clear, thanks for attaching them!&lt;/p&gt;

&lt;p&gt;Regarding the XSL file itself, it seems to be coming along well.&lt;/p&gt;

&lt;p&gt;I&apos;m a little uncertain about whether we should be embedding the&lt;br/&gt;
dynamic HTML JavaScript functionality directly into the XSL. Rather&lt;br/&gt;
than building our own JavaScript for making the page be interactive,&lt;br/&gt;
could we build upon some of the existing JavaScript libraries that&lt;br/&gt;
are already out there?&lt;/p&gt;

&lt;p&gt;I&apos;m wondering whether the XSL style sheet should concentrate&lt;br/&gt;
on simply formatting the XML query plan data into a simple and clear&lt;br/&gt;
HTML document for basic display in a browser, and then separately&lt;br/&gt;
we could provide a small JavaScript file which uses a library such as&lt;br/&gt;
JQuery to provide dynamic browser behaviors.&lt;/p&gt;

&lt;p&gt;I think the overall approach should be to build a collection of small,&lt;br/&gt;
simple, and focused tools, which a motivated Derby user can combine&lt;br/&gt;
in a variety of ways:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;export tool extracts Derby XPLAIN data and formats it into clear XML,&lt;br/&gt;
   including all the relevant data from the XPLAIN tables for that query&lt;/li&gt;
	&lt;li&gt;XSL stylesheet formats the XML into simple vanilla HTML, which&lt;br/&gt;
   can be viewed in a browser but is not anything fancy. Probably, this&lt;br/&gt;
  HTML is mostly just dictionary lists (DL tags) nested within each other&lt;br/&gt;
  to reflect the nested structure of the query plan, with the query plan&lt;br/&gt;
  data provided in the list contents as tag and data items to&lt;br/&gt;
  encode the name=value type information from the query nodes&lt;/li&gt;
	&lt;li&gt;CSS and JS resources can add dynamic behaviors to the HTML page&lt;br/&gt;
   to improve comprehension. For example, your expand/collapse treeview,&lt;br/&gt;
  but there are many other possibilities out there we could consider&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So if the XSL stylesheet simply formatted the query plan data into something like&lt;/p&gt;

&lt;p&gt;  &amp;lt;dl&amp;gt;&lt;br/&gt;
  &amp;lt;dt&amp;gt;node type&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;HASHSCAN&amp;lt;/dd&amp;gt; &lt;br/&gt;
&amp;lt;dt&amp;gt;no_opens&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;4&amp;lt;/dd&amp;gt; &lt;br/&gt;
&amp;lt;dt&amp;gt;returned_rows&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;4&amp;lt;/dd&amp;gt; &lt;br/&gt;
&amp;lt;dt&amp;gt;visited_pages&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;1&amp;lt;/dd&amp;gt; &lt;br/&gt;
&amp;lt;dt&amp;gt;scan_qualifiers&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;None&amp;lt;/dd&amp;gt; &lt;br/&gt;
&amp;lt;/dl&amp;gt;&lt;/p&gt;

&lt;p&gt;I think that would be very solid, and then we could work on the formatting&lt;br/&gt;
and dynamic behaviors separately.&lt;/p&gt;</comment>
                            <comment id="12881238" author="nirmal" created="Tue, 22 Jun 2010 17:15:15 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;This patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-5.diff) is providing the functionality of emitting a more detailed &quot;XML file&quot; using the new tool. As an example, following is a part extracted after generating a XML file, using this patch:&lt;/p&gt;

&lt;p&gt;&amp;lt;plan&amp;gt;&lt;br/&gt;
	&amp;lt;details&amp;gt;&lt;br/&gt;
      &amp;lt;image&amp;gt;projection.jpg&amp;lt;/image&amp;gt;&lt;br/&gt;
      &amp;lt;node&amp;gt;PROJECTION&amp;lt;/node&amp;gt;&lt;br/&gt;
      &amp;lt;id&amp;gt;29d8c03e-0128-e492-0a47-00000035b7e8&amp;lt;/id&amp;gt;&lt;br/&gt;
      &amp;lt;depth&amp;gt;0&amp;lt;/depth&amp;gt; &lt;br/&gt;
      &amp;lt;parent_id&amp;gt;null&amp;lt;/parent_id&amp;gt;&lt;br/&gt;
      &amp;lt;input_rows&amp;gt; null&amp;lt;/input_rows&amp;gt;&lt;br/&gt;
      &amp;lt;returned_rows&amp;gt; # of Rows Returned= 4&amp;lt;/returned_rows&amp;gt;&lt;br/&gt;
      &amp;lt;no_opens&amp;gt; # of Opens= 1&amp;lt;/no_opens&amp;gt;&lt;br/&gt;
      &amp;lt;visited_pages&amp;gt; null&amp;lt;/visited_pages&amp;gt;&lt;br/&gt;
      &amp;lt;scan_qualifiers&amp;gt; null&amp;lt;/scan_qualifiers&amp;gt;&lt;br/&gt;
      &amp;lt;next_qualifiers&amp;gt; null&amp;lt;/next_qualifiers&amp;gt;&lt;br/&gt;
	&amp;lt;/details&amp;gt;&lt;br/&gt;
	&amp;lt;details&amp;gt;&lt;br/&gt;
      &amp;lt;arrow&amp;gt;arrow.jpg&amp;lt;/arrow&amp;gt;&lt;br/&gt;
	   &amp;lt;image&amp;gt;lohashjoin.jpg&amp;lt;/image&amp;gt;&lt;br/&gt;
      &amp;lt;node&amp;gt;LOHASHJOIN&amp;lt;/node&amp;gt;&lt;br/&gt;
      &amp;lt;id&amp;gt;8a184042-0128-e492-0a47-00000035b7e8&amp;lt;/id&amp;gt;&lt;br/&gt;
      &amp;lt;depth&amp;gt;1&amp;lt;/depth&amp;gt;&lt;br/&gt;
      &amp;lt;parent_id&amp;gt;29d8c03e-0128-e492-0a47-00000035b7e8&amp;lt;/parent_id&amp;gt;&lt;br/&gt;
      &amp;lt;input_rows&amp;gt; null&amp;lt;/input_rows&amp;gt;&lt;br/&gt;
      &amp;lt;returned_rows&amp;gt; # of Rows Returned= 4&amp;lt;/returned_rows&amp;gt;&lt;br/&gt;
      &amp;lt;no_opens&amp;gt; # of Opens= 1&amp;lt;/no_opens&amp;gt;&lt;br/&gt;
      &amp;lt;visited_pages&amp;gt; null&amp;lt;/visited_pages&amp;gt;&lt;br/&gt;
      &amp;lt;scan_qualifiers&amp;gt; null&amp;lt;/scan_qualifiers&amp;gt;&lt;br/&gt;
      &amp;lt;next_qualifiers&amp;gt; null&amp;lt;/next_qualifiers&amp;gt;&lt;br/&gt;
	&amp;lt;/details&amp;gt;&lt;br/&gt;
.................................................................................&lt;br/&gt;
...........................................&lt;/p&gt;


&lt;p&gt;You can start the new tool like this: &lt;/p&gt;

&lt;p&gt;C:\OtherNirmal\GSoC\Code\jars\sane&amp;gt;java org.apache.derby.tools.ExportQueryPlanAsXML jdbc:derby:nirmal username password MYSCHEMA b9810038-0128-e492-0a47-00000035b7e8 name_of_the_xml_file &lt;/p&gt;

&lt;p&gt;MYSCHEMA - schema you specified when taking statistics &lt;br/&gt;
b9810038-0128-e492-0a47-00000035b7e8 - is the STMT_ID in SYSXPLAIN_STATEMENTS table &lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12881259" author="nirmal" created="Tue, 22 Jun 2010 18:31:55 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
This screen shot shows the simple html page as you suggested. I hope this is what you meant, if not please correct me.&lt;br/&gt;
I&apos;m attaching the pure XSL style sheet as well.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12881511" author="bryanpendleton" created="Wed, 23 Jun 2010 02:42:12 +0100"  >&lt;p&gt;Yes, this seems to be making great progress! The XSL stylesheet is quite clean,&lt;br/&gt;
and the XML source document seems much more full-featured and complete.&lt;/p&gt;

&lt;p&gt;I think that the &amp;lt;arrow&amp;gt; and &amp;lt;image&amp;gt; tags shouldn&apos;t be in the base XML document,&lt;br/&gt;
but rather should be added by the presentation layer (XSL or JavaScript libraries, etc.)&lt;/p&gt;

&lt;p&gt;And I&apos;d like to see&lt;/p&gt;

&lt;p&gt;  &amp;lt;returned_rows&amp;gt;4&amp;lt;/returned_rows&amp;gt;&lt;/p&gt;

&lt;p&gt;rather than&lt;/p&gt;

&lt;p&gt;  &amp;lt;returned_rows&amp;gt; # of Rows Returned= 4&amp;lt;/returned_rows&amp;gt; &lt;/p&gt;

&lt;p&gt;and the same for &amp;lt;no_opens&amp;gt; tag.&lt;/p&gt;
</comment>
                            <comment id="12882419" author="nirmal" created="Fri, 25 Jun 2010 02:32:40 +0100"  >&lt;p&gt;Hi,&lt;br/&gt;
I&apos;ve modified the code adding Bryan&apos;s suggestions, &quot; xml_doc_screenshot&quot; is taken from the generated XML document, I think now I can move to create tests for the XML document generation code.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12882429" author="bryanpendleton" created="Fri, 25 Jun 2010 03:34:11 +0100"  >&lt;p&gt;The new XML document screenshot looks very good.&lt;/p&gt;</comment>
                            <comment id="12882605" author="nirmal" created="Fri, 25 Jun 2010 16:15:28 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I&apos;ve created a test only to check the generation of XML files not to test the correctness of XML values,&lt;br/&gt;
inside &quot;org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.java&quot;, &lt;br/&gt;
you can find them in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-test1.diff attached.&lt;/p&gt;

&lt;p&gt;While creating the tests I found an important check for the zero columns returned &lt;br/&gt;
in the sysxplain_resultsets for DDL statements is needed. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-6.diff&lt;br/&gt;
included that modification as well.&lt;/p&gt;

&lt;p&gt;Your comments are mostly welcome.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12882606" author="nirmal" created="Fri, 25 Jun 2010 16:18:13 +0100"  >&lt;p&gt;Forgot to mention that I ran the junit test for &quot;org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.java&quot; &lt;br/&gt;
without errors.&lt;/p&gt;</comment>
                            <comment id="12882858" author="bryanpendleton" created="Sat, 26 Jun 2010 18:01:59 +0100"  >&lt;p&gt;Hi Nirmal&lt;br/&gt;
I&apos;m having several small problems working with the patch:&lt;br/&gt;
1) In my build environment, String.contains() is not available, since&lt;br/&gt;
I&apos;m building with JDK 1.4, not JDK 1.5. Perhaps we could change&lt;br/&gt;
the contains() calls in AccessDatabase.java to use indexOf() instead?&lt;br/&gt;
2) It appears that the new code is not getting added to derbytools.jar.&lt;br/&gt;
Perhaps a build file adjustment is needed to enroll the new classes&lt;br/&gt;
in derbytools.jar?&lt;br/&gt;
3) When I run XplainStatisticsTest, I get AccessDenied exceptions&lt;br/&gt;
trying to write the XML files. I&apos;m not sure exactly where the test is&lt;br/&gt;
trying to write these test files, but it seems the location is not acceptable to&lt;br/&gt;
the security policy that is getting used by the tests.&lt;/p&gt;

&lt;p&gt;When I run the test using the &apos;classes&apos; directory in my classpath, problems&lt;br/&gt;
(2) and (3) do not arise.&lt;/p&gt;

&lt;p&gt;I took a quick look at the generated XML files in the output, and they&lt;br/&gt;
are starting to look very good!&lt;/p&gt;

&lt;p&gt;Can we include the STATEMENT_TEXT data into the generated XML&lt;br/&gt;
output, so that we can see the actual statement that is getting run,&lt;br/&gt;
as part of the XML file?&lt;/p&gt;</comment>
                            <comment id="12882958" author="nirmal" created="Sun, 27 Jun 2010 16:37:26 +0100"  >&lt;p&gt;Hi, this screen shot shows the basic html, after adding the name of the query executed.&lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="12882959" author="nirmal" created="Sun, 27 Jun 2010 17:02:09 +0100"  >&lt;p&gt;Hi, &lt;/p&gt;

&lt;p&gt;In this patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-7.diff, I modified the code as per comments of Bryan.&lt;br/&gt;
1) I used indexOf() instead of contains(), in AccessDatabase class.&lt;/p&gt;

&lt;p&gt;2) I added the entry for new tool in &quot;\tools\jar\tools.properties&quot; and now the new tool &lt;br/&gt;
is successfully added to derbytools.jar.&lt;/p&gt;

&lt;p&gt;3) --When I run XplainStatisticsTest, I get AccessDenied exceptions &lt;br/&gt;
     --trying to write the XML files.&lt;br/&gt;
Bryan, I&apos;ve no idea why this happened, in my environment it ran successfully.&lt;/p&gt;

&lt;p&gt; ---I&apos;m not sure exactly where the test is &lt;br/&gt;
 ---trying to write these test files, but it seems the location is not acceptable to &lt;br/&gt;
 ---the security policy that is getting used by the tests. &lt;br/&gt;
The xml files are created in the same directory, where you have executed&lt;br/&gt;
the test file.&lt;/p&gt;

&lt;p&gt;4) I&apos;ve included the statement executed and attached a screen shot &lt;br/&gt;
&quot;basic_html-2&quot;.&lt;/p&gt;

&lt;p&gt;Appreciate your comments.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12882960" author="nirmal" created="Sun, 27 Jun 2010 17:05:05 +0100"  >&lt;p&gt;Here&apos;s the modified XSL, after adding statement executed.&lt;/p&gt;</comment>
                            <comment id="12882966" author="bryanpendleton" created="Sun, 27 Jun 2010 18:34:29 +0100"  >&lt;p&gt;In basic_html-2, are there 4 nodes or 3? I see 3 &quot;boxes&quot; in the screen shot, but&lt;br/&gt;
it looks like there are 4 node names listed (PROJECTION,LOHASHJOIN, &lt;br/&gt;
TABLESCAN,HASHSCAN). Is there a missing box for &quot;HASHSCAN&quot; node?)&lt;/p&gt;</comment>
                            <comment id="12882967" author="nirmal" created="Sun, 27 Jun 2010 18:43:14 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;There&apos;re 4 nodes, and all 4 boxes are displaying, only thing is it&apos;s too long, &lt;br/&gt;
so in the screen shot latter part is not visible. I&apos;ll attach another screen shot.&lt;/p&gt;</comment>
                            <comment id="12882969" author="bryanpendleton" created="Sun, 27 Jun 2010 19:05:53 +0100"  >&lt;p&gt;Good, I see all four nodes now. Thanks!&lt;/p&gt;

&lt;p&gt;For result sets of &quot;scan&quot; table, like TABLESCAN or HASHSCAN, it&lt;br/&gt;
would be useful to include the information from the SYSXPLAIN_SCAN_PROPS&lt;br/&gt;
row. In particular, it would be nice for the SCAN nodes to identify what&lt;br/&gt;
table was being scanned; I think that information is in the SCAN_OBJECT_NAME&lt;br/&gt;
column of the corresponding SYSXPLAIN_SCAN_PROPS row.&lt;/p&gt;

&lt;p&gt;At the top of this page, there is a sample query that shows a little bit&lt;br/&gt;
about how to join between SYSXPLAIN_RESULTSETS and SYSXPLAIN_SCAN_PROPS:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.6/ref/rrefsysxplain_scan_props.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.6/ref/rrefsysxplain_scan_props.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12883013" author="nirmal" created="Mon, 28 Jun 2010 04:07:38 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;You want to appear those values, in all nodes or only in &quot;scan&quot; related nodes?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12883170" author="bryanpendleton" created="Mon, 28 Jun 2010 15:59:35 +0100"  >&lt;p&gt;I think we could go either way. My first reaction was to desire the&lt;br/&gt;
data only for scan-type nodes, but I could see an argument for&lt;br/&gt;
having the tags always present, but be empty for non-scan nodes.&lt;/p&gt;

&lt;p&gt;In general, my experience with XML is that optional data is&lt;br/&gt;
implemented using optional tags, so I think most users would&lt;br/&gt;
expect to see the tags appear only for scan-related nodes.&lt;/p&gt;</comment>
                            <comment id="12883204" author="nirmal" created="Mon, 28 Jun 2010 17:15:21 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;This screen shot shows, after modifying the tool, as it only emits, scan related details&lt;br/&gt;
only if it&apos;s a &quot;scan&quot; node.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12883624" author="nirmal" created="Tue, 29 Jun 2010 18:47:08 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;This patch (7-b) created after modifying the code such that it creates &lt;br/&gt;
an element for query executed, added more scan related details, &lt;br/&gt;
and shows scan related details only in scan nodes.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching the modified test file as well (test2).&lt;/p&gt;

&lt;p&gt;Also the modified &quot;vanilla_html.xsl&quot; such that it displays query executed,&lt;br/&gt;
as well.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12884286" author="bryanpendleton" created="Thu, 1 Jul 2010 15:08:56 +0100"  >&lt;p&gt;Similarly to scans, there is also data in SYSXPLAIN_SORT_PROPS&lt;br/&gt;
in certain cases, and it would be great if we could get that data&lt;br/&gt;
into the XML document. For example, GROUPBY nodes usually&lt;br/&gt;
have associated SORT_PROPS rows.&lt;/p&gt;

&lt;p&gt;For a simple example of a statement which has both SCAN_PROPS&lt;br/&gt;
and SORT_PROPS data in it, see testGroupBySortProps() in &lt;br/&gt;
XplainStatisticsTest.java&lt;/p&gt;</comment>
                            <comment id="12884310" author="nirmal" created="Thu, 1 Jul 2010 16:07:20 +0100"  >&lt;p&gt;Hi, &lt;br/&gt;
basic_html-2.3 screen shot shows changes done to the tool&lt;br/&gt;
as it shows SORT_TYPE and NO_OUTPUT_ROWS details of&lt;br/&gt;
SYSXPLAIN_SORT_PROPS table, only for sort related nodes.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12885038" author="nirmal" created="Sun, 4 Jul 2010 15:55:52 +0100"  >&lt;p&gt;I&apos;ve modified the XML document generated by the tool, as it displays nodes &lt;br/&gt;
as a tree structure, an according to that I&apos;ve changed the XSL style sheet as well.&lt;br/&gt;
Screen shots are attached to display the outcome after applying the style sheet, &lt;br/&gt;
and to display how a XML file looks, after changing it to a tress structure.&lt;/p&gt;

&lt;p&gt;As Rick requested I&apos;ve changed the name of the tool to &quot;PlanExporter&quot;.&lt;br/&gt;
So, now you have to run the new tool like this:&lt;br/&gt;
java org.apache.derby.tools.PlanExporter jdbc:derby:nirmal &lt;br/&gt;
me mine MYSCHEMA b9810038-0128-e492-0a47-00000035b7e8 xml_file&lt;/p&gt;

&lt;p&gt;*note the change of the name.&lt;/p&gt;

&lt;p&gt;And the new patch (8) is contain these modifications done and also the modifications&lt;br/&gt;
on XplainStatisticsTest.java.&lt;/p&gt;

&lt;p&gt;I&apos;ve run that test file and all 17 tests were passed, and I had a close look at&lt;br/&gt;
all the XML file, to check whether they display as expected in the tests&lt;br/&gt;
and if I believe my eyes I couldn&apos;t find any error.&lt;/p&gt;

&lt;p&gt;Anyway I highly appreciate if someone can have a look at the final out come,&lt;br/&gt;
if you need any help to set up contact me or Bryan.&lt;/p&gt;

&lt;p&gt;And I&apos;m hoping to get ideas of all the members of the community, please feel free&lt;br/&gt;
to criticize on the tool.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12885043" author="nirmal" created="Sun, 4 Jul 2010 16:40:06 +0100"  >&lt;p&gt;Whoops! I forgot to remove the &quot;id&quot;, sorry about that.&lt;/p&gt;</comment>
                            <comment id="12885378" author="bryanpendleton" created="Tue, 6 Jul 2010 01:33:58 +0100"  >
&lt;p&gt;It seems to me that the basic XML exporting functionality is&lt;br/&gt;
coming along quite well!&lt;/p&gt;

&lt;p&gt;I agree with you that doing more work on the visualization is&lt;br/&gt;
important, and I think you are already starting to look at that.&lt;/p&gt;

&lt;p&gt;I&apos;d really like to concentrate on getting a more complete &lt;br/&gt;
regression test in place. My overall feeling is that we are&lt;br/&gt;
getting close enough to having the XML plan exporter operational&lt;br/&gt;
that we can start to think about committing it.&lt;/p&gt;

&lt;p&gt;But in order to commit it, we need to have enough of a regression&lt;br/&gt;
test harness in place, that we can be confident that others&lt;br/&gt;
can work with the code and run the regression tests and know&lt;br/&gt;
that the XML plan exporter is being adequately tested.&lt;/p&gt;

&lt;p&gt;So I&apos;d like to see us concentrate on how we might extend the&lt;br/&gt;
current XplainStatisticsTest inter-action, to implement a&lt;br/&gt;
thorough regression test setup.&lt;/p&gt;

&lt;p&gt;From a code point of view, I&apos;d like to see some sort of&lt;br/&gt;
simple assertions in the XML portion of the tests, along the&lt;br/&gt;
lines of this pseudocode:&lt;/p&gt;

&lt;p&gt;   1) Set up the XPLAIN tables and run some sort of SQL to capture data&lt;br/&gt;
   2) Verify the XPLAIN table contents&lt;br/&gt;
   &amp;#8212; steps (1) and (2) are in the current tests already&lt;br/&gt;
   3) Export the XPLAIN data to XML using PlanExporter&lt;br/&gt;
   &amp;#8212; you have got this working in the latest patch already&lt;br/&gt;
   4) Verify the XML contents&lt;/p&gt;

&lt;p&gt;Step (4) is somewhat involved, and I think it probably involves&lt;br/&gt;
writing a few common subroutines that we can use to perform&lt;br/&gt;
simple assertions against the generated XML:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;does the XML contain this tag?&lt;/li&gt;
	&lt;li&gt;how many occurrences of this tag are there?&lt;/li&gt;
	&lt;li&gt;check the contents of this tag against this string&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve been thinking that we could perhaps have some utility routines&lt;br/&gt;
that used XPath expressions to match portions and contents of&lt;br/&gt;
the XML document, and use those to build up regression test assertions.&lt;/p&gt;

&lt;p&gt;So the test code would then contain lines like:&lt;/p&gt;

&lt;p&gt;   assertEquals(1, XmlTagCount(&quot;//rowCount&quot;);&lt;br/&gt;
   assertEquals(&quot;TABLESCAN&quot;, XmlTagContents(&quot;//node&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;/resultNodeType&quot;));&lt;/p&gt;

&lt;p&gt;What do you think? Would some sort of simple XPath-based utility&lt;br/&gt;
code be enough to support some solid regression tests?&lt;/p&gt;</comment>
                            <comment id="12885584" author="nirmal" created="Tue, 6 Jul 2010 17:25:39 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I think this way would be enough to support solid regression tests.&lt;/p&gt;

&lt;p&gt;Is it possible to use the XML libraries such as xalan.jar to execute XPath queries?&lt;br/&gt;
or do I need to implement those XMLTagCount(..) etc. methods?&lt;/p&gt;

&lt;p&gt;If I&apos;m not mistaken, I have to create assertEquals(...) in JDBC.java, isn&apos;t it?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12885776" author="bryanpendleton" created="Wed, 7 Jul 2010 02:58:35 +0100"  >&lt;p&gt;Yes, we should try to use xalan for our XPath execution support. &lt;br/&gt;
I&apos;m pretty sure that we have other regression tests (the XML tests)&lt;br/&gt;
that use XPath in them, for example XMLTypeAndOpsTest does&lt;br/&gt;
some XPath-testing I believe.&lt;/p&gt;

&lt;p&gt;You can find a little bit of information about xalan and Derby here:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.6/devguide/cdevstandardsxml.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.6/devguide/cdevstandardsxml.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our utility test methods should definitely be put in a common superclass&lt;br/&gt;
so that we can share and re-use them over time as we develop more tests.&lt;/p&gt;

&lt;p&gt;Ideally, it would be nice if our tests could dynamically detect whether&lt;br/&gt;
the xalan classes were available, and, if they aren&apos;t, then we just&lt;br/&gt;
skip the XPath part of the tests. I think that the XML code in the Derby&lt;br/&gt;
engine has some logic for doing this that we can examine to see how it works.&lt;/p&gt;</comment>
                            <comment id="12887053" author="nirmal" created="Sat, 10 Jul 2010 17:42:51 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;This patch contains new tests added to XplainStatisticsTest.java class. &lt;br/&gt;
Hope now we got some solid tests which we can verify the content&lt;br/&gt;
of the XML files generated from PlanExporter tool.&lt;/p&gt;

&lt;p&gt;These tests will only run if the needed Xalan and JAXP classes are &lt;br/&gt;
in the classpath.&lt;/p&gt;

&lt;p&gt;Test files will be created in extinout folder under user&apos;s testing directory.&lt;/p&gt;

&lt;p&gt;Comments are highly appreciated.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12887220" author="nirmal" created="Sun, 11 Jul 2010 19:25:24 +0100"  >&lt;p&gt;Removed the requirement of policy change, after using&lt;br/&gt;
doPrivileged method, in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.1.diff.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12887252" author="bryanpendleton" created="Mon, 12 Jul 2010 01:17:56 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I don&apos;t understand the two new &quot;assertEqual&quot; methods in JDBC.java. How&lt;br/&gt;
are they different from the assertEquals() methods already present in&lt;br/&gt;
junit.framework.Test?&lt;/p&gt;</comment>
                            <comment id="12887371" author="nirmal" created="Mon, 12 Jul 2010 14:54:30 +0100"  >&lt;p&gt;Hi,&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.2.diff patch removed the assertEqual methods &lt;br/&gt;
in JDBC.java file and used Assert.assertEquals method of Junit &lt;br/&gt;
Framework.&lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="12888361" author="bryanpendleton" created="Wed, 14 Jul 2010 15:27:04 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I have a concern about the error-handling technique used in the patch.&lt;/p&gt;

&lt;p&gt;In a number of places, particularly in AccessDatabase.java, but also in&lt;br/&gt;
some of the other classes, the code follows this pattern:&lt;/p&gt;

&lt;p&gt;  try &lt;/p&gt;
{
     ... do something ...
  }
&lt;p&gt; catch (SomeException e) &lt;/p&gt;
{
     e.printStackTrace();
  }

&lt;p&gt;I don&apos;t think this is the best pattern to use.&lt;/p&gt;

&lt;p&gt;Instead, I think we should (a) remove the try/catch code from the method,&lt;br/&gt;
and (b) change the method&apos;s declaration to say &quot;throws SomeException&quot;&lt;/p&gt;

&lt;p&gt;I suspect that, in general, the only try / catch block in the entire PlanExporter&lt;br/&gt;
code should probably be at the very outermost main() method. &lt;/p&gt;

&lt;p&gt;One exception to this is in the shutdown() method, where we do expect&lt;br/&gt;
to routinely catch and ignore the shutdown exception.&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;
</comment>
                            <comment id="12888375" author="nirmal" created="Wed, 14 Jul 2010 16:09:18 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for reviewing it.&lt;br/&gt;
Is it ok to add only &lt;br/&gt;
catch(Exception e)&lt;/p&gt;
{ e.printStackTrace()}, &lt;br/&gt;
at the very outermost main() method&lt;br/&gt;
rather than catching each exception by its&lt;br/&gt;
name i.e. &lt;br/&gt;
catch(SQLException e){ e.printStackTrace()}
&lt;p&gt;,&lt;br/&gt;
etc.?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12888389" author="nirmal" created="Wed, 14 Jul 2010 16:36:43 +0100"  >&lt;p&gt;Bryan, What about try/catch blocks used in&lt;br/&gt;
XplainStatisticsTest? &lt;br/&gt;
The reason behind catching the exceptions&lt;br/&gt;
there is if I throw an exception, many methods should&lt;br/&gt;
be updated as they throws those exceptions.&lt;/p&gt;

&lt;p&gt;If it&apos;s ok, I&apos;ll throw exceptions instead of&lt;br/&gt;
catching them at &quot;XplainStatisticsTest&quot;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12888654" author="bryanpendleton" created="Thu, 15 Jul 2010 02:07:47 +0100"  >&lt;p&gt;Yes, at the outermost level of PlanExporter I think it is appropriate&lt;br/&gt;
to catch (Exception); we don&apos;t need to name each specific type&lt;br/&gt;
of exception there unless they would have different handling.&lt;/p&gt;

&lt;p&gt;In the test code, we generally don&apos;t catch exceptions at all. We&lt;br/&gt;
generally just declare our test methods as&lt;/p&gt;

&lt;p&gt;  throws Exception&lt;/p&gt;

&lt;p&gt;and let the exception be thrown out to JUnit, which will catch it&lt;br/&gt;
and report it. The one exception &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; to this rule is for a test which&lt;br/&gt;
is deliberately testing the throwing of an exception, in which case&lt;br/&gt;
the test catches the exception (and, in fact, should call fail() if the&lt;br/&gt;
exception is not thrown)&lt;/p&gt;

&lt;p&gt;So yes, it&apos;s fine to have the test methods declare that they throw&lt;br/&gt;
exceptions, and the test code should only catch the exceptions&lt;br/&gt;
that the test case is deliberately provoking with its testing.&lt;/p&gt;

&lt;p&gt;I thought we had written something about this in the Derby wiki,&lt;br/&gt;
but I went searching under &lt;a href=&quot;http://wiki.apache.org/db-derby/IntroToJUnit&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/IntroToJUnit&lt;/a&gt;&lt;br/&gt;
and I couldn&apos;t find it. Does anybody know if we wrote a wiki&lt;br/&gt;
page describing these coding conventions for JUnit tests?  If&lt;br/&gt;
not, it would be great to have one.&lt;/p&gt;
</comment>
                            <comment id="12889004" author="nirmal" created="Fri, 16 Jul 2010 04:56:02 +0100"  >&lt;p&gt;Hi,&lt;br/&gt;
Attaching the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.3.diff which has addressed&lt;br/&gt;
the following:&lt;br/&gt;
1) removing all try/catch blocks, and instead, throwing exceptions.&lt;br/&gt;
2) Added a new class &lt;br/&gt;
&quot;java/tools/org/apache/derby/impl/tools/planexporter/CreateHTMLFile.java&quot;&lt;br/&gt;
which will convert the created XML into a HTML, using XSLT style sheet.&lt;br/&gt;
This class will throw a FileNotFoundException if it can&apos;t find the style sheet&lt;br/&gt;
at user&apos;s directory where the tool invoked. That is:&lt;br/&gt;
if user invoked the tool from: C:\OtherNirmal\GSoC\Code&lt;br/&gt;
the style sheet&apos;s path must be: C:\OtherNirmal\GSoC\Code\vanilla_html.xsl&lt;/p&gt;

&lt;p&gt;The HTML will be created at the same directory as XML which is specified&lt;br/&gt;
by the user.&lt;br/&gt;
The name of the HTML will be created as following example:&lt;br/&gt;
if user specified xml path is:&lt;br/&gt;
C:\OtherNirmal\GSoC\Code\test\query.xml&lt;br/&gt;
the  HTML will be created at:&lt;br/&gt;
C:\OtherNirmal\GSoC\Code\test\query_html.html&lt;/p&gt;

&lt;p&gt;Your comments are highly appreciated.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12889500" author="nirmal" created="Sat, 17 Jul 2010 13:40:29 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The new patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.4 is addressed following:&lt;br/&gt;
01) It allows a user to export&lt;/p&gt;

&lt;p&gt;1) only the XML: -xml &lt;/p&gt;
{path}&lt;br/&gt;
&lt;br/&gt;
2) only the HTML with default XSL: -html {path}
&lt;p&gt; &lt;br/&gt;
**here we&apos;ll generate a XML and delete it after the execution.&lt;br/&gt;
**XSL should be in the directory where the tool invoked from.&lt;/p&gt;

&lt;p&gt;3) XML and HTML with default XSL: -xml &lt;/p&gt;
{path} -html {path}
&lt;p&gt; &lt;br/&gt;
**XSL should be in the directory where the tool invoked from.&lt;/p&gt;

&lt;p&gt;4) only the HTML with user specified XSL: -xsl &lt;/p&gt;
{path} -html {path}
&lt;p&gt;**here we might generate a XML and delete it after the execution.&lt;/p&gt;

&lt;p&gt;5) XML and HTML with user specified XSL: -xml &lt;/p&gt;
{path} -xsl {path}
&lt;p&gt; -html &lt;/p&gt;
{path}

&lt;p&gt;Order of arguments will not matter, each possible order&lt;br/&gt;
is handled in the code.&lt;/p&gt;

&lt;p&gt;02) Patch takes the default XSL style sheet from derbytools.jar.&lt;br/&gt;
Therefore, before using the default XSL style sheet, we must manually&lt;br/&gt;
add the style sheet to the derbytools.jar.&lt;/p&gt;

&lt;p&gt;03) I ran the regression tests under XplainStatisticsTest class,&lt;br/&gt;
all cases were passed.&lt;/p&gt;

&lt;p&gt;We might now look at the possibility of committing the new tool.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12889636" author="bryanpendleton" created="Sun, 18 Jul 2010 18:02:38 +0100"  >&lt;p&gt;Hi Nirmal, I&apos;m having trouble getting the latest patch to build. I think&lt;br/&gt;
I&apos;m not getting xalan.jar into the classpath properly. Are there any&lt;br/&gt;
special build instructions for this patch? What do you have your&lt;br/&gt;
CLASSPATH set to when you build the patch?&lt;/p&gt;

&lt;p&gt;The errors I get are, e.g., &lt;/p&gt;


&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/bpendleton/src/derby/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java:2039: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : variable XPathResult&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         					XPathResult.UNORDERED_NODE_ITERATOR_TYPE));&lt;/p&gt;</comment>
                            <comment id="12889638" author="nirmal" created="Sun, 18 Jul 2010 18:22:16 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Seems like you&apos;re missing the Xalan.jar in your&lt;br/&gt;
classpath. Can you please check whether you&lt;br/&gt;
got that in your classpath.&lt;/p&gt;

&lt;p&gt;Meanwhile I&apos;ll look into that more deeply.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12889682" author="bryanpendleton" created="Sun, 18 Jul 2010 21:54:05 +0100"  >&lt;p&gt;It doesn&apos;t seem to matter what I set my CLASSPATH to. My &apos;ant all&apos;&lt;br/&gt;
step always has this as its classpath for compiling the test code:&lt;/p&gt;

&lt;p&gt;&apos;/home/bpendleton/src/derby/trunk/classes:&lt;br/&gt;
/home/bpendleton/tools/j2sdk1.4.2_18/jre/lib/charsets.jar:&lt;br/&gt;
/home/bpendleton/tools/j2sdk1.4.2_18/jre/lib/jce.jar:&lt;br/&gt;
/home/bpendleton/tools/j2sdk1.4.2_18/jre/lib/jsse.jar:&lt;br/&gt;
/home/bpendleton/tools/j2sdk1.4.2_18/jre/lib/plugin.jar:&lt;br/&gt;
/home/bpendleton/tools/j2sdk1.4.2_18/jre/lib/rt.jar:&lt;br/&gt;
/home/bpendleton/tools/j2sdk1.4.2_18/jre/lib/sunrsasign.jar:&lt;br/&gt;
/home/bpendleton/src/derby/trunk/tools/java/junit.jar&apos;&lt;/p&gt;

&lt;p&gt;I tried to hunt through the build.xml files a bit, and I could see that&lt;br/&gt;
it looks like the xalan entry in the classpath is supposed to&lt;br/&gt;
come from the extrapath.properties file, but I guess that file isn&apos;t&lt;br/&gt;
getting read in my build environment for some reason?&lt;/p&gt;</comment>
                            <comment id="12889885" author="bryanpendleton" created="Mon, 19 Jul 2010 16:00:44 +0100"  >&lt;p&gt;Hi Nirmal, I saw your note on derby-dev. Thanks for the investigation. I agree&lt;br/&gt;
that if we can use an older version of xalan in our tests, that seems like a&lt;br/&gt;
good solution. As one more data point, I tried removing the jdk14 and jdk15&lt;br/&gt;
definitions from my ant.properties, and now I get:&lt;/p&gt;


&lt;p&gt;/home/bpendleton/src/derby/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java:63: package com.sun.org.apache.xpath.internal.domapi does not exist&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import com.sun.org.apache.xpath.internal.domapi.XPathEvaluatorImpl;&lt;/p&gt;

&lt;p&gt;So even with a pure jdk 1.6 configuration I am still having some build problems.&lt;/p&gt;</comment>
                            <comment id="12889891" author="nirmal" created="Mon, 19 Jul 2010 16:44:02 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;If you look at your Jdk1.6 folder isn&apos;t it containing the file you mentioned&lt;br/&gt;
above (jdk1.6.0\com\sun\org\apache\xpath\internal\domapi\XPathEvaluatorImpl.java)?&lt;/p&gt;

&lt;p&gt;In my jdk1.6 folder it&apos;s there.&lt;/p&gt;

&lt;p&gt;I wonder why it failed in your environment.&lt;/p&gt;
</comment>
                            <comment id="12890125" author="bryanpendleton" created="Tue, 20 Jul 2010 02:34:49 +0100"  >&lt;p&gt;Yes, you&apos;re right, it is there in my jdk 1.6 environment.&lt;/p&gt;

&lt;p&gt;I wonder if the problem is due to:&lt;/p&gt;

&lt;p&gt;Setting property java15compile.classpath to /usr/lib/jvm/java-1.5.0-gcj-4.4/jre/lib/rt.jar&lt;/p&gt;

&lt;p&gt;It seems that the build chose to use my GCJ version of 1.5, rather than my Sun version.&lt;/p&gt;

&lt;p&gt;I tried forcing j15lib to point to my jdk 1.6 JRE, but then I get&lt;br/&gt;
JDBC interface compilation errors due to the differences between&lt;br/&gt;
JDBC 3 and JDBC 4.&lt;/p&gt;

&lt;p&gt;The Derby build has become a tad complex of late, and I&apos;m&lt;br/&gt;
having a bit of confusion here, but I&apos;ll continue to investigate...&lt;/p&gt;</comment>
                            <comment id="12890140" author="bryanpendleton" created="Tue, 20 Jul 2010 03:38:05 +0100"  >&lt;p&gt;I successfully built after I did the following:&lt;br/&gt;
1) Edited my ant.properties to remove j14lib and j15lib, leaving only jdk16&lt;br/&gt;
2) Removed my GCJ installation(s) from my machine, so that JDK 1.6 was &lt;br/&gt;
the only JDK available to the build&lt;/p&gt;

&lt;p&gt;This confirms Nirmal&apos;s observation that the build is successful in a pure JDK 1.6 environment&lt;/p&gt;</comment>
                            <comment id="12890167" author="bryanpendleton" created="Tue, 20 Jul 2010 04:22:29 +0100"  >&lt;p&gt;To get derbytools.jar to build, I had to change tools/jar/tools.properties so it says &lt;/p&gt;

&lt;p&gt;   derby.module.planexporter=org.apache.derby.tools.PlanExporter&lt;/p&gt;

&lt;p&gt;Nirmal, do you develop on Windows? I think maybe on Windows the file&lt;br/&gt;
names are not case sensitive, but on my Ubuntu system the file name&lt;br/&gt;
case has to match exactly.&lt;/p&gt;
</comment>
                            <comment id="12890168" author="nirmal" created="Tue, 20 Jul 2010 04:23:44 +0100"  >&lt;p&gt;Thanks Bryan, I&apos;m glad that you were able&lt;br/&gt;
to set up your environment. &lt;/p&gt;

&lt;p&gt;Anyway I&apos;m looking into an old version of xalan, &lt;br/&gt;
let&apos;s see whether it contains the required functionalities.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12890172" author="nirmal" created="Tue, 20 Jul 2010 04:36:11 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Whoops, yeah I should put &quot;PlanExporter&quot; instead&lt;br/&gt;
&quot;planexporter&quot;. &lt;br/&gt;
You&apos;re right Bryan, I&apos;m developing in Windows Vista,&lt;br/&gt;
I&apos;ll update it in my environment too, thanks for &lt;br/&gt;
pointing it out.&lt;/p&gt;
</comment>
                            <comment id="12890229" author="knutanders" created="Tue, 20 Jul 2010 11:09:11 +0100"  >&lt;p&gt;Will XplainStatisticsTest run on non-Sun JVMs now that imports com.sun.org.apache.xpath.internal.domapi.XPathEvaluatorImpl?&lt;/p&gt;</comment>
                            <comment id="12891676" author="nirmal" created="Fri, 23 Jul 2010 18:06:48 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;Attached &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.5.diff.&lt;br/&gt;
I modified tests added by me in XplainStatisticsTest class,&lt;br/&gt;
such that they are compatible with Java-4.&lt;br/&gt;
I ran tests and all were passed.&lt;/p&gt;

&lt;p&gt;I highly appreciate if someone (since Bryan will not be available)&lt;br/&gt;
can apply this patch and confirm that the tests ran successfully.&lt;/p&gt;

&lt;p&gt;Thank you very much!&lt;/p&gt;</comment>
                            <comment id="12892597" author="bryanpendleton" created="Tue, 27 Jul 2010 02:26:01 +0100"  >&lt;p&gt;With the latest patch, I am able to build successfully with my normal build environment.&lt;/p&gt;

&lt;p&gt;When I run the XplainStatisticsTest with xalan.jar in my classpath, it appears to&lt;br/&gt;
run the XML-variations of the tests.&lt;/p&gt;

&lt;p&gt;And when I run the test without xalan.jar in my classpath, it appears to skip the&lt;br/&gt;
XML-variations of the tests, but runs the base tests successfully.&lt;/p&gt;

&lt;p&gt;So, at least in my environment, the latest patch appears to have resolved the build problems!&lt;/p&gt;</comment>
                            <comment id="12892622" author="nirmal" created="Tue, 27 Jul 2010 04:03:58 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Nice to hear that !! These days I&apos;m into developing more advanced XSL style sheets using CSS and JS. I&apos;ll update the JIRA soon, with my findings!&lt;/p&gt;</comment>
                            <comment id="12893253" author="nirmal" created="Wed, 28 Jul 2010 18:07:31 +0100"  >&lt;p&gt;Attaching a patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.6.diff.&lt;/p&gt;

&lt;p&gt;This patch provides the tool, the functionality of&lt;br/&gt;
using advanced XSL style sheets which have used&lt;br/&gt;
javascript.&lt;/p&gt;

&lt;p&gt;To run the tool in advanced mode, you have to invoke the&lt;br/&gt;
tool as following example:&lt;/p&gt;

&lt;p&gt;java org.apache.derby.tools.PlanExporter jdbc:derby:test1 me mine&lt;br/&gt;
 MYSCHEMA 9ac8804c-0129-cc31-ca9a-00000047f1e8 &lt;br/&gt;
 -adv -xml C:\derby\advance.xml -xsl advancedViewXSL.xsl&lt;/p&gt;

&lt;p&gt;Note: since the XML will be created in C:\derby folder, you must have&lt;br/&gt;
your advancedViewXSL.xsl style sheet also in that folder.&lt;/p&gt;

&lt;p&gt;or you can give the relative path to the style sheet.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12893261" author="nirmal" created="Wed, 28 Jul 2010 18:18:01 +0100"  >&lt;p&gt;Attaching screen shots advancedXSL-1,2,3 to show the much advanced XSL features.&lt;/p&gt;</comment>
                            <comment id="12893263" author="nirmal" created="Wed, 28 Jul 2010 18:21:00 +0100"  >&lt;p&gt;Attaching a bit advanced XSL, developed using javascript&lt;br/&gt;
as the scripting language.&lt;/p&gt;</comment>
                            <comment id="12894299" author="nirmal" created="Sat, 31 Jul 2010 17:16:54 +0100"  >&lt;p&gt;AdavancedXSL-mouseover: screen shot shows details of one node, when I moved the mouse pointer over that node.&lt;/p&gt;</comment>
                            <comment id="12894300" author="nirmal" created="Sat, 31 Jul 2010 17:28:40 +0100"  >&lt;p&gt;I&apos;m attaching a new xsl style sheet: advancedViewXSL2.xsl, &lt;br/&gt;
slightly different from advancedViewXSL. This shows the &lt;br/&gt;
details of a particular node only when the mouse pointer is over&lt;br/&gt;
that node, when a user taking it out, details will be hidden.&lt;/p&gt;

&lt;p&gt;Any views do you like to have? &lt;/p&gt;

&lt;p&gt;PS: We can&apos;t use images, since users also needed them in&lt;br/&gt;
their machines&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12895509" author="nirmal" created="Thu, 5 Aug 2010 02:45:48 +0100"  >&lt;p&gt;Hi  All,&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.7.diff shows the changes I&apos;ve done after embedding&lt;br/&gt;
XSL style sheets I&apos;ve created to derbytools.jar.&lt;/p&gt;

&lt;p&gt;I think the new patch is ready for commit.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12895697" author="bryanpendleton" created="Thu, 5 Aug 2010 15:30:47 +0100"  >&lt;p&gt;I&apos;ve committed the 9.7 patch to the Derby trunk as revision 982637.&lt;/p&gt;

&lt;p&gt;I haven&apos;t marked this issue resolved just yet, as I thought we would leave it&lt;br/&gt;
open for a short while in case any issues arise during early use of the tool.&lt;/p&gt;

&lt;p&gt;Thanks for the contribution of this tool to the Derby community, Nirmal!&lt;/p&gt;

&lt;p&gt;I am hopeful that this tool provides an important basis for continued &lt;br/&gt;
improvement in the query visualization tools for Derby.&lt;/p&gt;</comment>
                            <comment id="12895705" author="nirmal" created="Thu, 5 Aug 2010 15:59:30 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for committing this! Yeah, I think we should keep this issue open for sometime &lt;br/&gt;
till we get some feedback on how it works. &lt;/p&gt;

&lt;p&gt;Thanks Bryan for all the help you provided, and for your wonderful thought about this kind&lt;br/&gt;
of a tool.&lt;/p&gt;

&lt;p&gt;PS: Bryan don&apos;t you think that we should commit the documentation patch too?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12895896" author="bryanpendleton" created="Fri, 6 Aug 2010 01:43:24 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;The automated Hudson build appears to be having problems with this patch.&lt;/p&gt;

&lt;p&gt;If you look at this screen:&lt;br/&gt;
&lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Derby-trunk/467/changes&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Derby-trunk/467/changes&lt;/a&gt;&lt;br/&gt;
and then click on &quot;Console output&quot;, you should be able to see the error&lt;br/&gt;
messages from the build.&lt;/p&gt;

&lt;p&gt;Can you have a look and see if you can figure out what is wrong with the build?&lt;/p&gt;</comment>
                            <comment id="12895904" author="nirmal" created="Fri, 6 Aug 2010 02:03:12 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I think it&apos;s something to do with those three style sheets we&apos;ve embedded.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; javadoc: error - Illegal package name: &quot;/home/hudson/hudson-slave/workspace/Derby-trunk/trunk/java/tools/org/apache/derby/impl/tools/planexporter/resources/advancedViewXSL.xsl&quot;&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; javadoc: error - Illegal package name: &quot;/home/hudson/hudson-slave/workspace/Derby-trunk/trunk/java/tools/org/apache/derby/impl/tools/planexporter/resources/advancedViewXSL2.xsl&quot;&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; javadoc: error - Illegal package name: &quot;/home/hudson/hudson-slave/workspace/Derby-trunk/trunk/java/tools/org/apache/derby/impl/tools/planexporter/resources/vanilla_html.xsl&quot;&lt;/p&gt;

&lt;p&gt;Is there a way to skip those style sheets?&lt;/p&gt;</comment>
                            <comment id="12895908" author="nirmal" created="Fri, 6 Aug 2010 02:18:51 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;If the earlier errors were not the reason, is it something to do with this warning:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /home/hudson/hudson-slave/workspace/Derby-trunk/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java:621: warning - @param argument &quot;s:&quot; is not a parameter name.&lt;/p&gt;

&lt;p&gt;I have accidentally put a &quot;colon&quot; there after s.&lt;/p&gt;

&lt;p&gt;The final log at the end says following:&lt;/p&gt;

&lt;p&gt;javadoc:&lt;/p&gt;

&lt;p&gt;BUILD SUCCESSFUL&lt;br/&gt;
Total time: 2 minutes 11 seconds&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNINGS&amp;#93;&lt;/span&gt; Parsing warnings in console log...&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNINGS&amp;#93;&lt;/span&gt; Using set difference to compute new warnings&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNINGS&amp;#93;&lt;/span&gt; Found 1 new annotations (0 high, 1 normal, 0 low)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNINGS&amp;#93;&lt;/span&gt; Found 1  annotations (0 high, 1 normal, 0 low)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNINGS&amp;#93;&lt;/span&gt; Setting build status to FAILURE since total number of annotations exceeds the threshold 0&lt;br/&gt;
Sending e-mails to: derby-dev@db.apache.org bpendleton@apache.org&lt;br/&gt;
Finished: FAILURE&lt;/p&gt;

&lt;p&gt;I&apos;m not quite sure what is this annotation refers to? You have any idea?&lt;/p&gt;</comment>
                            <comment id="12895909" author="bryanpendleton" created="Fri, 6 Aug 2010 02:20:12 +0100"  >&lt;p&gt;I&apos;m not totally sure, but it looks like the Ant &amp;lt;javadoc&amp;gt; task can take some&lt;br/&gt;
nested elements that tell it what to process.&lt;/p&gt;

&lt;p&gt;Maybe try something like:&lt;/p&gt;


&lt;p&gt;    &amp;lt;packageset dir=&quot;...&quot; defaultexcludes=&quot;yes&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;exclude name=&quot;org/apache/derby/impl/tools/planexporter/resources/**&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/packageset&amp;gt;&lt;/p&gt;

&lt;p&gt;I&apos;m not totally sure whether this is right; we probably need an &amp;lt;include&amp;gt;&lt;br/&gt;
element inside the &amp;lt;packageset&amp;gt; to specify &quot;org/apache/derby/**&quot;, and&lt;br/&gt;
I&apos;m not sure what should be the &quot;dir=&quot; part of &amp;lt;packageset&amp;gt;&lt;/p&gt;

&lt;p&gt;Maybe you can try some things and see if you can get the &quot;testingdocs&quot;&lt;br/&gt;
target to work? The target is in the top-level build.xml, I think.&lt;/p&gt;
</comment>
                            <comment id="12895910" author="myrna" created="Fri, 6 Aug 2010 02:22:15 +0100"  >&lt;p&gt;Perhaps add something like &lt;b&gt;planexporter&lt;/b&gt;/*.xsl to tools/javadoc/derbydocs_exclusions.ant?&lt;br/&gt;
Or perhaps you can just do *&lt;b&gt;/&lt;/b&gt;.xsl (only other .xsl is tools/ant/xsl/sysinfo_junitreport.xsl).&lt;br/&gt;
disclaimer: I&apos;m not certain of the syntax nor have I done any testing. &lt;/p&gt;</comment>
                            <comment id="12895925" author="nirmal" created="Fri, 6 Aug 2010 03:19:58 +0100"  >&lt;p&gt;Hi, &lt;br/&gt;
Myrna, Thanks for your suggestion, I think the way you told is appropriate&lt;br/&gt;
in this case and worked fine.&lt;/p&gt;

&lt;p&gt;Bryan, I&apos;ve overwritten the patch 9.7 and attached it, I think this should solve &lt;br/&gt;
the Hudson build failure, let&apos;s see.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12895926" author="bryanpendleton" created="Fri, 6 Aug 2010 03:29:45 +0100"  >&lt;p&gt;Thanks Nirmal! I&apos;m backed up with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4757&quot; title=&quot;(Client) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4757&quot;&gt;&lt;del&gt;DERBY-4757&lt;/del&gt;&lt;/a&gt; right now, then I&apos;ll take a look.&lt;/p&gt;</comment>
                            <comment id="12895929" author="bryanpendleton" created="Fri, 6 Aug 2010 03:41:03 +0100"  >&lt;p&gt;Nirmal, can you provide a patch that is relative to the trunk, and just includes &lt;br/&gt;
the javadoc fixes? The other changes in the 9.7 patch are already committed to the trunk.&lt;/p&gt;</comment>
                            <comment id="12895930" author="nirmal" created="Fri, 6 Aug 2010 03:47:50 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Attached javadoc fix.&lt;/p&gt;</comment>
                            <comment id="12895932" author="bryanpendleton" created="Fri, 6 Aug 2010 04:03:31 +0100"  >&lt;p&gt;Committed the javadoc fixes to the trunk as revision 982856.&lt;/p&gt;</comment>
                            <comment id="12895936" author="nirmal" created="Fri, 6 Aug 2010 04:08:46 +0100"  >&lt;p&gt;Thank Bryan, for  committing I am hoping that Hudson build will pass now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12896025" author="nirmal" created="Fri, 6 Aug 2010 13:30:16 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;It seems that Hudson build is back to normal &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Derby-trunk/468/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Derby-trunk/468/console&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12896661" author="kmarsden" created="Mon, 9 Aug 2010 19:57:51 +0100"  >&lt;p&gt;I am interested in giving this a try, but have not been following along during development. What is a good documentation entry point?&lt;/p&gt;</comment>
                            <comment id="12896668" author="chaase3" created="Mon, 9 Aug 2010 20:11:57 +0100"  >&lt;p&gt;Kathey, you could try applying the latest patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4758&quot; title=&quot;Adding documentation about the PlanExporter Tool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4758&quot;&gt;&lt;del&gt;DERBY-4758&lt;/del&gt;&lt;/a&gt; &amp;#8211; you&apos;ll be sure to notice if there&apos;s missing or unclear information, and your feedback would be very valuable.&lt;/p&gt;</comment>
                            <comment id="12896873" author="kristwaa" created="Tue, 10 Aug 2010 13:59:13 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;As part of some other work, I plan to take the PlanExporter for a spin.&lt;br/&gt;
I think such a tool has the potential to significantly improve the user friendliness&lt;br/&gt;
of Derby.&lt;/p&gt;

&lt;p&gt;First, I have not followed development closely, and since I&apos;m short on time at&lt;br/&gt;
the moment, I don&apos;t have the time to investigate too much. However, I&apos;m posting&lt;br/&gt;
my comments in case they can be useful.&lt;br/&gt;
Below are some comments originating from looking at the code. Some of them are&lt;br/&gt;
nits, use your own judgement.&lt;/p&gt;

&lt;p&gt; a) The classes have no ASF license header.&lt;br/&gt;
    I will address this under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4764&quot; title=&quot;Files with missing ASF license headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4764&quot;&gt;&lt;del&gt;DERBY-4764&lt;/del&gt;&lt;/a&gt; together with some other files.&lt;/p&gt;

&lt;p&gt;&amp;#8212; AccessDatabase&lt;br/&gt;
 b) Would it be better to use dbUrl.indexOf(&quot;://&quot;) to reduce the chance of&lt;br/&gt;
    mistakenly using the client driver instead of the embedded driver?&lt;br/&gt;
    Getting // can easily happen during scripting, for instance.&lt;br/&gt;
 c) The code is suspectible to some forms of SQL injection attacks.&lt;br/&gt;
    A quick look doesn&apos;t reveal anything severe, but in general it is wise to&lt;br/&gt;
    use either prepared statements or to validate the user input (i.e.,&lt;br/&gt;
    verify through meta data calls that the specified schema is indeed an&lt;br/&gt;
    existing schema.&lt;br/&gt;
 d) @author tags aren&apos;t used in the Derby code base&lt;br/&gt;
 e) Seems to be the private final variables could be static as well (also,&lt;br/&gt;
    many people prefer constants to be in upper case).&lt;br/&gt;
 f) Is it correct to shut down the database?&lt;br/&gt;
    I&apos;d say not, and would be more comfortable either simply not doing it or&lt;br/&gt;
    have an option for it.&lt;/p&gt;

&lt;p&gt;&amp;#8212; PlanExporter&lt;br/&gt;
 g) deleteFile is a potential security hole, allowing users to&lt;br/&gt;
    delete Derby files at will (I don&apos;t know which permissions the tool is&lt;br/&gt;
    running with by default). At the very least it should be made private,&lt;br/&gt;
    since it is used only within that single class.&lt;/p&gt;

&lt;p&gt;&amp;#8212; TreeNode&lt;br/&gt;
 h) Class should be package-private.&lt;br/&gt;
 i) All Java objects implicitly inherit java.lang.Object. Is there a reason why&lt;br/&gt;
    it has been made explicit?&lt;br/&gt;
 j) Use of new String() is discouraged.&lt;br/&gt;
 k) Is thre a reason why depth is a String?&lt;/p&gt;

&lt;p&gt;&amp;#8212; CreateHTMLF l) Missing class JavaDoc (short description of what it does).&lt;br/&gt;
 m) For convenience, it may be better to convert the HTML file name to upper-&lt;br/&gt;
    case and do endsWith(&quot;.HTML&quot;). That way, you support mixed case as well.&lt;/p&gt;

&lt;p&gt;&amp;#8212; CreateXMLFile&lt;br/&gt;
 n) You may want to unwrap the PrivilegedActionException, casting it to&lt;br/&gt;
    IOException (since that&apos;s the only checked exception that can occur).&lt;br/&gt;
    It makes the API slightly cleaner.&lt;br/&gt;
 o) I&apos;m not sure what the community&apos;s take on the contents of the variable&lt;br/&gt;
    &quot;comment&quot; is.&lt;br/&gt;
 p) Has using a specific character encoding for the output file been discussed?&lt;br/&gt;
    String.getBytes() uses the default encoding on the platform.&lt;/p&gt;

&lt;p&gt;I&apos;m going to take the tool for a spin as well, but decided to post my comments&lt;br/&gt;
so far right away. As you mentioned, the number of comments under this issue is&lt;br/&gt;
getting very large, it might be better to track follow-up work in a separate&lt;br/&gt;
Jira.&lt;/p&gt;

&lt;p&gt;I&apos;m excited to see if I can understand why one of the Derby tests fails with a&lt;br/&gt;
patch of mine by looking at the output of the PlanExporter. I just have to&lt;br/&gt;
hook it into the test itself, and then there&apos;s the problem that the Derby&lt;br/&gt;
JUnit framework (or rather SupportFilesSetup) deletes anything written to the&lt;br/&gt;
support files directories...&lt;/p&gt;


&lt;p&gt;Thanks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12896914" author="nirmal" created="Tue, 10 Aug 2010 16:57:58 +0100"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;Thanks for looking into the code and give me your feedback, I find&lt;br/&gt;
them very useful, I&apos;ll attach a patch soon.&lt;br/&gt;
Please see my comments below.&lt;/p&gt;

&lt;p&gt;a) Pardon me for not adding the license header. Thanks for &lt;br/&gt;
looking into that.&lt;/p&gt;

&lt;p&gt;&amp;#8212; AccessDatabase &lt;br/&gt;
b) If it is the case I&apos;ll change to dbUrl.indexOf(&quot;://&quot;).&lt;br/&gt;
c) It&apos;s better if you can help me a bit on this, I&apos;m not that familiar &lt;br/&gt;
of using meta data calls. &lt;br/&gt;
d) Whoops, I forgot to removed those automatic generated @author&lt;br/&gt;
tags.&lt;br/&gt;
e) I&apos;ll modify this.&lt;br/&gt;
f) Yep, it&apos;s better not to shutdown, instead we can only close the connection.&lt;/p&gt;

&lt;p&gt;&amp;#8212; PlanExporter &lt;br/&gt;
g) I&apos;ll make it to private. Tool runs with the permissions given to derbytools.jar.&lt;/p&gt;

&lt;p&gt;&amp;#8212; TreeNode &lt;br/&gt;
h) I&apos;ll make it to package-private.&lt;br/&gt;
i) I&apos;ll make it implicit. No need to explicitly inherit.&lt;br/&gt;
j) Removed it.&lt;br/&gt;
k) I might had a reason earlier, but you&apos;re right no need of a String now.&lt;/p&gt;

&lt;p&gt;&amp;#8212; CreateHTMLFile&lt;br/&gt;
l) I&apos;ll add this.&lt;br/&gt;
m) thanks for the idea.&lt;/p&gt;

&lt;p&gt;&amp;#8212; CreateXMLFile &lt;br/&gt;
n) Actually I can&apos;t think of a way of doing that. Can you please explain a bit.&lt;br/&gt;
o) I think I should change it to &quot;Apache Derby Query Explainer (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;)&quot;. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
p) I&apos;m afraid not, will using the default be a problem?&lt;/p&gt;

&lt;p&gt;Thank you very much!&lt;/p&gt;</comment>
                            <comment id="12896920" author="nirmal" created="Tue, 10 Aug 2010 17:04:15 +0100"  >&lt;p&gt;Hi Kathey &amp;amp; Rick,&lt;/p&gt;

&lt;p&gt;Thanks for looking into the tool, hope to get your &lt;br/&gt;
feedback.&lt;/p&gt;
</comment>
                            <comment id="12896946" author="rhillegas" created="Tue, 10 Aug 2010 17:57:01 +0100"  >&lt;p&gt;Thanks for this excellent contribution to Derby, Nirmal. Here are a couple initial comments:&lt;/p&gt;

&lt;p&gt;o The PlanExporter tool takes a connection URL argument as well as special username and password arguments. In contrast, our other tools only take a connection URL argument (see the api for dblook and SignatureChecker). For those tools, the username and password are part of the connection URL. Separating out the username and password arguments raises the awkward possibility that they may conflict with the corresponding attributes in the connection URL. In addition, for embedded databases which don&apos;t need authentication, it seems awkward to have to put dummy username/password arguments on the command line. In order to avoid these awkwardnesses and to promote a common api across our tools, I would rather see PlanExporter behave like dblook and SignatureChecker.&lt;/p&gt;

&lt;p&gt;o It would be nice to be able to run the tool without having to specify a statement id. In this mode, I could imagine that plans would be produced for all tracked statements. Our other tools do not require the user to query the system tables before use and I think it would be good to reproduce that friendly experience.&lt;/p&gt;

&lt;p&gt;o The xml output contains a header comment, giving credit to the author. In general, Derby follows the Apache way by not singling out individuals for special credit either in the code or in production artifacts. People who want to understand the contribution history of a component should be able to recover that information from JIRA. The header comment should be removed.&lt;/p&gt;</comment>
                            <comment id="12896982" author="nirmal" created="Tue, 10 Aug 2010 18:47:15 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;Thanks for your feedback.&lt;/p&gt;

&lt;p&gt;1) I&apos;ll modify the arguments, in my next patch.&lt;/p&gt;

&lt;p&gt;2) Don&apos;t you think that a user will dislike when plans for all the tracked statements get generated each and every time he executed the tool? It may take considerable amount of time given that there are lots of tracked queries. Also we may get into trouble when naming the generated files. What do you think?&lt;/p&gt;

&lt;p&gt;3) Pardon me about the comment, as I said my above reply to Kristian I&apos;ll modify it to &quot;Apache Derby Query Explainer (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;)&quot; in my next patch.&lt;/p&gt;

&lt;p&gt;PS: I suspect that the tool does not need Xalan.jar in the CLASSPATH, both to pass tests and generate query plans. Instead it uses the inbuilt Xalan classes in java. Can you please verify this, if you got some time?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12896991" author="rhillegas" created="Tue, 10 Aug 2010 19:26:05 +0100"  >&lt;p&gt;Thanks for the quick response, Nirmal. Concerning (2): The XPLAIN machinery fits a common pattern of log monitoring: you start recording, you run some experiments, you end recording, you analyze the results. In this pattern, it is common to want to analyze all of the experiments which were recorded. I&apos;m not following your question about naming the generated files. I was hoping that all of the recorded plans would go into a single output file. Thanks.&lt;/p&gt;</comment>
                            <comment id="12897013" author="rhillegas" created="Tue, 10 Aug 2010 20:28:47 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I have run PlanExporter successfully with just derby.jar and derbytools.jar in the classpath. The query being analyzed was a simple one: select * from countries where country like &apos;B%&apos;&lt;/p&gt;</comment>
                            <comment id="12897017" author="kristwaa" created="Tue, 10 Aug 2010 20:39:02 +0100"  >&lt;p&gt;I&apos;ll answer Nirmal&apos;s replies to my comments in a separate post (after having looked into them), just want to comment on what Rick said.&lt;/p&gt;

&lt;p&gt;Rick, you&apos;re hoping all plans go into one file. I see this as both an advantage and a disadvantage. With the current state of the tool, I think it would be confusing to have like 5 - 40 queries in one file.&lt;/p&gt;

&lt;p&gt;So, here are some options I see (feel free to add your own!):&lt;br/&gt;
 a) Everything in one file, use horizontal separators and maybe add some navigational aids (i.e. table of contents, anchor at the top)&lt;br/&gt;
 b) Keep each query in its own file.&lt;br/&gt;
 c)  As above, but additionally create a separate file for navigation with (relative) links to the individual plans.&lt;br/&gt;
 d) Add a(nother) tool to split up the single large output file.&lt;/p&gt;

&lt;p&gt;Now, personally I would like the only requirement for the tool to be a web browser (graphical or console based) - continuing along the lines above may move us in the direction of a standalone tool with it&apos;s own GUI...&lt;/p&gt;

&lt;p&gt;Another issue with selecting all available plans is security (leaking information). How is access control currently handled by the XPLAIN functionality?&lt;br/&gt;
For instance, will internal procedure queries &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; be traced as well? Can access to those plans be limited? Does it make sense to do so?&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; I.e., if the user does &apos;call myBusinessLogicProcedure&apos;, will queries issued from inside myBusinessLogicProcedure be traced and accessible to the user issuing the call? This isn&apos;t directly related to the PlanExporter as such, more the XPLAIN functionality I guess.&lt;/p&gt;</comment>
                            <comment id="12897111" author="nirmal" created="Wed, 11 Aug 2010 02:55:37 +0100"  >&lt;p&gt;Thanks Rick for the verification I might need to submit a documentation patch removing the&lt;br/&gt;
requirement of xalan.&lt;/p&gt;
</comment>
                            <comment id="12897256" author="rhillegas" created="Wed, 11 Aug 2010 14:16:39 +0100"  >&lt;p&gt;It would be great if the tool were flexible enough to handle a couple usage patterns. For instance:&lt;/p&gt;

&lt;p&gt;a) You get one plan in your output file if you specify a statement id.&lt;/p&gt;

&lt;p&gt;b) You get all plans in your output file if you ask for them.&lt;/p&gt;</comment>
                            <comment id="12897319" author="rhillegas" created="Wed, 11 Aug 2010 16:56:20 +0100"  >&lt;p&gt;Linking to new issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4768&quot; title=&quot;Create template style sheets for PlanExporter tool and copy those templates into demo/templates as part of building a release&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4768&quot;&gt;DERBY-4768&lt;/a&gt;. We should publish template style sheets. The user documentation for PlanExporter should explain where the templates live (demo/templates).&lt;/p&gt;</comment>
                            <comment id="12897364" author="rhillegas" created="Wed, 11 Aug 2010 19:15:59 +0100"  >&lt;p&gt;Thanks again for this great tool, Nirmal. I have some more comments.&lt;/p&gt;

&lt;p&gt;I started experimenting with customized style sheets. I had to poke around the code to find the style sheets. I have logged &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4768&quot; title=&quot;Create template style sheets for PlanExporter tool and copy those templates into demo/templates as part of building a release&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4768&quot;&gt;DERBY-4768&lt;/a&gt; to encourage us to publish the template style sheets. Once I found the style sheets, it appeared to me that PlanExporter only presents a subset of the information in the XPLAIN tables. I would like to see more information:&lt;/p&gt;

&lt;p&gt;a) I think the xml output should include all of the relevant fields/nodes represented in the XPLAIN tables. The xsl designer and other display tools can suppress and format the xml output as desired.&lt;/p&gt;

&lt;p&gt;b) The html output should be readable but it does not have to be complete. I would also appreciate seeing the following fields in the html output:&lt;/p&gt;

&lt;p&gt;i) SYSXPLAIN_STATEMENTS.STMT_ID&lt;br/&gt;
ii) SYSXPLAIN_STATEMENTS.XPLAIN_TIME&lt;/p&gt;


&lt;p&gt;A couple questions:&lt;/p&gt;

&lt;p&gt;1) Are there any style sheets for non-html output?&lt;/p&gt;

&lt;p&gt;2) Are the plus signs produced by the advanced style sheet supposed to allow you to expand and collapse elements? They don&apos;t work that way for me in Firefox, Chrome, or Safari.&lt;/p&gt;
</comment>
                            <comment id="12897401" author="rhillegas" created="Wed, 11 Aug 2010 20:19:49 +0100"  >&lt;p&gt;I would like to propose the following command line api for PlanExporter. Partly I am doing this because this api seems simpler to me. My other motivation is to verify that I am not missing any of the functionality provided by the tool. Thanks.&lt;/p&gt;

&lt;p&gt;java org.apache.derby.tools.PlanExporter dbURL schemaName outputFileName [ -xsl styleSheet ] [ -stmt statementID ]&lt;/p&gt;

&lt;p&gt;dbURL :== An url appropriate for connecting via DriverManager.getConnection()&lt;/p&gt;

&lt;p&gt;schemaName :== A case-sensitive schema name&lt;/p&gt;

&lt;p&gt;outputFileName :== Absolute or relative name of file to which output will be written&lt;/p&gt;

&lt;p&gt;styleSheet :== Absolute or relative path name to an xsl style sheet for transforming the output.&lt;/p&gt;

&lt;p&gt;statementID :== A 36 character statement id string from schemaName.SYSXPLAIN_STATEMENTS.STMT_ID&lt;/p&gt;

&lt;p&gt;If a stylesheet is specified, then PlanExporter will use that stylesheet to transform the output. Otherwise, no stylesheet will be applied. This means that, by default, raw xml output is produced. In order to get html output, you must specify a Derby-supplied html stylesheet or one of your own. Of course, you can also specify a stylesheet which does not produce html output.&lt;/p&gt;

&lt;p&gt;If a statement id is specified, then the output file will contain only that statement&apos;s plan. Otherwise, the output file will contain plans for all of the statements in schemaName.SYSXPLAIN_STATEMENTS.&lt;/p&gt;</comment>
                            <comment id="12897677" author="nirmal" created="Thu, 12 Aug 2010 11:26:29 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;This is for your comment on 11th at 2.15pm. &lt;/p&gt;

&lt;p&gt;I can add all the information in XPLAIN tables into the XML, but since it will involve lot of database queries including JOINS, I am not sure will it affect the performance of the tool. &lt;/p&gt;

&lt;p&gt;No I haven&apos;t developed any style-sheet for non-html output.&lt;/p&gt;

&lt;p&gt;&amp;gt;Are the plus signs produced by the advanced style sheet supposed to allow you to expand and collapse elements? They don&apos;t work that way for me in Firefox, Chrome, or &amp;gt;Safari.&lt;/p&gt;

&lt;p&gt;Yeah, those + signs intended to allow collapsing and expanding behavior, but you have to use advance option (-adv) of the tool, if you want to use that style sheet (i.e. advancedViewXSL.xsl or advancedViewXSL2.xsl) and in this case you will not get a html output instead you can only get the XML output. Opening that XML in your browser will provide you the JS features (i.e. browser will do all the transformation). We had to do like this when we&apos;re using JS in our style sheet, since Xalan is not supporting transformation of style sheets with JS to HTML.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12897695" author="nirmal" created="Thu, 12 Aug 2010 12:06:29 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I have few comments regarding your latest comment.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If the using style sheet is advanced (i.e. contains JS), currently tool follows a different way of transforming as I&apos;ve described in previous comment. In this mode it can only provides a XML which is transformable through a web browser, given that the provided style sheet is present in the relative location to XML.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Current behavior of the tool is if a user provided an incorrect style sheet path, the tool will automatically use the &quot;vanilla_html.xsl&quot; style sheet which is attached with derbytools.jar (this is not valid for advance feature).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The &quot;outputFileName&quot; you refers to should be without an extension (i.e. xml or html), I think you meant the same thing.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;These are the only comments that I have for now, regarding the API you have suggested. &lt;br/&gt;
I think it&apos;s more simpler, thanks for suggesting.&lt;/p&gt;



</comment>
                            <comment id="12897751" author="nirmal" created="Thu, 12 Aug 2010 14:53:40 +0100"  >&lt;p&gt;Rick, do you really like to see STMT_ID in the HTML? Since the query is displayed I feel like it&apos;s not useful.&lt;br/&gt;
If that addition is useful where you like it to be displayed? Is it good to be in the header section?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12897770" author="rhillegas" created="Thu, 12 Aug 2010 15:32:48 +0100"  >&lt;p&gt;Hi Nirmal. The reason that I want to see a statement id is to cover the case when the output contains plans for multiple queries. In this scenario, you might want to run the same query more than once, changing the environment inbetween. I think it would be useful to have some way of matching the plans to the XPLAIN tables in case you want to drill-down. I think that the statement id could appear at the top along with the statement text. Thanks.&lt;/p&gt;</comment>
                            <comment id="12897777" author="rhillegas" created="Thu, 12 Aug 2010 15:44:48 +0100"  >&lt;p&gt;Hi Nirmal. Thanks for the explanation of the Java script usage. By the way, in my environment I notice that when I use the &lt;del&gt;adv switch, the output contains a pointer to the original location of the stylesheet&lt;/del&gt;-so I don&apos;t have to copy the style sheet into my current directory. I think that&apos;s great.&lt;/p&gt;

&lt;p&gt;If I am understanding the tool correctly, it seems to me that it operates in two modes (depending on the switches you specify):&lt;/p&gt;

&lt;p&gt;o TransformMode &amp;#8211; In this mode, the tool transforms the output, using the specified stylesheet. The output does not contain a pointer to a stylesheet.&lt;/p&gt;

&lt;p&gt;o PassthroughMode &amp;#8211; In this mode, the tool does NOT transform the output. Instead, the tool outputs the raw xml, prefixing it with a pointer to the desired stylesheet. In this mode, the transformation happens inside the browser.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;
</comment>
                            <comment id="12897817" author="nirmal" created="Thu, 12 Aug 2010 17:20:14 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;Thanks for the replies, I&apos;ll add the STMT_ID.&lt;/p&gt;

&lt;p&gt;Yeah, you got it right! I think we should come to a conclusion about the API of the tool and it may be handle in a different jira linked to this, what do you think?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12897830" author="rhillegas" created="Thu, 12 Aug 2010 17:45:25 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I think your plan makes sense: agree on an api and then make the changes in a separate jira. Thanks.&lt;/p&gt;</comment>
                            <comment id="12897835" author="nirmal" created="Thu, 12 Aug 2010 17:54:02 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a new patch which is included some of the modifications that are suggested by Kristian and Rick.&lt;br/&gt;
PS: This is not intended to provide the support of using the tool without giving a STMT_ID. I think I should start to work&lt;br/&gt;
on it in a separate JIRA after the community agrees to a suitable command line API to the PlanExporter tool.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12897864" author="kristwaa" created="Thu, 12 Aug 2010 19:07:40 +0100"  >&lt;p&gt;I decided to commit the latest patch (9.8), because I need to make some changes that would have conflicted with that patch.&lt;br/&gt;
Committed to trunk with revision 984881.&lt;/p&gt;

&lt;p&gt;Note that I had to modify the patch (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.8-modified.diff), as it was not accepted by (g)patch. I removed one JavaDoc change from CreateHTMLFile, but manually made the other modifications. Parts of the JavaDoc comment seemed to be missing.&lt;br/&gt;
Nirmal, please check the file to make sure I didn&apos;t break anything, and include the JavaDoc change in the next patch if appropriate.&lt;/p&gt;

&lt;p&gt;I&apos;ll post some other comments regarding the code a bit later, first I want to work on the potentially conflicting changes (shouldn&apos;t take long).&lt;/p&gt;</comment>
                            <comment id="12897889" author="kristwaa" created="Thu, 12 Aug 2010 19:39:23 +0100"  >&lt;p&gt;Attached patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4587&quot; title=&quot;Add tools for improved analysis and understanding of query plans and execution statistics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4587&quot;&gt;&lt;del&gt;DERBY-4587&lt;/del&gt;&lt;/a&gt;-tool-9.9-formatting.diff.&lt;br/&gt;
Committed to trunk with revision 984902.&lt;/p&gt;

&lt;p&gt;When preparing to add ASF license headers, I realized it would be appropriate to fix some formatting issues first. I&apos;m sorry for doing this so quickly, Nirmal, it may cause some merge trouble if you have code changes in your sandbox.&lt;/p&gt;

&lt;p&gt;Here&apos;s what I did:&lt;br/&gt;
 o moved class JavaDoc to after the package and import statements (directly before the class statement). The first content of the files will be the ASF license header (for more details, see &lt;a href=&quot;http://www.apache.org/legal/src-headers.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/legal/src-headers.html&lt;/a&gt;).&lt;br/&gt;
 o replaced all tab characters with spaces. Spaces are preferred for indentation in the Derby code base. Since the files are very fresh, and some of them mixed tabs and spaces (both within the files and on individual lines), I decided to proceed with the conversion sooner than later. You may have to adjust your editor settings to avoid tabs in future patches (just ask on the dev list if unsure).&lt;br/&gt;
 o removed some trailing whitespace&lt;/p&gt;

&lt;p&gt;Again, sorry for doing this so abruptly (and without involving you more).&lt;/p&gt;

&lt;p&gt;Next up is the addition of the Apache license headers.&lt;/p&gt;</comment>
                            <comment id="12897894" author="kristwaa" created="Thu, 12 Aug 2010 19:56:13 +0100"  >&lt;p&gt;Also discovered that the files were committed without the svn:eol-style property set, which should be set to native.&lt;br/&gt;
Only committers have to worry about this (if you want to know more, search for svn:eol-style on &lt;a href=&quot;http://svnbook.red-bean.com/en/1.1/ch07s02.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svnbook.red-bean.com/en/1.1/ch07s02.html&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 984912&lt;/p&gt;</comment>
                            <comment id="12897925" author="kristwaa" created="Thu, 12 Aug 2010 20:52:59 +0100"  >&lt;p&gt;Nirmal, some answers to your questions about my comments:&lt;/p&gt;

&lt;p&gt;&amp;#8212; AccessDatabase &lt;br/&gt;
c) Well, the easiest is probably to use PreparedStatement and ps.setString(x, s).&lt;br/&gt;
    By specifying a system table and a comment as the schema, say &quot;sys.systables --&quot;, or saying &quot;&amp;lt;stmt_id&amp;gt; and 1 = 1&quot; in a where clause, one can make the tool query tables it isn&apos;t supposed to access. Nothing severe in this case, but it&apos;s good to be aware of these issues in general. Luckily you cannot specify multiple SQL statements in (most?) JDBC calls, because then you could easily add delete or update statements as well.&lt;br/&gt;
    You could also use Connection.getMetaData(), and then use one of the DatabaseMetaData.getSchemas() methods to verify that the schema actually exists.&lt;/p&gt;

&lt;p&gt;&amp;#8212; CreateXMLFile&lt;br/&gt;
n) Since you know only an IOException can be thrown within the PrivilegedExceptionAction, you can add a try - catch block where you unwrap the IOException, something like this:&lt;br/&gt;
    try &lt;/p&gt;
{
        // PrivilegedActionException wrapping IOException thrown here somewhere
    }
&lt;p&gt; catch (PrivilegedActionException pae) &lt;/p&gt;
{
        throw (IOException)pae.getCause(); // or, according to the old API, pae.getException().
    }

&lt;p&gt;    You can then remove PrivilegedActionException from the throws clause of the method.&lt;/p&gt;

&lt;p&gt;p) I&apos;m not quite sure. I don&apos;t have the cycles to follow up on this one right now, so it would be nice if someone else can give you more feedback on this. If you don&apos;t hear anything, it&apos;s probably not a big issue.&lt;/p&gt;

&lt;p&gt;I also noticed that CreateHTMLFile only contains a method that could have been static. If you want to keep the class, you should make the no-arg constructor private and the getHTML-method static. Alternatively, you could move the method into CreateXMLFile or somewhere else. Your call &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;p&gt;Regards,&lt;/p&gt;</comment>
                            <comment id="12898043" author="nirmal" created="Fri, 13 Aug 2010 03:08:12 +0100"  >&lt;p&gt;Kristian thanks for doing relevant changes and committing the patches.&lt;/p&gt;

&lt;p&gt;After updating my environment with the latest patches, I found there&apos;s an error when transforming to HTML. This has caused after adding the license header in XSL style sheets. In XSL a comment should be added inside &amp;lt;!-- &amp;amp; --&amp;gt;.  This patch correct that error + a small variable change in CreateHTML.java.&lt;/p&gt;

&lt;p&gt;I highly appreciate if someone can commit this quickly!&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12898046" author="bryanpendleton" created="Fri, 13 Aug 2010 03:25:16 +0100"  >&lt;p&gt;Your latest patch looks good to me; I will commit it.&lt;/p&gt;

&lt;p&gt;If you haven&apos;t already done so, I think you could file separate sub-task Jira&lt;br/&gt;
entries for the following ideas that were brought up during the reviews:&lt;br/&gt;
1) Investigate character set and encoding issues.&lt;br/&gt;
2) Investigate security and PrivilegedActionException handling&lt;br/&gt;
3) Redesign the tool API for simplicity&lt;br/&gt;
4) Allow exporting of multiple query plans in a single operation&lt;br/&gt;
These issues seem sufficiently complicated that they would be easier&lt;br/&gt;
to track in separate Jira entries.&lt;/p&gt;</comment>
                            <comment id="12898049" author="bryanpendleton" created="Fri, 13 Aug 2010 03:36:11 +0100"  >&lt;p&gt;Committed patch 9.11 to the trunk as revision 985075.&lt;/p&gt;</comment>
                            <comment id="12898057" author="nirmal" created="Fri, 13 Aug 2010 04:06:20 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for committing. I have another patch which is addressed Kristian&apos;s comments on c) &amp;amp; n).&lt;br/&gt;
So, now onwards I think we should work on separate jiras as you mentioned, I will create sub tasks for 1,3, &amp;amp; 4. I think with the help of Kristian the latest patch solved the 2.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12898096" author="kristwaa" created="Fri, 13 Aug 2010 07:06:17 +0100"  >&lt;p&gt;Thanks for catching and addressing the problem with the headers in the XSL files, Nirmal.&lt;br/&gt;
I completely forgot about that...&lt;/p&gt;

&lt;p&gt;It&apos;s been a while since I worked with XSL/XML, I don&apos;t remember if there are rules about which element must be first in such a file - that is, is it okay to keep the license header where it is, or should it be moved to after some mandatory first tag?&lt;/p&gt;</comment>
                            <comment id="12898251" author="nirmal" created="Fri, 13 Aug 2010 15:31:06 +0100"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;No, a comment can be added as the first entry, I tested modified style sheets in my environment.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12898705" author="bryanpendleton" created="Sun, 15 Aug 2010 17:50:20 +0100"  >&lt;p&gt;Hi Nirmal, thanks for the latest patch.&lt;/p&gt;

&lt;p&gt;I don&apos;t understand the verifySchemaExistance() method in the latest &lt;br/&gt;
9.12 patch.  What is the intended method behavior if the schema&lt;br/&gt;
name is &lt;b&gt;not&lt;/b&gt; found in the getSchemas() list?&lt;/p&gt;

&lt;p&gt;Also, I think it would be good if the patch could include a new&lt;br/&gt;
test case in XplainStatisticsTest, which tested the behavior when&lt;br/&gt;
an incorrect schema name is provided to AccessDatabase. &lt;/p&gt;

&lt;p&gt;Similarly, could the patch include a new test case which tested&lt;br/&gt;
the behavior when a security exception is thrown by writeTheXMLFile&lt;br/&gt;
because it is trying to write to an invalid location? For example, we&lt;br/&gt;
could try to write to the file &quot;/DerbyXMLTest.xml&quot;, which should fail&lt;br/&gt;
on all our platforms because Derby is generally not authorized to&lt;br/&gt;
write to the root of the file system.&lt;/p&gt;</comment>
                            <comment id="12898716" author="nirmal" created="Sun, 15 Aug 2010 19:02:03 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for reviewing the patch!&lt;/p&gt;

&lt;p&gt;Whoops, I interpreted a behavior incorrectly! I&apos;ve modified the 9.12 patch, &lt;br/&gt;
so that it will print an error message if the schema is incorrect.&lt;/p&gt;

&lt;p&gt;Regarding test cases I&apos;ll give a try soon!&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12898753" author="bryanpendleton" created="Sun, 15 Aug 2010 22:16:59 +0100"  >&lt;p&gt;I added a few simple test cases to the XplainStatisticsTest to cover&lt;br/&gt;
some of the situations I thought might be interesting, and committed&lt;br/&gt;
the patch to the trunk as revision 985762.&lt;/p&gt;</comment>
                            <comment id="12898782" author="nirmal" created="Mon, 16 Aug 2010 03:48:26 +0100"  >&lt;p&gt;Thanks Bryan for adding those tests! They ran fine for me!&lt;/p&gt;</comment>
                            <comment id="12932039" author="knutanders" created="Mon, 15 Nov 2010 12:25:19 +0000"  >&lt;p&gt;I&apos;ve converted the remaining open sub-task to standalone improvement requests and linked them to this issue. Marking this issue as fixed in 10.7.&lt;/p&gt;

&lt;p&gt;Thanks for all the work you&apos;ve put into this, Nirmal!&lt;/p&gt;</comment>
                            <comment id="13685365" author="knutanders" created="Mon, 17 Jun 2013 10:19:48 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12471202">DERBY-4766</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12471314">DERBY-4768</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12471559">DERBY-4775</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12472158">DERBY-4783</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12479939">DERBY-4902</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12470579">DERBY-4758</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12450960" name="AdavancedXSL-mouseover.jpg" size="87931" author="nirmal" created="Sat, 31 Jul 2010 17:16:54 +0100"/>
                            <attachment id="12451407" name="DERBY-4587-javadoc_fix.diff" size="304" author="nirmal" created="Fri, 6 Aug 2010 03:47:50 +0100"/>
                            <attachment id="12445865" name="DERBY-4587-tool-2.diff" size="9359" author="nirmal" created="Sun, 30 May 2010 02:21:59 +0100"/>
                            <attachment id="12445876" name="DERBY-4587-tool-3.diff" size="9514" author="nirmal" created="Sun, 30 May 2010 14:50:12 +0100"/>
                            <attachment id="12446259" name="DERBY-4587-tool-4.diff" size="16881" author="nirmal" created="Thu, 3 Jun 2010 16:58:14 +0100"/>
                            <attachment id="12447711" name="DERBY-4587-tool-5.diff" size="17716" author="nirmal" created="Tue, 22 Jun 2010 17:15:15 +0100"/>
                            <attachment id="12448062" name="DERBY-4587-tool-6.diff" size="17014" author="nirmal" created="Fri, 25 Jun 2010 16:15:27 +0100"/>
                            <attachment id="12448333" name="DERBY-4587-tool-7-b.diff" size="19685" author="nirmal" created="Tue, 29 Jun 2010 18:47:08 +0100"/>
                            <attachment id="12448160" name="DERBY-4587-tool-7.diff" size="18382" author="nirmal" created="Sun, 27 Jun 2010 17:02:09 +0100"/>
                            <attachment id="12448644" name="DERBY-4587-tool-8.diff" size="25660" author="nirmal" created="Sun, 4 Jul 2010 15:55:52 +0100"/>
                            <attachment id="12449196" name="DERBY-4587-tool-9.1.diff" size="74175" author="nirmal" created="Sun, 11 Jul 2010 19:25:24 +0100"/>
                            <attachment id="12451935" name="DERBY-4587-tool-9.10-eol_style_native.diff" size="1569" author="kristwaa" created="Thu, 12 Aug 2010 19:56:13 +0100"/>
                            <attachment id="12451977" name="DERBY-4587-tool-9.11-license_header_inXSL.diff" size="3381" author="nirmal" created="Fri, 13 Aug 2010 03:08:12 +0100"/>
                            <attachment id="12452128" name="DERBY-4587-tool-9.12.diff" size="16805" author="nirmal" created="Sun, 15 Aug 2010 19:04:49 +0100"/>
                            <attachment id="12452086" name="DERBY-4587-tool-9.12.diff" size="4040" author="nirmal" created="Sat, 14 Aug 2010 09:10:47 +0100"/>
                            <attachment id="12451983" name="DERBY-4587-tool-9.12.diff" size="3678" author="nirmal" created="Fri, 13 Aug 2010 04:07:35 +0100"/>
                            <attachment id="12449246" name="DERBY-4587-tool-9.2.diff" size="73465" author="nirmal" created="Mon, 12 Jul 2010 14:54:30 +0100"/>
                            <attachment id="12449626" name="DERBY-4587-tool-9.3.diff" size="79744" author="nirmal" created="Fri, 16 Jul 2010 04:56:02 +0100"/>
                            <attachment id="12449753" name="DERBY-4587-tool-9.4.diff" size="84289" author="nirmal" created="Sat, 17 Jul 2010 13:40:29 +0100"/>
                            <attachment id="12450327" name="DERBY-4587-tool-9.5.diff" size="68303" author="nirmal" created="Fri, 23 Jul 2010 18:06:48 +0100"/>
                            <attachment id="12450729" name="DERBY-4587-tool-9.6.diff" size="69591" author="nirmal" created="Wed, 28 Jul 2010 18:07:31 +0100"/>
                            <attachment id="12451406" name="DERBY-4587-tool-9.7.diff" size="83772" author="nirmal" created="Fri, 6 Aug 2010 03:16:09 +0100"/>
                            <attachment id="12451290" name="DERBY-4587-tool-9.7.diff" size="83236" author="nirmal" created="Thu, 5 Aug 2010 02:45:48 +0100"/>
                            <attachment id="12451930" name="DERBY-4587-tool-9.8-modified.diff" size="33937" author="kristwaa" created="Thu, 12 Aug 2010 19:07:39 +0100"/>
                            <attachment id="12451922" name="DERBY-4587-tool-9.8.diff" size="35040" author="nirmal" created="Thu, 12 Aug 2010 17:54:02 +0100"/>
                            <attachment id="12451934" name="DERBY-4587-tool-9.9-formatting.diff" size="85934" author="kristwaa" created="Thu, 12 Aug 2010 19:39:23 +0100"/>
                            <attachment id="12449160" name="DERBY-4587-tool-9.diff" size="74654" author="nirmal" created="Sat, 10 Jul 2010 17:42:51 +0100"/>
                            <attachment id="12448063" name="DERBY-4587-tool-test1.diff" size="3164" author="nirmal" created="Fri, 25 Jun 2010 16:15:27 +0100"/>
                            <attachment id="12448334" name="DERBY-4587-tool-test2.diff" size="3560" author="nirmal" created="Tue, 29 Jun 2010 18:47:08 +0100"/>
                            <attachment id="12445854" name="DERBY-4587-tool.diff" size="9075" author="nirmal" created="Sat, 29 May 2010 19:22:25 +0100"/>
                            <attachment id="12441136" name="Derby Query Plan Screen Shot 2.jpg" size="120146" author="nirmal" created="Thu, 8 Apr 2010 11:40:13 +0100"/>
                            <attachment id="12441108" name="Derby_Query_Plan_Screen_Shot.jpg" size="20536" author="nirmal" created="Thu, 8 Apr 2010 04:15:18 +0100"/>
                            <attachment id="12439538" name="PostgreSQL license.jpg" size="144991" author="nirmal" created="Tue, 23 Mar 2010 03:12:42 +0000"/>
                            <attachment id="12441106" name="Read_Me.txt" size="1191" author="nirmal" created="Thu, 8 Apr 2010 04:10:08 +0100"/>
                            <attachment id="12447719" name="Simple HTML View (Pure XSL).jpg" size="93653" author="nirmal" created="Tue, 22 Jun 2010 18:31:55 +0100"/>
                            <attachment id="12441107" name="Source.rar" size="4844" author="nirmal" created="Thu, 8 Apr 2010 04:10:08 +0100"/>
                            <attachment id="12450961" name="advancedViewXSL.xsl" size="4228" author="nirmal" created="Sat, 31 Jul 2010 17:28:40 +0100"/>
                            <attachment id="12450733" name="advancedViewXSL.xsl" size="4304" author="nirmal" created="Wed, 28 Jul 2010 18:21:00 +0100"/>
                            <attachment id="12450962" name="advancedViewXSL2.xsl" size="4570" author="nirmal" created="Sat, 31 Jul 2010 17:28:40 +0100"/>
                            <attachment id="12450730" name="advancedXSL-1.jpg" size="66783" author="nirmal" created="Wed, 28 Jul 2010 18:13:13 +0100"/>
                            <attachment id="12450731" name="advancedXSL-2.jpg" size="120876" author="nirmal" created="Wed, 28 Jul 2010 18:15:11 +0100"/>
                            <attachment id="12450732" name="advancedXSL-3.jpg" size="140922" author="nirmal" created="Wed, 28 Jul 2010 18:18:01 +0100"/>
                            <attachment id="12448162" name="basic_html-2.2.jpg" size="92090" author="nirmal" created="Sun, 27 Jun 2010 18:46:58 +0100"/>
                            <attachment id="12448498" name="basic_html-2.3.jpg" size="74382" author="nirmal" created="Thu, 1 Jul 2010 16:07:20 +0100"/>
                            <attachment id="12448159" name="basic_html-2.jpg" size="76335" author="nirmal" created="Sun, 27 Jun 2010 16:37:26 +0100"/>
                            <attachment id="12448225" name="basic_html-3.jpg" size="95556" author="nirmal" created="Mon, 28 Jun 2010 17:15:21 +0100"/>
                            <attachment id="12448642" name="basic_html-4.1.jpg" size="82877" author="nirmal" created="Sun, 4 Jul 2010 15:38:10 +0100"/>
                            <attachment id="12448643" name="basic_html-4.2.jpg" size="76002" author="nirmal" created="Sun, 4 Jul 2010 15:40:12 +0100"/>
                            <attachment id="12449755" name="derby-logo.png" size="3666" author="nirmal" created="Sat, 17 Jul 2010 13:41:53 +0100"/>
                            <attachment id="12447150" name="screenshot-1.jpg" size="168473" author="nirmal" created="Tue, 15 Jun 2010 18:27:56 +0100"/>
                            <attachment id="12447151" name="screenshot-2.jpg" size="152503" author="nirmal" created="Tue, 15 Jun 2010 18:29:18 +0100"/>
                            <attachment id="12447156" name="screenshot-3.jpg" size="152470" author="nirmal" created="Tue, 15 Jun 2010 19:18:26 +0100"/>
                            <attachment id="12447153" name="test.xml" size="1140" author="nirmal" created="Tue, 15 Jun 2010 18:36:21 +0100"/>
                            <attachment id="12447152" name="test4.xsl" size="2936" author="nirmal" created="Tue, 15 Jun 2010 18:36:21 +0100"/>
                            <attachment id="12449754" name="vanilla_html.xsl" size="2032" author="nirmal" created="Sat, 17 Jul 2010 13:41:53 +0100"/>
                            <attachment id="12448645" name="vanilla_html.xsl" size="2024" author="nirmal" created="Sun, 4 Jul 2010 15:55:52 +0100"/>
                            <attachment id="12448335" name="vanilla_html.xsl" size="2016" author="nirmal" created="Tue, 29 Jun 2010 18:47:08 +0100"/>
                            <attachment id="12448161" name="vanilla_html.xsl" size="2002" author="nirmal" created="Sun, 27 Jun 2010 17:05:05 +0100"/>
                            <attachment id="12447721" name="vanilla_html.xsl" size="1925" author="nirmal" created="Tue, 22 Jun 2010 18:37:52 +0100"/>
                            <attachment id="12448646" name="xml_doc_screenshot.jpg" size="121160" author="nirmal" created="Sun, 4 Jul 2010 15:58:09 +0100"/>
                            <attachment id="12448006" name="xml_doc_screenshot.jpg" size="113454" author="nirmal" created="Fri, 25 Jun 2010 02:32:40 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12470579">DERBY-4758</subtask>
                            <subtask id="12471557">DERBY-4774</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 21 Mar 2010 03:51:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31287</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ogf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37780</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>