<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2195/DERBY-2195.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2195] Nested triggers not working properly after maximum trigger count exception is thrown</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2195</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;After the maximum allowed nested trigger exception is thrown, subsequent statement that result in nested trigger execution may result in the same error again even though it does not exceed the limit of nested triggers(16).&lt;br/&gt;
e.g.:&lt;/p&gt;

&lt;p&gt;C:\derby\trunk&amp;gt;java -classpath classes;. org.apache.derby.tools.ij&lt;/p&gt;

&lt;p&gt;ij version 10.3&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:wombat;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table t1 (i int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t1 values 1,2,3;&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create trigger tr1 after update on t1 for each row update t1 set i=i+1;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
&amp;#8211; force the &quot;maximum depth of nested triggers&quot; error to occur&lt;br/&gt;
ij&amp;gt; update t1 set i=i+1;&lt;br/&gt;
ERROR 54038: Maximum depth of nested triggers was exceeded.&lt;br/&gt;
ij&amp;gt; drop trigger tr1;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create trigger tr1 after update on t1 referencing old as oldt for each row update t1 set i=i+1 where oldt.i=2;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
&amp;#8211; this should have executed successfully instead of throwing the same error again!&lt;br/&gt;
ij&amp;gt; update t1 set i=i+1;&lt;br/&gt;
ERROR 54038: Maximum depth of nested triggers was exceeded.&lt;br/&gt;
ij&amp;gt; disconnect;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:wombat&apos;;&lt;br/&gt;
ij&amp;gt; select * from t1;&lt;br/&gt;
I&lt;br/&gt;
-----------&lt;br/&gt;
1&lt;br/&gt;
2&lt;br/&gt;
3&lt;/p&gt;

&lt;p&gt;3 rows selected&lt;br/&gt;
&amp;#8211; ok after reconnection, it looks like the trigger execution context(TEC) may not have been cleanup properly in the previous connection&lt;br/&gt;
ij&amp;gt; update t1 set i=i+1;&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t1;&lt;br/&gt;
I&lt;br/&gt;
-----------&lt;br/&gt;
4&lt;br/&gt;
5&lt;br/&gt;
6&lt;/p&gt;

&lt;p&gt;3 rows selected&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;</description>
                <environment>Any</environment>
        <key id="12358946">DERBY-2195</key>
            <summary>Nested triggers not working properly after maximum trigger count exception is thrown</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yipng">Yip Ng</assignee>
                                    <reporter username="yipng">Yip Ng</reporter>
                        <labels>
                    </labels>
                <created>Mon, 18 Dec 2006 19:36:20 +0000</created>
                <updated>Mon, 5 Jul 2010 18:12:50 +0100</updated>
                            <resolved>Fri, 5 Jan 2007 05:38:25 +0000</resolved>
                                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12461561" author="yipng" created="Sun, 31 Dec 2006 08:11:23 +0000"  >&lt;p&gt;Attaching derby2195-trunk-diff01.txt for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2195&quot; title=&quot;Nested triggers not working properly after maximum trigger count exception is thrown&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2195&quot;&gt;&lt;del&gt;DERBY-2195&lt;/del&gt;&lt;/a&gt;.  The patch fixes the stated problem of this jira.  After looking at the trigger code in more detail, it appears that &lt;br/&gt;
the system is not cleaning up the statement context properly.  The cleanup should have been performed in GenericTriggerExecutor&apos;s executeSPS exception handler  (see patch for further comments).  &lt;/p&gt;

&lt;p&gt;In addition, there is another potential problem with the exception handling logic in executeSPS() where it assumes that the SPS has executed and therefore will have a new statement context and pops it off from the LCC.  This is somewhat dangerous as StandardException can occur before pushing the new statement context to the stack; hence, this might result in popping the wrong statement context.  So the patch also addresses this issue.&lt;/p&gt;

&lt;p&gt;derbyall and junit suite passes.  Appreciate if someone can review this.  Thanks and happy New Year!&lt;/p&gt;</comment>
                            <comment id="12461645" author="bryanpendleton" created="Mon, 1 Jan 2007 21:22:40 +0000"  >&lt;p&gt;Hi Yip, thanks for the patch and for the notes.&lt;/p&gt;

&lt;p&gt;Why do we have to be so cautious about the error handling?That is,&lt;br/&gt;
why shouldn&apos;t the fix simply be to &lt;b&gt;always&lt;/b&gt; call sc.cleanupOnError&lt;br/&gt;
whenever ps.execute() throws a StandardException? What is the&lt;br/&gt;
significance of the statement context having been changed?&lt;/p&gt;
</comment>
                            <comment id="12461801" author="yipng" created="Tue, 2 Jan 2007 19:29:20 +0000"  >&lt;p&gt;Hi Bryan, thanks for reviewing the patch.  The GenericTriggerExecutor is responsible to make sure the SPS execution is cleanup correctly.    sc.cleanupOnError() will eventually lead to popping off itself(statement context that is associated with the SPS action) from the LCC as part of the clean up logic.  What if ps.execute() throws a StandardException somewhere in the code before a new StatementContext for the SPS action is pushed to the context stack?    Then the system will be popping off the wrong StatementContext object from LCC which may lead to internal exception within the system. &lt;/p&gt;</comment>
                            <comment id="12461826" author="bryanpendleton" created="Tue, 2 Jan 2007 21:15:57 +0000"  >&lt;p&gt;Hi Yip, thanks for the explanation. It makes sense, but I&apos;m wondering&lt;br/&gt;
whether this means that the cleanup is in the wrong place. Shouldn&apos;t&lt;br/&gt;
the code which handles pushing the new statement context also be&lt;br/&gt;
responsible for cleaning up that context if an exception is thrown? I guess&lt;br/&gt;
it just seems awkward if GenericTriggerExecutor has to store a copy of&lt;br/&gt;
the context in order to detect that some other class&apos;s method has pushed a new&lt;br/&gt;
context object which now requires cleanup. Is Trigger a special case &lt;br/&gt;
which adds this additional complexity?&lt;/p&gt;</comment>
                            <comment id="12461849" author="yipng" created="Tue, 2 Jan 2007 22:15:32 +0000"  >&lt;p&gt;Hi Bryan.  Indeed, I have the same question too when I was fixing this jira.  &lt;/p&gt;

&lt;p&gt;At first glance, it appears that it makes sense to call statement context clean up code when an exception has occurred in the class that creates the new statement context.  However, this does not work well when Server side JDBC comes into play.  The cleanup mechanism for invoking a Java procedure has a different cleanup code path that uses the global context stack and will clean up the various contexts in the order that they were pushed down till the &quot;last context handler&quot;.  I think the &quot;last context handler&quot; concept is for handling in the case where the system does not want to rollback the entire execution context but to a certain statement context.  (e.g.:  CALL statement may be executing various SQL statements and each of those statement has its own statement context.  If one SQL statement fails with exception and the Java procedure decides to handle the exception, it must not rollback the entire execution context but only up to the statement context object that fails, and then the Java procedure continues on.)   &lt;/p&gt;

&lt;p&gt;So if a statement context cleanupOnError() is called within the place where it pushes it, the sc will be cleaned and removed from the global stack and the exception is rethrown to the next exception handler which will eventually invoke ContextManager&apos;s cleanupOnError method and cleans up on the current global context stack.  So a statement context here is cleaned up too soon and if for some reason, the outermost statement (CALL statement) needs to access its statement context (i.e.:  sc.clearSavePoint()), it will throw an internal exception since the outermost statement context has been popped off.  (see GenericStatementContext&apos;s pleaseBeOnStack()).&lt;/p&gt;

&lt;p&gt;Hence, I think that that is why the SPS (GenericPreparedStatement) does not clean up the statement context on error but rely on other classes or mechanisms such as GenericTriggerExecutor or ContextManager&apos;s cleanupOnError() for proper cleanup.&lt;/p&gt;
</comment>
                            <comment id="12461867" author="bryanpendleton" created="Tue, 2 Jan 2007 23:18:18 +0000"  >&lt;p&gt;Hi Yip, thank you for the explanation, and for being patient with my questions &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I don&apos;t have any further questions of my own. I suggest that we should wait a&lt;br/&gt;
few days to see if there are any other questions or comments from other reviewers.&lt;/p&gt;

&lt;p&gt;If no other comments are raised after a few days, I will commit this fix.&lt;/p&gt;</comment>
                            <comment id="12462320" author="bryanpendleton" created="Thu, 4 Jan 2007 21:08:51 +0000"  >&lt;p&gt;Committed derby2195-trunk-diff01.txt to subversion as revision 492741.&lt;/p&gt;

&lt;p&gt;Should this fix be merged to 10.2?&lt;/p&gt;</comment>
                            <comment id="12462369" author="yipng" created="Fri, 5 Jan 2007 00:25:56 +0000"  >&lt;p&gt;Yes, submitting derby2195-10.2-diff01.txt for 10.2.  Running derbyall now, will post result when it completes.&lt;/p&gt;
</comment>
                            <comment id="12462400" author="yipng" created="Fri, 5 Jan 2007 04:06:42 +0000"  >&lt;p&gt;derbyall passes successfully on 10.2.&lt;/p&gt;</comment>
                            <comment id="12462405" author="bryanpendleton" created="Fri, 5 Jan 2007 05:38:25 +0000"  >&lt;p&gt;Patch derby2195-10.2-diff01.txt committed to the 10.2 branch as revision 492914.&lt;/p&gt;</comment>
                            <comment id="12562060" author="dyret" created="Thu, 24 Jan 2008 13:10:09 +0000"  >&lt;p&gt;This issue is resolved and has not been updated in the last 12 months (since 24/Jan/07). &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="27588">DERBY-26</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12348314" name="derby2195-10.2-diff01.txt" size="6798" author="yipng" created="Fri, 5 Jan 2007 00:26:40 +0000"/>
                            <attachment id="12348313" name="derby2195-10.2-stat01.txt" size="356" author="yipng" created="Fri, 5 Jan 2007 00:26:40 +0000"/>
                            <attachment id="12348122" name="derby2195-trunk-diff01.txt" size="6750" author="yipng" created="Sun, 31 Dec 2006 08:11:23 +0000"/>
                            <attachment id="12348121" name="derby2195-trunk-stat01.txt" size="356" author="yipng" created="Sun, 31 Dec 2006 08:11:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Jan 2007 21:22:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22940</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0prz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37994</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>