<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-13/DERBY-13.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-13] Quoted names with embedded period mishandled in from list</title>
                <link>https://issues.apache.org/jira/browse/DERBY-13</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Opening this bug on behalf of Satheesh Bandaram&lt;/p&gt;

&lt;p&gt;---------------------------------------------------------&lt;br/&gt;
The compiler mishandles quoted names with embedded periods when &lt;br/&gt;
checking uniqueness of table names in the from list of a &lt;br/&gt;
SELECT. Consider the following SQL:&lt;br/&gt;
  create table &quot;S1.T1&quot; (id int not null primary key, d1 int);&lt;br/&gt;
  create schema s1;&lt;br/&gt;
  create table s1.t1 (id int not null primary key, d2 int);&lt;br/&gt;
  select * from s1.t1, &quot;S1.T1&quot; where s1.t1.id = &quot;S1.T1&quot;.id;&lt;br/&gt;
Derby throws an error on the final SELECT statement:&lt;br/&gt;
&quot;ERROR 42X09: The table or alias name &apos;S1.T1&apos; is used more than &lt;br/&gt;
once in the FROM list&quot;. However s1.t1 and &quot;S1.T1&quot; are different &lt;br/&gt;
tables.&lt;/p&gt;</description>
                <environment></environment>
        <key id="27518">DERBY-13</key>
            <summary>Quoted names with embedded period mishandled in from list</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shreyas">Shreyas Kaushik</assignee>
                                    <reporter username="ramank">Ramandeep Kaur</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Sep 2004 19:51:28 +0100</created>
                <updated>Sat, 8 Jul 2006 11:06:51 +0100</updated>
                            <resolved>Wed, 25 May 2005 16:53:13 +0100</resolved>
                                    <version>10.0.2.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="56055" author="shreyas" created="Wed, 1 Dec 2004 12:29:42 +0000"  >&lt;p&gt;Attached is the patch for this bug. Please review and give comments.&lt;/p&gt;</comment>
                            <comment id="56056" author="hlavac" created="Wed, 1 Dec 2004 13:23:30 +0000"  >&lt;p&gt;I believe SQL92 limits table names to letters, numbers and underscore characters (with underscore and number not being first character of the identifier), so if the first create table statement creates table with actual name &quot;S1.T1&quot; it is probably wrong.&lt;/p&gt;

&lt;p&gt;Some syntax definitions from ANSI X3.135-1992:&lt;/p&gt;

&lt;p&gt;&amp;lt;table name&amp;gt; ::= &amp;lt;qualified name&amp;gt; | &amp;lt;qualified local table name&amp;gt;&lt;br/&gt;
&amp;lt;qualified local table name&amp;gt; ::= MODULE &amp;lt;period&amp;gt; &amp;lt;local table name&amp;gt;&lt;br/&gt;
&amp;lt;local table name&amp;gt; ::= &amp;lt;qualified identifier&amp;gt;&lt;br/&gt;
&amp;lt;qualified identifier&amp;gt; ::= &amp;lt;identifier&amp;gt;&lt;br/&gt;
&amp;lt;qualified name&amp;gt; ::= [ &amp;lt;schema name&amp;gt; &amp;lt;period&amp;gt; ] &amp;lt;qualified identifier&amp;gt;&lt;br/&gt;
&amp;lt;identifier&amp;gt; ::= [ &amp;lt;introducer&amp;gt;&amp;lt;character set specification&amp;gt; ] &amp;lt;actual identifier&amp;gt;&lt;br/&gt;
&amp;lt;actual identifier&amp;gt; ::= &amp;lt;regular identifier&amp;gt; | &amp;lt;delimited identifier&amp;gt;&lt;br/&gt;
&amp;lt;regular identifier&amp;gt; ::= &amp;lt;identifier body&amp;gt;&lt;br/&gt;
&amp;lt;identifier body&amp;gt; ::= &amp;lt;identifier start&amp;gt; [ &lt;/p&gt;
{ &amp;lt;underscore&amp;gt; | &amp;lt;identifier part&amp;gt; }
&lt;p&gt;... ]&lt;br/&gt;
&amp;lt;identifier part&amp;gt; ::= &amp;lt;identifier start&amp;gt; | &amp;lt;digit&amp;gt;&lt;/p&gt;

&lt;p&gt;1) An &amp;lt;identifier start&amp;gt; is one of:&lt;br/&gt;
a) A &amp;lt;simple Latin letter&amp;gt;; or&lt;br/&gt;
b) A character that is identified as a letter in the character repertoire identified by the &amp;lt;module character set specification&amp;gt; or by the &amp;lt;character set specification&amp;gt;; or&lt;br/&gt;
c) A character that is identified as a syllable in the character repertoire identified by the &amp;lt;module character set specification&amp;gt; or by the &amp;lt;character set specification&amp;gt;; or&lt;br/&gt;
d) A character that is identified as an ideograph in the character repertoire identified by the &amp;lt;module character set specification&amp;gt; or by the &amp;lt;character set specification&amp;gt;.&lt;/p&gt;</comment>
                            <comment id="56061" author="jackklebanoff" created="Wed, 1 Dec 2004 16:07:37 +0000"  >&lt;p&gt;The SQL standard does allow just about anything inside a &amp;lt;delimited identifier&amp;gt;.  A delimited identifier is a string delimited by double quotes. For instance, the SQL standard allows&lt;br/&gt;
  create table &quot;S1.T1&quot; ...&lt;br/&gt;
  select * from &quot;S1.T1&quot;&lt;/p&gt;</comment>
                            <comment id="56067" author="rp0428" created="Wed, 1 Dec 2004 19:03:13 +0000"  >&lt;p&gt;I think that the proposed patch is either incorrect or incomplete.&lt;/p&gt;

&lt;p&gt;1. There are two &apos;equals&apos; methods in Tablename.java: one takes only a table name argument and the other takes both table name and schema name arguments. Don&apos;t they both need to be modified?&lt;/p&gt;

&lt;p&gt;2. The proposed change to the first &apos;equals&apos; method in  Tablename.java returns false if the argument table name is null. But the comment block at the beginning of the method states that &apos;TableNames are equal if their both their schemaNames and tableNames are&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;equal, or if this node&apos;s full table name is null&apos;. If this comment is correct then &apos;true&apos; should be returned if &apos;this nodes full table name is null&apos; whether the argument is null or not. If this comment is not correct then it should be corrected. Since the same comment appears before the second &apos;equals&apos; method the second method will need to be modified to reflect the same business rule.&lt;br/&gt;
 before the &lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="56078" author="bandaram" created="Thu, 2 Dec 2004 02:13:23 +0000"  >&lt;p&gt;I believe the proposed patch is incorrect. The patch would incorrectly accept statements like &lt;br/&gt;
select * from t1 a, t2 a where a.i = 5&lt;/p&gt;

&lt;p&gt;The current checking for duplicate exposed names is correct. I think the problem here is caused because Derby currently stores both S1.T1 and &quot;S1.T1&quot; tables as having the same exposed name, S1.T1. At the compile time, we are not able tell if it was originally S1.T1 or &quot;S1.T1&quot;&lt;/p&gt;

&lt;p&gt;One solution might be to store &quot;delimited identifiers&quot; along with their quotes... In this case, one table would have the exposed name S1.T1 and the other &quot;S1.T1&quot;. But this might have impact on some other parts of the code.&lt;/p&gt;

&lt;p&gt;Note that following queries are currently accepted, when both should fail:&lt;br/&gt;
ij&amp;gt; select s1.t1.* from &quot;S1.T1&quot;;&lt;br/&gt;
ID         |D1&lt;br/&gt;
-----------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;br/&gt;
ij&amp;gt;  select &quot;S1.T1&quot;.* from s1.t1;&lt;br/&gt;
ID         |D2&lt;br/&gt;
-----------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;/p&gt;
</comment>
                            <comment id="56090" author="hlavac" created="Thu, 2 Dec 2004 10:32:26 +0000"  >&lt;p&gt;I think you need to store table name as a pair &amp;lt;schma,name&amp;gt;, not as a single String.&lt;br/&gt;
As delimited identifiers can contain arbitrary characters, you dont have a reliable delimiter character to separate, and any escaping mechanism would be costly.&lt;/p&gt;</comment>
                            <comment id="56109" author="djd" created="Thu, 2 Dec 2004 16:39:49 +0000"  >&lt;p&gt;Rather than inventing a new way, the exposed table name should be a TableName rather than a simple String. (org.apache.derby.impl.sql.compile.TableName). Some of the query nodes already have a method TableName getExposedTableName(), all instances and uses of String getExposedName() should be changed to TableName getExposedTableName().&lt;/p&gt;

&lt;p&gt;The change is probably a little more involved than that, but that should be the general idea.&lt;/p&gt;</comment>
                            <comment id="57002" author="shreyas" created="Thu, 23 Dec 2004 05:23:25 +0000"  >&lt;p&gt;In response to Sateesh&apos;s comments:&lt;/p&gt;

&lt;p&gt; Should the behaviour for the two queries you mentioned in your example, be taken care of at the compile time or bind time ? I feel they should be probably under a seperate bug, shouldn&apos;t they ? As this is likely to have a much larger impact.&lt;/p&gt;

&lt;p&gt;For this bug it is how the from list behaves and the comparision that needs to go in here, as Dan has suggested used the getExposedTableName approach.&lt;/p&gt;
</comment>
                            <comment id="57080" author="bandaram" created="Tue, 28 Dec 2004 01:40:19 +0000"  >&lt;p&gt;I think this is a bind issue, still. For the following query:&lt;/p&gt;

&lt;p&gt;select &quot;S1.T1&quot;.* from s1.t1; &lt;/p&gt;

&lt;p&gt;&quot;S1.T1&quot; is being considered same as s1.t1. This seems to happen in FromList.java:&lt;/p&gt;

&lt;p&gt;public ResultColumnList getResultColumnsForList(String allTableName,ResultColumnList inputRcl,Name tableName)&lt;br/&gt;
........................&lt;br/&gt;
  /* If allTableName is non-null, then we must check to see if it matches &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;our exposed name.&lt;br/&gt;
  */&lt;br/&gt;
  if (allTableName != null &amp;amp;&amp;amp; ! allTableName.equals(getExposedName()))
  {
	return null;
  }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If all exposed names are being changed to TableNames, like Dan suggested, then this comparison here should not be a string based comparison.&lt;/p&gt;</comment>
                            <comment id="57083" author="hlavac" created="Tue, 28 Dec 2004 11:09:13 +0000"  >&lt;p&gt;Maybe the table names could be converted to canonical form before being used/compared?&lt;br/&gt;
After all, s1.t1 is just an easy way to write &quot;S1&quot;.&quot;T1&quot;, and should be threated as such.&lt;/p&gt;</comment>
                            <comment id="57085" author="shreyas" created="Tue, 28 Dec 2004 14:11:34 +0000"  >&lt;p&gt;In response to Sateesh&apos;s comment:&lt;/p&gt;

&lt;p&gt;Here in this method the allTableName is just a String and we cannot know the schema name for that table. Only for the table in the from list can the schema be known. So it is still a compile / bind time issue.&lt;/p&gt;</comment>
                            <comment id="57109" author="maverick" created="Wed, 29 Dec 2004 05:01:16 +0000"  >&lt;p&gt;I think we need to understand that we are using String for TableName and not as an object of type TableName.java. Hence associating a schema with a table name which would otherwise have been possible(TableName.setSchemaName) cannot happen, is a problem.&lt;/p&gt;

&lt;p&gt;Secondly irrespective of whether a user gives a schema name (prefixes or not) we need to store the schema name(after clearly identifying the schema name), for every table name and cannot assume it to be NULL, else we get in problems like this.&lt;/p&gt;

&lt;p&gt;So &lt;/p&gt;

&lt;p&gt;1. either change from String tableName to TableName tableName.&lt;/p&gt;

&lt;p&gt;2. build a tableName object(of type TableName object) from the String and try to get handle to schema name (using the select query String as well).&lt;/p&gt;

&lt;p&gt;Note : the basic objective of either approach is to get handle to a schema name as and when it is required.&lt;/p&gt;

&lt;p&gt;1. is complex and may involve lot of changes wheras 2. is fairly simple.&lt;br/&gt;
If we can achive using 2 that will be better.&lt;/p&gt;






</comment>
                            <comment id="57179" author="shreyas" created="Mon, 3 Jan 2005 13:46:21 +0000"  >&lt;p&gt;I am proposing a fix for this issue. I am attaching the diffs of all the files that need to have changes.&lt;/p&gt;

&lt;p&gt;As per the discussions we have had on this issue the problem was with comparing exposed names. I have changed the comparision of all exposed names to the TableName objects. &lt;/p&gt;

&lt;p&gt;As Sateesh had suggested in one of his earlier mails on this issue,  &lt;/p&gt;

&lt;p&gt;public ResultColumnList getResultColumnsForList(String allTableName,ResultColumnList inputRcl,Name tableName)&lt;/p&gt;

&lt;p&gt; method in the FromTable.java the &quot;allTableName&quot; needs to be a TableName object instead of a String object. I have made those changes as well for the comparision to happen between TableName objects.&lt;/p&gt;

&lt;p&gt;  For the above change to happen we need to get a handle to the TableName object that is stored in the java/engine/org/apache/derby/impl/sql/compile/AllResultColumn. As of now it does not have a method to actually get a handle to the TableName object stored in this. So I added a new method that returns a handle to the TableName object stored internally.&lt;/p&gt;

&lt;p&gt;I also ran the tests of derbylang and am attaching the diffs of them as well. Some of the tests fail there and I don&apos;t know the exact reason for the failures.( I think they are not failures )&lt;/p&gt;</comment>
                            <comment id="57180" author="shreyas" created="Mon, 3 Jan 2005 13:47:52 +0000"  >&lt;p&gt;Latest proposed patch for Derby-13&lt;/p&gt;</comment>
                            <comment id="57181" author="shreyas" created="Mon, 3 Jan 2005 13:48:52 +0000"  >&lt;p&gt;Test run report with diffs of tests that are failing&lt;/p&gt;</comment>
                            <comment id="57923" author="djd" created="Sat, 22 Jan 2005 08:38:09 +0000"  >&lt;p&gt;Committed patch from Shreyas Kaushik &amp;lt;Shreyas.Kaushik@Sun.COM&amp;gt;&lt;/p&gt;

&lt;p&gt;svn revision 125980&lt;/p&gt;</comment>
                            <comment id="66240" author="shreyas" created="Wed, 25 May 2005 16:53:13 +0100"  >&lt;p&gt;Fixed, as per the earlier comment from Dan&lt;/p&gt;</comment>
                            <comment id="66247" author="shreyas" created="Wed, 25 May 2005 17:55:40 +0100"  >&lt;p&gt;Patch submitted&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="18512" name="Derby-13.diff" size="11959" author="shreyas" created="Mon, 3 Jan 2005 13:47:52 +0000"/>
                            <attachment id="18270" name="Derby-13.patch" size="1387" author="shreyas" created="Wed, 1 Dec 2004 12:29:42 +0000"/>
                            <attachment id="18513" name="derbylang_report.txt" size="12397" author="shreyas" created="Mon, 3 Jan 2005 13:48:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Dec 2004 12:29:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21714</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy15tr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40594</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>