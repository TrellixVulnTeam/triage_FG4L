<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2524/DERBY-2524.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2524] DataTypeDescriptor(DTD) needs to have collation type and collation derivation. These new fields will apply only for character string types. Other types should ignore them.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2524</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This the one of the ground works for getting different kinds of collations working for character string types. More information on this project can be found at &lt;a href=&quot;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&lt;/a&gt;. Basically, all the types in Derby have a DTD associated with them. For character string types, these DTDs should have valid values for collation derivation and collation type. For other data types, these 2 fields do not apply and should be ignored.&lt;/p&gt;

&lt;p&gt;SQL spec talks about character string types having collation type and collation derivation associated with them (SQL spec Section 4.2.2 Comparison of character strings). If collation derivation says explicit or implicit, then it means that there is a valid collation type associated with the charcter string type. If the collation derivation is none, then it means that collation type can&apos;t be established for the character string type. &lt;/p&gt;

&lt;p&gt;1)Collation derivation will be explicit if COLLATE clause has been used for character string type (this is not a possibility for Derby 10.3, because we are not planning to support SQL COLLATE clause in this release). &lt;/p&gt;

&lt;p&gt;2)Collation derivation will be implicit if the collation can be determined w/o the COLLATE clause eg CREATE TABLE t1(c11 char(4)) then c11 will have collation of USER character set. Another eg, TRIM(c11) then the result character string of TRIM operation will have collation of the operand, c11. &lt;/p&gt;

&lt;p&gt;3)Collation derivation will be none if the aggregate methods are dealing with character strings with different collations (Section 9.3 Data types of results of aggregations Syntax Rule 3aii). &lt;/p&gt;

</description>
                <environment></environment>
        <key id="12366582">DERBY-2524</key>
            <summary>DataTypeDescriptor(DTD) needs to have collation type and collation derivation. These new fields will apply only for character string types. Other types should ignore them.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Apr 2007 19:04:25 +0100</created>
                <updated>Thu, 2 May 2013 03:29:04 +0100</updated>
                            <resolved>Mon, 14 May 2007 18:18:11 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12486728" author="mamtas" created="Wed, 4 Apr 2007 19:21:34 +0100"  >&lt;p&gt;I just finished commiting a patch (DERBY2524_Collation_Info_In_DTD_v1_diff.txt) which is attached to this Jira entry. The patch got committed as part of revision 525568 and it does following 2 things&lt;br/&gt;
1)Add collation type and collation derivation attributes and apis to TypeDescriptor interface and it&apos;s implementations.&lt;br/&gt;
2)Save the collation type in the scale field of character types in writeExternal method of TypeDescriptorImpl. And read the scale field into the collation type for character types in readExternal method of TypeDescriptorImpl. &lt;/p&gt;

&lt;p&gt;svn stat -q&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\DataTypeDescriptor.java&lt;br/&gt;
M      java\engine\org\apache\derby\catalog\TypeDescriptor.java&lt;br/&gt;
M      java\engine\org\apache\derby\catalog\types\TypeDescriptorImpl.java&lt;/p&gt;

&lt;p&gt;Details of the patch&lt;br/&gt;
1)Added getters and setters for collationType and collationDerivation in TypeDescriptor. In addition, TypeDescriptor has new constants defined in them which will be used by the rest of the collation related code in Derby. One of the constants is COLLATION_DERIVATION_INCORRECT. I am initializing the collation derivation for all the data types to COLLATION_DERIVATION_INCORRECT in TypeDescriptorImpl. This should get changed to &quot;implicit&quot; or &quot;none&quot; for character string types before the runtime code kicks in. For all the other types, it will remain set to COLLATION_DERIVATION_INCORRECT because collation does not apply to those data types.&lt;br/&gt;
2)DTD implements the new apis in the TypeDescriptor interface.&lt;br/&gt;
3)2 set of changes went into &lt;br/&gt;
a)TypeDescriptorImpl has 2 new fields, namely, collationType and collationDerivation. collationDerivation is initialized to TypeDescriptor.COLLATION_DERIVATION_INCORRECT. For character string types, these field should get set correctly. In addition, there are apis to set and get values out of these 2 fields.&lt;br/&gt;
b)The next change for this class is in writeExternal and readExternal methods. I would like community&apos;s feedback on my assumption for this particular change. The collation type of a character string type will get saved in the existing scale field since scale does not apply to character string types. My question is about collation derivation. The collation derivation infromation does not get saved like collation type. But may be that is ok because I am assuming that writeExternal and readExternal get called only for the persistent columns (ie columns belonging to system and user tables). Collation derivation of such character string columns (coming from persistent tables) is always implicit. And, hence in readExternal, for character string types, I can initialize collation derivation to be implicit. My assumption is that readExternal and writeExternal methods will never get called for character string types with collation of none or explicit. Today we don&apos;t have explicit as one of the possible values for collation derivation, but a character string type will have the collation derivation of none if it was the result of an aggregate method involving operands with different collation derivations. This comes from item 11) from Section Collation Determination at &lt;a href=&quot;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Questions&lt;br/&gt;
1)I have included all the constant definitions related to collation in TypeDescriptor. If anyone has suggestion on a better place to define them, let me know. Wonder if there is already a class to define miscellaneous constant definitions like the ones I have added. TypeDescriptor does look like a good place for these constants defined by me because these constants all belong to the data type world.&lt;br/&gt;
2)Is it right to assume that readExternal and writeExternal methods in TypeDescriptorImpl will get called only for persistent columns?&lt;/p&gt;

&lt;p&gt;Although the patch is committed, please feel free to provide feedback on it. I will especially appreciate any feedback on my questions above.&lt;/p&gt;</comment>
                            <comment id="12486870" author="mamtas" created="Thu, 5 Apr 2007 07:45:24 +0100"  >&lt;p&gt;I committed a patch (DERBY2524_Collation_Info_In_DTD_v2_diff.txt, svn revision 525729) as a followup to the earlier commited patch (DERBY2524_Collation_Info_In_DTD_v1_diff.txt svn revision 525568) . Both these patches are attached to this Jira entry.&lt;/p&gt;

&lt;p&gt;svn stat -q&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\DataTypeDescriptor.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\StringDataValue.java&lt;br/&gt;
M      java\engine\org\apache\derby\catalog\TypeDescriptor.java&lt;br/&gt;
M      java\engine\org\apache\derby\catalog\types\TypeDescriptorImpl.java&lt;/p&gt;

&lt;p&gt;The patch does following to address feedback received on the earlier patch in thread &lt;a href=&quot;http://www.nabble.com/-jira--Created%3A-%28DERBY-2524%29-DataTypeDescriptor%28DTD%29-needs-to-have-collation-type-and-collation-derivation.-These-new-fields-will-apply-only-for-character-string-types.-Other-types-should-ignore-them.-p9842379.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/-jira--Created%3A-%28DERBY-2524%29-DataTypeDescriptor%28DTD%29-needs-to-have-collation-type-and-collation-derivation.-These-new-fields-will-apply-only-for-character-string-types.-Other-types-should-ignore-them.-p9842379.html&lt;/a&gt; &lt;br/&gt;
1)Moved the constant definitions from TypeDescriptor to StringDataValue.&lt;br/&gt;
2)Added javadoc comments for all the constants. One big javadoc comment for one of the constants in the related constants and other constants in that group will just have a javadoc of @see. &lt;br/&gt;
3)I had used string costants for collation derivation since they are more verbose. But that is more expensive than simply using int. As a middle ground, I have defined collation derivation constants as int but the names of the constants are verbose &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I also changed the api for collation derivation to work with int rather than String. Finally, changed collationDerivation from String to int in TypeDescriptorImpl.&lt;br/&gt;
4)Rather than using &quot;error&quot; to indicate incorrect collation derivation, we will just initialize collation derivation to &quot;none&quot;. For all character string types, the collation derivation should get changed to &quot;implicit&quot; unless we are working with aggregate result type of character string type and the operands to the aggregate have different collation types.&lt;br/&gt;
5)Currently, I only save collation type of a persistent character string type column into SYSCOLUMNS&apos;s COLUMNDATATYPE column. Collation derivation for such character string type is assumed as &quot;implicit&quot; because that is the only possible option in Derby 10.3 for persistent columns. But in some future release of Derby, when we will start supporting SQL COLLATE clause, we will want to differentiate between &quot;explicit&quot; and &quot;implicit&quot; collation derivation for such persistent columns. So, may be it will be good for us to start saving collation derivation too. For now, I have added this task as a line item under wiki page &lt;a href=&quot;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&lt;/a&gt; under &quot;Performance/Desirable items&quot; section.&lt;br/&gt;
6)I caused several javadoc errors for using @see Classname.methodname rather than @see Classname#methodname. Sorry about that. Fixed those errors in this patch.&lt;/p&gt;

&lt;p&gt;I think with this patch, I have taken care of all the feedback received on the earlier patch DERBY2524_Collation_Info_In_DTD_v1_diff.txt.&lt;/p&gt;

&lt;p&gt;Again, if anyone has any comment on this patch or earlier patch, please let me know.&lt;/p&gt;</comment>
                            <comment id="12487685" author="mamtas" created="Tue, 10 Apr 2007 06:13:10 +0100"  >&lt;p&gt;My earlier commit 525568 caused grantRevokeDDL.sql to fail because in TypeDescriptorImpl&apos;s equals method, I was comparing the collaiton type and derivation for non-character datatypes to derive equality. Collation type and derivation should only be checked for character datatypes. I am attaching patch DERBY2524_ignore_collation_for_nonchar_v1_diff.txt to address that problem. I ran the derbyall suite and noticed no new test failures because of this patch.&lt;/p&gt;

&lt;p&gt;Commited this patch using revision 527033.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12362830">DERBY-2336</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12354940" name="DERBY2524_Collation_Info_In_DTD_v1_diff.txt" size="9278" author="mamtas" created="Wed, 4 Apr 2007 19:21:34 +0100"/>
                            <attachment id="12354941" name="DERBY2524_Collation_Info_In_DTD_v1_stat.txt" size="280" author="mamtas" created="Wed, 4 Apr 2007 19:21:34 +0100"/>
                            <attachment id="12354980" name="DERBY2524_Collation_Info_In_DTD_v2_diff.txt" size="11701" author="mamtas" created="Thu, 5 Apr 2007 07:45:24 +0100"/>
                            <attachment id="12354981" name="DERBY2524_Collation_Info_In_DTD_v2_stat.txt" size="349" author="mamtas" created="Thu, 5 Apr 2007 07:45:24 +0100"/>
                            <attachment id="12355211" name="DERBY2524_ignore_collation_for_nonchar_v1_diff.txt" size="1447" author="mamtas" created="Tue, 10 Apr 2007 06:13:10 +0100"/>
                            <attachment id="12355212" name="DERBY2524_ignore_collation_for_nonchar_v1_stat.txt" size="143" author="mamtas" created="Tue, 10 Apr 2007 06:13:10 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30497</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0k87:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37095</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>