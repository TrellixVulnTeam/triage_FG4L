<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3808/DERBY-3808.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3808] Convert subquery.sql to junit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3808</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;place holder for converting subquery.sql to junit , which gives intermittent failures with derbyall&lt;/p&gt;</description>
                <environment></environment>
        <key id="12401356">DERBY-3808</key>
            <summary>Convert subquery.sql to junit</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="mkutty">Manjula Kutty</reporter>
                        <labels>
                            <label>derby_backport_reject_10_5</label>
                    </labels>
                <created>Wed, 30 Jul 2008 21:07:19 +0100</created>
                <updated>Fri, 15 Nov 2013 08:15:08 +0000</updated>
                            <resolved>Thu, 13 Sep 2012 00:20:04 +0100</resolved>
                                                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12637628" author="mkutty" created="Tue, 7 Oct 2008 21:08:16 +0100"  >&lt;p&gt;Attaching the patch for SubqueryTest.java. This is is the junit conversion of subquery.sql. I didn&apos;t include 2 test cases which has Runtimestatistics to check the join order. Me with the help of Kathey Marsden will implement a method for the same in runtimestatistics parser and will include those 2 tests cases later. Please review this patch and if looks good please commit.&lt;/p&gt;</comment>
                            <comment id="12638006" author="kmarsden" created="Wed, 8 Oct 2008 18:55:40 +0100"  >&lt;p&gt;Thanks Manjula for the patch.  Just a few comments.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Need the license header&lt;/li&gt;
	&lt;li&gt;The original test set derby.language.statementCacheSize=0 so we should do that with SystemPropertyTestSetup.&lt;/li&gt;
	&lt;li&gt;It would be better to use CleanDatabaseTestSetup/decorateSql  for the initial creation of tables and functions so that it doesn&apos;t occur with each fixture.&lt;/li&gt;
	&lt;li&gt;You can use setAutocommit() and rollback() instead of getConnection().setAutocommit() and getConnection().rollback().&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the new method for RuntimeStatisticsParser, I think something like this should work. (Needs testing and javadoc).&lt;/p&gt;

&lt;p&gt; public boolean findOrderedStrings(String[] searchStrings) &lt;/p&gt;
{
        return findOrderedStrings(0,searchStrings);
        
    }

&lt;p&gt;    private boolean findOrderedStrings(int start, String[] searchStrings) {&lt;br/&gt;
        int len = searchStrings.length;&lt;br/&gt;
        if (searchStrings.length == 0)&lt;br/&gt;
            return true;&lt;br/&gt;
        else&lt;/p&gt;
        {        
            int offset = statistics.indexOf(searchStrings[0],start);
            if (offset == -1) 
                return false;
            String[] newSearchStrings = new String[len -1];
            System.arraycopy(searchStrings, 1, newSearchStrings, 0, len-1);    
            return findOrderedStrings(offset, newSearchStrings);
        }
&lt;p&gt;    }&lt;/p&gt;</comment>
                            <comment id="12638015" author="mkutty" created="Wed, 8 Oct 2008 19:17:58 +0100"  >&lt;p&gt;Thank you for the comments Kathey. I will look into them and also will try to implement the RuntimeStatisticsParser and will upload a new patch.&lt;/p&gt;</comment>
                            <comment id="12998567" author="myrna" created="Wed, 23 Feb 2011 21:53:04 +0000"  >&lt;p&gt;I think Manjula did most of this work already and Kathey gave pseudo-code for the remaining adjustments, so I marked it Newcomer, and known fix although it&apos;s more of an &lt;b&gt;almost&lt;/b&gt; known fix.&lt;/p&gt;</comment>
                            <comment id="13199420" author="myrna" created="Fri, 3 Feb 2012 00:44:36 +0000"  >&lt;p&gt;Attaching a patch based on Manjula&apos;s work, ready for review.&lt;/p&gt;

&lt;p&gt;I modified the test from Manjula&apos;s in the following ways:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;re-applied the changes made to subquery.sql (and .out) in the last 3 1/2 years&lt;/li&gt;
	&lt;li&gt;reformatted Manjula&apos;s patch, mostly removing blank lines so the specific test steps were grouped by select statement.&lt;/li&gt;
	&lt;li&gt;corrected one instance where autocommit was set incorrectly, resulting in fixture testSubqueryFlattning failing if all fixtures ran.&lt;/li&gt;
	&lt;li&gt;implemented the following of Kathey&apos;s suggestions:&lt;/li&gt;
	&lt;li&gt;added the License header&lt;/li&gt;
	&lt;li&gt;set the derby.language.statementCacheSize=0 by wrapping in a SystemPropertyTestSetup.&lt;/li&gt;
	&lt;li&gt;used CleanDatabaseTestSetup/decorate.sql to create the initial set of tables&lt;/li&gt;
	&lt;li&gt;used setAutoCommit() and rollback()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I did not implement a &apos;usesJoinOrder&apos; method, because I found there already were methods in RuntimeStatisticsParser that allowed to check for the desired plan details.&lt;br/&gt;
I used assertSequence.&lt;br/&gt;
Unfortunately, that did not work in one particular instance, where if I printed out the rtsp.toString, it looked on my computer as if there text on top of a tab. I have no idea how that could be achieved, but after that, the assertSequence method found no further matches. Instead of spending more time puzzling about this problem at this time, I checked the rest of the strings using another RuntimeStatisticsParser method, findStrings.&lt;/p&gt;

&lt;p&gt;Another issue I ran into with assertSequence, is that one of the table names has an &apos;_&apos;. The method converts underscores to tabs, presumably attempting to make the strings in the tests more manageable. But in this case, it converted the name &apos;T_1&apos; and &apos;T_3&apos; to &apos;T\t1&apos; and &apos;T\t3&apos; and then looked for those strings, and of course couldn&apos;t find them.&lt;br/&gt;
I adjusted the assertSequence method to only replace _ for tabs in the first 15 characters, assuming that we&apos;d not go further than 15 levels...&lt;/p&gt;

&lt;p&gt;I did test this in all the tests where the method was directly or indirectly called, and they all passed.&lt;/p&gt;

&lt;p&gt;I also ran this test on iseries - where it always failed in the master-based form - and it passed there too.&lt;/p&gt;

&lt;p&gt;However, I have one concern before this is ready for commit: when running the test by itself, it passes, but when running it in the lang._Suite, the dependencies are different in 3 fixtures, suggesting some other test is leaving stuff behind.&lt;/p&gt;

&lt;p&gt;Any suggestions??&lt;/p&gt;

&lt;p&gt;These are the failures when run in the lang suite:&lt;br/&gt;
1) testExpressionNonCorrelated(org.apache.derbyTesting.functionTests.tests.lang.SubqueryTest)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
    Expected: &amp;gt;No open scans, etc.&lt;br/&gt;
16 dependencies found&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;No open scans, etc.&lt;br/&gt;
37 dependencies found&amp;lt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1215)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1014)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:937)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:894)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SubqueryTest.testExpressionNonCorrelated(SubqueryTest.java:316)&lt;br/&gt;
...&lt;br/&gt;
2) testDistinct(org.apache.derbyTesting.functionTests.tests.lang.SubqueryTest)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
    Expected: &amp;gt;No open scans, etc.&lt;br/&gt;
16 dependencies found&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;No open scans, etc.&lt;br/&gt;
37 dependencies found&amp;lt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1215)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1014)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:937)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:894)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SubqueryTest.testDistinct(SubqueryTest.java:1005)&lt;br/&gt;
...&lt;br/&gt;
3) testErrorsInNestedSubqueries(org.apache.derbyTesting.functionTests.tests.lang.SubqueryTest)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
    Expected: &amp;gt;No open scans, etc.&lt;br/&gt;
16 dependencies found&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;No open scans, etc.&lt;br/&gt;
37 dependencies found&amp;lt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1215)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1014)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:937)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:894)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SubqueryTest.testErrorsInNestedSubqueries(SubqueryTest.java:1622)&lt;/p&gt;</comment>
                            <comment id="13199840" author="dagw" created="Fri, 3 Feb 2012 16:42:01 +0000"  >&lt;p&gt;&amp;gt; Another issue I ran into with assertSequence, is that one of the table&lt;br/&gt;
&amp;gt; names has an &apos;_&apos;. The method converts underscores to tabs, presumably&lt;br/&gt;
&amp;gt; attempting to make the strings in the tests more manageable.&lt;/p&gt;

&lt;p&gt;Yes, I found it hard to handle otherwise &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; I adjusted the assertSequence method to only replace _ for tabs in&lt;br/&gt;
&amp;gt; the first 15 characters, assuming that we&apos;d not go further than 15&lt;br/&gt;
&amp;gt; levels...&lt;/p&gt;

&lt;p&gt;Probably fine. You could also only convert leading underscores, since&lt;br/&gt;
I think that&apos;s the only place where the translation is needed/expected&lt;br/&gt;
if I remember correctly. Sorry for the fragile code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13199843" author="dagw" created="Fri, 3 Feb 2012 16:45:33 +0000"  >&lt;p&gt;&amp;gt; However, I have one concern before this is ready for commit: when&lt;br/&gt;
&amp;gt; running the test by itself, it passes, but when running it in the&lt;br/&gt;
&amp;gt; lang._Suite, the dependencies are different in 3 fixtures, suggesting&lt;br/&gt;
&amp;gt; some other test is leaving stuff behind.&lt;/p&gt;

&lt;p&gt;It would probably be good to figure out where these come from..&lt;/p&gt;</comment>
                            <comment id="13204585" author="myrna" created="Thu, 9 Feb 2012 15:25:52 +0000"  >&lt;p&gt;I&apos;m attaching a second version of the patch. &lt;br/&gt;
In this, I&apos;ve removed the checks for the dependencies.&lt;/p&gt;

&lt;p&gt;I checked laboriously through lang._Suite.java and identified the following tests to leave behind dependencies (i.e. make the dependencies in the previous patch&apos;s SubqueryTest fail):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;CreateTableFromQueryTest&lt;/li&gt;
	&lt;li&gt;ForBitDataTest&lt;/li&gt;
	&lt;li&gt;CollationTest2&lt;/li&gt;
	&lt;li&gt;TableFunctionTest&lt;/li&gt;
	&lt;li&gt;SynonymTest&lt;/li&gt;
	&lt;li&gt;ViewsTest&lt;br/&gt;
I tried to eliminate dependencies from CreateTableFromQueryTest, but was unsuccessful...&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And thinking about it, the purpose of the SubqueryTest is not to check for added dependencies. So, instead of spending more time on this, I decided to eliminate the checks.&lt;/p&gt;

&lt;p&gt;If a test intends to check for dependencies it should probably create its own singleuse database.&lt;/p&gt;

&lt;p&gt;Full suites.All tests ran cleanly for me on Linux with ibm 1.6. I intend to commit soon and probably backport to 10.8.&lt;/p&gt;</comment>
                            <comment id="13205013" author="dagw" created="Thu, 9 Feb 2012 23:09:26 +0000"  >&lt;p&gt;Thanks for checking, Myrna. I&apos;m OK with your solution. However, most tests should clean up as much as possible, I think. At least if that is faster than creating and deleting single use databases, and I think it is? Regression test running time is always a challenge.. Good you documented those tests leaving deps behind.&lt;/p&gt;</comment>
                            <comment id="13205071" author="myrna" created="Fri, 10 Feb 2012 00:00:47 +0000"  >&lt;p&gt;committed the patch without dependency check with revision 1242409, and made two further minor cleanup check-ins with revision 1242413  and 1242460. Backported to 10.8 with revision 1242612. &lt;/p&gt;</comment>
                            <comment id="13823394" author="knutanders" created="Fri, 15 Nov 2013 08:15:08 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update: close all resolved issues that haven&amp;#39;t had any activity the last year&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12513086" name="DERBY-3808_1.diff" size="209710" author="myrna" created="Fri, 3 Feb 2012 00:44:36 +0000"/>
                            <attachment id="12513085" name="DERBY-3808_1.stat" size="209710" author="myrna" created="Fri, 3 Feb 2012 00:44:36 +0000"/>
                            <attachment id="12513968" name="DERBY-3808_2.diff" size="208427" author="myrna" created="Thu, 9 Feb 2012 15:25:52 +0000"/>
                            <attachment id="12391668" name="DERBY_3808_diff_07_10.txt" size="200229" author="mkutty" created="Tue, 7 Oct 2008 21:08:16 +0100"/>
                            <attachment id="12391667" name="DERBY_3808_stat_07_10.txt" size="513" author="mkutty" created="Tue, 7 Oct 2008 21:08:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Oct 2008 17:55:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23853</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10426"><![CDATA[Known fix]]></customfieldvalue>
    <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy09zr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35437</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>