<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3523/DERBY-3523.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3523] sql states (X0Y63, X0Y63, X0Y63.S) related to nulls in unique constraints are associated with wrong message texts </title>
                <link>https://issues.apache.org/jira/browse/DERBY-3523</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;There are three messages which after Derby-3330 checkin now giving wrong information. These are&lt;/p&gt;

&lt;p&gt;42831:&apos;&lt;/p&gt;
{0}&apos; cannot be a column of a primary key or unique key because it can contain null values.&lt;br/&gt;
42Z20:Column &apos;{0}
&lt;p&gt;&apos; cannot be made nullable. It is part of a primary key or unique constraint, which cannot have any null able columns.&lt;br/&gt;
X0Y63.S:The command on table &apos;&lt;/p&gt;
{0}
&lt;p&gt;&apos; failed because null data was found in the primary key or unique constraint/index column(s). All columns in a primary or unique index key must not be null.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12390770">DERBY-3523</key>
            <summary>sql states (X0Y63, X0Y63, X0Y63.S) related to nulls in unique constraints are associated with wrong message texts </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="anurag">Anurag Shekhar</reporter>
                        <labels>
                            <label>derby_triage10_5_2</label>
                    </labels>
                <created>Tue, 11 Mar 2008 16:50:37 +0000</created>
                <updated>Tue, 15 Feb 2011 21:09:04 +0000</updated>
                                            <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12577511" author="anurag" created="Tue, 11 Mar 2008 16:52:03 +0000"  >&lt;p&gt;There can be two ways to fix this problem&lt;/p&gt;

&lt;p&gt;1. Change the message to remove unique constraint from the message.&lt;/p&gt;

&lt;p&gt;Problem&lt;br/&gt;
During soft upgrade run unique constraint can&apos;t have null able columns. &lt;br/&gt;
While using the data base throwing new message may give wrong information &lt;br/&gt;
to the user claiming that he was using primary key when actually he was using &lt;br/&gt;
unique constraint.&lt;/p&gt;


&lt;p&gt;2. Introduce new message with a new state and use older state only during soft upgrade run.&lt;/p&gt;

&lt;p&gt;Problem&lt;br/&gt;
There will be impact of existing application if they are relying on &lt;br/&gt;
sql state to detect the cause of failure in creating primary key.&lt;/p&gt;</comment>
                            <comment id="12577517" author="kmarsden" created="Tue, 11 Mar 2008 17:08:55 +0000"  >&lt;p&gt;I see examples in messages.xml, such as 8006 where we have more than one instance of a message with the same SQLState but different messages.   Is that a possibility.&lt;/p&gt;</comment>
                            <comment id="12577750" author="jorgenlo" created="Wed, 12 Mar 2008 08:15:39 +0000"  >&lt;p&gt;(Attaching mail thread)&lt;/p&gt;

&lt;p&gt;Narayanan wrote:&lt;br/&gt;
&amp;gt; J&#248;rgen L&#248;land wrote:&lt;br/&gt;
&amp;gt;&amp;gt; Mike Matrigali wrote:&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt; It does seem like the best case would be for the error message &lt;br/&gt;
&amp;gt;&amp;gt; system to&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt; somehow return a different error message for the same number if it is&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt; in soft upgrade vs. hard upgrade.  Does the error message system &lt;br/&gt;
&amp;gt;&amp;gt; support&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt; such a thing?&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; Yes, it does. If you want multiple messages with the same SQL state, &lt;br/&gt;
&amp;gt;&amp;gt; you need to add the &quot;.&amp;lt;severity&amp;gt;.&amp;lt;#&amp;gt;&quot; information to the error state &lt;br/&gt;
&amp;gt;&amp;gt; in SQLState.java. E.g, all these messages have SQL State 08004:&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; ----- snip from SQLState.java ----&lt;br/&gt;
&amp;gt;&amp;gt; String LOGIN_FAILED = &quot;08004&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; String NET_CONNECT_AUTH_FAILED                          = &quot;08004.C.1&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; String NET_DATABASE_NOT_FOUND                           = &quot;08004.C.2&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; String AUTH_DATABASE_CONNECTION_REFUSED                 = &quot;08004.C.3&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; String AUTH_SHUTDOWN_NOT_DB_OWNER                       = &quot;08004.C.4&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; String AUTH_ENCRYPT_NOT_DB_OWNER                        = &quot;08004.C.5&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; ...&lt;br/&gt;
&amp;gt;&amp;gt; ----- snip -------&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; If, e.g., both these messages&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; &apos;&lt;/p&gt;
{0}&apos; cannot be a column of a primary key or unique key because it can &lt;br/&gt;
&amp;gt;&amp;gt; contain null values.&lt;br/&gt;
&amp;gt;&amp;gt; &apos;{0}
&lt;p&gt;&apos; cannot be a column of a primary key because it can contain null &lt;br/&gt;
&amp;gt;&amp;gt; values.&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; ... should have the same 42831 error code, you would need something &lt;br/&gt;
&amp;gt;&amp;gt; like this in the SQLState.java file:&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; String LANG_DB2_ADD_UNIQUE_OR_PRIMARY_KEY_ON_NULL_COLS = &quot;42831.S.1&quot;;&lt;br/&gt;
&amp;gt;&amp;gt; String LANG_DB2_ADD_PRIMARY_KEY_ON_NULL_COLS = &quot;42831.S.2&quot;;&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; &apos;S&apos; because 42831 is statement severity level (see class javadoc in &lt;br/&gt;
&amp;gt;&amp;gt; SQLState.java), while 1 and 2 are used to tell the messages apart. &lt;br/&gt;
&amp;gt;&amp;gt; messages.xml also needs to be updated, of course.&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; But how will this  help in printing different error messages in hard and &lt;br/&gt;
&amp;gt; soft upgrade? I thought this would be useful&lt;br/&gt;
&amp;gt; in grouping together the same family of messages, but can this act as a &lt;br/&gt;
&amp;gt; switch for messages that need to be printed&lt;br/&gt;
&amp;gt; in hard and soft upgrade?&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Narayanan&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;I misinterpreted Mike&apos;s question. The code where these exceptions are thrown needs to explicitly use the correct exception. However, this is the same thing that must be done if fix suggestion 2 is chosen. &lt;/p&gt;

&lt;p&gt;I think suggestion 2 should be modified like this:&lt;/p&gt;

&lt;p&gt;2b: Introduce new message without changing the state and use old messages only during soft upgrade run.&lt;/p&gt;</comment>
                            <comment id="12577761" author="narayanan" created="Wed, 12 Mar 2008 08:47:13 +0000"  >&lt;p&gt;Anurag says -&lt;/p&gt;

&lt;p&gt;thanks every one for pitching.&lt;br/&gt;
Let me try to summarize it&lt;/p&gt;

&lt;p&gt;Derby doesn;t directly supports choosing message based on&lt;br/&gt;
the type of run (soft upgrade more or a regular mode), but it&lt;br/&gt;
does allow associating multiple messages to a single sql state&lt;br/&gt;
bye adding &quot;.&quot; extension (sqlstate.1, sqltate.2 etc).&lt;br/&gt;
From the code this can be used to throw correct error message&lt;br/&gt;
after detecting the mode engine is running under (use existing sql&lt;br/&gt;
states during soft upgrade and newer once during regular operation).&lt;/p&gt;

&lt;p&gt;The extensions of the sql state is dropped while setting the sql&lt;br/&gt;
state to SQLException so user won&apos;t experience any difference&lt;br/&gt;
during soft upgrade and will get newer message with same sql state&lt;br/&gt;
during regular operation.&lt;/p&gt;</comment>
                            <comment id="12577883" author="anurag" created="Wed, 12 Mar 2008 15:51:05 +0000"  >&lt;p&gt;I am planning to introduce similar to the following &lt;/p&gt;


&lt;p&gt;String errorState = null;&lt;br/&gt;
if (getLanguageConnectionContext().getDataDictionary()&lt;br/&gt;
            .checkVersion(DataDictionary.DD_VERSION_DERBY_10_4,&lt;br/&gt;
             null))&lt;/p&gt;
{
       errorState =
              SQLState.LANG_MODIFY_COLUMN_EXISTING_PRIMARY_KEY;
}
&lt;p&gt;else&lt;/p&gt;
{
//soft upgrade mode
errorState =
        SQLState.LANG_MODIFY_COLUMN_EXISTING_CONSTRAINT;
}
&lt;p&gt;throw StandardException.newException(errorState, name);&lt;/p&gt;



&lt;p&gt;List of effected files&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/TableElementList.java&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java&lt;br/&gt;
java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;br/&gt;
java/engine/org/apache/derby/loc/messages.xml&lt;/p&gt;


&lt;p&gt;In addition to these, out files of few harness tests will also need modifications.&lt;/p&gt;

</comment>
                            <comment id="12577893" author="narayanan" created="Wed, 12 Mar 2008 16:07:13 +0000"  >&lt;p&gt;You could consider introducing a newException method in the StandardException class&lt;br/&gt;
that would accept two SQLStates (one for hard, one for soft upgrade), the data dictionary&lt;br/&gt;
version.&lt;/p&gt;

&lt;p&gt;This method would use the appropriate SQLState depending on whether hard upgrade&lt;br/&gt;
or soft upgrade is being done for the mentioned data dictionary version.&lt;/p&gt;</comment>
                            <comment id="12577911" author="anurag" created="Wed, 12 Mar 2008 16:40:40 +0000"  >&lt;p&gt;I don&apos;t think adding information about specific sql states StandardException is a good idea.&lt;/p&gt;

&lt;p&gt;Its not very frequently where error messages needs modification. I prefer keeping information about it in the respective classes only. These classes are anyway aware about the soft upgrade as they allow or disallow creation of unique constraint based on it.&lt;/p&gt;

&lt;p&gt;StanduardException does very specialized job of creating SQLException and filling it with SQLState and messages. IMO Its better if we don&apos;t add too many functionality to it.&lt;/p&gt;</comment>
                            <comment id="12577934" author="mikem" created="Wed, 12 Mar 2008 17:15:30 +0000"  >&lt;p&gt;thanks for everyone&apos;s input on this, I didn&apos;t realize we had this flexibility with the messages so now definitely don&apos;t think we should create new states for these messsages.  Given the existing support seems like best solution would be to return same error number but different message.  I will leave it to Anurag whether to inline the code that figures out which message, or&lt;br/&gt;
to create a utility routine somewhere.&lt;/p&gt;</comment>
                            <comment id="12577939" author="narayanan" created="Wed, 12 Mar 2008 17:20:15 +0000"  >&lt;p&gt;&amp;gt;I don&apos;t think adding information about specific sql states StandardException is a good idea.&lt;/p&gt;

&lt;p&gt;Sorry about the ambiguity in the previous comment. I did not mean to ask you to push this specific&lt;br/&gt;
SQLState creation into StandardException. &lt;/p&gt;

&lt;p&gt;If you were to following my suggestion you would have one method in StandardException whose&lt;br/&gt;
&quot;first three&quot; parameters would probably be (String SQLState1, String SQLState2, &amp;lt;type of upgrade&amp;gt;).&lt;/p&gt;

&lt;p&gt;In the simplest case You could choose the type of upgrade to be a boolean called hardupgrade, where&lt;br/&gt;
it being,&lt;br/&gt;
false - would indicate that SQLState1 is to be used&lt;br/&gt;
true  - would indicate that SQLState2 is to be used&lt;/p&gt;

&lt;p&gt;In the above case you would be retaining the logic for determining if it is a hard or a soft upgrade&lt;br/&gt;
in the calling method.&lt;/p&gt;

&lt;p&gt;You could even decide on pushing the type of upgrade deciding logic into StandardException based on&lt;br/&gt;
if you think it would be appropriate.&lt;/p&gt;

&lt;p&gt;Ofcourse I must say I do agree with&lt;/p&gt;

&lt;p&gt;&quot;StanduardException does very specialized job of creating SQLException and filling it with SQLState and messages. &lt;br/&gt;
IMO Its better if we don&apos;t add too many functionality to it.&quot;&lt;/p&gt;

&lt;p&gt;you have a strong case and your argument does leave me in a dilemna as to what would be most appropriate here.&lt;/p&gt;

&lt;p&gt;Sorry about the confusion, &lt;/p&gt;

&lt;p&gt;&amp;lt;Narayanan tells himself not to write comments on JIRA issues when it is past&lt;br/&gt;
bed-time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;gt;&lt;/p&gt;</comment>
                            <comment id="12578252" author="anurag" created="Thu, 13 Mar 2008 11:41:17 +0000"  >&lt;p&gt;This patch () adds new messages for X0Y63, X0Y63 and X0Y63.S&lt;/p&gt;

&lt;p&gt;I have added new message ids X0Y63.1, X0Y63.1, X0Y63.S.1 and assigned &lt;br/&gt;
new messages to them. I have also introduced new constraints in SQLState to point to these message ids.&lt;/p&gt;

&lt;p&gt;A new method in StandardException (newException (string, string, boolean, Object), &lt;br/&gt;
based on 3rd parameter,  decides weather to use existing message id or the newer &lt;br/&gt;
one.&lt;/p&gt;

&lt;p&gt;Modified files&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;/p&gt;

&lt;p&gt;Modified existing checkVersion method to return boolean (same as DataDictionary.checkVersion).&lt;/p&gt;

&lt;p&gt;Updated two instances where X0Y63 was thrown to use new method from StandardExcetion to use message based on mode its running under.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/sql/compile/TableElementList.java&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java&lt;/p&gt;

&lt;p&gt;Updated to choose between older and newer message using StandardExcetion.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java&lt;/p&gt;

&lt;p&gt;Added additional identify SQLState.LANG_NULL_DATA_IN_PRIMARY_KEY as case &lt;br/&gt;
where setting not null is possible because of constraint.&lt;/p&gt;


&lt;p&gt;java/engine/org/apache/derby/iapi/error/StandardException.java&lt;br/&gt;
Added a new method which accepts two message id and decides which one to use based on third parameter (boolean).&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/loc/messages.xml&lt;/p&gt;

&lt;p&gt;added new messages and message id.&lt;/p&gt;

&lt;p&gt;java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;br/&gt;
added constant for new message ids.&lt;/p&gt;

&lt;p&gt;java/testing/org/apache/derbyTesting/functionTests/master/db2Compatibility.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/altertable.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/nulls.out&lt;/p&gt;

&lt;p&gt;updated tests results to expect new message.&lt;/p&gt;</comment>
                            <comment id="12578264" author="jorgenlo" created="Thu, 13 Mar 2008 12:05:43 +0000"  >&lt;p&gt;I think the severity-level (&apos;S&apos;) is mandatory if the SQL state is more than 5 characters long. Thus, I think you need to use 42831.S.1 instead of 42831.1. I might be wrong, but at least that&apos;s how I interpret the SQLState class javadoc:&lt;/p&gt;

&lt;p&gt;&quot;The SQL state of an error message dictates the error&apos;s severity.&lt;br/&gt;
	The severity is determined from the first two characters of the&lt;br/&gt;
	state if the state is five characters long, otherwise the state&lt;br/&gt;
	is expected to be 7 characters long and the last character determines&lt;br/&gt;
	the state. If the state is seven characters long then only the first&lt;br/&gt;
	five will be seen by the error reporting code and exception.&quot;&lt;/p&gt;</comment>
                            <comment id="12578296" author="anurag" created="Thu, 13 Mar 2008 13:59:29 +0000"  >&lt;p&gt;Thanks Jorgen for pointing out.&lt;/p&gt;

&lt;p&gt;Attaching new version (derby-3523v2.diff) with new ids (severity set to S)&lt;/p&gt;</comment>
                            <comment id="12578385" author="kmarsden" created="Thu, 13 Mar 2008 16:48:21 +0000"  >&lt;p&gt;Thank you for the patch.  It looks good to me except I am a bit unsure about the new method in StandardException.  It seems specialized for the single argument case and a little out of place.  I think I would rather see the logic in the calling code, but I realize this was discussed earlier and perhaps this was the consensus that was reached.  If I am the only one that is uncomfortable with it I will go ahead and commit the patch as is tomorrow.&lt;/p&gt;

&lt;p&gt;Should we have tests for the soft upgrade case?&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12578390" author="djd" created="Thu, 13 Mar 2008 17:03:58 +0000"  >&lt;p&gt;The new method in StandardException seems a little overkill for what really could be a ? : operator in the calling code.&lt;/p&gt;

&lt;p&gt; String sqlState = checkVersion(....) ? SQLState.XXX : SQLState.YYY;&lt;/p&gt;

&lt;p&gt;If the method is to be kept, it might be clearer to have its name reflect what it is doing. Just reading the calling code in its current from&lt;br/&gt;
might make the reader think that it returns an exception with two SQLStates, e.g. one nested within the other.&lt;/p&gt;

&lt;p&gt;Having the ? : code in-line I think would be clearer code.&lt;/p&gt;</comment>
                            <comment id="12578555" author="narayanan" created="Fri, 14 Mar 2008 00:35:11 +0000"  >&lt;p&gt;&amp;gt;The new method in StandardException seems a little overkill for what really could be a ? : operator in the calling code.&lt;/p&gt;

&lt;p&gt;&amp;gt; String sqlState = checkVersion(....) ? SQLState.XXX : SQLState.YYY;&lt;/p&gt;

&lt;p&gt;&amp;gt; If the method is to be kept, it might be clearer to have its name reflect what it is doing.&lt;/p&gt;

&lt;p&gt;I agree that using ? : would be a better way of implementing this and also that the name of the method&lt;br/&gt;
could probably be changed to reflect what it is doing.&lt;/p&gt;

&lt;p&gt;But I do not agree that it is overkill to factor out logic to choose a SQLState based on whether it is soft or&lt;br/&gt;
hard upgrade.&lt;/p&gt;

&lt;p&gt;Why would it be wrong to put in a utility method in StandardException that chooses one of the two&lt;br/&gt;
SQLStates based on a boolean if a valid case for its usage could be justified (e.g. choosing one&lt;br/&gt;
based on if it is hard or soft upgrade) ?&lt;/p&gt;

&lt;p&gt;This is not a case that is specific to the class using this logic but a generic case that could&lt;br/&gt;
occur in multiple parts of the codebase.&lt;/p&gt;</comment>
                            <comment id="12578667" author="anurag" created="Fri, 14 Mar 2008 09:50:07 +0000"  >&lt;p&gt;I have taken off the new method from standardException and moved the code &lt;br/&gt;
to select mesage id inline derby-3523v3.diff.&lt;/p&gt;

&lt;p&gt;I don&apos;t any strong feeling about either of the approach. Based on  &lt;br/&gt;
discussion either v2 (with new method in StandardException) and v3 (inline &lt;br/&gt;
message id selection) can be used.&lt;/p&gt;</comment>
                            <comment id="12578843" author="kmarsden" created="Fri, 14 Mar 2008 16:40:57 +0000"  >&lt;p&gt;Thanks Anurag, the v3 patch looks good. I verified the soft upgrade messages manually and am running tests and then will commit.&lt;br/&gt;
It would be nice to have upgrade tests in a follow-up patch.&lt;/p&gt;
</comment>
                            <comment id="12581507" author="anurag" created="Mon, 24 Mar 2008 10:08:11 +0000"  >&lt;p&gt;thanks kathey for committing the patch. &lt;br/&gt;
I will upload the followup patch with updated upgrade tests in a days time.&lt;/p&gt;</comment>
                            <comment id="12582207" author="anurag" created="Wed, 26 Mar 2008 09:41:29 +0000"  >&lt;p&gt;upgrade tests for modified error messages.&lt;/p&gt;</comment>
                            <comment id="12582343" author="kmarsden" created="Wed, 26 Mar 2008 16:55:23 +0000"  >&lt;p&gt;Committed revision 641398 for the upgrade tests.&lt;/p&gt;</comment>
                            <comment id="12582462" author="kmarsden" created="Wed, 26 Mar 2008 22:40:27 +0000"  >&lt;p&gt;Backed out the change to the upgrade tests. It was causing failures in the &lt;br/&gt;
tinderbox run.&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-641405.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-641405.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12582582" author="anurag" created="Thu, 27 Mar 2008 10:06:48 +0000"  >&lt;p&gt;In Derby 10.0 the syntax for creating primary key along with table creation was &lt;/p&gt;

&lt;p&gt;create table t1 (i integer not null primary key)&lt;/p&gt;

&lt;p&gt;in latter version not null wasn&apos;t mandatory. In my previous patch there was no &apos;not null&apos; and thats why there were failure. &lt;br/&gt;
I had tested it with upgrades from 10.3 only. Sorry for the trouble.&lt;/p&gt;

&lt;p&gt;In my new patch I have added &apos;not null; in create table statement and also checking if the version is at least 10.2 while trying &quot;alter table alter column i null&quot; as this was not &lt;br/&gt;
available in 10.2. &lt;/p&gt;

&lt;p&gt;I have tested upgrade tests with following version in release directory&lt;/p&gt;

&lt;p&gt;10.0.2.1 &lt;br/&gt;
10.1.1.0  &lt;br/&gt;
10.1.2.1  &lt;br/&gt;
10.1.3.1 &lt;br/&gt;
10.2.1.6  &lt;br/&gt;
10.2.2.0  &lt;br/&gt;
10.3.1.4  &lt;br/&gt;
10.3.2.1&lt;/p&gt;</comment>
                            <comment id="12727777" author="espinha" created="Mon, 6 Jul 2009 21:44:50 +0100"  >&lt;p&gt;Triaged for 10.5.2. &lt;br/&gt;
It seems like this issue is fixed.&lt;/p&gt;

&lt;p&gt;Kathey, can you resolve if it is?&lt;/p&gt;</comment>
                            <comment id="12728368" author="kmarsden" created="Tue, 7 Jul 2009 22:09:24 +0100"  >&lt;p&gt;No I don&apos;t think this is ready to be resolved. It looks like I committed a patch and then backed it out and then there was another one posted that hasn&apos;t been committed.  Maybe it should be marked patch available and we can see if the patch still applies.&lt;/p&gt;</comment>
                            <comment id="12782498" author="dagw" created="Wed, 25 Nov 2009 16:48:50 +0000"  >&lt;p&gt;Unassigning this, as there has been no activity on it for quite some time, so others can pick it up.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12386534">DERBY-3330</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12378620" name="derby-3523-upgradetest.diff" size="3955" author="anurag" created="Wed, 26 Mar 2008 09:41:29 +0000"/>
                            <attachment id="12378702" name="derby-3523-upgradetest_v2.diff" size="4144" author="anurag" created="Thu, 27 Mar 2008 10:06:48 +0000"/>
                            <attachment id="12377768" name="derby-3523v1.diff" size="15879" author="anurag" created="Thu, 13 Mar 2008 11:41:17 +0000"/>
                            <attachment id="12377781" name="derby-3523v2.diff" size="15887" author="anurag" created="Thu, 13 Mar 2008 13:59:29 +0000"/>
                            <attachment id="12377886" name="derby-3523v3.diff" size="14740" author="anurag" created="Fri, 14 Mar 2008 09:50:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Mar 2008 17:08:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23687</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0iiv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>