<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:07:42 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-962/DERBY-962.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-962] Upgrade default security mechanism in client to use encrypted userid password if client can support it.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-962</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently in the client, if userid and password are set in the connection url, the default security mechanism is upgraded to USRIDPWD (which is clear text userid and password).  This seems to be a security hole here. &lt;/p&gt;

&lt;p&gt;Current client  driver supports encrypted userid/password (EUSRIDPWD) via the use of DH key-agreement protocol - however current Open Group DRDA specifications imposes small prime and base generator values (256 bits) that prevents other JCE&apos;s  (apt from ibm jce) to be used as java cryptography providers.  &lt;/p&gt;

&lt;p&gt;Some thoughts:&lt;br/&gt;
&amp;#8211; client can make a check to see if it the jvm it is running in supports the encryption necessary for EUSRIDPWD. If it supports, then the client can upgrade to EUSRIDPWD. &lt;br/&gt;
&amp;#8211; if the jvm the client is running is , doesnt support encryption requirements for EUSRIDPWD, then the security mechanism will be set to USRIDPWD.&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-528&quot; title=&quot;Support for DRDA Strong User ID and Password Substitute Authentication (USRSSBPWD) scheme&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-528&quot;&gt;&lt;del&gt;DERBY-528&lt;/del&gt;&lt;/a&gt; will add support for strong userid and password which is another option to send encrypted passwords across the wire. When this gets added, maybe this can be considered as one of the upgrade options after EUSRIDPWD. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12328892">DERBY-962</key>
            <summary>Upgrade default security mechanism in client to use encrypted userid password if client can support it.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="skambha">Sunitha Kambhampati</assignee>
                                    <reporter username="skambha">Sunitha Kambhampati</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Feb 2006 18:51:00 +0000</created>
                <updated>Thu, 13 Dec 2007 09:04:47 +0000</updated>
                            <resolved>Fri, 17 Mar 2006 11:41:06 +0000</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12366173" author="skambha" created="Mon, 13 Feb 2006 19:04:47 +0000"  >&lt;p&gt;The current behavior even if the security mechanism is explicitly set in the connection url, the upgrade is done--  should this happen.&lt;/p&gt;

&lt;p&gt;I think we should not upgrade (override) if user has explicitly set the security mechanism. Thoughts ?&lt;/p&gt;

&lt;p&gt;see ClientBaseDataSource# getUpgradedSecurityMechanism()  for code where the upgrade from USRIDONL to USRIDPWD is done.&lt;/p&gt;</comment>
                            <comment id="12366521" author="bryanpendleton" created="Thu, 16 Feb 2006 03:53:37 +0000"  >&lt;p&gt;I agree, Sunitha. If the user says something like:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby://localhost:1527/testdb;create=true;securityMechanism=4;user=bryan;password=bryan&apos;; &lt;/p&gt;

&lt;p&gt;we should not quietly change the securityMechanism to 3 and quietly send the password in the clear. That&apos;s a bad default to have.&lt;/p&gt;

&lt;p&gt;The user has given us conflicting information, and we should ask them to either change the securityMechanism to one which supports a password, or remove the password.&lt;/p&gt;

&lt;p&gt;I can see the appeal of quietly upgrading to a secure securityMechanism (one which doesn&apos;t expose the password over the wire), but in general my preference would be to give them an error saying that their request is ambiguous, rather than trying to guess what sort of alternate securityMechanism they may have wanted.&lt;/p&gt;</comment>
                            <comment id="12366737" author="skambha" created="Fri, 17 Feb 2006 11:53:42 +0000"  >&lt;p&gt;I just started looking at this issue on how to know if the jvm in which the client is running can support encrypted userid and password mechanism or not;  to decide if we can upgrade the default security mechanism.  &lt;/p&gt;

&lt;p&gt;I wanted to share some thoughts I have, so I could get early feedback from the list.&lt;/p&gt;

&lt;p&gt;Current client  driver supports encrypted userid/password (EUSRIDPWD) via the use of DH key-agreement protocol - however current Open Group DRDA specifications imposes small prime and base generator values (256 bits) that prevents other JCE&apos;s  (apt from ibm jce) to be used as java cryptography providers.  &lt;/p&gt;

&lt;p&gt;&amp;#8211; org.apache.derby.client.am.EncryptionManager (EM) constructor is responsible for instantiating the appropriate Provider and the KeyPairGenerator.  The Sun JCE throws java.security.InvalidAlgorithmParameterException exception when trying to use the 256bits prime. &lt;/p&gt;

&lt;p&gt;I think we can conclude if the EM throws an exception, then the JCE doesnt support the required algorithms.&lt;br/&gt;
=&amp;gt; An exception from this constructor indicates that it is not possible to use encrypted userid/password.&lt;/p&gt;

&lt;p&gt;The next step seems to me to decide where to put the call to new EncryptionManager(EM)&lt;br/&gt;
#A.Put in static initializer block in ClientBaseDataSource and store the result in a static variable.  The ClientBaseDataSource seems to be place where all the url attribute values&apos; gets and sets methods are present. Also the upgrade logic for the security mechanism is in this class.&lt;/p&gt;

&lt;p&gt;something like:&lt;br/&gt;
static boolean SUPPORTS_EUSRIDPWD = false;&lt;br/&gt;
static&lt;br/&gt;
{&lt;br/&gt;
    try&lt;br/&gt;
    &lt;/p&gt;
{
        
        new org.apache.derby.client.am.EncryptionManager(null);
        SUPPORTS_EUSRIDPWD = true;
    }
&lt;p&gt;catch(Exception e)&lt;/p&gt;
    {
       //ignore
    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;#B. Another place this check could go was in the ClientDriver itself since this will be loaded  in the JVM. In the static initializer of ClientDriver, new of EM can be done to check if it will go through OK. If so, a static &apos;protected&apos; variable in ClientDriver can be used to store the state that the driver supports the algorithms required for encrypted userid/password.&lt;/p&gt;

&lt;p&gt;1. Are there any issues with adding code to the static initializer block of the Client Driver. I see the following comment in ClientDriver which sounds a little scary to me. &lt;/p&gt;

&lt;p&gt;static {&lt;br/&gt;
       // This may possibly hit the race-condition bug of java 1.1.&lt;br/&gt;
        // The Configuration static clause should execute before the following line does.&lt;br/&gt;
	 if (Configuration.exceptionsOnLoadResources != null) &lt;/p&gt;
{
......
}

&lt;p&gt;I can see that the Configuration static initializer needs to run before the access to the static variable Configuration.exceptionsOnLoadResources. &lt;/p&gt;

&lt;p&gt;I&apos;m curious and would like to look at it sometime. If someone could point me to some reference of this bug, I&apos;d be grateful. I googled but didnt find any related to the static intializer blocks. &lt;br/&gt;
--------------&lt;/p&gt;

&lt;p&gt;#C Explicitly check the jvm and decide.  Not a good way for e.g. if SunJCE supports the DH with 256 bits prime some day, we would have to remember to remove this check that disables encrypted userid/password for this particular JVM. &lt;/p&gt;

&lt;p&gt;I like #A because it seems clean.    What do others think ? &lt;/p&gt;

&lt;p&gt;Comments/Thoughts.&lt;/p&gt;

&lt;p&gt;Thanks much,&lt;br/&gt;
Sunitha. &lt;/p&gt;</comment>
                            <comment id="12369317" author="skambha" created="Wed, 8 Mar 2006 05:45:29 +0000"  >&lt;p&gt;Table with combinations of userid/password/security mechanism and what client sends to the server. Uploading now, so I can include this link in the testcase comment..&lt;/p&gt;</comment>
                            <comment id="12369333" author="skambha" created="Wed, 8 Mar 2006 08:27:44 +0000"  >&lt;p&gt;This patch &apos;Derby962.forreview.diff.txt&apos; is a patch for review. This patch needs derby 1080 for it to work. Also there is one testfile which is common between the derby-1080 and this patch and hence it is likely this patch may not apply cleanly once derby1080 gets reviewed and committed.  I generated the diff keeping the changes of derby1080 for the test file (derbynet/testSecMec.java).&lt;/p&gt;

&lt;p&gt;This patch &apos;Derby962.forreview.diff.txt&apos; improves the upgrade security mechanism logic to do the following.&lt;/p&gt;

&lt;p&gt;1. If securityMechanism is explicitly specified in the connection request then client will not override it.&lt;br/&gt;
2. Dynamically figure out if the jvm in which the client is loaded, supports encrypted userid and &lt;br/&gt;
password security (EUSRIDPWD) or not and use this information to upgrade to a more secure default &lt;br/&gt;
security mechanism.&lt;br/&gt;
3. Thus if user has not specified the security mechanism, in that case the client will try to see if &lt;br/&gt;
it can upgrade the security mechanism and use the new upgraded security mechanism for connection to the server.&lt;/p&gt;

&lt;p&gt;Logic in ClientBaseDataSource#getUpgradedSecurityMechanism()&lt;br/&gt;
+     * This method has logic to upgrade security mechanism to a better (more secure) one &lt;br/&gt;
+     * if it is possible.   Currently derby server only has support for USRIDPWD,USRIDONL,&lt;br/&gt;
+     * EUSRIDPWD and this method only considers these possibilities. &lt;br/&gt;
+     * USRIDPWD, EUSRIDPWD require a password, USRIDONL is the only security mechanism&lt;br/&gt;
+     * which does not require password.&lt;br/&gt;
+     * 1. if password is not available, then security mechanism possible is USRIDONL&lt;br/&gt;
+     * 2. if password is available, if client supports EUSRIDPWD, then EUSRIDPWD is &lt;br/&gt;
+     * returned&lt;br/&gt;
+     * 3. if password is available, if client does not support EUSRIDPWD, then USRIDPWD&lt;br/&gt;
+     * is returned.&lt;/p&gt;

&lt;p&gt;Testing:&lt;br/&gt;
&amp;#8211; Added tests with possible permutations for user, password and security mechanism on a connection request.  &lt;br/&gt;
see derbynet/testSecMec.java#testAllCombinationsOfUserPasswordSecMecInput()&lt;/p&gt;

&lt;p&gt;I have attached a table to this jira entry (962_table.txt) that gives information about what security mechanism the client sends to the server on different possible inputs.  &lt;/p&gt;

&lt;p&gt;&amp;#8211; Ran derbyall on linux/ibm142 ok with known failures.&lt;br/&gt;
&amp;#8211; Ran derbynet/testSecMec.java on windows with sane classes for both derbynet(JCC2.4 and JCC2.6) &lt;br/&gt;
/derbynetclientmats with ibm131/ibm15/jdk131/jdk15/ibm142/jdk142.&lt;/p&gt;

&lt;p&gt;Please note: this patch depends and requires fix for derby1080. Most likely when 1080 gets reviewed and committed, this patch may not cleanly apply. &lt;/p&gt;

&lt;p&gt;Can someone please review this change. Thanks.  &lt;/p&gt;</comment>
                            <comment id="12369929" author="kmarsden" created="Sat, 11 Mar 2006 05:53:05 +0000"  >&lt;p&gt;Thanks Sunitha for working on this issue and working toward a secure network client and server.&lt;br/&gt;
I looked at your table and the code patch diff, but did not apply it because I had trouble doing so, so this review is probably pretty rough. &lt;/p&gt;

&lt;p&gt;Your table is very useful and I think it should be incorporated into the test  or code comments.  Perhaps the following could be clarified. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In your explanation of columns in the table you refer to the columns as a), b) etc.  It would be good to put those letters in the column headers.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In your explanations section also list how the numeric values map to the security mechanisms for reference.&lt;br/&gt;
  It is further down on the page, but I noticed that after loooking them up.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The first section of the table is for the case where  no security mechanism is specified.  It would be good to call that  out in a header as  you do before the other sections of the table.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;In the code, I am unsure about the impact of adding this code to the static initializer block.    I know you had asked about it earlier and I wish I had insight to the implications but just don&apos;t.   Hopefully someone else does.&lt;/p&gt;

&lt;p&gt; static&lt;br/&gt;
+    {&lt;br/&gt;
+        try&lt;br/&gt;
+        &lt;/p&gt;
{
+            // The EncryptionManager class will instantiate objects of the required 
+            // security algorithms that are needed for EUSRIDPWD
+            // An exception will be thrown if support is not available
+            // in the JCE implementation in the JVM in which the client
+            // is loaded.
+            new org.apache.derby.client.am.EncryptionManager(null);
+            SUPPORTS_EUSRIDPWD = true;
+        }
&lt;p&gt;catch(Exception e)&lt;br/&gt;
+        &lt;/p&gt;
{
+            // if an exception is thrown, ignore exception.
+            // set SUPPORTS_EUSRIDPWD to false indicating that the client 
+            // does not support EUSRIDPWD security mechanism
+            SUPPORTS_EUSRIDPWD = false;
+        }
&lt;p&gt;+    }&lt;/p&gt;


&lt;p&gt;Maybe it would be good to change SECMEC_HAS_NOT_EXPLICITLY_SET   to something like SECMEC_DEFAULT for clarification.  Something about the negatives in variable names always confuses me.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;

</comment>
                            <comment id="12369951" author="skambha" created="Sat, 11 Mar 2006 09:56:46 +0000"  >&lt;p&gt;This issue requires &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1080&quot; title=&quot;Connection reset when using security mechanism=EUSRIDPWD results in protocol error.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1080&quot;&gt;&lt;del&gt;DERBY-1080&lt;/del&gt;&lt;/a&gt; to be fixed. Also both these issues affect one same file so patch for 962 wont cleanly apply for the file (testSecMec.java).&lt;/p&gt;</comment>
                            <comment id="12370422" author="kmarsden" created="Wed, 15 Mar 2006 05:19:36 +0000"  >&lt;p&gt;Sunitha said:&lt;br/&gt;
&amp;gt;This variable is used to indicate that the security mechanism has not been &amp;gt;set on datasource or connection request.  I can change it to &amp;gt;SECMEC_DEFAULT if that is preferred.&lt;br/&gt;
&amp;gt;Its just that SECMEC_DEFAULT seems to suggest that it is the default &amp;gt;security mechanism which it isnt.  The default security mechanism for the client is USRIDONL (0x04)&lt;/p&gt;

&lt;p&gt;I tend to think that  the default security mechanism is not USRIDONLY but in fact is  variable depending on whether password is specified and whether  the JVM can support EUSRIDPPWD, but the name as you have it is ok.  I don&apos;t feel that strongly about it.&lt;/p&gt;
</comment>
                            <comment id="12370474" author="skambha" created="Wed, 15 Mar 2006 14:48:21 +0000"  >&lt;p&gt;This issue was blocked by derby-1080.  Now that 1080 is committed, I have regenerated the patch for 962 and am attaching Derby962.diff.txt and Derby962.stat.txt.    &lt;/p&gt;

&lt;p&gt;The changes in this patch are the same as compared to the changes in Derby962_forreview.txt that were specific to derby 962,  except for the following:&lt;br/&gt;
&amp;#8211; I have added the table that was in  962_table.txt into the test code  per Kathey&apos;s comments and also added some comments from the jira to the test code. &lt;/p&gt;

&lt;p&gt;I ran derbynetclientmats and derbynetmats ok on linux/ibm142 with the known failures in Surtest.    I ran testSecMec on windows with JCC2.4, JCC2.6 and derbyclient on ibm and sun jvms , versions 131,141,142,15 ok. &lt;/p&gt;

&lt;p&gt;derbyall is still running. I will post results here as they finish. &lt;/p&gt;

&lt;p&gt;Can someone please review this change. Thanks. &lt;/p&gt;</comment>
                            <comment id="12370534" author="skambha" created="Thu, 16 Mar 2006 01:23:10 +0000"  >&lt;p&gt;With the patch Derby962.diff.txt,  derbyall run finished on linux/ibm142 with the known failures ( SurTest, NSInSameJVM).  &lt;/p&gt;</comment>
                            <comment id="12370598" author="kmarsden" created="Thu, 16 Mar 2006 07:14:03 +0000"  >
&lt;p&gt;I don&apos;t have any more comments on this patch. It looks good to me.  Thanks for putting the summary in the test. I think that will really help anyone  looking at this in the future.   It would be great if someone else could look at this patch too.  I will check in first thing tomorrow  if we don&apos;t get any more comments.&lt;/p&gt;


&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;


</comment>
                            <comment id="12370777" author="kmarsden" created="Fri, 17 Mar 2006 11:41:06 +0000"  >&lt;p&gt;Checked this into the trunk:&lt;/p&gt;

&lt;p&gt;Date: Thu Mar 16 17:11:50 2006&lt;br/&gt;
New Revision: 386501&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=386501&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=386501&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12370928" author="skambha" created="Sat, 18 Mar 2006 09:25:52 +0000"  >&lt;p&gt;d962_javadoc.diff.txt  patch to fix javadoc warnings in ClientBaseDataSource.&lt;/p&gt;

&lt;p&gt;I ran javadoc and I did a  successful build (clobber and ant all).   I&apos;d appreciate it a committer could commit this. Thanks. &lt;/p&gt;

&lt;p&gt;Thanks Deepa for reporting this. &lt;/p&gt;</comment>
                            <comment id="12370931" author="kmarsden" created="Sat, 18 Mar 2006 12:01:12 +0000"  >&lt;p&gt;Hi Sunitha,&lt;/p&gt;

&lt;p&gt;Looking at your diff I understand why the first @see was taken out because it was not in a javadoc comment,&lt;br/&gt;
but these two were less clear to me.&lt;/p&gt;

&lt;p&gt;It seems like it would be good instead to keep the @see but use the &lt;br/&gt;
@see  #method(Type argname, Type argname,...) format for these two:&lt;/p&gt;

&lt;p&gt;@@ -807,7 +807,7 @@&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;return the security mechanism&lt;/li&gt;
	&lt;li&gt;if security mechanism has not been set explicitly on datasource&lt;/li&gt;
	&lt;li&gt;then upgrade the security mechanism to a more secure one if possible&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @see #getUpgradedSecurityMechanism()&lt;br/&gt;
+     * See getUpgradedSecurityMechanism()&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@return the security mechanism&lt;br/&gt;
      */&lt;br/&gt;
     public short getSecurityMechanism() {&lt;br/&gt;
@@ -819,7 +819,7 @@&lt;/li&gt;
	&lt;li&gt;if security mechanism has not been set explicitly on datasource&lt;/li&gt;
	&lt;li&gt;then upgrade the security mechanism to a more secure one if possible&lt;/li&gt;
	&lt;li&gt;@param password  password of user&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @see #getUpgradedSecurityMechanism()&lt;br/&gt;
+     * See getUpgradedSecurityMechanism()&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@return the security mechanism&lt;br/&gt;
      */&lt;br/&gt;
     public short getSecurityMechanism(String password) {&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12370934" author="skambha" created="Sat, 18 Mar 2006 13:17:14 +0000"  >&lt;p&gt;Thanks Kathey.  Please look at this patch (d962_javadoc.2.diff.txt) &lt;/p&gt;

&lt;p&gt;I ran javadoc and  did clobber and ant all ok.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12551309" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:47 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12329863">DERBY-1080</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12348525">DERBY-1756</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12323882" name="962_table.txt" size="4652" author="skambha" created="Wed, 8 Mar 2006 05:45:29 +0000"/>
                            <attachment id="12324205" name="Derby962.diff.txt" size="143469" author="skambha" created="Wed, 15 Mar 2006 14:48:21 +0000"/>
                            <attachment id="12324206" name="Derby962.stat.txt" size="809" author="skambha" created="Wed, 15 Mar 2006 14:48:21 +0000"/>
                            <attachment id="12323887" name="Derby962_forreview.diff.txt" size="140790" author="skambha" created="Wed, 8 Mar 2006 08:27:44 +0000"/>
                            <attachment id="12323888" name="Derby962_forreview.stat.txt" size="809" author="skambha" created="Wed, 8 Mar 2006 08:27:44 +0000"/>
                            <attachment id="12324328" name="d962_javadoc.2.diff.txt" size="1477" author="skambha" created="Sat, 18 Mar 2006 13:17:14 +0000"/>
                            <attachment id="12324325" name="d962_javadoc.diff.txt" size="1437" author="skambha" created="Sat, 18 Mar 2006 09:25:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Feb 2006 03:53:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29805</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10ev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39717</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>