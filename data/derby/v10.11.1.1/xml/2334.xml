<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2334/DERBY-2334.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2334] Accept the new collation attribute and store it as a database property. Will be used for language based collation ordering.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2334</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A user would specify the collation desired (UCS_BASIC or TERRITORY_BASED_COLLATION) through the new jdbc url attribute - collation. This attribute will be used to determine collation ordering for character datatypes,&lt;/p&gt;</description>
                <environment></environment>
        <key id="12362821">DERBY-2334</key>
            <summary>Accept the new collation attribute and store it as a database property. Will be used for language based collation ordering.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12345445">DERBY-1478</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Feb 2007 18:37:46 +0000</created>
                <updated>Fri, 21 Jan 2011 18:13:40 +0000</updated>
                            <resolved>Wed, 9 May 2007 22:15:40 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12473161" author="mamtas" created="Wed, 14 Feb 2007 18:48:28 +0000"  >&lt;p&gt;As a first step towards &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1478&quot; title=&quot;Add built in language based ordering and like processing to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1478&quot;&gt;&lt;del&gt;DERBY-1478&lt;/del&gt;&lt;/a&gt; (Add built in language based ordering and like processing to Derby), I have a patch (DERBY2334_AcceptCollationAttribute_diff_V01.txt) which accepts the collation attribute at database create time and saves it in services.properties file. This value can later be retrieved using VALUES SYSCS_UTIL.SYSCS_GET_DATABASE_PROPERTY(&apos;collation&apos;);&lt;/p&gt;

&lt;p&gt;The files impacted by this patch are as follows (also attached as DERBY2334_AcceptCollationAttribute_stat_V01.txt to this Jira entry).&lt;br/&gt;
M      java\engine\org\apache\derby\impl\services\monitor\BaseMonitor.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\services\property\PropertyUtil.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\reference\Attribute.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\reference\Property.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\Driver20.java&lt;br/&gt;
M      java\engine\org\apache\derby\loc\messages.xml&lt;br/&gt;
M      java\shared\org\apache\derby\shared\common\reference\SQLState.java&lt;br/&gt;
M      java\shared\org\apache\derby\shared\common\reference\MessageId.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\GetPropertyInfoTest.out&lt;/p&gt;

&lt;p&gt;Patch description is brief&lt;br/&gt;
1)Changes in BaseMonitor.java does the job of fetching and validating the collation attribute from the url so that it can be saved in services.properties file. If no collation attribute specified, then it gets initialized to UCS_BASIC.&lt;br/&gt;
2)Added collation attribute to the list of properties that get saved in services.properties file. This change went into PropertyUtil.java&lt;br/&gt;
3)All the JDBC attributes are defined in Attribute.java. Added collation to that file.&lt;br/&gt;
4)The 2 valid values for collation attribute are defined in Property.java. They are UCS_BASIC and TERRITORY_BASED_COLLATION&lt;br/&gt;
5)Changes in Driver20 class adds the new string attribute so it can be detected by the generic GUI tools through getPropertyInfo method.***(question at the bottom on this comment)&lt;br/&gt;
6)Added new SQLState and message id for new attribute in messages.xml, SQLState.java and MessageId.java&lt;br/&gt;
7)Needed to update master GetPropertyInfoTest.out so it is aware of the new collation attribute.&lt;/p&gt;

&lt;p&gt;I ran Junit tests and derbyall on Windows XP with Sun&apos;s jdk14 and there were no new failures. &lt;/p&gt;

&lt;p&gt;***One question I have is that we don&apos;t populate choices for value based JDBC url attributes in jdbc/Driver20.java&apos;s getPropertyInfo method). For boolean attributes, we specify the choices as true and false (line 259). We don&apos;t specify the valid list of choices for value based attributes. That might be because for the existing value based attributes, there are no specific Derby defined values. For instance, the existing territory attribute can accept many different kinds of values which are defined by ISO-639 adn ISO-3166 and hence we can&apos;t really give those choices out through getPropertyInfo method. I am wondering if I should spend the time in specifying the &lt;br/&gt;
2 valid choices for the new collation attribute through getPropertyInfo method. If we decide to do this, we will have to make sure that we maintain that choices list for collation as and when Derby starts supporting new value for collation in future.&lt;/p&gt;</comment>
                            <comment id="12473858" author="djd" created="Sat, 17 Feb 2007 00:07:54 +0000"  >&lt;p&gt;I think the BaseMonitor is the incorrect location for checking and setting the collation. I can see why you put it there, to match territory, but territory is an attribute that affects the whole system, such as all error messages. Collation is limited to the SQL subsystem though, much like the handling the log_device is limited to the store code. I think the code related to collation should be in the data dictionary. I think this would mean that the collation setting would be stored as a database property and not in service.properties, I think that means the same api, just not adding the name for the collation property into the list in PropertyUtil.&lt;/p&gt;

&lt;p&gt;Two other thoughts;&lt;br/&gt;
   Having the database property being different to the JDBC attribute might be a good idea, e.g. derby.database.collation, like territory is not stored using territory, but derby.serviceLocale. I&apos;ll try &amp;amp; remember why I think this is a better model. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;  The name TERRITORY_BASED_COLLATION is somewhat awkward. Since it&apos;s being set using collation=TERRITORY_BASED_COLLATION it doesn&apos;t really need the _COLLATION.  It would good for the term to be something that described how the collation was being done, not what other attribute it is based upon. I wonder if there is a standard term for this, UNICODE might be it from SQL Standard (and UniCode10) but more checking is needed. I wonder if Java defines its locale based collators in terms of any standard terms. The code can proceed with the current term, but it might be good to change it before 10.3 is released.&lt;/p&gt;
</comment>
                            <comment id="12474069" author="mamtas" created="Mon, 19 Feb 2007 03:47:39 +0000"  >&lt;p&gt;Dan, I am afraid I don&apos;t understand your comment to it&apos;s entirety. I am planning on spending more time on the logDevice attribute to see how it is handled at the store subsystem level and how that might apply to the collation attribute.&lt;/p&gt;

&lt;p&gt;I do see that logDevice attribute is stored in the services.properties file eventhough that attribute applies to store subsystem. Although th attribute logDevice makes sense at the store code level, it&apos;s applicable to all the databases in the system and that is probably why it is saved in the services.properties file. I see the collation property the same way meaning although it makes sense at the database level code, it applies to all the databases in the system and hence should be saved in the services.properties file. &lt;/p&gt;

&lt;p&gt;So, my question is what do you mean by &quot;collation setting would be stored as a database property and not in service.properties&quot;? In other words, what do you mean by saving a jdbc url attribute as a database property. Do we already do something like that for some existing jdbc url attribute? Can you point me to such an existing jdbc url attribute which gets saved as a database property? In the mean time, I will try to spend more time to understand this.&lt;/p&gt;</comment>
                            <comment id="12474075" author="djd" created="Mon, 19 Feb 2007 04:58:34 +0000"  >&lt;p&gt;logDevice and collation apply to a single database, not all databases in the system. The service.properties file is information for a single database. Ideally the contents of service.properties is the minimal information that is required to boot the service (typically a database). Further database specific information is stored by the storage system, in the properties conglomerate. Thus database properties are stored in either service.properties or the properties conglomerate, though they are set and read the same way. Only if a property is listed in PropertyUtil.servicePropertyList does it get stored in service.properties. Thus if you just removed collation from servicePropertyList  it would automatically get stored within the database (in the properties conglomerate).&lt;/p&gt;

&lt;p&gt;it may be easier to think of this that a JDBC attribute is being used to set a database property. I.e. on boot , the value of collation sets the database property derby.database.collation, with derby.database.collation defaulting to USC_BASIC if the attribute is not provided.&lt;/p&gt;</comment>
                            <comment id="12474077" author="mamtas" created="Mon, 19 Feb 2007 05:25:55 +0000"  >&lt;p&gt;Dan, thanks for your response. I will look around in the boot code to see where I can code the translation from JDBC attribute collation to database property derby.database.collation. I was thinking of doing it in my new method BaseMonitor.retrieveCollationAttribute but from your earlier comment (dated 16th Feb), it sounded like BaseMonitor is not the right place to do it. &lt;/p&gt;

&lt;p&gt;BTW, one another question, where can I find the Derby code where database properties get written into properties conglomerate? Thanks&lt;/p&gt;</comment>
                            <comment id="12474079" author="mamtas" created="Mon, 19 Feb 2007 05:38:23 +0000"  >&lt;p&gt;Actually, I think I found where the property conglomerate writing happens. Seems like it is at org.apache.derby.impl.store.access.PropertyConglomerate &lt;/p&gt;
</comment>
                            <comment id="12474469" author="mamtas" created="Tue, 20 Feb 2007 15:24:10 +0000"  >&lt;p&gt;I have a revised patch for this Jira entry attached as DERBY2334_AcceptCollationAttribute_diff_V02.txt and svn stat -q attached as DERBY2334_AcceptCollationAttribute_stat_V02.txt&lt;/p&gt;

&lt;p&gt;This patch moves the code for JDBC url attribute collation to boot method in DataDictionaryImpl.java Once the value for the attribute is validated, it is converted to database property derby.database.collation. This property will get saved in the property conglomerate.&lt;/p&gt;

&lt;p&gt;The svn stat -q o/p is as follows&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\catalog\DataDictionaryImpl.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\reference\Attribute.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\reference\Property.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\Driver20.java&lt;br/&gt;
M      java\engine\org\apache\derby\loc\messages.xml&lt;br/&gt;
M      java\shared\org\apache\derby\shared\common\reference\SQLState.java&lt;br/&gt;
M      java\shared\org\apache\derby\shared\common\reference\MessageId.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\GetPropertyInfoTest.out&lt;/p&gt;

&lt;p&gt;Patch description in brief&lt;br/&gt;
1)Changes in DataDictionaryImpl.java will validate the value for the optional collation attribute and use the default UCS_BASIC if no value supplied (this is all at database create time). This JDBC url attribute will be saved as database property derby.database.collation in the property conglomerate.&lt;br/&gt;
2)All the JDBC url attributes are defined in Attribute.java. Added collation to that file.&lt;br/&gt;
3)The 2 valid values for collation attribute are defined in Property.java. They are UCS_BASIC and TERRITORY_BASED. Also, the database property is defined in this file for collation attribute.&lt;br/&gt;
4)Changes in Driver20 class adds the new string attribute so it can be detected by the generic GUI tools through getPropertyInfo method.&lt;br/&gt;
5)Added new SQLState and message id for new attribute in messages.xml, SQLState.java and MessageId.java &lt;br/&gt;
6)Needed to update master GetPropertyInfoTest.out so it is aware of the new collation attribute. &lt;/p&gt;

&lt;p&gt;derbyall ran with no new failures. Junit tests are still running. This is on Windows XP platform with Sun JDK 1.4&lt;/p&gt;</comment>
                            <comment id="12475062" author="mamtas" created="Thu, 22 Feb 2007 16:05:54 +0000"  >&lt;p&gt;Wondered if anyone had any comments on DERBY2334_AcceptCollationAttribute_diff_V02.txt patch? I will work on committing this patch by Friday evening if there are no comments.&lt;/p&gt;</comment>
                            <comment id="12475632" author="mamtas" created="Sat, 24 Feb 2007 15:12:09 +0000"  >&lt;p&gt;Commited DERBY2334_AcceptCollationAttribute_diff_V02.txt patch with additional change of removing the existing unused &quot;collate&quot; JDBC url attribute from Attribute.java. The revision for commit is 511283.&lt;/p&gt;</comment>
                            <comment id="12476203" author="mamtas" created="Tue, 27 Feb 2007 15:56:49 +0000"  >&lt;p&gt;Thanks for thinking about documentation proactively, Kim. I am planning to add documentation Jira entry for the parent of this Jira entry, which is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1478&quot; title=&quot;Add built in language based ordering and like processing to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1478&quot;&gt;&lt;del&gt;DERBY-1478&lt;/del&gt;&lt;/a&gt;. So, yes, we do need to document the property &quot;collation&quot; intoduced by this Jira entry and it&apos;s use which will be implemented by various sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1478&quot; title=&quot;Add built in language based ordering and like processing to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1478&quot;&gt;&lt;del&gt;DERBY-1478&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12476292" author="chaase3" created="Tue, 27 Feb 2007 18:11:23 +0000"  >&lt;p&gt;Thank you very much, Mamta. I see the new issue (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2377&quot; title=&quot;Document language based ordering which will be implemented by code related sub-tasks of DERBY-1478.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2377&quot;&gt;&lt;del&gt;DERBY-2377&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="12494379" author="myrna" created="Tue, 8 May 2007 20:10:04 +0100"  >&lt;p&gt;I believe revision 535738 caused a number of javadoc warnings:&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLChar.java:145: warning - Tag @see: missing &apos;#&apos;: &quot;SQLChar.stringCompare(SQLChar, SQLChar)&quot;&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLChar.java:145: warning - Tag @see: can&apos;t find SQLChar.stringCompare(SQLChar, SQLChar) in org.apache.derby.iapi.types.CollatorSQLChar&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLClob.java:145: warning - Tag @see: missing &apos;#&apos;: &quot;SQLChar.stringCompare(SQLChar, SQLChar)&quot;&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLClob.java:145: warning - Tag @see: can&apos;t find SQLChar.stringCompare(SQLChar, SQLChar) in org.apache.derby.iapi.types.CollatorSQLClob&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLLongvarchar.java:145: warning - Tag @see: missing &apos;#&apos;: &quot;SQLChar.stringCompare(SQLChar, SQLChar)&quot;&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLLongvarchar.java:145: warning - Tag @see: can&apos;t find SQLChar.stringCompare(SQLChar, SQLChar) in org.apache.derby.iapi.types.CollatorSQLLongvarchar&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLVarchar.java:145: warning - Tag @see: missing &apos;#&apos;: &quot;SQLChar.stringCompare(SQLChar, SQLChar)&quot;&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\CollatorSQLVarchar.java:145: warning - Tag @see: can&apos;t find SQLChar.stringCompare(SQLChar, SQLChar) in org.apache.derby.iapi.types.CollatorSQLVarchar&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\WorkHorseForCollatorDatatypes.java:86: warning - Tag @see: missing &apos;#&apos;: &quot;SQLChar.stringCompare(SQLChar, SQLChar)&quot;&lt;br/&gt;
      &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\types\WorkHorseForCollatorDatatypes.java:86: warning - Tag @see: can&apos;t find SQLChar.stringCompare(SQLChar, SQLChar) in org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes&lt;/p&gt;

</comment>
                            <comment id="12494572" author="mamtas" created="Wed, 9 May 2007 22:15:40 +0100"  >&lt;p&gt;Myrna, the checkin (535738) that caused the javadoc warnings went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2335&quot; title=&quot;Compare character datatypes with different collation ordering.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2335&quot;&gt;&lt;del&gt;DERBY-2335&lt;/del&gt;&lt;/a&gt; so I will go ahead and close this bug and checkin the fix for javadoc warning as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2335&quot; title=&quot;Compare character datatypes with different collation ordering.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2335&quot;&gt;&lt;del&gt;DERBY-2335&lt;/del&gt;&lt;/a&gt;. Hope that is not a problem.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12351159" name="DERBY2334_AcceptCollationAttribute_diff_V01.txt" size="9504" author="mamtas" created="Wed, 14 Feb 2007 18:48:28 +0000"/>
                            <attachment id="12351597" name="DERBY2334_AcceptCollationAttribute_diff_V02.txt" size="8982" author="mamtas" created="Tue, 20 Feb 2007 15:24:10 +0000"/>
                            <attachment id="12351158" name="DERBY2334_AcceptCollationAttribute_stat_V01.txt" size="706" author="mamtas" created="Wed, 14 Feb 2007 18:48:28 +0000"/>
                            <attachment id="12351598" name="DERBY2334_AcceptCollationAttribute_stat_V02.txt" size="630" author="mamtas" created="Tue, 20 Feb 2007 15:24:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 17 Feb 2007 00:07:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30388</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0k4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37079</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>