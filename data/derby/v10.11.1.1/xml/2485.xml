<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2485/DERBY-2485.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2485] Add OO callback scheme for transaction commit &amp; rollback at LanguageConnectionContext layer</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2485</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Add a schemewhere objects can register to be notified before commit, rollback, savepoint/statement rollback. This would be at the LCC layer so that it can be used by language elements and JDBC elements. Benefits are code clarity, performance and consistent behaviour.&lt;/p&gt;

&lt;p&gt;Some discussion at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200703.mbox/%3c4600A695.5050506@apache.org%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200703.mbox/%3c4600A695.5050506@apache.org%3e&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12365713">DERBY-2485</key>
            <summary>Add OO callback scheme for transaction commit &amp; rollback at LanguageConnectionContext layer</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                            <label>derby_triage10_10</label>
                    </labels>
                <created>Sat, 24 Mar 2007 03:55:36 +0000</created>
                <updated>Tue, 2 Oct 2012 06:21:12 +0100</updated>
                                                                            <component>JDBC</component>
                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12484133" author="djd" created="Mon, 26 Mar 2007 16:18:19 +0100"  >&lt;p&gt;In looking more at this it is probably best to make this callback scheme independent of the language layer. A standalone transaction facility.&lt;br/&gt;
Then code from the store layers could also migrate to use its facilities. Currently many of the methods on TransactionController perform&lt;br/&gt;
two actions, the first to get some object from a factory (e.g. a sort) and second to register it to ensure it is cleaned up at end transaction time.&lt;br/&gt;
By having a single transaction facility the method to get an object could be directly from the factory, passing in a transaction object and then&lt;br/&gt;
the object would register itself with the transaction as required.&lt;/p&gt;</comment>
                            <comment id="12484257" author="djd" created="Tue, 27 Mar 2007 00:08:32 +0100"  >&lt;p&gt;I added a couple of classes (TransactionControl &amp;amp; TransactionListener) into a new package&lt;/p&gt;

&lt;p&gt;org.apache.derby.iapi.transaction&lt;/p&gt;

&lt;p&gt;These are intended as a starting point for such a callback scheme, the final api&apos;s might be different in their approach as how to remove listeners.&lt;/p&gt;

&lt;p&gt;These classes are not yet compiled or used by any derby code.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12365847">DERBY-2490</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30472</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy08dj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35175</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>