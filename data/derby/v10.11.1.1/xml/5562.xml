<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:40:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5562/DERBY-5562.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5562] An read-only XA transaction that has a timeout never has the timer canceled when the transaction is complete</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5562</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;From the EmbedConnection.java comment for &quot;xa_prepare&quot;.&lt;/p&gt;


&lt;p&gt;					// On a prepare call, xa allows an optimization that if the&lt;br/&gt;
					// transaction is read only, the RM can just go ahead and&lt;br/&gt;
					// commit it.  So if store returns this read only status -&lt;br/&gt;
					// meaning store has taken the liberty to commit already - we&lt;br/&gt;
					// needs to turn around and call internalCommit (without&lt;br/&gt;
					// committing the store again) to make sure the state is&lt;br/&gt;
					// consistent.  Since the transaction is read only, there is&lt;br/&gt;
					// probably not much that needs to be done.&lt;/p&gt;

&lt;p&gt;When XATransactionController.XA_RDONLY is returned, no &quot;commit&quot; or &quot;rollback&quot; will be received.  If a XA transaction timer was started (could be through the derby.jdbc.xaTransactionTimeout=xxx for example), then these transactions will not have their timer canceled and will later attempt to cancel the transaction and fail as the transaction no longer exists.&lt;/p&gt;
</description>
                <environment>Solaris 10&lt;br/&gt;
Glassfish V2.1.1</environment>
        <key id="12536665">DERBY-5562</key>
            <summary>An read-only XA transaction that has a timeout never has the timer canceled when the transaction is complete</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bbergquist">Brett Bergquist</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Dec 2011 14:37:14 +0000</created>
                <updated>Fri, 15 Nov 2013 08:15:17 +0000</updated>
                            <resolved>Fri, 13 Jan 2012 08:22:44 +0000</resolved>
                                    <version>10.8.2.2</version>
                                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13178743" author="bbergquist" created="Tue, 3 Jan 2012 14:14:52 +0000"  >&lt;p&gt;A patch to fix this problem.   This calls XATransactionState.xa_finalize() to release the timer because no call to rollback or commit is going to come for a read-only transaction.&lt;/p&gt;</comment>
                            <comment id="13183194" author="knutanders" created="Tue, 10 Jan 2012 11:23:41 +0000"  >&lt;p&gt;I&apos;m attempting to write a test for this bug. What symptom should I be looking for? The bug description mentions that the cancellation timer will fail as the transaction no longer exists after preparing a read-only transaction.&lt;/p&gt;

&lt;p&gt;I tried to reproduce this by running the attached program, which prepares a read-only transaction with a 20 second timeout. After 20 seconds, I see the following printed to derby.log:&lt;/p&gt;

&lt;p&gt;The XA transaction timed out and is going to be rolled back. The transaction Xid is (1,0102,0304).&lt;/p&gt;

&lt;p&gt;However, I don&apos;t see any failures. What&apos;s missing in order to reproduce the failures?&lt;/p&gt;

&lt;p&gt;(I guess an alternative way to reproduce the bug would be to start a new transaction using the same xid after preparing the first one, and checking if the second transaction gets cancelled by the timer from the first transaction.)&lt;/p&gt;</comment>
                            <comment id="13183253" author="bbergquist" created="Tue, 10 Jan 2012 13:22:17 +0000"  >&lt;p&gt;The failure is that the transaction timeout is not canceled when it should be and will produce a message in the log when this is the case.&lt;/p&gt;

&lt;p&gt;The test needs to create a XA transaction with timeout (I used the derby.jdbc.xaTransactionTimeout to set the timeout), start the XA transaction, use read-only SQL to the database and then prepare the XA transaction.  The prepare code detects that only read-only work was done and implicitly commits the transaction.  The prepare returns XA_RDONLY and you do not commit the transaction in the test code.  The timer started by the &quot;start&quot; method will not be canceled and the timer will continue and when fired will try to rollback the transaction that has already be implicitly committed and ended.&lt;/p&gt;

&lt;p&gt;See issue &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-960&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-960&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;which fixed the prepare to return XA_DDONLY.&lt;/p&gt;</comment>
                            <comment id="13184065" author="knutanders" created="Wed, 11 Jan 2012 13:27:48 +0000"  >&lt;p&gt;Thanks. The attached patch adds a test case that exposes the bug. It prepares a read-only transaction that has a timeout, and then starts a new transaction with the same Xid and no timeout. The second transaction sleeps for while to make sure it exceeds the timeout of the first transaction. The second transaction is aborted because of the bug, and the test case fails. With the fix, the transaction is not aborted, and the test case passes.&lt;/p&gt;

&lt;p&gt;The patch also moves the fix from EmbedXAResource to XATransactionState, so that all handling of the timer is private to that class. I also made XATransactionState.xa_finalize() private to emphasize this (and removed the synchronized modifier since all callers already synchronize before calling the method).&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly with this patch.&lt;/p&gt;</comment>
                            <comment id="13184112" author="dagw" created="Wed, 11 Jan 2012 14:54:30 +0000"  >&lt;p&gt;Looks good to me. I tried the test without the patch and it failed as expected. +1&lt;/p&gt;</comment>
                            <comment id="13184446" author="mikem" created="Wed, 11 Jan 2012 22:16:14 +0000"  >&lt;p&gt;change and test look good to me.    Any idea how many versions back this problem affects?&lt;/p&gt;</comment>
                            <comment id="13184563" author="bbergquist" created="Thu, 12 Jan 2012 00:02:12 +0000"  >&lt;p&gt;It appears the timer was implemented in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2508&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-2508&lt;/a&gt; which has a fix at 10.3.1.4&lt;/p&gt;</comment>
                            <comment id="13184868" author="knutanders" created="Thu, 12 Jan 2012 10:53:34 +0000"  >&lt;p&gt;Committed to trunk with revision 1230480. I also plan to backport the fix to 10.8.&lt;/p&gt;</comment>
                            <comment id="13185482" author="knutanders" created="Fri, 13 Jan 2012 08:22:44 +0000"  >&lt;p&gt;The nightly tests passed on all platforms with the fix, and so did a manual run of the tests with the fix on the 10.8 branch (except one occurrence of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5498&quot; title=&quot;ClosedByInterruptException in AuthenticationTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5498&quot;&gt;&lt;del&gt;DERBY-5498&lt;/del&gt;&lt;/a&gt;). Backported to 10.8 and committed revision 1230914.&lt;/p&gt;</comment>
                            <comment id="13823452" author="knutanders" created="Fri, 15 Nov 2013 08:15:17 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update: close all resolved issues that haven&amp;#39;t had any activity the last year&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12510032" name="D5562.java" size="1544" author="knutanders" created="Tue, 10 Jan 2012 11:23:41 +0000"/>
                            <attachment id="12509288" name="DERBY-5562.patch" size="901" author="bbergquist" created="Tue, 3 Jan 2012 14:14:52 +0000"/>
                            <attachment id="12510184" name="d5562-1a-with-test.diff" size="6206" author="knutanders" created="Wed, 11 Jan 2012 13:27:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jan 2012 11:23:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>222348</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0eaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36133</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>