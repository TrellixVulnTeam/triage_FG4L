<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:49 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-94/DERBY-94.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-94] Lock not being released properly, possibly related to occurence of lock escalation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-94</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In the following scenario: &lt;br/&gt;
&amp;lt;code snippet&amp;gt;&lt;br/&gt;
           String sel = &quot;select * from t1 FOR UPDATE of i2&quot;;&lt;br/&gt;
  	   PreparedStatement ps1 = conn.prepareStatement (sel);&lt;br/&gt;
   	   int val = 300;&lt;br/&gt;
	   ps1.setMaxRows(val);&lt;br/&gt;
	   ResultSet rs = ps1.executeQuery();&lt;/p&gt;

&lt;p&gt;   	   String ins = &quot;Update t1 set i2=? WHERE CURRENT OF &quot;+rs.getCursorName() ;&lt;br/&gt;
   	   PreparedStatement ps2 = conn.prepareStatement(ins);&lt;br/&gt;
           ps2.setInt(1,iteration);&lt;/p&gt;

&lt;p&gt;           while(rs.next())&lt;br/&gt;
           &lt;/p&gt;
{
     	      ps2.executeUpdate();
   	   }
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;   	   // print lock table information&lt;br/&gt;
   	   System.out.println(&quot;Lock Table before commit transaction&quot;);&lt;br/&gt;
   	   printLockTable(conn);&lt;br/&gt;
   	   conn.commit();&lt;br/&gt;
&amp;lt;end code snippet&amp;gt;&lt;br/&gt;
Running the above transaction twice causes a lock timeout the second time.&lt;/p&gt;

&lt;p&gt;It seems like locks are not being released properly on the table even after the transaction commits and the connection is closed. Also, this condition seems to  happen only when lock escalation to table lock occurs. By increasing lock  escalation threshold to prevent lock escalation and with only row level locking, the locks are released properly.&lt;/p&gt;

&lt;p&gt;I printed out the locks information and see a U row level lock on the table , and also a table level lock as a result of lock escalation. After commit, and resultset being closed, the U row level lock is not released. Thus in the second iteration of the test, the unreleased U row level lock causes a lock timeout to happen.  In case of the second iteration of the test, the lock table shows the previous U row lock with a null transaction id. This is not right. &lt;/p&gt;

&lt;p&gt;The transactions are running at the default isolation level ( read committed).&lt;/p&gt;

&lt;p&gt;By default, the lock escalation threshold is set to 5000&lt;br/&gt;
&lt;a href=&quot;http://incubator.apache.org/derby/manuals/tuning/perf80.html#IDX547&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://incubator.apache.org/derby/manuals/tuning/perf80.html#IDX547&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be attaching the program for reproduction.  To reproduce the problem with less number of rows in the table, please run the program with the following derby properties set &lt;br/&gt;
derby.locks.deadlockTrace=true&lt;br/&gt;
derby.locks.escalationThreshold=110&lt;/p&gt;
</description>
                <environment>all</environment>
        <key id="28865">DERBY-94</key>
            <summary>Lock not being released properly, possibly related to occurence of lock escalation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tsuresh">Suresh Thalamati</assignee>
                                    <reporter username="skambha">Sunitha Kambhampati</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Dec 2004 23:02:00 +0000</created>
                <updated>Tue, 16 May 2006 05:11:24 +0100</updated>
                            <resolved>Thu, 20 Jan 2005 04:39:27 +0000</resolved>
                                    <version>10.0.2.1</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="56351" author="skambha" created="Tue, 7 Dec 2004 23:14:37 +0000"  >&lt;p&gt;Program to reproduce the problem described in Derby 94. &lt;br/&gt;
To run the program&lt;br/&gt;
java -Dderby.locks.escalationThreshold=110 -Dderby.locks.deadlockTrace=true Derby94Test &lt;/p&gt;

&lt;p&gt;Derby94Test_Output is a sample output of the lock table information that is written out to standard out.  Note in the second iteration a lock timeout error is thrown. &lt;/p&gt;

&lt;p&gt;Derby.log has the lock timeout exception&lt;/p&gt;</comment>
                            <comment id="56477" author="mikem" created="Thu, 9 Dec 2004 23:04:24 +0000"  >&lt;p&gt;Here is how I have debugged these kinds of issues in the past:&lt;/p&gt;

&lt;p&gt;1) get a lot of disk space&lt;br/&gt;
2) run the repro in a SANE build&lt;br/&gt;
3) enable the debug option which prints a stack trace with each lock request to the derby.log (see code in opensource/java/engine/org/apache/derby/impl/services/locks/SinglePool.java, &lt;br/&gt;
Constants.java).  This will produce a very large derby.log file, depending&lt;br/&gt;
on how many locks are requested in test case.&lt;br/&gt;
4) Find the lock that is left over after the transaction commits and then search backward&lt;br/&gt;
     in the log to find the code which requested the lock.&lt;/p&gt;

&lt;p&gt;past bugs like this have happened if a lock is not put on the transaction list, and then for&lt;br/&gt;
some reason does not get explicitly removed.  In this case the escalation is probably the&lt;br/&gt;
cause.  &lt;/p&gt;

&lt;p&gt;In normal case locks get put on transaction list and then all locks on transaction list are removed at end of transaction.  I can&apos;t remember the&lt;br/&gt;
last time I saw problems in this area.&lt;/p&gt;

&lt;p&gt;Locks which need to be released before end transaction, ie. read committed,&lt;br/&gt;
 are put on temporary lists which are keyed by the open conglomerate,&lt;br/&gt;
and then we either explicitly unlock them or we unlock all the ones on the list when the coglomerate&lt;br/&gt;
is closed at the end.  probably something going wrong in this area. &lt;/p&gt;

&lt;p&gt;/mikem&lt;/p&gt;</comment>
                            <comment id="57790" author="tsuresh" created="Thu, 20 Jan 2005 04:39:27 +0000"  >&lt;p&gt;This issue has been fixed with SVN COMMIT r123267.&lt;/p&gt;</comment>
                            <comment id="57860" author="skambha" created="Fri, 21 Jan 2005 07:31:53 +0000"  >&lt;p&gt;I have tested it and it works ok, so closing the bug. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="18329" name="Derby94Test.java" size="5897" author="skambha" created="Tue, 7 Dec 2004 23:14:37 +0000"/>
                            <attachment id="18330" name="Derby94Test_Output" size="4685" author="skambha" created="Tue, 7 Dec 2004 23:14:37 +0000"/>
                            <attachment id="18331" name="derby.log" size="26945" author="skambha" created="Tue, 7 Dec 2004 23:14:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Dec 2004 23:04:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21768</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16fr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40693</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>