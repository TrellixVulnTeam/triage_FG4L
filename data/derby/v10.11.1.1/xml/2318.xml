<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:07:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2318/DERBY-2318.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2318] testStreams(org.apache.derbyTesting.functionTests.tests.lang.StreamsTest) failed  on weme6.1 jvm/</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2318</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Time: 1,021.188&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testStreams(org.apache.derbyTesting.functionTests.tests.lang.StreamsTest)junit.framework.AssertionFailedError: FAILED!! level difference not expected since streams are materialized. expected:&amp;lt;48&amp;gt; but was:&amp;lt;49&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.testStreams(StreamsTest.java:118)&lt;br/&gt;
	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 1285,  Failures: 1,  Errors: 0&lt;/p&gt;</description>
                <environment>Java Version:    J2ME Foundation Specification v1.1&lt;br/&gt;
Java Vendor:     IBM Corporation&lt;br/&gt;
Java home:       c:\jartest\weme6.1</environment>
        <key id="12362474">DERBY-2318</key>
            <summary>testStreams(org.apache.derbyTesting.functionTests.tests.lang.StreamsTest) failed  on weme6.1 jvm/</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="tsuresh">Suresh Thalamati</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Feb 2007 23:21:31 +0000</created>
                <updated>Mon, 28 Jun 2010 18:15:33 +0100</updated>
                            <resolved>Mon, 14 May 2007 18:33:02 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12472902" author="djd" created="Tue, 13 Feb 2007 22:24:35 +0000"  >&lt;p&gt;Test passes for me.&lt;/p&gt;</comment>
                            <comment id="12473499" author="tsuresh" created="Thu, 15 Feb 2007 20:29:47 +0000"  >&lt;p&gt;It is still failing on the  ibm nightly result runs on weme6.1,  with the same error. &lt;/p&gt;</comment>
                            <comment id="12473516" author="djd" created="Thu, 15 Feb 2007 21:07:27 +0000"  >&lt;p&gt;I&apos;m not sure what to do about this - I don&apos;t see it fail.&lt;/p&gt;</comment>
                            <comment id="12473533" author="myrna" created="Thu, 15 Feb 2007 22:07:47 +0000"  >&lt;p&gt;I&apos;ll take a look at this, see what I can see.&lt;/p&gt;</comment>
                            <comment id="12473807" author="tsuresh" created="Fri, 16 Feb 2007 19:55:51 +0000"  >&lt;p&gt;This test  also failed on  one of the iibm15 jvm runs:&lt;br/&gt;
5) testStreams(org.apache.derbyTesting.functionTests.tests.lang.StreamsTest)junit.framework.AssertionFailedError: FAILED!! level difference not expected since streams are materialized. expected:&amp;lt;50&amp;gt; but was:&amp;lt;51&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.testStreams(StreamsTest.java:125)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;</comment>
                            <comment id="12473819" author="djd" created="Fri, 16 Feb 2007 20:32:05 +0000"  >&lt;p&gt;One guess is that the JIT is changing the stack depth by inlining methods.&lt;br/&gt;
I think in some ways the test is invalid, I don&apos;t think there are no guarantees about the stack depth for subsequent similar operations.&lt;/p&gt;</comment>
                            <comment id="12474859" author="kartha" created="Wed, 21 Feb 2007 22:33:31 +0000"  >&lt;p&gt;Observed the same failure that Suresh mentioned above on ibm15.  The issue on  ibm15 and weme 6.1 seems to be same,  maybe for now we can disable this test for these two platforms.&lt;/p&gt;</comment>
                            <comment id="12481388" author="myrna" created="Fri, 16 Mar 2007 00:32:23 +0000"  >&lt;p&gt;Unfortunately (or fortunately?) we can&apos;t skip running this test for both ibm15 and weme6.1. &lt;/p&gt;

&lt;p&gt;The failure was due to an extra line in the stack trace for a new Throwable; ibm15 and weme6.1 both showed a line for Throwable&amp;lt;init&amp;gt;.&lt;/p&gt;

&lt;p&gt;I hesitated between disabling this test altogether, spending time to come up with a different way of doing it (because, indeed, it&apos;s not necessarily valid) and accepting a range of values. In the end, I decided for a band-aid - assume there&apos;s only one Throwable line and reduce the count.&lt;/p&gt;

&lt;p&gt;But, this is really a band-aid. I suspect this test may cause trouble in the future, with new jvms or jits...&lt;/p&gt;</comment>
                            <comment id="12481392" author="myrna" created="Fri, 16 Mar 2007 00:35:16 +0000"  >&lt;p&gt;I don&apos;t see my commit show up on the subversion commits list (yet), so just in case that went wrong, it&apos;s revision 518814.&lt;/p&gt;</comment>
                            <comment id="12882760" author="kmarsden" created="Sat, 26 Jun 2010 00:34:52 +0100"  >&lt;p&gt;I am seeing an incarnation of this failure with a new jvm.    I am actually having a tough time seeing the difference between the two stack traces and it was passing on trunk and failing on 10.3.  I think I will clean up the whereAmI() method to just get the StackTraceElements once and then see if if the problem becomes more apparent.&lt;/p&gt;


&lt;p&gt;.readerStackLevel:45&lt;br/&gt;
java.lang.Throwable&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.DummyReader.whereAmI(StreamsTest.java:318)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.DummyReader.read(StreamsTest.java:327)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.LimitReader.read(LimitReader.java:57)&lt;br/&gt;
	at org.apache.derby.iapi.types.ReaderToUTF8Stream.fillBuffer(ReaderToUTF8Stream.java:244)&lt;br/&gt;
	at org.apache.derby.iapi.types.ReaderToUTF8Stream.read(ReaderToUTF8Stream.java:190)&lt;br/&gt;
	at java.io.DataInputStream.readToBuff(DataInputStream.java:154)&lt;br/&gt;
	at java.io.DataInputStream.readUnsignedShort(DataInputStream.java:410)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLChar.readExternal(SQLChar.java:894)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLChar.getString(SQLChar.java:640)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:150)&lt;br/&gt;
	at org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:469)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:330)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:189)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:496)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1653)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.insertLongString(StreamsTest.java:267)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.testStreams(StreamsTest.java:118)&lt;br/&gt;
	at java.lang.reflect.Method.invokeImpl(Native Method)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:228)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:99)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
	at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
	at junit.textui.TestRunner.main(TestRunner.java:138)&lt;br/&gt;
readerStackLevel:46&lt;br/&gt;
java.lang.Throwable&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.DummyReader.whereAmI(StreamsTest.java:318)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.DummyReader.read(StreamsTest.java:327)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.LimitReader.read(LimitReader.java:57)&lt;br/&gt;
	at org.apache.derby.iapi.types.ReaderToUTF8Stream.fillBuffer(ReaderToUTF8Stream.java:244)&lt;br/&gt;
	at org.apache.derby.iapi.types.ReaderToUTF8Stream.read(ReaderToUTF8Stream.java:190)&lt;br/&gt;
	at java.io.DataInputStream.readToBuff(DataInputStream.java:154)&lt;br/&gt;
	at java.io.DataInputStream.readUnsignedShort(DataInputStream.java:410)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLChar.readExternal(SQLChar.java:894)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLChar.getString(SQLChar.java:640)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:150)&lt;br/&gt;
	at org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:469)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:330)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:189)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:496)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1653)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.insertLongString(StreamsTest.java:267)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.testStreams(StreamsTest.java:123)&lt;br/&gt;
	at java.lang.reflect.Method.invokeImpl(Native Method)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:228)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:99)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
	at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
	at junit.textui.TestRunner.main(TestRunner.java:138)&lt;/p&gt;

&lt;p&gt;testStreams used 62 ms F&lt;br/&gt;
Time: 3.422&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testStreams(org.apache.derbyTesting.functionTests.tests.lang.StreamsTest)junit.framework.AssertionFailedError: FAILED!! level difference not expected since streams are materialized. expected:&amp;lt;45&amp;gt; but was:&amp;lt;46&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StreamsTest.testStreams(StreamsTest.java:125)&lt;br/&gt;
	at java.lang.reflect.Method.invokeImpl(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:99)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;


</comment>
                            <comment id="12883219" author="kmarsden" created="Mon, 28 Jun 2010 18:15:33 +0100"  >&lt;p&gt;When I changed the test to generate the StackElements just ones the failure went away, so I just backported that fix.  &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Feb 2007 22:24:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22997</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0q1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38037</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>