<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4244/DERBY-4244.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4244] ALTER TABLE Sanity ASSERT in add column with autocommit off</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4244</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;While working with Eranda on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4187&quot; title=&quot;Convert altertable.sql to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4187&quot;&gt;&lt;del&gt;DERBY-4187&lt;/del&gt;&lt;/a&gt;, I stumbled across an apparent ALTER TABLE bug.&lt;/p&gt;

&lt;p&gt;Here&apos;s a script which reproduces the problem for me:&lt;/p&gt;

&lt;p&gt;autocommit off;&lt;br/&gt;
create table t0(c1 int not null constraint p1 primary key);&lt;br/&gt;
alter table t0 add column c1 int;&lt;br/&gt;
alter table t0 add column c2 int not null default 0 primary key;&lt;br/&gt;
alter table t0 add column c2 int not null default 0;&lt;/p&gt;

&lt;p&gt;The &quot;autocommit off&quot; is crucial; otherwise the problem does not reproduce.&lt;/p&gt;

&lt;p&gt;Here&apos;s the detailed assertion failure:&lt;/p&gt;

&lt;p&gt;2009-05-23 15:01:17.436 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 146), (SESSIONID = 1), (DATABASE = brydb), (DRDAID = null), Failed Statement is: alter table t0 add column c2 int not null default 0&lt;br/&gt;
org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED column_id = 1format_ids.length = 2format_ids = [I@1321f5&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.addColumn(Heap.java:418)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.addColumnToConglomerate(RAMTransaction.java:618)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.AlterTableConstantAction.addNewColumnToTable(AlterTableConstantAction.java:1325)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(AlterTableConstantAction.java:449)&lt;/p&gt;

&lt;p&gt;Here&apos;s the relevant section of Heap.java:&lt;/p&gt;

&lt;p&gt;            if (column_id != format_ids.length)&lt;/p&gt;
            {
                if (SanityManager.DEBUG)
                    SanityManager.THROWASSERT(
                        &quot;column_id = &quot; + column_id +
                        &quot;format_ids.length = &quot; + format_ids.length +
                        &quot;format_ids = &quot; + format_ids);

                throw(StandardException.newException(
                        SQLState.HEAP_TEMPLATE_MISMATCH,
                        new Long(column_id),
                        new Long(this.format_ids.length)));
            }</description>
                <environment></environment>
        <key id="12426193">DERBY-4244</key>
            <summary>ALTER TABLE Sanity ASSERT in add column with autocommit off</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="eranda">Eranda Sooriyabandara</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                    </labels>
                <created>Sat, 23 May 2009 15:41:51 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:29 +0100</updated>
                            <resolved>Sat, 3 Jul 2010 15:27:39 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12712434" author="knutanders" created="Sat, 23 May 2009 16:41:43 +0100"  >&lt;p&gt;Does the THROWASSERT add any value in this code? It seems like all useful information is included in the message of the StandardException that will be thrown otherwise (I don&apos;t regard the identity hash code of the int array useful, and that&apos;s the only missing piece, as far as I can see). Not that removing the THROWASSERT will fix the bug...&lt;/p&gt;</comment>
                            <comment id="12725280" author="eranda" created="Mon, 29 Jun 2009 18:55:47 +0100"  >&lt;p&gt;Hi,&lt;br/&gt;
I remove,&lt;br/&gt;
 SanityManager.THROWASSERT(&lt;br/&gt;
                        &quot;column_id = &quot; + column_id +&lt;br/&gt;
                        &quot;format_ids.length = &quot; + format_ids.length +&lt;br/&gt;
                        &quot;format_ids = &quot; + format_ids);&lt;/p&gt;

&lt;p&gt;and I get the new error as,&lt;br/&gt;
Caused by: ERROR XSCH5: In a base table there was a mismatch between&lt;br/&gt;
the requested column number 1 and the maximum numbe&lt;br/&gt;
r of columns 2.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:303)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.addColumn(Heap.java:423)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.addColumnToConglomerate(RAMTransaction.java:618)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.AlterTableConstantAction.addNewColumnToTable(AlterTableConstantAction.java:&lt;br/&gt;
1325)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(AlterTableConstantAction.java:449)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:64)&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12726720" author="bryanpendleton" created="Thu, 2 Jul 2009 23:49:07 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;In the script which reproduces the problem, I believe it is the &lt;b&gt;third&lt;/b&gt; ALTER TABLE&lt;br/&gt;
statement which crashes, is that correct?&lt;/p&gt;

&lt;p&gt;What happens if you remove the first or the second ALTER TABLE statements in&lt;br/&gt;
the script? Does it still fail the same way?&lt;/p&gt;

&lt;p&gt;Also, what happens if you start with the original script, but in the &lt;b&gt;third&lt;/b&gt; ALTER TABLE&lt;br/&gt;
statement you change &quot;c2&quot; to &quot;c3&quot;? Does it still fail the same way?&lt;/p&gt;</comment>
                            <comment id="12726993" author="bryanpendleton" created="Fri, 3 Jul 2009 15:49:06 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;If you run the reproduction script with derby.language.statementCacheSize=0,&lt;br/&gt;
does the problem still occur? &lt;/p&gt;</comment>
                            <comment id="12727071" author="dagw" created="Fri, 3 Jul 2009 19:05:26 +0100"  >&lt;p&gt;Triaged for 10.5.2, setting &quot;repro attached&quot; and &quot;normal&quot; urgency.&lt;br/&gt;
Saw this back to 10.2, setting affected flags accordingly.&lt;/p&gt;</comment>
                            <comment id="12727114" author="eranda" created="Fri, 3 Jul 2009 21:03:49 +0100"  >&lt;p&gt;Hi Bryan,Thanks for helping me to figure this out.&lt;br/&gt;
This error is causing by the previous command&lt;br/&gt;
without this command the test runs successfully.&lt;br/&gt;
When I change the command to,&lt;br/&gt;
the test was successful.&lt;br/&gt;
I think there must be remaining part of the previous statement in some&lt;br/&gt;
where. But,&lt;br/&gt;
according to the test setting derby.language.statementCacheSize=0 did&lt;br/&gt;
&quot;not&quot; change&lt;br/&gt;
the behavior of the bug.&lt;br/&gt;
And it means that the remaining part of the statement is not in the cache.&lt;br/&gt;
We can solve the bug if we can find where it get stored?&lt;br/&gt;
Am I correct? Are there any misunderstanding of me?&lt;/p&gt;</comment>
                            <comment id="12727148" author="bryanpendleton" created="Fri, 3 Jul 2009 23:07:22 +0100"  >&lt;p&gt;If I change the next-to-last SQL statement from&lt;/p&gt;

&lt;p&gt;  alter table t0 add column c2 int not null default 0 primary key;&lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;  alter table t0 add column c2 int not null default 0;&lt;/p&gt;

&lt;p&gt;then the problem does not occur. This suggests to me that the problem involves&lt;br/&gt;
the cleanup that is performed after this error is encountered&lt;/p&gt;

&lt;p&gt;ERROR X0Y58: Attempt to add a primary key constraint to table &apos;&quot;APP&quot;.&quot;T0&quot;&apos; failed because the table already has a constraint of that type.  A table can only have a single primary key constraint.&lt;/p&gt;

&lt;p&gt;I can see in derby.log that the stack trace at the time of this error looks like this:&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(AlterTableConstantAction.java:541)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:64)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:297)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:363)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:222)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:177)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:59)&lt;/p&gt;

&lt;p&gt;This suggests to me that the next step is to study the error handling that is performed in this&lt;br/&gt;
part of the code; specifically whether AlterTableConstantAction.executeConstantAction isn&apos;t&lt;br/&gt;
properly cleaning everything up when the error occurs.&lt;/p&gt;</comment>
                            <comment id="12727366" author="eranda" created="Sun, 5 Jul 2009 22:44:17 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I did some tests, and get the results as follows&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t0(c1 int not null constraint p1 primary key);&lt;/p&gt;

&lt;p&gt;0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;ij&amp;gt; alter table t0 add column c2 int not null default 0 primary key;&lt;/p&gt;

&lt;p&gt;ERROR X0Y58: Attempt to add a primary key constraint to table &apos;&quot;APP&quot;.&quot;T0&quot;&apos;&lt;br/&gt;
failed because the table already has a constr&lt;/p&gt;

&lt;p&gt;aint of that type.  A table can only have a single primary key constraint.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; alter table t0 add column c3 int not null default 0;&lt;/p&gt;

&lt;p&gt;ERROR XSCH5: In a base table there was a mismatch between the requested&lt;br/&gt;
column number 1 and the maximum number of column&lt;/p&gt;

&lt;p&gt;s 2.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; alter table t0 add column c6 int not null default 0;&lt;/p&gt;

&lt;p&gt;ERROR XSCH5: In a base table there was a mismatch between the requested&lt;br/&gt;
column number 1 and the maximum number of column&lt;/p&gt;

&lt;p&gt;s 2.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; alter table t0 add column g6 int not null default 0;&lt;/p&gt;

&lt;p&gt;ERROR XSCH5: In a base table there was a mismatch between the requested&lt;br/&gt;
column number 1 and the maximum number of column&lt;/p&gt;


&lt;p&gt;The test says that by &quot;alter table t0 add column c2 int not null default 0&lt;br/&gt;
primary key;&quot; fails it self and also fails other statement of add columns.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Eranda&lt;/p&gt;</comment>
                            <comment id="12727758" author="bryanpendleton" created="Mon, 6 Jul 2009 21:17:46 +0100"  >&lt;p&gt;I spent some time stepping through the code and thinking about it.&lt;/p&gt;

&lt;p&gt;The X0Y58 message is generated at line 541 of AlterTableConstantAction.java:&lt;/p&gt;

&lt;p&gt;                            if (cdl.getPrimaryKey() != null)&lt;/p&gt;
                            {
                                throw StandardException.newException(
                                    SQLState.LANG_ADD_PRIMARY_KEY_FAILED1,
                                    td.getQualifiedName());
                            }

&lt;p&gt;However, this error is generated &lt;b&gt;after&lt;/b&gt; the new column has already been added&lt;br/&gt;
to the table, which occurs at line 450 of AlterTableConstantAction.java:&lt;/p&gt;

&lt;p&gt;                if (columnInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;ix&amp;#93;&lt;/span&gt;.action == ColumnInfo.CREATE)&lt;/p&gt;
                {
                    addNewColumnToTable(activation, lcc, dd, tc, ix);
                }

&lt;p&gt;addnewColumnToTable adds the new column to the table, then updates the&lt;br/&gt;
data in the new column to the default value, using a nested sub-statement. This&lt;br/&gt;
occurs at line 3199 of AlterTableConstantAction.java:&lt;/p&gt;

&lt;p&gt;        String updateStmt = &quot;UPDATE \&quot;&quot; + td.getSchemaName() + &quot;\&quot;.\&quot;&quot; +&lt;br/&gt;
                            td.getName() + &quot;\&quot; SET \&quot;&quot; +&lt;br/&gt;
                             columnName + &quot;\&quot; = &quot; + defaultText;&lt;/p&gt;


&lt;p&gt;        AlterTableConstantAction.executeUpdate(lcc, updateStmt);&lt;/p&gt;

&lt;p&gt;    private static void executeUpdate(LanguageConnectionContext lcc, String updateStmt) throws StandardException&lt;/p&gt;
    {
        PreparedStatement ps = lcc.prepareInternalStatement(updateStmt);

        // This is a substatement; for now, we do not set any timeout
        // for it. We might change this behaviour later, by linking
        // timeout to its parent statement&apos;s timeout settings.
        ResultSet rs = ps.executeSubStatement(lcc, true, 0L);
        rs.close();
    }

&lt;p&gt;So the stack trace, when this is going on, looks something like:&lt;/p&gt;

&lt;p&gt;GenericPreparedStatements.executeStmt:443&lt;br/&gt;
GenericPreparedStatement.executeSubStatement:272&lt;br/&gt;
AlterTableConstantAction.executeUpdate:3209&lt;br/&gt;
AlterTableConstantAction.updateNewColumnToDefault:3199&lt;br/&gt;
AlterTableConstantAction.addNewColumnToTable:1374&lt;br/&gt;
AlterTableConstantAction.executeConstantAction:450&lt;br/&gt;
MiscResultSet.open:64&lt;br/&gt;
GenericPreparedStatement.executeStmt:416&lt;br/&gt;
GenericPreparedStatement.execute:297&lt;br/&gt;
EmbedStatement.executeStatement:1235&lt;/p&gt;

&lt;p&gt;This leads me to two ideas:&lt;/p&gt;

&lt;p&gt;1) Although the X0Y58 error causes the outer statement to be rolled back to&lt;br/&gt;
its savepoint, there must be something that occurs in the nested inner&lt;br/&gt;
sub-statement which isn&apos;t undone by rolling back the outer statement to&lt;br/&gt;
its savepoint. Specifically, something involving the descriptor information&lt;br/&gt;
in the DataDictionary. So we could try to investigate that more.&lt;/p&gt;

&lt;p&gt;2) It seems odd that we only catch this error at &lt;b&gt;execution&lt;/b&gt; time, after&lt;br/&gt;
we have already added the new column to the table, and set all its&lt;br/&gt;
default values, and only then do we notice that there&apos;s an error in the constraint.&lt;br/&gt;
I think that the duplicate constraint error should be something that we are&lt;br/&gt;
able to catch at &lt;b&gt;compile&lt;/b&gt; time. So we could investigate the compile time&lt;br/&gt;
processing of ALTER TABLE ADD COLUMN, and try to figure out why&lt;br/&gt;
this error isn&apos;t being caught during compilation.&lt;/p&gt;
</comment>
                            <comment id="12728352" author="bryanpendleton" created="Tue, 7 Jul 2009 21:27:12 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;Attached code change &apos;checkAtCompileTime.diff&apos; is a possible fix to pursue. This change&lt;br/&gt;
adds some code to the compilation processing for ALTER TABLE to verify that we aren&apos;t&lt;br/&gt;
adding a duplicate primary key to the table.&lt;/p&gt;

&lt;p&gt;I haven&apos;t done much testing, just verified that it fixes the 4-line script in the bug description.&lt;/p&gt;

&lt;p&gt;Can you have a look at this change and see what you think? If it seems reasonable, maybe&lt;br/&gt;
you can do some more testing, and add some additional regression tests into the patch&lt;br/&gt;
to turn it into a more complete patch proposal.&lt;/p&gt;</comment>
                            <comment id="12730127" author="bryanpendleton" created="Sun, 12 Jul 2009 19:27:13 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;Here&apos;s a few comments to hopefully explain how the attached patch works:&lt;/p&gt;

&lt;p&gt;During parsing, the parser processes the ALTER TABLE statement and breaks&lt;br/&gt;
it down into pieces, then builds up a AlterTableNode instance to describe the statement.&lt;/p&gt;

&lt;p&gt;For an ALTER TABLE ADD ... statement, information about the column to be added, if any,&lt;br/&gt;
and about the constraints that apply to that column, are stored in the table element list.&lt;br/&gt;
This occurs at about lines 12622-12630 of sqlgrammar.jj, in the code:&lt;/p&gt;

&lt;p&gt;    &amp;lt;ADD&amp;gt;&lt;br/&gt;
    (&lt;br/&gt;
        tableElement = addColumnDefinition(tableElementList)&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;        tableElement = tableConstraintDefinition()&lt;br/&gt;
    )&lt;br/&gt;
    {&lt;br/&gt;
        if (tableElement instanceof ColumnDefinitionNode)&lt;/p&gt;
        {
            //bug 5724 - auto increment columns not allowed in ALTER TABLE statement
            ColumnDefinitionNode cdn = (ColumnDefinitionNode) tableElement;
            if ( cdn.isAutoincrementColumn())
                throw StandardException.newException(SQLState.LANG_ALTER_TABLE_AUTOINCREMENT_COLUMN_NOT_ALLOWED);
        }
&lt;p&gt;        changeType&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = DDLStatementNode.ADD_TYPE;&lt;br/&gt;
        tableElementList.addTableElement(tableElement);&lt;/p&gt;

&lt;p&gt;Later in the compilation of the ALTER TABLE statement, we call the makeConstantAction&lt;br/&gt;
method in AlterTableNode.java, which in turn calls the prepConstantAction subroutine,&lt;br/&gt;
at line 510 or so in AlterTableNode.java, which is the place where my proposed patch&lt;br/&gt;
inserts some code.&lt;/p&gt;

&lt;p&gt;The first part of that new code looks like this:&lt;/p&gt;

&lt;p&gt; for (int conIndex = 0; conIndex &amp;lt; conActions.length; conIndex++)&lt;br/&gt;
 {&lt;br/&gt;
     ConstraintConstantAction cca = conActions&lt;span class=&quot;error&quot;&gt;&amp;#91;conIndex&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;     if (cca instanceof CreateConstraintConstantAction)&lt;br/&gt;
     {&lt;/p&gt;

&lt;p&gt;This code looks through the constraint information that the parser placed into the tableElementList,&lt;br/&gt;
as I described above. As it looks through the list, each constraint action in the list may be one&lt;br/&gt;
of several types of constraints:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;primary key constraint&lt;/li&gt;
	&lt;li&gt;foreign key constraint (REFERENCES ...)&lt;/li&gt;
	&lt;li&gt;check constraint (CHECK ...)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the purposes of this particular patch, we are only interested in primary key constraints,&lt;br/&gt;
so we look at each constraint action in the list to see if it is a primary key constraint:&lt;/p&gt;

&lt;p&gt;     int constraintType = cca.getConstraintType();&lt;br/&gt;
     if (constraintType == DataDictionary.PRIMARYKEY_CONSTRAINT)&lt;br/&gt;
     {&lt;/p&gt;

&lt;p&gt;If we find such a constraint, then we know that this ALTER TABLE statement is adding a new&lt;br/&gt;
PRIMARY KEY constraint, so we want to check to see if the table &lt;b&gt;already has&lt;/b&gt; such a constraint,&lt;br/&gt;
in which case we want to reject this statement because a table can only have 1 PK constraint:&lt;/p&gt;

&lt;p&gt;ConstraintDescriptorList cdl =&lt;br/&gt;
        dd.getConstraintDescriptors(baseTable);&lt;/p&gt;

&lt;p&gt;if (cdl.getPrimaryKey() != null)&lt;/p&gt;
{
    throw StandardException.newException(
            SQLState.LANG_ADD_PRIMARY_KEY_FAILED1,
            baseTable.getQualifiedName());
}

&lt;p&gt;Hopefully the proposed patch makes a little bit more sense now. Let me know what you think!&lt;/p&gt;</comment>
                            <comment id="12730228" author="eranda" created="Mon, 13 Jul 2009 07:32:16 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Thanks for the explanation. I got the point why we must use that code.&lt;br/&gt;
After patch using your patch file I ran the test and I got the error that&lt;br/&gt;
tables was not there in the schema so I used the&lt;br/&gt;
conn.commit() to the line-86 and the test was ran successfully in&lt;br/&gt;
my platform.  Here I am attaching the patch file after successful run.&lt;br/&gt;
I think this ends the issue. Please let me know.&lt;br/&gt;
I update derby-wiki about this issue, what I&apos;ve done.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12732954" author="bryanpendleton" created="Sun, 19 Jul 2009 02:31:57 +0100"  >&lt;p&gt;Thanks for the revised patch, Eranda!&lt;/p&gt;

&lt;p&gt;I ran a complete set of regression tests, and committed the fix, as revision 795459.&lt;/p&gt;

&lt;p&gt;I decided not to remove the THROWASSERT from Heap.java at this time. I agree with Knut&apos;s observation that the THROWASSERT was not adding much value, but it also seemed that removing it was not essential to the patch, so in the interests of making a small, focused patch, I simply included the changes to AlterTableNode and AlterTableTest.&lt;/p&gt;

&lt;p&gt;I believe that the work on this issue is complete.&lt;/p&gt;</comment>
                            <comment id="12884462" author="lilywei" created="Thu, 1 Jul 2010 23:14:10 +0100"  >&lt;p&gt;Reopen to 10.5 back port&lt;/p&gt;</comment>
                            <comment id="12884815" author="mikem" created="Fri, 2 Jul 2010 22:28:52 +0100"  >&lt;p&gt;working on backporting this to 10.5.&lt;/p&gt;</comment>
                            <comment id="12884923" author="mikem" created="Sat, 3 Jul 2010 15:27:39 +0100"  >&lt;p&gt;backported fix #795459  from trunk to 10.5 branch.  In order to get the testcase for this issue also backported, needed to backport the AlterTableTest.java also.  &lt;/p&gt;

&lt;p&gt;m105_jdk16:58&amp;gt;svn commit&lt;br/&gt;
Sending        .&lt;br/&gt;
Sending        java/engine/org/apache/derby/impl/sql/compile/AlterTableNode.java&lt;br/&gt;
Sending        java/testing/README.htm&lt;br/&gt;
Deleting       java/testing/org/apache/derbyTesting/functionTests/master/altertable.out&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall&lt;br/&gt;
Adding         java/testing/org/apache/derbyTesting/functionTests/tests/lang/AlterTableTest.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java&lt;br/&gt;
Deleting       java/testing/org/apache/derbyTesting/functionTests/tests/lang/altertable.sql&lt;br/&gt;
Deleting       java/testing/org/apache/derbyTesting/functionTests/tests/lang/altertable_derby.properties&lt;br/&gt;
Transmitting file data ....&lt;br/&gt;
Committed revision 960222.&lt;/p&gt;</comment>
                            <comment id="12884924" author="mikem" created="Sat, 3 Jul 2010 15:29:10 +0100"  >&lt;p&gt;resetting original issue owner.&lt;/p&gt;</comment>
                            <comment id="12885215" author="knutanders" created="Mon, 5 Jul 2010 13:53:51 +0100"  >&lt;p&gt;Changed 10.5 fix version to match the version on the branch.&lt;/p&gt;</comment>
                            <comment id="13685255" author="knutanders" created="Mon, 17 Jun 2013 10:19:29 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12468384">DERBY-4728</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12413272" name="ASF.LICENSE.NOT.GRANTED--DERBY-4244.diff" size="5043" author="eranda" created="Mon, 13 Jul 2009 07:32:16 +0100"/>
                            <attachment id="12412785" name="checkAtCompileTime.diff" size="2026" author="bryanpendleton" created="Tue, 7 Jul 2009 21:27:12 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 23 May 2009 15:41:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24128</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0pzz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38030</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>