<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1726/DERBY-1726.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1726] Make i18n/LocalizedDisplay.sql and i18n/LocalizedConnectionAttribute.sql behave equally on different platforms</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1726</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Myrna van Lunteren commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-244&quot; title=&quot;with linux, depending on env setting $LANG and console encoding, some i18n tests fail&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-244&quot;&gt;&lt;del&gt;DERBY-244&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;The one remark I have is that I still cannot get the LocalizedDisplay.sql and LocalizedConnectionAttribute.sql test from the i18n directory to behave the same under windows and Linux (with sun jdk 1.4.2.).&lt;br/&gt;
For windows, I had to update the masters for these tests, but running them on Linux still failed for me.&lt;br/&gt;
With jdk131, ibm131 and ibm142 the LocalizedDisplay.sql test hung, and LocalizedConnectionAttribute exits with a MalformedInputException.&lt;br/&gt;
It would be nice if we could figure out a way to add these tests to the suites...&lt;/p&gt;

&lt;p&gt;&amp;#8212; stack of LocalizedConnectionAttribute on Linux &amp;#8212;&lt;br/&gt;
Exception in thread &quot;main&quot; sun.io.MalformedInputException&lt;br/&gt;
        at sun.io.ByteToCharUTF8.convert(ByteToCharUTF8.java(Compiled Code))&lt;br/&gt;
        at sun.nio.cs.StreamDecoder$ConverterSD.convertInto(StreamDecoder.java:287)&lt;br/&gt;
        at sun.nio.cs.StreamDecoder$ConverterSD.implRead(StreamDecoder.java:337)&lt;br/&gt;
        at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:223)&lt;br/&gt;
        at java.io.InputStreamReader.read(InputStreamReader.java:208)&lt;br/&gt;
        at java.io.BufferedReader.fill(BufferedReader.java:153)&lt;br/&gt;
        at java.io.BufferedReader.readLine(BufferedReader.java:316)&lt;br/&gt;
        at java.io.BufferedReader.readLine(BufferedReader.java:379)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.harness.RunTest.setDirectories(RunTest.java:729)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.harness.RunTest.main(RunTest.java:262)&lt;br/&gt;
---------------------------------------------------------------------------- &lt;/p&gt;</description>
                <environment></environment>
        <key id="12348238">DERBY-1726</key>
            <summary>Make i18n/LocalizedDisplay.sql and i18n/LocalizedConnectionAttribute.sql behave equally on different platforms</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Aug 2006 18:26:41 +0100</created>
                <updated>Wed, 6 Jul 2011 11:31:49 +0100</updated>
                            <resolved>Tue, 25 Nov 2008 08:20:46 +0000</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12603948" author="myrna" created="Tue, 10 Jun 2008 18:50:31 +0100"  >&lt;p&gt;I was poking at this, thinking maybe these 2 .sql files could be funneled through junit, with some checking for desired environment settings (if undesired, return empty suite) and some SystemPropertyDecorating.&lt;/p&gt;

&lt;p&gt;But I encountered some issues:&lt;br/&gt;
1. I am aware of 2 ways of running a .sql script through ij from junit; &lt;br/&gt;
    a. use ij.runScript&lt;br/&gt;
    b. extend util.IjTestCase (uses ij.main(&quot;-fr&quot;, &quot;fileName&quot;);&lt;br/&gt;
    (See also &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3088&quot; title=&quot;convert to junit, or otherwise eliminate version in tests which require an update of the master in the release management process&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3088&quot;&gt;&lt;del&gt;DERBY-3088&lt;/del&gt;&lt;/a&gt;)&lt;br/&gt;
    There are some differences related to this, specifically, &lt;br/&gt;
     + the output with ij.runScript does not include the ij a version number &lt;br/&gt;
       This is + because otherwise we&apos;d have to keep updating the master.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the output with ij.runScript does not include messages re rows  inserted/updated/deleted&lt;br/&gt;
       In these tests this is relevant, because we won&apos;t have a check to see whether those messages still get translated. &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2. If one runs the test LocalizedConnectionAttribute.sql with RunTest, currently the connect ... as ... fails. That&apos;s also how the master file is checked in.&lt;br/&gt;
   a. I could duplicate this behavior when manually running ij without -Dderby.ui.locale=de_DE. The test, however, has that setting in LocalizedConnectionAttribute_app.properties, so, I&apos;m wondering if properties are honored properly with the old harness...&lt;br/&gt;
    b. this connection has a create=true, and that gives some concern about running the test with networkserver and cleanup.&lt;/p&gt;

&lt;p&gt;Any suggestions on how to handle these issues are welcome...&lt;/p&gt;</comment>
                            <comment id="12604951" author="myrna" created="Fri, 13 Jun 2008 20:02:07 +0100"  >&lt;p&gt;I&apos;m attaching an attempt at making the two no longer running scripts - LocalizedDisplay.sql and LocalizedConnectionAttribute.sql - run through junit.&lt;/p&gt;

&lt;p&gt;My earlier concerns are resolved - (on windows with US default settings) LocalizedAttributeScriptTest removes the extra database; and as long as the derby.ui.codeset=Cp850 the connect will work correctly; and the tests cannot run with both network server and embedded.&lt;/p&gt;

&lt;p&gt;The tests each run fine when run individually, or when run one after the other.&lt;/p&gt;

&lt;p&gt;However, I still have trouble running these two tests in _Suite.java - it is as if the system properties do not get unset; the second test will show the errors/messages in the language used by the first test...&lt;br/&gt;
Suggestions?&lt;/p&gt;
</comment>
                            <comment id="12605242" author="knutanders" created="Mon, 16 Jun 2008 11:08:43 +0100"  >&lt;p&gt;Did you forget to do svn add? I can&apos;t find LocalizedAttributeScriptTest or LocalizedDisplayScriptTest in the patch.&lt;/p&gt;</comment>
                            <comment id="12605246" author="knutanders" created="Mon, 16 Jun 2008 11:17:05 +0100"  >&lt;p&gt;Could you explain why this change is needed?&lt;/p&gt;

&lt;p&gt; 	public ScriptTestCase(String script)&lt;/p&gt;
 	{
 		super(script);
-		inputEncoding = &quot;US-ASCII&quot;;
+		inputEncoding = &quot;US_ASCII&quot;;
 	}</comment>
                            <comment id="12605251" author="knutanders" created="Mon, 16 Jun 2008 11:25:20 +0100"  >&lt;p&gt;The problem with the system properties is probably that many of the tools (including ij) cache information about locale in static variables the first time they are used. This is normally fine when they are invoked from the command line, but when we invoke them from the tests with different configurations, we need to make sure the classes are unloaded between each test. For an example, see tools/SysinfoLocaleTest.java.&lt;/p&gt;</comment>
                            <comment id="12605486" author="myrna" created="Tue, 17 Jun 2008 04:19:11 +0100"  >&lt;p&gt;Thank you for the review of the sloppy patch Knut.&lt;/p&gt;

&lt;p&gt;Indeed, I forgot to svn add, and there was absolutely no reason for the change of the inputEncoding in ScriptTestCase (erroneously left over from an experiment).&lt;/p&gt;

&lt;p&gt;I gather that I&apos;ll need to do a main.invoke &amp;amp; use a classloader to force ij to reload the locale? It&apos;s really a pity - I had hoped to use the ScriptTestCase framework...&lt;/p&gt;

&lt;p&gt;Here&apos;s a better cut at the same patch. &lt;/p&gt;

&lt;p&gt;I would appreciate it if someone could try it out outside the US. I tried this on both Linux and Windows and both tests passed individually like this; but I&apos;m fairly certain it will fail in other regions and would like to add a check - but don&apos;t know what external property to check for...&lt;/p&gt;</comment>
                            <comment id="12605594" author="knutanders" created="Tue, 17 Jun 2008 14:22:39 +0100"  >&lt;p&gt;I see this failure (different timezone):&lt;/p&gt;

&lt;p&gt;There was 1 failure:&lt;br/&gt;
1) LocalizedDisplay(org.apache.derbyTesting.functionTests.tests.i18n.LocalizedDisplayScriptTest)junit.framework.ComparisonFailure: Output at line 80 expected:&amp;lt;...2000      |15:30:15 &lt;span class=&quot;error&quot;&gt;&amp;#91;PS&amp;#93;&lt;/span&gt;T      |\u30a4\u30d9...&amp;gt; but was:&amp;lt;...2000      |15:30:15 &lt;span class=&quot;error&quot;&gt;&amp;#91;CE&amp;#93;&lt;/span&gt;T      |\u30a4\u30d9...&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon(CanonTestCase.java:100)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(ScriptTestCase.java:137)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:104)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 1,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="12605599" author="knutanders" created="Tue, 17 Jun 2008 14:30:21 +0100"  >&lt;p&gt;&amp;gt; I gather that I&apos;ll need to do a main.invoke &amp;amp; use a classloader to&lt;br/&gt;
&amp;gt; force ij to reload the locale? It&apos;s really a pity - I had hoped to&lt;br/&gt;
&amp;gt; use the ScriptTestCase framework...&lt;/p&gt;

&lt;p&gt;I don&apos;t remember the exact details about the problem, but it may be&lt;br/&gt;
possible to change how the locale is cached in the tools. Perhaps it&apos;s&lt;br/&gt;
enough to find a way to set the static field LocalizedResource.local&lt;br/&gt;
to null after each test run.&lt;/p&gt;</comment>
                            <comment id="12605869" author="myrna" created="Wed, 18 Jun 2008 08:02:17 +0100"  >&lt;p&gt;Attaching a next patch.&lt;br/&gt;
This one adds a method to LocalizedResource to enable getting rid of the cached value for &apos;local&apos;. I could not get this to work another way.&lt;/p&gt;

&lt;p&gt;I am running a full suite now.&lt;/p&gt;

&lt;p&gt;However, I still have not implemented a check for a desired environment. I think the relevant property is probably file.encoding. For me, that&apos;s Cp1252.&lt;br/&gt;
Knut, could you tell me what you&apos;re setting is?&lt;/p&gt;

&lt;p&gt;(I am attaching a simplistic props.java that cycles through and prints all properties known to the jvm, the output probably should not get directly pasted here for privacy etc).&lt;/p&gt;</comment>
                            <comment id="12605929" author="knutanders" created="Wed, 18 Jun 2008 14:05:57 +0100"  >&lt;p&gt;I&apos;m seeing UTF-8 or ISO8859-1 in the file.encoding property depending on which locale I use.&lt;/p&gt;</comment>
                            <comment id="12605968" author="myrna" created="Wed, 18 Jun 2008 15:40:11 +0100"  >&lt;p&gt;Does LocalizedDisplayScriptTest fail for both locales?&lt;/p&gt;

&lt;p&gt;file.encoding is not the thing to check for...Nor is console.encoding, it&apos;s not even set on some of my environments.&lt;/p&gt;

&lt;p&gt;I guess then user.language? I get &apos;en&apos; on both windows and linux.&lt;/p&gt;

&lt;p&gt;Running the new i18n._Suite on windows (with classes) works for me with the latest patch, but on Linux, things are not so happy; the second test still fails. So I need to do some more research into that.&lt;/p&gt;</comment>
                            <comment id="12605998" author="knutanders" created="Wed, 18 Jun 2008 17:14:33 +0100"  >&lt;p&gt;Yes, it fails for both locales. I have user.language=en and user.country=US, so htat shouldn&apos;t make any difference. I can make the test pass if I set user.timezone=PST.&lt;/p&gt;</comment>
                            <comment id="12606017" author="myrna" created="Wed, 18 Jun 2008 18:43:26 +0100"  >&lt;p&gt;Thanks for doing these experiments...&lt;/p&gt;

&lt;p&gt;Hm, yes, of course - sadly, the master specifically expects PST.&lt;br/&gt;
Well,  I guess it&apos;s better if the test gets only run in PST than not at all...(or we&apos;d have to somehow massage the master).&lt;/p&gt;

&lt;p&gt;If you run normally, is the property &apos;user.timezone&apos; set for you? And if you set timezone to PST? &lt;br/&gt;
For me, when I print out the properties, user.timezone is either not set at all, or set to an empty string...&lt;br/&gt;
What else could I check for here to ensure the test does only run in PST?&lt;/p&gt;</comment>
                            <comment id="12606104" author="kmarsden" created="Wed, 18 Jun 2008 22:46:16 +0100"  >&lt;p&gt;I think java.util.TimeZone.getDefault() returns the default time zone.&lt;/p&gt;</comment>
                            <comment id="12606246" author="myrna" created="Thu, 19 Jun 2008 05:59:00 +0100"  >&lt;p&gt;Thx, Kathey, I&apos;ve modified the LocalizedDisplayScriptTest to bail out if the value of java.util.TimeZone.getDafault().getDisplayName().equals(&quot;Pacific Standard Time&quot;))&lt;br/&gt;
Also, I&apos;ve added a client run to LocalizedDisplayScriptTest.&lt;br/&gt;
Further, I must&apos;ve done something odd with my classpath earlier - for now the tests pass fine on Linux.&lt;/p&gt;

&lt;p&gt;I thought of testing these with my CDC/JSR169/J2ME implementation, weme6.1. &lt;/p&gt;

&lt;p&gt;I realized you can&apos;t run LocalizedAttributeScriptTest with that, because the connect &apos;jdbc:derby:db;create=true&apos; as Munchen will cause a DriverManager codepath, and we don&apos;t have DriverManager with CDC/JSR169.&lt;/p&gt;

&lt;p&gt;However, there seems to be a problem when I ran LocalizedDisplayScriptTest as well -  the localized display shows . (periods) for the NDEC field instead of , (commas). Can anyone confirm on another J2ME jvm?&lt;/p&gt;</comment>
                            <comment id="12606247" author="myrna" created="Thu, 19 Jun 2008 06:01:18 +0100"  >&lt;p&gt;attaching an updated patch.&lt;br/&gt;
I want to run this on iseries...&lt;/p&gt;</comment>
                            <comment id="12606351" author="knutanders" created="Thu, 19 Jun 2008 13:25:58 +0100"  >&lt;p&gt;My first thought is that it is better to set the timezone in setUp() and reset it in tearDown() so that the test can run outside California as well. We already have some tests that set the default locale to a known value in setUp(), so I think it should be OK for the timezone too.&lt;/p&gt;</comment>
                            <comment id="12606373" author="knutanders" created="Thu, 19 Jun 2008 13:53:32 +0100"  >&lt;p&gt;For the record, I managed to get LocalizedDisplayScriptTest running in my timezone by adding this to setUp():&lt;/p&gt;

&lt;p&gt;        defaultTimeZone = TimeZone.getDefault();&lt;br/&gt;
        TimeZone.setDefault(TimeZone.getTimeZone(&quot;America/Los_Angeles&quot;));&lt;/p&gt;

&lt;p&gt;And adding this to tearDown():&lt;/p&gt;

&lt;p&gt;        TimeZone.setDefault(defaultTimeZone);&lt;/p&gt;

&lt;p&gt;Since the class javadoc for java.util.TimeZone explicitly mentions that &quot;America/Los_Angeles&quot; gives U.S. Pacific Time, I&apos;d assume it&apos;s fairly portable.&lt;/p&gt;

&lt;p&gt;Two other comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It would be good to add a comment to LocalizedResource.resetLocalizedResourceCache() explaining what it does, and perhaps why it is needed.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In LocalizedAttributeScriptTest, I think it&apos;s better to use ISO-8859-1 than Cp850, since the former must be supported by all JVMs. The changes you made to the canon also work with ISO-8859-1 encoding.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12606607" author="myrna" created="Fri, 20 Jun 2008 01:59:56 +0100"  >&lt;p&gt;Attaching another version (_5.diff) of the patch. It&apos;s different from _4.diff in the following ways:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary import of SecurityManagerSetup&lt;/li&gt;
	&lt;li&gt;replaced skipping if not PST to forcing run in &quot;America/Los Angeles&quot; timezone as Knut suggested&lt;/li&gt;
	&lt;li&gt;removed TODO comments&lt;/li&gt;
	&lt;li&gt;added removal of &apos;detest&apos; database to LocalizedAttributeScriptTest and removed additionalDatabaseDecorator, because it only tried to remove a non-existing database.&lt;/li&gt;
	&lt;li&gt;changed LocalizedAttributeScriptTest to use ISO-8859-1 instead of Cp850, and of course had to convert LocalizedConnectionAttribute.sql to ISO-8559-1 or the connect as Munchen wouldn&apos;t work (original was in Cp850. Hurray for native2ascii).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The i18n._Suite works for me on windows, iseries and linux. I tried the timezone switching on my windows machine and that worked too. I ran suites.All and it too did not show any unexpected failures, except for .ManagementMBeanTest which occasionally fails on my machine.&lt;/p&gt;

&lt;p&gt;The only issue I&apos;ve left is that this fails for me with weme6.1.&lt;br/&gt;
Is this a JVM issue or something with JSR169?&lt;/p&gt;

&lt;p&gt;I&apos;m going on vacation, so I&apos;m not pursuing this until I get back.&lt;/p&gt;</comment>
                            <comment id="12606722" author="knutanders" created="Fri, 20 Jun 2008 13:11:51 +0100"  >&lt;p&gt;Thanks for making these changes, Myrna!&lt;/p&gt;

&lt;p&gt;&amp;gt; (...) and of course had to convert LocalizedConnectionAttribute.sql&lt;br/&gt;
&amp;gt; to ISO-8559-1&lt;/p&gt;

&lt;p&gt;For some strange reason, I didn&apos;t have to make any changes to the sql&lt;br/&gt;
file when I tried to change Cp850 to ISO-8859-1 before I suggested&lt;br/&gt;
that change. Probably ran the test against old classes. Sorry about&lt;br/&gt;
that. I manage to get the tests running with the #5 patch.&lt;/p&gt;

&lt;p&gt;&amp;gt; The only issue I&apos;ve left is that this fails for me with weme6.1.&lt;br/&gt;
&amp;gt; Is this a JVM issue or something with JSR169?&lt;/p&gt;

&lt;p&gt;What kind of failure are you seeing? If it&apos;s a timezone problem, you&lt;br/&gt;
could check what java.util.TimeZone.getAvailableIDs() returns. If the&lt;br/&gt;
timezone isn&apos;t supported in a JVM, we could skip the test in that&lt;br/&gt;
environment (similar to the collation tests, which are skipped if the&lt;br/&gt;
JVM doesn&apos;t have collators for the locales they are going to test).&lt;/p&gt;

&lt;p&gt;I didn&apos;t notice until now, but LocalizedConnectionAttribute.out&lt;br/&gt;
doesn&apos;t have any non-ASCII characters. Instead, it has question marks&lt;br/&gt;
where the non-ASCII characters should have been. Don&apos;t know why it&lt;br/&gt;
happens, but it seems like there&apos;s something wrong with the output&lt;br/&gt;
encoding.&lt;/p&gt;

&lt;p&gt;Similarly, LocalizedDisplay.sql and LocalizedDisplay.out don&apos;t have&lt;br/&gt;
any non-ASCII characters. They have used some kind of escape sequences&lt;br/&gt;
instead (\uXXXX), which doesn&apos;t make much sense given that ij&lt;br/&gt;
interprets them as sequences of ASCII characters, not as single&lt;br/&gt;
non-ASCII characters. So this test isn&apos;t actually testing localized&lt;br/&gt;
display.&lt;/p&gt;

&lt;p&gt;DisplayScriptTest sets derby.ui.codeSet (capital S), whereas&lt;br/&gt;
AttributeScriptTest sets derby.ui.codeset (small s). I&apos;m not sure&lt;br/&gt;
which is correct. Perhaps they both are.&lt;/p&gt;</comment>
                            <comment id="12606782" author="myrna" created="Fri, 20 Jun 2008 15:38:22 +0100"  >&lt;p&gt;Of course you&apos;re right, LocalizedDisplay.sql doesn&apos;t do anything except enter some strings of characters starting with \u.&lt;br/&gt;
How silly I never noticed that.&lt;br/&gt;
The old RunTest would read the .sql file with UTF-8 encoding before passing it on to ij...&lt;br/&gt;
derby.ui.codeset is what it was in the tests originally, I think that&apos;s what it is supposed to be. I guess, as there&apos;s no EUC_JP characters in LocalizedDisplay.sql at all, it didn&apos;&apos;t really matter.&lt;/p&gt;

&lt;p&gt;I will attach a patch that has the derby.ui.codeset fixed, and has the u-umlaut put in place in LocalizedConnectionAttribute.sql instead of the &apos;?&apos;. But I don&apos;t quite know what to do about the LocalizedDisplay.sql.&lt;/p&gt;</comment>
                            <comment id="12617988" author="myrna" created="Tue, 29 Jul 2008 23:15:15 +0100"  >&lt;p&gt;I looked at this for a while, and there are remnants of disappeard(removed) cloudscape technology here - the LocalizedDisplay test sets ij.unicodeEscape=on, and there is code in LocalizedResource that handles setting and getting this property, but I don&apos;t see that the property is checked/used anywhere (except in the LocalizedResource.toString()).&lt;/p&gt;

&lt;p&gt;The question is, should we try to reinvent this functionality? If so, I&apos;ll log an improvement against ij, but I&apos;ve no plans to do this myself right now.&lt;/p&gt;

&lt;p&gt;In the mean time, we should remove the remnants of that code. For instance, derbyall includes the test UnicodeEscape_JP.sql. At one time this test may have made sense if it would switch to UnicodeEscape mode, but as this functionality has been removed, running the UnicodeEscape_JP.sql test is pointless. Similarly, the setting of ij.unicodeEscape=on in LocalizedDisplay_app.properties is pointless. I also think JapanCodeConversion deserves a closer look. &lt;/p&gt;

&lt;p&gt;To resolve the current test issue, I am going to try to do a native2ascii reverse on LocalizedDisplay.sql.&lt;/p&gt;</comment>
                            <comment id="12618563" author="myrna" created="Thu, 31 Jul 2008 00:55:09 +0100"  >&lt;p&gt;Attaching a new patch (_7), which diffs from _6 in that it doesn&apos;t set unicodeEscape and in that LocalizedDisplay.sql has been modified to be in Cp932 and the .out has been modified accordingly.&lt;/p&gt;

&lt;p&gt;If someone can review I&apos;d appreciate it. Haven&apos;t run suites.All yet.&lt;/p&gt;</comment>
                            <comment id="12620385" author="myrna" created="Wed, 6 Aug 2008 20:11:21 +0100"  >&lt;p&gt;Attaching one more cut at this patch, _8.diff. This differs from the previous one (_7.diff) in 2 ways:&lt;br/&gt;
1. exits the tests (and i18n._Suite) if user.language is not en. &lt;br/&gt;
   The master files are generated in an english locale, and have been morphed by the output.encoding. Running them on a system with another locale (I tried on a japanese windows system (chcp 932, user.language=ja) and it failed as I suspected. (When I started the tests on that system with -Duser.language=en it was ok, but I don&apos;t think we should or can set user.language inside a java program).&lt;/p&gt;

&lt;p&gt;2. exits the tests (and i18n._Suite) if the jvm is JSR169.&lt;br/&gt;
   The LocalizedConnectionAttribute script contains a connect as which uses a protocol and would cause a java.sql.Driver not found error. LocalizedDisplay script contains a decimal datatype which does not get localized (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-470&quot; title=&quot;Exception when using LOCALIZEDDISPLAY with JSR169&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-470&quot;&gt;&lt;del&gt;DERBY-470&lt;/del&gt;&lt;/a&gt;) and causes a diff.&lt;/p&gt;

&lt;p&gt;I intend to commit this patch shortly.&lt;br/&gt;
I&apos;ve ran varieties of combinations of tests (from suites.All to single tests) on various systems (win (en and ja), linux, iseries) and with various jvms (sun, ibm (incl. weme6.1)).&lt;/p&gt;</comment>
                            <comment id="12621644" author="myrna" created="Tue, 12 Aug 2008 00:09:25 +0100"  >&lt;p&gt;I committed my latest patch with revision 683410. I think this issue can now be closed, it doesn&apos;t appear to have caused troubles in the tinderbox or nightly tests.&lt;/p&gt;</comment>
                            <comment id="12623602" author="knutanders" created="Tue, 19 Aug 2008 09:36:44 +0100"  >&lt;p&gt;Thanks for all your work on this issue, Myrna!&lt;/p&gt;

&lt;p&gt;I have a couple of questions about the #8 patch:&lt;/p&gt;

&lt;p&gt;  1) Instead of skipping the tests if user.language != en, couldn&apos;t we set/reset the locale in setUp/tearDown? See tools/SysinfoLocaleTest.java for an example&lt;/p&gt;

&lt;p&gt;  2) If LocalizedDisplay.&lt;/p&gt;
{out,sql}
&lt;p&gt; are encoded in Cp932, shouldn&apos;t LocalizedDisplayScriptTest have used the super constructor with an encoding parameter?&lt;/p&gt;

&lt;p&gt;  3) Non-ASCII characters in LocalizedConnectionAttribute.out and LocalizedDisplay.out seems to have been replaced by question marks. Was that intended?&lt;/p&gt;</comment>
                            <comment id="12623636" author="knutanders" created="Tue, 19 Aug 2008 12:10:44 +0100"  >&lt;p&gt;Forgot to mention: Comment in LocalizedAttributeScriptTest&apos;s constructor says that the input encoding is Cp850, but it is ISO-8859-1, and the example in the javadoc comment for LocalizedDisplayScriptTest.main() uses the wrong class name (LocalizedSuite -&amp;gt; LocalizedDisplayScriptTest).&lt;/p&gt;</comment>
                            <comment id="12649626" author="knutanders" created="Fri, 21 Nov 2008 08:16:31 +0000"  >&lt;p&gt;Reopening because there are still some unresolved issues. See my two previous comments and this posting to derby-dev: &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200811.mbox/%3C492601D1.8000205@sbcglobal.net%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200811.mbox/%3C492601D1.8000205@sbcglobal.net%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12649749" author="myrna" created="Fri, 21 Nov 2008 18:53:53 +0000"  >&lt;p&gt;I&apos;ll comment a little - shooting from the hip - and experiment later.&lt;/p&gt;

&lt;p&gt;One reason I haven&apos;t worked more on this is that I no longer have access to a Japanese machine so it&apos;s hard to get anything with that encoding going anymore. &lt;/p&gt;

&lt;p&gt;Re 3 in Knut&apos;s comment of Aug 19 - I think the ? are ok, they represent the result of the output run through an english console.encoding, and/or file.encoding, which I don&apos;t think we can change...I believe any time a character not recognized in the current encoding (or is it codeset? or codepage?) need to be printed it gets a ?. So even if we managed to get this through Japanese encoding, I think we&apos;d still see ? in the output. If someone knows better than me on this, please correct me!&lt;/p&gt;

&lt;p&gt;Re using constructor with encoding parameter - I think indeed, we should have a different encoding. As Kathey said and Knut noticed, currently the test really runs in US-ASCII...Maybe that&apos;s ok for this test, which judging by the name was really intended to test LocalizedDisplay.&lt;/p&gt;

&lt;p&gt;Other tests that test derby.ui.codeset is LocalizedConnectionAttribute.sql/LocalizedAttributeScriptTest, which I think has the same issue as LocalizedDisplay...and is ISO-8559-1, which is not different enough from US-ASCII, I think, to be a problem or make a difference...&lt;br/&gt;
And tools/SysinfoLocaleTest.java.&lt;br/&gt;
So not a whole lot, and no other ij tests...&lt;/p&gt;</comment>
                            <comment id="12650185" author="knutanders" created="Mon, 24 Nov 2008 12:19:35 +0000"  >&lt;p&gt;LocalizedConnectionAttribute.sql doesn&apos;t have any Japanese characters, but there still are question marks in the canon.&lt;/p&gt;</comment>
                            <comment id="12650203" author="knutanders" created="Mon, 24 Nov 2008 14:00:05 +0000"  >&lt;p&gt;Here&apos;s an attempt to fix the encoding.&lt;/p&gt;

&lt;p&gt;It seems like the problem was that ScriptTestCase.runTest() would always set the output encoding explicitly when calling ij.runScript(), so that derby.ui.codeset had no effect.&lt;/p&gt;

&lt;p&gt;The patch makes it possible to set CanonTestCase&apos;s default output encoding to something other than US-ASCII, and it makes ScriptTestCase pass output encoding null to ij.runScript() if derby.ui.codeset is set.&lt;/p&gt;

&lt;p&gt;Also, the SQL script for LocalizedDisplay was encoded in Cp932 which, as Kathey mentioned, is only supported by IBM&apos;s JVM. The test did however set derby.ui.codeset to EUC_JP, so I changed the input file to use the same encoding as the output file, and that appears to work in Sun&apos;s JVM as well. (I assume that EUC_JP also works in IBM&apos;s JVM since the test has been using that encoding for comparing the canon and the output for a long time already without causing any problems.)&lt;/p&gt;

&lt;p&gt;The canons for LocalizedDisplay and LocalizedConnectionAttribute are now encoded in EUC_JP and ISO-8859-1, respectively, and the question marks are gone.&lt;/p&gt;

&lt;p&gt;Additionally, I removed the check in the suite() methods that disabled the tests in non-English locales. If this turns out to be a problem, we should set the locale in setUp/tearDown instead of disabling the test.&lt;/p&gt;

&lt;p&gt;I&apos;ll run the rest of the JUnit tests to see that these changes don&apos;t introduce other problems.&lt;/p&gt;

&lt;p&gt;Does this sound like an OK solution?&lt;/p&gt;</comment>
                            <comment id="12650204" author="knutanders" created="Mon, 24 Nov 2008 14:06:01 +0000"  >&lt;p&gt;Uploading d1726-encoding-1b.diff which is the same as 1a except for two whitespace diffs that have been removed.&lt;/p&gt;</comment>
                            <comment id="12650226" author="myrna" created="Mon, 24 Nov 2008 15:24:45 +0000"  >
&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for making the patch - what a nice way to start my day! I&apos;ll&lt;br/&gt;
try it out today. I want to at least try it out on windows and unix&lt;br/&gt;
platforms...&lt;/p&gt;

&lt;p&gt;Myrna&lt;/p&gt;</comment>
                            <comment id="12650237" author="knutanders" created="Mon, 24 Nov 2008 16:10:18 +0000"  >&lt;p&gt;Thanks, Myrna. I&apos;ll wait for your results before I commit. All the JUnit tests ran cleanly for me, by the way. &lt;/p&gt;</comment>
                            <comment id="12650351" author="myrna" created="Mon, 24 Nov 2008 22:03:15 +0000"  >&lt;p&gt;I tested the encoding_1b patch with a random selection of jvms: on windows (ibm142, ibm16), 64 bit linux (sun 15), and iseries(ibm142) and all seens fine. &lt;br/&gt;
+1 to commit.&lt;/p&gt;</comment>
                            <comment id="12650489" author="knutanders" created="Tue, 25 Nov 2008 08:20:46 +0000"  >&lt;p&gt;Thanks for testing the patch!&lt;br/&gt;
Committed revision 720436.&lt;/p&gt;

&lt;p&gt;I think we can mark this as resolved now.&lt;/p&gt;</comment>
                            <comment id="12828580" author="knutanders" created="Tue, 2 Feb 2010 10:07:03 +0000"  >&lt;p&gt;Nothing more to do in this issue. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12512958">DERBY-5314</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12383986" name="DERBY-1726_1.diff" size="47246" author="myrna" created="Fri, 13 Jun 2008 20:02:07 +0100"/>
                            <attachment id="12384100" name="DERBY-1726_2.diff" size="60724" author="myrna" created="Tue, 17 Jun 2008 04:19:11 +0100"/>
                            <attachment id="12384185" name="DERBY-1726_3.diff" size="58185" author="myrna" created="Wed, 18 Jun 2008 08:02:17 +0100"/>
                            <attachment id="12384184" name="DERBY-1726_3.stat" size="736" author="myrna" created="Wed, 18 Jun 2008 08:02:17 +0100"/>
                            <attachment id="12384253" name="DERBY-1726_4.diff" size="59647" author="myrna" created="Thu, 19 Jun 2008 06:01:18 +0100"/>
                            <attachment id="12384334" name="DERBY-1726_5.diff" size="67430" author="myrna" created="Fri, 20 Jun 2008 01:59:56 +0100"/>
                            <attachment id="12384386" name="DERBY-1726_6.diff" size="68554" author="myrna" created="Fri, 20 Jun 2008 15:38:46 +0100"/>
                            <attachment id="12387245" name="DERBY-1726_7.diff" size="80538" author="myrna" created="Thu, 31 Jul 2008 00:55:09 +0100"/>
                            <attachment id="12387246" name="DERBY-1726_7.stat" size="910" author="myrna" created="Thu, 31 Jul 2008 00:55:09 +0100"/>
                            <attachment id="12387669" name="DERBY-1726_8.diff" size="81940" author="myrna" created="Wed, 6 Aug 2008 20:11:21 +0100"/>
                            <attachment id="12394554" name="d1726-encoding-1a.diff" size="54865" author="knutanders" created="Mon, 24 Nov 2008 14:00:05 +0000"/>
                            <attachment id="12394555" name="d1726-encoding-1a.stat" size="730" author="knutanders" created="Mon, 24 Nov 2008 14:00:05 +0000"/>
                            <attachment id="12394556" name="d1726-encoding-1b.diff" size="54183" author="knutanders" created="Mon, 24 Nov 2008 14:06:01 +0000"/>
                            <attachment id="12384186" name="props.java" size="831" author="myrna" created="Wed, 18 Jun 2008 08:02:17 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jun 2008 17:50:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22668</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36367</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>