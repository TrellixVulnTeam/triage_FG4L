<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4753/DERBY-4753.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4753] &quot;ERROR 42X01: Syntax error: FALSE.&quot; during call to java.sql.DatabaseMetaData.getIndexInfo</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4753</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;We are seeing the failure below occasionally.  It does not happen every time ... with the exact same database and call sequence it will happen about 1 out of 3 times.&lt;/p&gt;

&lt;p&gt;The parameters on the getIndexInfo call are&lt;br/&gt;
connection.getMetaData().getIndexInfo(null, schemaName, tableName, false, false);&lt;br/&gt;
schemaName and tableName are valid and definitely not null.&lt;/p&gt;

&lt;p&gt;Caused by: &lt;br/&gt;
java.sql.SQLException: Syntax error: FALSE.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.doGetIndexInfo(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getIndexInfo(Unknown Source)&lt;br/&gt;
	at com.ibm.team.repository.service.db.provider.AbstractDbProvider.getIndexMetadata(AbstractDbProvider.java:381)&lt;br/&gt;
	at com.ibm.team.repository.service.db.provider.AbstractDbProvider.doesIndexExist(AbstractDbProvider.java:343)&lt;br/&gt;
	... 61 more&lt;br/&gt;
Caused by: &lt;br/&gt;
ERROR 42X01: Syntax error: FALSE.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.checkInternalFeature(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.literal(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.valueSpecification(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.valueExpressionPrimary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primaryExpressionXX(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primaryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.unaryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.multiplicativeExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.additiveExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.thenElseExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.whenThenExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.valueSpecification(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.valueExpressionPrimary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primaryExpressionXX(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primaryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.unaryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.multiplicativeExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.additiveExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.valueExpressionPrimary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primaryExpressionXX(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.primaryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.unaryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.multiplicativeExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.additiveExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.derivedColumn(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.selectSublist(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.selectColumnList(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.selectList(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.querySpecification(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.simpleTable(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.nonJoinQueryPrimary(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.nonJoinQueryTerm(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.queryExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.preparableSelectStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.preparableSQLDataStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.StatementPart(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SQLParser.Statement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 68 more&lt;/p&gt;</description>
                <environment>Linux</environment>
        <key id="12469897">DERBY-4753</key>
            <summary>&quot;ERROR 42X01: Syntax error: FALSE.&quot; during call to java.sql.DatabaseMetaData.getIndexInfo</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="chaney">Craig Chaney</reporter>
                        <labels>
                            <label>derby_triage10_8</label>
                    </labels>
                <created>Thu, 22 Jul 2010 10:52:41 +0100</created>
                <updated>Wed, 21 Jan 2015 00:23:21 +0000</updated>
                            <resolved>Tue, 4 Mar 2014 10:00:58 +0000</resolved>
                                    <version>10.5.3.0</version>
                                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12891096" author="knutanders" created="Thu, 22 Jul 2010 12:21:54 +0100"  >&lt;p&gt;This is most likely going to work with the latest 10.7 development sources because FALSE is now accepted also in non-internal SQL, and the failing call to checkInternalFeature() from SQLParser.literal() has been removed. But, regardless of that, it looks like we have a bug that makes the compiler context lose the knowledge about it being an internal statement. Too bad we don&apos;t have a reliable repro for it.&lt;/p&gt;</comment>
                            <comment id="13539957" author="knutanders" created="Thu, 27 Dec 2012 13:49:33 +0000"  >&lt;p&gt;As suggested above, newer versions accept the FALSE keyword also in non-internal queries. However, the getIndexInfo query uses other internal syntax, so this may still fail, just with a different syntax error.&lt;/p&gt;

&lt;p&gt;I noticed that the stack trace contained a call to GenericPreparedStatement.rePrepare(), so it looks like it happened after getIndexInfo() found out it was using a stale query plan and decided to recompile. When recompilation is invoked through that path, it ends up calling GenericStatement.prepare() with the forMetaData parameter set to false. This is the reason why the internal syntax isn&apos;t accepted.&lt;/p&gt;

&lt;p&gt;Following that clue, I managed to reproduce the syntax error, but only when running in soft-upgrade mode. Presumably, soft-upgrade mode is needed because the call to rePrepare() in GenericPreparedStatement.executeStmt() is guarded with a check for whether it is an SPS, and the SPS is not used in soft-upgrade.&lt;/p&gt;

&lt;p&gt;The error can be reproduced by following these steps:&lt;/p&gt;

&lt;p&gt;1) Create an empty database using Derby 10.9.1.0:&lt;/p&gt;

&lt;p&gt;$ java -jar 10.9.1.0/derbyrun.jar ij&lt;br/&gt;
ij version 10.9&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;2) Using the Derby development trunk, run the attached Derby4753.java program with the properties derby.language.stalePlanCheckInterval=5 and derby.database.allowPreReleaseUpgrade=true:&lt;/p&gt;

&lt;p&gt;$ java -Dderby.language.stalePlanCheckInterval=5 -Dderby.database.allowPreReleaseUpgrade=true Derby4753&lt;br/&gt;
Exception in thread &quot;main&quot; java.sql.SQLSyntaxErrorException: Syntax error: org.apache.derby.catalog.IndexDescriptor.isUnique.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:92)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:424)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2400)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1334)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1715)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:287)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.doGetIndexInfo(EmbedDatabaseMetaData.java:2830)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getIndexInfo(EmbedDatabaseMetaData.java:2790)&lt;br/&gt;
	at Derby4753.checkIndexInfo(Derby4753.java:43)&lt;br/&gt;
	at Derby4753.main(Derby4753.java:26)&lt;br/&gt;
Caused by: java.sql.SQLException: Syntax error: org.apache.derby.catalog.IndexDescriptor.isUnique.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
	... 12 more&lt;br/&gt;
Caused by: ERROR 42X01: Syntax error: org.apache.derby.catalog.IndexDescriptor.isUnique.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:278)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.MethodCallNode.resolveMethodCall(MethodCallNode.java:784)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.NonStaticMethodCallNode.bindExpression(NonStaticMethodCallNode.java:186)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpression(JavaToSQLValueNode.java:237)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ConditionalNode.bindExpression(ConditionalNode.java:388)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ResultColumn.bindExpression(ResultColumn.java:737)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressions(ResultColumnList.java:831)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.bindExpressions(SelectNode.java:580)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressions(DMLStatementNode.java:227)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bind(DMLStatementNode.java:140)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:267)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:400)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:99)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:85)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepare(GenericPreparedStatement.java:245)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:425)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:333)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	... 6 more&lt;/p&gt;

&lt;p&gt;The repro works like this:&lt;/p&gt;

&lt;p&gt;It invokes getIndexInfo() once so that the query is compiled. Then it creates a table with lots of columns, so that SYS.SYSCOLUMNS grows significantly. Then it re-executes getIndexInfo() a number of times. After the fifth execution (because derby.language.stalePlanCheckInterval=5) it checks if the query plan is stale. It discovers that SYS.SYSCOLUMNS has changed in size since the initial compilation, and decides the query needs to be recompiled. When re-compiling, it goes down the code path where internal syntax is not allowed.&lt;/p&gt;</comment>
                            <comment id="13539960" author="knutanders" created="Thu, 27 Dec 2012 13:53:36 +0000"  >&lt;p&gt;Setting the &quot;Repro attached&quot; flag. Changing component from JDBC to SQL since the problems seems to be caused by a bug in the SQL compiler.&lt;/p&gt;</comment>
                            <comment id="13541225" author="dagw" created="Mon, 31 Dec 2012 02:14:02 +0000"  >&lt;p&gt;Good detective work! &lt;/p&gt;</comment>
                            <comment id="13906953" author="knutanders" created="Thu, 20 Feb 2014 13:34:59 +0000"  >&lt;p&gt;The repro no longer seems to reproduce the bug. Apparently, creating a single table with 1000 columns is not enough to make the query plan stale with the current code on trunk. Creating more tables seems to make it fail still, though.&lt;/p&gt;

&lt;p&gt;The attached patch (d4753-1a.diff) has turned the repro into a test case in the upgrade test suite. The patch also contains a fix for the bug. The fix is simply to pass down the forMetaData flag from EmbedStatement to the code that recompiles the meta-data query. When given this flag, the compiler knows that internal syntax should be allowed, and the syntax error goes away.&lt;/p&gt;

&lt;p&gt;I&apos;m running the full regression test suite on the patch now.&lt;/p&gt;</comment>
                            <comment id="13907049" author="knutanders" created="Thu, 20 Feb 2014 15:09:31 +0000"  >&lt;p&gt;All the regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13908100" author="jira-bot" created="Fri, 21 Feb 2014 08:39:26 +0000"  >&lt;p&gt;Commit 1570490 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1570490&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1570490&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4753&quot; title=&quot;&amp;quot;ERROR 42X01: Syntax error: FALSE.&amp;quot; during call to java.sql.DatabaseMetaData.getIndexInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4753&quot;&gt;&lt;del&gt;DERBY-4753&lt;/del&gt;&lt;/a&gt;: &quot;ERROR 42X01: Syntax error: FALSE.&quot; during call to java.sql.DatabaseMetaData.getIndexInfo&lt;/p&gt;

&lt;p&gt;When recompiling a meta-data query after detecting that its plan is&lt;br/&gt;
stale, pass down a flag to the compiler to say that it&apos;s a meta-data&lt;br/&gt;
query and that use of internal syntax is allowed.&lt;/p&gt;</comment>
                            <comment id="13919205" author="jira-bot" created="Tue, 4 Mar 2014 10:00:43 +0000"  >&lt;p&gt;Commit 1573989 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1573989&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1573989&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4753&quot; title=&quot;&amp;quot;ERROR 42X01: Syntax error: FALSE.&amp;quot; during call to java.sql.DatabaseMetaData.getIndexInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4753&quot;&gt;&lt;del&gt;DERBY-4753&lt;/del&gt;&lt;/a&gt;: &quot;ERROR 42X01: Syntax error: FALSE.&quot; during call to java.sql.DatabaseMetaData.getIndexInfo&lt;/p&gt;

&lt;p&gt;Merged revision 1570490 from trunk.&lt;/p&gt;</comment>
                            <comment id="14284786" author="myrna" created="Wed, 21 Jan 2015 00:23:21 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12562472" name="Derby4753.java" size="1334" author="knutanders" created="Thu, 27 Dec 2012 13:49:33 +0000"/>
                            <attachment id="12630052" name="d4753-1a.diff" size="10511" author="knutanders" created="Thu, 20 Feb 2014 13:34:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 22 Jul 2010 11:21:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24446</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0i6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36765</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>