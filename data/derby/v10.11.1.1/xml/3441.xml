<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3441/DERBY-3441.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3441] Determine and implement a proper procedure for resetting a prepared statement for reuse in a statement pool</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3441</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Initial investigations indicate there are no existing suitable methods to properly reset a prepared (or callable) statement for reuse with a statement pool.&lt;br/&gt;
A full reset is too heavy weight and defeats the purpose of statement pooling, but a proper procedure should be achievable by reusing existing pieces of code.&lt;/p&gt;

&lt;p&gt;Correctness is of course the most important thing.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12389137">DERBY-3441</key>
            <summary>Determine and implement a proper procedure for resetting a prepared statement for reuse in a statement pool</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12385979">DERBY-3313</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Feb 2008 16:49:44 +0000</created>
                <updated>Mon, 23 Jun 2008 11:05:36 +0100</updated>
                            <resolved>Mon, 7 Apr 2008 09:49:07 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12570773" author="djd" created="Wed, 20 Feb 2008 17:43:13 +0000"  >&lt;p&gt;What is needed for a reset beyond clearParameters, clearBatch and clearWarnings? Just wondering why these are too heavy weight?&lt;/p&gt;</comment>
                            <comment id="12570799" author="kristwaa" created="Wed, 20 Feb 2008 19:10:48 +0000"  >&lt;p&gt;The ones you mention are not too heavy weight.&lt;br/&gt;
What about result sets?&lt;/p&gt;

&lt;p&gt;When running some of the tests, I observed lock timeouts. The failing tests were all SUR tests, and I think the locking behavior might be a bit special there.&lt;br/&gt;
I tried a very experimental patch, where I closed the result sets on logical statement close and when running suites.All I was down to around 20+ errors/failures (as opposed to around 180).&lt;br/&gt;
Most of these I could link to an existing bug.&lt;br/&gt;
So even though I can&apos;t provide a proper answer now, I do believe there is more to be handled than what you mentioned above. I&apos;ll come back with more info as soon I as have any.&lt;/p&gt;


&lt;p&gt;All of this is a bit in the blue currently, so feedback is very much appreciated.&lt;br/&gt;
I hope to get the basic machinery into place, and then work on issues one by one from there.&lt;/p&gt;</comment>
                            <comment id="12572560" author="kristwaa" created="Tue, 26 Feb 2008 17:05:56 +0000"  >&lt;p&gt;&apos;derby-3441-1a-statement_reset.diff&apos; is the first draft of a reset procedure for a statement to be reused in a statement pool. There might be some room for refactoring in am.Statement, since the new method copies code from various other places.&lt;/p&gt;

&lt;p&gt;Please review / comment.&lt;br/&gt;
I am not confident this is the best / correct way of doing it, but I can&apos;t see any errors caused by it either. Suggestions for how to test this is also welcome (or tests &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )!&lt;/p&gt;</comment>
                            <comment id="12572588" author="djd" created="Tue, 26 Feb 2008 18:23:08 +0000"  >&lt;p&gt;I think a list of what is being reset in resetForReuse()&apos;s javadoc (for the method) would be very useful. Otherwise one has to &quot;slug&quot; through the&lt;br/&gt;
code figuring out what is being reset.&lt;/p&gt;

&lt;p&gt;A comment to explain this code would be really good:&lt;/p&gt;

&lt;p&gt;+        } catch (SqlException sqle) &lt;/p&gt;
{
+            throw sqle.getSQLException();
+        }

&lt;p&gt;Ie. why is the top-level exception not being thrown.&lt;/p&gt;

&lt;p&gt;Minor improvement in resetParameters()&lt;/p&gt;

&lt;p&gt;+            for (int i = 0; i &amp;lt; parameterMetaData_.columns_; i++) &lt;/p&gt;
{
+                parameters_[i] = null;
+                parameterSet_[i] = false;
+                parameterRegistered_[i] = false;
+            }

&lt;p&gt;would be to use Arrays.fill().&lt;/p&gt;</comment>
                            <comment id="12572832" author="kristwaa" created="Wed, 27 Feb 2008 08:46:32 +0000"  >&lt;p&gt;Thanks for the comment Dan. I&apos;ll address your other comments later.&lt;/p&gt;

&lt;p&gt;&apos;derby-3441-2a-minor_am_refactoring.diff&apos; addresses Dans comment about the improvement in resetParameters. I changed this (and other existing code) to use Arrays.fill, and also removed some unnecessary throws clauses from the existing code. I figured out &apos;batch_&apos; was never set to null, so I made it final and removed a null check.&lt;/p&gt;

&lt;p&gt;In the future it might be better to only create the ArrayList if you actually do batching, and maybe add a clearBatchX method that will be called where batch_.clear is called currently.&lt;/p&gt;

&lt;p&gt;Committed patch 2a to trunk with revision 631515.&lt;br/&gt;
Have run a subset of the regression tests, am running the full suite for verification.&lt;/p&gt;</comment>
                            <comment id="12572904" author="kristwaa" created="Wed, 27 Feb 2008 13:17:32 +0000"  >&lt;p&gt;I have run suties.All and derbyall without failures with patch 2a, Sun JDK 1.6.0 on Solaris 10.&lt;/p&gt;</comment>
                            <comment id="12572925" author="kristwaa" created="Wed, 27 Feb 2008 15:08:35 +0000"  >&lt;p&gt;&apos;derby-3441-1b-statement_reset.diff&apos; is another try at a proper reset procedure.&lt;br/&gt;
The following has been changed:&lt;br/&gt;
 a) Added JavaDoc to Statement.resetForReuse&lt;br/&gt;
 b) Extracted &quot;user controllable attributes&quot; from the init method, and put them into a separate method.&lt;br/&gt;
    These attributes must be reset when the statement is put into the cache.&lt;br/&gt;
    Examples are query timeout, fetch direction hint and max rows to fetch.&lt;br/&gt;
 c) The allowAutoCommit argument for willTickleServer(), is now set to connection_.autoCommit&lt;br/&gt;
    Does anyone have any useful info on the willTickleServer method?&lt;br/&gt;
 d) Calling batch_.clear() (ArrayList) instead of clearBatch(), to avoid catching/throwing SQLException.&lt;br/&gt;
    See related comment for patch 2a above.&lt;br/&gt;
 e) Removed the outer try-catch clause, and the method now throws SqlException.&lt;/p&gt;

&lt;p&gt;Dan, I hope your comments are addressed.&lt;br/&gt;
Having slugged through the code, did anything come across as strange?&lt;br/&gt;
I.e. why is X reset, but not Y?&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;br/&gt;
I hope to commit later today, even if I don&apos;t have full confidence in the patch. It is a lot better than the current solution anyway, and I&apos;ll work on improving it. When the patch for this issue is committed, I will enable the statement pooling code by committing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3329&quot; title=&quot;Enable statement pooling in the client JDBC driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3329&quot;&gt;&lt;del&gt;DERBY-3329&lt;/del&gt;&lt;/a&gt;. &lt;br/&gt;
The other know new defect is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3457&quot; title=&quot;Closing a logical connection must close all associated logical statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3457&quot;&gt;&lt;del&gt;DERBY-3457&lt;/del&gt;&lt;/a&gt;, which has a patch awaiting review as well.&lt;/p&gt;</comment>
                            <comment id="12573664" author="kristwaa" created="Fri, 29 Feb 2008 10:21:53 +0000"  >&lt;p&gt;&apos;derby-3441-3a-extract_setTransactionIsolationX.diff&apos; creates an internal setTransactionIsolationX method from the java.sql.Connection.setTransactionIsolation. I need to set the transaction isolation level on connection reset, and extracted the internal method to avoid checking for a closed connection multiple times. The extraction follows a typical pattern used in the client driver.&lt;br/&gt;
The logic remains unchanged.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 632279.&lt;/p&gt;</comment>
                            <comment id="12573669" author="kristwaa" created="Fri, 29 Feb 2008 10:35:55 +0000"  >&lt;p&gt;Forgot to say, I ran derbynet._Suite and jdbcapi._Suite without failures, and I&apos;m running the full set of regression tests to verify.&lt;/p&gt;</comment>
                            <comment id="12573772" author="kristwaa" created="Fri, 29 Feb 2008 14:59:21 +0000"  >&lt;p&gt;&apos;derby-3441-1c-statement_reset.diff&apos; implements a working reset procedure for statement pooling.&lt;br/&gt;
Besides the new functionality, I also had to modify some existing code that broke statement pooling. The way things were in the existing code does not seem correct to me, but I need more time to determine what to do about it.&lt;br/&gt;
Also, we should probably discuss whether the required changes should go into 10.4 or be included only in the next release.&lt;/p&gt;

&lt;p&gt;For now I&apos;ve tried to disturb as little as possible. Some cleanup will be required later.&lt;br/&gt;
Since I&apos;m going away for one week, it will have to wait until I&apos;m back.&lt;/p&gt;

&lt;p&gt;And I&apos;m sorry for committing this patch so quickly, but all tests run cleanly and it is required for testing the statement pooling feature.&lt;/p&gt;

&lt;p&gt;Committed patch 1c to trunk with revision 632334.&lt;/p&gt;</comment>
                            <comment id="12574595" author="dyret" created="Mon, 3 Mar 2008 16:21:03 +0000"  >&lt;p&gt;I think all available patches has been committed.&lt;/p&gt;</comment>
                            <comment id="12607172" author="kristwaa" created="Mon, 23 Jun 2008 11:05:36 +0100"  >&lt;p&gt;Closing the issue.&lt;br/&gt;
Some cleanup has been done as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3581&quot; title=&quot;Changing certain properties on client DataSource objects causes existing connections to reflect the new values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3581&quot;&gt;&lt;del&gt;DERBY-3581&lt;/del&gt;&lt;/a&gt;, by removing a unnecessary flag.&lt;/p&gt;

&lt;p&gt;A comment on the code below, from Connection.completeReset(boolean,boolean):&lt;/p&gt;

&lt;p&gt;        if (closeStatementsOnClose) {&lt;br/&gt;
            // NOTE: This is to match previous behavior.&lt;br/&gt;
            //       Investigate and check if it is really necessary.&lt;br/&gt;
            this.isolation_ = TRANSACTION_UNKNOWN;&lt;br/&gt;
            java.util.Set keySet = openStatements_.keySet();&lt;br/&gt;
            for (java.util.Iterator i = keySet.iterator(); i.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;
{
                Object o = i.next();
                ((Statement) o).reset(closeStatementsOnClose);
            }
&lt;p&gt;        } else {&lt;br/&gt;
            // Must reset transaction isolation level if it has been changed.&lt;br/&gt;
            if (isolation_ != Connection.TRANSACTION_READ_COMMITTED) &lt;/p&gt;
{
                // This might not fare well with connection pools, if it has
                // been configured to deliver connection with a different
                // isolation level, i.e. it has to set the isolation level again
                // when it returns connection to client.
                // TODO: Investigate optimization options.
                setTransactionIsolationX(Connection.TRANSACTION_READ_COMMITTED);
            }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;I have not been able to enter the for-loop, as there aren&apos;t any open statements. They are being closed before we get this far, so I&apos;m wondering if we could replace the for loop with an assert. Maybe this code comes from previous functionality or behavior. If &apos;closeStatementsOnClose&apos; is false, it means JDBC statement caching is enabled.&lt;/p&gt;

&lt;p&gt;After that, one would have to check if the handling of the isolation level can be merged as well, in which case the &apos;closeStatementsOnClose&apos; variable can be removed.&lt;/p&gt;

&lt;p&gt;This would have to be checked when using both ClientConnectionPoolDataSource and ClientXADataSource. My investigations so far have been focused on the connection pool data source.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12376515" name="derby-3441-1a-statement_reset.diff" size="4613" author="kristwaa" created="Tue, 26 Feb 2008 17:05:56 +0000"/>
                            <attachment id="12376625" name="derby-3441-1b-statement_reset.diff" size="6383" author="kristwaa" created="Wed, 27 Feb 2008 15:08:35 +0000"/>
                            <attachment id="12376832" name="derby-3441-1c-statement_reset.diff" size="16973" author="kristwaa" created="Fri, 29 Feb 2008 14:59:21 +0000"/>
                            <attachment id="12376606" name="derby-3441-2a-minor_am_refactoring.diff" size="5220" author="kristwaa" created="Wed, 27 Feb 2008 08:46:32 +0000"/>
                            <attachment id="12376804" name="derby-3441-3a-extract_setTransactionIsolationX.diff" size="6838" author="kristwaa" created="Fri, 29 Feb 2008 10:21:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Feb 2008 17:43:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30854</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ysf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39454</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>