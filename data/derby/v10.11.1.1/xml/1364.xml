<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1364/DERBY-1364.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1364] Client driver does not roll back the effects of a stored procedure when incorrectly invoked by executeQuery()/executeUpdate()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1364</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When executing a stored procedure with executeQuery() and the proc&lt;br/&gt;
doesn&apos;t return exactly one result set, the query should fail and the&lt;br/&gt;
statement should be rolled back. Embedded does this correctly.&lt;/p&gt;

&lt;p&gt;The client driver, however, does not roll back the statement, so the&lt;br/&gt;
effects of statements executed on nested connections in the stored&lt;br/&gt;
procedure are still visible. The reason for this is that the network&lt;br/&gt;
server executes the statement with execute() instead of&lt;br/&gt;
executeQuery(), so that it succeeds on the server. The client then&lt;br/&gt;
counts the number of result sets, and raises an exception if it is not&lt;br/&gt;
one, but it does not roll back the effects of the stored procedure.&lt;br/&gt;
verified that.)&lt;/p&gt;

&lt;p&gt;The same problem exists for executeUpdate(). JCC also has these&lt;br/&gt;
problems.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12343788">DERBY-1364</key>
            <summary>Client driver does not roll back the effects of a stored procedure when incorrectly invoked by executeQuery()/executeUpdate()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Jun 2006 18:07:45 +0100</created>
                <updated>Mon, 10 Jul 2006 15:27:39 +0100</updated>
                            <resolved>Mon, 3 Jul 2006 14:13:39 +0100</resolved>
                                    <version>10.1.2.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12414209" author="knutanders" created="Thu, 1 Jun 2006 18:10:44 +0100"  >&lt;p&gt;The simple solution would be to trap the exception on the client and&lt;br/&gt;
roll back. The problem with this is that it would roll back the entire&lt;br/&gt;
transaction, not only the failing statement as the embedded driver&lt;br/&gt;
does.&lt;/p&gt;

&lt;p&gt;I see these three ways to fix it:&lt;/p&gt;

&lt;p&gt;  1) Accept that the entire transaction is rolled back. Since the&lt;br/&gt;
     exception indicates that something is wrong with the application&lt;br/&gt;
     (should not use executeQuery()/executeUpdate()) or with the&lt;br/&gt;
     stored procedure (should return the correct number of result&lt;br/&gt;
     sets), I don&apos;t think it does very much harm. The application will&lt;br/&gt;
     probably not try to commit the transaction anyway.&lt;/p&gt;

&lt;p&gt;  2) Let the client set a savepoint before executing the query, and&lt;br/&gt;
     roll back to the savepoint if an incorrect number of results is&lt;br/&gt;
     returned. This has the downside of adding complexity to the code&lt;br/&gt;
     and extra round trips between the client and the server.&lt;/p&gt;

&lt;p&gt;  3) Make the network server execute the query with executeQuery() or&lt;br/&gt;
     executeUpdate() instead of execute() in these cases. This way,&lt;br/&gt;
     the error will happen at the server and the embedded driver will&lt;br/&gt;
     ensure that the statement is rolled back correctly. DRDA has no&lt;br/&gt;
     direct support for this, but I think we could use a SET statement&lt;br/&gt;
     (something like what was done in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-506&quot; title=&quot;Implement Statement.setQueryTimeout in the Client Driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-506&quot;&gt;&lt;del&gt;DERBY-506&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Does anyone have opinions on these alternatives? Or other suggestions?&lt;br/&gt;
Thanks!&lt;/p&gt;</comment>
                            <comment id="12414572" author="knutanders" created="Sat, 3 Jun 2006 20:33:50 +0100"  >&lt;p&gt;My previous analysis of the problem wasn&apos;t entirely correct. Here&apos;s a&lt;br/&gt;
new attempt (hopefully correct this time):&lt;/p&gt;

&lt;p&gt;Commit/rollback behaviour when using executeQuery() to call a stored&lt;br/&gt;
procedure:&lt;/p&gt;

&lt;p&gt;Auto-commit enabled, no ResultSet returned from the stored procedure:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Embedded: The statements executed from the stored procedure are&lt;br/&gt;
    always rolled back.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Client: The statements executed from the stored procedure are&lt;br/&gt;
    always committed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Auto-commit enabled, more than one Result Set returned:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Embedded: The statements executed from the stored procedure are&lt;br/&gt;
    always rolled back.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Client: If Connection.rollback() is called before the statement or&lt;br/&gt;
    connection is closed, the statements executed from the stored&lt;br/&gt;
    procedure are rolled back. If the statement or connection is&lt;br/&gt;
    closed, or Connection.commit() is called, the statements executed&lt;br/&gt;
    from the stored procedure are committed. If the connection dies&lt;br/&gt;
    before any of commit(), rollback() or close() have been called,&lt;br/&gt;
    the statements in the stored procedure are rolled back.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Auto-commit disabled, no ResultSet or more than one ResultSet returned&lt;br/&gt;
from the stored procedure:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Embedded and client: If commit() is called, the entire transaction&lt;br/&gt;
    is committed, including statements executed from the stored&lt;br/&gt;
    procedure in the failing call to executeQuery(). If rollback() is&lt;br/&gt;
    called, the entire transaction is rolled back.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When using executeUpdate() to call a stored procedure which returns&lt;br/&gt;
one or more ResultSets, the embedded driver does not raise an&lt;br/&gt;
exception. The client driver does that, and it has the same&lt;br/&gt;
commit/rollback behaviour as executeQuery() when the stored procedure&lt;br/&gt;
returns more than one ResultSet.&lt;/p&gt;



&lt;p&gt;Since the behaviour is the same for embedded and client when&lt;br/&gt;
auto-commit is disabled, none of the complex solutions described in my&lt;br/&gt;
previous comment are needed. We only need to make sure the transaction&lt;br/&gt;
is rolled back when auto-commit is enabled.&lt;/p&gt;</comment>
                            <comment id="12417598" author="knutanders" created="Sat, 24 Jun 2006 18:01:00 +0100"  >&lt;p&gt;Attached a patch (derby-1364-v1.diff) which attempts to fix this&lt;br/&gt;
issue. Description of the patch:&lt;/p&gt;

&lt;p&gt;1. Checking of the number of result sets returned was moved from&lt;br/&gt;
   executeUpdate/executeQuery to a point in flowExecute where the&lt;br/&gt;
   transaction has not been auto-committed (otherwise, the transaction&lt;br/&gt;
   would already be committed when the exception was raised).&lt;/p&gt;

&lt;p&gt;2. If the number of result sets does not match the execute type and&lt;br/&gt;
   auto-commit is enabled, the transaction is rolled back (otherwise,&lt;br/&gt;
   the transaction would be committed when the Statement was closed or&lt;br/&gt;
   re-executed).&lt;/p&gt;

&lt;p&gt;3. All execute* methods in CallableStatement were removed since they&lt;br/&gt;
   have become identical to the methods in PreparedStatement. (Or&lt;br/&gt;
   almost identical. The methods in CallableStatement did not call&lt;br/&gt;
   checkStatementValidity() on errors, but that&apos;s probably a bug.)&lt;/p&gt;

&lt;p&gt;4. SQL state for error message in executeQuery() was changed to match&lt;br/&gt;
   embedded (XJ201/XJ205 -&amp;gt; X0Y78). Updated English and Portuguese&lt;br/&gt;
   messages to use the new SQL state (no other translations existed&lt;br/&gt;
   for XJ201 and XJ205).&lt;/p&gt;

&lt;p&gt;5. Added more rollback tests to jdbcapi/ProcedureTest.junit and&lt;br/&gt;
   enabled all test cases for DerbyNetClient.&lt;/p&gt;

&lt;p&gt;I have run derbyall with no failures except runtimeinfo.java which&lt;br/&gt;
fails all the time. The patch is ready for review. Thanks!&lt;/p&gt;</comment>
                            <comment id="12418650" author="knutanders" created="Fri, 30 Jun 2006 21:57:17 +0100"  >&lt;p&gt;I plan to commit the patch early next week. Please let me know if you have any comments or need more time to review.&lt;/p&gt;</comment>
                            <comment id="12418904" author="knutanders" created="Mon, 3 Jul 2006 14:13:39 +0100"  >&lt;p&gt;Committed revision 418692.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335864" name="derby-1364-v1.diff" size="28164" author="knutanders" created="Sat, 24 Jun 2006 18:01:00 +0100"/>
                            <attachment id="12335865" name="derby-1364-v1.stat" size="552" author="knutanders" created="Sat, 24 Jun 2006 18:01:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22462</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy15sv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40590</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>