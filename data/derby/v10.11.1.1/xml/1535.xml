<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:46:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1535/DERBY-1535.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1535] Trial 2 for DERBY-550, improve use of Engine from NetworkServer and reduce memory usage</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1535</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Through &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1513&quot; title=&quot;Trial 1 for DERBY-550&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1513&quot;&gt;&lt;del&gt;DERBY-1513&lt;/del&gt;&lt;/a&gt;, Trial 1 for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-550&quot; title=&quot;BLOB : java.lang.OutOfMemoryError with network JDBC driver (org.apache.derby.jdbc.ClientDriver)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-550&quot;&gt;&lt;del&gt;DERBY-550&lt;/del&gt;&lt;/a&gt;, &lt;br/&gt;
it was suggested that NetworkServer seems to use Engine inefficiently and use too much of memory.&lt;/p&gt;

&lt;p&gt;This task try to improve the use of Engine from NetworkServer and try to reduce memory usage.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12346249">DERBY-1535</key>
            <summary>Trial 2 for DERBY-550, improve use of Engine from NetworkServer and reduce memory usage</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12314092">DERBY-550</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="naka">Tomohito Nakayama</assignee>
                                    <reporter username="naka">Tomohito Nakayama</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Jul 2006 13:22:23 +0100</created>
                <updated>Thu, 13 Dec 2007 09:05:04 +0000</updated>
                            <resolved>Wed, 18 Oct 2006 14:47:57 +0100</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12422108" author="naka" created="Wed, 19 Jul 2006 13:35:56 +0100"  >&lt;p&gt;Reading the code of NetworkServer, it was found that PreparedStatement.setBytes was used.&lt;/p&gt;

&lt;p&gt;Here, I hypothesize that PreparedStatement.setBytes needs more memory than PreparedStatement.setBinaryInputStream.&lt;br/&gt;
Based on that hypothesis, I change call of PreparedStatement.setBytes to PreparedStatement.setBinaryInputStream.&lt;/p&gt;

&lt;p&gt;Measured result was not different from referential result in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1504&quot; title=&quot;Fix way to measure wasteful use of memory when LOB is communicated between network server and driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1504&quot;&gt;&lt;del&gt;DERBY-1504&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, with this patch, OutOfMemoryError was not thrown from NetworkServer in the configuration of -Xmx256m.&lt;br/&gt;
Without this patch, OutOfMemoryError was found in the same configuration of -Xmx256m as written in &lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-1513#action_12421379&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-1513#action_12421379&lt;/a&gt;. &lt;br/&gt;
// However again,  OutOfMemoryError happened at the client side....&lt;br/&gt;
// But it is not at server side.&lt;/p&gt;


</comment>
                            <comment id="12422111" author="naka" created="Wed, 19 Jul 2006 14:00:34 +0100"  >&lt;p&gt;I applied patch of both &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1513&quot; title=&quot;Trial 1 for DERBY-550&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1513&quot;&gt;&lt;del&gt;DERBY-1513&lt;/del&gt;&lt;/a&gt;(Trial-1) and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1535&quot; title=&quot;Trial 2 for DERBY-550, improve use of Engine from NetworkServer and reduce memory usage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1535&quot;&gt;&lt;del&gt;DERBY-1535&lt;/del&gt;&lt;/a&gt;(Trial-2).&lt;/p&gt;

&lt;p&gt;With this patch, OutOfMemoryError did not happen at NetworkServer in the configuration of -Xms32m -Xmx128m.&lt;br/&gt;
//However , OutOfMemoryError happened at the Client....&lt;/p&gt;

&lt;p&gt;There &lt;b&gt;were&lt;/b&gt; different in the measured result from the referential result in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1504&quot; title=&quot;Fix way to measure wasteful use of memory when LOB is communicated between network server and driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1504&quot;&gt;&lt;del&gt;DERBY-1504&lt;/del&gt;&lt;/a&gt;, though it was not clear whether memory usage was improved ...&lt;br/&gt;
At least, the result shows that behavior of memory usage is different from before.&lt;br/&gt;
//In my view, it seems like that chart of memory usage is more healthy than before .....&lt;/p&gt;

&lt;p&gt;I think this patch would improve memory usagein NetworkServer to some extent.....&lt;/p&gt;</comment>
                            <comment id="12422397" author="naka" created="Thu, 20 Jul 2006 12:27:07 +0100"  >&lt;p&gt;I found  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1513&quot; title=&quot;Trial 1 for DERBY-550&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1513&quot;&gt;&lt;del&gt;DERBY-1513&lt;/del&gt;&lt;/a&gt;_1535.patch causes error in parameterMapping.java as next.&lt;br/&gt;
   derbyall/derbynetclientmats/derbynetmats.fail:jdbcapi/parameterMapping.java&lt;/p&gt;

&lt;p&gt;Reading the results, this error seem to have something to do with &lt;br/&gt;
conversion between streamed-binary and stored-text.&lt;/p&gt;

&lt;p&gt;Next are what was found in parameterMapping.diff .&lt;/p&gt;

&lt;p&gt;setXXX() with all JDBC Types on CHAR(60)&lt;br/&gt;
For setXXX() methods that pass an object, a null and valid values are checked&lt;br/&gt;
--------------------&lt;br/&gt;
1354 del&lt;br/&gt;
&amp;lt;   setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1355 del&lt;br/&gt;
&amp;lt;   setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1355a1354,1355&lt;br/&gt;
&amp;gt;   setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;gt;   setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
1366 del&lt;br/&gt;
&amp;lt;   setBlob() getString=EncodedString: &amp;gt; 12867 29251 55 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1367 del&lt;br/&gt;
&amp;lt;   setBlob() as batch getString=EncodedString: &amp;gt; 12867 29251 55 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1367a1366,1367&lt;br/&gt;
&amp;gt;   setBlob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;gt;   setBlob() as batch IC JDBC MATCH (INVALID)&lt;/p&gt;


&lt;p&gt;setXXX() with all JDBC Types on VARCHAR(60)&lt;br/&gt;
For setXXX() methods that pass an object, a null and valid values are checked&lt;br/&gt;
--------------------&lt;br/&gt;
1526 del&lt;br/&gt;
&amp;lt;   setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1527 del&lt;br/&gt;
&amp;lt;   setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1527a1526,1527&lt;br/&gt;
&amp;gt;   setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;gt;   setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
1538 del&lt;br/&gt;
&amp;lt;   setBlob() getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1539 del&lt;br/&gt;
&amp;lt;   setBlob() as batch getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1539a1538,1539&lt;br/&gt;
&amp;gt;   setBlob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;gt;   setBlob() as batch IC JDBC MATCH (INVALID)&lt;/p&gt;


&lt;p&gt;setXXX() with all JDBC Types on LONG VARCHAR&lt;br/&gt;
For setXXX() methods that pass an object, a null and valid values are checked&lt;br/&gt;
--------------------&lt;br/&gt;
1698 del&lt;br/&gt;
&amp;lt;   setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1699 del&lt;br/&gt;
&amp;lt;   setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1699a1698,1699&lt;br/&gt;
&amp;gt;   setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;gt;   setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
1710 del&lt;br/&gt;
&amp;lt;   setBlob() getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1711 del&lt;br/&gt;
&amp;lt;   setBlob() as batch getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
1711a1710,1711&lt;br/&gt;
&amp;gt;   setBlob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;gt;   setBlob() as batch IC JDBC MATCH (INVALID)&lt;/p&gt;</comment>
                            <comment id="12422405" author="naka" created="Thu, 20 Jul 2006 13:15:27 +0100"  >&lt;p&gt;The result of the test told that the errors happen when uploaded binary data was stored into the character type column such as CHAR(60), VARCHAR(60) , LONG VARCHAR .&lt;/p&gt;

&lt;p&gt;These errors were considered as correct behavior in the test of Engine(and DB2 driver) as shown in the next output of diff between master .out files.&lt;/p&gt;

&lt;p&gt;naka@rufelza:~/derby/dev/trunk/java/testing/org/apache/derbyTesting/functionTests/master$ diff parameterMapping.out DerbyNetClient/parameterMapping.out &lt;br/&gt;
                                                   &amp;lt;snip&amp;gt;&lt;br/&gt;
1823,1826c1354,1357&lt;br/&gt;
&amp;lt;   setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;   setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream(null) as batch getString=null was null true CLOUD EXT (OK)&lt;/p&gt;

&lt;p&gt;1831,1838c1362,1369&lt;br/&gt;
&amp;lt;   setClob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;   setClob() getString=72                                                           was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob() as batch getString=72                                                           was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob() getString=EncodedString: &amp;gt; 12867 29251 55 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob() as batch getString=EncodedString: &amp;gt; 12867 29251 55 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
                                                      &amp;lt;snip&amp;gt;&lt;br/&gt;
2057,2060c1526,1529&lt;br/&gt;
&amp;lt;   setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;   setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
2065,2072c1534,1541&lt;br/&gt;
&amp;lt;   setClob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;   setClob() getString=72 was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob() as batch getString=72 was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob() getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob() as batch getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
                                                   &amp;lt;snip&amp;gt;&lt;br/&gt;
2291,2294c1698,1701&lt;br/&gt;
&amp;lt;   setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBinaryStream(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;   setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBinaryStream(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
2299,2306c1706,1713&lt;br/&gt;
&amp;lt;   setClob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setClob(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt;   setBlob(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;   setClob() getString=72 was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob() as batch getString=72 was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setClob(null) as batch getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob() getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob() as batch getString=EncodedString: &amp;gt; 12867 29251 55 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt;   setBlob(null) as batch getString=null was null true CLOUD EXT (OK)&lt;/p&gt;


&lt;p&gt;I will make the behavior of the NetworkClient to that of the Engine in concerning part around this patch ....&lt;/p&gt;</comment>
                            <comment id="12422411" author="naka" created="Thu, 20 Jul 2006 13:44:24 +0100"  >&lt;p&gt;Correct expression in English ....&lt;br/&gt;
&amp;lt;  I will make the behavior of the NetworkClient to that of the Engine in concerning part around this patch ....&lt;br/&gt;
&amp;gt; I will make the behavior of the NetworkClient same to that of the Engine in concerning parts around this patch ....&lt;/p&gt;</comment>
                            <comment id="12422631" author="naka" created="Fri, 21 Jul 2006 13:52:52 +0100"  >&lt;p&gt;Description of the patch:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Avoid expanding data into memory twice when NetworkServer receive binary stream.(see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1513&quot; title=&quot;Trial 1 for DERBY-550&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1513&quot;&gt;&lt;del&gt;DERBY-1513&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;Modify how NetworkServer use Engine when received binary stream.(see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1535&quot; title=&quot;Trial 2 for DERBY-550, improve use of Engine from NetworkServer and reduce memory usage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1535&quot;&gt;&lt;del&gt;DERBY-1535&lt;/del&gt;&lt;/a&gt;, this issue)&lt;/li&gt;
	&lt;li&gt;Concerning to modification of way to use Engine, master file of DerbyNetClient/parameterMapping.java was partly modified to be as same as that of Engine.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Test:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Execute derbyall and found no error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12422821" author="naka" created="Sat, 22 Jul 2006 09:58:59 +0100"  >&lt;p&gt;Committed ...&lt;br/&gt;
Sending        java/drda/org/apache/derby/impl/drda/DDMReader.java&lt;br/&gt;
Sending        java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/parameterMapping.out&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 424539.&lt;/p&gt;</comment>
                            <comment id="12423134" author="skambha" created="Mon, 24 Jul 2006 20:57:35 +0100"  >&lt;p&gt;Hi Tomohito, Thanks for looking into this issue.&lt;/p&gt;

&lt;p&gt;I noticed, there are some differences in the master file for server and the embedded as you  mention in the earlier comment.  &lt;br/&gt;
---------------------------------------------&lt;br/&gt;
naka@rufelza:~/derby/dev/trunk/java/testing/org/apache/derbyTesting/functionTests/master$ diff parameterMapping.out DerbyNetClient/parameterMapping.out&lt;br/&gt;
                                                   &amp;lt;snip&amp;gt;&lt;br/&gt;
1823,1826c1354,1357&lt;br/&gt;
&amp;lt; setBinaryStream() IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt; setBinaryStream() as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt; setBinaryStream(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt; setBinaryStream(null) as batch IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt; setBinaryStream() getString=EncodedString: &amp;gt; 33347 51966 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt; setBinaryStream() as batch getString=EncodedString: &amp;gt; 33347 51966 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 &amp;lt; was null false CLOUD EXT (OK)&lt;br/&gt;
&amp;gt; setBinaryStream(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt; setBinaryStream(null) as batch getString=null was null true CLOUD EXT (OK) &lt;br/&gt;
---------------------------------------------------&lt;/p&gt;

&lt;p&gt;Now with the recent patch to this issue, the first two lines in server are similar to the embedded.  But the output in case of setBinaryStream(null) is still different from the embedded case. as before.&lt;/p&gt;

&lt;p&gt;Embedded has this&lt;br/&gt;
&amp;lt; setBinaryStream(null) IC JDBC MATCH (INVALID)&lt;br/&gt;
&amp;lt; setBinaryStream(null) as batch IC JDBC MATCH (INVALID) &lt;/p&gt;

&lt;p&gt;and Server has &lt;br/&gt;
&amp;gt; setBinaryStream(null) getString=null was null true CLOUD EXT (OK)&lt;br/&gt;
&amp;gt; setBinaryStream(null) as batch getString=null was null true CLOUD EXT (OK) &lt;/p&gt;

&lt;p&gt;Do we also have some other existing issue here ?  Can you help me understand this difference in behavior.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12423351" author="naka" created="Tue, 25 Jul 2006 15:52:53 +0100"  >&lt;p&gt;I overlooked the problem that setBinaryStream(null) is still different from embedded though setBinaryStream(notNullValue) is same.&lt;/p&gt;

&lt;p&gt;This problem shouuld be resolved in this issue.&lt;/p&gt;

&lt;p&gt;I think this problem happen because setBinaryStream of Engine is not called when setBinaryStream of Network Driver is called with null value. &lt;/p&gt;

&lt;p&gt;I start fix it.&lt;/p&gt;</comment>
                            <comment id="12423367" author="naka" created="Tue, 25 Jul 2006 16:30:39 +0100"  >&lt;p&gt;Surveying the source code, it seems to have something to do with difference between PreparedStatmement.setNull and PreparedStatement.setBinaryStream(null)....&lt;/p&gt;

&lt;p&gt;I&apos;m not sure whether we can distinguish them in drda architecture.&lt;/p&gt;

&lt;p&gt;Moreover, I came to have a question whether it is should be allowed to call setBinaryStream with null value.&lt;br/&gt;
Existence of setNull method may implicitly indicate setXXXX method should not be called with null value.&lt;br/&gt;
However, taking setXXXX method with null value as error would have much of impact to the existing applications ...&lt;/p&gt;</comment>
                            <comment id="12423369" author="naka" created="Tue, 25 Jul 2006 16:38:34 +0100"  >&lt;p&gt;Now, I just have read source code and there exists somethink not clear yet.&lt;br/&gt;
It seems to be needed to trace execution of program to know the fact more clearly.&lt;/p&gt;

&lt;p&gt;I will continue to survey and report the result. &lt;/p&gt;</comment>
                            <comment id="12423375" author="andreask" created="Tue, 25 Jul 2006 16:53:39 +0100"  >&lt;p&gt;I think there could be a problem here:&lt;/p&gt;

&lt;p&gt;DRDAConnThread:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ps.setBytes(i+1, paramBytes);&lt;br/&gt;
+						ps.setBinaryStream(i+1, &lt;br/&gt;
+										   new ByteArrayInputStream(paramBytes),&lt;br/&gt;
+							&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If paramBytes is null, it would previously be interpreted by the engine as there is a NULL value inserted into the database.&lt;br/&gt;
When creating a new ByteArrayInputStream, I guess it would be interpreted as inserting no data into the BLOB (if the paramBytes is null), or maybe a NullPointerException gets thrown&lt;/p&gt;</comment>
                            <comment id="12423385" author="naka" created="Tue, 25 Jul 2006 17:45:29 +0100"  >&lt;p&gt;Reading the code, the parameter of paramBytes seems not be null.&lt;br/&gt;
Instead, ps.setNull method seems to be called in DRDAConnThread.parseSQLDTA_work method.&lt;/p&gt;

&lt;p&gt;However I can&apos;t conclude only by reading the source code.&lt;br/&gt;
Too much &quot;seems to be&quot; is in my report yet. *(&lt;br/&gt;
Current my recognition is that we need to trace execution of the program using jdb.&lt;/p&gt;</comment>
                            <comment id="12424361" author="naka" created="Sun, 30 Jul 2006 08:24:20 +0100"  >&lt;p&gt;Continuing survey, I found the type compatibility problem around null value typed as InputStream seems to be not so tiny problem.&lt;/p&gt;

&lt;p&gt;I created new task, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1610&quot; title=&quot;Resolve difference of type compatibility between Embedded and NetworkServer/NetworkDriver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1610&quot;&gt;&lt;del&gt;DERBY-1610&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="12429415" author="naka" created="Mon, 21 Aug 2006 14:05:43 +0100"  >&lt;p&gt;Now, I&apos;m preparing to rollback  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1513&quot; title=&quot;Trial 1 for DERBY-550&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1513&quot;&gt;&lt;del&gt;DERBY-1513&lt;/del&gt;&lt;/a&gt;_1535_2.patch.&lt;br/&gt;
Please see more information in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1610&quot; title=&quot;Resolve difference of type compatibility between Embedded and NetworkServer/NetworkDriver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1610&quot;&gt;&lt;del&gt;DERBY-1610&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12429431" author="naka" created="Mon, 21 Aug 2006 16:01:21 +0100"  >&lt;p&gt;Description of the patch : &lt;br/&gt;
   Rollback &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1513&quot; title=&quot;Trial 1 for DERBY-550&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1513&quot;&gt;&lt;del&gt;DERBY-1513&lt;/del&gt;&lt;/a&gt;_1535_2.patch.&lt;/p&gt;

&lt;p&gt;Test of the patch :&lt;br/&gt;
   Execute derbyall and found no error other than error looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1691&quot; title=&quot;jdbcapi/blobclob4BLOB.java fails under DerbyNet framework with JCC 2.6&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1691&quot;&gt;&lt;del&gt;DERBY-1691&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12429734" author="naka" created="Tue, 22 Aug 2006 15:56:03 +0100"  >&lt;p&gt;Patch for rollback committed.&lt;/p&gt;

&lt;p&gt;Sending        java/drda/org/apache/derby/impl/drda/DDMReader.java&lt;br/&gt;
Sending        java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/parameterMapping.out&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 433655.&lt;/p&gt;</comment>
                            <comment id="12442589" author="naka" created="Mon, 16 Oct 2006 13:55:03 +0100"  >&lt;p&gt;I will resume this issue as improving room left in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1559&quot; title=&quot;when receiving a single EXTDTA object representing a BLOB, the server do not need to read it into memory before inserting it into the DB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1559&quot;&gt;&lt;del&gt;DERBY-1559&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-1559#action_12430023&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-1559#action_12430023&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-1559#action_12430034&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-1559#action_12430034&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12442909" author="naka" created="Tue, 17 Oct 2006 14:44:36 +0100"  >&lt;ul&gt;
	&lt;li&gt;Description of the patch&lt;br/&gt;
   Replacing call of setByte() to call of setBinaryInputStream(), which was room to improvement in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1559&quot; title=&quot;when receiving a single EXTDTA object representing a BLOB, the server do not need to read it into memory before inserting it into the DB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1559&quot;&gt;&lt;del&gt;DERBY-1559&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Test result&lt;br/&gt;
   Execute derbyall and found no error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12443270" author="naka" created="Wed, 18 Oct 2006 14:47:43 +0100"  >&lt;p&gt;Committed.&lt;/p&gt;

&lt;p&gt;Sending        java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;br/&gt;
Transmitting file data .&lt;br/&gt;
Committed revision 465249.&lt;/p&gt;</comment>
                            <comment id="12454107" author="kartha" created="Tue, 28 Nov 2006 20:34:02 +0000"  >&lt;p&gt;Updating the fix Version to reflect trunk - 10.3&lt;/p&gt;</comment>
                            <comment id="12551376" author="fuzzylogic" created="Thu, 13 Dec 2007 09:05:04 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12346905">DERBY-1610</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12337163" name="DERBY-1513_1535.patch" size="2437" author="naka" created="Wed, 19 Jul 2006 14:00:34 +0100"/>
                            <attachment id="12337298" name="DERBY-1513_1535_2.patch" size="8084" author="naka" created="Fri, 21 Jul 2006 13:52:52 +0100"/>
                            <attachment id="12339240" name="DERBY-1513_1535_rollback.patch" size="8084" author="naka" created="Mon, 21 Aug 2006 16:01:21 +0100"/>
                            <attachment id="12337161" name="DERBY-1535.patch" size="620" author="naka" created="Wed, 19 Jul 2006 13:35:56 +0100"/>
                            <attachment id="12343075" name="DERBY-1535_2.patch" size="960" author="naka" created="Tue, 17 Oct 2006 14:44:36 +0100"/>
                            <attachment id="12337162" name="serverMemoryUsage.xls" size="727552" author="naka" created="Wed, 19 Jul 2006 13:35:56 +0100"/>
                            <attachment id="12337164" name="serverMemoryUsage_1513_1535.xls" size="2586112" author="naka" created="Wed, 19 Jul 2006 14:00:34 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Jul 2006 19:57:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30039</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy105j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39675</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>