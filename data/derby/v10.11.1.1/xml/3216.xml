<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:53:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3216/DERBY-3216.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3216] do row level lock space reclamation in btree of indiv rows.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3216</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If you can&apos;t get a table level lock for btree space recovery in &lt;br/&gt;
the post commit thread, maybe you should at least reclaim the &lt;br/&gt;
rows on the page while you are at it.  Use the same algorithm &lt;br/&gt;
as exists in BTreeController.java.  row level shrink is a different&lt;br/&gt;
issue and won&apos;t be resolved by this.&lt;/p&gt;

&lt;p&gt;Note there have been reports of &quot;memory&quot; leaks associated with this issue.  This is because&lt;br/&gt;
currently if the work can not be done then we just queue it and move on.  But in a stress situation&lt;br/&gt;
one may never get the required table lock to shrink the tree and thus the queue just keeps growing.&lt;br/&gt;
Note in many of these cases the app doesn&apos;t care if the page merge happens as it is just going to&lt;br/&gt;
insert more rows after the merge.  &lt;/p&gt;

&lt;p&gt;Also there is no need for a table level lock for a 1 page index as no merge is actually necessary.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382830">DERBY-3216</key>
            <summary>do row level lock space reclamation in btree of indiv rows.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="mikem">Mike Matrigali</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Nov 2007 23:30:02 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:03 +0000</updated>
                            <resolved>Mon, 26 Nov 2007 17:26:22 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.2.1</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12545275" author="knutanders" created="Sun, 25 Nov 2007 16:02:25 +0000"  >&lt;p&gt;I noticed in the commit log that a fix had been committed (r597865).&lt;/p&gt;

&lt;p&gt;I&apos;m wondering, is the return in this finally clause in purgeRowLevelCommittedDeletes() intentional? It will hide any exception thrown in the try block and make the method return successfully, so it would be good to add a comment explaining why it&apos;s there.&lt;/p&gt;

&lt;p&gt;+        finally&lt;br/&gt;
+        &lt;/p&gt;
{
+            if (controlRow != null)
+                controlRow.release();
+
+            return;
+        }</comment>
                            <comment id="12545277" author="mikem" created="Sun, 25 Nov 2007 16:29:37 +0000"  >&lt;p&gt;i will look at moving the return.  I was basing the code on code in btreecontroller which also has a return in the finally, didn&apos;t really think about it.  I&apos;ll make the change and run tests and commit.&lt;/p&gt;</comment>
                            <comment id="12545278" author="knutanders" created="Sun, 25 Nov 2007 16:30:33 +0000"  >&lt;p&gt;In the same method, I see this piece of code:&lt;br/&gt;
+            if ((controlRow = ControlRow.get(open_btree, page_number)) == null)&lt;br/&gt;
+                return;&lt;/p&gt;

&lt;p&gt;As far as I can see, it is impossible that ControlRow.get() returns null, so by returning successfully when controlRow is null, we might be hiding future bugs. Wouldn&apos;t it be better to skip the null checking and just let the method fail with an NPE when controlRow is dereferenced?&lt;/p&gt;</comment>
                            <comment id="12563083" author="northshorefiend" created="Mon, 28 Jan 2008 08:57:52 +0000"  >&lt;p&gt;Possibly I have a resulting NPE in Derby 10.3.2.1  (10.3.1.4 does not show this behaviour)&lt;/p&gt;

&lt;p&gt;FATAL 38406 &lt;span class=&quot;error&quot;&gt;&amp;#91;Main&amp;#93;&lt;/span&gt; (Start.java:153) - Start FAILED&lt;br/&gt;
org.springframework.transaction.TransactionSystemException: Could not commit JDBC transaction; nested exception is java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
Caused by: &lt;br/&gt;
java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)&lt;br/&gt;
        at com.aaa.bbb.cccFactory$ddd.add(cccFactory.java:324)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.reload(ggg.java:44)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.startup(ggg.java:57)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startupEee(Start.java:170)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startup(Start.java:146)&lt;br/&gt;
        at com.aaa.start.Starter.startup(Starter.java:264)&lt;br/&gt;
        at com.aaa.start.Main.startup(Main.java:270)&lt;br/&gt;
        at com.aaa.start.Main.main(Main.java:199)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        ... 21 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)&lt;br/&gt;
        ... 15 more&lt;/p&gt;

&lt;p&gt;and derby.log:&lt;/p&gt;

&lt;p&gt;2008-01-28 08:26:36.148 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Executing prepared statement: SELECT COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM ZZZ WHERE nID IS NULL :End prepared statement&lt;br/&gt;
2008-01-28 08:26:36.150 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Committing&lt;br/&gt;
2008-01-28 08:26:36.188 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Cleanup action starting&lt;br/&gt;
2008-01-28 08:26:36.188 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Failed Statement is: null with 2 parameters begin parameter #1: 1 :end parameter begin parameter #2: 1 :end param&lt;br/&gt;
eter &lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)&lt;br/&gt;
        at com.aaa.bbb.cccFactory$ddd.add(cccFactory.java:324)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.reload(ggg.java:44)&lt;br/&gt;
        at com.aaa.eee.fff.ggg.startup(ggg.java:57)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startupEee(Start.java:170)&lt;br/&gt;
        at com.aaa.eee.fff.Start.startup(Start.java:146)&lt;br/&gt;
        at com.aaa.start.Starter.startup(Starter.java:264)&lt;br/&gt;
        at com.aaa.start.Main.startup(Main.java:270)&lt;br/&gt;
        at com.aaa.start.Main.main(Main.java:199)&lt;br/&gt;
Cleanup action completed&lt;/p&gt;


&lt;p&gt;This is a long transaction that has suddenly started throwing a NPE.&lt;br/&gt;
Nothing strange happens during the transaction, but on closing I get&lt;br/&gt;
the NPE.&lt;/p&gt;

&lt;p&gt;	If I reorder some of the statements in the transaction (keeping&lt;br/&gt;
functional equivalence) the NPE is sometimes not thrown.&lt;/p&gt;


&lt;p&gt;(Thanks to Bryan Pendleton on derby-user for pointing me in the direction of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3216&quot; title=&quot;do row level lock space reclamation in btree of indiv rows.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3216&quot;&gt;&lt;del&gt;DERBY-3216&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 25 Nov 2007 16:02:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23498</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37371</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>