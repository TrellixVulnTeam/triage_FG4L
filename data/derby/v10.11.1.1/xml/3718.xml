<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3718/DERBY-3718.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3718] NPE when firing a trigger</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3718</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;NullPointerException raised when firing a trigger. Originally reported by Thiyagu P on the Derby user list: &lt;a href=&quot;http://www.nabble.com/Trigger-function-broken-in-10.4.1.3--td17760208.html#a17760208&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Trigger-function-broken-in-10.4.1.3--td17760208.html#a17760208&lt;/a&gt; Thiyagu reports that the same script works fine in 10.3.3.0. Here&apos;s the script:&lt;/p&gt;

&lt;p&gt;CREATE TABLE TRADE(&lt;br/&gt;
      ID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1000),&lt;br/&gt;
      BUYID INT NOT NULL,&lt;br/&gt;
      QTY FLOAT(2) NOT NULL&lt;br/&gt;
   );&lt;/p&gt;

&lt;p&gt;   CREATE TABLE TOTAL(BUYID INT NOT NULL, TOTALQTY FLOAT(2) NOT NULL);&lt;/p&gt;

&lt;p&gt;   CREATE TRIGGER TRADE_INSERT&lt;br/&gt;
     AFTER INSERT ON TRADE&lt;br/&gt;
     REFERENCING NEW AS NEWROW&lt;br/&gt;
     FOR EACH ROW MODE DB2SQL&lt;br/&gt;
     UPDATE TOTAL SET TOTALQTY = NEWROW.QTY WHERE BUYID = NEWROW.BUYID;&lt;/p&gt;

&lt;p&gt;   INSERT INTO TOTAL VALUES (1, 0);&lt;/p&gt;

&lt;p&gt;   INSERT INTO TRADE VALUES(1, 1, 10);&lt;/p&gt;

&lt;p&gt;Here&apos;s the stack trace:&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.iapi.types.DataTypeDescriptor.getNull(DataTypeDescriptor.java:1008)&lt;br/&gt;
	at org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:645)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:329)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:189)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:424)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:246)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:384)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:159)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTrigger(RowTriggerExecutor.java:111)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:269)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1150)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:487)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:384)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:508)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12397932">DERBY-3718</key>
            <summary>NPE when firing a trigger</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Jun 2008 19:18:14 +0100</created>
                <updated>Tue, 13 Jul 2010 20:18:23 +0100</updated>
                            <resolved>Wed, 25 Jun 2008 19:22:43 +0100</resolved>
                                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12604124" author="mamtas" created="Wed, 11 Jun 2008 06:57:21 +0100"  >&lt;p&gt;I am looking at this jira entry to see if something rings a bell in the code which might cause this npe.&lt;/p&gt;</comment>
                            <comment id="12605853" author="mamtas" created="Wed, 18 Jun 2008 06:50:07 +0100"  >&lt;p&gt;I think this got broken in 10.4 codeline after the checkin r619995 - &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2917&quot; title=&quot;Refactor DataTypeDescriptor and TypeDescriptor to result in cleaner code.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2917&quot;&gt;DERBY-2917&lt;/a&gt; Changed the runtime type DataTypeDescriptor to no longer be a TypeDescriptor (catalog type) but instead only have a catalog type (TypeDescriptor). Added code to handle upgrade issue of DataTypeDescriptor&apos;s being written as catalog types in RoutineAliasInfo.&lt;/p&gt;

&lt;p&gt;iapi.types.DataTypeDescriptor.writeExternal used to write the TypeId and the TypeDescriptor in 10.3 codeline. So, the code for writeExternal for DataTypeDescriptor was as follows in 10.3&lt;br/&gt;
	public void writeExternal( ObjectOutput out )&lt;br/&gt;
		 throws IOException&lt;/p&gt;
	{
		out.writeObject( typeId );
		out.writeObject( typeDescriptor );
	}
&lt;p&gt;This code was changed in 10.4 codeline to look as follows&lt;br/&gt;
	public void writeExternal( ObjectOutput out )&lt;br/&gt;
		 throws IOException&lt;/p&gt;
	{
		out.writeObject(typeDescriptor);
		out.writeInt(getCollationDerivation());
	}
&lt;p&gt;Starting 10.4, we now rely on loading the TypeId on the fly rather than storing it on the disk as shown below in the readExternal code&lt;br/&gt;
	public void readExternal( ObjectInput in )&lt;br/&gt;
		 throws IOException, ClassNotFoundException&lt;/p&gt;
	{
		typeDescriptor = (TypeDescriptorImpl) in.readObject();
        
		typeId = TypeId.getBuiltInTypeId(this.getJDBCTypeId());
        
		collationDerivation = in.readInt();
	}

&lt;p&gt;The problem is for some reason, we are not able to read the TypeId for the REF datatype(ie in the code above, TypeId.getBuiltInTypeId(this.getJDBCTypeId()); returns null when dealing with REF datatype). I am going to see if we just need a simple case clause for REF in the switch statement in TypeId.getBuiltInTypeId or something else to fix the problem. I will also spend some time figuring out how we are able to get&lt;br/&gt;
a good TypeId object for REF object in other places when it appears that it is definitely not available to iapi.types.DataTypeDescriptor.readExternal&lt;/p&gt;

&lt;p&gt;Dan, if this rings a bell to you, will you let me know if my analysis is correct and why we are not able to load TypeId for REF datatype.&lt;/p&gt;</comment>
                            <comment id="12606010" author="mamtas" created="Wed, 18 Jun 2008 18:02:07 +0100"  >&lt;p&gt;I added a case clause for Types.REF as shown below in TypeId.getBuiltInTypeId(int) &lt;br/&gt;
        case Types.REF:&lt;br/&gt;
        	return REF_ID;&lt;/p&gt;

&lt;p&gt;I thought adding this code will get us the correct TypeId for REF datatypes when DataTypeDescriptor.readExternal does following&lt;br/&gt;
        typeId = TypeId.getBuiltInTypeId(this.getJDBCTypeId());&lt;/p&gt;

&lt;p&gt;But even with the addition of case statement for Types.REF, I get null pointer exception. The reason is that for some reason, for REF datatypes, Derby does not use Types.REF. Instead it uses Types.OTHER (see BaseTypeIdImpl.setTypeIdSpecificInstanceVariables():line 300&lt;br/&gt;
          case StoredFormatIds.REF_TYPE_ID_IMPL:&lt;br/&gt;
                SQLTypeName = TypeId.REF_NAME;&lt;br/&gt;
                JDBCTypeId = Types.OTHER;&lt;br/&gt;
                break;&lt;/p&gt;

&lt;p&gt;My question is why did we decide to use Types.OTHER rather than Types.REF for REF datatype? Also, I do not think it would be correct for me to check for Types.OTHER in TypeId.getBuiltInTypeId(int)  and then always return TypeId for REF. Would appreciate any feedback on this.&lt;/p&gt;</comment>
                            <comment id="12606058" author="djd" created="Wed, 18 Jun 2008 20:40:44 +0100"  >&lt;p&gt;Derby does not support the REF datatype, so using Types.REF would be incorrect for an internal type.&lt;/p&gt;</comment>
                            <comment id="12606849" author="mamtas" created="Fri, 20 Jun 2008 19:21:09 +0100"  >&lt;p&gt;Since we are dealing with the internal type which will be assigned a Types.OTHER type then we can&apos;t rely on Types.xxx to get us the correct data type. I am attaching a patch which relies on using the name of the data type rather than it&apos;s Type.xxx to construct the correct TypeId. I am accomplising that by changing DataTypeDescriptor.readExternal to use this.getTypeName rather than this.getJDBCTypeId to construct the TypeId. In addition to this change, I had to change DataTypeDescriptor.getTypeName() to use TypeDescriptor to get the type name rather than TypeId. This is because TypeId is not available when DataTypeDescriptor.readExternal calls DataTypeDescriptor.getTypeName. This will match how we already implement DataTypeDescriptor.getJDBCTypeId(). With my patch, I have run Junit and old harness suite with no new regressions. Please let me know if anyone has any comments on the patch. I will plan on committing it early next week if there are no comments. I will also work on writing a test case for this Jira entry.&lt;/p&gt;</comment>
                            <comment id="12607388" author="mamtas" created="Mon, 23 Jun 2008 22:43:35 +0100"  >&lt;p&gt;Committed fix for this jira entry with revision 670778. I will work on migrating this to 10.4 codeline.&lt;/p&gt;</comment>
                            <comment id="12608136" author="mamtas" created="Wed, 25 Jun 2008 19:22:43 +0100"  >&lt;p&gt;Backported the changes to 10.4 codeline with revision 671619&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12384401" name="DERBY3718_npe_in_trigger_fire_patch1_diff.txt" size="745" author="mamtas" created="Fri, 20 Jun 2008 19:24:28 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Jun 2008 05:57:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0phb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37946</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>