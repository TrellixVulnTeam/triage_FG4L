<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:40:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4338/DERBY-4338.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4338] Network client raises error &quot;executeQuery method can not be used for update&quot; when sql is preceded by /* */ comments</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4338</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Network derby client does not properly detect a sql select statement preceded by /* */ comments.  As a result the sql appears to be detected as an update statement, and results in  the following error:&lt;/p&gt;

&lt;p&gt; org.apache.derby.client.am.SqlException: executeQuery method can not be used for update.&lt;br/&gt;
	at org.apache.derby.client.am.Statement.checkForAppropriateSqlMode(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.PreparedStatement.flowExecute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.PreparedStatement.executeQueryX(Unknown Source)&lt;/p&gt;

&lt;p&gt;The problem appears to be in Statment.parseSqlAndSetSqlModes(), which only appears to check for &quot;--&quot; style comments.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12432282">DERBY-4338</key>
            <summary>Network client raises error &quot;executeQuery method can not be used for update&quot; when sql is preceded by /* */ comments</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="wgomes">Will Gomes</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Aug 2009 15:10:21 +0100</created>
                <updated>Tue, 8 Feb 2011 10:44:19 +0000</updated>
                            <resolved>Mon, 31 Aug 2009 23:21:55 +0100</resolved>
                                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12743199" author="104gb" created="Fri, 14 Aug 2009 14:37:22 +0100"  >&lt;p&gt;This error prevents hibernate comments from being prepended to the sql query which is a very useful feature to correlate jpa queries with sql queries.&lt;/p&gt;

&lt;p&gt;in jpa persistence.xml&lt;/p&gt;

&lt;p&gt;&amp;lt;property name=&quot;hibernate.use_sql_comments&quot; value=&quot;true&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;Hibernate: /* SELECT e FROM CommonEntity e JOIN e.addresses a WHERE a.countryCode = &apos;us&apos; */ select commonenti0_.id as id0_, commonenti0_.billingAddress as billingA3_0_, commonenti0_.shippingAddress as shipping4_0_, commonenti0_.purchaser_id as purchaser6_0_, commonenti0_.businessId as businessId0_, commonenti0_.DTYPE as DTYPE0_ from CommonEntity commonenti0_ inner join CommonEntity_Address addresses1_ on commonenti0_.id=addresses1_.CommonEntity_id inner join Address address2_ on addresses1_.addresses_id=address2_.id where address2_.countryCode=&apos;us&apos;&lt;/p&gt;

&lt;p&gt;WARNING: SQL Error: 20000, SQLState: XJ207&lt;br/&gt;
SEVERE: executeQuery method can not be used for update.&lt;/p&gt;

&lt;p&gt;If I remove the hibernate.use_sql_comments the select query succeeds, so I have confirmed Will&apos;s bug on Apache Derby Network Server - 10.5.1.1.&lt;/p&gt;</comment>
                            <comment id="12747198" author="dagw" created="Tue, 25 Aug 2009 04:00:06 +0100"  >&lt;p&gt;Uploading a patch for this issue, and added test cases to CommentTest,&lt;br/&gt;
please review. Running regressions.&lt;/p&gt;

&lt;p&gt;While rewriting the handling of this in the client driver, I noticed&lt;br/&gt;
that the client driver seems to filter away the &quot;newline&quot; characters:&lt;br/&gt;
&apos;\n&apos;, &apos;r&apos; and &apos;\f&apos;, at least they are gone by the time the query&lt;br/&gt;
string is seen by the compiler.  The latter (&apos;\f&apos;) is rejected by the&lt;br/&gt;
Derby compiler, which makes the client driver slightly more lenient&lt;br/&gt;
than the embedded driver in this regard. Probably not important, but I&lt;br/&gt;
thought I&apos;d mention it.&lt;/p&gt;</comment>
                            <comment id="12747404" author="knutanders" created="Tue, 25 Aug 2009 14:34:46 +0100"  >&lt;p&gt;This looks like an improvement to me. Two small comments:&lt;/p&gt;

&lt;p&gt;1) Should getNonCommentToken() also skip &apos;{&apos; when in the OUTSIDE state? I was thinking of JDBC escaped call statements, like &quot;&lt;/p&gt;
{ call TOURS.BOOK_TOUR(?, ?) }
&lt;p&gt;&quot;, where the first token should be &quot;CALL&quot; and not &quot;{&quot;.&lt;/p&gt;

&lt;p&gt;2) CommentTest.suite() could be simplified to &quot;return TestConfiguration.defaultSuite(CommentTest.class);&quot;&lt;/p&gt;</comment>
                            <comment id="12747635" author="dagw" created="Tue, 25 Aug 2009 21:58:15 +0100"  >&lt;p&gt;Thanks for looking at this Knut!&lt;/p&gt;

&lt;p&gt;Actually the escapes have been removed at this point in processing, cf. calls to &lt;br/&gt;
escape(sql) just before the call to parseSqlAndSetSqlModes in Statement.flowExecute(); ca line 3.&lt;br/&gt;
(although not for batches, not sure if batches can contain escapes?)&lt;/p&gt;

&lt;p&gt;I&apos;ll insert a comment to that fact, and simplify the test.&lt;/p&gt;
</comment>
                            <comment id="12747663" author="dagw" created="Tue, 25 Aug 2009 22:36:22 +0100"  >&lt;p&gt;Uploading version &quot;b&quot; of this patch, which, in addition to test simplification and the added comment, wrapped some SanityManager methods in&lt;br/&gt;
tests for SanityManager.DEBUG, missing in version &quot;a&quot;.&lt;/p&gt;

&lt;p&gt;If no further comments I intend to commit this version. Re-running regressions.&lt;/p&gt;
</comment>
                            <comment id="12747816" author="knutanders" created="Wed, 26 Aug 2009 08:48:36 +0100"  >&lt;p&gt;I only tested it from ij, but when I made getNonCommentToken() print the returned token, this is what I saw:&lt;/p&gt;

&lt;p&gt;ij(CONNECTION1)&amp;gt; &lt;/p&gt;
{ call syscs_util.syscs_checkpoint_database() };&lt;br/&gt;
tokenFound: call&lt;br/&gt;
Statement executed.&lt;br/&gt;
ij(CONNECTION1)&amp;gt; /* asdfads */ { call syscs_util.syscs_checkpoint_database() }
&lt;p&gt;;&lt;br/&gt;
tokenFound: {&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;Note that if the escaped call is prefixed with a comment, the braces are not stripped away, and getNonCommentToken() returns the opening brace. Not sure if this is a problem, and I don&apos;t think your patch is making the situation worse in any way (the difference in the return status - &quot;Statement executed&quot; vs &quot;0 rows inserted/...&quot; - is also seen without your patch), so don&apos;t let this issue hold the patch.&lt;/p&gt;</comment>
                            <comment id="12747818" author="knutanders" created="Wed, 26 Aug 2009 08:58:14 +0100"  >&lt;p&gt;One more data point. If I add a case for &apos;{&apos; in getNonCommentToken(), the statements above consistently return &quot;Statement executed&quot;. This is different from the return status with the embedded driver (because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-211&quot; title=&quot;Network Server returns no result sets for a procedure call that returns no result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-211&quot;&gt;DERBY-211&lt;/a&gt;), but I guess it would be good to be internally consistent within the client driver, even if it&apos;s not consistent with the embedded driver.&lt;/p&gt;</comment>
                            <comment id="12747827" author="knutanders" created="Wed, 26 Aug 2009 09:12:49 +0100"  >&lt;p&gt;From getNonCommentToken():&lt;/p&gt;

&lt;p&gt;+                case &apos;=&apos;: //&lt;br/&gt;
+                case &apos;?&apos;: //&lt;/p&gt;

&lt;p&gt;It looks like you intended, but forgot, to write comments for those two cases.&lt;/p&gt;

&lt;p&gt;For extra credit, you could also add a javadoc comment describing getNonCommentToken(). Though, sadly, describing an internal method in a comment will break the established pattern in that class... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12748052" author="dagw" created="Wed, 26 Aug 2009 18:54:20 +0100"  >&lt;p&gt;&amp;gt; /* asdfads */ &lt;/p&gt;
{ call syscs_util.syscs_checkpoint_database() }
&lt;p&gt;; &lt;/p&gt;

&lt;p&gt;Yes, I realize that I could have chosen to remove the left brace here easily, but the old code didn&apos;t handle that case after an end-of-line comment so I was hesitant to change behavior. But thinking again&lt;br/&gt;
I agree it&apos;s better to be consistent. I don&apos;t think it should cause much a problem: the only change would be to correctly classify an escaped call as such after a end-of-line comment.&lt;/p&gt;

&lt;p&gt;As for the comment stubs, I moved the comments up to the delim variable. I&apos;ll remove the stubs&lt;br/&gt;
and provide a method comment as well.&lt;/p&gt;</comment>
                            <comment id="12748073" author="dagw" created="Wed, 26 Aug 2009 19:35:08 +0100"  >&lt;p&gt;Digging more, here is a more serious classification error done in the client, due to its reliance on StringTokenizer:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select* from sys.systables;&lt;br/&gt;
firstToken=select*&lt;br/&gt;
:&lt;br/&gt;
ERROR X0Y79: Statement.executeUpdate() cannot be called with a statement that returns a ResultSet.&lt;/p&gt;

&lt;p&gt;Similarly:&lt;br/&gt;
select&apos;a&apos; from sys.systables;&lt;br/&gt;
select&quot;TABLEID&quot; from sys.systables;&lt;/p&gt;

&lt;p&gt;All the above are legal queries missed in the client statement classification logic..&lt;/p&gt;</comment>
                            <comment id="12748156" author="dagw" created="Wed, 26 Aug 2009 22:23:09 +0100"  >&lt;p&gt;Uploading version &quot;c&quot;, which adds a new testcase,&lt;br/&gt;
testWrongKeywordLexing_derby4338, and a fix for that problem, cf. the&lt;br/&gt;
new method isolateAnyInitialIdentifier in Statement.java used instead&lt;br/&gt;
of the Java tokenizer which wasn&apos;t really suitable in this case. A&lt;br/&gt;
regexp could have been used though, but in this simple case, that&lt;br/&gt;
seemed overkill.&lt;/p&gt;

&lt;p&gt;I also added a testcase to show how the client before this fix fails to&lt;br/&gt;
scan past the escape starting after an end-of-line comment. See the&lt;br/&gt;
&quot;call&quot; examples in CommentTest.testInitialComment_derby4338.&lt;/p&gt;

&lt;p&gt;Investigating this lead to my filing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4362&quot; title=&quot;Client returns -1 on Statement.getUpdateCount when a procedure is called, embedded returns 0.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4362&quot;&gt;&lt;del&gt;DERBY-4362&lt;/del&gt;&lt;/a&gt;, btw.&lt;/p&gt;

</comment>
                            <comment id="12748316" author="knutanders" created="Thu, 27 Aug 2009 10:41:10 +0100"  >&lt;p&gt;Thanks for catching those additional cases and incorporating them into the test. The patch looks good to me.&lt;/p&gt;

&lt;p&gt;Some small nits:&lt;/p&gt;

&lt;p&gt;You may be able to simplify isolateAnyInitialIdentifier() by using the JDK&apos;s regex library. I think the code below is equivalent to the code in the patch.&lt;/p&gt;

&lt;p&gt;    private final static Pattern INITIAL_IDENTIFIER = Pattern.compile(&quot;(&lt;br class=&quot;atl-forced-newline&quot; /&gt;p&lt;/p&gt;
{Alpha}
&lt;p&gt;+).*&quot;);&lt;br/&gt;
    private String isolateAnyInitialIdentifier (String sql) {&lt;br/&gt;
        Matcher m = INITIAL_IDENTIFIER.matcher(sql);&lt;br/&gt;
        if (m.matches()) &lt;/p&gt;
{
            return m.group(1);
        }
&lt;p&gt;        return sql;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;In the tests there are some calls to check the return value from getUpdateCount() on this form:&lt;/p&gt;

&lt;p&gt;    assertTrue(ps.getUpdateCount() == 0);&lt;/p&gt;

&lt;p&gt;It&apos;s probably better to use assertEquals(0, ps.getUpdateCount()) to get more information in case of a failure.&lt;/p&gt;

&lt;p&gt;There are a couple of occurrences of getConnection().createStatement() and getConnection().prepareStatement(). The getConnection() part should be dropped so that we use the methods in BaseJDBCTestCase that automatically close the statements.&lt;/p&gt;

&lt;p&gt;Perhaps the calls to executeQuery() in testInitialComment_derby4338() and testWrongKeywordLexing_derby4338() should be wrapped in JDBC.assertDrainResults() so that we don&apos;t leave any results sets open?&lt;/p&gt;

&lt;p&gt;A comment in testInitialComment_derby4338() stops in the middle of a sentence: // Change to 0 when &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4362&quot; title=&quot;Client returns -1 on Statement.getUpdateCount when a procedure is called, embedded returns 0.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4362&quot;&gt;&lt;del&gt;DERBY-4362&lt;/del&gt;&lt;/a&gt; is fixed. Before both&lt;/p&gt;</comment>
                            <comment id="12748400" author="knutanders" created="Thu, 27 Aug 2009 16:06:46 +0100"  >&lt;p&gt;Sorry, I missed your comment that you had already considered a regex, so just disregard that.&lt;/p&gt;</comment>
                            <comment id="12748409" author="dagw" created="Thu, 27 Aug 2009 16:40:40 +0100"  >&lt;p&gt;Thanks for looking at my revised patch, Knut. I will fix up the test as you suggested.&lt;/p&gt;
</comment>
                            <comment id="12748412" author="dagw" created="Thu, 27 Aug 2009 17:00:16 +0100"  >&lt;p&gt;Attaching version &quot;d&quot;, which incorporates Knut&apos;s suggestions regarding the test.&lt;/p&gt;</comment>
                            <comment id="12748775" author="knutanders" created="Fri, 28 Aug 2009 11:44:35 +0100"  >&lt;p&gt;Thanks, Dag! +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12749533" author="dagw" created="Mon, 31 Aug 2009 17:06:10 +0100"  >&lt;p&gt;Committed derby-4338-d on trunk as svn 809643.&lt;/p&gt;</comment>
                            <comment id="12749654" author="dagw" created="Mon, 31 Aug 2009 23:21:29 +0100"  >&lt;p&gt;Back-ported to 10.4 as svn 809764.&lt;br/&gt;
Back-ported to 10.5 as svn 809763.&lt;/p&gt;

&lt;p&gt;Resolving.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12394049">DERBY-3626</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12497950">DERBY-5011</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12417563" name="derby-4338-a.diff" size="10131" author="dagw" created="Tue, 25 Aug 2009 04:00:06 +0100"/>
                            <attachment id="12417562" name="derby-4338-a.stat" size="147" author="dagw" created="Tue, 25 Aug 2009 04:00:06 +0100"/>
                            <attachment id="12417665" name="derby-4338-b.diff" size="10190" author="dagw" created="Tue, 25 Aug 2009 22:36:22 +0100"/>
                            <attachment id="12417664" name="derby-4338-b.stat" size="149" author="dagw" created="Tue, 25 Aug 2009 22:36:22 +0100"/>
                            <attachment id="12417800" name="derby-4338-c.diff" size="12797" author="dagw" created="Wed, 26 Aug 2009 22:23:09 +0100"/>
                            <attachment id="12417801" name="derby-4338-c.stat" size="147" author="dagw" created="Wed, 26 Aug 2009 22:23:09 +0100"/>
                            <attachment id="12417890" name="derby-4338-d.diff" size="12917" author="dagw" created="Thu, 27 Aug 2009 17:00:16 +0100"/>
                            <attachment id="12417891" name="derby-4338-d.stat" size="149" author="dagw" created="Thu, 27 Aug 2009 17:00:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Aug 2009 13:37:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24196</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0j73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36928</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>