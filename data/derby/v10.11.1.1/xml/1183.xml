<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1183/DERBY-1183.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1183] Client java.sql.ResultSet.getCursorName() does not return the correct cursor name for Statements after the first execution</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1183</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;For client, if the cursor name is set with java.sql.Statement.setCursorName() the name set by the user only applies to the first execution.  Subsequent executions use the default cursor name.  To reproduce run the progam below as follows:&lt;/p&gt;

&lt;p&gt;D&amp;gt;java -Dframework=DerbyNetClient GetCursorName&lt;br/&gt;
10.2.0.0 alpha&lt;br/&gt;
Apache Derby&lt;br/&gt;
Apache Derby Network Client JDBC Driver&lt;br/&gt;
rs.getCursorName():MyCursor&lt;br/&gt;
rs.getCursorName():SQL_CURLH000C2&lt;/p&gt;


&lt;p&gt;With embedded it is ok:&lt;br/&gt;
D&amp;gt;java  GetCursorName&lt;br/&gt;
10.2.0.0 alpha&lt;br/&gt;
Apache Derby&lt;br/&gt;
Apache Derby Embedded JDBC Driver&lt;br/&gt;
rs.getCursorName():MyCursor&lt;br/&gt;
rs.getCursorName():MyCursor&lt;/p&gt;


&lt;p&gt;import java.sql.Connection;&lt;br/&gt;
import java.sql.DatabaseMetaData;&lt;br/&gt;
import java.sql.ResultSet;&lt;br/&gt;
import java.sql.SQLException;&lt;br/&gt;
import java.sql.Statement;&lt;/p&gt;


&lt;p&gt;import org.apache.derbyTesting.functionTests.util.TestUtil;&lt;/p&gt;



&lt;p&gt;class GetCursorName&lt;br/&gt;
{&lt;/p&gt;


&lt;p&gt;    public static void main (String args [])throws Exception &lt;/p&gt;
    {
    	testGetCursorName();
    }

&lt;p&gt;    public static void testGetCursorName() throws SQLException&lt;/p&gt;
    {
		
		Connection conn = TestUtil.getConnection(&quot;wombat&quot;,&quot;create=true&quot;);
		Statement stmt = null;
		ResultSet rs = null;

		DatabaseMetaData md = conn.getMetaData() ;
		System.out.println(md.getDatabaseProductVersion());
        System.out.println(md.getDatabaseProductName());
        System.out.println(md.getDriverName());
		
		stmt = conn.createStatement();
		// Setting the cursor name works for one execution ok.
		stmt.setCursorName(&quot;MyCursor&quot;);
		rs = stmt.executeQuery(&quot;select count(*) from sys.systables&quot;);
		System.out.println(&quot;rs.getCursorName():&quot; + rs.getCursorName());
		rs.close();
		//Executing another query seems to clears the cursor name.
		// getCursorName() will print the default cursor name SQLXXX.
		rs = stmt.executeQuery(&quot;select count(*) from sys.systables&quot;);
		System.out.println(&quot;rs.getCursorName():&quot; + rs.getCursorName());
		rs.close();
		stmt.close();
        conn.close();

      }

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;I noticed this bug when coverting the checkDataSource test for client.&lt;br/&gt;
I will change that test to set the cursor name for each execution for client.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12331679">DERBY-1183</key>
            <summary>Client java.sql.ResultSet.getCursorName() does not return the correct cursor name for Statements after the first execution</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Apr 2006 02:21:04 +0100</created>
                <updated>Mon, 5 May 2008 16:03:13 +0100</updated>
                            <resolved>Fri, 23 Jun 2006 19:20:49 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12373449" author="kmarsden" created="Thu, 6 Apr 2006 10:28:37 +0100"  >&lt;p&gt;Actually the workaround mentioned here to set the cursor name for each subsequent execution doesn&apos;t work.   The default cursor name still prints. Apparently only the first execution can have a cursor name set.&lt;/p&gt;</comment>
                            <comment id="12415926" author="dagw" created="Tue, 13 Jun 2006 06:22:56 +0100"  >&lt;p&gt;This is a first patch (derby-1183.diff) to solve this issue as well&lt;br/&gt;
as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1036&quot; title=&quot;Embedded and client differ with regard to Statement.setCursor Name. client will disallow duplicate cursor names.  Embedded will allow it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1036&quot;&gt;&lt;del&gt;DERBY-1036&lt;/del&gt;&lt;/a&gt;; it seemed convenient to combine them.  I have run&lt;br/&gt;
derbyall, seeing only a bug in JitTest.java which is not related (diff&lt;br/&gt;
in derby version number). Please have a look at it.&lt;/p&gt;

&lt;p&gt;Patch description:&lt;/p&gt;

&lt;p&gt;The problem underlying &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1185&quot; title=&quot;Move all client messages to messages.properties&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1185&quot;&gt;&lt;del&gt;DERBY-1185&lt;/del&gt;&lt;/a&gt; is the following: A Statement (and by&lt;br/&gt;
inheritance, PreparedStatement and CallableStatement) will have a&lt;br/&gt;
cursor name associated with result set generated by the statement. Such&lt;br/&gt;
names are either set by the user (Statement#setCursorName) or assigned&lt;br/&gt;
by the system (aka &quot;canned&quot; cursor names in the client driver). In&lt;br/&gt;
either case, the user can get at the cursor name attached to a&lt;br/&gt;
statement by calling Resultset#getCursorName. This string can be used&lt;br/&gt;
to construct the SQL text of positioned update or delete statement.&lt;/p&gt;

&lt;p&gt;Currently, when a cursor name is set on a statement, the following&lt;br/&gt;
actions are taken (Statement#setCursorName):&lt;/p&gt;

&lt;p&gt;	1. The statement&apos;s string variable cursorName_ is set to the&lt;br/&gt;
           new string. This keeps track of the user cursor name set&lt;br/&gt;
           for this statement.&lt;/p&gt;

&lt;p&gt;	2. A cache (clientCursorNameCache) of cursor names set by&lt;br/&gt;
	   the user for this connection is maintained to avoid having&lt;br/&gt;
	   any two identical cursor name for the same statement/result&lt;br/&gt;
	   set. When the cursor name is set, the check is performed&lt;br/&gt;
	   (2a) and the cache is updated with the new cursor name if&lt;br/&gt;
	   all is well (2b).&lt;/p&gt;

&lt;p&gt;	If the statement (only applies for PreparedStatement and&lt;br/&gt;
	CallableStatement) already has a DRDA section (ch 7.14) &lt;br/&gt;
	allocated, the following is also performed:&lt;/p&gt;

&lt;p&gt;	3. A map (cursor name -&amp;gt; section) is updated.&lt;/p&gt;

&lt;p&gt;	4. The section associated with this statement gets its&lt;br/&gt;
  	   variable clientCursorName set to the supplied cursor name.&lt;/p&gt;

&lt;p&gt;For Statement, this association (steps 3 and 4) is performed at&lt;br/&gt;
statement execution time (inside flowExecute, just after the new&lt;br/&gt;
section is allocated for a query).&lt;/p&gt;

&lt;p&gt;	5. Also in flowExecute (of Statement, PreparedStatement) the&lt;br/&gt;
	   cursor (user set or canned) is associated with the result&lt;br/&gt;
	   set (call to mapCursorNameToResultSet).&lt;/p&gt;

&lt;p&gt;The symptom of this bug is that the cursor name set for a statement&lt;br/&gt;
seems to be lost after one execution of that statement, reverting to a&lt;br/&gt;
canned cursor name for executions 2..n.&lt;/p&gt;

&lt;p&gt;This happens because the cursor name is actually reset as part of the&lt;br/&gt;
next execute on a statement object:&lt;/p&gt;

&lt;p&gt;        6. Open result sets for a statement are closed when&lt;br/&gt;
	   flowExecute calls readCloseResultSets. During the closing&lt;br/&gt;
	   of a result set, ResultSet#markClosed calls&lt;br/&gt;
	   statement_.removeClientCursorNameFromCache, which in&lt;br/&gt;
	   addition to removing the user cursor name from the cache&lt;br/&gt;
	   also sets the statements cursorName_ to null, causing it&lt;br/&gt;
	   effectively to be forgotten.&lt;/p&gt;

&lt;p&gt;Since #5 happens &lt;b&gt;after&lt;/b&gt; #6 in flowExecute, the execution still works,&lt;br/&gt;
but with a canned cursor instead of the user named cursor (see&lt;br/&gt;
mapCursorNameToResultSet).&lt;/p&gt;

&lt;p&gt;This &quot;race condition&quot; suggests deferring the setup of mappings and&lt;br/&gt;
insertion into the name cache till execution time (&lt;b&gt;after&lt;/b&gt; the closing&lt;br/&gt;
of open result sets on this statement). When studying this I found&lt;br/&gt;
there was already a bug filed (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1036&quot; title=&quot;Embedded and client differ with regard to Statement.setCursor Name. client will disallow duplicate cursor names.  Embedded will allow it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1036&quot;&gt;&lt;del&gt;DERBY-1036&lt;/del&gt;&lt;/a&gt;) which advises that we defer&lt;br/&gt;
the check of duplicates till execution time, so this patch fixes both&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1183&quot; title=&quot;Client java.sql.ResultSet.getCursorName() does not return the correct cursor name for Statements after the first execution&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1183&quot;&gt;&lt;del&gt;DERBY-1183&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1036&quot; title=&quot;Embedded and client differ with regard to Statement.setCursor Name. client will disallow duplicate cursor names.  Embedded will allow it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1036&quot;&gt;&lt;del&gt;DERBY-1036&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the patch, Statement#setCursorName now only sets the string&lt;br/&gt;
variable cursorName_.&lt;/p&gt;

&lt;p&gt;The patch also removes the resetting of cursorName_ in&lt;br/&gt;
removeClientCursorNameFromCache, so it won&apos;t be forgotten. It is still&lt;br/&gt;
removed from the cache when the result set is closed (and current maps&lt;br/&gt;
deleted).&lt;/p&gt;

&lt;p&gt;Furthermore, it moves #2, #3 and #4 till execution time (flowExecute).&lt;br/&gt;
Item #2a is performed at the start of flowExecute, so we can avoid&lt;br/&gt;
starting any protocol action if it turns out that we should not&lt;br/&gt;
start execution (duplicate name). The actions needed in&lt;br/&gt;
Statement#flowExecute and PreparedStatement#flowExecute are similar,&lt;br/&gt;
so I factored these out into the methods Statement#&lt;br/&gt;
checkForDuplicateCursorName and Statement#setupCursorNameCacheAndMappings.&lt;/p&gt;

&lt;p&gt;Next, I removed code from getCursorName which redundantly performs #3&lt;br/&gt;
(now always handled at execute time).&lt;/p&gt;

&lt;p&gt;CAVEAT: When working on understanding what goes on here, I found that&lt;br/&gt;
the Statement finalizer can lead to cursors being released; this is&lt;br/&gt;
part of the client side clean-up for statements that are not&lt;br/&gt;
explicitly closed (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-210&quot; title=&quot;Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-210&quot;&gt;DERBY-210&lt;/a&gt;). This can sometimes lead to time&lt;br/&gt;
variability in canned cursor names in client driver tests which do not&lt;br/&gt;
close statements explicitly. If the canned cursor name occurs in the&lt;br/&gt;
canon file, we can see spurious diff due to this. I think we have seen&lt;br/&gt;
this in the past. Avoid it by closing statements or by naming the&lt;br/&gt;
cursors explicitly.&lt;/p&gt;

&lt;p&gt;Finally, I removed work-around code in jdbcapi/checkDataSource.java&lt;br/&gt;
for derby-1036 and derby-1183 and updated masters to reflect that the&lt;br/&gt;
cursor names are no longer forgotten.&lt;/p&gt;</comment>
                            <comment id="12416892" author="knutanders" created="Tue, 20 Jun 2006 20:14:26 +0100"  >&lt;p&gt;Dag, I see two failures in derbyall with this patch. From&lt;br/&gt;
lang/updatableResultSet.java I got a diff that was thousands of lines&lt;br/&gt;
long, but the relevant part seemed to be&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/derbynetclientmats/DerbyNetClient/derbynetmats/derbynetmats/updatableResultSet.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: updatableResultSet jdk1.5.0_04 DerbyNetClient derbynetmats:derbynetmats 2006-06-20 12:16:49 ***&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;snip&amp;#93;&lt;/span&gt;&lt;br/&gt;
4778a137,138&lt;br/&gt;
&amp;gt; FAIL: exception thrown:&lt;br/&gt;
&amp;gt; ERROR XJ114: Invalid cursor name &apos;&amp;lt;xxx-cursor-name-xxx&amp;gt;&apos;&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   updatableResultSet jdk1.5.0_04 DerbyNetClient derbynetmats:derbynetmats 2006-06-20 12:17:00 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jdbcapi/URCoveringIndexTest.junit also failed:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/derbynetclientmats/DerbyNetClient/derbynetmats/jdbcapi/URCoveringIndexTest.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: URCoveringIndexTest jdk1.5.0_04 DerbyNetClient derbynetmats:jdbcapi 2006-06-20 12:28:52 ***&lt;br/&gt;
0 add&lt;br/&gt;
&amp;gt; .E..E.&lt;br/&gt;
&amp;gt; There were 2 errors:&lt;br/&gt;
&amp;gt; 1) testUpdateUpdatedTupleScrollPostitioned(org.apache.derbyTesting.functionTests.tests.jdbcapi.URCoveringIndexTest)java.sql.SQLException: Invalid cursor name &apos;SQL_CURLH000C2&apos;.&lt;br/&gt;
&amp;gt; Caused by: org.apache.derby.client.am.SqlException: Invalid cursor name &apos;SQL_CURLH000C2&apos;.&lt;br/&gt;
&amp;gt; 	... 17 more&lt;br/&gt;
&amp;gt; 2) testUpdateUpdatedTupleFOPositioned(org.apache.derbyTesting.functionTests.tests.jdbcapi.URCoveringIndexTest)java.sql.SQLException: Invalid cursor name &apos;SQL_CURLH000C3&apos;.&lt;br/&gt;
&amp;gt; Caused by: org.apache.derby.client.am.SqlException: Invalid cursor name &apos;SQL_CURLH000C3&apos;.&lt;br/&gt;
&amp;gt; 	... 17 more&lt;br/&gt;
&amp;gt; FAILURES!!!&lt;br/&gt;
&amp;gt; Tests run: 4,  Failures: 0,  Errors: 2&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   URCoveringIndexTest jdk1.5.0_04 DerbyNetClient derbynetmats:jdbcapi 2006-06-20 12:29:00 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Could you please take a look at those failures? Thanks!&lt;/p&gt;</comment>
                            <comment id="12417116" author="dagw" created="Wed, 21 Jun 2006 22:15:59 +0100"  >&lt;p&gt;Not sure what happened, anyway here is a new version&lt;br/&gt;
of the patch which passes derbyall.&lt;/p&gt;</comment>
                            <comment id="12417458" author="knutanders" created="Fri, 23 Jun 2006 19:20:49 +0100"  >&lt;p&gt;Dag, I made two changes to your last patch before committing.&lt;/p&gt;

&lt;p&gt;  1) A couple of println statements had been added to SectionManager.java (all commented out). I removed those.&lt;/p&gt;

&lt;p&gt;  2) One of the work-arounds for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1036&quot; title=&quot;Embedded and client differ with regard to Statement.setCursor Name. client will disallow duplicate cursor names.  Embedded will allow it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1036&quot;&gt;&lt;del&gt;DERBY-1036&lt;/del&gt;&lt;/a&gt; in checkDataSource.java was only partially removed:&lt;/p&gt;

&lt;p&gt;Your patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;//&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1036&quot; title=&quot;Embedded and client differ with regard to Statement.setCursor Name. client will disallow duplicate cursor names.  Embedded will allow it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1036&quot;&gt;&lt;del&gt;DERBY-1036&lt;/del&gt;&lt;/a&gt; - need a new name&lt;/li&gt;
	&lt;li&gt;//s.setCursorName(&quot;StokeNewington&quot;);&lt;br/&gt;
+		s.setCursorName(&quot;StokeNewington&quot;);&lt;br/&gt;
 		s.setCursorName(&quot;districtInLondon&quot;);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Committed change:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;//&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1036&quot; title=&quot;Embedded and client differ with regard to Statement.setCursor Name. client will disallow duplicate cursor names.  Embedded will allow it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1036&quot;&gt;&lt;del&gt;DERBY-1036&lt;/del&gt;&lt;/a&gt; - need a new name&lt;/li&gt;
	&lt;li&gt;//s.setCursorName(&quot;StokeNewington&quot;);&lt;/li&gt;
	&lt;li&gt;s.setCursorName(&quot;districtInLondon&quot;);&lt;br/&gt;
+		s.setCursorName(&quot;StokeNewington&quot;);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The patch was committed into trunk with revision 416661.&lt;/p&gt;</comment>
                            <comment id="12418740" author="kmarsden" created="Sat, 1 Jul 2006 08:35:36 +0100"  >&lt;p&gt;Verified fix for 10.2.  Thanks Dag!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335717" name="derby-1183-2.diff" size="22224" author="dagw" created="Wed, 21 Jun 2006 22:15:59 +0100"/>
                            <attachment id="12335716" name="derby-1183-2.stat" size="790" author="dagw" created="Wed, 21 Jun 2006 22:15:59 +0100"/>
                            <attachment id="12335362" name="derby-1183.diff" size="20532" author="dagw" created="Tue, 13 Jun 2006 06:22:56 +0100"/>
                            <attachment id="12335361" name="derby-1183.stat" size="724" author="dagw" created="Tue, 13 Jun 2006 06:22:56 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Jun 2006 05:22:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22356</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0yvb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39467</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>