<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:42 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3741/DERBY-3741.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3741] SQL LENGTH function materializes CLOB into memory</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3741</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3732&quot; title=&quot;SQL Length function materializes BLOB  into memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3732&quot;&gt;&lt;del&gt;DERBY-3732&lt;/del&gt;&lt;/a&gt;, the SQL LENGTH function also materializes CLOB&apos;s into memory.  See attached repro.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12399203">DERBY-3741</key>
            <summary>SQL LENGTH function materializes CLOB into memory</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="suranjay">Suran Jayathilaka</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Jun 2008 23:50:55 +0100</created>
                <updated>Tue, 30 Jun 2009 17:02:42 +0100</updated>
                            <resolved>Wed, 13 Aug 2008 17:52:39 +0100</resolved>
                                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12608940" author="kmarsden" created="Fri, 27 Jun 2008 23:53:39 +0100"  >&lt;p&gt;to reproduce run &lt;br/&gt;
java -Xmx16M LengthLargeClob&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
        at org.apache.derby.iapi.types.SQLChar.readExternal(SQLChar.java:734)&lt;br/&gt;
        at org.apache.derby.iapi.types.SQLChar.getString(SQLChar.java:358)&lt;br/&gt;
        at org.apache.derby.iapi.types.SQLChar.getLength(SQLChar.java:315)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BaseActivation.getDB2Length(BaseActivation.java:1684)&lt;br/&gt;
        at org.apache.derby.exe.acf81e0010x011axcc3cx23cbx00000040a4181.e1(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:141)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ProjectRestrictResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:291)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:460)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:423)&lt;/p&gt;</comment>
                            <comment id="12610277" author="kmarsden" created="Thu, 3 Jul 2008 17:56:51 +0100"  >&lt;p&gt;Reattaching LargeLengthClob.zip, was missing file before.&lt;/p&gt;</comment>
                            <comment id="12615304" author="kmarsden" created="Mon, 21 Jul 2008 17:50:54 +0100"  >&lt;p&gt;Suran asked me off-line for some pointers on this issue, but I am posting my response to the issue to keep the discussion on the list and allow room for anyone to correct me if what I say is wrong.&lt;/p&gt;

&lt;p&gt;Probably the first best approach is to write the test. Write a test ClobMemTest which is similar to BlobMemTest and add it to the memory suite.  Make sure you have some multibyte characters so we are sure we are getting the character length and not the byte length when we fix this.  The test should pass normally but fail when run with the target junit-lowmem.&lt;/p&gt;

&lt;p&gt;As for the code change, I think we are looking to change SQLChar.getLength(). I believe the character length is encoded in the stream in some cases so we want to retrieve that if possible and if not read (skip)  the entire stream to get the character length. Either way we will need to reset the stream in the end to make sure we are positioned back at the beginning of the stream.  The changes should be the same as those made to SQLBinary.getLength() for BLOBS (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3732&quot; title=&quot;SQL Length function materializes BLOB  into memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3732&quot;&gt;&lt;del&gt;DERBY-3732&lt;/del&gt;&lt;/a&gt;)  but not exactly the same because we are dealing with characters.&lt;/p&gt;

&lt;p&gt;Hope this helps. Please let us know as you have more questions.&lt;/p&gt;




</comment>
                            <comment id="12615360" author="suranjay" created="Mon, 21 Jul 2008 19:49:29 +0100"  >&lt;p&gt;In a subsequent discussion, Kathey pointed out that the following path might be the one to take.&lt;br/&gt;
For not so large CLOBs, if the stream is resettable, get the utf8length with readExternal() and return that IF it&apos;s not zero.&lt;br/&gt;
If it&apos;s zero, (i.e. stream could be longer than 65535) can use the UTF8Util class&apos; skipUntilEOF() method to get how many chars are in the stream, &lt;br/&gt;
but resetting the stream after that.&lt;br/&gt;
If the stream is not Resetable, will have to go with getString().length.&lt;/p&gt;</comment>
                            <comment id="12615868" author="suranjay" created="Wed, 23 Jul 2008 03:40:54 +0100"  >&lt;p&gt;Attaching ClobMemTest testcase for review. This is based entirely on BlobMemTest. This is NOT intended as a patch.&lt;/p&gt;</comment>
                            <comment id="12616334" author="suranjay" created="Thu, 24 Jul 2008 04:28:48 +0100"  >&lt;p&gt;Attaching patch derby-3741-1.diff  for initial review only. Test suites not run.&lt;/p&gt;</comment>
                            <comment id="12616503" author="kmarsden" created="Thu, 24 Jul 2008 16:25:29 +0100"  >&lt;p&gt;On the code I just have one comment.  Should we check to see if the stream is instanceof ObjectInput as well as Resettable since we cast it?  I realize SQLBinary has the same problem.&lt;/p&gt;

&lt;p&gt;I ran the test with 16M heap and it fails.  It looks like we are  materializing the lob for  client. (I thought we had fixed that #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.   Perhaps you could disable this part of the test for client and file a bug that the client is materializing the lob into memory.  I noticed BlobMemTest with 16M is failing with a similar error (It passed  a few weeks ago), so it looks like a regression.  Here is the ClobMemTest failure.   &lt;/p&gt;

&lt;p&gt;There was 1 error:&lt;br/&gt;
1) testClobLength(org.apache.derbyTesting.functionTests.tests.memory.ClobMemTest)java.sql.SQLException: Attempt to fully&lt;br/&gt;
 materialize lob data that is too large for the JVM.  The connection has been terminated.&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:46)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:362)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:281)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.memory.ClobMemTest.testClobLength(ClobMemTest.java:116)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.memory.ClobMemTest.testClobLength(ClobMemTest.java:171)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:104)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: Attempt to fully materialize lob data that is too large for t&lt;br/&gt;
he JVM.  The connection has been terminated.&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.copyEXTDTA(NetStatementReply.java:1528)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.parseCNTQRYreply(NetResultSetReply.java:143)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.readFetch(NetResultSetReply.java:42)&lt;br/&gt;
        at org.apache.derby.client.net.ResultSetReply.readFetch(ResultSetReply.java:41)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSet.readFetch_(NetResultSet.java:206)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.flowFetch(ResultSet.java:4275)&lt;br/&gt;
        at org.apache.derby.client.net.NetCursor.getMoreData_(NetCursor.java:1243)&lt;br/&gt;
        at org.apache.derby.client.am.Cursor.stepNext(Cursor.java:176)&lt;br/&gt;
        at org.apache.derby.client.am.Cursor.next(Cursor.java:195)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.nextX(ResultSet.java:302)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:272)&lt;br/&gt;
        ... 38 more&lt;br/&gt;
Caused by: java.lang.OutOfMemoryError&lt;br/&gt;
        at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:116)&lt;br/&gt;
        at org.apache.derby.client.net.Reply.getData(Reply.java:787)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.copyEXTDTA(NetStatementReply.java:1520)&lt;br/&gt;
        ... 48 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;/p&gt;</comment>
                            <comment id="12616669" author="kmarsden" created="Thu, 24 Jul 2008 22:41:18 +0100"  >&lt;p&gt;Hi Suran,&lt;/p&gt;

&lt;p&gt;After the wild goose chase of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3745&quot; title=&quot;Derby can leak classloaders in an app server environment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3745&quot;&gt;&lt;del&gt;DERBY-3745&lt;/del&gt;&lt;/a&gt; I have some more comments on the patch.&lt;/p&gt;

&lt;p&gt;There is a problem with the patch setting rawLenth to the length without having the corresponding rawData value set. This led to problems like the one I saw with the getProcedures not returning the correct value.    The getLength() function should not attempt to set rawLength.&lt;br/&gt;
See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3795?focusedCommentId=12616661#action_12616661&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-3795?focusedCommentId=12616661#action_12616661&lt;/a&gt;&lt;br/&gt;
for the getProcedures problem I mentioned.&lt;/p&gt;

&lt;p&gt;Also you have code:&lt;br/&gt;
   if (rawLength != -1)&lt;br/&gt;
            return rawLength;&lt;br/&gt;
        if (stream != null) {&lt;br/&gt;
            if (rawLength != -1) {&lt;br/&gt;
                return rawLength;&lt;br/&gt;
              .....&lt;/p&gt;

&lt;p&gt;There is no need to check rawLength again after checking that the stream is not null, because you would have already returned it.&lt;/p&gt;

&lt;p&gt;Thanks &lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12617317" author="suranjay" created="Sun, 27 Jul 2008 18:25:55 +0100"  >&lt;p&gt;Made changes according to Kathey&apos;s suggestions. Please review.&lt;/p&gt;</comment>
                            <comment id="12617535" author="kmarsden" created="Mon, 28 Jul 2008 21:22:29 +0100"  >&lt;p&gt;Thanks Suran for the patch.  I committed revision 680478.  Before you close the issue though, could you add a test for small and large clobs with multibyte characters.&lt;/p&gt;

&lt;p&gt;Thanks &lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12619208" author="suranjay" created="Sat, 2 Aug 2008 13:19:52 +0100"  >&lt;p&gt;derby-3741-multibyte_test.diff adds a test for small and large clobs with multibyte characters. &lt;br/&gt;
Please review.&lt;/p&gt;</comment>
                            <comment id="12619561" author="kmarsden" created="Mon, 4 Aug 2008 16:57:40 +0100"  >&lt;p&gt;I am attaching a patch that makes a  couple minor modifiications to the test.  It changes the pageCacheSize to 100 so the test can be run with low memory configurations and it also changes the test to check the contents of the stream when it reads it back in.    I&apos;d go ahead and commit this change, but one thing I noticed was that the client test for the large clob seems really slow. 525000ms vs 9578ms  for embedded.  So the test will add about 9 minutes to the suite.   Two  questions:&lt;/p&gt;

&lt;p&gt;1) Is there a client bug logged that would explain the extreme difference?&lt;br/&gt;
2) Is it acceptable to check in this test since it adds so much time to suites.All. One option to shorten the run is to only run for embedded.  For this bug we are mostly testing that LENGTH  is returning the right value for multibyte characters and not consuming too much memory, so for that an embedded run would have us covered.&lt;/p&gt;
</comment>
                            <comment id="12621527" author="suranjay" created="Mon, 11 Aug 2008 18:58:36 +0100"  >&lt;p&gt;This patch, derby-2741-mergeto-10.4.diff, adds the changes for derby-3741 to the 10.4 code branch.&lt;/p&gt;

&lt;p&gt;It incorporates changes from trunk svn revisions &lt;br/&gt;
674565 : SQLChar file reformat&lt;br/&gt;
680478&lt;br/&gt;
682693.&lt;/p&gt;

&lt;p&gt;The commands used for merging are as follows. (on Windows)&lt;br/&gt;
---------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
svn merge -r 674564:674565 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;svn merge -r 680477:680478 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;svn revert java\testing\org\apache\derbyTesting\functionTests\tests\memory\ClobMemTest.java&lt;/p&gt;

&lt;p&gt;svn add java\testing\org\apache\derbyTesting\functionTests\tests\memory\ClobMemTest.java&lt;/p&gt;

&lt;p&gt;svn merge -r 682692:682693 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;svn revert java\testing\org\apache\derbyTesting\functionTests\tests\memory\MultiByteClobTest.java&lt;/p&gt;

&lt;p&gt;svn add java\testing\org\apache\derbyTesting\functionTests\tests\memory\MultiByteClobTest.java&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;When running tests (suites.All), there was a lot of test failures. &lt;br/&gt;
e.g.&lt;br/&gt;
jdbcapi/AuthenticationTest&lt;/p&gt;



</comment>
                            <comment id="12621529" author="suranjay" created="Mon, 11 Aug 2008 19:00:41 +0100"  >&lt;p&gt;Pls see previous comment.&lt;/p&gt;</comment>
                            <comment id="12621548" author="kmarsden" created="Mon, 11 Aug 2008 19:55:39 +0100"  >&lt;p&gt;jdbcapi/AuthenticationTest runs ok for me with your patch. (Actually I ran the merge commands and fixed up the setAutocommit calls.)  Can you post the stack trace from your failure and the derby.log so we can try to find out what&apos;s wrong with your test.&lt;/p&gt;</comment>
                            <comment id="12621551" author="suranjay" created="Mon, 11 Aug 2008 20:01:24 +0100"  >&lt;p&gt;Attaching derby.log file from the failed tests. This file is from the &lt;br/&gt;
derby-10.4\tests\fail\DerbyNetClient\AuthenticationTest\testChangePasswordAndDatabasePropertiesOnly&lt;/p&gt;

&lt;p&gt;folder.&lt;br/&gt;
Before running the test, I had cleaned the tests folder.&lt;/p&gt;

&lt;p&gt;I used the following commands to run the tests.&lt;/p&gt;

&lt;p&gt;set CLASSPATH=..\classes;..\tools\java\junit.jar;..\tools\java\jakarta-oro-2.0.8.jar&lt;br/&gt;
java -XX:MaxPermSize=128M -Xmx1024M -Xms512M -Dderby.tests.trace=true junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.jdbcapi.AuthenticationTest&lt;/p&gt;</comment>
                            <comment id="12621564" author="suranjay" created="Mon, 11 Aug 2008 20:36:48 +0100"  >&lt;p&gt;Resubmitting 10.4 merge patch with references to setAutoCommit() replaced with the old usage of getConnection().setAutoCommit().&lt;/p&gt;</comment>
                            <comment id="12622275" author="kmarsden" created="Wed, 13 Aug 2008 17:52:39 +0100"  >&lt;p&gt;I checked this into 10.4 with revision 685028.  Resolving it for now. I might backport it to 10.3 later but this will get it in the 10.4 release  notes.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12413606">DERBY-4040</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12398650">DERBY-3732</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12386683" name="ClobMemTest.java" size="7811" author="suranjay" created="Wed, 23 Jul 2008 03:40:53 +0100"/>
                            <attachment id="12385218" name="LargeLengthClob.zip" size="1413" author="kmarsden" created="Thu, 3 Jul 2008 17:56:51 +0100"/>
                            <attachment id="12386777" name="derby-3741-1.diff" size="11693" author="suranjay" created="Thu, 24 Jul 2008 04:28:48 +0100"/>
                            <attachment id="12386989" name="derby-3741-2.diff" size="11699" author="suranjay" created="Sun, 27 Jul 2008 18:25:55 +0100"/>
                            <attachment id="12387983" name="derby-3741-mergeto-10.4-new.diff" size="145058" author="suranjay" created="Mon, 11 Aug 2008 20:36:48 +0100"/>
                            <attachment id="12387973" name="derby-3741-mergeto-10.4.diff" size="145010" author="suranjay" created="Mon, 11 Aug 2008 19:00:41 +0100"/>
                            <attachment id="12387397" name="derby-3741-multibyte_test.diff" size="7677" author="suranjay" created="Sat, 2 Aug 2008 13:19:52 +0100"/>
                            <attachment id="12387482" name="derby-3741_multibyteclobtest_update_diff.txt" size="8007" author="kmarsden" created="Mon, 4 Aug 2008 16:57:40 +0100"/>
                            <attachment id="12387979" name="derby.log" size="183021" author="suranjay" created="Mon, 11 Aug 2008 20:01:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Jul 2008 18:49:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0up3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38791</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>