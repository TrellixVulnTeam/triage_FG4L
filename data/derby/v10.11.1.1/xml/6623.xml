<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:21 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6623/DERBY-6623.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6623] DatabaseMetaDataTest fails intermittently</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6623</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Saw this on the trunk [&lt;a href=&quot;http://download.java.net/javadesktop/derby/request_5592737/javadb-task-3883745.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/request_5592737/javadb-task-3883745.html&lt;/a&gt;[regression tests]]:&lt;/p&gt;

&lt;p&gt;testGetXXportedKeys:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
junit.framework.AssertionFailedError: Column value mismatch @ column &apos;FK_NAME&apos;, row 3:
    Expected: &amp;gt;FKEY3&amp;lt;
    Found:    &amp;gt;FKEY2&amp;lt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1303)
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1215)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1102)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:1025)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:982)
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertFullResultSet(DatabaseMetaDataTest.java:3930)
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetXXportedKeys(DatabaseMetaDataTest.java:4117)
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:118)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:440)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:457)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12722341">DERBY-6623</key>
            <summary>DatabaseMetaDataTest fails intermittently</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Jun 2014 21:51:56 +0100</created>
                <updated>Thu, 7 Aug 2014 17:40:31 +0100</updated>
                            <resolved>Mon, 4 Aug 2014 23:59:05 +0100</resolved>
                                    <version>10.10.2.0</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                    <fixVersion>10.12.0.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14036366" author="dagw" created="Wed, 18 Jun 2014 21:58:08 +0100"  >&lt;p&gt;I notice that the value FKEY3 (and FKEY2) in the test are foreign keys. Looking at the test, we are asking for imported keys (line 4116).The query we use (internally) for embedded metadata queries (cd java/engine/org/apache/derby/impl/jdbc/metadata.properties query &quot;getImportedKeys&quot;) has the following &lt;br/&gt;
ORDER BY clause at the end:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&quot;ORDER BY PKTABLE_CAT,  \
				PKTABLE_SCHEM, \
				PKTABLE_NAME, \
				PK_NAME, \
				KEY_SEQ
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As far as I can, it does not order the rows on FK_NAME, which is the foreign key name. This could possibly be the reason the rows come back in an unexpected order in the test.&lt;/p&gt;

</comment>
                            <comment id="14036385" author="dagw" created="Wed, 18 Jun 2014 22:07:40 +0100"  >&lt;p&gt; Looking at the API specification for DatabaseMetaData#getImported keys I see:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;They are ordered by PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, and KEY_SEQ. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For the foreign keys FKEY2 and FKEY3, I think all these values can be equal since they both refer to the same&lt;br/&gt;
primary key in the primary table (&quot;C30&quot;, &quot;S&quot;).&lt;/p&gt;
</comment>
                            <comment id="14036390" author="dagw" created="Wed, 18 Jun 2014 22:08:59 +0100"  >&lt;p&gt;One solution would be have the test use JDBC#assertUnorderedResultSet.&lt;/p&gt;</comment>
                            <comment id="14036522" author="dagw" created="Wed, 18 Jun 2014 23:15:22 +0100"  >&lt;p&gt;Patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12651276/12651276_derby-6623.diff&quot; title=&quot;derby-6623.diff attached to DERBY-6623&quot;&gt;derby-6623.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; introduces JDBC#assertunorderedResultSet to solve the issue. It also cleans up a number of IDE warnings (missing Javadocs, old style loop code, variable shadowing).&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;</comment>
                            <comment id="14037541" author="jira-bot" created="Thu, 19 Jun 2014 18:08:45 +0100"  >&lt;p&gt;Commit 1603944 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1603944&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1603944&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6623&quot; title=&quot;DatabaseMetaDataTest fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6623&quot;&gt;&lt;del&gt;DERBY-6623&lt;/del&gt;&lt;/a&gt; DatabaseMetaDataTest fails intermittently&lt;/p&gt;

&lt;p&gt;Patch derby-6623 introduced JDBC#assertunorderedResultSet to solve the&lt;br/&gt;
issue. It also cleans up a number of IDE warnings (missing Javadocs,&lt;br/&gt;
old style loop code, variable shadowing).&lt;/p&gt;</comment>
                            <comment id="14041753" author="dagw" created="Tue, 24 Jun 2014 07:15:42 +0100"  >&lt;p&gt;Reopening - last night I saw another error in the nightly regressions on trunk:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://download.java.net/javadesktop/derby/request_5593027&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/request_5593027&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;with this signature: &lt;/p&gt;

&lt;p&gt;org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetBestRowIdentifier &lt;/p&gt;

&lt;p&gt;stack trace.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
junit.framework.AssertionFailedError: Column value mismatch @ column &apos;COLUMN_NAME&apos;, row 1:
    Expected: &amp;gt;J&amp;lt;
    Found:    &amp;gt;I&amp;lt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1303)
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1215)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1102)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:1025)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:982)
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.verifyBRIResults(DatabaseMetaDataTest.java:3729)
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetBestRowIdentifier(DatabaseMetaDataTest.java:3485)
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:118)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:440)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:457)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="14041768" author="dagw" created="Tue, 24 Jun 2014 07:36:36 +0100"  >&lt;p&gt;This time, the instability is in the method EmbedDatabaseMetaData#getBestRowIdentifier.  The table in question looks like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
create table brit3 (i &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; unique, j &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; unique)  -- cf line 3405 in DatabaseMetaDataTest
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now, the Javadoc for the DBMD method says:&lt;/p&gt;

&lt;p&gt; &quot;Retrieves a description of a table&apos;s optimal set of columns that uniquely identifies a row. They are ordered by SCOPE. &quot;&lt;/p&gt;

&lt;p&gt;In &quot;metadata.properties&quot; I see this internal query for this method:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
getBestRowIdentifierUniqueConstraint=\
	SELECT CONS.CONSTRAINTID, IDX.DESCRIPTOR.numberOfOrderedColumns() AS NUMCOLS \
	FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, \
		SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES IDX \
	WHERE TABS.TABLEID = conS.TABLEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID \
		AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND IDX.DESCRIPTOR IS NOT NULL \
		AND KEYS.CONGLOMERATEID = IDX.CONGLOMERATEID AND IDX.ISCONSTRAINT \
		AND conS.type = &apos;U&apos; \
		AND ((1=1) OR ? IS NOT NULL) \
		AND (SCHEMAS.SCHEMANAME LIKE ?) \
		AND (TABS.TABLENAME=?) \
	ORDER BY NUMCOLS
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, in this case, the table has two columns which both are declared as UNIQUE NOT NULL and the query returns both, but it does not specify an order between them.&lt;/p&gt;

&lt;p&gt;The code that analyzes the query (EmbedDatabaseeMetaData#doGetBestRowId) has this section:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// see &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there is a primary key, use it.
&lt;/span&gt;ps = getPreparedQuery(&lt;span class=&quot;code-quote&quot;&gt;&quot;getBestRowIdentifierPrimaryKey&quot;&lt;/span&gt;);

:   (not the &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; here, so we proceed to look at unique columns)
&lt;span class=&quot;code-comment&quot;&gt;// get the unique constraint with the fewest columns.
&lt;/span&gt;ps = getPreparedQuery(&lt;span class=&quot;code-quote&quot;&gt;&quot;getBestRowIdentifierUniqueConstraint&quot;&lt;/span&gt;);
ps.setString(1,catalogPattern);
ps.setString(2,schemaPattern);
ps.setString(3,table);

rs = ps.executeQuery();
done = rs.next();
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (done) {
    constraintId = rs.getString(1);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As can be seen, once a row is read, that row is used. The test asserts it to be &quot;J&quot;, but in the failing regression it was in fact &quot;I&quot;, which is allowed since no ordering is specified on which constraint to return first. I presume what happened was that another query plan was used which gave the rows in the opposite order, causing the assert error.&lt;/p&gt;

&lt;p&gt;Both unique constraints are equally good here, so which should be returned?  Both? The API Javadoc doesn&apos;t really address this scenario, nor does the Derby code.&lt;/p&gt;

</comment>
                            <comment id="14041866" author="knutanders" created="Tue, 24 Jun 2014 09:32:36 +0100"  >&lt;p&gt;My expectation would be that it only returned one of them. The javadoc says: &quot;Retrieves a description of a table&apos;s optimal set of columns that uniquely identifies a row.&quot; And (I, J) sounds like a less optimal set than (I) or (J), since it&apos;s bigger and has some redundancy.&lt;/p&gt;

&lt;p&gt;I think the current behaviour is fine, but I see no harm in adding some extra ordering so that it is deterministic which constraint is used in case of ties.&lt;/p&gt;

&lt;p&gt;The reference manual actually has &lt;a href=&quot;https://builds.apache.org/job/Derby-docs/lastSuccessfulBuild/artifact/trunk/out/ref/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;a topic&lt;/a&gt; that describes how getBestRowIdentifier() works. It&apos;s more detailed than the JDBC specification, but it does not say anything about ties.&lt;/p&gt;</comment>
                            <comment id="14042020" author="rhillegas" created="Tue, 24 Jun 2014 13:05:14 +0100"  >&lt;p&gt;Seen again during last night&apos;s run on Solaris_amd64_jdk8 against the head of the 10.11.1 trunk: &lt;a href=&quot;http://javadb.se.oracle.com/javadb-testing/request_5593027/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://javadb.se.oracle.com/javadb-testing/request_5593027/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14042308" author="dagw" created="Tue, 24 Jun 2014 17:15:00 +0100"  >&lt;p&gt;Yes, I think users would appreciate if such queries were deterministic... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ll make a patch to that effect.&lt;/p&gt;</comment>
                            <comment id="14042492" author="dagw" created="Tue, 24 Jun 2014 19:37:04 +0100"  >&lt;p&gt;Attaching &lt;span class=&quot;error&quot;&gt;&amp;#91;^derby-6623-2&amp;#93;&lt;/span&gt;, which adds an extra ordering using IndexDescriptor&apos;s toString-method. This imposes a total order on the rows returned from the metadata query, so hopefully we get rid of the Heisenbug. Note that this caused another unique constraint to be chosen in the example that failed. DababaseMetaDataTest passed. Re-running regressions.&lt;/p&gt;</comment>
                            <comment id="14042514" author="dagw" created="Tue, 24 Jun 2014 19:52:08 +0100"  >&lt;p&gt;One could argue that it fragile to use the toString method in this way. I did it to avoid having to extend the IndexDescriptor interface with another method with an ordering value. But we could consider&lt;/p&gt;

&lt;p&gt;adding some such:&lt;br/&gt;
        IndexDescriptor#getFirstBaseColumn&lt;/p&gt;

&lt;p&gt;and order on that. Opinions?&lt;/p&gt;</comment>
                            <comment id="14043318" author="knutanders" created="Wed, 25 Jun 2014 12:13:30 +0100"  >&lt;p&gt;Maybe it would be good enough to order by SYS.SYSCONSTRAINTS.CONSTRAINTNAME? So that in case of a tie the alphabetically first constraint/index would be chosen?&lt;/p&gt;</comment>
                            <comment id="14043426" author="dagw" created="Wed, 25 Jun 2014 14:19:31 +0100"  >&lt;p&gt;Attaching patch version 2b: changed to sorting on the output of Arrays.toString(IndexDescriptor.baseColumnPosition). This makes sorting stable iff:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the row layout doesn&apos;t change&lt;/li&gt;
	&lt;li&gt;no indexes or constraint are added or removed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Mostly, indexes with early base columns will be sorted first (and selected as best), although not always: &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;11,1&amp;#93;&lt;/span&gt;&quot; sorts before &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;2,1&amp;#93;&lt;/span&gt;&quot;, but the main thing is the same index will be selected for the same (unchanged) database always. Rerunning regressions.&lt;/p&gt;
</comment>
                            <comment id="14043697" author="jira-bot" created="Wed, 25 Jun 2014 17:24:41 +0100"  >&lt;p&gt;Commit 1605478 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1605478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1605478&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6623&quot; title=&quot;DatabaseMetaDataTest fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6623&quot;&gt;&lt;del&gt;DERBY-6623&lt;/del&gt;&lt;/a&gt; DatabaseMetaDataTest fails intermittently&lt;/p&gt;

&lt;p&gt;Patch &lt;b&gt;derby-6623-2a&lt;/b&gt;, which adds an extra ordering &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; using&lt;br/&gt;
IndexDescriptor&apos;s &lt;b&gt;getBaseColumns&lt;/b&gt; method as input to&lt;br/&gt;
&lt;b&gt;Arrays.toString()&lt;/b&gt;. This imposes a total order on the rows returned&lt;br/&gt;
from the metadata query, so hopefully we get rid of the&lt;br/&gt;
Heisenbug. Note that this caused another unique constraint to be&lt;br/&gt;
chosen in the example that failed.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;b&gt;after&lt;/b&gt; the number of columns in the index: small numbers&lt;br/&gt;
    before higher numbers since constraints with a small number of&lt;br/&gt;
    columns are considered better&lt;/p&gt;

&lt;p&gt;The ordering makes sorting stable iff:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the row layout doesn&apos;t change&lt;/li&gt;
	&lt;li&gt;no indexes or constraint are added or removed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Mostly, indexes with early base columns will be sorted first (and&lt;br/&gt;
selected as best), although not always: &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;11,1&amp;#93;&lt;/span&gt;&quot; sorts before &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;2,1&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
but the main thing is the same index will be selected for the same&lt;br/&gt;
(unchanged) database always.&lt;/p&gt;</comment>
                            <comment id="14085417" author="dagw" created="Mon, 4 Aug 2014 23:30:23 +0100"  >&lt;p&gt;Reopening this, I saw this error on &lt;a href=&quot;http://download.java.net/javadesktop/derby/request_5594301/javadb-task-3907241.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/request_5594301/javadb-task-3907241.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
junit.framework.AssertionFailedError: Column value mismatch @ column &apos;FK_NAME&apos;, row 3:
    Expected: &amp;gt;FKEY3&amp;lt;
    Found:    &amp;gt;FKEY2&amp;lt;

    PKTABLE_CAT,PKTABLE_SCHEM,PKTABLE_NAME,PKCOLUMN_NAME,FKTABLE_CAT,FKTABLE_SCHEM,FKTABLE_NAME,FKCOLUMN_NAME,KEY_SEQ,UPDATE_RULE,DELETE_RULE,FK_NAME,PK_NAME,DEFERRABILITY
    ----------- ------------- ------------ ------------- ----------- ------------- ------------ ------------- ------- ----------- ----------- ------- ------- -------------
   [, DMDT, KT1, VC10, , DMDT, REFTAB, VC10, 1, 3, 3, FKEY1, PRIMKEY, 7]
   [, DMDT, KT1, I, , DMDT, REFTAB, I, 2, 3, 3, FKEY1, PRIMKEY, 7]
   [, DMDT, KT1, C30, , DMDT, REFTAB, C30, 1, 3, 3, FKEY2, UNIQUEKEY, 7]
   [, DMDT, KT1, C30, , DMDT, REFTAB, C30, 1, 3, 3, FKEY3, UNIQUEKEY, 7]
   [, DMDT, KT1, S, , DMDT, REFTAB, S2, 2, 3, 3, FKEY2, UNIQUEKEY, 7]
   [, DMDT, KT1, S, , DMDT, REFTAB, S, 2, 3, 3, FKEY3, UNIQUEKEY, 7]
   [, DMDT, REFTAB, DPRIM, , DMDT, REFTAB, DFOR, 1, 3, 3, FKEYSELF, PKEY_REFTAB, 7]

	at org.apache.derbyTesting.junit.BaseTestCase.newAssertionFailedError(BaseTestCase.java:1164)
	at org.apache.derbyTesting.junit.JDBC.addRsToReport(JDBC.java:1878)
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1377)
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1275)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1137)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:1048)
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:1005)
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertFullResultSet(DatabaseMetaDataTest.java:4111)
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetXXportedKeys(DatabaseMetaDataTest.java:4331)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14085421" author="dagw" created="Mon, 4 Aug 2014 23:34:23 +0100"  >&lt;p&gt;Now, the expected set of rows is:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;KT1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;VC10&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;VC10&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEY1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;PRIMKEY&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;},
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;KT1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;I&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;I&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;2&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEY1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;PRIMKEY&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;},
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;KT1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;C30&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;C30&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEY3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;UNIQUEKEY&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;},
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;KT1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;C30&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;C30&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEY2&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;UNIQUEKEY&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;},
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;KT1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;S&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;S&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;2&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEY3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;UNIQUEKEY&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;},
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;KT1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;S&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;S2&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;2&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEY2&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;UNIQUEKEY&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;},
{&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;DPRIM&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;,schema,&quot;&lt;/span&gt;REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;DFOR&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;1&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;3&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;FKEYSELF&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;PKEY_REFTAB&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;7&quot;}};
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so we can see that row #3 and #4 have changed places.&lt;/p&gt;</comment>
                            <comment id="14085444" author="dagw" created="Mon, 4 Aug 2014 23:55:31 +0100"  >&lt;p&gt;Attaching &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12659747/12659747_derby-6623-3.diff&quot; title=&quot;derby-6623-3.diff attached to DERBY-6623&quot;&gt;derby-6623-3.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another instance of the test neglecting to consider that the rows may&lt;br/&gt;
legitimately come back in another order.  Switched to using&lt;br/&gt;
&lt;b&gt;assertFullUnorderedResultSet&lt;/b&gt; instead of &lt;b&gt;assertFullResultSet&lt;/b&gt;.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14085450" author="jira-bot" created="Mon, 4 Aug 2014 23:58:26 +0100"  >&lt;p&gt;Commit 1615821 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1615821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1615821&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6623&quot; title=&quot;DatabaseMetaDataTest fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6623&quot;&gt;&lt;del&gt;DERBY-6623&lt;/del&gt;&lt;/a&gt; DatabaseMetaDataTest fails intermittently&lt;/p&gt;

&lt;p&gt;Another instance of the test neglecting to consider that the rows may&lt;br/&gt;
legimimately come back in another order.  Switched to using&lt;br/&gt;
&lt;b&gt;assertFullUnorderedResultSet&lt;/b&gt; instead of &lt;b&gt;assertFullResultSet&lt;/b&gt;.&lt;/p&gt;</comment>
                            <comment id="14089377" author="jira-bot" created="Thu, 7 Aug 2014 17:04:56 +0100"  >&lt;p&gt;Commit 1616520 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/branches/10.11&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1616520&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1616520&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6623&quot; title=&quot;DatabaseMetaDataTest fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6623&quot;&gt;&lt;del&gt;DERBY-6623&lt;/del&gt;&lt;/a&gt; DatabaseMetaDataTest fails intermittently&lt;/p&gt;

&lt;p&gt;Backported cleanly from trunk as:&lt;/p&gt;

&lt;p&gt;svn merge -c 1615821 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another instance of the test neglecting to consider that the rows may&lt;br/&gt;
legimimately come back in another order. Switched to using&lt;br/&gt;
assertFullUnorderedResultSet instead of assertFullResultSet.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12652244" name="derby-6623-2.diff" size="3993" author="dagw" created="Tue, 24 Jun 2014 19:37:04 +0100"/>
                            <attachment id="12652412" name="derby-6623-2a.diff" size="4214" author="dagw" created="Wed, 25 Jun 2014 14:19:31 +0100"/>
                            <attachment id="12652413" name="derby-6623-2a.status" size="933" author="dagw" created="Wed, 25 Jun 2014 14:19:31 +0100"/>
                            <attachment id="12659747" name="derby-6623-3.diff" size="1633" author="dagw" created="Mon, 4 Aug 2014 23:55:31 +0100"/>
                            <attachment id="12651276" name="derby-6623.diff" size="49335" author="dagw" created="Wed, 18 Jun 2014 23:15:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Jun 2014 17:08:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>400532</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzqsxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>400627</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>