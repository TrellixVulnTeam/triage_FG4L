<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5872/DERBY-5872.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5872] Inconsistency between isWrapperFor() and unwrap() in logical statements</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5872</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I noticed this when I refactored the logical statement classes in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5868&quot; title=&quot;Move java.sql.Wrapper implementations to base classes on the client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5868&quot;&gt;&lt;del&gt;DERBY-5868&lt;/del&gt;&lt;/a&gt;. The isWrapperFor() method forwards calls to the underlying physical statement, but the unwrap() method works purely at the logical level.&lt;/p&gt;

&lt;p&gt;For example, if you produce a LogicalPreparedStatement40 instance with this code&lt;/p&gt;

&lt;p&gt;        ClientConnectionPoolDataSource ds = new ClientConnectionPoolDataSource();&lt;br/&gt;
        ds.setDatabaseName(&quot;testdb&quot;);&lt;br/&gt;
        ds.setCreateDatabase(&quot;create&quot;);&lt;br/&gt;
        ds.setMaxStatements(10);&lt;br/&gt;
        PooledConnection pc = ds.getPooledConnection();&lt;br/&gt;
        Connection c = pc.getConnection();&lt;br/&gt;
        PreparedStatement ps = c.prepareStatement(&quot;values 1&quot;);&lt;/p&gt;

&lt;p&gt;you&apos;ll see that&lt;/p&gt;

&lt;p&gt;        System.out.println(ps.isWrapperFor(LogicalPreparedStatement40.class));&lt;/p&gt;

&lt;p&gt;prints false, telling that ps is not a wrapper for LogicalPreparedStatement40. However, trying to unwrap ps as a LogicalPreparedStatement succeeds:&lt;/p&gt;

&lt;p&gt;        LogicalPreparedStatement40 lps = ps.unwrap(LogicalPreparedStatement40.class);&lt;/p&gt;

&lt;p&gt;On the other hand&lt;/p&gt;

&lt;p&gt;        System.out.println(ps.isWrapperFor(PreparedStatement40.class));&lt;/p&gt;

&lt;p&gt;prints true, indicating that ps is a wrapper for PreparedStatement40, but trying to unwrap it as one, fails:&lt;/p&gt;

&lt;p&gt;        PreparedStatement40 ps4 = ps.unwrap(PreparedStatement40.class);&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.sql.SQLException: Unable to unwrap for &apos;class org.apache.derby.client.am.PreparedStatement40&apos;&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:108)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:364)&lt;br/&gt;
	at org.apache.derby.client.am.LogicalStatementEntity.unwrap(LogicalStatementEntity.java:258)&lt;br/&gt;
	at org.apache.derby.client.am.LogicalPreparedStatement.unwrap(LogicalPreparedStatement.java:57)&lt;br/&gt;
	at Test.main(Test.java:37)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: Unable to unwrap for &apos;class org.apache.derby.client.am.PreparedStatement40&apos;&lt;br/&gt;
	... 3 more&lt;/p&gt;</description>
                <environment></environment>
        <key id="12599708">DERBY-5872</key>
            <summary>Inconsistency between isWrapperFor() and unwrap() in logical statements</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                            <label>derby_backport_reject_10_9</label>
                    </labels>
                <created>Sat, 21 Jul 2012 10:16:17 +0100</created>
                <updated>Mon, 29 Jul 2013 19:58:24 +0100</updated>
                            <resolved>Mon, 23 Jul 2012 08:10:21 +0100</resolved>
                                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                    <version>10.6.1.0</version>
                    <version>10.7.1.1</version>
                    <version>10.8.1.2</version>
                    <version>10.9.1.0</version>
                                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13419788" author="knutanders" created="Sat, 21 Jul 2012 10:56:34 +0100"  >&lt;p&gt;The other implementations of isWrapperFor() and unwrap() in the logical classes (LogicalConnection40 and LogicalDatabaseMetaData40) work strictly at the logical level. That is, their unwrap() methods behave the same way as in the statement classes, but their isWrapperFor() methods don&apos;t. In those classes, isWrapperFor() returns true if and only if unwrap() would succeed, and unwrap() succeeds if and only if the instance implements/extends the specified interface/class. I think we should change the statement classes to behave the same way.&lt;/p&gt;</comment>
                            <comment id="13419874" author="knutanders" created="Sat, 21 Jul 2012 17:43:06 +0100"  >&lt;p&gt;The attached patch makes LogicalStatementEntity.isWrapperFor() work at the logical level, like it does in the other Logical* classes.&lt;/p&gt;

&lt;p&gt;The patch also adds test cases in jdbc4.PreparedStatementTest and jdbc4.CallableStatementTest that expose the bug.&lt;/p&gt;

&lt;p&gt;Additionally, it makes jdbcapi.ClosedObjectTest run on the Logical* classes too. I did this because I noticed ClosedObjectTest didn&apos;t fail with my first attempt at a fix, where I had forgotten to add a check for the statement being closed in isWrapperFor(). So I enabled the test for these classes too in order to get more complete testing of the method.&lt;/p&gt;

&lt;p&gt;All the regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13419891" author="bryanpendleton" created="Sat, 21 Jul 2012 18:42:53 +0100"  >&lt;p&gt;Looks quite thorough and complete. Thanks for cleaning this up; I&apos;m always pleased&lt;br/&gt;
to see patches that remove redundant code!&lt;/p&gt;

&lt;p&gt;I&apos;m not that familiar with java.sql.Wrapper. It is a JDBC4/JDK6 feature, is that right?&lt;/p&gt;

&lt;p&gt;I tried to look back through svn history to figure out when these wrapper methods were&lt;br/&gt;
introduced, and it looks like it was at least 5 years ago. It&apos;s interesting that nobody&lt;br/&gt;
encountered these problems until now; I suppose this means that the Wrapper&lt;br/&gt;
interface isn&apos;t heavily used?&lt;/p&gt;

&lt;p&gt;Regardless, thanks again for cleaning up the implementation and adding the extra tests.&lt;/p&gt;</comment>
                            <comment id="13419909" author="knutanders" created="Sat, 21 Jul 2012 20:02:34 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;You&apos;re right that java.sql.Wrapper was new in JDBC 4.0/JDK 6. I think you&apos;re also right that they are not heavily used, at least not in Derby. My understanding is that the purpose of these methods is to provide a standard way to expose vendor-specific extension to the JDBC classes. But we don&apos;t publish any extensions, so a Derby application would not benefit much from them.&lt;/p&gt;

&lt;p&gt;One might imagine, though, that someone would write code like this because Derby doesn&apos;t implement Statement.cancel():&lt;/p&gt;

&lt;p&gt;    if (conn.isWrapperFor(EmbedConnection.class)) &lt;/p&gt;
{
        conn.unwrap(EmbedConnection.class).cancelRunningStatement();
    }

&lt;p&gt;However, they&apos;re as likely to write&lt;/p&gt;

&lt;p&gt;    if (conn instanceof EmbedConnection) &lt;/p&gt;
{
        ((EmbedConnection) conn).cancelRunningStatement();
    }

&lt;p&gt;which also works when running on JDBC 3.0 (or JSR-169).&lt;/p&gt;</comment>
                            <comment id="13420478" author="knutanders" created="Mon, 23 Jul 2012 08:10:21 +0100"  >&lt;p&gt;Committed revision 1364524.&lt;/p&gt;</comment>
                            <comment id="13695144" author="mikem" created="Fri, 28 Jun 2013 00:00:20 +0100"  >&lt;p&gt;I reviewed just the comments, not sure if this is ok for backport.  Leaning toward not, but not sure.&lt;/p&gt;</comment>
                            <comment id="13720973" author="mamtas" created="Fri, 26 Jul 2013 18:31:55 +0100"  >&lt;p&gt;Knut, I was wondering if it would be ok to backport this to 10.9 and 10.8. It is on the list of jiras to backport.&lt;/p&gt;</comment>
                            <comment id="13720985" author="kmarsden" created="Fri, 26 Jul 2013 18:43:48 +0100"  >&lt;p&gt;One thing to note is that the list is just a list of issues to consider for backport, so if upon analysis it looks like it is not a bug that would likely be hit or is difficult to backport, it is sensible to mark it backport reject and move on.&lt;/p&gt;</comment>
                            <comment id="13722803" author="mamtas" created="Mon, 29 Jul 2013 19:39:12 +0100"  >&lt;p&gt;I will move this jira off of the backport list for now. We can reopen it if we decide to backport it&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12537460" name="derby-5872-1a.diff" size="9549" author="knutanders" created="Sat, 21 Jul 2012 17:43:06 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 21 Jul 2012 17:42:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245861</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0alb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35534</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>