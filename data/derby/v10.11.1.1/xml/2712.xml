<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2712/DERBY-2712.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2712] If large clob is updated after Reader. the reader continues to point to old data</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2712</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If a Reader is fetched from a large clob (obtained from ResultSet) a reader linked to the dvd stream is returned once a set method is called on it the clob data is materialized in control class but the Reader returned previously continues to point to old data.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12370394">DERBY-2712</key>
            <summary>If large clob is updated after Reader. the reader continues to point to old data</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anurag">Anurag Shekhar</assignee>
                                    <reporter username="anurag">Anurag Shekhar</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 May 2007 10:36:12 +0100</created>
                <updated>Fri, 15 Jun 2007 13:37:56 +0100</updated>
                            <resolved>Wed, 13 Jun 2007 13:00:21 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12500682" author="myrna" created="Fri, 1 Jun 2007 12:44:15 +0100"  >&lt;p&gt;changing fix in 10.3 to affects 10.3, I assume that&apos;s what was meant; unassigned issues should not have a fix in at this point (unless they&apos;re a blocker for 10.3 release)&lt;/p&gt;</comment>
                            <comment id="12503339" author="anurag" created="Mon, 11 Jun 2007 10:13:30 +0100"  >&lt;p&gt;I have modified EmbedClob.getCharacterStream to return ClobUpdateableReader. ClobUpdateableReader is modifed to detect if the Clob has moved from Readonly InternalClob to a writable InternalClob. If the EmbedClob moves from readonly mode to writable mode it fetches the input stream again from the EmbedClob and skips to the current position.&lt;br/&gt;
Code to invalidate the internal Reader in case the underlying stream is modified was already part of this Reader.&lt;/p&gt;

&lt;p&gt;Updated files&lt;br/&gt;
java/engine/org/apache/derby/impl/jdbc/EmbedClob.java&lt;br/&gt;
Added two methods&lt;br/&gt;
	isWritable&lt;br/&gt;
		ClobUpdateableReader uses this methods to determine if the Clob has swtched from a readonly InternalClob to a writable InternalClob.&lt;br/&gt;
	getInternalStream&lt;br/&gt;
		ClobUpdateableReader uses this method if it detects Clob is modified since creating ClobUpdateableReader.&lt;/p&gt;

&lt;p&gt;Modified getCharacterStream() to return ClobUpdateableReader.&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/jdbc/ClobUpdateableReader.java&lt;/p&gt;

&lt;p&gt;added a new constructor. This constructor will be used by EmbedClob. It accepts Clob as a parameter Clob object is used to check if the InternalClob its using is writable or not. In case it was read only in the begning ClobUpdateableReader uses getInternalStream to refresh the stream after it switches to writable InternalClob.&lt;/p&gt;

&lt;p&gt;Added a new private method updateIfRequired which is called in every method to check if the underlying stream has changed.&lt;/p&gt;

&lt;p&gt;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobUpdateableReaderTest.java&lt;/p&gt;

&lt;p&gt;Added a new test for switching from StoreStream to ClobStreamControl.&lt;/p&gt;
</comment>
                            <comment id="12503441" author="kristwaa" created="Mon, 11 Jun 2007 16:33:17 +0100"  >&lt;p&gt;Hello Anurag,&lt;/p&gt;

&lt;p&gt;I reviewed your patch and have the following comments/questions:&lt;br/&gt;
 1) Since the method EmbedClob.getInternalStream() has been added, why not rewrite the new ClobUpdateableReader constructor to only take the EmbedClob-object and fetch the stream by calling getInternalStream()?&lt;/p&gt;

&lt;p&gt; 2)  The code below can loop infinitely.&lt;br/&gt;
+        while (remainToSkip &amp;gt; 0) {&lt;br/&gt;
+            long skipBy = streamReader.skip(remainToSkip);            &lt;br/&gt;
+            remainToSkip -= skipBy;&lt;br/&gt;
    A check to see if skipBy == 0 should be added, which if true means the EOF has been reached.&lt;br/&gt;
    One must consider under which scenarios this can happen (only programming error?). Would be better to fail &quot;gracefully&quot; instead of looping for ever.&lt;/p&gt;

&lt;p&gt; 3) The instance variable &apos;clob&apos; in ClobUpdateableReader should be final.&lt;/p&gt;

&lt;p&gt; 4) There are some typos in the JavaDoc. Might want to do another pass on it.&lt;/p&gt;

&lt;p&gt; 5) Quite a few occurrences of trailing spaces.&lt;/p&gt;

&lt;p&gt; 6) A bit unsure about this one in ClobUpdateableReader:&lt;br/&gt;
+            if (clob == null) &lt;/p&gt;
{
+                throw new IOException (&quot;Internal error while &quot; +
+                        &quot;updating stream&quot;);
+            }

&lt;p&gt;    This can only happen if there is a programming error. Is IOException the right mechanism to communicate this?&lt;br/&gt;
    What about replacing it with a SanityManager.DEBUG/ASSERT?&lt;/p&gt;

&lt;p&gt; 7) A somewhat different issue, but why does the UTF8Reader need the length of the stream?&lt;br/&gt;
    I see how it is used in UTF8Reader, but is it really necessary? (btw, this is not something to be handled under this Jira)&lt;/p&gt;

&lt;p&gt;I ran suites.All (1.5) with the patch without failures. I&apos;m running derbyall as we speak.&lt;/p&gt;</comment>
                            <comment id="12503442" author="kristwaa" created="Mon, 11 Jun 2007 16:34:48 +0100"  >&lt;p&gt;This fix will go into 10.3.&lt;/p&gt;</comment>
                            <comment id="12503836" author="anurag" created="Tue, 12 Jun 2007 12:40:17 +0100"  >&lt;p&gt;thanks Kristian for the review&lt;/p&gt;

&lt;p&gt;1) Since the method EmbedClob.getInternalStream() has been added, why not rewrite the new ClobUpdateableReader constructor to only take the EmbedClob-object and fetch the stream by calling getInternalStream()?&lt;/p&gt;

&lt;p&gt;I have modified the constroctor to take only clob.&lt;/p&gt;

&lt;p&gt; 2) The code below can loop infinitely.&lt;br/&gt;
+ while (remainToSkip &amp;gt; 0) {&lt;br/&gt;
+ long skipBy = streamReader.skip(remainToSkip);&lt;br/&gt;
+ remainToSkip -= skipBy;&lt;br/&gt;
    A check to see if skipBy == 0 should be added, which if true means the EOF has been reached.&lt;br/&gt;
    One must consider under which scenarios this can happen (only programming error?). Would be better to fail &quot;gracefully&quot; instead of looping for ever.&lt;/p&gt;

&lt;p&gt;Fixed this problem. Now I am calling read if skip returns zero. If it returns -1 it will throw EOF exception and its able to read a char it will add 1 to skipped and continue.&lt;/p&gt;

&lt;p&gt; 3) The instance variable &apos;clob&apos; in ClobUpdateableReader should be final.&lt;/p&gt;

&lt;p&gt;fixed&lt;/p&gt;

&lt;p&gt; 4) There are some typos in the JavaDoc. Might want to do another pass on it.&lt;br/&gt;
 5) Quite a few occurrences of trailing spaces.&lt;/p&gt;

&lt;p&gt;fixed trailing spaces and typos&lt;/p&gt;

&lt;p&gt; 6) A bit unsure about this one in ClobUpdateableReader:&lt;br/&gt;
+ if (clob == null) &lt;/p&gt;
{
+ throw new IOException (&quot;Internal error while &quot; +
+ &quot;updating stream&quot;);
+ }

&lt;p&gt;    This can only happen if there is a programming error. Is IOException the right mechanism to communicate this?&lt;br/&gt;
    What about replacing it with a SanityManager.DEBUG/ASSERT?&lt;/p&gt;

&lt;p&gt;added sanity manager.assert.&lt;/p&gt;


&lt;p&gt;For issue 7. It will be good to remove dependency on length but as you rightly said it should be handled in a new jira.&lt;/p&gt;</comment>
                            <comment id="12504193" author="anurag" created="Wed, 13 Jun 2007 11:54:37 +0100"  >&lt;p&gt;changes in this patch&lt;br/&gt;
1.Checking for SanityManager.DEBUG before calling SanityManager.assert&lt;br/&gt;
2.Moved InternalClob.getByteLength in separate call in ClobStreamControl.copyClobContent(InternalClob clob) to avoid 2806&lt;/p&gt;</comment>
                            <comment id="12504206" author="kristwaa" created="Wed, 13 Jun 2007 13:00:21 +0100"  >&lt;p&gt;Ran suites.All without failures.&lt;/p&gt;

&lt;p&gt;Committed &apos;derby-2712v3.diff&apos; to trunk with revision 546831.&lt;/p&gt;

&lt;p&gt;Thanks Anurag!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12370518">DERBY-2730</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12359407" name="derby-2712.diff" size="9658" author="anurag" created="Mon, 11 Jun 2007 10:13:30 +0100"/>
                            <attachment id="12359498" name="derby-2712v2.diff" size="10110" author="anurag" created="Tue, 12 Jun 2007 12:40:16 +0100"/>
                            <attachment id="12359586" name="derby-2712v3.diff" size="10926" author="anurag" created="Wed, 13 Jun 2007 11:54:37 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Jun 2007 11:44:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23196</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11t3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39943</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>