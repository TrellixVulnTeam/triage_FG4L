<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:51:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3184/DERBY-3184.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3184] Replication: Connection attempts to a database in slave mode must fail</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3184</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When a database &apos;X&apos; is booted in slave mode, the call to  Monitor.startPersistentService(&quot;X&quot;,...) will not complete because the call gets stuck in LogToFile#recover. This is intentional.&lt;/p&gt;

&lt;p&gt;For as long as startPersistentService is blocked, however, other threads that try to connect to &apos;X&apos; (effectively calling Monitor.findService(&quot;X&quot;, ...)) will also hang. This is unacceptable, and needs to raise an error.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12381988">DERBY-3184</key>
            <summary>Replication: Connection attempts to a database in slave mode must fail</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12374543">DERBY-2978</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jorgenlo">J&#248;rgen L&#248;land</assignee>
                                    <reporter username="jorgenlo">J&#248;rgen L&#248;land</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Nov 2007 09:38:12 +0000</created>
                <updated>Thu, 2 May 2013 03:29:12 +0100</updated>
                            <resolved>Wed, 30 Jan 2008 11:44:48 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12541242" author="jorgenlo" created="Fri, 9 Nov 2007 06:52:23 +0000"  >&lt;p&gt;The attached patch, v1, adds boolean inReplicationSlaveMode to TopService. When Module.findService is called, TopService.isInReplicationSlaveMode is called, and an exception is raised if the method returns true.&lt;/p&gt;

&lt;p&gt;Also modifies classes that call Monitor.findService to handle the new exception.&lt;/p&gt;

&lt;p&gt;The patch is ready for review and has passed all tests except triggerGeneral, which has already been reported in &lt;a href=&quot;http://article.gmane.org/gmane.comp.apache.db.derby.devel/50419&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://article.gmane.org/gmane.comp.apache.db.derby.devel/50419&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12549407" author="dyret" created="Fri, 7 Dec 2007 13:41:17 +0000"  >&lt;p&gt;The patch looks good, and all tests pass for me, +1. &lt;/p&gt;

&lt;p&gt;However, I&apos;m not very familiar with the code being modified (the Monitor/Service system), so I&apos;ll wait a little longer before I commit it, just to give others a chance to get their comments in.&lt;/p&gt;</comment>
                            <comment id="12549416" author="oysteing" created="Fri, 7 Dec 2007 14:23:31 +0000"  >&lt;p&gt;Thanks for the patch, J&#248;rgen.  &lt;/p&gt;

&lt;p&gt;I must admit I feel a bit uneasy introducing knowledge about&lt;br/&gt;
replication into the Monitor which currently does not seem to have any&lt;br/&gt;
knowledge about databases (except something called a persistent&lt;br/&gt;
service).  However, I see that the current design would need a rewrite&lt;br/&gt;
to in order to be able to avoid this, since there is currently no way&lt;br/&gt;
of getting hold of a service where the booting has not completed.&lt;br/&gt;
Currently, if you try to find a service during booting, you will hang&lt;br/&gt;
waiting for the boot to complete.&lt;/p&gt;

&lt;p&gt;I have not looked into the details, but it seems that it should be&lt;br/&gt;
possible to get a handle to a Database that is booting, through&lt;br/&gt;
BaseMonitor.findModule with some extra wiring in a static method in&lt;br/&gt;
Monitor.  A Database object is definitely a better fit for replication&lt;br/&gt;
logic.  However, I have not thought about the consequences of&lt;br/&gt;
providing such an access point.  It would be useful if someone with&lt;br/&gt;
more experience with the Monitor framework, could provide a&lt;br/&gt;
recommendation here.&lt;/p&gt;

&lt;p&gt;Given the approach of the current patch, I wonder whether it would be&lt;br/&gt;
better to isolate the &quot;pollution&quot; of replication logic that is&lt;br/&gt;
currently spread across the BaseMonitor and TopService classes, to&lt;br/&gt;
just the TopService class.  It seems like all the necessary&lt;br/&gt;
information should be available there.&lt;/p&gt;

&lt;p&gt;Some minor nits:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Why are the added methods in TopService protected and not just&lt;br/&gt;
     package private?&lt;/li&gt;
	&lt;li&gt;Indentation in Monitor.findService looks a bit awkward due to&lt;br/&gt;
     the line break before &apos;throws&apos;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12549456" author="djd" created="Fri, 7 Dec 2007 16:05:53 +0000"  >&lt;p&gt;&amp;gt; I must admit I feel a bit uneasy introducing knowledge about&lt;br/&gt;
&amp;gt; replication into the Monitor which currently does not seem to have any&lt;br/&gt;
&amp;gt; knowledge about databases (except something called a persistent&lt;br/&gt;
&amp;gt; service).&lt;/p&gt;

&lt;p&gt;+1 to the uneasiness about adding replication knowledge to the monitor. I think Derby (&amp;amp;Cloudscape) has benefited over the years from isolating components from each other. Some future direction might to replace Derby&apos;s monitor with some other existing open-source IoC system that has a cleaner design and by definition will be separated from knowledge of Derby&apos;s code.&lt;/p&gt;</comment>
                            <comment id="12550071" author="jorgenlo" created="Mon, 10 Dec 2007 13:48:11 +0000"  >&lt;p&gt;&#216;ystein and Dan. &lt;/p&gt;

&lt;p&gt;In light of your comments, I agree that this is not the right&lt;br/&gt;
solution to the problem. I have a new suggestion for how to solve&lt;br/&gt;
this without touching the monitor.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Add a new implementation of Database, called something like&lt;br/&gt;
  SlaveDatabase&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Modify canSupport of all instances of Database so that&lt;br/&gt;
  SlaveDatabase is booted if slave replication is specified&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When booted, SlaveDatabase will spawn a new tread that calls&lt;br/&gt;
  BasicDatabase#boot(). This thread will be blocked in&lt;br/&gt;
  LogToFile#recover(). After spawning the thread,&lt;br/&gt;
  SlaveDatabase#boot finishes. Calls to Monitor#findService will&lt;br/&gt;
  return the SlaveDatabase object, but all method calls will&lt;br/&gt;
  result in an SQL Exception with state&lt;br/&gt;
  CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  public LanguageConnectionContext setupConnection(..) {&lt;br/&gt;
      if (inSlaveMode) &lt;/p&gt;
{
          throw StandardException (SQLState.CANNOT_CONNECT...)
      }
&lt;p&gt;      return basicDatabase.setupConnection(...);&lt;br/&gt;
  }&lt;/p&gt;
</comment>
                            <comment id="12553931" author="jorgenlo" created="Fri, 21 Dec 2007 11:46:13 +0000"  >&lt;p&gt;I encountered a few bugs while working on a new implementation of the Database interface. The attached patch fixes these bugs, which are all part of the replication functionality and is not in use in non-replicated databases.&lt;/p&gt;

&lt;p&gt;Bugfix patch v1a passes all tests and is ready for review.&lt;/p&gt;</comment>
                            <comment id="12555527" author="oysteing" created="Thu, 3 Jan 2008 10:35:21 +0000"  >&lt;p&gt;Patch, derby-3184-bugfix-1a.diff, looks good.  I took the liberty of correcting the message text a bit before  committing the patch  as revision 608419.&lt;/p&gt;</comment>
                            <comment id="12555531" author="jorgenlo" created="Thu, 3 Jan 2008 10:49:39 +0000"  >&lt;p&gt;No problem. Thanks for reviewing and committing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12556834" author="jorgenlo" created="Tue, 8 Jan 2008 07:55:26 +0000"  >&lt;p&gt;The attached patch, v2a, adds a new implementation of Database to Derby. The new implementation is called SlaveDatabase and is booted if startSlave=true is specified in the connection url. The following files are modified:&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/db/SlaveDatabase.java&lt;br/&gt;
M      java/engine/org/apache/derby/modules.properties&lt;/p&gt;

&lt;p&gt;The new Database implementation &quot;SlaveDatabase&quot; to Derby. &lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/db/BasicDatabase.java&lt;/p&gt;

&lt;p&gt;Removed the old &quot;if (inReplicationSlaveMode) throw exception&quot; code. This is now handled in SlaveDatabase. &lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java&lt;/p&gt;

&lt;p&gt;Adds slave replication pre mode&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/services/replication/slave/SlaveFactory.java&lt;/p&gt;

&lt;p&gt;Minor changes&lt;/p&gt;

&lt;p&gt;Testing:&lt;br/&gt;
--------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;all tests passed&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I have also run all the junit tests on a setup where SlaveDatabase was hardcoded to be used instead of BasicDatabase. This works &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, indicating that the new implementation works &lt;b&gt;after&lt;/b&gt; the database has left slave mode (i.e., after the failover command has been run)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; Some encryption tests fail because they expect an exception to be thrown (from the rawstore module). Since the store modules of SlaveDatabase are booted in a separate thread, these exceptions are only reported in derby.log, not reported to the caller of connect &apos;...&apos;. However, when SlaveDatabase in not hardcoded to be used, this can only happen when dataEncryption=true and startSlave=true are specified at the same time. This combination will not be allowed.&lt;/p&gt;</comment>
                            <comment id="12557221" author="oysteing" created="Wed, 9 Jan 2008 10:39:41 +0000"  >&lt;p&gt;I have looked at derby-3184-2a.diff and the patch looks good.  I do&lt;br/&gt;
not have any major issues.  However, I am not able understand the&lt;br/&gt;
intention behind slavepremode, and this does not seem to be explained&lt;br/&gt;
anywhere either.  Some documentation would be nice.&lt;/p&gt;

&lt;p&gt;Some minor comments that you may consider for a follow-up patch:&lt;/p&gt;

&lt;p&gt;SlaveDatabase:&lt;/p&gt;

&lt;p&gt;   1. The &apos;be&apos; in item 4 of class javadoc should probably be removed.&lt;/p&gt;

&lt;p&gt;   2. Why not use javadoc style for comment for inReplicationSlaveMode? &lt;/p&gt;

&lt;p&gt;   3. I think it is a bit confusing that inReplicationSlaveMode is&lt;br/&gt;
      initialized both in declaration and in boot.&lt;/p&gt;

&lt;p&gt;   4. canSupport() lacks javadoc for parameter&lt;/p&gt;

&lt;p&gt;   5. Instead of making create and startParams volatile members,&lt;br/&gt;
      why not pass it to a SlaveDatabaseThread constructor?&lt;/p&gt;

&lt;p&gt;   6. Did you consider making SlaveDatabaseBootThread a Runnable&lt;br/&gt;
      instead of a Thread?  It does not seem like your run method depend&lt;br/&gt;
      on inheriting any behavior from the Thread class.&lt;/p&gt;

&lt;p&gt;   7. The call to currentThread() is not necessary since sleep is a&lt;br/&gt;
      static member of Thread.&lt;/p&gt;

&lt;p&gt;SlaveFactory:&lt;/p&gt;

&lt;p&gt;   8. The import of Property is no longer necessary&lt;/p&gt;

&lt;p&gt;   9. Some explanation of SLAVE_PRE_MODE would be good.&lt;/p&gt;

&lt;p&gt;LogToFile:&lt;/p&gt;

&lt;p&gt;  10. (Not introduced by this patch) initializeReplicationSlaveRole()&lt;br/&gt;
      javadoc violate the rule that the first sentence of a javadoc&lt;br/&gt;
      should summarize the purpose of the method.&lt;/p&gt;</comment>
                            <comment id="12557239" author="oysteing" created="Wed, 9 Jan 2008 11:26:54 +0000"  >&lt;p&gt;Thinking a bit more about this patch, I have a few more&lt;br/&gt;
questions/comments:&lt;/p&gt;

&lt;p&gt;11. Have you verified that there is either no way that the different&lt;br/&gt;
    BasicDataBase methods can be called on a SlaveDataBase while in&lt;br/&gt;
    slave mode, or that for those methods that may be called, no harm&lt;br/&gt;
    may happen?&lt;/p&gt;

&lt;p&gt;12. The more I think about it, the less sure I am about what you are&lt;br/&gt;
    trying to achieve by making local_startParams volatile.  I do not&lt;br/&gt;
    think a volatile reference will synchronize access to the referred&lt;br/&gt;
    instance.  I see there might be issues with concurrent access to&lt;br/&gt;
    UpdateServiceProperties.storageFactory, but I think that needs to&lt;br/&gt;
    be solved in that class.&lt;/p&gt;

&lt;p&gt;13. A sleep a two seconds in the boot method between checking for&lt;br/&gt;
    StorageFactory is unnecessary long I think.  I think a good rule&lt;br/&gt;
    of thumb is to make it as short as possible without significantly&lt;br/&gt;
    affecting the performance, and I think you can check a reference&lt;br/&gt;
    for null more often than every other second without affecting&lt;br/&gt;
    performance.  (While a two-second delay of a boot, is probably not&lt;br/&gt;
    an issue in production settings, there might be testing scenarios&lt;br/&gt;
    with repeated booting of database where the total duration of the&lt;br/&gt;
    test may be an issue.)&lt;/p&gt;</comment>
                            <comment id="12557922" author="jorgenlo" created="Fri, 11 Jan 2008 07:24:07 +0000"  >&lt;p&gt;&#216;ystein,&lt;/p&gt;

&lt;p&gt;Thanks for reviewing the patch. I have addressed all your comments. Notes on the revised patch:&lt;/p&gt;


&lt;p&gt;5:&lt;br/&gt;
AFAIK, inner classes don&apos;t have constructors, but I added a setParams method that does the same. Hence, removed local_*&lt;/p&gt;

&lt;p&gt;11:&lt;br/&gt;
The methods of the Database interface are used in two scenarios:&lt;br/&gt;
1) After getting a connection to the database. This is taken care of by throwing an exception from setupConnection, and thereby never returning a connection.&lt;br/&gt;
2) When the connection is established, i.e. in the constructor of EmbedConnection. The only Database method used from EmbedConnection is getAuthenticationService, which is handled in SlaveDatabase by throwing an exception.&lt;/p&gt;

&lt;p&gt;I think this should suffice.&lt;/p&gt;

&lt;p&gt;12:&lt;br/&gt;
I made the storage factory of UpdateServiceProperties volatile. UpdateServiceProperties is only used during boot of a database, so this should not result in a noticeable performance degradation.&lt;/p&gt;

&lt;p&gt;13:&lt;br/&gt;
I changed the sleep time to 500 millis. The previous setting was used for testing and I forgot to change it back. &lt;/p&gt;

&lt;p&gt;Patch 2b is ready for review&lt;/p&gt;</comment>
                            <comment id="12557948" author="oysteing" created="Fri, 11 Jan 2008 09:37:29 +0000"  >&lt;p&gt;I discovered the func. spec. needs to be updated to reflect this patch.  Currently, the func spec says:&lt;br/&gt;
&quot;A valid connection to the database is returned to the caller of the startSlave command.&quot;&lt;br/&gt;
I guess this is no longer true with the latest patch.&lt;/p&gt;</comment>
                            <comment id="12558004" author="oysteing" created="Fri, 11 Jan 2008 15:07:52 +0000"  >&lt;p&gt;J&#248;rgen L&#248;land (JIRA) wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; 5:&lt;br/&gt;
&amp;gt; AFAIK, inner classes don&apos;t have constructors, but I added a&lt;br/&gt;
&amp;gt; setParams method that does the same. Hence, removed local_*&lt;/p&gt;

&lt;p&gt;I do not think this is true.  The introductory example on inner classes &lt;br/&gt;
in Gosling et.al. &apos;Java Programming Language&apos; (3rd edition) , shows &lt;br/&gt;
a non-static member class with constructor.&lt;/p&gt;

</comment>
                            <comment id="12558531" author="jorgenlo" created="Mon, 14 Jan 2008 07:59:16 +0000"  >&lt;p&gt;You are right - I have no idea why I had that impression. The attached patch sets the parameters in the constructor to the inner class.&lt;/p&gt;</comment>
                            <comment id="12558564" author="oysteing" created="Mon, 14 Jan 2008 10:59:31 +0000"  >&lt;p&gt;Committed patch, derby-3184-2c.diff, as revision 611759.  Took the liberty of removing an unused import from SlaveDatabase.java.&lt;/p&gt;</comment>
                            <comment id="12558616" author="jorgenlo" created="Mon, 14 Jan 2008 14:28:42 +0000"  >&lt;p&gt;The attached patch, v3, adds error handling to SlaveDatabase. All tests passed - the patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12561329" author="oysteing" created="Tue, 22 Jan 2008 12:47:14 +0000"  >&lt;p&gt;Error handling in SlaveDatabase looks good, but since ReplicationLogger does not contain any state, I think it would be better to make logError static.  Then you would not have to instantiate in every class where you need error handling.&lt;/p&gt;

&lt;p&gt;It also worries me a bit that you had to import StandardException in DRDAConnThread, but that is probably not your fault.  It seems to me that validateSecMecUSRSSBPWD() does things that maybe should have been handled inside the database.  Anyway, we should make sure to test this case.  That is, try to connect to a slave database using SecMecUSRSSBPWD.&lt;/p&gt;

&lt;p&gt;A minor issue:  In EmbedConnection: No need to cast se, it is already a StandardException.&lt;/p&gt;



</comment>
                            <comment id="12561662" author="jorgenlo" created="Wed, 23 Jan 2008 13:09:17 +0000"  >&lt;p&gt;Hi &#216;ystein,&lt;/p&gt;

&lt;p&gt;Thanks for reviewing the patch. v3b addresses your comments. All tests pass - the patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12561692" author="oysteing" created="Wed, 23 Jan 2008 14:39:49 +0000"  >&lt;p&gt;Patch 3b committed as revision 614549.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12382570">DERBY-3205</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12369213" name="derby-3184-1.diff" size="16567" author="jorgenlo" created="Fri, 9 Nov 2007 06:52:23 +0000"/>
                            <attachment id="12369214" name="derby-3184-1.stat" size="1236" author="jorgenlo" created="Fri, 9 Nov 2007 06:52:23 +0000"/>
                            <attachment id="12372693" name="derby-3184-2a.diff" size="14999" author="jorgenlo" created="Tue, 8 Jan 2008 07:55:26 +0000"/>
                            <attachment id="12372692" name="derby-3184-2a.stat" size="337" author="jorgenlo" created="Tue, 8 Jan 2008 07:55:26 +0000"/>
                            <attachment id="12372960" name="derby-3184-2b.diff" size="18045" author="jorgenlo" created="Fri, 11 Jan 2008 07:24:07 +0000"/>
                            <attachment id="12372961" name="derby-3184-2b.stat" size="424" author="jorgenlo" created="Fri, 11 Jan 2008 07:24:07 +0000"/>
                            <attachment id="12373080" name="derby-3184-2c.diff" size="18072" author="jorgenlo" created="Mon, 14 Jan 2008 07:59:16 +0000"/>
                            <attachment id="12373093" name="derby-3184-3a.diff" size="13339" author="jorgenlo" created="Mon, 14 Jan 2008 14:28:18 +0000"/>
                            <attachment id="12373094" name="derby-3184-3a.stat" size="633" author="jorgenlo" created="Mon, 14 Jan 2008 14:28:35 +0000"/>
                            <attachment id="12373822" name="derby-3184-3b.diff" size="12180" author="jorgenlo" created="Wed, 23 Jan 2008 13:09:16 +0000"/>
                            <attachment id="12372077" name="derby-3184-bugfix-1a.diff" size="9537" author="jorgenlo" created="Fri, 21 Dec 2007 11:46:13 +0000"/>
                            <attachment id="12372076" name="derby-3184-bugfix-1a.stat" size="534" author="jorgenlo" created="Fri, 21 Dec 2007 11:46:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Dec 2007 13:41:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30755</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zjj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39576</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>