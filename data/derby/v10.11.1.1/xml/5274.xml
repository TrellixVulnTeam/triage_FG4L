<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5274/DERBY-5274.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5274] getColumns() doesn&apos;t work with auto generated identity columns that start with large numbers</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5274</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;CREATE TABLE kb.constant_term&lt;br/&gt;
(&lt;br/&gt;
        term_id                 BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 648518346341351400, INCREMENT BY 1),&lt;br/&gt;
        constant_name      VARCHAR(1024) NOT NULL&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;The above SQL causes the table to be created but no columns to be defined (no error message is reported). If I change  648518346341351400 to a 0, then the table is created normally with all the columns defined correctly.&lt;/p&gt;</description>
                <environment>Linux 10.3.</environment>
        <key id="12510137">DERBY-5274</key>
            <summary>getColumns() doesn&apos;t work with auto generated identity columns that start with large numbers</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="apb">Tony Brusseau</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Jun 2011 21:38:21 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:09 +0100</updated>
                            <resolved>Wed, 22 Jun 2011 13:02:20 +0100</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.8.2.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13048790" author="apb" created="Mon, 13 Jun 2011 22:22:27 +0100"  >&lt;p&gt;This works:&lt;/p&gt;

&lt;p&gt;CREATE TABLE kb.term (&lt;br/&gt;
   term_id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 999999999999)&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;This fails (silently):&lt;/p&gt;

&lt;p&gt;CREATE TABLE kb.term (&lt;br/&gt;
   term_id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1000000000000)&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;Looks like 1 trillion is the magic cutoff where it stops working.&lt;/p&gt;

&lt;p&gt;**********************************************************************&lt;/p&gt;

&lt;p&gt;In the Squirrel SQL Client I get the following error message when trying to browse the columns for the table:&lt;/p&gt;

&lt;p&gt;Unable to get list of columns java.sql.SQLException: The exception &apos;java.sql.SQLException: A truncation error was encountered trying to shrink CHAR &apos;648518346341351400&apos; to length 12.&apos; was thrown while evaluating an expression.&lt;/p&gt;

&lt;p&gt;I&apos;m also unable to see the columns in the Netbeans integration with Derby so I&apos;m guessing this is coming from the Derby side. It&apos;s possible that the table is created correctly, but I just can&apos;t tell that because of an issue with transferring column meta data to the tools that I&apos;m using to browse the DB schema.&lt;/p&gt;


&lt;p&gt;**********************************************************************&lt;br/&gt;
Here is the message from ij:&lt;/p&gt;

&lt;p&gt;describe kb.term;&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: A truncation error was encountered trying to shrink CHAR &apos;1000000000000&apos; to length 12.&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR 22001: A truncation error was encountered trying to shrink CHAR &apos;1000000000000&apos; to length 12.&lt;/p&gt;




</comment>
                            <comment id="13049093" author="knutanders" created="Tue, 14 Jun 2011 11:04:05 +0100"  >&lt;p&gt;I tried the following with Derby 10.7.1.1, and the table seems to have been created with all the expected columns and the correct start value:&lt;/p&gt;

&lt;p&gt;ij version 10.7&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; CREATE TABLE kb.constant_term&lt;br/&gt;
(&lt;br/&gt;
        term_id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 648518346341351400, INCREMENT BY 1),&lt;br/&gt;
        constant_name VARCHAR(1024) NOT NULL&lt;br/&gt;
);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into kb.constant_term values (default, &apos;abc&apos;), (default, &apos;def&apos;);&lt;br/&gt;
2 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from kb.constant_term;&lt;br/&gt;
TERM_ID             |CONSTANT_NAME                                                                                                                   &lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
648518346341351400  |abc                                                                                                                             &lt;br/&gt;
648518346341351401  |def                                                                                                                             &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;/p&gt;

&lt;p&gt;Are you doing something different when you see the problem?&lt;/p&gt;

&lt;p&gt;I do see the bug in DESCRIBE:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; describe kb.constant_term;&lt;br/&gt;
ERROR 22001: A truncation error was encountered trying to shrink CHAR &apos;648518346341351400&apos; to length 12.&lt;/p&gt;</comment>
                            <comment id="13049133" author="knutanders" created="Tue, 14 Jun 2011 12:39:36 +0100"  >&lt;p&gt;The bug in DESCRIBE is actually a bug in DatabaseMetaData.getColumns(). The SQL that generates the meta-data ResultSet attempts to cast the start value for the identity column to CHAR(12), which fails for these large values. A BIGINT can be up to 20 characters long.&lt;/p&gt;

&lt;p&gt;Attached is a patch which fixes the bug by using the CHAR function instead of the CAST operator when building the meta-data. The CHAR function doesn&apos;t require a length argument, so we avoid hitting this limit.&lt;/p&gt;</comment>
                            <comment id="13049248" author="apb" created="Tue, 14 Jun 2011 17:06:53 +0100"  >&lt;p&gt;Thanks for looking into that Knut and for the quick turn-around. After further testing, the only bug I&apos;m experiencing is with describe and it looks like your patch will fix that.&lt;/p&gt;</comment>
                            <comment id="13049682" author="knutanders" created="Wed, 15 Jun 2011 09:56:10 +0100"  >&lt;p&gt;Thanks, Tony. I&apos;m changing the issue summary to reflect that the problem is that the meta-data cannot be retrieved.&lt;/p&gt;</comment>
                            <comment id="13049699" author="knutanders" created="Wed, 15 Jun 2011 11:03:47 +0100"  >&lt;p&gt;The upgrade tests didn&apos;t pass with the proposed fix. The problem seems to be &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1745&quot; title=&quot;System catalog columns of type BIGINT and INT created with incorrect precision of zero.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1745&quot;&gt;DERBY-1745&lt;/a&gt; (System catalog columns of type BIGINT and INT created with incorrect precision of zero). Since the CHAR function uses the column meta-data to determine the length of the return value, it gets confused by the reported zero precision of the BIGINT columns in system tables created in old versions of Derby (10.3.1.4 and earlier).&lt;/p&gt;

&lt;p&gt;In the upgrade tests, getColumns() would fail with errors like &quot;A truncation error was encountered trying to shrink CHAR &apos;648518346341351400&apos; to length 1.&quot; when run in a database soft or hard upgraded from 10.3.1.4 or earlier.&lt;/p&gt;

&lt;p&gt;I think we can work around &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1745&quot; title=&quot;System catalog columns of type BIGINT and INT created with incorrect precision of zero.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1745&quot;&gt;DERBY-1745&lt;/a&gt; by going back to the old approach of using a CAST operator and just change the target type from CHAR(12) to CHAR(20). Even if &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1745&quot; title=&quot;System catalog columns of type BIGINT and INT created with incorrect precision of zero.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1745&quot;&gt;DERBY-1745&lt;/a&gt; is fixed, we probably still need the workaround for soft upgraded databases, since fixing the meta-data for system tables would most likely require a full upgrade. &lt;/p&gt;</comment>
                            <comment id="13050299" author="knutanders" created="Thu, 16 Jun 2011 09:52:44 +0100"  >&lt;p&gt;Attaching patch 1b that works around &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1745&quot; title=&quot;System catalog columns of type BIGINT and INT created with incorrect precision of zero.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1745&quot;&gt;DERBY-1745&lt;/a&gt; and makes getColumns() work also in databases upgraded from old Derby versions.&lt;/p&gt;

&lt;p&gt;I used a slightly different workaround than what I suggested above. Instead of converting the value to a CHAR(20) explicitly, I converted it first to a BIGINT and then using the CHAR function to a CHAR value with the size derived implicitly. By first converting it to a BIGINT (which should be unnecessary, since it already is a BIGINT), the meta-data was fixed so that the CHAR function was able to do the conversion. I preferred this solution since it let us avoid the magic number 20, and it was another magic number (12) that caused the bug in the first place.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13050324" author="kristwaa" created="Thu, 16 Jun 2011 11:03:16 +0100"  >&lt;p&gt;The patch looks good, Knut.&lt;br/&gt;
+1 to commit&lt;/p&gt;

&lt;p&gt;If anything, would it make sense to comment on why you are converting a BIGINT to BIGINT?&lt;/p&gt;</comment>
                            <comment id="13050345" author="knutanders" created="Thu, 16 Jun 2011 11:56:06 +0100"  >&lt;p&gt;Thanks, Kristian. I&apos;ve added an inlined comment about the BIGINT to BIGINT conversion in the meta-data query.&lt;/p&gt;

&lt;p&gt;Committed revision 1136371.&lt;/p&gt;</comment>
                            <comment id="13050351" author="knutanders" created="Thu, 16 Jun 2011 12:13:42 +0100"  >&lt;p&gt;I plan to back-port the fix to the 10.8 branch. Then we&apos;ll need to bump the version number on the branch so that the upgrade code is triggered and invalidates the old, incorrect meta-data query in applications that already use head of the 10.8 branch.&lt;/p&gt;</comment>
                            <comment id="13053199" author="knutanders" created="Wed, 22 Jun 2011 13:02:20 +0100"  >&lt;p&gt;Merged to 10.8 and bumped the last digit in the version number on the branch.&lt;br/&gt;
Committed revision 1138416.&lt;/p&gt;</comment>
                            <comment id="13685143" author="knutanders" created="Mon, 17 Jun 2013 10:19:09 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12482545" name="derby-5274-1a-getColumns.diff" size="3286" author="knutanders" created="Tue, 14 Jun 2011 12:39:36 +0100"/>
                            <attachment id="12482763" name="derby-5274-1b-getColumns.diff" size="3435" author="knutanders" created="Thu, 16 Jun 2011 09:52:44 +0100"/>
                            <attachment id="12482775" name="derby-5274-1c-getColumns.diff" size="3916" author="knutanders" created="Thu, 16 Jun 2011 11:56:06 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Jun 2011 10:04:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24750</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ev3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36226</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>