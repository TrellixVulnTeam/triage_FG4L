<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2419/DERBY-2419.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2419] Tighten encapsulation of state in TestConfiguration</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2419</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Parts of the state of TestConfiguration has been made public, which they should not be; DEFAULT_PORT and DEFAULT_HOSTNAME.&lt;br/&gt;
Using these directly from the outside can cause settings overridden by the user to be ignored by tests. Further, a test should not care if the host/port it uses is the Derby default or the values set by the user running the test.&lt;/p&gt;

&lt;p&gt;To obtain a hostname and  a port number, use the methods getPort and getHostName in TestConfiguration.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12364436">DERBY-2419</key>
            <summary>Tighten encapsulation of state in TestConfiguration</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Mar 2007 10:09:45 +0000</created>
                <updated>Mon, 29 Nov 2010 14:21:22 +0000</updated>
                            <resolved>Thu, 17 Jun 2010 11:25:06 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12479415" author="kristwaa" created="Thu, 8 Mar 2007 19:30:16 +0000"  >&lt;p&gt;I think I understand why the default hostname and port number were made public now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The problem is that when you change to a client setup from an embedded setup, you basically have no values to supply to the TestConfiguration constructor. You can&apos;t use the values from the embedded setup, because they are &apos;null&apos; and -1. You definitely don&apos;t want to supply your own custom values, as this will (possibly) mess up concurrent runs (for instance two suites.All on the same machine).&lt;/p&gt;

&lt;p&gt;I had a brief discussion offline with Dag, and we identified the following scenarios wrt port numbers:&lt;br/&gt;
 1) The default Derby port number (1527)&lt;br/&gt;
 2) The default port number for the test run/configuration (as 1, or as specified by user by a property)&lt;br/&gt;
 3) A different port for running multiple servers in the same test (typically as 2 with an offset)&lt;/p&gt;

&lt;p&gt;Making the default Derby hostname and port public is not the right solution, as this will make independent runs always use the same hostname/port and could cause collision. Thus supporting only 1 is not a good solution.&lt;/p&gt;

&lt;p&gt;By supporting option 2, and giving the user the possibility to override the port number used by the tests, we allow independent test runs to execute in parallel on a single machine. There are various implementation details here as well, such as if the property should only be read when the TestConfiguration class is loaded (static initializer block) or on instantiation. I prefer the first, as the second can lead to strange failures if the port number is changed &quot;on-the-fly&quot;.&lt;/p&gt;

&lt;p&gt;Option 3 is just a little extra, but as I don&apos;t think there is any use for it yet (??), it can be left for later. It certainly require more thought to avoid port usage to get out of control...&lt;/p&gt;

&lt;p&gt;I have a few ideas for fixing this, but I need some more time with the initial patch.&lt;br/&gt;
If people have comments on this issue, please put them forth so they can be discussed and/or incorporated in the patch.&lt;/p&gt;


&lt;p&gt;Note that there is a big difference between concurrent independent runs and parallelizing the execution of the tests. In the latter you run tests in parallel by invoking a single command and let the &quot;harness&quot; manage parallel execution. This demands more elaborate port handling, and I have not registered any community initiatives to implement parallel test execution.&lt;/p&gt;</comment>
                            <comment id="12481680" author="kristwaa" created="Fri, 16 Mar 2007 16:39:04 +0000"  >&lt;p&gt;I have attached two draft alternatives for this issue. A brief description of them both:&lt;br/&gt;
 (1) Make non-network configurations (embedded) return valid values for host and port.&lt;br/&gt;
 (2) Create client/server configurations through a static methods, which has some logic to check the host name and the port of the current configuration. If they are not valid (hostname null or &quot;&quot;, port &amp;lt; 1), which will be the case if the current configuration is embedded, use defaults.&lt;/p&gt;

&lt;p&gt;I have also thought a bit about limiting the possibility for test writers to choose which host/port they can use, i.e. in (2) you don&apos;t ever specify host/port though a public API.&lt;br/&gt;
My intention was that either the default Derby port (1527) and &apos;localhost&apos; are used, or the user specify values somehow when she starts the test runner. Is this too little flexibility?&lt;/p&gt;

&lt;p&gt;I have not addressed the functionality for running multiple servers in a single test (different ports).&lt;/p&gt;

&lt;p&gt;Feedback is appreciated, as this issue kind of blocks a few other issues.&lt;/p&gt;

&lt;p&gt;I ran suites.All without failures for patch 2a, but did not run derbyall.&lt;br/&gt;
These patches are not ready for commit.&lt;/p&gt;</comment>
                            <comment id="12481750" author="rhillegas" created="Fri, 16 Mar 2007 20:20:19 +0000"  >&lt;p&gt;Attaching derby-2419-refactor-01.diff (I am running regression tests now). This patch removes the need for SecureServerTest to mention the default hostname and port number constants. It does this by refactoring TestConfiguration.clientServerDecorator(). The guts of that routine now live in a new method TestConfiguration.defaultServerDecorator(), which SecureServerTest calls.&lt;/p&gt;

&lt;p&gt;The new method preserves something fishy from the previous code: TestConfiguration exposes a public static method which allows callers to use the hardcoded hostname and port number constants regardless of whether they are declared public or private. This fishy code appears to be invoked in a lot of places already.(I counted 44 references to it).&lt;/p&gt;

&lt;p&gt;Along the way, I tried another solution to my problem. That solution was to create a ServerSetup using the hostname and port gleaned from TestConfiguration.getCurrent(). That gave me a port number of -1, which wasn&apos;t very helpful. So I abandoned that approach.&lt;/p&gt;

&lt;p&gt;This patch cleans up SecureServerTest and creates one more invocation of the fishy code. Someone who understands the secret machinations of TestConfiguration will probably want to fix the fishy code itself. This patch touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/junit/TestConfiguration.java&lt;/p&gt;</comment>
                            <comment id="12482084" author="rhillegas" created="Mon, 19 Mar 2007 13:51:13 +0000"  >&lt;p&gt;Committed derby-2419-refactor-01.diff at subversion revision 519945.&lt;/p&gt;</comment>
                            <comment id="12878564" author="kristwaa" created="Mon, 14 Jun 2010 14:04:41 +0100"  >&lt;p&gt;Attaching patch &apos;derby-2419-3a-further_encapsulation.diff&apos;, which makes further changes to TestConfiguration and the affected tests.&lt;br/&gt;
I introduced the interface DerbyConstants to hold some constants used by the JUnit test framework and the  tests themselves.&lt;br/&gt;
Changes: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made port and hostname private&lt;/li&gt;
	&lt;li&gt;removed unused constant DEFAULT_SSL&lt;/li&gt;
	&lt;li&gt;moved TEST_DBO from TestConfiguration to DerbyConstants&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Regression tests running.&lt;br/&gt;
Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12878864" author="kristwaa" created="Tue, 15 Jun 2010 07:21:36 +0100"  >&lt;p&gt;Tests passed (12715), got one failure which is network related:&lt;/p&gt;

&lt;p&gt;testPing(org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest) FAILURE:&lt;br/&gt;
junit.framework.AssertionFailedError&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:47)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:20)&lt;br/&gt;
	at junit.framework.Assert.assertFalse(Assert.java:34)&lt;br/&gt;
	at junit.framework.Assert.assertFalse(Assert.java:41)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpected(BaseTestCase.java:484)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.assertFailedPing(NetworkServerControlClientCommandTest.java:115)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.testPing(NetworkServerControlClientCommandTest.java:80)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:164)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:130)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:120)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at kah.TestRunner.main(TestRunner.java:77)&lt;/p&gt;

&lt;p&gt;I have seen this earlier when running tests in parallel, so I don&apos;t think it is caused by the patch. It&apos;s a mystery to me what is started on the port in question that makes the ping succeed.&lt;br/&gt;
In any case, I do plan to post a follow-up patch with a method to obtain a &quot;bogus port&quot;.&lt;/p&gt;</comment>
                            <comment id="12879728" author="kristwaa" created="Thu, 17 Jun 2010 10:58:52 +0100"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4700&quot; title=&quot;Add method to obtain a bogus port in TestConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4700&quot;&gt;&lt;del&gt;DERBY-4700&lt;/del&gt;&lt;/a&gt; for the bogus port issue.&lt;/p&gt;

&lt;p&gt;Committed patch 3a to trunk with revision 955529.&lt;/p&gt;</comment>
                            <comment id="12879736" author="kristwaa" created="Thu, 17 Jun 2010 11:25:06 +0100"  >&lt;p&gt;I&apos;m marking this as fixed.&lt;br/&gt;
The issue has been hanging around for a long time. Tiago improved the situation a lot with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;, and Rick&apos;s concern about the use of the default port has been addressed (maybe by the same Jira?).&lt;br/&gt;
The issue Rick pointed out is still valid for DEFAULT_HOSTNAME, but that is less critical than using DEFAULT_PORT. It can be dealt with under a separate Jira issue.&lt;/p&gt;

&lt;p&gt;Feel free to reopen if you think marking this issue as fixed is wrong.&lt;/p&gt;</comment>
                            <comment id="12888718" author="kristwaa" created="Thu, 15 Jul 2010 07:37:28 +0100"  >&lt;p&gt;Closing issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12416700">DERBY-4090</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12424765">DERBY-4217</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12353522" name="derby-2419-1a-alternative1.diff" size="762" author="kristwaa" created="Fri, 16 Mar 2007 16:39:04 +0000"/>
                            <attachment id="12353523" name="derby-2419-2a-alternative2.diff" size="4453" author="kristwaa" created="Fri, 16 Mar 2007 16:39:04 +0000"/>
                            <attachment id="12353524" name="derby-2419-2a-alternative2.stat" size="372" author="kristwaa" created="Fri, 16 Mar 2007 16:39:04 +0000"/>
                            <attachment id="12447019" name="derby-2419-3a-further_encapsulation.diff" size="16492" author="kristwaa" created="Mon, 14 Jun 2010 14:04:41 +0100"/>
                            <attachment id="12353540" name="derby-2419-refactor-01.diff" size="2420" author="rhillegas" created="Fri, 16 Mar 2007 20:20:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Mar 2007 20:20:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30434</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0oun:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37844</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>