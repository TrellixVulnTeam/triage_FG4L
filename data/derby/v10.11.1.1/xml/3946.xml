<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3946/DERBY-3946.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3946] Provide support for using the Derby parser to generate Abstract Syntax Trees</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3946</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Users would like to be able to use the Derby parser to produce query trees without actually running the queries on Derby.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12408365">DERBY-3946</key>
            <summary>Provide support for using the Derby parser to generate Abstract Syntax Trees</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                            <label>derby_triage10_10</label>
                    </labels>
                <created>Wed, 12 Nov 2008 19:26:38 +0000</created>
                <updated>Tue, 14 Oct 2014 13:25:01 +0100</updated>
                            <resolved>Tue, 14 Oct 2014 13:25:01 +0100</resolved>
                                    <version>10.5.1.1</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12647071" author="rhillegas" created="Wed, 12 Nov 2008 21:30:11 +0000"  >&lt;p&gt;Attaching derby-3946-01-aa-standaloneParser.diff and ASTParser.java. Note that this patch has already been committed and is built into the 10.5 releases. To test-drive ASTParser, you need to do the following:&lt;/p&gt;

&lt;p&gt;A) Compile ASTParser&lt;/p&gt;

&lt;p&gt;B) Run ASTParser. You must use the Derby debug jars. The program takes one argument, which is a query string which you would like to parse. The program then retrieves the parsed query tree and prints it out. For example:&lt;/p&gt;

&lt;p&gt;  java ASTParser &quot;select a from t, s where t.a = s.a&quot;&lt;/p&gt;


&lt;p&gt;Note that this technique for using the parser standalone involves invoking non-public APIs which are subject to change from release to release. Note, however, that these APIs have remained stable since Derby was open-sourced.&lt;/p&gt;


&lt;p&gt;The patch touched the following files. I checked in these changes after the tests passed.&lt;/p&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java&lt;/p&gt;

&lt;p&gt;Adds some accessors to the compiler&apos;s state variable so that query trees can be stored and retrieved.&lt;/p&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/GenericStatement.java&lt;/p&gt;

&lt;p&gt;Pokes the query tree into the state variable when the user sets the StopAfterParsing tracepoint.&lt;/p&gt;</comment>
                            <comment id="12647134" author="dagw" created="Thu, 13 Nov 2008 00:13:50 +0000"  >&lt;p&gt;Tried the program for this example&lt;/p&gt;

&lt;p&gt;java ASTParser &quot;select * from table(foo(4))t&quot;&lt;/p&gt;

&lt;p&gt;but it seems the binding is done early here so it crashed:&lt;br/&gt;
Exception in thread &quot;main&quot; java.sql.SQLSyntaxErrorException: &apos;APP&apos;.FOO&apos; does not identify a table function.&lt;br/&gt;
Does this mean only a subset of the syntax may be used? If so, what parts?&lt;/p&gt;</comment>
                            <comment id="12647269" author="knutanders" created="Thu, 13 Nov 2008 12:31:18 +0000"  >&lt;p&gt;Dag, this is because the initialization of NewInvocationNode (invoked by the parser &amp;#8211; see vtiTableConstruct() in sqlgrammar.jj) looks up the class name associated with the table function in the data dictionary. That sounds like the wrong place to do it, it should probably be moved from init() to bindExpression(). The actual verification that the class exists is (correctly) done in bindExpression(). I wouldn&apos;t be surprised if there&apos;s more misplaced code, since until now it hasn&apos;t really made any difference if some of the binding has been performed in the parser.&lt;/p&gt;</comment>
                            <comment id="12647286" author="rhillegas" created="Thu, 13 Nov 2008 13:33:52 +0000"  >&lt;p&gt;I agree with Knut&apos;s analysis. The parse-time constructor for NewInvocationNode contains a bind-time call to the data dictionary. I regard this as a bug. The bug could probably be fixed by faulting in the metadata only when it is needed rather than pro-actively reading the catalogs when the AST is created.&lt;/p&gt;

&lt;p&gt;I also agree with Knut that the devil is in the details. Since a standalone parser hasn&apos;t been tested widely, there are likely to be several cases where bind-time logic has leaked into the parsing phase. Again, as they come up, I think we should clean them up. It might be worth figuring out how we could record all of the SQL that is issued by our regression tests and then pump that SQL through the ASTParser logic. That could give us some confidence that we have found the central bulge of problems--though it would not be a systematic way to catch all of the outliers.&lt;/p&gt;</comment>
                            <comment id="12647288" author="rhillegas" created="Thu, 13 Nov 2008 13:35:50 +0000"  >&lt;p&gt;Tests ran cleanly for me on derby-3946-01-aa-standaloneParser.diff. Committed at subversion revision 713721.&lt;/p&gt;</comment>
                            <comment id="12647377" author="rhillegas" created="Thu, 13 Nov 2008 20:07:26 +0000"  >&lt;p&gt;Additional commentary on this issue can be found in this email thread: &lt;a href=&quot;http://www.nabble.com/Using-derby-to-parse-an-SQL-statement-td20461127.html#a20461127&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Using-derby-to-parse-an-SQL-statement-td20461127.html#a20461127&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12647600" author="sarek" created="Fri, 14 Nov 2008 12:23:20 +0000"  >&lt;p&gt;Rick,&lt;/p&gt;

&lt;p&gt;your patch has helped us a lot so far ... since I cannot post any messages to the list for some reason, I want to give my feedback here.&lt;/p&gt;

&lt;p&gt;getting hold of the QueryTreeNode is a big step in the right direction ... however for actually analyzing the tree it would be necessary to access the tree&apos;s elements. I.e. traverse the tree sequentially, getting information how many childnodes exist etc. The problem that I still see is that some of the classes I&apos;d need for this are not visible so that I can use the from the outside.&lt;/p&gt;

&lt;p&gt;The QueryTreeNode in your example code seems to be an instance of CursorNode ... how can I go on from here?&lt;/p&gt;

&lt;p&gt;The things we&apos;d like to know is: which tables are involved in the statement (also in inner selects) which fields from which tables are accessed, which aliases are given for the tables that are accessed etc.&lt;/p&gt;

&lt;p&gt;Could you give me a further hint?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Christian&lt;/p&gt;</comment>
                            <comment id="12647630" author="rhillegas" created="Fri, 14 Nov 2008 15:23:18 +0000"  >&lt;p&gt;Hi Christian,&lt;/p&gt;

&lt;p&gt;I have posted a reply to a similar question on your original email thread. Hopefully you will be able to see that soon.&lt;/p&gt;

&lt;p&gt;1) It&apos;s useful to build the engine javadoc (ant -quiet javadoc) and browse the javadoc for the package org.apache.derby.impl.sql.compile. In particular, you will see that the AST nodes are the classes indented under QueryTreeNode in the tree view.&lt;/p&gt;

&lt;p&gt;2) The nodes themselves implement Visitable so you can write you own Visitor to explore the AST graph. Visitable has one method, accept(), and by looking at the implementations of that method, you will understand how the nodes snap together into a graph.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a simple Visitor (TreeWalker), which shows you some classes in the graph. That may help explain the AST a bit more. When I run&lt;/p&gt;

&lt;p&gt;  java TreeWalker &quot;select a from t, s where t.a = s.a&quot;&lt;/p&gt;

&lt;p&gt;I get the following graph:&lt;/p&gt;

&lt;p&gt;    org.apache.derby.impl.sql.compile.CursorNode&lt;br/&gt;
        org.apache.derby.impl.sql.compile.SelectNode&lt;br/&gt;
            org.apache.derby.impl.sql.compile.ResultColumnList&lt;br/&gt;
                org.apache.derby.impl.sql.compile.ResultColumn&lt;br/&gt;
                    org.apache.derby.impl.sql.compile.ColumnReference&lt;br/&gt;
            org.apache.derby.impl.sql.compile.FromBaseTable&lt;br/&gt;
            org.apache.derby.impl.sql.compile.FromBaseTable&lt;br/&gt;
            org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode&lt;br/&gt;
                org.apache.derby.impl.sql.compile.ColumnReference&lt;br/&gt;
                org.apache.derby.impl.sql.compile.ColumnReference&lt;/p&gt;

&lt;p&gt;Let me try to explain this tree a bit:&lt;/p&gt;

&lt;p&gt;The SelectNode has the following children:&lt;/p&gt;

&lt;p&gt;i) The columns in the SELECT list. The whole SELECT list is represented by a ResultColumnList and there is only one ResultColumn (representing &quot;a&quot;) in that list.&lt;/p&gt;

&lt;p&gt;ii) The tables in the FROM list. There are two of these, each represented by its own FromBaseTable.&lt;/p&gt;

&lt;p&gt;iii) The WHERE clause. This is a BinaryRelationalOperatorNode (representing the &quot;=&quot; operator). This operator node has a left child and a right child, &quot;t.a&quot; and &quot;s.a&quot; respectively.&lt;/p&gt;

&lt;p&gt;So to answer your specific questions:&lt;/p&gt;

&lt;p&gt;Q) What tables are in the query? &lt;br/&gt;
A) Look for FromBaseTables in the graph.&lt;/p&gt;

&lt;p&gt;Q) Which fields in the tables are accessed?&lt;br/&gt;
A) The column references can appear in the SELECT list (the ResultColumnList) or in the WHERE clause (under the BinaryRelationalOperatorNode). Note, however, that the columns are not matched up to tables yet. This isn&apos;t done by the parser. That kind of name resolution happens during Derby&apos;s bind() phase and it requires metadata so that Derby knows the structure of the tables. Unless you create the tables in Derby, there will be no way to move forward to the bind() phase. If you don&apos;t provide this information to Derby, then you will have to write your own name-resolution phase.&lt;/p&gt;

&lt;p&gt;Q) What are the table aliases, if any?&lt;br/&gt;
A) FromBaseTable.getExposedName() will give you the name of the table (or the alias name if you specified an alias)&lt;/p&gt;

&lt;p&gt;Hope this helps,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12647659" author="sarek" created="Fri, 14 Nov 2008 16:49:43 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;thanks a lot for your examples ... that makes things a lot clearer. I think I got the idea now.&lt;/p&gt;

&lt;p&gt;Now, I have to try and write my own code around it to make it &quot;easier&quot; to use for us.&lt;/p&gt;

&lt;p&gt;This was really great support!&lt;/p&gt;

&lt;p&gt;Regards&lt;/p&gt;

&lt;p&gt;Christian&lt;/p&gt;</comment>
                            <comment id="12669022" author="rhillegas" created="Fri, 30 Jan 2009 21:00:05 +0000"  >&lt;p&gt;Linking this issue to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-791&quot; title=&quot;Expose api for printing Abstract Syntax Trees in production (non-debug) servers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-791&quot;&gt;DERBY-791&lt;/a&gt;. The XmlTreeWalker attached to that issue can be used to print out a query tree in xml.&lt;/p&gt;</comment>
                            <comment id="12682905" author="myrna" created="Wed, 18 Mar 2009 03:59:18 +0000"  >&lt;p&gt;Can this be closed? If so, should I put it as a &apos;new feature&apos; in the Release notes for 10.5?&lt;/p&gt;</comment>
                            <comment id="12682937" author="rhillegas" created="Wed, 18 Mar 2009 06:52:11 +0000"  >&lt;p&gt;Hi Myrna,&lt;/p&gt;

&lt;p&gt;I think there&apos;s more work to be done on this issue--I just haven&apos;t found a rainy day for that yet. If we say something about this issue in the release notes, then we&apos;ll need to warn users that the technique relies on non-public apis which can change between releases. Thanks.&lt;/p&gt;</comment>
                            <comment id="12713977" author="rhillegas" created="Thu, 28 May 2009 14:32:14 +0100"  >&lt;p&gt;Attaching a version of the ASTParser which has been modified to use a transient in-memory database rather than creating an unnecessary on-disk database.&lt;/p&gt;</comment>
                            <comment id="12714808" author="knutanders" created="Sun, 31 May 2009 03:40:52 +0100"  >&lt;p&gt;Good idea to use an in-memory database. The storeless engine (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2164&quot; title=&quot;Provide the framework to run the sql engine without a store - &amp;quot;storeless engine&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2164&quot;&gt;&lt;del&gt;DERBY-2164&lt;/del&gt;&lt;/a&gt;) is probably an even better fit, as this is exactly the kind of use it was intended for (it skips database creation entirely). The down-side is of course that the storeless classes have not been added to the production jars yet, so you would need to add the classes.storeless directory to the classpath for it to work.&lt;/p&gt;</comment>
                            <comment id="12747473" author="rhillegas" created="Tue, 25 Aug 2009 17:00:46 +0100"  >&lt;p&gt;Attaching a third rev of the ASTParser. This rev hard-codes the context id for LanguageConnectionContext. This lets you compile ASTParser against the debug jars--the ContextId class itself does not appear in the Derby jar files because the Derby build eliminates classes which merely contain constants.&lt;/p&gt;

&lt;p&gt;I have successfully compiled and run this ASTParser against the debug derby.jar that is part of the 10.5.3.0 distribution.&lt;/p&gt;</comment>
                            <comment id="12774294" author="rhillegas" created="Fri, 6 Nov 2009 14:31:00 +0000"  >&lt;p&gt;Attaching a new version of TreeWalker which implements the visitChildrenFirst() method which was recently added to the Visitor interface.&lt;/p&gt;</comment>
                            <comment id="12835523" author="derbyuserciu" created="Fri, 19 Feb 2010 00:23:33 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;         I tried applying the patch derby-3946-01-aa-standaloneParser.java in Eclipse IDE, which says &quot;The patch has segments that did not match. are you sure you want to apply?&quot; .  Am I supposed to review a patch w.r.t the local file system and manually merge any unmerged portions? &lt;br/&gt;
Also, could you be specific about where should ASTParser.java be placed? I had placed it in org.apache.derby.impl.sql.conn package and upon running it, I get an ArrayIndexOutofBound Exception in lines 76, 85 of ASTParser.java&lt;br/&gt;
Am I missing out any step while applying this patch?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12835755" author="rhillegas" created="Fri, 19 Feb 2010 14:08:26 +0000"  >&lt;p&gt;Hi Ciu,&lt;/p&gt;

&lt;p&gt;Sorry for the confusion. That patch was committed to the trunk on 2008-11-13 but it&apos;s easy for that commit comment to get lost in the rest of the commentary on this issue. The patch was built into the 10.5.1 and 10.5.3 releases. All you need to do is download ASTParser.java to your current directory, compile it, and run it as described above. Let me know if you have more issues or if something breaks. Thanks.&lt;/p&gt;</comment>
                            <comment id="12835999" author="derbyuserciu" created="Fri, 19 Feb 2010 22:16:56 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I followed the steps in the following URL to get the derby source code using eclipse. &lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/BuildingDerby&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/BuildingDerby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to the instructions given in the second step, I added the new repository url (&lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code&lt;/a&gt;) in the SVN Repository. After that when I expand branches, I only get options to check out starting from 10.0 to 10.5 versions. Can you please let me know how to get 10.5.1 or 10.5.3 releases?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12836544" author="kristwaa" created="Mon, 22 Feb 2010 08:17:21 +0000"  >&lt;p&gt;Hi Ciu,&lt;/p&gt;

&lt;p&gt;The releases 10.5.1 and 10.5.3 are points in time on the 10.5 branch. That is, if you check out the head of 10.5 you&apos;ll get 10.5.3 plus any fixes and changes made on the 10.5 branch after 10.5.3 was released.&lt;br/&gt;
To get the code for the 10.5.1 or 10.5.3 releases you have to check out a specific revision on the 10.5 branch. For instance, 10.5.3 is revision 802917 (see &lt;a href=&quot;http://db.apache.org/derby/derby_downloads.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/derby_downloads.html&lt;/a&gt; ).&lt;/p&gt;


&lt;p&gt;Hope this helps,&lt;/p&gt;</comment>
                            <comment id="12836659" author="derbyuserciu" created="Mon, 22 Feb 2010 15:20:12 +0000"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;Thanks for the information. &lt;/p&gt;

&lt;p&gt;I checked out 10.5 version of Derby source code and downloaded ASTParser.java. Then I applied patch and built derby. But when I run ASTParser.java, I get this error:&lt;br/&gt;
ArrayIndexOutofBound Exception in lines 76, 85 of ASTParser.java &lt;/p&gt;

&lt;p&gt;Am I doing something wrong?&lt;/p&gt;

&lt;p&gt;Please help,&lt;br/&gt;
Thanks,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12836665" author="rhillegas" created="Mon, 22 Feb 2010 15:30:17 +0000"  >&lt;p&gt;Hi Ciu,&lt;/p&gt;

&lt;p&gt;I am confused by the experiment you ran. Do not try to re-apply the derby-3946-01-aa-standaloneParser.diff patch. The patch was checked in a long time ago.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12836690" author="derbyuserciu" created="Mon, 22 Feb 2010 16:07:57 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;       not able to run ASTParser.java. As you suggested, I have not applied the derby-3946-01-aa-standaloneParser.diff patch. But still, when I try placing ASTParser.java in sql.compile or sql.conn packages and run it, I get similar errors in both cases--&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.ArrayIndexOutOfBoundsException: 0&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ASTParser.execute(ASTParser.java:85)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ASTParser.main(ASTParser.java:76)&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.ArrayIndexOutOfBoundsException: 0&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.ASTParser.execute(ASTParser.java:86)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.ASTParser.main(ASTParser.java:77)&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12836704" author="rhillegas" created="Mon, 22 Feb 2010 16:39:58 +0000"  >&lt;p&gt;Hi Ciu,&lt;/p&gt;

&lt;p&gt;Can you post the command line you used? What happens when you run the example shown above:&lt;/p&gt;

&lt;p&gt;   java ASTParser &quot;select a from t, s where t.a = s.a&quot;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12836846" author="derbyuserciu" created="Mon, 22 Feb 2010 19:35:05 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;       I guess I am on the right track. Running the above query gives this - &lt;/p&gt;

&lt;p&gt;Parsing:&lt;br/&gt;
select a from t, s where t.a = s.a&lt;/p&gt;

&lt;p&gt;org.apache.derby.impl.sql.compile.CursorNode@19fdbcb&lt;br/&gt;
name: null&lt;br/&gt;
updateMode: UNSPECIFIED (0)&lt;br/&gt;
statementType: SELECT&lt;br/&gt;
resultSet: 	&lt;br/&gt;
	org.apache.derby.impl.sql.compile.SelectNode@16fdac&lt;br/&gt;
	isDistinct: false&lt;br/&gt;
	groupByList: null&lt;br/&gt;
	orderByList: null&lt;br/&gt;
	resultSetNumber: 0&lt;br/&gt;
	referencedTableMap: null&lt;br/&gt;
	statementResultSet: false&lt;br/&gt;
	resultColumns: 	&lt;br/&gt;
	org.apache.derby.impl.sql.compile.ResultColumn@1682a53&lt;br/&gt;
	exposedName: A&lt;br/&gt;
	name: A&lt;br/&gt;
	tableName: null&lt;br/&gt;
	isDefaultColumn: false&lt;br/&gt;
	wasDefaultColumn: false&lt;br/&gt;
	isNameGenerated: false&lt;br/&gt;
	sourceTableName: null&lt;br/&gt;
	type: null&lt;br/&gt;
	columnDescriptor: null&lt;br/&gt;
	isGenerated: false&lt;br/&gt;
	isGeneratedForUnmatchedColumnInInsert: false&lt;br/&gt;
	isGroupingColumn: false&lt;br/&gt;
	isReferenced: false&lt;br/&gt;
	isRedundant: false&lt;br/&gt;
	virtualColumnId: 1&lt;br/&gt;
	resultSetNumber: -1&lt;br/&gt;
	dataTypeServices: null&lt;br/&gt;
	expression: 		&lt;br/&gt;
		org.apache.derby.impl.sql.compile.ColumnReference@1b2d7df&lt;br/&gt;
		columnName: A&lt;br/&gt;
		tableNumber: -1&lt;br/&gt;
		columnNumber: 0&lt;br/&gt;
		replacesAggregate: false&lt;br/&gt;
		tableName: null&lt;br/&gt;
		nestingLevel: -1&lt;br/&gt;
		sourceLevel: -1&lt;br/&gt;
		dataTypeServices: null&lt;br/&gt;
	fromList: 		&lt;br/&gt;
		org.apache.derby.impl.sql.compile.FromList@7a9224&lt;br/&gt;
		tableName: T&lt;br/&gt;
		tableDescriptor: null&lt;br/&gt;
		updateOrDelete: 0&lt;br/&gt;
		null&lt;br/&gt;
		existsBaseTable: false&lt;br/&gt;
		dependencyMap: null&lt;br/&gt;
		correlation Name: null&lt;br/&gt;
		null&lt;br/&gt;
		tableNumber -1&lt;br/&gt;
		level 0&lt;br/&gt;
		resultSetNumber: 0&lt;br/&gt;
		referencedTableMap: null&lt;br/&gt;
		statementResultSet: false&lt;br/&gt;
		; tableName: S&lt;br/&gt;
		tableDescriptor: null&lt;br/&gt;
		updateOrDelete: 0&lt;br/&gt;
		null&lt;br/&gt;
		existsBaseTable: false&lt;br/&gt;
		dependencyMap: null&lt;br/&gt;
		correlation Name: null&lt;br/&gt;
		null&lt;br/&gt;
		tableNumber -1&lt;br/&gt;
		level 0&lt;br/&gt;
		resultSetNumber: 0&lt;br/&gt;
		referencedTableMap: null&lt;br/&gt;
		statementResultSet: false&lt;br/&gt;
		; 			&lt;br/&gt;
			org.apache.derby.impl.sql.compile.FromBaseTable@110b640&lt;br/&gt;
			tableName: T&lt;br/&gt;
			tableDescriptor: null&lt;br/&gt;
			updateOrDelete: 0&lt;br/&gt;
			null&lt;br/&gt;
			existsBaseTable: false&lt;br/&gt;
			dependencyMap: null&lt;br/&gt;
			correlation Name: null&lt;br/&gt;
			null&lt;br/&gt;
			tableNumber -1&lt;br/&gt;
			level 0&lt;br/&gt;
			resultSetNumber: 0&lt;br/&gt;
			referencedTableMap: null&lt;br/&gt;
			statementResultSet: false&lt;/p&gt;

&lt;p&gt;			org.apache.derby.impl.sql.compile.FromBaseTable@2d59a3&lt;br/&gt;
			tableName: S&lt;br/&gt;
			tableDescriptor: null&lt;br/&gt;
			updateOrDelete: 0&lt;br/&gt;
			null&lt;br/&gt;
			existsBaseTable: false&lt;br/&gt;
			dependencyMap: null&lt;br/&gt;
			correlation Name: null&lt;br/&gt;
			null&lt;br/&gt;
			tableNumber -1&lt;br/&gt;
			level 0&lt;br/&gt;
			resultSetNumber: 0&lt;br/&gt;
			referencedTableMap: null&lt;br/&gt;
			statementResultSet: false&lt;br/&gt;
	whereClause: 		&lt;br/&gt;
		org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode@158015a&lt;br/&gt;
		operator: =&lt;br/&gt;
		methodName: equals&lt;br/&gt;
		dataTypeServices: null&lt;br/&gt;
		leftOperand: 			&lt;br/&gt;
			org.apache.derby.impl.sql.compile.ColumnReference@c0c8b5&lt;br/&gt;
			columnName: A&lt;br/&gt;
			tableNumber: -1&lt;br/&gt;
			columnNumber: 0&lt;br/&gt;
			replacesAggregate: false&lt;br/&gt;
			tableName: T&lt;br/&gt;
			nestingLevel: -1&lt;br/&gt;
			sourceLevel: -1&lt;br/&gt;
			dataTypeServices: null&lt;br/&gt;
		rightOperand: 			&lt;br/&gt;
			org.apache.derby.impl.sql.compile.ColumnReference@b914b3&lt;br/&gt;
			columnName: A&lt;br/&gt;
			tableNumber: -1&lt;br/&gt;
			columnNumber: 0&lt;br/&gt;
			replacesAggregate: false&lt;br/&gt;
			tableName: S&lt;br/&gt;
			nestingLevel: -1&lt;br/&gt;
			sourceLevel: -1&lt;br/&gt;
			dataTypeServices: null&lt;br/&gt;
	preJoinFL: orderByList: &lt;/p&gt;

&lt;p&gt;I will get back to you. &lt;br/&gt;
Thanks and regards,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12838090" author="derbyuserciu" created="Wed, 24 Feb 2010 23:37:46 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;        I am now able to get the parser output. Could you please elaborate and help me interpret this output?  I just want to make sure this is going to work for all types of complex /nested/queryies from different databases. Could you please let me know if ASTParser.java depends on any other files in impl.sql.compile package apart from QuerytreeNode.java.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12840053" author="derbyuserciu" created="Tue, 2 Mar 2010 07:54:21 +0000"  >&lt;p&gt;   Could you please explain the output of ASTParser.java? How are each of the nodes retrieved?&lt;/p&gt;
</comment>
                            <comment id="12840194" author="rhillegas" created="Tue, 2 Mar 2010 15:08:22 +0000"  >&lt;p&gt;Hi Ciu,&lt;/p&gt;

&lt;p&gt;ASTParser simply defers its work to the treePrint() methods of the nodes themselves. The nodes are retrieved using a visitor pattern. To see how this works, take a look at the TreeWalker program attached to this JIRA. TreeWalker is another implementation of Visitor. Regards-Rick&lt;/p&gt;</comment>
                            <comment id="12852132" author="derbyuserciu" created="Wed, 31 Mar 2010 23:02:15 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I have two questions for you. &lt;/p&gt;

&lt;p&gt;1) I am trying to analyze which function call is responsible for printing the parse tree. &lt;/p&gt;

&lt;p&gt; 2) What is the exact point  in the code when a &quot; * &quot; gets replaced with the column names in a query like &quot;Select * from tablename&quot;  where tablename is a table with different column names clm1,clm2,clm3 etc.&lt;/p&gt;

&lt;p&gt;If you could please help me with these asap.&lt;/p&gt;

&lt;p&gt;Thank you,&lt;br/&gt;
Ciu&lt;/p&gt;</comment>
                            <comment id="12852367" author="rhillegas" created="Thu, 1 Apr 2010 14:05:46 +0100"  >&lt;p&gt;Hi Ciu,&lt;/p&gt;

&lt;p&gt;Some responses follow:&lt;/p&gt;

&lt;p&gt;1) The printing is triggered by the call to QueryTreeNode.treePrint(). That method immediately defers its work to QueryTreeNode.printSubNodes(), which recurses through the nodes, printing as it goes.&lt;/p&gt;

&lt;p&gt;2) The *s are expanded by ResultColumnList.expandAllsAndNameColumns().&lt;/p&gt;

&lt;p&gt;Hope this helps,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13466385" author="mamtas" created="Sun, 30 Sep 2012 03:01:05 +0100"  >&lt;p&gt;Hi Rick, as part of 10.10 bug triaging, I was wondering what was the status of this jira? Should it be left open because there is more work to be done?&lt;/p&gt;</comment>
                            <comment id="14170851" author="rhillegas" created="Tue, 14 Oct 2014 13:25:01 +0100"  >&lt;p&gt;Resolving this issue as a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4415&quot; title=&quot;Make it easy to plug custom AST printers into the compiler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4415&quot;&gt;&lt;del&gt;DERBY-4415&lt;/del&gt;&lt;/a&gt;. The solution on that issue is more robust. In particular, it works with production (non-debug) engines.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12327185">DERBY-791</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12438486">DERBY-4415</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12358085">DERBY-2164</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12652877">DERBY-6263</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12417626" name="ASTParser.java" size="4217" author="rhillegas" created="Tue, 25 Aug 2009 17:00:46 +0100"/>
                            <attachment id="12409263" name="ASTParser.java" size="4194" author="rhillegas" created="Thu, 28 May 2009 14:32:14 +0100"/>
                            <attachment id="12393810" name="ASTParser.java" size="4194" author="rhillegas" created="Wed, 12 Nov 2008 21:30:11 +0000"/>
                            <attachment id="12424203" name="TreeWalker.java" size="5682" author="rhillegas" created="Fri, 6 Nov 2009 14:31:00 +0000"/>
                            <attachment id="12393940" name="TreeWalker.java" size="5609" author="rhillegas" created="Fri, 14 Nov 2008 15:23:18 +0000"/>
                            <attachment id="12393811" name="derby-3946-01-aa-standaloneParser.diff" size="2329" author="rhillegas" created="Wed, 12 Nov 2008 21:30:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Nov 2008 00:13:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31071</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy08sv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35244</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>