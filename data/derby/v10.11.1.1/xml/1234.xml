<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:49 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1234/DERBY-1234.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1234] Verify that we raise SQLException when calling methods on closed java.sql objects</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1234</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The next rev of the JDBC4 spec will clarify that databases should raise SQLException when an application calls methods on closed sql objects: ResultSet, Preparedstatement, CallableStatement, Connection, and Statement. We should verify that we conform.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12332439">DERBY-1234</key>
            <summary>Verify that we raise SQLException when calling methods on closed java.sql objects</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Apr 2006 01:08:22 +0100</created>
                <updated>Sun, 14 May 2006 16:13:38 +0100</updated>
                            <resolved>Sun, 14 May 2006 16:13:38 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12375875" author="knutanders" created="Sun, 23 Apr 2006 21:10:49 +0100"  >&lt;p&gt;I have written a test which invokes all methods on closed ResultSet,&lt;br/&gt;
Statement, PreparedStatement, CallableStatement and Connection objects&lt;br/&gt;
and checks whether they throw exceptions with SQL states indicating&lt;br/&gt;
that the object is closed. The test is attached if someone wants to&lt;br/&gt;
try it.&lt;/p&gt;

&lt;p&gt;The test assumes that all methods except close() and isClosed() should&lt;br/&gt;
throw an exception. I don&apos;t know whether Connection.isValid() should&lt;br/&gt;
throw an exception, but I can&apos;t find anything in the spec saying it&lt;br/&gt;
shouldn&apos;t.&lt;/p&gt;

&lt;p&gt;I noticed that embedded and client don&apos;t use the same SQL state for&lt;br/&gt;
closed statements. Embedded uses XJ012, while the client uses XCL31.&lt;/p&gt;

&lt;p&gt;Results from running the test on embedded:&lt;/p&gt;

&lt;p&gt;java.lang.UnsupportedOperationException thrown instead of&lt;br/&gt;
SQLFeatureNotSupportedException:&lt;/p&gt;

&lt;p&gt;  EmbedConnection40.getTypeMap&lt;/p&gt;

&lt;p&gt;No exceptions from:&lt;/p&gt;

&lt;p&gt;  BrokeredCallableStatement40.getGeneratedKeys&lt;br/&gt;
  BrokeredCallableStatement40.getQueryTimeout&lt;br/&gt;
  BrokeredPreparedStatement40.getGeneratedKeys&lt;br/&gt;
  BrokeredPreparedStatement40.getQueryTimeout&lt;br/&gt;
  BrokeredStatement40.getGeneratedKeys&lt;br/&gt;
  BrokeredStatement40.getQueryTimeout&lt;br/&gt;
  EmbedCallableStatement40.getGeneratedKeys&lt;br/&gt;
  EmbedCallableStatement40.getQueryTimeout&lt;br/&gt;
  EmbedConnection40.clearWarnings&lt;br/&gt;
  EmbedConnection40.getAutoCommit&lt;br/&gt;
  EmbedConnection40.getCatalog&lt;br/&gt;
  EmbedConnection40.getHoldability&lt;br/&gt;
  EmbedConnection40.getWarnings&lt;br/&gt;
  EmbedConnection40.isValid&lt;br/&gt;
  EmbedConnection40.nativeSQL&lt;br/&gt;
  EmbedConnection40.setAutoCommit&lt;br/&gt;
  EmbedConnection40.setCatalog&lt;br/&gt;
  EmbedConnection40.setHoldability&lt;br/&gt;
  EmbedPreparedStatement40.getGeneratedKeys&lt;br/&gt;
  EmbedPreparedStatement40.getQueryTimeout&lt;br/&gt;
  EmbedStatement40.getGeneratedKeys&lt;br/&gt;
  EmbedStatement40.getQueryTimeout&lt;/p&gt;

&lt;p&gt;NullPointerException or SQLException because of null argument:&lt;/p&gt;

&lt;p&gt;  BrokeredCallableStatement40.getObject&lt;br/&gt;
  BrokeredCallableStatement40.isWrapperFor&lt;br/&gt;
  BrokeredCallableStatement40.setBinaryStream&lt;br/&gt;
  BrokeredCallableStatement40.setBlob&lt;br/&gt;
  BrokeredCallableStatement40.setCharacterStream&lt;br/&gt;
  BrokeredCallableStatement40.setClob&lt;br/&gt;
  BrokeredCallableStatement40.unwrap&lt;br/&gt;
  BrokeredConnection40.isWrapperFor&lt;br/&gt;
  BrokeredConnection40.unwrap&lt;br/&gt;
  BrokeredPreparedStatement40.isWrapperFor&lt;br/&gt;
  BrokeredPreparedStatement40.setBinaryStream&lt;br/&gt;
  BrokeredPreparedStatement40.setBlob&lt;br/&gt;
  BrokeredPreparedStatement40.setCharacterStream&lt;br/&gt;
  BrokeredPreparedStatement40.setClob&lt;br/&gt;
  BrokeredPreparedStatement40.unwrap&lt;br/&gt;
  BrokeredStatement40.execute&lt;br/&gt;
  BrokeredStatement40.executeQuery&lt;br/&gt;
  BrokeredStatement40.executeUpdate&lt;br/&gt;
  BrokeredStatement40.isWrapperFor&lt;br/&gt;
  BrokeredStatement40.unwrap&lt;br/&gt;
  EmbedCallableStatement40.getObject&lt;br/&gt;
  EmbedCallableStatement40.isWrapperFor&lt;br/&gt;
  EmbedCallableStatement40.setBinaryStream&lt;br/&gt;
  EmbedCallableStatement40.setBlob&lt;br/&gt;
  EmbedCallableStatement40.setCharacterStream&lt;br/&gt;
  EmbedCallableStatement40.setClob&lt;br/&gt;
  EmbedCallableStatement40.unwrap&lt;br/&gt;
  EmbedConnection40.createQueryObject&lt;br/&gt;
  EmbedConnection40.getTransactionIsolation&lt;br/&gt;
  EmbedConnection40.isReadOnly&lt;br/&gt;
  EmbedConnection40.isWrapperFor&lt;br/&gt;
  EmbedConnection40.setTransactionIsolation&lt;br/&gt;
  EmbedConnection40.setTypeMap&lt;br/&gt;
  EmbedConnection40.unwrap&lt;br/&gt;
  EmbedPreparedStatement40.isWrapperFor&lt;br/&gt;
  EmbedPreparedStatement40.setBinaryStream&lt;br/&gt;
  EmbedPreparedStatement40.setBlob&lt;br/&gt;
  EmbedPreparedStatement40.setCharacterStream&lt;br/&gt;
  EmbedPreparedStatement40.setClob&lt;br/&gt;
  EmbedPreparedStatement40.unwrap&lt;br/&gt;
  EmbedResultSet40.getAsciiStream&lt;br/&gt;
  EmbedResultSet40.getBigDecimal&lt;br/&gt;
  EmbedResultSet40.getBinaryStream&lt;br/&gt;
  EmbedResultSet40.getBlob&lt;br/&gt;
  EmbedResultSet40.getBoolean&lt;br/&gt;
  EmbedResultSet40.getByte&lt;br/&gt;
  EmbedResultSet40.getBytes&lt;br/&gt;
  EmbedResultSet40.getCharacterStream&lt;br/&gt;
  EmbedResultSet40.getClob&lt;br/&gt;
  EmbedResultSet40.getDate&lt;br/&gt;
  EmbedResultSet40.getDouble&lt;br/&gt;
  EmbedResultSet40.getFloat&lt;br/&gt;
  EmbedResultSet40.getInt&lt;br/&gt;
  EmbedResultSet40.getLong&lt;br/&gt;
  EmbedResultSet40.getObject&lt;br/&gt;
  EmbedResultSet40.getObject&lt;br/&gt;
  EmbedResultSet40.getShort&lt;br/&gt;
  EmbedResultSet40.getString&lt;br/&gt;
  EmbedResultSet40.getTime&lt;br/&gt;
  EmbedResultSet40.getTimestamp&lt;br/&gt;
  EmbedResultSet40.isWrapperFor&lt;br/&gt;
  EmbedResultSet40.unwrap&lt;br/&gt;
  EmbedResultSet40.updateAsciiStream&lt;br/&gt;
  EmbedResultSet40.updateBigDecimal&lt;br/&gt;
  EmbedResultSet40.updateBinaryStream&lt;br/&gt;
  EmbedResultSet40.updateBlob&lt;br/&gt;
  EmbedResultSet40.updateBoolean&lt;br/&gt;
  EmbedResultSet40.updateByte&lt;br/&gt;
  EmbedResultSet40.updateBytes&lt;br/&gt;
  EmbedResultSet40.updateCharacterStream&lt;br/&gt;
  EmbedResultSet40.updateClob&lt;br/&gt;
  EmbedResultSet40.updateDate&lt;br/&gt;
  EmbedResultSet40.updateDouble&lt;br/&gt;
  EmbedResultSet40.updateFloat&lt;br/&gt;
  EmbedResultSet40.updateInt&lt;br/&gt;
  EmbedResultSet40.updateLong&lt;br/&gt;
  EmbedResultSet40.updateNull&lt;br/&gt;
  EmbedResultSet40.updateObject&lt;br/&gt;
  EmbedResultSet40.updateShort&lt;br/&gt;
  EmbedResultSet40.updateString&lt;br/&gt;
  EmbedResultSet40.updateTime&lt;br/&gt;
  EmbedResultSet40.updateTimestamp&lt;br/&gt;
  EmbedStatement40.execute&lt;br/&gt;
  EmbedStatement40.executeQuery&lt;br/&gt;
  EmbedStatement40.executeUpdate&lt;br/&gt;
  EmbedStatement40.isWrapperFor&lt;br/&gt;
  EmbedStatement40.unwrap&lt;/p&gt;

&lt;p&gt;AbstractMethodError:&lt;/p&gt;

&lt;p&gt;  BrokeredConnection40.createArray&lt;br/&gt;
  BrokeredConnection40.createStruct&lt;br/&gt;
  BrokeredStatement40.isPoolable&lt;br/&gt;
  BrokeredStatement40.setPoolable&lt;br/&gt;
  EmbedConnection40.createArray&lt;br/&gt;
  EmbedConnection40.createStruct&lt;br/&gt;
  EmbedStatement40.isPoolable&lt;br/&gt;
  EmbedStatement40.setPoolable&lt;/p&gt;

&lt;p&gt;SQLException, not scrollable or no current row:&lt;/p&gt;

&lt;p&gt;  EmbedResultSet40.absolute&lt;br/&gt;
  EmbedResultSet40.afterLast&lt;br/&gt;
  EmbedResultSet40.beforeFirst&lt;br/&gt;
  EmbedResultSet40.first&lt;br/&gt;
  EmbedResultSet40.getAsciiStream&lt;br/&gt;
  EmbedResultSet40.getBinaryStream&lt;br/&gt;
  EmbedResultSet40.getCharacterStream&lt;br/&gt;
  EmbedResultSet40.getObject&lt;br/&gt;
  EmbedResultSet40.isAfterLast&lt;br/&gt;
  EmbedResultSet40.isBeforeFirst&lt;br/&gt;
  EmbedResultSet40.isFirst&lt;br/&gt;
  EmbedResultSet40.isLast&lt;br/&gt;
  EmbedResultSet40.last&lt;br/&gt;
  EmbedResultSet40.previous&lt;br/&gt;
  EmbedResultSet40.relative&lt;/p&gt;

&lt;p&gt;Results from running the test on the client:&lt;/p&gt;

&lt;p&gt;java.lang.UnsupportedOperationException thrown instead of&lt;br/&gt;
SQLFeatureNotSupportedException:&lt;/p&gt;

&lt;p&gt;  NetConnection40.getTypeMap&lt;/p&gt;

&lt;p&gt;No exceptions from:&lt;/p&gt;

&lt;p&gt;  CallableStatement40.clearWarnings&lt;br/&gt;
  CallableStatement40.getWarnings&lt;br/&gt;
  CallableStatement40.setDate&lt;br/&gt;
  PreparedStatement40.clearWarnings&lt;br/&gt;
  PreparedStatement40.getWarnings&lt;br/&gt;
  Statement40.clearWarnings&lt;br/&gt;
  Statement40.getWarnings&lt;br/&gt;
  NetConnection40.clearWarnings&lt;br/&gt;
  NetConnection40.createBlob&lt;br/&gt;
  NetConnection40.createClob&lt;br/&gt;
  NetConnection40.getWarnings&lt;br/&gt;
  NetConnection40.isValid&lt;/p&gt;

&lt;p&gt;NullPointerException or SQLException because of null argument:&lt;/p&gt;

&lt;p&gt;  CallableStatement40.getDate&lt;br/&gt;
  CallableStatement40.getTime&lt;br/&gt;
  CallableStatement40.getTimestamp&lt;br/&gt;
  CallableStatement40.isWrapperFor&lt;br/&gt;
  CallableStatement40.setClob&lt;br/&gt;
  CallableStatement40.setDate&lt;br/&gt;
  CallableStatement40.setTime&lt;br/&gt;
  CallableStatement40.setTimestamp&lt;br/&gt;
  CallableStatement40.unwrap&lt;br/&gt;
  PreparedStatement40.isWrapperFor&lt;br/&gt;
  PreparedStatement40.setClob&lt;br/&gt;
  PreparedStatement40.setDate&lt;br/&gt;
  PreparedStatement40.setTime&lt;br/&gt;
  PreparedStatement40.setTimestamp&lt;br/&gt;
  PreparedStatement40.unwrap&lt;br/&gt;
  Statement40.isWrapperFor&lt;br/&gt;
  Statement40.unwrap&lt;br/&gt;
  NetConnection40.createQueryObject&lt;br/&gt;
  NetConnection40.isWrapperFor&lt;br/&gt;
  NetConnection40.unwrap&lt;br/&gt;
  NetResultSet40.getDate&lt;br/&gt;
  NetResultSet40.getTime&lt;br/&gt;
  NetResultSet40.getTimestamp&lt;br/&gt;
  NetResultSet40.getURL&lt;br/&gt;
  NetResultSet40.isWrapperFor&lt;br/&gt;
  NetResultSet40.unwrap&lt;br/&gt;
  NetResultSet40.updateArray&lt;br/&gt;
  NetResultSet40.updateBlob&lt;br/&gt;
  NetResultSet40.updateClob&lt;br/&gt;
  NetResultSet40.updateRef&lt;/p&gt;

&lt;p&gt;AbstractMethodError:&lt;/p&gt;

&lt;p&gt;  LogicalConnection.createArray&lt;br/&gt;
  LogicalConnection.createBlob&lt;br/&gt;
  LogicalConnection.createClob&lt;br/&gt;
  LogicalConnection.createNClob&lt;br/&gt;
  LogicalConnection.createQueryObject&lt;br/&gt;
  LogicalConnection.createSQLXML&lt;br/&gt;
  LogicalConnection.createStruct&lt;br/&gt;
  LogicalConnection.getClientInfo&lt;br/&gt;
  LogicalConnection.getClientInfo&lt;br/&gt;
  LogicalConnection.isValid&lt;br/&gt;
  LogicalConnection.isWrapperFor&lt;br/&gt;
  LogicalConnection.setClientInfo&lt;br/&gt;
  LogicalConnection.setClientInfo&lt;br/&gt;
  LogicalConnection.unwrap&lt;br/&gt;
  Statement40.isPoolable&lt;br/&gt;
  Statement40.setPoolable&lt;br/&gt;
  NetConnection40.createArray&lt;br/&gt;
  NetConnection40.createStruct&lt;br/&gt;
  NetResultSet40.getNCharacterStream&lt;br/&gt;
  NetResultSet40.getNCharacterStream&lt;br/&gt;
  NetResultSet40.getNString&lt;br/&gt;
  NetResultSet40.getNString&lt;br/&gt;
  NetResultSet40.updateNCharacterStream&lt;br/&gt;
  NetResultSet40.updateNCharacterStream&lt;/p&gt;</comment>
                            <comment id="12375877" author="knutanders" created="Sun, 23 Apr 2006 21:26:06 +0100"  >&lt;p&gt;Checked in the test in revision 396269. Didn&apos;t enable it in any suite since it fails. You can try the test by running&lt;/p&gt;

&lt;p&gt;  java org.apache.derbyTesting.functionTests.harness.RunTest jdbc4/ClosedObjectTest.junit&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;  java -Dframework=DerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest jdbc4/ClosedObjectTest.junit&lt;/p&gt;</comment>
                            <comment id="12376334" author="knutanders" created="Wed, 26 Apr 2006 04:11:41 +0100"  >&lt;p&gt;Removed getTypeMap() from EmbedConnection40 and NetConnection40. The&lt;br/&gt;
method is an existing JDBC 2.0 method. The method was presumably added&lt;br/&gt;
to the 4.0 classes because JDBC 4.0 modified the return type from Map&lt;br/&gt;
to Map&amp;lt;String,Class&amp;lt;?&amp;gt;&amp;gt;. It is however not a problem to use the&lt;br/&gt;
existing methods which just return Map. Actually, the Generics&lt;br/&gt;
Tutorial (&lt;a href=&quot;http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf&lt;/a&gt;)&lt;br/&gt;
says this about a similar case:&lt;/p&gt;

&lt;p&gt;  So, shouldn&apos;t this be an error? Theoretically speaking, yes; but&lt;br/&gt;
  practically speaking, if generic code is going to call legacy code,&lt;br/&gt;
  this has to be allowed.&lt;/p&gt;

&lt;p&gt;Committed patch &apos;derby-1234-part1.diff&apos; into svn revision 396972.&lt;/p&gt;

&lt;p&gt;This fixes the problem with getTypeMap() throwing&lt;br/&gt;
UnsupportedOperationException, but EmbedConnection.getTypeMap() still&lt;br/&gt;
doesn&apos;t throw exception when the connection is closed.&lt;/p&gt;</comment>
                            <comment id="12376450" author="knutanders" created="Wed, 26 Apr 2006 17:51:18 +0100"  >&lt;p&gt;The attached patch fixes all the EmbedXXXStatement methods by adding checkStatus() to those methods missing that call. Also had to change some test cases in jdbcapi/StmtCloseFunTest.java that didn&apos;t expect an exception from getQueryTimeout() after the statement was closed.&lt;/p&gt;

&lt;p&gt;Please review! Thanks.&lt;/p&gt;</comment>
                            <comment id="12376474" author="dyret" created="Wed, 26 Apr 2006 19:54:28 +0100"  >&lt;p&gt;I think derby-1234.part2 looks good, and can be committed.&lt;/p&gt;</comment>
                            <comment id="12376475" author="knutanders" created="Wed, 26 Apr 2006 20:08:45 +0100"  >&lt;p&gt;Thanks, Dyre. Committed part2 in revision 397186.&lt;/p&gt;</comment>
                            <comment id="12376927" author="knutanders" created="Fri, 28 Apr 2006 21:15:14 +0100"  >&lt;p&gt;The attached patch (part3) ensures that all methods in EmbedResultSet, EmbedResultSet20 and EmbedResultSet40 call checkIfClosed(). Derbyall and the jdbc40 tests ran cleanly without modification. No EmbedResultSet methods are reported by jdbc4/ClosedObjectTest.junit any more. Please review! Thanks.&lt;/p&gt;</comment>
                            <comment id="12376984" author="rhillegas" created="Sat, 29 Apr 2006 03:43:43 +0100"  >&lt;p&gt;Looks good to me. Ready for commit. For extra credit, we could add a test, modelled on VerifySignatures or UnsupportedVetter, which calls all methods on closed objects and verifies that they either raise the ObjectClosed exception or SQLFeatureNotSupportedException.&lt;/p&gt;</comment>
                            <comment id="12377346" author="knutanders" created="Tue, 2 May 2006 16:10:18 +0100"  >&lt;p&gt;Thanks, Rick! Committed revision 398837. The test you suggested sounds exactly like jdbc4/ClosedObjectTest.junit which is already checked in.&lt;/p&gt;</comment>
                            <comment id="12377529" author="knutanders" created="Wed, 3 May 2006 16:00:19 +0100"  >&lt;p&gt;New patch (part4) which fixes the issues in EmbedConnection:&lt;/p&gt;

&lt;p&gt;  1) New method checkIfClosed() which throws exception when the&lt;br/&gt;
     connection is closed.&lt;/p&gt;

&lt;p&gt;  2) Added getTypeMap() with generic signature to avoid compiler&lt;br/&gt;
     warning.&lt;/p&gt;

&lt;p&gt;  3) Modified jdbc4/ClosedObjectTest.junit so that it doesn&apos;t expect&lt;br/&gt;
     isValid() to throw exception when the connection is closed.&lt;/p&gt;

&lt;p&gt;  4) Added a test case for getTypeMap() to&lt;br/&gt;
     jdbc4/ConnectionTest.junit. It turned out this test case fails on&lt;br/&gt;
     BrokeredConnection. Will fix that in a later patch. (The test is&lt;br/&gt;
     not enabled in any suite, since there are other test cases&lt;br/&gt;
     failing on BrokeredConnection as well.)&lt;/p&gt;

&lt;p&gt;Derbyall and jdbc40 ran cleanly. Please review.&lt;/p&gt;</comment>
                            <comment id="12377739" author="dyret" created="Thu, 4 May 2006 16:06:28 +0100"  >&lt;p&gt;I have looked at the part4 patch (a2ps --prologue=diff -Eudiff, is awesome &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, and I think it looks good. I must say the the workaround to avoid the compiler warning is somewhat of a hack. A clever hack, but still a hack... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; But I have seen the discussion and agree that it is the lesser evil. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12377744" author="knutanders" created="Thu, 4 May 2006 16:18:11 +0100"  >&lt;p&gt;Thanks again, Dyre! Committed revision 399604.&lt;/p&gt;</comment>
                            <comment id="12377755" author="knutanders" created="Thu, 4 May 2006 17:13:33 +0100"  >&lt;p&gt;New patch (part5) which makes all the BrokeredXXX classes check&lt;br/&gt;
whether the object is closed. What the patch does, is:&lt;/p&gt;

&lt;p&gt;  1) Implement checkIfClosed() and call it where needed.&lt;/p&gt;

&lt;p&gt;  2) Implement BrokeredStatement.isClosed() which was needed by&lt;br/&gt;
     checkIfClosed().&lt;/p&gt;

&lt;p&gt;  3) Remove isWrapperFor() from BrokeredStatement40,&lt;br/&gt;
     BrokeredPreparedStatement40 and BrokeredCallableStatement40 and&lt;br/&gt;
     replace it by one shared method in BrokeredStatement.&lt;/p&gt;

&lt;p&gt;With this patch, jdbc4/ClosedObjectTest.junit runs cleanly on embedded.&lt;/p&gt;

&lt;p&gt;Derbyall and jdbc40 had no failures. Please review! Thanks.&lt;/p&gt;</comment>
                            <comment id="12377780" author="andreask" created="Thu, 4 May 2006 20:18:56 +0100"  >&lt;p&gt;I think maybe some of the added calls to checkIfClosed() are not necessary. I.e if you call&lt;br/&gt;
rs.getInt(&quot;intcolumt&quot;),   checkIfClosed() is called three times (i.e if you follow the stack):&lt;/p&gt;

&lt;p&gt;getInt(String columnName) &lt;br/&gt;
 -&amp;gt; getInt(int columnName)&lt;br/&gt;
   -&amp;gt; getColumn(int columnName)&lt;/p&gt;

&lt;p&gt;These are three calls for checkIfClosed() instead of one. I think it is sufficient with a check in getColumn().&lt;br/&gt;
Similar issue with updateXXX() and calls to checksBeforeUpdateXXX..()&lt;/p&gt;</comment>
                            <comment id="12377796" author="kristwaa" created="Thu, 4 May 2006 20:40:20 +0100"  >&lt;p&gt;Although not directly related to this issue, I would like to comment that some care should be taken to ensure exceptions are thrown in the &quot;same order&quot; in the different methods and on the embedded and client side.&lt;/p&gt;

&lt;p&gt;For instance, when writing a JUnit test for another issue, I found that Derby threw a &quot;not an OUT/INOUT&quot; parameter on the client side and a data conversion error exception on the embedded side (for the same call/test code). Depending on the implementation, moving a condition check up or down the callstack can change which error condition is encountered first.&lt;/p&gt;</comment>
                            <comment id="12377801" author="knutanders" created="Thu, 4 May 2006 20:58:16 +0100"  >&lt;p&gt;Thanks Andreas, you&apos;re completely right. I will go back and see if I&lt;br/&gt;
can clean things up. The reason for having those extra calls was that&lt;br/&gt;
I wanted the is-closed exception to be raised before any other&lt;br/&gt;
exceptions (see also Kristian&apos;s comment).&lt;/p&gt;</comment>
                            <comment id="12377979" author="knutanders" created="Fri, 5 May 2006 16:21:32 +0100"  >&lt;p&gt;Patch derby-1234-cleanup1.diff addresses the issue raised by&lt;br/&gt;
Andreas. I removed checkIfClosed() from getColumn() since the error&lt;br/&gt;
message generated there is not as accurate as the ones generated in&lt;br/&gt;
the top-level methods. I also removed a call to checkStatus() in one&lt;br/&gt;
of the EmbedCallableStatement20 methods which would raise&lt;br/&gt;
SQLFeatureNotSupportedException anyway.&lt;/p&gt;

&lt;p&gt;With this change, all of EmbedResultSet&apos;s get and update methods which&lt;br/&gt;
take a column number parameter, only invoke checkIfClosed() once. The&lt;br/&gt;
get and update methods that take a column name parameter invoke&lt;br/&gt;
checkIfClosed() twice. (This could be avoided by making private&lt;br/&gt;
unchecked methods that are called by both the column number methods&lt;br/&gt;
and the column name methods, but I&apos;m afraid that would be ugly too.) I&lt;br/&gt;
feel this is an acceptable cost (I checked the client driver, and it&lt;br/&gt;
also checks twice for these methods) since the overhead of mapping a&lt;br/&gt;
column name to a column number is probably much higher than one single&lt;br/&gt;
test of a boolean variable. Andreas, are you satisfied with this&lt;br/&gt;
change?&lt;/p&gt;</comment>
                            <comment id="12377986" author="andreask" created="Fri, 5 May 2006 16:52:32 +0100"  >&lt;p&gt;Yes, I am fine with the changes. Thanks for addressing this.&lt;/p&gt;</comment>
                            <comment id="12377998" author="knutanders" created="Fri, 5 May 2006 18:17:34 +0100"  >&lt;p&gt;cleanup1 patch committed with revision 400036.&lt;/p&gt;</comment>
                            <comment id="12378202" author="dyret" created="Sat, 6 May 2006 18:23:29 +0100"  >&lt;p&gt;I have looked at the part5 patch. I think it looks good, but I have not tested it thoroughly (experience from the previous part suggestes that may be adivisable). &lt;br/&gt;
+1&lt;/p&gt;</comment>
                            <comment id="12378206" author="knutanders" created="Sat, 6 May 2006 19:37:28 +0100"  >&lt;p&gt;Thanks for reviewing this patch too, Dyre. Hopefully, there will be just one more until we can close this issue. Committed part5 into trunk with revision 400287.&lt;/p&gt;</comment>
                            <comment id="12378233" author="knutanders" created="Sun, 7 May 2006 01:08:12 +0100"  >&lt;p&gt;Attached a new patch (part6) which makes the methods in the client&lt;br/&gt;
driver check whether the object is closed. With this patch,&lt;br/&gt;
jdbcapi/StmtCloseFunTest.java has the same behaviour with the client&lt;br/&gt;
driver as with the embedded driver so the DerbyNetClient canon could&lt;br/&gt;
be removed. Also, jdbc4/ClosedObjectTest.junit runs cleanly both on&lt;br/&gt;
embedded and on the client, and it has been added to the jdbc40 suite.&lt;/p&gt;

&lt;p&gt;In addition to adding checkForClosedXXX() calls, this patch&lt;/p&gt;

&lt;p&gt;  a) implements Connection.getTypeMap() with the correct generic&lt;br/&gt;
     signature in NetConnection40 and LogicalConnection40 to avoid&lt;br/&gt;
     compiler warnings&lt;/p&gt;

&lt;p&gt;  b) implements isWrapperFor() (with check for closed object) in&lt;br/&gt;
     Statement, so that it could be removed from Statement40,&lt;br/&gt;
     PreparedStatement40 and CallableStatement40&lt;/p&gt;

&lt;p&gt;Derbyall and jdbc40 ran successfully. Please review. Thanks!&lt;/p&gt;</comment>
                            <comment id="12379018" author="dyret" created="Thu, 11 May 2006 14:59:42 +0100"  >&lt;p&gt;Looks good to me.&lt;br/&gt;
+1&lt;/p&gt;</comment>
                            <comment id="12402210" author="knutanders" created="Sun, 14 May 2006 16:13:38 +0100"  >&lt;p&gt;Final patch committed with revision 406280.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12326297" name="derby-1234-cleanup1.diff" size="957" author="knutanders" created="Fri, 5 May 2006 16:21:32 +0100"/>
                            <attachment id="12326298" name="derby-1234-cleanup1.stat" size="142" author="knutanders" created="Fri, 5 May 2006 16:21:32 +0100"/>
                            <attachment id="12325856" name="derby-1234-part1.diff" size="1270" author="knutanders" created="Wed, 26 Apr 2006 04:11:41 +0100"/>
                            <attachment id="12325891" name="derby-1234-part2.diff" size="9836" author="knutanders" created="Wed, 26 Apr 2006 17:51:18 +0100"/>
                            <attachment id="12325892" name="derby-1234-part2.stat" size="530" author="knutanders" created="Wed, 26 Apr 2006 17:51:18 +0100"/>
                            <attachment id="12326010" name="derby-1234-part3.diff" size="18749" author="knutanders" created="Fri, 28 Apr 2006 21:15:14 +0100"/>
                            <attachment id="12326011" name="derby-1234-part3.stat" size="295" author="knutanders" created="Fri, 28 Apr 2006 21:15:14 +0100"/>
                            <attachment id="12326190" name="derby-1234-part4.diff" size="10256" author="knutanders" created="Wed, 3 May 2006 16:00:19 +0100"/>
                            <attachment id="12326191" name="derby-1234-part4.stat" size="318" author="knutanders" created="Wed, 3 May 2006 16:00:19 +0100"/>
                            <attachment id="12326234" name="derby-1234-part5.diff" size="10019" author="knutanders" created="Thu, 4 May 2006 17:13:33 +0100"/>
                            <attachment id="12326235" name="derby-1234-part5.stat" size="440" author="knutanders" created="Thu, 4 May 2006 17:13:33 +0100"/>
                            <attachment id="12326343" name="derby-1234-part6.diff" size="30777" author="knutanders" created="Sun, 7 May 2006 01:08:12 +0100"/>
                            <attachment id="12326344" name="derby-1234-part6.stat" size="1111" author="knutanders" created="Sun, 7 May 2006 01:08:12 +0100"/>
                            <attachment id="12325729" name="derby-1234-v1.diff" size="27456" author="knutanders" created="Sun, 23 Apr 2006 21:10:49 +0100"/>
                            <attachment id="12325730" name="derby-1234-v1.stat" size="92" author="knutanders" created="Sun, 23 Apr 2006 21:10:49 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 23 Apr 2006 20:10:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29906</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16g7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40695</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>