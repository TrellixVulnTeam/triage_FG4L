<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:27:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6264/DERBY-6264.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6264] Improve test coverage of org.apache.derby.iapi.db.PropertyInfo</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6264</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;According to the coverage reports, only 1 of the 5 methods in&lt;br/&gt;
org.apache.derby.iapi.db.PropertyInfo is exercised by the Derby&lt;br/&gt;
regression tests.&lt;/p&gt;

&lt;p&gt;This sub-task is to improve that test coverage.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12653032">DERBY-6264</key>
            <summary>Improve test coverage of org.apache.derby.iapi.db.PropertyInfo</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12641844">DERBY-6164</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ahsancse">ahsan shamsudeen</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                    </labels>
                <created>Sat, 15 Jun 2013 18:45:44 +0100</created>
                <updated>Wed, 3 Sep 2014 09:31:39 +0100</updated>
                            <resolved>Thu, 27 Jun 2013 04:59:41 +0100</resolved>
                                                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13684247" author="bryanpendleton" created="Sat, 15 Jun 2013 18:55:12 +0100"  >&lt;p&gt;I am confused about the PropertyInfo class. It is a very old class in the Derby&lt;br/&gt;
sources, yet I have never really worked with it.&lt;/p&gt;

&lt;p&gt;The only use I can find of this class in the Derby source tree is the built-in&lt;br/&gt;
system procedure SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(),&lt;br/&gt;
which invokes PropertyInfo.setDatabaseProperty.&lt;/p&gt;

&lt;p&gt;It is possible that the other 4 methods in PropertyInfo are never referenced by&lt;br/&gt;
any of the other Derby code.&lt;/p&gt;

&lt;p&gt;Another interesting thing is the class&lt;br/&gt;
org.apache.derbyTesting.functionTests.util.TestPropertyInfo&lt;/p&gt;

&lt;p&gt;The TestPropertyInfo class appears to be almost a duplicate of the PropertyInfo class.&lt;/p&gt;

&lt;p&gt;The comment of TestPropertyInfo.java says:&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This class extends PropertyInfo to provide support for viewing ALL&lt;/li&gt;
	&lt;li&gt;table/index properties, not just the user-visible ones.&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;However, this is not true: TestPropertyInfo does NOT extend PropertyInfo.&lt;/p&gt;

&lt;p&gt;Also, even though TestPropertyInfo&apos;s name and source tree location implies&lt;br/&gt;
that it is part of the Derby regression tests, I don&apos;t think it is actually part&lt;br/&gt;
of the live Derby test suites that are run regularly:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;TestPropertyInfo is not a JUnit test class or suite&lt;/li&gt;
	&lt;li&gt;TestPropertyInfo does not appear in any of the RunSuite test suites&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, for now, these two classes are a puzzle to me, and further study is needed.&lt;/p&gt;</comment>
                            <comment id="13684252" author="bryanpendleton" created="Sat, 15 Jun 2013 19:17:57 +0100"  >&lt;p&gt;Here are a number of possibilities we should consider:&lt;/p&gt;

&lt;p&gt;1) Perhaps the other 4 methods in PropertyInfo are unused and unwanted. Then&lt;br/&gt;
   we should remove those methods from the class, and just leave SetDatabaseProperty&lt;br/&gt;
2) Perhaps the other 4 methods in PropertyInfo are useful, but aren&apos;t currently&lt;br/&gt;
   very accessible. Perhaps we should add additional methods into the system procedures,&lt;br/&gt;
   mimicing &lt;a href=&quot;http://db.apache.org/derby/docs/10.10/ref/rrefsetdbpropproc.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.10/ref/rrefsetdbpropproc.html&lt;/a&gt; so that&lt;br/&gt;
   applications can access those methods&lt;br/&gt;
3) Perhaps the other 4 methods in PropertyInfo are useful, and can be called just as is,&lt;br/&gt;
   possibly from a trigger or other server-side JDBC call. If so, we should figure out how&lt;br/&gt;
   to add test cases for those methods so that we have test coverage&lt;/p&gt;

&lt;p&gt;Regarding TestPropertyInfo, the following possibilities come to mind:&lt;br/&gt;
1) Perhaps this class is wholly unnecessary, and should be removed&lt;br/&gt;
2) Perhaps this class is in fact invoked by our current regression test suites,&lt;br/&gt;
   and I just don&apos;t understand how.&lt;br/&gt;
3) If the class is useful, it should presumably be converted to a JUnit test and&lt;br/&gt;
   run in our JUnit test suites&lt;br/&gt;
4) Should the class somehow subclass the PropertyInfo class, as the&lt;br/&gt;
   comment implies?&lt;/p&gt;</comment>
                            <comment id="13685643" author="ahsancse" created="Mon, 17 Jun 2013 16:15:17 +0100"  >&lt;p&gt;Hi ,&lt;br/&gt;
I have gone through  &lt;a href=&quot;https://builds.apache.org/job/Derby-trunk/lastSuccessfulBuild/artifact/trunk/javadoc/engine/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Derby-trunk/lastSuccessfulBuild/artifact/trunk/javadoc/engine/index.html&lt;/a&gt;   and  &lt;a href=&quot;https://builds.apache.org/job/Derby-trunk/lastSuccessfulBuild/artifact/trunk/javadoc/engine/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Derby-trunk/lastSuccessfulBuild/artifact/trunk/javadoc/engine/index.html&lt;/a&gt; . It seems like TestPropertyinfo.class is unwanted. Is there any other supportive documents or materials to learn this issue? &lt;/p&gt;</comment>
                            <comment id="13686396" author="dagw" created="Tue, 18 Jun 2013 06:05:44 +0100"  >&lt;p&gt;This class ties into the investigation Rick did on how Derby chooses what values to use based on the different property mechanisms, cf. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6220&quot; title=&quot;Provide a way for users to determine the value of a Derby property&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6220&quot;&gt;DERBY-6220&lt;/a&gt;. Probably it duplicates the logic in the engine with the intention of having two separate implementations to better tests the functioning of the engine behavior.&lt;/p&gt;

&lt;p&gt;I believe it is used, e.g. in functionTests/tests/tools/dblook_makeDB.sql, in lang.SystemCatalogTest and in store/databaseProperties.sql.&lt;/p&gt;</comment>
                            <comment id="13686691" author="rhillegas" created="Tue, 18 Jun 2013 14:18:45 +0100"  >&lt;p&gt;Concerning PropertyInfo: The header comment of this class uses the term &quot;SQL-J&quot;. That was the original name for the Cloudscape SQL dialect fifteen years ago. That suggests that this code is very old indeed. According to the header comment, the methods are meant to be called by user-written functions and procedures.&lt;/p&gt;

&lt;p&gt;At one point you could have registered these methods as functions. However, due to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2330&quot; title=&quot;Disallow user-defined SQL routines to resolve to entry points (methods in classes) in the org.apache.derby.* namespace&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2330&quot;&gt;&lt;del&gt;DERBY-2330&lt;/del&gt;&lt;/a&gt;, you can&apos;t do that anymore. Nevertheless, you can subvert the intent of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2330&quot; title=&quot;Disallow user-defined SQL routines to resolve to entry points (methods in classes) in the org.apache.derby.* namespace&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2330&quot;&gt;&lt;del&gt;DERBY-2330&lt;/del&gt;&lt;/a&gt; by writing your own static methods which forward to the PropertyInfo methods. E.g., you could write this class...&lt;/p&gt;

&lt;p&gt;import java.sql.SQLException;&lt;br/&gt;
import java.util.Properties;&lt;br/&gt;
import org.apache.derby.iapi.db.PropertyInfo;&lt;/p&gt;

&lt;p&gt;public  class   zz&lt;br/&gt;
{&lt;br/&gt;
    public  static  Properties  getTableProperties( String schemaName, String tableName )&lt;br/&gt;
        throws SQLException&lt;/p&gt;
    {
        return PropertyInfo.getTableProperties( schemaName, tableName );
    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;...and then run this ij script...&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:db;create=true&apos;;&lt;/p&gt;

&lt;p&gt;create type Properties external name &apos;java.util.Properties&apos; language java;&lt;/p&gt;

&lt;p&gt;create function getTableProperties( schemaName varchar( 32672 ), tableName varchar( 32672 ) )&lt;br/&gt;
returns Properties&lt;br/&gt;
language java parameter style java contains sql&lt;br/&gt;
external name &apos;zz.getTableProperties&apos;;&lt;/p&gt;

&lt;p&gt;values getTableProperties( &apos;SYS&apos;, &apos;SYSTABLES&apos; );&lt;/p&gt;

&lt;p&gt;But PropertyInfo is not part of the public api. Whatever guarantees Cloudscape might have given, Derby does not support the use of these methods by customer-written code. I would be comfortable with either of the following options:&lt;/p&gt;

&lt;p&gt;i) Remove the unused methods.&lt;/p&gt;

&lt;p&gt;ii) Write JUnit tests which register and exercise the wrapping functions, as shown above.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13686889" author="myrna" created="Tue, 18 Jun 2013 17:18:57 +0100"  >&lt;p&gt;Looks like the class TestPropertyInfo was just created to get info about &lt;b&gt;all&lt;/b&gt; the properties, as opposed to what one gets from org.apache.derby.iapi.db.PropertyInfo. I think initially it was only used in syscat.sql (later converted (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2484&quot; title=&quot;Convert syscat.sql to junit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2484&quot;&gt;&lt;del&gt;DERBY-2484&lt;/del&gt;&lt;/a&gt;) to lang.SystemCatalogTest). It is now, as Dag said, also used in 2 further tests.&lt;/p&gt;

&lt;p&gt;I tracked the original create comment in the cloudscape source (by Rick, back in 1998) and it says:&lt;br/&gt;
&quot;make PropertyInfo only reveal user-visible conglomerate properties; create new class TestPropertyInfo to reveal ALL conglomerate properties.&quot;&lt;/p&gt;

&lt;p&gt;Often, especially in older (.sql) tests, methods are used in procedures or functions, so just doing a class or method search in an IDE is not sufficient to find whether a class (especially one from the functionTests.util directory) is being used.&lt;/p&gt;</comment>
                            <comment id="13688848" author="bryanpendleton" created="Thu, 20 Jun 2013 05:03:03 +0100"  >&lt;p&gt;Hi Ahsan,&lt;/p&gt;

&lt;p&gt;I agree, it is not obvious what is best to do here. I think that we should:&lt;br/&gt;
1) Leave TestPropertyInfo alone. It is used by several tests, and is not a problem.&lt;br/&gt;
    As Myrna pointed out, my initial code search was incomplete and I didn&apos;t&lt;br/&gt;
    find those references, but I see them now.&lt;br/&gt;
2) Remove the 4 unused methods from the PropertyInfo class. As Rick points&lt;br/&gt;
   out, they are not part of the Derby public API at this time.&lt;/p&gt;

&lt;p&gt;If, at some point in the future, the community wishes to revive the methods&lt;br/&gt;
in the PropertyInfo class, they will still be present in the SVN history for us&lt;br/&gt;
to go back and review them.&lt;/p&gt;

&lt;p&gt;So, can you prepare a patch which removes the 4 unused methods from&lt;br/&gt;
PropertyInfo? Here is some good advice about preparing patch proposals:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/PatchAdvice&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/PatchAdvice&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13688869" author="ahsancse" created="Thu, 20 Jun 2013 05:55:46 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;The Propertyinfo class  have only 4 methods. 3 public and 1 private method. But all are unused.So, you mean to create a patch to remove all ?&lt;/p&gt;</comment>
                            <comment id="13689689" author="bryanpendleton" created="Thu, 20 Jun 2013 22:23:23 +0100"  >&lt;p&gt;I am looking at: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/coverage/_files/11e.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/coverage/_files/11e.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The unused methods are: getConglomerateProperties, getIndexProperties, and&lt;br/&gt;
getTableProperties &amp;#8211; these are the unused methods that I think we should&lt;br/&gt;
remove. There are only three such methods; I was confused and thought there&lt;br/&gt;
were 4 methods because the Emma tool noticed that the system-generated&lt;br/&gt;
default constructor PropertyInfo() is also unused, but since that method is&lt;br/&gt;
system-generated, I don&apos;t think we need to do anything about that.&lt;/p&gt;

&lt;p&gt;The setDatabaseProperty() method, however, is used, and so we should keep it.&lt;/p&gt;</comment>
                            <comment id="13693875" author="ahsancse" created="Wed, 26 Jun 2013 10:46:17 +0100"  >&lt;p&gt;The patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6264&quot; title=&quot;Improve test coverage of org.apache.derby.iapi.db.PropertyInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6264&quot;&gt;&lt;del&gt;DERBY-6264&lt;/del&gt;&lt;/a&gt; Removes some unused methods from org.apache.derby.iapi.db.PropertyInfo .&lt;/p&gt;</comment>
                            <comment id="13693887" author="ahsancse" created="Wed, 26 Jun 2013 11:17:50 +0100"  >&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;According to EMMA coverage report setDatabaseProperty() method in org.apache.derby.iapi.db.PropertyInfo  has full code coverage. Are there any other improvements needed to the classes ? &lt;/p&gt;</comment>
                            <comment id="13693962" author="bryanpendleton" created="Wed, 26 Jun 2013 14:44:06 +0100"  >&lt;p&gt;Thanks Ahsan, this looks great! I&apos;ll review this patch and see if it&apos;s ready for commit.&lt;/p&gt;</comment>
                            <comment id="13694463" author="jira-bot" created="Thu, 27 Jun 2013 04:58:39 +0100"  >&lt;p&gt;Commit 1497205 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bryanpendleton&quot; class=&quot;user-hover&quot; rel=&quot;bryanpendleton&quot;&gt;Bryan Pendleton&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497205&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497205&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6264&quot; title=&quot;Improve test coverage of org.apache.derby.iapi.db.PropertyInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6264&quot;&gt;&lt;del&gt;DERBY-6264&lt;/del&gt;&lt;/a&gt;: Improve test coverage of org.apache.derby.iapi.db.PropertyInfo&lt;/p&gt;

&lt;p&gt;This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)&lt;/p&gt;

&lt;p&gt;This patch removes several unused methods from the PropertyInfo class. These&lt;br/&gt;
classes were part of the original Cloudscape SQL-J language many years ago,&lt;br/&gt;
but are not used in Derby.&lt;/p&gt;

&lt;p&gt;Removing the unused methods simplifies the class. Should we ever decide to&lt;br/&gt;
revive the features of the SQL-J language, we can recover these methods from&lt;br/&gt;
the older versions of the class in Subversion.&lt;/p&gt;</comment>
                            <comment id="13694464" author="bryanpendleton" created="Thu, 27 Jun 2013 04:59:41 +0100"  >&lt;p&gt;The patch looks fine to me, and matches our discussion. I built with the&lt;br/&gt;
patch and ran some tests and all seems well, so I committed revision 1497205.&lt;/p&gt;

&lt;p&gt;Ahsan, thank you for the contribution.&lt;/p&gt;</comment>
                            <comment id="14119618" author="knutanders" created="Wed, 3 Sep 2014 09:31:39 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12589730" name="DERBY-6264.patch" size="6003" author="ahsancse" created="Wed, 26 Jun 2013 10:46:17 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Jun 2013 15:15:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>333355</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzfckv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>333683</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>