<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-944/DERBY-944.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-944] Code ROWID methods for JDBC4 support</title>
                <link>https://issues.apache.org/jira/browse/DERBY-944</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;As described in the JDBC4 spec sections 19 and 3.1.&lt;/p&gt;

&lt;p&gt;Derby does not support a stable ROWID datatype and we will not build this for release 10.2. The JDBC layer must report that Derby does not support this functionality. This involves stubbing out the RowId methods in DatabaseMetaData, ResultSet, PreparedStatement, and CallableStatement.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12328832">DERBY-944</key>
            <summary>Code ROWID methods for JDBC4 support</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Sat, 11 Feb 2006 06:34:45 +0000</created>
                <updated>Wed, 1 Jul 2009 01:34:29 +0100</updated>
                            <resolved>Fri, 26 May 2006 14:17:08 +0100</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12366226" author="rhillegas" created="Tue, 14 Feb 2006 03:33:53 +0000"  >&lt;p&gt;Here is section 19 of the JDBC 4 spec:&lt;/p&gt;

&lt;p&gt;175&lt;br/&gt;
This chapter describes the RowId data type that represents the SQL ROWID value in&lt;br/&gt;
the Java programming language. A SQL ROWID is a built in type, as a value can be&lt;br/&gt;
thought of as an address for a row in a SQL database table.&lt;br/&gt;
19.1 Lifetime of RowId Validity&lt;br/&gt;
The address may be logical or physical, however this is determined by the originating data&lt;br/&gt;
source. A RowId object may be valid so long as the identified row is not deleted&lt;br/&gt;
and the lifetime of the RowId is within the bounds of the lifetime specified by that&lt;br/&gt;
RowId&apos;s data source.&lt;br/&gt;
RowId object lifetime valdity may be determined by calling the&lt;br/&gt;
DatabaseMetaData.getRowIdLifetime() method, which returns a value of the&lt;br/&gt;
RowIdLifetime enumerated data-type.&lt;br/&gt;
TABLE 19-1 Standard RowId life-time validities&lt;br/&gt;
RowIdLifeTime Enumerated Datatype Specification&lt;br/&gt;
ROWID_UNSUPPORTED Indicates that this data source does not support the&lt;br/&gt;
ROWID type.&lt;br/&gt;
ROWID_VALID_OTHER Indicates that the lifetime of a RowId from this data&lt;br/&gt;
source is implentation dependant.&lt;br/&gt;
176 JDBC 4.0 Specification ? October 2005&lt;br/&gt;
19.2 Retrieving RowId Values&lt;br/&gt;
A RowId may be retrieved using the getter methods defined in ResultSet and&lt;br/&gt;
CallableStatement. The returned java.sql.RowId object that is returned is an&lt;br/&gt;
immutable object that can be used for subsequent referrals as a unique identifier to a&lt;br/&gt;
row.&lt;br/&gt;
java.sql.RowId rowId_1 = rs.getRowId(1);&lt;br/&gt;
CODE EXAMPLE 19-1 Retrieving a RowId for a ResultSet object, rs&lt;br/&gt;
19.3 Using RowId Values&lt;br/&gt;
A RowId value may be used in a parameterized PreparedStatement to set a&lt;br/&gt;
parameter with a RowId object.&lt;br/&gt;
Connection conn = ds.getConnection(user, passwd);&lt;br/&gt;
PreparedStatement ps = conn.prepareStatement(&quot;INSERT INTO BOOKLIST&quot; +&lt;br/&gt;
&quot;(ID, AUTHOR, TITLE, ISBN) VALUES (?, ?, ?,&lt;br/&gt;
?)&quot;);&lt;br/&gt;
ps.setRowId(1, rowId_1);&lt;br/&gt;
CODE EXAMPLE 19-2 Setting a PreparedStatement RowId parameter&lt;br/&gt;
A RowId value may also be used in an updatable ResultSet to update a column with&lt;br/&gt;
a specific RowId value.&lt;br/&gt;
ROWID_VALID_TRANSACTION Indicates that the lifetime of a RowId from this data&lt;br/&gt;
source is at least the containing transaction as long&lt;br/&gt;
as the identified row is not deleted.&lt;br/&gt;
ROWID_VALID_SESSION Indicates that the lifetime of a RowId from this data&lt;br/&gt;
source is at least the containing session as long as&lt;br/&gt;
the identified row is not deleted.&lt;br/&gt;
ROWID_VALID_FOREVER Indicates that the lifetime of a RowId from this data&lt;br/&gt;
source is, effectively, unlimited as long as the&lt;br/&gt;
identified row is not deleted.&lt;br/&gt;
TABLE 19-1 Standard RowId life-time validities&lt;br/&gt;
RowIdLifeTime Enumerated Datatype Specification&lt;br/&gt;
ResultSet rs = ...&lt;br/&gt;
rs.next();&lt;br/&gt;
rs.updateRowId(1, rowId_1);&lt;br/&gt;
CODE EXAMPLE 19-3 Setting a RowId value in the current row of a ResultSet&lt;br/&gt;
A RowId object value is typically not portable between data sources and should be&lt;br/&gt;
considered as specific to the data source when using the set or update method in&lt;br/&gt;
PreparedStatement and ResultSet objects respectively. It is therefore&lt;br/&gt;
inadvisable to use a RowId retrieved from a ResultSet object with a connection&lt;br/&gt;
&apos;Foo&apos; and then attempt to use the RowId in a unrelated ResultSet object with a&lt;br/&gt;
connection &apos;Bar&apos;.&lt;/p&gt;</comment>
                            <comment id="12372094" author="kristwaa" created="Tue, 28 Mar 2006 19:56:21 +0100"  >&lt;p&gt;Submitted tests for checking that methods related to RowId return the correct values or throw the correct exceptions.&lt;br/&gt;
Converted some existing tests to Junit, and added &quot;RowIdNotImplementedTest.junit&quot; to the jdbc40 suite.&lt;/p&gt;

&lt;p&gt;The JavaDoc patch is for EmbedRowId. It is just a &quot;shell&quot;, and I put it in a separate diff since I am not sure if we want to have it or not.&lt;/p&gt;

&lt;p&gt;Test runs under both embedded and DerbyNetClient without failures (JDK 1.6).&lt;/p&gt;

&lt;p&gt;Unless I have forgotten something, I do not plan to do more on this issue. Please review/commit patch.&lt;/p&gt;</comment>
                            <comment id="12372136" author="rhillegas" created="Wed, 29 Mar 2006 04:31:18 +0100"  >&lt;p&gt;I applied &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-944&quot; title=&quot;Code ROWID methods for JDBC4 support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-944&quot;&gt;&lt;del&gt;DERBY-944&lt;/del&gt;&lt;/a&gt;-tests.diff. The jdbc4 tests run cleanly modulo the expected diff in StatementTest. I committed this patch at subversion revision 389571.&lt;/p&gt;</comment>
                            <comment id="12413374" author="kristwaa" created="Fri, 26 May 2006 14:17:08 +0100"  >&lt;p&gt;Closing issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12324661" name="DERBY-944-javadoc.diff" size="1567" author="kristwaa" created="Tue, 28 Mar 2006 19:56:21 +0100"/>
                            <attachment id="12324662" name="DERBY-944-tests.diff" size="21848" author="kristwaa" created="Tue, 28 Mar 2006 19:56:21 +0100"/>
                            <attachment id="12324660" name="DERBY-944.stat" size="836" author="kristwaa" created="Tue, 28 Mar 2006 19:56:21 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 28 Mar 2006 18:56:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29794</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0t5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38542</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>