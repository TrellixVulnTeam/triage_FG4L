<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-900/DERBY-900.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-900] Remove use of String(byte[]) and String(byte[], int, int) constructors in network client leading to non-portable behaviour</title>
                <link>https://issues.apache.org/jira/browse/DERBY-900</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;These constructors use the Java default platform encoding to convert the bytes to a String, this typically leads to bugs on platforms with different encodings.&lt;/p&gt;

&lt;p&gt;Replace with code using fixed conversion, or alternative mechanisms. &lt;br/&gt;
If the call is required its use should be commented as to why it is required.&lt;/p&gt;

&lt;p&gt;org.apache.derby.client.am.ClobOutputStream - some existing bug?&lt;br/&gt;
org.apache.derby.client.am.DateTime - see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-877&quot; title=&quot;zOS - with DerbyClient getDate(#) fails with IllegalArgumentException - unsupported date format - resultset.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-877&quot;&gt;&lt;del&gt;DERBY-877&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
org.apache.derby.client.am.sqlca&lt;/p&gt;

&lt;p&gt;I generated this list using the Java search in eclipse for references to the constructors&lt;br/&gt;
String(byte[])&lt;br/&gt;
String(byte[],int,int)&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12328363">DERBY-900</key>
            <summary>Remove use of String(byte[]) and String(byte[], int, int) constructors in network client leading to non-portable behaviour</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Feb 2006 05:49:54 +0000</created>
                <updated>Tue, 20 Mar 2007 23:37:00 +0000</updated>
                            <resolved>Fri, 19 May 2006 00:38:52 +0100</resolved>
                                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12364714" author="deepa" created="Wed, 1 Feb 2006 06:10:48 +0000"  >&lt;p&gt;org.apache.derby.client.am.ClobOutputStream -  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-683&quot; title=&quot;Use correct encoding for ClobOutputStream on client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-683&quot;&gt;&lt;del&gt;DERBY-683&lt;/del&gt;&lt;/a&gt; is open for this&lt;/p&gt;</comment>
                            <comment id="12374125" author="skambha" created="Wed, 12 Apr 2006 10:52:48 +0100"  >&lt;p&gt;This patch (derby900.diff.p1.txt and derby900.stat.p1.txt ) is for the trunk, and  focuses on fixing the usage of default string constructors in the client that can cause encoding problems.   &lt;/p&gt;

&lt;p&gt;I searched in Eclipse for the String(byte[]) and String(byte[],int,int)  constructors and in the current codeline there is one such method in sqlca.java#bytes2String which is used in about 7 places. &lt;/p&gt;

&lt;p&gt;Please note, there are some more encoding issues as Kathey points out in  &lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-877#action_12364297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-877#action_12364297&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-951&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-951&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I discussed with Kathey on IRC yesterday.&lt;br/&gt;
&amp;#8211; String.getBytes() is used in a number of places (DateTime,NetConnectionReply) which will need to be fixed. &lt;br/&gt;
&amp;#8211; Server always sends UTF8 encoding for the SQLCARD strings, hence the bytes2String method needs to correctly use UTF8 encoding to decode the strings.&lt;/p&gt;

&lt;p&gt;This fix&lt;br/&gt;
&amp;#8211; use UTF8 encoding in bytes2String.&lt;/p&gt;

&lt;p&gt;Tests:&lt;br/&gt;
I have used the repro for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-583&quot; title=&quot;networkserver does not return error message strings in native encoding to ij on zseries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-583&quot;&gt;&lt;del&gt;DERBY-583&lt;/del&gt;&lt;/a&gt; (Thanks Kathey) that uses lang/ConcurrentImplicitCreateSchema.java that shows the problem. I have also added this test to run as part of the encodingTests in trunk.&lt;/p&gt;

&lt;p&gt;To repro on windows, &lt;br/&gt;
java -Dframework=DerbyNetClient -DderbyTesting.encoding=UTF-16 org.apache.derbyTesting.functionTests.harness.RunTest lang/ConcurrentImplicitCreateSchema.java&lt;/p&gt;

&lt;p&gt;Results: &lt;br/&gt;
without this fix, the exception sqlstate is all garbled up.&lt;br/&gt;
with this fix, the test should pass without any diff.&lt;/p&gt;

&lt;p&gt;Ran derbyall with the patch on linux/ibm142 with no new failures ( insane jars)&lt;/p&gt;

&lt;p&gt;I am continuing to look at the other encoding issues.   Please review/commit this patch if it looks good. Thanks.  &lt;/p&gt;</comment>
                            <comment id="12374126" author="skambha" created="Wed, 12 Apr 2006 11:15:07 +0100"  >&lt;p&gt;I am attaching the patch for 10.1 codeline-  &apos; for_10.1_derby900.diff.p1.txt&apos; and &apos;for_10.1_derby900.stat.p1.txt.&apos; &lt;/p&gt;

&lt;p&gt;The code changes are the same as in the derby900.diff.p1.txt.  &lt;br/&gt;
Thus, the fix &lt;br/&gt;
&amp;#8211; uses UTF8 encoding in bytes2String.&lt;/p&gt;

&lt;p&gt;But for the 10.1 codeline since derbyTesting.encoding property is not there, I am attaching a standalone repro &apos;TestEnc.java&apos; for testing.&lt;/p&gt;

&lt;p&gt;OUTPUT for 10.1 &lt;br/&gt;
$ java -cp &quot;C:/workghm/svnclient/ks10.1/classes;.&quot; -Dfile.encoding=UTF-16 -Dconsole.encoding=Cp1252 TestEnc&lt;br/&gt;
Initializing connection type: derbynetclient&lt;br/&gt;
driver: org.apache.derby.jdbc.ClientDriver&lt;br/&gt;
url: jdbc:derby://localhost:1527/wombatderbynetclient;create=true;traceFile=derbynetclient.trace&lt;br/&gt;
Obtaining the connection&lt;br/&gt;
Database: Apache Derby 10.1.2.4&lt;br/&gt;
   T E S T   P A S S E D&lt;br/&gt;
 g o t   S Q L S t a t e   4 2 Y 0 7&lt;br/&gt;
 e = S c h e m a   &apos; T E S T S C H E M A 1 &apos;   d o e s   n o t   e x i s t&lt;/p&gt;

&lt;p&gt;----------------------&lt;br/&gt;
Ran derbynetclientmats with patch on linux/ibm142. Apart from the known failures, the test lang/ConcurrentImplicitCreateSchema failed with the timeout exception (Note - this test was fixed for the timeout issue on trunk). This failure is not related to this patch.&lt;/p&gt;

&lt;p&gt;Can someone please review/commit this patch.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12374978" author="skambha" created="Wed, 19 Apr 2006 02:54:24 +0100"  >&lt;p&gt;I am attaching a patch &apos;derby900.test.diff.txt, derby900.test.stat.txt&apos;  that affects only tests. &lt;/p&gt;

&lt;p&gt;Changes are&lt;br/&gt;
&amp;#8211; remove the ConcurrentImplicitCreateSchema from the encodingTests suite. We dont run the ConcurrentImplicitCreateSchema test on trunk(10.2) because it has a high rate of failure on different platforms.&lt;br/&gt;
&amp;#8211; add a new test (TestEnc) that repros the derby-583 and the issues that are fixed as a result of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-900&quot; title=&quot;Remove use of String(byte[]) and String(byte[], int, int) constructors in network client leading to non-portable behaviour&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-900&quot;&gt;&lt;del&gt;DERBY-900&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-901&quot; title=&quot;Remove use of String(byte[]) constructors in network server leading to non-portable behaviour&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-901&quot;&gt;&lt;del&gt;DERBY-901&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-902&quot; title=&quot;Remove use of String(byte[]) and String(byte[], int, int) constructors in engine leading to non-portable behaviour&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-902&quot;&gt;&lt;del&gt;DERBY-902&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I ran the encodingTests suite with jdk15 and tests passed OK.  &lt;/p&gt;

&lt;p&gt;Can someone please review and commit this patch. Thanks. &lt;/p&gt;

</comment>
                            <comment id="12374979" author="skambha" created="Wed, 19 Apr 2006 02:56:16 +0100"  >&lt;p&gt;one pending patch for review/commit - derby900.test.diff.txt.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12376311" author="skambha" created="Wed, 26 Apr 2006 02:24:20 +0100"  >&lt;p&gt;With the changes checked in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1127&quot; title=&quot;client gives SqlException for test callable.java and parameterMapping.java on zOS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1127&quot;&gt;&lt;del&gt;DERBY-1127&lt;/del&gt;&lt;/a&gt;, now, there are 3 places where non portable String.getBytes() is used in client which is in NetConnectionReply.parseSQLDCGRP&lt;/p&gt;

&lt;p&gt;This patch(Derby900.p2.diff.txt)  removes use of this non portable method from the client and does some cleanup as part of removing usage of the String.getBytes() method.&lt;/p&gt;


&lt;p&gt;Explanation of changes :&lt;br/&gt;
&amp;#8211; Server sends SQLSTATE in UTF8 encoding.&lt;/p&gt;

&lt;p&gt;&amp;#8211; see below code snippet ( taken from parseSQLDCGRP )&lt;br/&gt;
       int sqldcCode = readFastInt(); // SQLCODE&lt;br/&gt;
**********&lt;br/&gt;
        String sqldcState = readFastString(5, netAgent_.targetTypdef_.getCcsidSbcEncoding()); // SQLSTATE&lt;br/&gt;
***********&lt;br/&gt;
        int sqldcReason = readFastInt();  // REASON_CODE&lt;br/&gt;
        int sqldcLinen = readFastInt(); // LINE_NUMBER&lt;br/&gt;
        int sqldcRown = (int) readFastLong(); // ROW_NUMBER&lt;/p&gt;

&lt;p&gt;        // save +20237 in the 0th entry of the rowsetSqlca&apos;s.&lt;br/&gt;
        // this info is going to be used when a subsequent fetch prior is issued, and if already&lt;br/&gt;
        // received a +20237 then we&apos;ve gone beyond the first row and there is no need to&lt;br/&gt;
        // flow another fetch to the server.&lt;br/&gt;
        if (sqldcCode == 20237) {&lt;br/&gt;
            rowsetSqlca&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = new NetSqlca(netAgent_.netConnection_,&lt;br/&gt;
                    sqldcCode,&lt;br/&gt;
                    sqldcState.getBytes(),   //************&lt;br/&gt;
                    null,&lt;br/&gt;
                    netAgent_.targetTypdef_.getCcsidSbc());&lt;/p&gt;


&lt;p&gt;Basically the sqldcState is read using UTF8 or netAgent_.targetTypdef_.getCcsidSbcEncoding() and converted to a String and &lt;br/&gt;
then converted back to bytes using the bad non portable getBytes().  In NetSqlca, the sqldcState bytes and ccsid is passed in. The sqlstate bytes is set to sqldcState_ in NetSqlca and it is decoded using UTF8 in getSQLState using the method Sqlca::bytes2String.&lt;/p&gt;

&lt;p&gt;In short, the getBytes() should take UTF-8 encoding but it seems much cleaner to do the cleanup here to avoid doing the extra conversion. currently conversion happens from bytes to string, and then to bytes and then back to string.   &lt;/p&gt;

&lt;p&gt;Cleanup includes:&lt;br/&gt;
--The ccsid in NetSqlca is never used and I have cleaned that up.&lt;br/&gt;
--NetSqlca takes in sqlstate as bytes and then is converted to string. Instead since we have a string available already, there is no need of an extra conversion as seen in code snippet above.  I have changed the NetSqlca constructor to take in &lt;br/&gt;
the sqlstate as String.&lt;br/&gt;
&amp;#8211; There is one place where the sqlstate is retrieved as bytes and passed to the NetSqlca constructor as such. I have overloaded the NetSqlca constructor to take in the sqlstate bytes and convert it to a string in the constructor itself.&lt;br/&gt;
&amp;#8211; cleaned up Sqlca.getSQLState()&lt;/p&gt;

&lt;p&gt;&amp;#8211; During the cleanup one thing odd was all or most of the method signatures in this codepath have a throws DisconnectException even though some of them do not have any code that would throw this exception. In any case I have not cleaned those instances as I think it might be better to address them separately from this patch/issue.&lt;br/&gt;
&amp;#8211; The NetSqlca constructor that does the conversion of the sqlstate bytes to string will throw a unsupportedencodingException that is thrown as a SqlException. This SqlException is wrapped into a DisconnectException in parseSQLCAGRP.  I followed the same approach as Reply.readFastString() that wraps the UnsupportedEncodingException into a DisconnectException. &lt;/p&gt;

&lt;p&gt;I think lots more encoding related cleanup can be done in client, but I will leave that for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-951&quot; title=&quot;Change network client code to be more clear that it only supports Network Server&amp;#39;s encoding for Fdoca data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-951&quot;&gt;DERBY-951&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a client only change and I ran derbynetclientmats on windows/jdk142 ok. I also ran derbynetclientmats and derbynetmats on Z/OS with no new failures.  &lt;br/&gt;
I also ran the encodingTests with sun jdk1.5 OK.&lt;/p&gt;

&lt;p&gt;Can someone please look at this change. Thanks. &lt;/p&gt;</comment>
                            <comment id="12376551" author="kmarsden" created="Thu, 27 Apr 2006 05:06:50 +0100"  >&lt;p&gt;I am trying to understand the type of case that would cover the code changed and trigger the encoding problem.    Do you have any idea what that case might be?&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12376567" author="skambha" created="Thu, 27 Apr 2006 05:49:26 +0100"  >&lt;p&gt;I dont have a testcase available to repro for the p2 patch changes.   Let me look more to see if I can get one.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12376759" author="skambha" created="Fri, 28 Apr 2006 00:40:47 +0100"  >&lt;p&gt;The non portable String.getBytes() is used in parseSQLDCGRP as explained earlier.  This method is called by parseSQLDCROW which is called by parseSQLDIAGCI.&lt;/p&gt;

&lt;p&gt;Client flow is as follows:&lt;br/&gt;
parseSQLDIAGCI -&amp;gt; parseSQLDCROW -&amp;gt;parseSQLDCGRP&lt;/p&gt;


&lt;p&gt;But the server currently does not send SQLDIAGCI.  The only method that calls writeSQLDIAGCI is in writeSQLDIAGGRP (which is currently commented out code). writeSQLDIAGGRP is called by writeSQLCAXGRP.&lt;/p&gt;

&lt;p&gt;In DRDARConnThread.writeSQLDIAGGRP we only write null data and the callto writeSQLDIAGCI is commented out. &lt;/p&gt;

&lt;p&gt;I tried to see if I could uncomment this code in writeSQLDIAGGRP  so I can get a repro, but then it seems like the other methods like writeSQLDIAGSTT also will need to be implemented correctly. The writeSQLDIAGSTT method just returns a null data for now.  &lt;/p&gt;

&lt;p&gt;In short, the encoding changes made in parseSQLDCGRP in client is not currently being used.&lt;/p&gt;

&lt;p&gt;The p2 changes are fairly straightforward if you dont include the cleanup changes.&lt;br/&gt;
In parseSQLDCGRP ,&lt;br/&gt;
sqldcState is read, and then sent across to NetSqlca constructor using getBytes(). The encoding to be used is UTF8 since that is what the server sends.&lt;/p&gt;

&lt;p&gt;String sqldcState = readFastString(5, netAgent_.targetTypdef_.getCcsidSbcEncoding()); // SQLSTATE &lt;br/&gt;
// note netAgent_.targetTypdef_.getCcsidSbcEncoding() is UTF8.&lt;/p&gt;

&lt;p&gt;If you feel comfortable with just change to remove the getBytes() to use UTF8 encoding without the cleanup, then I can submit a patch with just that change. &lt;/p&gt;

&lt;p&gt;If you have any ideas or suggestions to repro this, please let me know.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12376829" author="skambha" created="Fri, 28 Apr 2006 06:18:42 +0100"  >&lt;p&gt;I am dividing the Derby900.p2.diff.txt into two separate patches after talking to kathey.  &lt;/p&gt;

&lt;p&gt;This patch derby900.p2_encodingChange.diff.txt  makes the encoding related change to remove the non portable String.getBytes() method. &lt;/p&gt;

&lt;p&gt;&amp;#8211; use correct encoding UTF8 for sqlstate in NetConnectionReply.::parseSQLDCGRP(Sqlca[] rowsetSqlca, int lastRow) &lt;/p&gt;

&lt;p&gt;Note: this code does not get exercised anywhere as explained in previous comment. Also code coverage results shows that this method is not called anywhere in our tests. &lt;/p&gt;

&lt;p&gt;svn stat&lt;br/&gt;
M      java\client\org\apache\derby\client\net\NetConnectionReply.java&lt;/p&gt;

&lt;p&gt;derbynetclientmats ran ok on linux/ibm142. &lt;/p&gt;

&lt;p&gt;The change itself is pretty simple.  The diff for this patch shows  more lines as changed because of the indentation change as a result of adding a try block. &lt;/p&gt;

&lt;p&gt;Can someone please look at this patch. Thanks. &lt;/p&gt;</comment>
                            <comment id="12377473" author="skambha" created="Wed, 3 May 2006 05:11:37 +0100"  >&lt;p&gt;Thanks Kathey for committing my earlier p2 encoding change patch. &lt;/p&gt;

&lt;p&gt;It was decided earlier to break up the derby900.p2.diff.txt, so I am attaching now a patch with the cleanup changes separately in derby900_p2_cleanup.diff.txt.  Changes are:&lt;/p&gt;

&lt;p&gt;&amp;#8211;  remove unnecessary conversion from sqlstate string to bytes and  back to string , in parseSQLDCGRP(Sqlca[] rowsetSqlca, int lastRow)  in NetConnectionReply.&lt;br/&gt;
This has been done by adding a  constructor in NetSqlca to take in the sqlstate as string.    &lt;br/&gt;
&amp;#8211; cleanup method getSqlState() in Sqlca.&lt;br/&gt;
&amp;#8211; cleanup of ccsid_ in Sqlca as it is not used.&lt;/p&gt;

&lt;p&gt;Please note, the parseSQLDCGRP method in  the diff shows more changes because of  change in indentation because of removal of the try block.&lt;/p&gt;

&lt;p&gt;&amp;#8211; ran derbynetclientmats on ibm142/linux OK.&lt;/p&gt;

&lt;p&gt;Can someone please look at this.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12378993" author="kmarsden" created="Thu, 11 May 2006 07:20:30 +0100"  >&lt;p&gt;I applied the patch derby900_p2_cleanup.diff.txt&lt;br/&gt;
I had to merge some files after applying and then ran derbynetclientmats.&lt;br/&gt;
The test derbynet/testSecMec failed with client and on rerun.&lt;br/&gt;
I ran with &lt;/p&gt;

&lt;p&gt;java version &quot;1.4.2_07&quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_07-b05)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.4.2_07-b05, mixed mode)&lt;/p&gt;

&lt;p&gt;The tail end of the test seems to be cut off.  Attached is the test output.&lt;/p&gt;</comment>
                            <comment id="12378999" author="skambha" created="Thu, 11 May 2006 08:41:25 +0100"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;I synced up till about  yesterday as svn is down now and applied the p2 cleanup patch and ran the testSecMec.java with sun 1.4.2_07 and it works OK on my win2000 laptop.  I ran this test a couple of times and it passes OK.  The tmp file in testsecmec.zip seems to look like as though the test exited in between - this behavior seems to me like the one seen in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1114&quot; title=&quot;derbynet/testSecMec.java fails intermittently and test exits mysteriously when server is shutdown as part of the testrun.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1114&quot;&gt;&lt;del&gt;DERBY-1114&lt;/del&gt;&lt;/a&gt;.  The jvm bug described in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1114&quot; title=&quot;derbynet/testSecMec.java fails intermittently and test exits mysteriously when server is shutdown as part of the testrun.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1114&quot;&gt;&lt;del&gt;DERBY-1114&lt;/del&gt;&lt;/a&gt; is fixed in 1.5 and 1.4.2_08 atleast from the entries in the java bug database.   However, I didnt see windows platforms being mentioned anywhere in the java bug report. &lt;/p&gt;

&lt;p&gt;can you please try running the test without the patch and see if it passes or not. and if  the test passes with antoher jvm -jdk1.5. &lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12402417" author="skambha" created="Tue, 16 May 2006 04:43:11 +0100"  >&lt;p&gt;Thanks Kathey for committing the p2 cleanup patch on trunk..&lt;/p&gt;

&lt;p&gt;Also adding notes here about the testSecMec failure that Kathey mentioned in the previous comment.  It seems like that was related to her machine environment and probably a manifestation of same issue mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1114&quot; title=&quot;derbynet/testSecMec.java fails intermittently and test exits mysteriously when server is shutdown as part of the testrun.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1114&quot;&gt;&lt;del&gt;DERBY-1114&lt;/del&gt;&lt;/a&gt;.  Kathey mentioned that the test  failed without the patch on different jvms too.   &lt;br/&gt;
---------------------------------&lt;/p&gt;

&lt;p&gt;I would like the derby900.p2_encodingChange.diff.txt to be ported to 10.1. It is a clean merge.  The merge command is&lt;/p&gt;

&lt;p&gt;svn merge -r 398943:398944 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I merged and then ran derbynetclientmats on ibm142/linux ok. &lt;/p&gt;

&lt;p&gt;Can someone please commit this.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12412298" author="fuzzylogic" created="Thu, 18 May 2006 14:30:44 +0100"  >&lt;p&gt;Committed to 10.1 branch with revision 407473.&lt;/p&gt;</comment>
                            <comment id="12412299" author="fuzzylogic" created="Thu, 18 May 2006 14:31:49 +0100"  >&lt;p&gt;Sunitha, please close this issue as resolved if there is no further work to be done.&lt;/p&gt;</comment>
                            <comment id="12482603" author="djd" created="Tue, 20 Mar 2007 23:37:00 +0000"  >&lt;p&gt;Confirmed no use of these non-portable constructors in the network client code.&lt;/p&gt;

&lt;p&gt;Should remain assigned to Sunitha, but she is not present in the drop down list and it seems no way to leave the assign to field as-is.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12325851" name="Derby900.p2.diff.txt" size="7718" author="skambha" created="Wed, 26 Apr 2006 02:24:20 +0100"/>
                            <attachment id="12325222" name="TestEnc.java" size="7361" author="skambha" created="Wed, 12 Apr 2006 11:15:07 +0100"/>
                            <attachment id="12325217" name="derby900.diff.p1.txt" size="1840" author="skambha" created="Wed, 12 Apr 2006 10:52:48 +0100"/>
                            <attachment id="12325850" name="derby900.p2.stat.txt" size="255" author="skambha" created="Wed, 26 Apr 2006 02:24:20 +0100"/>
                            <attachment id="12325979" name="derby900.p2_encodingChange.diff.txt" size="3899" author="skambha" created="Fri, 28 Apr 2006 06:18:42 +0100"/>
                            <attachment id="12325218" name="derby900.stat.p1.txt" size="205" author="skambha" created="Wed, 12 Apr 2006 10:52:48 +0100"/>
                            <attachment id="12325512" name="derby900.test.diff.txt" size="4236" author="skambha" created="Wed, 19 Apr 2006 02:54:23 +0100"/>
                            <attachment id="12325513" name="derby900.test.stat.txt" size="252" author="skambha" created="Wed, 19 Apr 2006 02:54:24 +0100"/>
                            <attachment id="12326179" name="derby900_p2_cleanup.diff.txt" size="8696" author="skambha" created="Wed, 3 May 2006 05:11:37 +0100"/>
                            <attachment id="12326180" name="derby900_p2_cleanup.stat.txt" size="255" author="skambha" created="Wed, 3 May 2006 05:11:37 +0100"/>
                            <attachment id="12325220" name="for_10.1_derby900.diff.p1.txt" size="1411" author="skambha" created="Wed, 12 Apr 2006 11:15:07 +0100"/>
                            <attachment id="12325221" name="for_10.1_derby900.stat.p1.txt" size="118" author="skambha" created="Wed, 12 Apr 2006 11:15:07 +0100"/>
                            <attachment id="12326546" name="testsecmec.zip" size="65759" author="kmarsden" created="Thu, 11 May 2006 07:20:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Feb 2006 06:10:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22197</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy12sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40102</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>