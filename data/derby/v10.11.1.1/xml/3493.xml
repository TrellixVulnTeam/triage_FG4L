<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3493/DERBY-3493.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3493] stress.multi times out waiting on testers with blocked testers waiting on the same statement</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3493</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The diff is:&lt;br/&gt;
7 del&lt;br/&gt;
&amp;lt; ...running last checks via final.sql&lt;br/&gt;
7 add&lt;br/&gt;
 &amp;gt; ...timed out trying to kill all testers,&lt;br/&gt;
 &amp;gt;    skipping last scripts (if any).  NOTE: the&lt;br/&gt;
 &amp;gt;    likely cause of the problem killing testers is&lt;br/&gt;
 &amp;gt;    probably not enough VM memory OR test cases that&lt;br/&gt;
 &amp;gt;    run for very long periods of time (so testers do not&lt;br/&gt;
 &amp;gt;    have a chance to notice stop() requests&lt;br/&gt;
Test Failed.&lt;/p&gt;

&lt;p&gt;The testers that are stuck are stuck on the same statement e.g.&lt;br/&gt;
&amp;#8211; &lt;br/&gt;
update main2 set y = &apos;zzz&apos; where x = 5;&lt;br/&gt;
ERROR 08000: Connection closed by unknown interrupt.&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.InterruptedException&apos;.&lt;/p&gt;

&lt;p&gt;The interupt exception shows:&lt;br/&gt;
java.lang.InterruptedException&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:199)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:195)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConn&lt;br/&gt;
ctionContext.java:768)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:508)&lt;br/&gt;
        at&lt;br/&gt;
org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)&lt;/p&gt;


&lt;p&gt;The code at line 195 of GenericStatement shows:&lt;br/&gt;
          ....&lt;br/&gt;
                try &lt;/p&gt;
{
                    preparedStmt.wait();
                }
&lt;p&gt; catch (InterruptedException ie) &lt;/p&gt;
{
                    throw StandardException.interrupt(ie);
                }

&lt;p&gt;My first guess is that this is perhaps some type of Statement cache&lt;br/&gt;
concurrency bug, but perhaps&lt;br/&gt;
I am reading it wrong.  &lt;/p&gt;</description>
                <environment>IBM 1.5 Linux</environment>
        <key id="12390185">DERBY-3493</key>
            <summary>stress.multi times out waiting on testers with blocked testers waiting on the same statement</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Mar 2008 17:08:03 +0000</created>
                <updated>Mon, 29 Jun 2009 23:43:19 +0100</updated>
                            <resolved>Sun, 9 Mar 2008 07:36:06 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12575649" author="knutanders" created="Thu, 6 Mar 2008 10:41:39 +0000"  >&lt;p&gt;Do you still see this failure after the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3362&quot; title=&quot;ControlRow NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3362&quot;&gt;&lt;del&gt;DERBY-3362&lt;/del&gt;&lt;/a&gt; went in?&lt;/p&gt;</comment>
                            <comment id="12575659" author="knutanders" created="Thu, 6 Mar 2008 12:07:51 +0000"  >&lt;p&gt;Never mind, I was able to reproduce it myself. Unfortunately, I was just too late to get a full stack dump before the test stopped. I&apos;ll make another attempt.&lt;/p&gt;</comment>
                            <comment id="12575695" author="knutanders" created="Thu, 6 Mar 2008 13:25:41 +0000"  >&lt;p&gt;I managed to get a thread dump with VisualVM while stress.multi was hanging. Attached as threaddump-1204806990660.tdump.&lt;/p&gt;</comment>
                            <comment id="12575706" author="knutanders" created="Thu, 6 Mar 2008 13:42:26 +0000"  >&lt;p&gt;Here&apos;s the culprit:&lt;/p&gt;

&lt;p&gt;&quot;Thread-10&quot; prio=3 tid=0x085d6c00 nid=0x19 waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb6315000..0xb6315be0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (parking)&lt;br/&gt;
	at sun.misc.Unsafe.park(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;parking to wait for  &amp;lt;0xbb4e6168&amp;gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)&lt;br/&gt;
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitUninterruptibly(AbstractQueuedSynchronizer.java:1861)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.CacheEntry.lockWhenIdentityIsSet(CacheEntry.java:128)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.getEntry(ConcurrentCache.java:122)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.findOrCreateObject(ConcurrentCache.java:213)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.create(ConcurrentCache.java:343)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addTableDescriptorToOtherCache(DataDictionaryImpl.java:8726)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.NameTDCacheable.setIdentity(NameTDCacheable.java:117)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.findOrCreateObject(ConcurrentCache.java:254)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(ConcurrentCache.java:288)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getTableDescriptor(DataDictionaryImpl.java:1850)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.QueryTreeNode.getTableDescriptor(QueryTreeNode.java:1228)&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What happens, is that NameTDCacheable.setIdentity() re-enters the table descriptor cache and runs into a deadlock. I&apos;ll see if I can find a way to fix it.&lt;/p&gt;</comment>
                            <comment id="12575711" author="knutanders" created="Thu, 6 Mar 2008 14:02:26 +0000"  >&lt;p&gt;Clock.create() seems to fail earlier than ConcurrentCache.create() when it discovers that the object already exists in the cache. Clock.create() will fail as soon as it sees that there is an entry with the same identity. ConcurrentCache.create() will wait until the entry has been successfully initialized before it fails. I think the hang will go away if ConcurrentCache.create() also fails earlier.&lt;/p&gt;</comment>
                            <comment id="12576234" author="knutanders" created="Fri, 7 Mar 2008 15:20:09 +0000"  >&lt;p&gt;Attaching a patch which I believe solves the hang.&lt;/p&gt;

&lt;p&gt;The patch basically makes ConcurrentCache.create() use ConcurrentHashMap.get() directly instead of going through ConcurrentCache.getEntry(), which will block until the identity has been set. Then create() fails immediately if the object already exists in the cache. Since this introduced yet another difference between find() and create() in findOrCreateObject(), I also followed &#216;ystein&apos;s suggestion from his review of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2911&quot; title=&quot;Implement a buffer manager using java.util.concurrent classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2911&quot;&gt;&lt;del&gt;DERBY-2911&lt;/del&gt;&lt;/a&gt; and split findOrCreateObject() into a number of smaller methods, which I think makes the code easier to follow.&lt;/p&gt;

&lt;p&gt;I have started the full regression suite (which seems to run fine) and will also have stress.multi running in a loop for some time to verify that the hang really has been fixed.&lt;/p&gt;

&lt;p&gt;The hang seems to have been caused by the two table descriptor caches in DataDictionaryImpl (nameTdCache and OIDTdCache) trying to keep each other consistent. So when you insert an object into one of these caches, their setIdentity() methods try to automatically insert it into the other one as well. So what happened was that one thread inserted an object into one of the caches, and at the same time another thread inserted an object with the same identity into the other cache. Both of the caches tried to update the same object in the other cache at the same time and thereby they ended up waiting for each other to finish. Since creating an object that already exists should fail, there&apos;s no reason to wait for a not fully initialized object to become fully initialized before failing. By failing as soon as such a situation is detected, the two threads don&apos;t wait for each other to finish, and the deadlock is avoided.&lt;/p&gt;</comment>
                            <comment id="12576645" author="knutanders" created="Sat, 8 Mar 2008 22:59:30 +0000"  >&lt;p&gt;Attaching a new patch (1b) since I mistakenly changed find() and create() so that they left dummy objects in the cache if Cacheable.setIdentity() or Cacheable.createIdentity() failed, which led to failures in some of the recovery tests.&lt;/p&gt;

&lt;p&gt;suites.All and derbyall ran cleanly with 1b (except the replication tests, see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3517&quot; title=&quot;testReplication_Local(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local)java.lang.StringIndexOutOfBoundsException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3517&quot;&gt;&lt;del&gt;DERBY-3517&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;On a machine where I saw the hang in stress.multi in about 25% of the runs, I ran 150 times without seeing the hang with the 1a patch, and 60 times with the 1b patch, so I believe the problem is solved.&lt;/p&gt;</comment>
                            <comment id="12576717" author="knutanders" created="Sun, 9 Mar 2008 07:36:06 +0000"  >&lt;p&gt;Committed revision 635183.&lt;/p&gt;</comment>
                            <comment id="12578901" author="kmarsden" created="Fri, 14 Mar 2008 19:28:51 +0000"  >&lt;p&gt;Knut, is this bug specific to 10.4 or might it affect 10.3 as well, but less frequently?&lt;/p&gt;</comment>
                            <comment id="12579324" author="knutanders" created="Mon, 17 Mar 2008 06:18:41 +0000"  >&lt;p&gt;This bug is specific to 10.4 as far as I can tell.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12377357" name="d3493-1a.diff" size="8380" author="knutanders" created="Fri, 7 Mar 2008 15:20:09 +0000"/>
                            <attachment id="12377462" name="d3493-1b.diff" size="8699" author="knutanders" created="Sat, 8 Mar 2008 22:59:30 +0000"/>
                            <attachment id="12377252" name="threaddump-1204806990660.tdump" size="26279" author="knutanders" created="Thu, 6 Mar 2008 13:25:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Mar 2008 10:41:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23669</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0w0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39004</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>