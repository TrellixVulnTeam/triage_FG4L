<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:46:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2653/DERBY-2653.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2653] Expose existing auto-generated key functionality through more JDBC APIs in Derby Client.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2653</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2631&quot; title=&quot;Expose existing auto-generated key functionality through more JDBC APIs in embedded mode.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2631&quot;&gt;&lt;del&gt;DERBY-2631&lt;/del&gt;&lt;/a&gt; for details.  Desired functionality is the same as for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2631&quot; title=&quot;Expose existing auto-generated key functionality through more JDBC APIs in embedded mode.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2631&quot;&gt;&lt;del&gt;DERBY-2631&lt;/del&gt;&lt;/a&gt;, except that this issue is specifically for Derby Client (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2631&quot; title=&quot;Expose existing auto-generated key functionality through more JDBC APIs in embedded mode.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2631&quot;&gt;&lt;del&gt;DERBY-2631&lt;/del&gt;&lt;/a&gt; only addressed embedded mode).&lt;/p&gt;</description>
                <environment>Runnning with Derby Client.</environment>
        <key id="12369417">DERBY-2653</key>
            <summary>Expose existing auto-generated key functionality through more JDBC APIs in Derby Client.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 May 2007 18:34:38 +0100</created>
                <updated>Sun, 3 Feb 2013 07:19:29 +0000</updated>
                            <resolved>Thu, 21 Feb 2008 18:38:30 +0000</resolved>
                                    <version>10.3.2.1</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12569334" author="kmarsden" created="Fri, 15 Feb 2008 17:31:16 +0000"  >&lt;p&gt;To implement this for client it seems like the really hard part would be trying to figure out which columns are not valid identity columns so that we can throw an error.  I&apos;m not sure how we could do this from the client.  Does anyone have any ideas?&lt;/p&gt;</comment>
                            <comment id="12569412" author="kmarsden" created="Fri, 15 Feb 2008 21:03:51 +0000"  >&lt;p&gt;I was looking at the javadoc for prepareStatement(String sql, String[] columnNames) and noticed that it says:&lt;/p&gt;

&lt;p&gt;&quot;The driver will ignore the array if the SQL statement is not an INSERT statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).&quot;&lt;/p&gt;

&lt;p&gt;I wonder if this means that instead of throwing an exception if the user specifies a non-identity column or more than one column, we should just ignore those values, not throw an exception. That would certainly make things simpler for client.  &lt;/p&gt;
</comment>
                            <comment id="12569482" author="kmarsden" created="Sat, 16 Feb 2008 01:19:55 +0000"  >&lt;p&gt;Attached is a prototype of the change to forward the unimplemented methods to xxx(String sql, int autoGeneratedKeys). It is NOT for commit.  The argument checking needs to be added, comments, and tests.  I just thought the patch might ease discussion regarding the argument checking problem and make it clear that except for the argument checking these calls are the same as the existing autoGenerate keys methods.&lt;/p&gt;


</comment>
                            <comment id="12569606" author="kmarsden" created="Sat, 16 Feb 2008 19:47:42 +0000"  >&lt;p&gt;I checked the JCC which doesn&apos;t support columnIndexes, but does support columnNames and it ignores columns that are not identity columns for columnNames.  I suggest we change the embedded driver to do the same and not throw an error if the user specifies columns that are not identity columns.  Then the client can do the same.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12569608" author="kmarsden" created="Sat, 16 Feb 2008 20:21:05 +0000"  >&lt;p&gt;Actually  I was mistaken, with columnNames with JCC against DB2, it actually returns the insert values for both columns whether they are identity columns or not.  For example for:&lt;br/&gt;
	s.executeUpdate(&lt;br/&gt;
	&quot;create table t31_AutoGen (c31 int, &quot; +&lt;br/&gt;
          &quot;c32 int generated always as identity (increment by 1), &quot; +&lt;br/&gt;
	&quot;c33 int default 2)&quot;);&lt;br/&gt;
	String[] columnNames = &lt;/p&gt;
{&quot;C32&quot;,&quot;C31&quot;}
&lt;p&gt;;	&lt;br/&gt;
	PreparedStatement ps = conn.prepareStatement(&quot;insert into t31_AutoGen values(1,DEFAULT,DEFAULT)&quot;,columnNames);&lt;/p&gt;

&lt;p&gt;	ps.executeUpdate();&lt;/p&gt;

&lt;p&gt;	ResultSet rs = ps.getGeneratedKeys();&lt;/p&gt;

&lt;p&gt;The ResultSet has 1 row with two columns, with values 1, 1.&lt;/p&gt;

&lt;p&gt;I don&apos;t think that&apos;s right actually, but it doesn&apos;t support my argument that we ignore non-identity columns.  It would be interesting to see how other databases behave.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;



</comment>
                            <comment id="12569612" author="djd" created="Sat, 16 Feb 2008 21:23:36 +0000"  >&lt;p&gt;One approach might be to only accept one column arrays and then document something like:&lt;/p&gt;

&lt;p&gt;   The  one element column name or position array is ignored currently and the value returned corresponds to the identity column. To ensure compatibility with future changes an application should ensure the column described is the identity column. If the column name or position corresponds to another column  or a non-existent column then future changes may result in a value for a different column being returned or an exception being thrown.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;edit - add possibility for an error in the future&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="12569613" author="kmarsden" created="Sat, 16 Feb 2008 21:37:14 +0000"  >&lt;p&gt;Do you think we should make embedded behave the same way or just leave it as it is?&lt;/p&gt;</comment>
                            <comment id="12569614" author="djd" created="Sat, 16 Feb 2008 21:42:53 +0000"  >&lt;p&gt;Isn&apos;t embedded doing the logical thing, checking the column is correct? If so why would we regress it?&lt;/p&gt;</comment>
                            <comment id="12569852" author="kristwaa" created="Mon, 18 Feb 2008 11:06:09 +0000"  >&lt;p&gt;Just wondering what the time frame for this change is, as it may affect my work on implementing statement pooling in the client driver.&lt;br/&gt;
The current patch attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3326&quot; title=&quot;Introduce a caching logical connection and logical prepared statement in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3326&quot;&gt;&lt;del&gt;DERBY-3326&lt;/del&gt;&lt;/a&gt; is already insufficient, because the call is allowed if the array is null. The current patch will then throw an OperationNotSupportedException.&lt;/p&gt;</comment>
                            <comment id="12570051" author="kmarsden" created="Mon, 18 Feb 2008 23:42:04 +0000"  >&lt;p&gt;Attached is a partial patch for this issue which implments the following API&apos;s for client:&lt;/p&gt;

&lt;p&gt;Connection.prepareStatement(String sql, String[] columnNames);&lt;/p&gt;

&lt;p&gt; Statement.execute(String sql, String[] columNames);&lt;/p&gt;

&lt;p&gt;Statement.executeUpdate(String sql, String[] columnNames);&lt;/p&gt;

&lt;p&gt;The columnIndex calls have not yet been implemented. An argument of null for columNames will return no generated keys. Otherwise  client requires an array of length 1 for columnNames. It will actually ignore the value and always return the results of IDENTITY_VAL_LOCAL after the insert.&lt;br/&gt;
Users should only ever set columnNames to be the identity column.&lt;/p&gt;

&lt;p&gt;Tests are running.&lt;/p&gt;
</comment>
                            <comment id="12570078" author="kmarsden" created="Tue, 19 Feb 2008 01:43:10 +0000"  >&lt;p&gt;Tests ran fine except for jdbcapi/StatementJdbc30Test.java which needed to be updated for the new behavior.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach an updated patch.&lt;/p&gt;</comment>
                            <comment id="12570094" author="army" created="Tue, 19 Feb 2008 03:49:58 +0000"  >&lt;p&gt;Thanks for the patch, Kathey.&lt;/p&gt;

&lt;p&gt;From a quick reading it looks like client will throw an error if the specified columnNames array has length zero, is that correct?  If so, I wonder if it would make sense to treat a 0-length columnNames array the same as a NO_GENERATED_KEYS argument?&lt;/p&gt;

&lt;p&gt;I only mention it because in EmbedStatement.java we treat a 0-length array to mean NO_GENERATED_KEYS.  But having said that, it looks like we don&apos;t check the array size in EmbedConneciton.java (we just check whether or not it&apos;s null), which I think means that a 0-length array &lt;b&gt;will&lt;/b&gt; return generated keys (if there are any) for the Connection.prepareStatement() API...hmm.  The fact that EmbedStatement and EmbedConnection show different behavior is probably a bug (new Jira), but in either case embedded will execute without throwing an error.&lt;/p&gt;

&lt;p&gt;I realize that embedded and client are going to have different behaviors with the array arguments, per your earlier comments, but in the specific case of a 0-length array, it seems like it should be possible to keep embedded and client in sync.  Do you think it would be worth it to do so?&lt;/p&gt;</comment>
                            <comment id="12570096" author="kmarsden" created="Tue, 19 Feb 2008 04:08:39 +0000"  >&lt;p&gt;Thanks Army for looking at the patch.&lt;/p&gt;

&lt;p&gt;From a quick test it looks like embedded behaves properly and returns null from getGeneratedKeys() for a columnNames array of length 0.  I will update the client patch to do the same.&lt;/p&gt;

&lt;p&gt;After I resolve this issue I will file a bug for the embedded/client differences.&lt;/p&gt;</comment>
                            <comment id="12570230" author="kmarsden" created="Tue, 19 Feb 2008 13:55:16 +0000"  >&lt;p&gt;Attached is an updated patch, derby-2653_columnNames2_diff.txt, that handles the empty array case.  I added test cases for empty arrays. I disabled the PreparedStatement tests for embedded because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3430&quot; title=&quot;Inconsistency in JDBC autogen APIs between Connection.prepareStatement(...) and Statement.execute(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3430&quot;&gt;&lt;del&gt;DERBY-3430&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12570299" author="army" created="Tue, 19 Feb 2008 16:30:15 +0000"  >&lt;p&gt;Thanks Kathey, this looks good to me.&lt;/p&gt;

&lt;p&gt;Very minor nit:&lt;/p&gt;

&lt;p&gt;            int genKeys = (columnNames == null ||&lt;br/&gt;
                    (columnNames != null &amp;amp;&amp;amp; columnNames.length == 0)&lt;br/&gt;
                    ? Statement.NO_GENERATED_KEYS: &lt;br/&gt;
                    Statement.RETURN_GENERATED_KEYS);&lt;/p&gt;

&lt;p&gt;I think that short-circuiting makes the &quot;columnNames != null&quot; check redundant since if it&apos;s null, the OR will short-circuit and the right hand side won&apos;t (shouldn&apos;t) ever get executed.  So it could be simplified to:&lt;/p&gt;

&lt;p&gt;            int genKeys = (columnNames == null || columnNames.length == 0)&lt;br/&gt;
                    ? Statement.NO_GENERATED_KEYS: &lt;br/&gt;
                    Statement.RETURN_GENERATED_KEYS);&lt;/p&gt;

&lt;p&gt;But as I said, very minor &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Thanks for the additional test fixture, as well!&lt;/p&gt;</comment>
                            <comment id="12570507" author="kmarsden" created="Tue, 19 Feb 2008 23:55:38 +0000"  >&lt;p&gt;Attached is a patch derby-2653_columnIndexes_diff.txt, which implements the columnIndexes API&apos;s for client. The following API&apos;s are implemented:&lt;/p&gt;

&lt;p&gt;  Connection.prepareStatement(String sql, int[] columnIndexes);&lt;br/&gt;
  Statement.execute(String sql, int[] columIndexes);&lt;br/&gt;
  Statement.executeUpdate(String sql, int[] columnIndexes);&lt;/p&gt;

&lt;p&gt;It was necessary to change a lot of prepared statement constructors and create methods to pass around the columnIndexes value in addition to columnNames. Otherwise the changes are very similar to the changes made for the columnNames API&apos;s.  The same restrictions apply. To return generated keys, the user must specify an array of columnIndexes of length 1.  The actual value of that array is ignored at this time and we always return the generated key for the identity column, regardless of the value of the single element array.&lt;/p&gt;

&lt;p&gt;After I check this in I will file a bug against client that it does not reject columns that are not identity columns.&lt;/p&gt;

&lt;p&gt;suites.All and derbynetclientsmats passed with IBM 1.5, but I will rerun with 1.6 since some &lt;b&gt;40&lt;/b&gt; classes changed.&lt;/p&gt;
</comment>
                            <comment id="12570728" author="kmarsden" created="Wed, 20 Feb 2008 16:09:01 +0000"  >&lt;p&gt;Attached is the documentation change for this issue.  I just used Dan&apos;s wording for the change.  &lt;/p&gt;

</comment>
                            <comment id="12570746" author="chaase3" created="Wed, 20 Feb 2008 16:55:17 +0000"  >&lt;p&gt;I&apos;ve been following this issue to check on the possible impact on our JDBC documentation. &lt;/p&gt;

&lt;p&gt;If I&apos;ve understood correctly (not a sure thing), the restriction that &quot;the user must specify an array of columnIndexes of length 1&quot; would be a new one. Currently in &lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefjdbcjavasqlconnection30.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefjdbcjavasqlconnection30.html&lt;/a&gt; and &lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefjdbcjavasqlstatement30.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefjdbcjavasqlstatement30.html&lt;/a&gt; we&lt;br/&gt;
say, for Connection.prepareStatement, Statement.execute, and Statement.executeUpdate,&lt;/p&gt;

&lt;p&gt;&quot;Every column index in the array must correlate to an auto-increment column within the target table of the INSERT.&quot;&lt;/p&gt;

&lt;p&gt;(And similarly for the methods that take a columnNames argument.) These statements imply that the array can have more than one element, so people might have to change existing code. The change in the documentation would be no problem, but the change in behavior (if real) might be a concern. What have I misunderstood?&lt;/p&gt;

&lt;p&gt;I think a table can have more than one autoincrement column, although that might be an unusual practice &amp;#8211; I don&apos;t see any restriction on this in the generated-column-spec topic (&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsqlj37836.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsqlj37836.html&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;I think the rrefjdbcjavasqlconnection30 and rrefjdbcjavasqlstatement30 topics would need to be changed along with crefjavstateautogen, although if I do all the work described in my &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2388&quot; title=&quot;DOCS - Reorder JDBC Reference section in Ref Manual&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2388&quot;&gt;&lt;del&gt;DERBY-2388&lt;/del&gt;&lt;/a&gt; proposal, the information in them would be folded into other topics.&lt;/p&gt;</comment>
                            <comment id="12570752" author="kmarsden" created="Wed, 20 Feb 2008 17:05:37 +0000"  >&lt;p&gt;In Derby currently you can only have one identity column per table, so the restriction to a one element array is not a new one.   If a user specifies multiple columns,  The difference is with the embedded driver will throw an exception that the column is not an identity column (X0X0E, X0X0F)  and client will throw an exception that the array is too long (XOXOD).&lt;/p&gt;
</comment>
                            <comment id="12570781" author="chaase3" created="Wed, 20 Feb 2008 18:09:53 +0000"  >&lt;p&gt;Oh, I see. No problem, then, as far as behavior goes. &lt;/p&gt;

&lt;p&gt;But I looked all over, and I don&apos;t think we actually say that explicitly anywhere &amp;#8211; not in the Reference Manual, anyway. I see an error message to that effect, but that&apos;s all. Should that information be added to the generated-column-spec topic (&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsqlj37836.html)?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsqlj37836.html)?&lt;/a&gt; If so, I can file and fix a JIRA issue.&lt;/p&gt;</comment>
                            <comment id="12570788" author="kmarsden" created="Wed, 20 Feb 2008 18:21:26 +0000"  >&lt;p&gt;Kim asked:&lt;br/&gt;
&amp;gt;Should that information be added to the generated-column-spec topic (&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsqlj37836.html)?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsqlj37836.html)?&lt;/a&gt; If so, I can file and fix a JIRA issue. &lt;/p&gt;

&lt;p&gt;That would be great.&lt;/p&gt;

&lt;p&gt;Also should I hold off on the doc for this issue and let it get rolled in with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2388&quot; title=&quot;DOCS - Reorder JDBC Reference section in Ref Manual&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2388&quot;&gt;&lt;del&gt;DERBY-2388&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;
</comment>
                            <comment id="12570794" author="chaase3" created="Wed, 20 Feb 2008 18:41:08 +0000"  >&lt;p&gt;Thanks, Kathey, I&apos;ll file an issue.&lt;/p&gt;

&lt;p&gt;There is no need to hold off on the changes to the  crefjavstateautogen topic. That information will be important to have. The only change I was going to make to that topic was to remove the specific reference to JDBC 3.0, because the information applies to all versions of JDBC that we currently support. You could do that yourself if you would like to.&lt;/p&gt;

&lt;p&gt;If you wanted to fix the 3.0-specific Connection and Statement topics to correct the information about column indexes and column names, that would be okay too, since I haven&apos;t gotten to those and won&apos;t for a while. (I&apos;m still waiting for feedback on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3409&quot; title=&quot;Remove JDBC 2.0-specific topics from Reference Manual and merge implementation notes as needed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3409&quot;&gt;&lt;del&gt;DERBY-3409&lt;/del&gt;&lt;/a&gt; (fixes related to the JDBC 2.0 topics).&lt;/p&gt;</comment>
                            <comment id="12570803" author="kmarsden" created="Wed, 20 Feb 2008 19:22:29 +0000"  >&lt;p&gt;I checked in the doc change with  revision 629580, but only made the changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2653&quot; title=&quot;Expose existing auto-generated key functionality through more JDBC APIs in Derby Client.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2653&quot;&gt;&lt;del&gt;DERBY-2653&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;</comment>
                            <comment id="12570805" author="kmarsden" created="Wed, 20 Feb 2008 19:30:11 +0000"  >&lt;p&gt;I received a request to port this change to the 10.3 branch.  I was wondering if anyone had any objections to my porting this to 10.3?&lt;/p&gt;</comment>
                            <comment id="12571139" author="kmarsden" created="Thu, 21 Feb 2008 18:38:30 +0000"  >&lt;p&gt;ported changes to 10.3, marking this issue resolved.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12378009">DERBY-3067</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="32841">DERBY-310</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12480947">DERBY-4921</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12368937">DERBY-2631</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376032" name="crefjavstateautogen.html" size="6607" author="kmarsden" created="Wed, 20 Feb 2008 16:09:01 +0000"/>
                            <attachment id="12375975" name="derby-2653_columnIndexes_diff.txt" size="38928" author="kmarsden" created="Tue, 19 Feb 2008 23:55:38 +0000"/>
                            <attachment id="12375924" name="derby-2653_columnNames2_diff.txt" size="17991" author="kmarsden" created="Tue, 19 Feb 2008 13:55:16 +0000"/>
                            <attachment id="12375879" name="derby-2653_columnNames_diff.txt" size="15340" author="kmarsden" created="Tue, 19 Feb 2008 01:43:29 +0000"/>
                            <attachment id="12375868" name="derby-2653_columnNames_diff.txt" size="14328" author="kmarsden" created="Mon, 18 Feb 2008 23:42:04 +0000"/>
                            <attachment id="12376033" name="derby-2653_doc_diff.txt" size="2295" author="kmarsden" created="Wed, 20 Feb 2008 16:09:01 +0000"/>
                            <attachment id="12375739" name="derby-2653_proto_diff.txt" size="5014" author="kmarsden" created="Sat, 16 Feb 2008 01:19:54 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12388855">DERBY-3426</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 15 Feb 2008 17:31:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30554</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mfb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37451</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>