<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-438/DERBY-438.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-438] Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).</title>
                <link>https://issues.apache.org/jira/browse/DERBY-438</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Suppose I have 1) a table &quot;t1&quot; with blob data in it, and 2) an UPDATE trigger &quot;tr1&quot; defined on that table, where the triggered-SQL-action for &quot;tr1&quot; references the blob column from the updated (&quot;new&quot;) row. Ex:&lt;/p&gt;

&lt;p&gt;create table t1 (id int, updated smallint, bl blob(32000));&lt;br/&gt;
create trigger tr1 after update on t1 referencing new as n_row for each row mode db2sql values length(n_row.bl);&lt;/p&gt;

&lt;p&gt;Assuming that t1 has been populated with some data, then attempts to update t1 will fire the trigger, but the result will be one of the two following errors:&lt;/p&gt;

&lt;p&gt;1) If blob data is &amp;lt; 32K...&lt;/p&gt;

&lt;p&gt;If the actual data in the table is less than 32K in length, the result will be:&lt;/p&gt;

&lt;p&gt;ERROR XCL12: An attempt was made to put a data value of type &apos;org.apache.derby.impl.jdbc.EmbedBlob&apos; into a data value of type &apos;BLOB&apos;.&lt;/p&gt;

&lt;p&gt;2) If blob data is &amp;gt; 32K...&lt;/p&gt;

&lt;p&gt;If at least one row in the table has blob data that is longer than 32K (which means that Derby will stream it, so far as I can tell), then the error will be:&lt;/p&gt;

&lt;p&gt;ERROR XCL30: An IOException was thrown when reading a &apos;BLOB&apos; from an InputStream.&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.io.EOFException&apos;.&lt;/p&gt;

&lt;p&gt;Note that for data larger than 32K, this error will occur regardless of whether or not the triggered-SQL-statement&lt;br/&gt;
references the blob column.&lt;/p&gt;

&lt;p&gt;Surprisingly, it doesn&apos;t (appear to) matter what the trigger statement is actually doing--so long as it references the blob column at least once, one of these two errors will occur, depending on the length of the data.  And if the data is greater than 32k, then the error will happen regardless of what the trigger does or whether or not it references the blob column.&lt;/p&gt;

&lt;p&gt;I looked at the documentation for UPDATE statements and TRIGGER statements, but nowhere did I see anything saying that either of these will not work with blobs.  So as far as I can tell, both of the above scenarios should succeed...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12311901">DERBY-438</key>
            <summary>Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djd">Daniel John Debrunner</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Jul 2005 09:10:50 +0100</created>
                <updated>Sat, 8 Dec 2007 00:49:36 +0000</updated>
                            <resolved>Sat, 8 Dec 2007 00:49:36 +0000</resolved>
                                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12314928" author="army" created="Sat, 2 Jul 2005 09:12:01 +0100"  >&lt;p&gt;Attaching a repro for the problem.  To run, just do &quot;java go&quot;.&lt;/p&gt;</comment>
                            <comment id="12318008" author="army" created="Tue, 9 Aug 2005 00:59:41 +0100"  >&lt;p&gt;There was some discussion on this issue on the derby-dev list; I&apos;m including the results of that discussion here for ease-of-tracking:&lt;/p&gt;

&lt;p&gt;It was noted that Derby as it currently stands does not support &quot;accessing LOB columns of the modified table by the action statement&quot; within a triggered-SQL-action, &quot;because within the database engine, there is no mechanism to create a java.sql.Blob object (or Clob) from a SQL BLOB (CLOB) datatype&quot; (quoting from the derby-dev thread).  That said, there are really four &apos;to-do&apos;s with this issue:&lt;/p&gt;

&lt;p&gt;1  - document the current restrictions&lt;br/&gt;
2  - with the current restriction produce a better error message&lt;br/&gt;
3  - implement LOB support in the referenced tables.&lt;br/&gt;
4  - Fix triggers so that they work in cases where the triggered-SQL-statement does &lt;em&gt;not&lt;/em&gt; reference a blob column (currently, a trigger will fail with an IOException if the target table has blob data larger than 32K, even if that column isn&apos;t actually referenced by the trigger action).&lt;/p&gt;

&lt;p&gt;For the full thread, see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://article.gmane.org/gmane.comp.apache.db.derby.devel/6272&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://article.gmane.org/gmane.comp.apache.db.derby.devel/6272&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I should have posted this comment at the time the derby-dev discussion was concluded; apologies for any inconvenience...&lt;/p&gt;</comment>
                            <comment id="12319533" author="mkhettry" created="Mon, 22 Aug 2005 09:49:20 +0100"  >&lt;p&gt;Even if the blob column is not referenced,  an io exception is thrown. The Exception is caused by the SQL layer trying to read the same Stream twice. The test case is pretty much the same as the attached go.java, reproduced here for convenience)&lt;/p&gt;

&lt;p&gt;create table t1 (id int, updated smallint, bl blob(64k));&lt;br/&gt;
create trigger tr1 after update on t1 referencing &lt;br/&gt;
                  new as n_row for each row mode db2sql values length(n_row.updated);&lt;br/&gt;
update t1 set updated = 1 where id = ?;&lt;/p&gt;


&lt;p&gt;The first call to load the stream is in NormalizeResultSet; i.e.&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.iapi.types.SQLBlob.normalize(SQLBlob.java:110)&lt;br/&gt;
        at org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:432)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:351)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:207)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:124)&lt;/p&gt;

&lt;p&gt;The second call is&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:198)&lt;br/&gt;
        at org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:542)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:151)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:132)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:453)&lt;/p&gt;

&lt;p&gt;If Derby does not support accessing LOB columns in triggers, there does seem to becode that seems to think otherwise! In particular look at the constructor for DMLWriteResultStream (the comments at the end, the variable &apos;needToObjectifyStream&apos;). It looks to me, that for any DML on a table which has triggers defined, we&apos;ll end up materializing stream columns even if the DML and the trigger do not reference any stream storable columns.&lt;/p&gt;

&lt;p&gt;So apart from the 4  &quot;todo&apos;s&quot; in the previous comment, I have a couple of questions for those more familiar with this code.&lt;/p&gt;

&lt;p&gt;1. If we don&apos;t support referencing blob columns in triggers, do we need the logic for objectifyStream in DMLWriteResultSet? The comment in the constructor refers to several bug numbers which predate Jira-- 2432, 3383, 4896. Is it possible to get information about these?&lt;/p&gt;

&lt;p&gt;2. Does NormalizeResultSet need to normalize a column that is not referred to in the update? &lt;/p&gt;





</comment>
                            <comment id="12377483" author="djd" created="Wed, 3 May 2006 06:40:24 +0100"  >&lt;p&gt;Several fixes have been made (seen the Subversion commits) that support blob/clob in row triggers including the case when the LOB value is streamed from the store.&lt;br/&gt;
Writing a test for statement triggers showed an issue where the implementation of the statement trigger depended on a VTI (ResultSet implementation) that was still at JDBC 1.2 level, thus not supporting BLOB/CLOB. Some description of how triggers are executed has been documented on the wiki at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/db-derby/TriggerImplementation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/TriggerImplementation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The proposed change to fix this is to change the VTIs used in triggers from implementations of java.sql.ResultSet that wrap a embedded java.sql.ResultSet  that wraps a Derby language ResultSet, to implementations of java.sql.PreparedStatement  that simply return the embedded java.sql.ResultSet  that wraps a Derby language ResultSet. &lt;/p&gt;

&lt;p&gt;PreparedStatement VTIs are more flexible that ResultSet  VTIs in that they can be updatable (not required in this case) and (for this case) the implementation of the ResultSet can be hidden by the class, allowing different implementations in different situations.&lt;/p&gt;

&lt;p&gt;This fixes the situation for statement triggers as the ResultSet now returned to the re-written  trigger action statement  will support BLOB/CLOB as it will be JDBC ResultSet as returned from the embedded driver. Since the api of the VTI does not change this fix should work on soft upgrade for old triggers from 10.1/10.0 and triggers created in 10.2 soft upgrade that will then run in 10.1/10.0&lt;/p&gt;</comment>
                            <comment id="12377485" author="djd" created="Wed, 3 May 2006 06:46:21 +0100"  >&lt;p&gt;Draft patch that shows the change from ResultSet to PreparedStatement for the trigger VTIs.&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\impl\sql\compile\FromVTI.java&lt;br/&gt;
M      java\engine\org\apache\derby\vti\UpdatableVTITemplate.java&lt;br/&gt;
M      java\engine\org\apache\derby\catalog\TriggerNewTransitionRows.java&lt;br/&gt;
M      java\engine\org\apache\derby\catalog\TriggerOldTransitionRows.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\blobclob4BLOB.java&lt;/p&gt;

&lt;p&gt;Majority of change is removing the ResultSet methods from the transition VTIs.&lt;br/&gt;
Only includes the test changes, not the modified output. Patch is draft.&lt;/p&gt;</comment>
                            <comment id="12414253" author="djd" created="Fri, 2 Jun 2006 00:20:26 +0100"  >&lt;p&gt;Number of commits marked with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-438&quot; title=&quot;Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-438&quot;&gt;&lt;del&gt;DERBY-438&lt;/del&gt;&lt;/a&gt; have been applied. Tests are in triggerGeneral.sql and blobclob4BLOB.java for both BLOB and CLOB. Includes row &amp;amp; statement, with small and large LOBs.&lt;/p&gt;

&lt;p&gt;I do not believe &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-442&quot; title=&quot;Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-442&quot;&gt;&lt;del&gt;DERBY-442&lt;/del&gt;&lt;/a&gt; is a sub-task of this bug description. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-442&quot; title=&quot;Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-442&quot;&gt;&lt;del&gt;DERBY-442&lt;/del&gt;&lt;/a&gt; is a separate (but related) issue. I don&apos;t see a way in Juru to move it though.&lt;/p&gt;</comment>
                            <comment id="12420381" author="army" created="Wed, 12 Jul 2006 01:58:05 +0100"  >&lt;p&gt;Many patches contributed and committed by Dan, the last of which has been in the codeline for over a month now.  So I&apos;m closing this issue.&lt;/p&gt;</comment>
                            <comment id="12546784" author="djd" created="Thu, 29 Nov 2007 16:24:48 +0000"  >&lt;p&gt;Kathey Mardsen (in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1482&quot; title=&quot;Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1482&quot;&gt;&lt;del&gt;DERBY-1482&lt;/del&gt;&lt;/a&gt;) has indicated a need to fix this issue in 10.1, possibly by backporting these changes.&lt;/p&gt;

&lt;p&gt;One possible concern to backporting is the changes made in revision 409422 which modifed the altered form of the trigger&apos;s action statement.&lt;br/&gt;
It might work ok in a branch (ie. 10.1) as long as the commit that includes that specific change also changes the last digit of the version number.&lt;br/&gt;
This will trigger automatic re-compile for all stored plans which will include the trigger&apos;s action statement. This would need to be confirmed though.&lt;/p&gt;
</comment>
                            <comment id="12546791" author="djd" created="Thu, 29 Nov 2007 16:43:14 +0000"  >&lt;p&gt;In back-porting this (which I think is the best approach to fixing this in 10.1) back-porting &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1258&quot; title=&quot;Wrong value returned in a row trigger action statement if the table has column names that are identical when upper-cased.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1258&quot;&gt;&lt;del&gt;DERBY-1258&lt;/del&gt;&lt;/a&gt; might be required.&lt;/p&gt;</comment>
                            <comment id="12546799" author="kmarsden" created="Thu, 29 Nov 2007 17:03:34 +0000"  >&lt;p&gt;reopen to attempt  backport to 10.1&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12326186" name="derby438_draft_statement_LOB_patch.txt" size="27291" author="djd" created="Wed, 3 May 2006 06:46:21 +0100"/>
                            <attachment id="12311066" name="go.java" size="2404" author="army" created="Sat, 2 Jul 2005 09:12:01 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12312010">DERBY-442</subtask>
                            <subtask id="12326834">DERBY-770</subtask>
                            <subtask id="12326835">DERBY-771</subtask>
                            <subtask id="12326900">DERBY-776</subtask>
                            <subtask id="12383539">DERBY-3236</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Aug 2005 08:49:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21953</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10lr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39748</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>