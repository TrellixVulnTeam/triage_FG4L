<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2893/DERBY-2893.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2893] INSERT and UPDATES succeed when permission has not been granted.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2893</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;GrantRevokeTest had assert methods (assertInsertPrivilege etc.) of the form&lt;/p&gt;

&lt;p&gt;try {&lt;br/&gt;
   s.execute(command)&lt;br/&gt;
} catch (SQLException sqle)&lt;br/&gt;
{&lt;br/&gt;
       if (!hasPrivilege) &lt;br/&gt;
            assertSQLState(&quot;42502&quot;, e);&lt;br/&gt;
       else&lt;br/&gt;
             fail(...);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Note that no fail() assert was in the try portion after the SQL execution. The statement should not work if hasPrivilege is false, but the test will incorrectly pass if the statement succeeds. I added fail asserts with revision 552922 like:&lt;/p&gt;

&lt;p&gt;if (!hasPrivilege)&lt;br/&gt;
       fail(&quot;expected no INSERT permission on table&quot;);&lt;/p&gt;

&lt;p&gt;but these two for INSERT and UPDATE caused the test to fail (about 6 fixtures fail) indicating that the statement succeeds even if the permission is not granted.&lt;/p&gt;

&lt;p&gt;It could be a test problem but needs some investigation.&lt;/p&gt;

&lt;p&gt;The asserts for assertInsertPrivilege and asserUpdatePrivilege are commented out to stop the test failing.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12372928">DERBY-2893</key>
            <summary>INSERT and UPDATES succeed when permission has not been granted.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jul 2007 18:37:14 +0100</created>
                <updated>Fri, 17 Aug 2007 23:25:25 +0100</updated>
                            <resolved>Wed, 11 Jul 2007 14:17:21 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12510407" author="djd" created="Thu, 5 Jul 2007 18:09:31 +0100"  >&lt;p&gt;Doing a little investigation on this seems to show the problem does not exist on 10.3. I merged up the test changes for GrantRevokeTest and uncommented the asserts and the test passes there. Will investigate some more before commiting those changes.&lt;/p&gt;</comment>
                            <comment id="12510413" author="djd" created="Thu, 5 Jul 2007 18:23:02 +0100"  >&lt;p&gt;I confirmed that adding fail() asserts in the try portion for the assert cases for UPDATE and INSERT when the privilege was expected not be granted fail on trunk, prior to my cleanup of the test with revision 552922.&lt;/p&gt;

&lt;p&gt;This is an example where  test code like this allowed a serious regression:&lt;/p&gt;

&lt;p&gt;try &lt;/p&gt;
{
  s.execute(command);
}
&lt;p&gt;catch (SQLException e)&lt;/p&gt;
{
   assertSQLState(&quot;42502&quot;, e);
}

&lt;p&gt;That is the test passes if the execution of the statement does not thrown the expected exception, which should be a failure.&lt;/p&gt;</comment>
                            <comment id="12510441" author="djd" created="Thu, 5 Jul 2007 19:19:47 +0100"  >&lt;p&gt;Merged the GrantRevokeTest changes up to 10.3 and removed the commented out fail asserts (in 10.3 only) that were added for this bug.&lt;br/&gt;
Thus this bug is only in the trunk.&lt;/p&gt;</comment>
                            <comment id="12510450" author="djd" created="Thu, 5 Jul 2007 19:49:08 +0100"  >&lt;p&gt;I messed up my testing in 10.3 branch, the bug does exist there.&lt;br/&gt;
I unchecked the regression flag because I don&apos;t know if it&apos;s a regression or not.&lt;br/&gt;
I haven&apos;t tried against 10.2 which is where the Grant/Revoke functionality was introduced.&lt;/p&gt;</comment>
                            <comment id="12510472" author="djd" created="Thu, 5 Jul 2007 21:21:09 +0100"  >&lt;p&gt;This means this might still be a test issue and not a bug with grant/revoke. &lt;/p&gt;</comment>
                            <comment id="12511293" author="kmarsden" created="Tue, 10 Jul 2007 00:47:05 +0100"  >&lt;p&gt;I wonder if the order of the decorators in the setup of this test has anything to do with the issue.&lt;br/&gt;
We have:&lt;br/&gt;
public static Test basesuite() {&lt;br/&gt;
		Test basesuite = new TestSuite(GrantRevokeTest.class);&lt;br/&gt;
		Test clean = new CleanDatabaseTestSetup(basesuite) {&lt;br/&gt;
	    	protected void decorateSQL(Statement s) throws SQLException &lt;/p&gt;
{
	    		s.execute(&quot;create schema s1&quot;);
	    		s.execute(&quot;create schema s2&quot;);
                       ....
                     }

&lt;p&gt;		Test test = DatabasePropertyTestSetup.builtinAuthentication(&lt;br/&gt;
				clean, users, &quot;grantrevoke&quot;);&lt;br/&gt;
        test = TestConfiguration.sqlAuthorizationDecorator(test);&lt;/p&gt;


&lt;p&gt;Does this mean that decorateSQL will run before sqlAuthorization is enabled, meaning the tables don&apos;t have the necessary permission restrictions?  I haven&apos;t yet gotten the order successfully reversed but this is my current theory.&lt;/p&gt;

&lt;p&gt;I verified manually that grant/revoke on all privileges (which is one of the cases failing) works ok, so I tend to think it is a test issue, but have not completely confirmed this yet.&lt;/p&gt;
</comment>
                            <comment id="12511295" author="djd" created="Tue, 10 Jul 2007 00:57:32 +0100"  >&lt;p&gt;Looking at the above code the order will be&lt;/p&gt;

&lt;p&gt;sqlAuthorizationDecorator setUp&lt;br/&gt;
    builtinAuthentication setup&lt;br/&gt;
        CleanDatabaseTestSetup setup&lt;br/&gt;
            CleanDatabaseTestSetup.decorateSQL&lt;/p&gt;</comment>
                            <comment id="12511555" author="kmarsden" created="Tue, 10 Jul 2007 21:06:01 +0100"  >&lt;p&gt;OK. I think I have it now.  Here is the patch to fix the test. The problem was that for assertInsertPrivilege we had &lt;/p&gt;

&lt;p&gt;Connection c = openUserConnection(users&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;); &lt;/p&gt;

&lt;p&gt;instead of &lt;/p&gt;

&lt;p&gt;Connection c = openUserConnection(user);&lt;br/&gt;
So since users&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; was the DBO the insert succeeded.  Also the error SQLState was different than the one expected in the test, 42500 instead of 42502.  I think 42500 user does not have permission on table is correct.&lt;/p&gt;

&lt;p&gt;For the updates I simply uncommented the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2893&quot; title=&quot;INSERT and UPDATES succeed when permission has not been granted.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2893&quot;&gt;&lt;del&gt;DERBY-2893&lt;/del&gt;&lt;/a&gt; comment and it seemed to work. So I am not sure what the original problem was there.&lt;/p&gt;
</comment>
                            <comment id="12511560" author="kmarsden" created="Tue, 10 Jul 2007 21:13:19 +0100"  >&lt;p&gt;Downgrading this to a major test issue from critical bug.&lt;/p&gt;</comment>
                            <comment id="12511621" author="kmarsden" created="Wed, 11 Jul 2007 02:01:49 +0100"  >&lt;p&gt;porting the test and in fact copying the test verbatim to 10.3, I see the update case failing, where it passes on trunk. .  I am investigating that:&lt;br/&gt;
1) testColumnPrivileges(org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeTest)junit.framework.Assertio&lt;br/&gt;
Error: expected no UPDATE permission on table&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeTest.assertUpdatePrivilege(GrantRevokeTest&lt;br/&gt;
133)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeTest.testColumnPrivileges(GrantRevokeTest.&lt;br/&gt;
0)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:88)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;/p&gt;</comment>
                            <comment id="12511626" author="kmarsden" created="Wed, 11 Jul 2007 02:37:32 +0100"  >&lt;p&gt;Looking at the test, we have:&lt;/p&gt;

&lt;p&gt;	public void testColumnPrivileges() throws Exception {&lt;br/&gt;
		grant(&quot;select(c1),update(c3,c2),references(c3,c1,c2)&quot;, &quot;s1&quot;, &quot;t1&quot;, users&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;);&lt;br/&gt;
                ,,,,&lt;br/&gt;
		assertUpdatePrivilege(false, users&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;, &quot;S1&quot;, &quot;T1&quot;, new String[] &lt;/p&gt;
{&quot;C2&quot;, &quot;C3&quot;}
&lt;p&gt;);&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;But if I read the grant statement correctly, the first argument to assertUpdatePrivilege should be true, because we granted update to c3,c2. &lt;/p&gt;

&lt;p&gt;So, it makes sense why it was failing for Dan on trunk, for me on 10.3, but not why I saw it pass on trunk with this set to false.  Setting the first argument to true passes the test on both trunk and 10.3, so I think still we are dealing with a test issue, not a code issue if my logic that indeed user&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; was granted update permission on C2, and C3.&lt;/p&gt;

</comment>
                            <comment id="12511752" author="kmarsden" created="Wed, 11 Jul 2007 14:17:21 +0100"  >&lt;p&gt;Fixed issues with the test. This was not a product bug.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12361526" name="DERBY-2893_diff.txt" size="1840" author="kmarsden" created="Tue, 10 Jul 2007 21:06:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 9 Jul 2007 23:47:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23305</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11an:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39860</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>