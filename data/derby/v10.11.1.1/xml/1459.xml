<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1459/DERBY-1459.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1459] Early load of Derby driver with JDBC 4.0 autoloading can lead to derby properties not being processed or derby boot time actions consuming resources when a connection is made with another driver</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1459</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The addition of support for autoloading of Derby drivers, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-930&quot; title=&quot;Add support for autoloading of Derby client drivers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-930&quot;&gt;&lt;del&gt;DERBY-930&lt;/del&gt;&lt;/a&gt;, caused two potentially serious regresions for applications.&lt;/p&gt;


&lt;p&gt;1) Early load of driver can mean that  derby system properties, such as derby.system.home may not be processed by the driver because they are set after the driver is loaded.&lt;/p&gt;

&lt;p&gt;2) Early load of the driver can mean boot time operations, such as starting network server with derby.drda.startNetworkServer can happen even when Derby is never used if a connection is made to another database such as Oracle.&lt;/p&gt;


&lt;p&gt;The attached file autoloading_scenarios.html  shows scenarios that show these regressions plus another case that will regress if boot time operations are moved to the first Derby embedded connection.   I don&apos;t know what solution is available that would handle all three cases.&lt;/p&gt;


</description>
                <environment>JDK 1.6 </environment>
        <key id="12345065">DERBY-1459</key>
            <summary>Early load of Derby driver with JDBC 4.0 autoloading can lead to derby properties not being processed or derby boot time actions consuming resources when a connection is made with another driver</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Jun 2006 02:21:38 +0100</created>
                <updated>Tue, 30 Jun 2009 16:55:42 +0100</updated>
                            <resolved>Fri, 21 Jul 2006 20:14:02 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                    <component>Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12418093" author="kmarsden" created="Wed, 28 Jun 2006 03:09:28 +0100"  >&lt;p&gt;Document to show autoloading scenarios that need to be handled for 10.2&lt;/p&gt;</comment>
                            <comment id="12418107" author="rhillegas" created="Wed, 28 Jun 2006 04:24:35 +0100"  >&lt;p&gt;Knut Anders made an excellent suggestion for fixing this bug: Autoload a dummy driver which doesn&apos;t boot the engine but which indirects to the appropriate embedded driver. I am attaching a patch which does this: bug1459_v01.diff. Please review this approach and let me know what you think. If this seems like a good approach, I will continue testing it.&lt;/p&gt;

&lt;p&gt;Here is Derby&apos;s behavior under this patch:&lt;/p&gt;

&lt;p&gt;o Instead of autoloading EmbeddedDriver, we autoload a new driver: AutoloadedDriver.&lt;br/&gt;
o The DriverManager registers AutoloadedDriver rather than Driver20, Driver30, or Driver40.&lt;br/&gt;
o The engine does NOT boot at autoload time.&lt;br/&gt;
o The engine does boot if you do the following:&lt;/p&gt;

&lt;p&gt;1) Ask the DriverManager to connect to an embedded Derby database&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;2) Class.forName( &quot;org.apache.derby.jdbc.EmbeddedDriver&quot; );&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;3) Class.forName( &quot;org.apache.derby.jdbc.EmbeddedDriver&quot; ).newInstance();&lt;/p&gt;

&lt;p&gt;-----------------------------------&lt;/p&gt;

&lt;p&gt;This patch touches the following files:&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\jdbc\EmbeddedDataSource.java&lt;/p&gt;

&lt;p&gt;Changed to indirect to the booted driver through AutoloadedDriver.&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\jdbc\EmbeddedDriver.java&lt;/p&gt;

&lt;p&gt;Now extends AutoloadedDriver. All that remains in this class are the static initializer and constructor needed to get the right booting behavior out of Class.forName() and Class.forName().newInstance().&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\jdbc\Driver20.java&lt;/p&gt;

&lt;p&gt;Changed to forward driver registration to AutoloadedDriver.&lt;/p&gt;

&lt;p&gt;A      java\engine\org\apache\derby\jdbc\AutoloadedDriver.java&lt;/p&gt;

&lt;p&gt;New, dummy driver which holds the guts of what used to be in EmbeddedDriver. The java.sql.Driver methods in this new class indirect to the appropriate driver module (Driver20, Driver30, or Driver40).&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\loc\messages_en.properties&lt;br/&gt;
M      java\shared\org\apache\derby\shared\common\reference\MessageId.java&lt;/p&gt;

&lt;p&gt;A little tweeking of error messages.&lt;/p&gt;

&lt;p&gt;M      build.xml&lt;/p&gt;

&lt;p&gt;Autoload directive changed to point at AutoloadedDriver rather than EmbeddedDriver.&lt;/p&gt;</comment>
                            <comment id="12418124" author="djd" created="Wed, 28 Jun 2006 04:57:54 +0100"  >&lt;p&gt;I think the general approach is good, but do we really want AutoloadedDriver to be part of the public api? With EmbeddedDriver extending this class it will become so.&lt;/p&gt;</comment>
                            <comment id="12418278" author="rhillegas" created="Thu, 29 Jun 2006 01:31:05 +0100"  >&lt;p&gt;Attaching bug1459_v02.diff, which hopefully addresses Dan&apos;s concern. In this version the public EmbeddedDriver has a rather than is an AutoloadeDriver.&lt;/p&gt;</comment>
                            <comment id="12418285" author="kmarsden" created="Thu, 29 Jun 2006 02:03:30 +0100"  >&lt;p&gt;The functional description as you have outlined it sounds great and I think would solve all the scenarios outlined.  I haven&apos;t looked carefully at the patch though.  With the new patch do the public interfaces not change at all?   &lt;/p&gt;

&lt;p&gt;Also, it would be great to see test cases added for the scenarios, using the client driver to simulate the unrelated driver.  Also it would be good to double check that the  demo program SimpleNetworkServerSample.java   works ok with the new scheme.&lt;/p&gt;

&lt;p&gt;Thanks Rick!&lt;/p&gt;</comment>
                            <comment id="12418294" author="rhillegas" created="Thu, 29 Jun 2006 03:16:19 +0100"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;With the new patch, the public interfaces should not change. Thanks for recommending those tests. I will add them to the jdbc4 test suite. And I will check out SimpleNetworkServerSample. Let me know what other tests you think are appropriate. I also intend to run derbyall against the jar files on jdks 1.3, 1.4, 1.5, and 1.6. So far, the 1.6 run looks good.&lt;/p&gt;</comment>
                            <comment id="12418299" author="djd" created="Thu, 29 Jun 2006 03:39:12 +0100"  >&lt;p&gt;The functional behaviour of EmbeddedDriver changes with this patch.&lt;/p&gt;

&lt;p&gt;Previously calls to the java.sql.Driver methods of EmbeddedDriver defered to the currently registered driver in DriverManager. Now they defer to a specific instance of the AutoloadedDriver which may not be registered with the DriverManager. Through the logic I think this means that the calls can throw an exception when they would previously succeed. This would be in the case the Derby driver had been loaded, unloaded and then loaded again. Seems to me that EmbeddedDriver should not change with this patch.&lt;br/&gt;
Even without an unload there is a chance (due to concurrent booting) the AutoloadedDriver stored in EmbeddedDriver is not the currently active one (ie. one registered with the DriverManager).&lt;/p&gt;

&lt;p&gt;Second issue that calling one of the methods of java.sql.Driver methods on EmbeddedDriver will now automatically load the Derby driver, whereas currently an exception will be thrown, driver not registered. Maybe this is intentional, it would be good to call this out. I&apos;m not sure it is a good idea, adds a new non-standard mechanism for autoloading, and we&apos;ve seen what  issues the standard autoloading has!&lt;/p&gt;</comment>
                            <comment id="12418327" author="rhillegas" created="Thu, 29 Jun 2006 05:52:05 +0100"  >&lt;p&gt;Thanks for continuing to review these patches, Dan. I&apos;ve attached another rev, bug1459_v03.diff. I hope this is converging on a solution and not just pushing the problem around! In this new rev, EmbeddedDriver defers its work to the booted driver module. Calling methods on an EmbeddedDriver should no longer automatically boot the engine.&lt;/p&gt;</comment>
                            <comment id="12418730" author="rhillegas" created="Sat, 1 Jul 2006 07:01:48 +0100"  >&lt;p&gt;Attaching bug1159_v04.diff. This rev of the patch makes the following changes:&lt;/p&gt;

&lt;p&gt;1) Adds a unit test (AutoloadBooting) to verify Kathey&apos;s scenarios.&lt;/p&gt;

&lt;p&gt;2) Makes some changes to AutoloadedDriver.acceptsURL() and AutoloadedDriver.connect() so that the DriverManager will not accidentally boot Derby while trying to connect through another driver. The problem is that when an application requests a Connection, the DriverManager will walk through all loaded drivers, passing the request on to each in turn. Depending on where your autoloaded driver sits in the list, this may trigger an attempt to connect through your driver.&lt;/p&gt;</comment>
                            <comment id="12420111" author="rhillegas" created="Tue, 11 Jul 2006 00:47:58 +0100"  >&lt;p&gt;I&apos;m beginning to run a battery of derbyalls against this patch using various VMs with and without jar files. So far derbyall runs cleanly (no errors at all) with this patch when run against 1.6 and the derby jar files.&lt;/p&gt;

&lt;p&gt;Unless someone objects to this patch, I plan to commit it if the tests pass.&lt;/p&gt;</comment>
                            <comment id="12420134" author="kmarsden" created="Tue, 11 Jul 2006 01:57:28 +0100"  >&lt;p&gt;Thanks so much Rick for looking this issue and to Olav for bringing it to the attention of the community.  &lt;br/&gt;
I just wanted to confirm.  &lt;br/&gt;
   1) Will this resolve  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1399&quot; title=&quot;DerbyNetAutoStart test fails on JDK 1.6 after introduction JDBC4 driver autoloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1399&quot;&gt;&lt;del&gt;DERBY-1399&lt;/del&gt;&lt;/a&gt; without changing the test?  &lt;br/&gt;
    2)  With this fix, do we expect  users upgrading to to 10.2 /jdk 16 see any impact to  their existing applications due to autoloading?&lt;/p&gt;


&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12420146" author="rhillegas" created="Tue, 11 Jul 2006 02:41:52 +0100"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;Here are some answers to your questions. And don&apos;t forget to thank Knut Anders, who suggested this approach!&lt;/p&gt;

&lt;p&gt;1) This approach should fix &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1399&quot; title=&quot;DerbyNetAutoStart test fails on JDK 1.6 after introduction JDBC4 driver autoloading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1399&quot;&gt;&lt;del&gt;DERBY-1399&lt;/del&gt;&lt;/a&gt;. My clean derbyall run against the jars on 1.6 confirms this.&lt;/p&gt;

&lt;p&gt;2) Under this approach, the 10.2/jdk1.6 engine should boot (and lookup system properties) in the same fashion as the current 10.1.3 engine does. There is a subtle differences though:&lt;/p&gt;

&lt;p&gt;DriverManager.getDriver() will return a different driver in 10.2, viz., AutoloadedDriver. In 10.1.3, this method returns Driver20 or Driver30 depending on the JDBC level. This could affect users who care about the name of the returned driver and who want to call public Derby-specific methods on these classes. Since these classes aren&apos;t part of our public API, I don&apos;t think we want to encourage or support this practice.&lt;/p&gt;

&lt;p&gt;I do not anticipate any impact for customers who have coded their applications against our published API.&lt;/p&gt;</comment>
                            <comment id="12420154" author="kmarsden" created="Tue, 11 Jul 2006 03:13:40 +0100"  >&lt;p&gt;Rick said:&lt;br/&gt;
&amp;gt;And don&apos;t forget to thank Knut Anders, who suggested this approach&lt;br/&gt;
Yes. Thanks Knut Anders!&lt;/p&gt;

&lt;p&gt;&amp;gt;I do not anticipate any impact for customers who have coded their applications against our published API.&lt;br/&gt;
Excellent!&lt;/p&gt;

&lt;p&gt;Also wanted to clarify that I have not reviewed the code change. but  the functional results of this patch of this patch as you describe them sound great to me.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12420955" author="rhillegas" created="Fri, 14 Jul 2006 06:25:18 +0100"  >&lt;p&gt;Committed at revision 421717. Derbyall ran cleanly against jar files and against the classtree on jdks 1.6, 1.5, and 1.4. The following issues occurred running against 1.3:&lt;/p&gt;

&lt;p&gt;1) Initially, the encryption tests failed. The encryption tests passed after I installed the Sun JCE jars.&lt;/p&gt;

&lt;p&gt;2) OutBufferedStream hung on 1.3. It also hung even on a clean subversion workspace without this patch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12344605">DERBY-1429</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12328677">DERBY-930</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12336017" name="autoloading_scenarios.html" size="4804" author="kmarsden" created="Wed, 28 Jun 2006 03:09:28 +0100"/>
                            <attachment id="12336019" name="bug1459_v01.diff" size="12656" author="rhillegas" created="Wed, 28 Jun 2006 04:24:35 +0100"/>
                            <attachment id="12336079" name="bug1459_v02.diff" size="12832" author="rhillegas" created="Thu, 29 Jun 2006 01:31:05 +0100"/>
                            <attachment id="12336113" name="bug1459_v03.diff" size="12691" author="rhillegas" created="Thu, 29 Jun 2006 05:52:05 +0100"/>
                            <attachment id="12336220" name="bug1459_v04.diff" size="33326" author="rhillegas" created="Sat, 1 Jul 2006 07:01:48 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Jun 2006 03:24:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22519</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0uyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38833</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>