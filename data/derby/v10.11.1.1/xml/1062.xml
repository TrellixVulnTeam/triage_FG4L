<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1062/DERBY-1062.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1062] Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter table</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1062</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt; Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter table&lt;br/&gt;
code. One suggested approach is to use the same mechanism as SYSCS_COMPRESS_TABLE. Such&lt;br/&gt;
an implementation would involve:&lt;br/&gt;
o change the parser for alter table to accecpt some internal only syntax for SYSCS_INPLACE_COMPRESS_TABLE&lt;br/&gt;
o change the alter table constant action to get the required information for inplace compress&lt;br/&gt;
o move most of the inplace compress driving code to a routine in alter table execution, following the same&lt;br/&gt;
     coding pattern as existing alter table compress.&lt;/p&gt;

&lt;p&gt;I believe doing this will have multiple benefits:&lt;br/&gt;
1) shares existing alter table code, so things like error checking, security management, ... is all done by one piece of code&lt;br/&gt;
2) by sharing the code I believe the following outstanding JIRA issues will be addressed: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-719&quot; title=&quot;Calling SYSCS_INPLACE_COMPRESS_TABLE on SYS.SYSTABLES results in a lock timeout, with only a single connection active&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-719&quot;&gt;&lt;del&gt;DERBY-719&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-720&quot; title=&quot;Calling SYSCS_INPLACE_COMPRESS_TABLE on a synonym or a temp table results in a NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-720&quot;&gt;DERBY-720&lt;/a&gt; -&lt;br/&gt;
3) future changes addressing ddl like grant/revoke will automatically work.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12329520">DERBY-1062</key>
            <summary>Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter table</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mikem">Mike Matrigali</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Feb 2006 07:24:13 +0000</created>
                <updated>Fri, 21 Jan 2011 17:48:33 +0000</updated>
                            <resolved>Tue, 22 Jul 2008 16:01:08 +0100</resolved>
                                    <version>10.1.3.1</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12595303" author="mamtas" created="Thu, 8 May 2008 17:03:35 +0100"  >&lt;p&gt;Currently, the way SYSCS_INPLACE_COMPRESS_TABLE is implemented, it allows inplace compress of *&lt;b&gt;system tables&lt;/b&gt;*. &lt;/p&gt;

&lt;p&gt;The goal of this jira entry is to use the existing ALTER TABLE code for SYSCS_INPLACE_COMPRESS_TABLE rather than having SYSCS_INPLACE_COMPRESS_TABLE&apos;s own implementation in iapi.db.OnlineCompress. One problem I am encountering when I have SYSCS_INPLACE_COMPRESS_TABLE use ALTER TABLE code is that ALTER TABLE can&apos;t be issued on a system table. (See impl.sql.compile.AlterTableNode:init method and bindStatement method). AlterTableNode uses getSchemaDescriptor() (which is implemented in it&apos;s super class DDLStatementNode) call in it&apos;s init method to get the schema descriptor for the requested schema. getSchemaDescriptor() will throw an exception if the schema is system schema. Similarly, in bindStatement() in AlterTableNode, we use getTableDescriptor (which is implemented in it&apos;s super class DDLStatementNode) to get TableDescriptor. The getTableDescriptor() method internally calls getSchemaDescriptor which will throw exception if we are dealing with system schema.&lt;/p&gt;

&lt;p&gt;In order to get around this system schema check for SYSCS_INPLACE_COMPRESS_TABLE, I am in the process of changing/adding getters for SchemaDescriptor and TableDescriptor in case of inplace compress. None of the junit tests will run without this fix because the junit tests in their clean up database code issue inplace compress on system tables. &lt;/p&gt;

&lt;p&gt;I thought I would share where I was with this issue in case anyone has comments.&lt;/p&gt;</comment>
                            <comment id="12596508" author="mamtas" created="Tue, 13 May 2008 20:32:21 +0100"  >&lt;p&gt;I just finished committing changes for this jira entry. The revision number of commit is 655980. If anyone has any comments on the checkin, please post them here. Thanks&lt;/p&gt;</comment>
                            <comment id="12596510" author="kmarsden" created="Tue, 13 May 2008 20:37:42 +0100"  >&lt;p&gt;I didn&apos;t take a close look at the patch, but this diff caught my eye.  Is there a case that used to compress that now throws an error?&lt;/p&gt;

&lt;p&gt;&quot;SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE(&apos;SWIPER&apos;, &quot;&lt;br/&gt;
             + &quot;&apos;MYTAB&apos;, 1, 1, 1)&quot;);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;assertUpdateCount(cSt, 0);&lt;br/&gt;
+        assertStatementError(&quot;38000&quot;, cSt);&lt;br/&gt;
         cSt.close();&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12596516" author="mamtas" created="Tue, 13 May 2008 20:52:40 +0100"  >&lt;p&gt;My earlier checkin 655980 caused build failures because of import of deleted OnlineCompress in few test files. Hopefully my checkin 655989 will take care of the build problems.&lt;/p&gt;</comment>
                            <comment id="12596519" author="mamtas" created="Tue, 13 May 2008 20:57:17 +0100"  >&lt;p&gt;Thanks for taking a look at the patch, Kathey. The test was testing to compress a table that is not owned by the user issuing SYSCS_INPLACE_COMPRESS_TABLE. After the fix for this jira entry, we correctly throw &quot;38000&quot; just like what we do for SYSCS_COMPRESS_TABLE. I hope that answers your question. I have fixed the comment in GrantRevokeDDLTest which said that SYSCS_INPLACE_COMPRESS_TABLE will not behave correctly until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1062&quot; title=&quot;Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1062&quot;&gt;&lt;del&gt;DERBY-1062&lt;/del&gt;&lt;/a&gt; is fixed. The comment fix went in as revision 655990.&lt;/p&gt;</comment>
                            <comment id="12596775" author="knutanders" created="Wed, 14 May 2008 15:33:06 +0100"  >&lt;p&gt;The commit introduced the following javadoc warnings:&lt;/p&gt;

&lt;p&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:597: warning - @param argument &quot;schemaName&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:597: warning - @param argument &quot;tableName&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:597: warning - @param argument &quot;data_dictionary&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:646: warning - @param argument &quot;schemaName&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:646: warning - @param argument &quot;tableName&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:646: warning - @param argument &quot;data_dictionary&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:998: warning - @param argument &quot;schemaName&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:998: warning - @param argument &quot;tableName&quot; is not a parameter name.&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /code/derby/trunk0/java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java:998: warning - @param argument &quot;data_dictionary&quot; is not a parameter name.&lt;/p&gt;</comment>
                            <comment id="12596787" author="knutanders" created="Wed, 14 May 2008 16:04:04 +0100"  >&lt;p&gt;SystemProcedures.SYSCS_INPLACE_COMPRESS_TABLE() doesn&apos;t escape special characters in schema name and table name properly. If the schema or table has a double quote in its name, a syntax error will be thrown, I think.&lt;/p&gt;

&lt;p&gt;I don&apos;t quite understand how the boolean&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; variables in sqlgrammar.alterTableBody() are used. I don&apos;t see that they are changed from their default value anywhere.&lt;/p&gt;

&lt;p&gt;Nit: It&apos;s better to use Boolean.valueOf() instead of new Boolean() in sqlgrammar.jj to avoid creation of new objects. (We could probably do the same thing with the boolean&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; variables if they were changed to Boolean.)&lt;/p&gt;</comment>
                            <comment id="12596804" author="mamtas" created="Wed, 14 May 2008 16:57:08 +0100"  >&lt;p&gt;Checked in a fix for javadoc warnings with revision 656323. Thanks for noticing them, Knut.&lt;/p&gt;</comment>
                            <comment id="12596822" author="mamtas" created="Wed, 14 May 2008 17:45:25 +0100"  >&lt;p&gt;One of the review comments from Kunt is&lt;br/&gt;
************&lt;br/&gt;
I don&apos;t quite understand how the boolean&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; variables in sqlgrammar.alterTableBody() are used. I don&apos;t see that they are changed from their default value anywhere. &lt;br/&gt;
************&lt;/p&gt;

&lt;p&gt;impl.sql.compile.AlterTableNode has couple of init methods and one of those init methods eventually get called when the parser has code like following&lt;br/&gt;
	return (StatementNode) nodeFactory.getNode(&lt;br/&gt;
		C_NodeTypes.ALTER_TABLE_NODE,&lt;br/&gt;
		........,&lt;br/&gt;
		getContextManager());&lt;/p&gt;

&lt;p&gt;One of the init methods in AlterTableNode has all the possible parameters that an alter table can be called with. The signature of that method is as follows&lt;br/&gt;
	public void init(&lt;br/&gt;
		Object objectName,&lt;br/&gt;
		Object tableElementList,&lt;br/&gt;
		Object lockGranularity,&lt;br/&gt;
		Object changeType,&lt;br/&gt;
		Object behavior,&lt;br/&gt;
		Object sequential,&lt;br/&gt;
		Object purge,&lt;br/&gt;
		Object defragment,&lt;br/&gt;
		Object truncateEndOfTable )&lt;/p&gt;

&lt;p&gt;And this method gets called by sqlgrammar.alterTableBody() when it issues following&lt;br/&gt;
		return (StatementNode) nodeFactory.getNode(&lt;br/&gt;
			C_NodeTypes.ALTER_TABLE_NODE,&lt;br/&gt;
			tableName,&lt;br/&gt;
			tableElementList,&lt;br/&gt;
			new Character(lockGranularity),&lt;br/&gt;
			changeType,&lt;br/&gt;
			behavior,&lt;br/&gt;
			sequential, &lt;br/&gt;
			purge, &lt;br/&gt;
			defragment, &lt;br/&gt;
			truncateEndOfTable,&lt;br/&gt;
			getContextManager());&lt;/p&gt;

&lt;p&gt;But the parameters sequential, purge, defragment, truncateEndOfTable will never be set to true when coming through this alterTableBody path. I can work on removing these parameters and see how it goes.&lt;/p&gt;</comment>
                            <comment id="12597572" author="mamtas" created="Fri, 16 May 2008 19:35:34 +0100"  >&lt;p&gt;Checked in code to cleanup sqlgrammar.jj with revision 657154. When I ran Junit suite on my Windows XP machine with Sun jdk1.6, I saw an assert failure in ReplicationRun_Local_StateTest_part2._testPreStoppedSlave at line 235. i do not believe this is related to my changes. When i ran the test stand along, I didn&apos;t see the failure. &lt;/p&gt;</comment>
                            <comment id="12597582" author="mamtas" created="Fri, 16 May 2008 20:20:36 +0100"  >&lt;p&gt;Knut, I wanted to address your comment &quot;SystemProcedures.SYSCS_INPLACE_COMPRESS_TABLE() doesn&apos;t escape special characters in schema name and table name properly. If the schema or table has a double quote in its name, a syntax error will be thrown, I think. &quot; but i don&apos;t quiet understand it. Do you have an example? inplace compress should treat the special characters in schema name and table name same as ALTER TABLE because now we are sharing the same code.&lt;/p&gt;</comment>
                            <comment id="12597642" author="knutanders" created="Fri, 16 May 2008 23:42:29 +0100"  >&lt;p&gt;Try this script:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:db;create=true&apos;;&lt;br/&gt;
create table APP.&quot;test&quot;&quot;table&quot; (x int);&lt;br/&gt;
call syscs_util.syscs_inplace_compress_table(&apos;APP&apos;, &apos;test&quot;table&apos;, 1, 1, 1);&lt;/p&gt;

&lt;p&gt;It succeeds on 10.4.1.3. On trunk, it fails:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; call syscs_util.syscs_inplace_compress_table(&apos;APP&apos;, &apos;test&quot;table&apos;, 1, 1, 1);&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: Syntax error: Encountered &quot;table&quot; at line 1, column 25.&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;table&quot; at line 1, column 25.&lt;/p&gt;</comment>
                            <comment id="12597648" author="knutanders" created="Fri, 16 May 2008 23:59:01 +0100"  >&lt;p&gt;By the way, it would make life easier for the reviewers if the patches were attached to the JIRA issue before they were committed. It takes more effort to find the patch in the commit log than just clicking on it in JIRA, so attaching it would increase the chance of getting someone to look through the changes.&lt;/p&gt;</comment>
                            <comment id="12598371" author="mamtas" created="Tue, 20 May 2008 18:50:34 +0100"  >&lt;p&gt;In 10.4, for syscs_inplace_compress_table, we did not convert syscs_inplace_compress_table into an ALTER TABLE statement and hence we did not go through SQL parser processing of schem or table name in ALTER TABLE sql. &lt;/p&gt;

&lt;p&gt;Taking the example provided by Knut, &lt;br/&gt;
call syscs_util.syscs_inplace_compress_table(&apos;APP&apos;, &apos;test&quot;table&apos;, 1, 1, 1); &lt;br/&gt;
in 10.4, SQL parser simply read the schema name as APP and table as test&quot;table and let the OnlineCompress.compressTable do the validation of schemaname.tablename&lt;br/&gt;
In 10.5, we now internally convert call syscs_util.syscs_inplace_compress_table(&apos;APP&apos;, &apos;test&quot;table&apos;, 1, 1, 1); to&lt;br/&gt;
alter table &quot;APP&quot;.&quot;test&quot;table&quot; compress inplace purge defragment truncate_end&lt;br/&gt;
As can be seen from ALTER TABLE sql above, it is going to result into parsing errors because the &quot; inside the table name has not been escaped. &lt;/p&gt;

&lt;p&gt;The behavior for syscs_inplace_compress_table in 10.5 now matches the behavior for syscs_compress_table. In order to compress the table in example above using syscs_compress_table, you have to give like following in both 10.4 and 10.5&lt;br/&gt;
call syscs_util.syscs_compress_table(&apos;APP&apos;, &apos;test&quot;&quot;table&apos;, 1);&lt;/p&gt;

&lt;p&gt;So, I agree that &quot;call syscs_util.syscs_compress_table(...)&quot; issued for inplace compress for special characters in schema name or table name has changed between 10.4 and 10.5 for syscs_inplace_compress_table. I think to keep the same syntax between the 2 releases will be pretty tricky with the way we generate ALTER TABLE in 10.5 (SystemProcedure.SYSCS_INPLACE_COMPRESS_TABLE). I would like to know if it would be fine to have this change in SQL syntax between 10.4 and 10.5 for schema and/or table names involving special characters. This will also result in the 2 compress CALLs have the same syntax in 10.5 when dealing with special characters in table name and schema name.&lt;/p&gt;</comment>
                            <comment id="12598408" author="knutanders" created="Tue, 20 May 2008 20:10:12 +0100"  >&lt;p&gt;It&apos;s actually very simple to fix (see the attached patch d1062-escape.diff), so I&apos;d rather see both of the procedures fixed than both of them broken.&lt;/p&gt;

&lt;p&gt;I haven&apos;t run any tests on the patch, but I&apos;ll do so and commit it if there are no objections to this approach. I&apos;ll also add a test case.&lt;/p&gt;</comment>
                            <comment id="12598456" author="mamtas" created="Tue, 20 May 2008 21:42:12 +0100"  >&lt;p&gt;Knut, it indeed does look easy. I was running around the wrong bush and was thinking that I would need to somehow change the parser for the special case of ALTER TABLE when it is called for inplace compress. But of course, it is easier to tackle it when the ALTER TABLE sql is being generated rather than when it is being parsed.&lt;/p&gt;

&lt;p&gt;With your patch, I was not sure if always quoting the schema name and table name will work in all cases but it appears that the parameters to these system procedures are always case sensitive and hence it is ok to always quote them. For instance, in 10.4, following works&lt;br/&gt;
call syscs_util.syscs_compress_table(&apos;APP&apos;, &apos;test&quot;&quot;table&apos;, 1);&lt;br/&gt;
but if I use lower case app for schema, it does not work&lt;br/&gt;
call syscs_util.syscs_compress_table(&apos;app&apos;, &apos;test&quot;&quot;table&apos;, 1);&lt;br/&gt;
So, with your proposed solution, quoting the schema name and table name always should not cause a problem.&lt;/p&gt;

&lt;p&gt;I saw another system stored procedure, SYSCS_BULK_INSERT, in SystemProcedure which generates its own SQL and it does not seem to handle special characters either. It can be taken up as separate task but might be worth making it&apos;s behavior match the other system procedures.&lt;/p&gt;

&lt;p&gt;I haven&apos;t run any tests with the patch yet. If the tests pass for you and no further comments from anyone, feel free to commit the patch.&lt;/p&gt;</comment>
                            <comment id="12598591" author="knutanders" created="Wed, 21 May 2008 09:48:42 +0100"  >&lt;p&gt;Thanks for looking at the patch, Mamta. Attached is an updated version which also adds a test case. Committed revision 658604.&lt;/p&gt;</comment>
                            <comment id="12598593" author="knutanders" created="Wed, 21 May 2008 10:06:03 +0100"  >&lt;p&gt;The SYSCS_BULK_INSERT procedure is in fact even worse since it doesn&apos;t quote the identifiers at all. Additionally, it doesn&apos;t escape single quotes in the string parameters passed in to the VTI. I logged a separate issue for this, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3682&quot; title=&quot;SYSCS_BULK_INSERT doesn&amp;#39;t quote identifiers or strings properly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3682&quot;&gt;&lt;del&gt;DERBY-3682&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12598640" author="bryanpendleton" created="Wed, 21 May 2008 14:18:31 +0100"  >&lt;p&gt;Perhaps org.apache.derby.iapi.util.IdUtil.normalToDelimited can&lt;br/&gt;
be used for the identifier handling, instead of adding a separate&lt;br/&gt;
escapeSQLIdentifier() method?&lt;/p&gt;</comment>
                            <comment id="12598645" author="knutanders" created="Wed, 21 May 2008 14:53:25 +0100"  >&lt;p&gt;Thanks Bryan, I did a quick search to see if we had a utility method but couldn&apos;t find one. The one in IdUtil seems to be fine, though. To fix SYSCS_BULK_INSERT (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3682&quot; title=&quot;SYSCS_BULK_INSERT doesn&amp;#39;t quote identifiers or strings properly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3682&quot;&gt;&lt;del&gt;DERBY-3682&lt;/del&gt;&lt;/a&gt;), we&apos;ll need a similar one for string literals. The only difference is that it uses single quotes instead of double quotes. Do you know if we have a utility method for string literals too?&lt;/p&gt;</comment>
                            <comment id="12615637" author="mamtas" created="Tue, 22 Jul 2008 16:01:08 +0100"  >&lt;p&gt;Closing the issue because the work for this issue is finished.&lt;/p&gt;</comment>
                            <comment id="12693853" author="suranjay" created="Mon, 30 Mar 2009 18:29:50 +0100"  >&lt;p&gt;When runnig the test &lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest &lt;br/&gt;
in soft upgrade mode with 10.4.2.0 -&amp;gt; 10.5.1.0 (RC1) I came across these failures. The failures occur when the the test is run alone, as well as as part of suites.All.&lt;/p&gt;

&lt;p&gt;29) testSpaceTable(org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest)junit.framework.ComparisonFailure: Unexpected SQL state. expected:&amp;lt;42&lt;span class=&quot;error&quot;&gt;&amp;#91;X0&amp;#93;&lt;/span&gt;5&amp;gt; but was:&amp;lt;42&lt;span class=&quot;error&quot;&gt;&amp;#91;Y5&amp;#93;&lt;/span&gt;5&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(BaseJDBCTestCase.java:752)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(BaseJDBCTestCase.java:787)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(BaseJDBCTestCase.java:801)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(BaseJDBCTestCase.java:1050)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.checkIllegalUses(SysDiagVTIMappingTest.java:753)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.testSpaceTable(SysDiagVTIMappingTest.java:364)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:102)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: java.sql.SQLSyntaxErrorException: &apos;ALTER TABLE&apos; cannot be performed on &apos;SYSCS_DIAG.SPACE_TABLE&apos; because it does not exist.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement40.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.catalog.SystemProcedures.SYSCS_INPLACE_COMPRESS_TABLE(Unknown Source)&lt;br/&gt;
	at org.apache.derby.exe.acc736ed92x0120x437exc69cx0000579eff6817.g0(Unknown Source)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(BaseJDBCTestCase.java:1045)&lt;br/&gt;
	... 41 more&lt;br/&gt;
Caused by: java.sql.SQLException: &apos;ALTER TABLE&apos; cannot be performed on &apos;SYSCS_DIAG.SPACE_TABLE&apos; because it does not exist.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
	... 69 more&lt;br/&gt;
Caused by: ERROR 42Y55: &apos;ALTER TABLE&apos; cannot be performed on &apos;SYSCS_DIAG.SPACE_TABLE&apos; because it does not exist.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DDLStatementNode.justGetDescriptor(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DDLStatementNode.getTableDescriptor(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.AlterTableNode.bindStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	... 63 more&lt;/p&gt;


&lt;p&gt;And similar failures in &lt;br/&gt;
testStatementDuration&lt;br/&gt;
testErrorLogReader&lt;br/&gt;
testSpaceTable.&lt;/p&gt;

&lt;p&gt;If the message change was intentional as a fix of this issue,  should a release note be made regarding it?&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
Suran&lt;/p&gt;




</comment>
                            <comment id="12695076" author="mamtas" created="Thu, 2 Apr 2009 19:11:25 +0100"  >&lt;p&gt;Suran, you are right. The error message and code indeed has changed. In 10.4, we had a separate java class OnlineCompress.java which did the compression and did it&apos;s own exception throwing in case of errors. With &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1062&quot; title=&quot;Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1062&quot;&gt;&lt;del&gt;DERBY-1062&lt;/del&gt;&lt;/a&gt;, we removed that class to remove the duplication of the code since the compress code already existed in ALTER TABLE code path. The exception thrown from ALTER TABLE code path is little different than what was thrown by OnlineCompress.java&lt;/p&gt;

&lt;p&gt;So, yes, we should document it in release notes this behavior. I will work on it. Thanks for reporting this mismatch in behavior.&lt;/p&gt;</comment>
                            <comment id="12695199" author="kmarsden" created="Fri, 3 Apr 2009 01:59:18 +0100"  >&lt;p&gt;I think we could also file an Improvement issue to improve the error message.&lt;br/&gt;
ERROR 42Y55: &apos;ALTER TABLE&apos; cannot be performed on &apos;SYSCS_DIAG.SPACE_TABLE&apos; because it does not exist.  when the user called SYSCS_INPLACE_COMPRESS_TABLE is a little confusing.&lt;/p&gt;

&lt;p&gt;of course that would mean changing the message again or perhaps changing it back to the previous less specific but sufficiently informative: ERROR 42X05: Table/View SYSCS_DIAG.SPACE_TABLE  does not exist.&lt;/p&gt;</comment>
                            <comment id="12695588" author="mamtas" created="Fri, 3 Apr 2009 22:20:06 +0100"  >&lt;p&gt;Kathey, I agree with what you are saying. It is confusing to get an error message for alter table when the user never sent ALTER TABLE... sql I was thinking I will go ahead and create the release note for the current behavior and we can discuss what the error message should look like so it is not confusing. With the old implementation, we could be very specific and say Table does not exist but now that we try to use ALTER TABLE code internally, we are falling into the mechanism of ALTER TABLE implementation where we don&apos;t distinguish internal calls to ALTER TABLE and throw generic error message which includes ALTER TABLE text in it.&lt;/p&gt;

&lt;p&gt;So, is it ok if I provide a release note for what the current behavior is in 10.5 or should we make code changes so the error message is not misleading? I am open to any of the two.&lt;/p&gt;</comment>
                            <comment id="12695638" author="mikem" created="Sat, 4 Apr 2009 00:09:39 +0100"  >&lt;p&gt;I agree, document it as it is.  I would think best to change the text of the error message to be less specific about the caller now that the code is shared, while still explicitly documented the actual problem.  Something like &quot;Operation failed because table/view xxx does not exist&quot;.  It will be a little less informative to alter table users, but they should already know what statement they are executing.  If the error is in the derby.log then the statement is actually printed.&lt;/p&gt;

&lt;p&gt;I would rather not see more code in the alter table code trying to figure out who called it.&lt;/p&gt;</comment>
                            <comment id="12695651" author="kmarsden" created="Sat, 4 Apr 2009 01:28:49 +0100"  >&lt;p&gt;That sounds good to me, then the SQLState wouldn&apos;t change again.&lt;/p&gt;</comment>
                            <comment id="12695974" author="mamtas" created="Mon, 6 Apr 2009 06:03:01 +0100"  >&lt;p&gt;Attaching release notes for the jira entry. Please let me know if there is any feedback on it.&lt;/p&gt;</comment>
                            <comment id="12695989" author="knutanders" created="Mon, 6 Apr 2009 07:31:45 +0100"  >&lt;p&gt;The release note looks good to me.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12382443" name="d1062-escape.diff" size="5556" author="knutanders" created="Wed, 21 May 2008 09:48:42 +0100"/>
                            <attachment id="12382405" name="d1062-escape.diff" size="2101" author="knutanders" created="Tue, 20 May 2008 20:10:12 +0100"/>
                            <attachment id="12404693" name="releaseNote.html" size="4563" author="mamtas" created="Mon, 6 Apr 2009 06:03:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 May 2008 16:03:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29838</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0n7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37578</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>