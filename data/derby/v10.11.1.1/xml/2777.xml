<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:27:36 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2777/DERBY-2777.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2777] Parameters should take their collation from the context in which they are getting used rather than the current compilation schema</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2777</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;With revision 542646, changes were made so that parameters will take their collation from current compilation schema. But based on the following thread &lt;a href=&quot;http://www.nabble.com/Collation-and-parameter-markers-(-)-tf3866040.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Collation-and-parameter-markers-(-)-tf3866040.html&lt;/a&gt; , using the collation from the context would be the correct thing to do for the parameters.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12371163">DERBY-2777</key>
            <summary>Parameters should take their collation from the context in which they are getting used rather than the current compilation schema</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jun 2007 19:31:49 +0100</created>
                <updated>Fri, 6 Jul 2007 09:51:00 +0100</updated>
                            <resolved>Fri, 6 Jul 2007 09:50:26 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12502534" author="mamtas" created="Thu, 7 Jun 2007 22:28:44 +0100"  >&lt;p&gt;Fixed the parameters collation type for IN operator with revision 545319. Commit comments are as follows&lt;/p&gt;

&lt;p&gt;Fixed the combination of IN operator and parameters so that the parameters take their collation from the context and not from the current compilation schema.&lt;/p&gt;</comment>
                            <comment id="12502541" author="mamtas" created="Thu, 7 Jun 2007 22:39:47 +0100"  >&lt;p&gt;Fixed the parameters collation type in binary operators with revision 545323. Commit comments are as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Fixed the combination of binary operator and parameters so that the parameters take their collation from the context and not from the current compilation schema. eg ? = TABLENAME&lt;/p&gt;</comment>
                            <comment id="12502703" author="mamtas" created="Fri, 8 Jun 2007 08:09:47 +0100"  >&lt;p&gt;Fixed the parameters collation type in concatenation operation with revision 545443. Commit comments are as follows &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt; &lt;br/&gt;
Fixed the combination of CONCATENATION operator and parameters so that the parameters take their collation from the context and not from the current compilation schema. eg ? || TABLENAME &lt;/p&gt;</comment>
                            <comment id="12502905" author="mamtas" created="Fri, 8 Jun 2007 19:56:35 +0100"  >&lt;p&gt;Fixed the parameters collation type in IS &lt;span class=&quot;error&quot;&gt;&amp;#91;NOT&amp;#93;&lt;/span&gt; NULL operation with revision 545593. Also fixed the test case for concatenation, Commit comments are as follows &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Fixed the combination of IS NULL and parameters so that the parameters take their collation from the context and not from the current compilation schema. Also, the earlier checkin for test case of CONCATENATION was incorrect. This commit fixes that too.&lt;/p&gt;</comment>
                            <comment id="12502936" author="mamtas" created="Fri, 8 Jun 2007 22:09:42 +0100"  >&lt;p&gt;Fixed the parameters collation type in LENGTH operator with revision 545621. Commit comments are as follows &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Fixed the combination of LENGTH operator and parameters so that the parameters take their collation from the context and not from the current compilation schema. In fact, it appears that LENGTH operator is not allowed to take a parameter and user would get sql exception 42X36 if LENGTH was used with a parameter. I have added a test case for that.&lt;/p&gt;</comment>
                            <comment id="12502938" author="mamtas" created="Fri, 8 Jun 2007 22:17:34 +0100"  >&lt;p&gt;Collation does not apply to parameters to &quot;+&quot;,&quot;-&quot;,&quot;SQRT&quot;, &quot;ABS/ABSVAL&quot; because they only take numeric values.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Unary arithmetic operators &quot;+&quot;,&quot;-&quot;,&quot;SQRT&quot;, &quot;ABS/ABSVAL&quot; only take numeric parameters and hence no need to worry about collation information on parameters to these operators.&lt;/p&gt;</comment>
                            <comment id="12502946" author="mamtas" created="Fri, 8 Jun 2007 22:41:40 +0100"  >&lt;p&gt;Checkin 545639 with following comments&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
I realized that there are no negative test case for parameter inside XMLSERIALIZE funciton. Adding them as part of this checkin. Parameters are not supported inside XMLSERIALIZE and that&apos;s what the new test cases are checking. No collation involved for parameter inside this function because parameter inside XMLSERIALIZE will fail at compilation time.&lt;/p&gt;</comment>
                            <comment id="12503031" author="mamtas" created="Sat, 9 Jun 2007 09:02:02 +0100"  >&lt;p&gt;Checkin 545708 with following comments&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Make sure that for operators like BOOLEAN, the collation information is picked from the context and not from the current compilation schema.&lt;/p&gt;</comment>
                            <comment id="12503032" author="mamtas" created="Sat, 9 Jun 2007 09:08:48 +0100"  >&lt;p&gt;Checkin 545709 with following comments&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Earlier checkins 543266 and 542646 were incorrectly trying to set collation for DATA and TIME DataTypeDescriptors. With this checkin, I am removing that code. Collation only applies to character string types. &lt;/p&gt;</comment>
                            <comment id="12503037" author="mamtas" created="Sat, 9 Jun 2007 09:51:25 +0100"  >&lt;p&gt;Checkin 545712 with following comments&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
ResultColumn was using current compilation schema&apos;s collation if there is a parameter involved. Instead, let the parameter pick up it&apos;s collation from it&apos;s context.&lt;/p&gt;</comment>
                            <comment id="12503040" author="mamtas" created="Sat, 9 Jun 2007 10:10:57 +0100"  >&lt;p&gt;Checkin 545716 with following comments &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
ResultSetNode was using current compilation schema&apos;s collation if there is a parameter involved. Instead, let the parameter pick up it&apos;s collation from it&apos;s context.&lt;/p&gt;
</comment>
                            <comment id="12503221" author="mamtas" created="Sun, 10 Jun 2007 22:50:12 +0100"  >&lt;p&gt;Checkin 545950 with following comments &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
MethodCallNode was using current compilation schema&apos;s collation if there is a parameter involved. Instead, let the parameter pick up it&apos;s collation from it&apos;s context.&lt;/p&gt;</comment>
                            <comment id="12503273" author="mamtas" created="Mon, 11 Jun 2007 05:45:10 +0100"  >&lt;p&gt;Checkin 546002 with following comments &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
SetOperatorNode was using current compilation schema&apos;s collation if there is a parameter involved. Instead, let the parameter pick up it&apos;s collation from it&apos;s context.&lt;/p&gt;</comment>
                            <comment id="12503278" author="mamtas" created="Mon, 11 Jun 2007 06:09:21 +0100"  >&lt;p&gt;Checkin 546007 with following comments &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt; &lt;br/&gt;
StaticMethodCallNode was using current compilation schema&apos;s collation if there is a parameter involved. Instead, let the parameter pick up it&apos;s collation from it&apos;s context. &lt;/p&gt;</comment>
                            <comment id="12503294" author="mamtas" created="Mon, 11 Jun 2007 07:12:06 +0100"  >&lt;p&gt;Checkin 546023 with following comments &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt; &lt;br/&gt;
CastllNode was using current compilation schema&apos;s collation if there is a parameter involved. Instead, let the parameter pick up it&apos;s collation from it&apos;s context. &lt;/p&gt;</comment>
                            <comment id="12504641" author="mamtas" created="Thu, 14 Jun 2007 11:26:08 +0100"  >&lt;p&gt;All the parameter code has been checked in with various commits listed earlier in this Jira entry&apos;s various comments.&lt;/p&gt;</comment>
                            <comment id="12510400" author="mamtas" created="Thu, 5 Jul 2007 17:29:18 +0100"  >&lt;p&gt;Collation pickup logic for parameters in LIKE node is incomplete. I will soon make a checkin to fix that problem.&lt;/p&gt;</comment>
                            <comment id="12510405" author="mamtas" created="Thu, 5 Jul 2007 17:53:07 +0100"  >&lt;p&gt;Fixed the parameter collation setting for LIKE clause in both main (revision 553557) and 10.3.1.1 (revision 553560). The commit comments are as follows and it explains the fix&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, the parameters in LIKE clause always pickup their collation from the compilation schema. That logic is not &lt;br/&gt;
complete. I am fixing that logic here along with addition of some tests.&lt;/p&gt;

&lt;p&gt;For the sake of explanation, let me use the following syntax for LIKE clause&lt;br/&gt;
receiver LIKE leftOperand ESCAPE rightOperand&lt;br/&gt;
With the fix in this patch, if receiver is a parameter, it will set it&apos;s collation using following logic&lt;br/&gt;
1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2&lt;br/&gt;
2)check if rightOperand is not a parameter. If yes, then receiver will pick up collation from rightOperand. If not, goto step 3&lt;br/&gt;
3)receiver picks up the collation of the compilation schema because everything in the LIKE clause is ?&lt;/p&gt;

&lt;p&gt;Next, if leftOperand is a parameter, it will set it&apos;s collation using receiver. By this time, even if receiver is a&lt;br/&gt;
parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct&lt;br/&gt;
collation IF leftOperand is a parameter.&lt;/p&gt;

&lt;p&gt;Next, if rightOperand is a parameter, it will set it&apos;s collation using receiver. By this time, even if receiver is a&lt;br/&gt;
parameter, we have set correct collation for receiver and hence rightOperand can simply rely on receiver for correct&lt;br/&gt;
collation IF rightOperand is a parameter.&lt;/p&gt;</comment>
                            <comment id="12510532" author="myrna" created="Fri, 6 Jul 2007 01:08:21 +0100"  >&lt;p&gt;reopen, it is causing the following trouble in the tinderbox:&lt;br/&gt;
org.apache.derbyTesting.functionTests.suites.All fail *************************************************************&lt;br/&gt;
1) testDefaultCollation(org.apache.derbyTesting.functionTests.tests.lang.CollationTest2)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
2) testPolishCollation(org.apache.derbyTesting.functionTests.tests.lang.CollationTest2)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
3) testNorwayCollation(org.apache.derbyTesting.functionTests.tests.lang.CollationTest2)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
4) testEnglishCollation(org.apache.derbyTesting.functionTests.tests.lang.CollationTest2)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
5) testDefaultJVMTerritoryCollation(org.apache.derbyTesting.functionTests.tests.lang.CollationTest2)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;/p&gt;
</comment>
                            <comment id="12510557" author="mamtas" created="Fri, 6 Jul 2007 03:50:53 +0100"  >&lt;p&gt;Checked in a fix for the CollaitonTest2 failure. The changes went in main(revision 553703) and 10.3.1.1(revision 553704) and commit comments are as follows&lt;/p&gt;

&lt;p&gt;A trivial change to CollationTest2 test. Rather than relying on the number of rows in SYSCOLUMNS for the test validity,&lt;br/&gt;
I am changing it so that no rows get selected from the LIKE test. This is so that over the time, if we end up changing&lt;br/&gt;
the SYSCOLUMNS so that it will have more rows than what we have in the codeline today, we won&apos;t have to go and fix the&lt;br/&gt;
test.&lt;/p&gt;</comment>
                            <comment id="12510569" author="mamtas" created="Fri, 6 Jul 2007 05:26:15 +0100"  >&lt;p&gt;I think I have found one last piece of code where the ? is not picking up the correct collation and that node is TernaryOperatorNode. Very soon, I will check in a fix for TRIM and then I will check other functions implemented in that code.&lt;/p&gt;</comment>
                            <comment id="12510577" author="mamtas" created="Fri, 6 Jul 2007 06:02:54 +0100"  >&lt;p&gt;Checked in fix for TRIM and parameters in main (revision 553727) and 10.3.1.1 codeline (revision 553731). The checkin comment for main was as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, the parameters in TRIM clause always pickup their collation from the compilation schema. That logic is not&lt;br/&gt;
complete. I am fixing that logic here along with addition of some tests.&lt;/p&gt;

&lt;p&gt;For the sake of explanation, let me use the following syntax for TRIM clause&lt;br/&gt;
TRIM (leftOperand FROM receiver)&lt;br/&gt;
With the fix in this patch, if receiver is a parameter, it will set it&apos;s collation using following logic&lt;br/&gt;
1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2&lt;br/&gt;
2)receiver picks up the collation of the compilation schema because everything in the TRIM clause is ?&lt;/p&gt;

&lt;p&gt;Next, if leftOperand is a parameter, it will set it&apos;s collation using receiver. By this time, even if receiver is a&lt;br/&gt;
parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct&lt;br/&gt;
collation IF leftOperand is a parameter.&lt;/p&gt;</comment>
                            <comment id="12510581" author="mamtas" created="Fri, 6 Jul 2007 06:19:22 +0100"  >&lt;p&gt;Made a simple checkin for TernaryOperatorNode into main (checkin 553735) and 10.3.1.1 codeline(checkin 553736). Commit comments were as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TernaryOperatorNode was incorrectly setting up collation for non-character string type. Collation only applies to character&lt;br/&gt;
string types. Also, fixed a comment to be more meaningful.&lt;/p&gt;</comment>
                            <comment id="12510615" author="mamtas" created="Fri, 6 Jul 2007 09:25:51 +0100"  >&lt;p&gt;With revisions 553784 for main and revision 553787 for 10.3.1.1 codeline, fixed the LOCATE parameter problem. The commit comments for main were as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, the parameters in LOCATE clause always pickup their collation from the compilation schema. That logic is not&lt;br/&gt;
complete. I am fixing that logic here along with addition of some tests.&lt;/p&gt;

&lt;p&gt;For the sake of explanation, let me use the following syntax for LOCATE clause&lt;br/&gt;
LOCATE (receiver, leftOperand)&lt;br/&gt;
With the fix in this patch, if receiver is a parameter, it will set it&apos;s collation using following logic&lt;br/&gt;
1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2&lt;br/&gt;
2)receiver picks up the collation of the compilation schema because everything in the LOCATE clause is ?&lt;/p&gt;

&lt;p&gt;Next, if leftOperand is a parameter, it will set it&apos;s collation using receiver. By this time, even if receiver is a&lt;br/&gt;
parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct&lt;br/&gt;
collation IF leftOperand is a parameter.&lt;/p&gt;</comment>
                            <comment id="12510619" author="mamtas" created="Fri, 6 Jul 2007 09:38:29 +0100"  >&lt;p&gt;Checked in comment changes for SUBSTR with revision 553788 for main and 553789 for 10.3.1.1 codeline. The commit comments are as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No changes required for SUBSTR because SUBSTR has only one character string operand and hence if that character string&lt;br/&gt;
operand is a parameter, it&apos;s context for collation will be the current compilation schema.&lt;/p&gt;</comment>
                            <comment id="12510624" author="mamtas" created="Fri, 6 Jul 2007 09:50:26 +0100"  >&lt;p&gt;Last checkin for parameter work in TernaryOperatorNode. The change went as revision 553794 in 10.3.1.1 and as revision 553793 in main.&lt;/p&gt;

&lt;p&gt;Commit comments&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2777&quot; title=&quot;Parameters should take their collation from the context in which they are getting used rather than the current compilation schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2777&quot;&gt;&lt;del&gt;DERBY-2777&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We were incorrectly trying to set collation info on non-character string types. This commit will remove that code.&lt;/p&gt;
</comment>
                            <comment id="12510625" author="mamtas" created="Fri, 6 Jul 2007 09:51:00 +0100"  >&lt;p&gt;No more parameter work needed in TernaryOperatorNode&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12368325">DERBY-2599</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Jul 2007 00:08:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23238</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11hz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39893</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>