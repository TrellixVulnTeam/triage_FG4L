<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:32:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2949/DERBY-2949.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2949] AssertionFailedError in testStalePlansOnLargeTable</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2949</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;testStalePlansOnLargeTable(org.apache.derbyTesting.functionTests.tests.lang.StalePlansTest)junit.framework.AssertionFailedError&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.StalePlansTest.testStalePlansOnLargeTable(StalePlansTest.java:264)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:88)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</description>
                <environment>Microsoft&amp;#xA9; Windows VistaT Ultimate - 6.0.6000 N/A Build 6000&lt;br/&gt;
WindowsNT 0 6&lt;br/&gt;
2 X [Sun Fire X4100 Server x64 Family 15 Model 37 Stepping 1 AuthenticAMD]: ~2592 MHz,  cache. 3&amp;#xFF;967 Total Memory.&lt;br/&gt;
JVM: Sun Microsystems Inc. 1.5.0_07-b03 </environment>
        <key id="12374069">DERBY-2949</key>
            <summary>AssertionFailedError in testStalePlansOnLargeTable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="scheur">Henri van de Scheur</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Jul 2007 13:00:26 +0100</created>
                <updated>Thu, 5 Sep 2013 18:22:02 +0100</updated>
                            <resolved>Wed, 8 Dec 2010 12:52:19 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12883090" author="knutanders" created="Mon, 28 Jun 2010 10:57:26 +0100"  >&lt;p&gt;Saw this failure again on the following platform:&lt;/p&gt;

&lt;p&gt;OpenSolaris 2010.05 snv_134b X86&lt;br/&gt;
java version &quot;1.6.0_18&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_18-b07)&lt;br/&gt;
Java HotSpot(TM) Server VM (build 16.0-b13, mixed mode)&lt;/p&gt;</comment>
                            <comment id="12909068" author="dagw" created="Tue, 14 Sep 2010 01:30:23 +0100"  >&lt;p&gt;Saw it again today, OpenSolaris snv_146, java version &quot;1.6.0_16&quot;, Java HotSpot(TM) Server VM (build 14.2-b01, mixed mode)&lt;/p&gt;</comment>
                            <comment id="12965916" author="knutanders" created="Wed, 1 Dec 2010 23:10:23 +0000"  >&lt;p&gt;I managed to get hold of the query plan that was chosen when the test failed. See the attached file plan.txt. I have no idea what&apos;s causing this instability, though.&lt;/p&gt;</comment>
                            <comment id="12965920" author="knutanders" created="Wed, 1 Dec 2010 23:14:36 +0000"  >&lt;p&gt;For completeness, I&apos;m also attaching a copy of the expected plan (expected-plan.txt).&lt;/p&gt;</comment>
                            <comment id="12965927" author="lilywei" created="Wed, 1 Dec 2010 23:36:46 +0000"  >&lt;p&gt;Hi Knut:&lt;br/&gt;
     I notice different in &quot;Number of opens&quot; and &quot;Rows input&quot;. Please see below. Will these two numbers cause the instability? Will the number be exactly the same since the data is the same? What do you think?&lt;br/&gt;
=============&lt;br/&gt;
Expected-plan.txt&lt;br/&gt;
 ....&lt;br/&gt;
   Source result set:&lt;br/&gt;
     ...&lt;br/&gt;
     Number of opens = 2&lt;br/&gt;
     Rows input = 2068&lt;br/&gt;
     ...&lt;br/&gt;
     Index Key Optimization = false&lt;br/&gt;
     ..&lt;br/&gt;
        Number of opens = 2&lt;br/&gt;
         Rows seen = 2068&lt;br/&gt;
         ...&lt;br/&gt;
Plan.txt&lt;br/&gt;
 ...&lt;br/&gt;
     Source result set:&lt;br/&gt;
     ...&lt;br/&gt;
        Number of opens = 12&lt;br/&gt;
        Rows input = 11375&lt;br/&gt;
        ...&lt;br/&gt;
     Index Key Optimization = false&lt;br/&gt;
     ..&lt;br/&gt;
        Number of opens =1 2&lt;br/&gt;
         Rows seen = 11375&lt;/p&gt;
</comment>
                            <comment id="12966027" author="knutanders" created="Thu, 2 Dec 2010 09:04:22 +0000"  >&lt;p&gt;Thanks Lily, that&apos;s a very useful observation! The query has been executed 12 times at the point of the failing assert. So it seems like in the good case the query is recompiled after the tenth execution (the test runs with derby.language.stalePlanCheckInterval=10, so that sounds reasonable). In the failing case, however, no recompilation has happened, and all 12 executions have used the same plan.&lt;/p&gt;</comment>
                            <comment id="12966042" author="knutanders" created="Thu, 2 Dec 2010 09:54:54 +0000"  >&lt;p&gt;I see that if I call SYSCS_UTIL.SYSCS_CHECKPOINT_DATABASE right before the loop that performs the last 11 executions of the query, the assert fails consistently. I&apos;m not sure exactly how the checkpoint interacts with the optimizer, though. Perhaps it&apos;s doing something with the row count estimates?&lt;/p&gt;

&lt;p&gt;The reason why I tried adding a checkpoint at that point in the code, was that the test sets derby.storage.checkpointInterval=100000. There aren&apos;t any comments saying why it does that, neither in StalePlansTest nor in the original staleplans.sql, but I suppose it is to make the checkpoints happen at the spots where it&apos;s known to be safe and/or needed.&lt;/p&gt;

&lt;p&gt;I also see that the assert fails consistently if I effectively disable checkpointing for the test by setting derby.storage.checkpointInterval to the maximum allowed value (128*1024*1024). If I run the test with the default settings, I see that the background worker thread invokes a checkpoint when testStalePlansOnLargeTable has loaded the rows into the table. I suppose, depending on timing, this checkpoint could end up running at a time where it interferes with the optimizer&apos;s decisions.&lt;/p&gt;

&lt;p&gt;Would it make sense to disable automatic checkpointing for the test and add a call to SYSCS_CHECKPOINT_DATABASE after the table has been populated? Then at least we know that the checkpoint has been performed at the expected spot, and that it has completed before we start executing the statements whose plans we want to check.&lt;/p&gt;

&lt;p&gt;And if someone could shed some light on &lt;b&gt;why&lt;/b&gt; the checkpoint affects the choices of the optimizer, that would be appreciated too... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12966202" author="knutanders" created="Thu, 2 Dec 2010 17:52:39 +0000"  >&lt;p&gt;Kristian gave me some hints as to where to look... Thanks!&lt;/p&gt;

&lt;p&gt;It looks like we have two mechanisms for updating the row count estimate:&lt;/p&gt;

&lt;p&gt;1) Full table scans will set the correct row count when they complete.&lt;/p&gt;

&lt;p&gt;2) When a dirty page is written to disk (for example in a checkpoint) the row count estimate is updated with the delta between the current row count and the row count at the time the page was last read from or written to disk.&lt;/p&gt;

&lt;p&gt;But those two mechanisms don&apos;t know about each other, so when we&apos;re adding a delta to the estimate while writing the page, that delta may include rows that have already been accounted for by a full table scan, and those changes will end up being applied twice to the estimate.&lt;/p&gt;

&lt;p&gt;For example I see this when accessing a table that contains 10000 rows:&lt;/p&gt;

&lt;p&gt;1. First do SELECT COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM T, and the row count will be correctly set to 10000&lt;/p&gt;

&lt;p&gt;2. Delete every other row in the table (DELETE FROM T WHERE MOD(ID, 2) = 0), the row count estimate won&apos;t be changed&lt;/p&gt;

&lt;p&gt;3. Do SELECT COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM T again, and the estimate will be changed to 5000 (which is correct)&lt;/p&gt;

&lt;p&gt;4. Invoke a checkpoint, which will write all the pages in the table. It will detect that each page has only half the number of rows they had when they were read into the cache in (1), and it will therefore reduce the estimate by another 5000 rows, so that the estimate now is 0 rows, even though the table still contains 5000 rows&lt;/p&gt;</comment>
                            <comment id="12966542" author="knutanders" created="Fri, 3 Dec 2010 14:14:22 +0000"  >&lt;p&gt;It may be possible to improve the accuracy/predictability of the row count estimate, but for this issue I think we should just try to make the test behave predictably.&lt;/p&gt;

&lt;p&gt;The test frequently executes the query &quot;select count(c1) from flusher&quot;. The comments say this about its purpose:&lt;/p&gt;

&lt;p&gt;                // Create and populate a table to be used for flushing the&lt;br/&gt;
                // cache. Flushing the cache causes all row count changes to be&lt;br/&gt;
                // written, which is necessary for the results of this test to&lt;br/&gt;
                // be stable (because otherwise the row count changes would be&lt;br/&gt;
                // written asynchronously)&lt;/p&gt;

&lt;p&gt;It sounds like the query is meant to fill the page cache with new data, evicting all pages currently in the cache, so that the row count changes are written at a know point in time. So the net effect, at least with respect to the row count estimate, should be the same as what we get from a checkpoint. And it sounds like it was added in order to avoid exactly this kind of intermittent failures.&lt;/p&gt;

&lt;p&gt;However, I don&apos;t think the code works as intended because the FLUSHER table is not big enough to flush all pages from the page cache. The table must be at least as big as the page cache in order to achieve that, so the test needs to increase the size of the table or reduce the size of the page cache (or both). Alternatively, we could replace the selects from the FLUSHER table with explicit checkpoints. I&apos;m leaning towards the latter option (using checkpoints to flush the estimates), since that sounds like the simpler one (no need to know exact size of the page cache or the exact number of pages in the FLUSHER table).&lt;/p&gt;</comment>
                            <comment id="12966657" author="lilywei" created="Fri, 3 Dec 2010 20:25:38 +0000"  >&lt;p&gt;+1 for making test behaves predictable. Tests are meant to raise potential issues not to add variation of the issue. I can see leaning toward to selects from the FLUSHER table with explicit checkpoints is a good balance for this case. However, the goal of the test was very good. I am not aware of whether we have test to fill the page cache with new data, evicting all pages currently in the cache so the row count changes are written at a known point in time. And, it will be a good test to have in turn of code coverage point of view. &lt;/p&gt;</comment>
                            <comment id="12968733" author="knutanders" created="Tue, 7 Dec 2010 13:44:00 +0000"  >&lt;p&gt;It also looks like it will be more reliable to invoke a checkpoint explicitly. Even if we make the flusher table bigger or the page cache smaller, filling up the page cache with the flusher table does not mean every dirty page will be written to disk immediately. The page cache will just schedule work with the background worker thread, so we&apos;d have to wait for some time in order to be sure that the row counts have actually been updated. SYSCS_CHECKPOINT_DATABASE, on the other hand, won&apos;t return until the dirty pages have been written to disk.&lt;/p&gt;

&lt;p&gt;If I only change flushRowCount() to call SYSCS_CHECKPOINT_DATABASE(), testStalePlansOnLargeTable() starts failing consistently. The problem appears to be that the row count change is not significant enough to trigger a recompile at a time where the test expects the plan to change. A significant change is 10% when the table has more than 400 rows (see BaseActivation.informOfRowCount()). The actual change in the row count at that point was less than 1%, but it used to work before because the initial row count estimate was inaccurate and the change therefore appeared to be larger. I think the solution is to add more rows to the table to make sure the row count changes sufficiently to always trigger a recompile.&lt;/p&gt;</comment>
                            <comment id="12969056" author="knutanders" created="Tue, 7 Dec 2010 22:43:43 +0000"  >&lt;p&gt;Attached is a patch that changes StalePlansTest in the following ways:&lt;/p&gt;

&lt;p&gt;suite():&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove the explicit setting of checkpoint interval since it doesn&apos;t appear to serve any purpose.&lt;/li&gt;
	&lt;li&gt;Remove creation of the flusher table from the decorator since it&apos;s not used by the test anymore.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;flushRowCount():&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Invoke a checkpoint instead of scanning the flusher table to update the row count estimates.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;testStalePlansOnLargeTable():&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Increase the number of rows added after the first execution of the select statement, so that the row count change is big enough to trigger a recompilation at the next stale plan check interval.&lt;/li&gt;
	&lt;li&gt;Update assertions to match other values returned by the queries because of the added rows.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve run StalePlansTest successfully 2000 times with the patch. When I ran the test 2000 times without the patch, it failed 50 times.&lt;/p&gt;</comment>
                            <comment id="12969293" author="knutanders" created="Wed, 8 Dec 2010 12:52:19 +0000"  >&lt;p&gt;Committed to trunk with revision 1043389.&lt;br/&gt;
Committed to 10.7 with revision 1043392.&lt;/p&gt;</comment>
                            <comment id="13685277" author="knutanders" created="Mon, 17 Jun 2013 10:19:33 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12384807">DERBY-3284</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12667142">DERBY-6336</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12465751" name="d2949.diff" size="3992" author="knutanders" created="Tue, 7 Dec 2010 22:43:43 +0000"/>
                            <attachment id="12465087" name="expected-plan.txt" size="2492" author="knutanders" created="Wed, 1 Dec 2010 23:14:36 +0000"/>
                            <attachment id="12465086" name="plan.txt" size="2984" author="knutanders" created="Wed, 1 Dec 2010 23:10:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Jun 2010 09:57:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23337</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0gyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36565</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>