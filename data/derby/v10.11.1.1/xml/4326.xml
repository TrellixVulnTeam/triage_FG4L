<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4326/DERBY-4326.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4326] hang on winvista with IBM 1.6 SR5 in NSSecurityMechanismTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4326</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This is stopping my platform testing on winvista with ibm 1.6 SR5.&lt;/p&gt;

&lt;p&gt;During the initial run of suites.All, I got:&lt;br/&gt;
--------------------------------&lt;br/&gt;
		testNetworkServerSecurityMechanism java.net.SocketException: Connection reset by peer: setsockopt&lt;br/&gt;
	at java.net.PlainSocketImpl.socketSetOption(Native Method)&lt;br/&gt;
	at java.net.PlainSocketImpl.setOption(PlainSocketImpl.java:283)&lt;br/&gt;
	at java.net.Socket.setKeepAlive(Socket.java:1171)&lt;br/&gt;
	at org.apache.derby.impl.drda.ClientThread.run(Unknown Source)&lt;br/&gt;
--------------------------------&lt;br/&gt;
Rerunning suites.All gave the same error.&lt;br/&gt;
There is only 1 java process active &amp;amp; hanging.&lt;/p&gt;

&lt;p&gt;Running just the test itself also results in a hang but there was (so far - it&apos;s been sitting unchanged for 4 hours) java.net.SocketException.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12431631">DERBY-4326</key>
            <summary>hang on winvista with IBM 1.6 SR5 in NSSecurityMechanismTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Jul 2009 22:39:21 +0100</created>
                <updated>Wed, 14 Oct 2009 20:10:28 +0100</updated>
                            <resolved>Tue, 13 Oct 2009 18:26:47 +0100</resolved>
                                    <version>10.5.2.0</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12736325" author="myrna" created="Tue, 28 Jul 2009 22:44:25 +0100"  >&lt;p&gt;Attaching 2 javacores; the first one - of process id 5196 - was from the rerun of suites.All that hung; the second one - of process id 5640 - was from the run of just NSSecurityMechanismTest. &lt;br/&gt;
I did create another core dump about 10 mins after the run of the test by itself, but the only difference was the name of the java core dump file itself.&lt;/p&gt;</comment>
                            <comment id="12736349" author="myrna" created="Tue, 28 Jul 2009 23:48:55 +0100"  >&lt;p&gt;In the run of the test by itself, the socket reset appears to end up in logs/serverConsoleOutput.log:&lt;/p&gt;

&lt;p&gt;2009-07-28 17:04:06.967 GMT : Apache Derby Network Server - 10.5.2.0 - (794445) started and ready to accept connections on port 1527&lt;br/&gt;
2009-07-28 17:04:37.169 GMT : Connection reset by peer: setsockopt&lt;br/&gt;
java.net.SocketException: Connection reset by peer: setsockopt&lt;br/&gt;
	at java.net.PlainSocketImpl.setOption(PlainSocketImpl.java:283)&lt;br/&gt;
	at java.net.Socket.setKeepAlive(Socket.java:1171)&lt;br/&gt;
	at org.apache.derby.impl.drda.ClientThread.run(Unknown Source)&lt;/p&gt;
</comment>
                            <comment id="12736355" author="kmarsden" created="Wed, 29 Jul 2009 00:04:20 +0100"  >&lt;p&gt;The thread dump in the javacore reveals that this exception causes our ClientThread to go away, but the server stays up blocked in blockingStart() but has no ClientThread to handle new requests.  I think typically the error Connection reset by peer would happen if the client closed the socket.  Even though the client does do a quick close:&lt;br/&gt;
  DriverManager.getConnection(dbUrl).close();&lt;br/&gt;
I don&apos;t think the getConnection() should return until we are well through this setKeepAlive code.  Regardless of why it happened I don&apos;t think such an error should cause loss of the ClientThread. Currently we have:&lt;/p&gt;

&lt;p&gt;         clientSocket.setKeepAlive(parent.getKeepAlive());&lt;/p&gt;

&lt;p&gt;                        // Set time out: Stops DDMReader.fill() from&lt;br/&gt;
                        // waiting indefinitely when timeSlice is set.&lt;br/&gt;
                        if (timeSlice &amp;gt; 0)&lt;br/&gt;
                            clientSocket.setSoTimeout(timeSlice);&lt;/p&gt;

&lt;p&gt;                        //create a new Session for this socket&lt;br/&gt;
                        parent.addSession(clientSocket);&lt;/p&gt;

&lt;p&gt;                    } catch (PrivilegedActionException e) &lt;/p&gt;
{
                        // Just throw the underlying exception
                        throw e.getException();
                    }
&lt;p&gt; // end inner try/catch block&lt;/p&gt;
</comment>
                            <comment id="12736356" author="kmarsden" created="Wed, 29 Jul 2009 00:05:18 +0100"  >&lt;p&gt;Marking crash since the server is unusable and all client requests will hang after it occurs.&lt;/p&gt;</comment>
                            <comment id="12736721" author="myrna" created="Wed, 29 Jul 2009 18:35:18 +0100"  >&lt;p&gt;I also got the same hang with 10.5.1.1. &lt;br/&gt;
As others have tested on winvista successfully, I&apos;m not complaining about this much, but it does prevent me from running the test suite.&lt;br/&gt;
For now, I&apos;ll see if there&apos;s something peculiar with the machine.&lt;/p&gt;</comment>
                            <comment id="12736751" author="kmarsden" created="Wed, 29 Jul 2009 19:56:37 +0100"  >&lt;p&gt;While there is clearly a Network Server bug in its handling of the exception, I wonder if the setKeepAlive() error is a JVM regression.  Maybe that socket is getting cleaned up too early on the client  with the new service release.  Myrna could you try two things:&lt;br/&gt;
1) Try with the jdk version you used with 10.5.1.1 testing?&lt;br/&gt;
2) Try with the jvm where you are getting the hang with the following test change. Instead of:&lt;br/&gt;
 DriverManager.getConnection(dbUrl).close(); &lt;br/&gt;
do&lt;br/&gt;
Conection conn = getConnection(dbUrl).&lt;br/&gt;
conn.close();&lt;/p&gt;

</comment>
                            <comment id="12736756" author="myrna" created="Wed, 29 Jul 2009 20:06:07 +0100"  >&lt;p&gt;re 1) I didn&apos;t run deryball/suites.All on this machine for 10.5.1.1 testing.&lt;br/&gt;
I&apos;ll try to figure out what combination the last successful testing cycle on this machine used.&lt;/p&gt;</comment>
                            <comment id="12738504" author="mamtas" created="Mon, 3 Aug 2009 20:06:57 +0100"  >&lt;p&gt;Attaching a patch DERBY4326_notForCommit_patch1_diff.txt. This patch is not ready for commit. &lt;/p&gt;

&lt;p&gt;I changed the code so that we don&apos;t simply return from the ClientThread when we run into InterruptedException or IOException. For InterruptedException, after putting something into the log about the exception, I check if the server has been shutdown and if so, then we should leave the ClientThread otherwise, we simply close the client socket. For IOException, I made changes to log it and then close the client socket and resume the loop of waiting for the next client request. Running derbyall with these changes made derbynet/DerbyNetAutoStart.java to fail. It appears that the test get SocketException which is a kind of IOException which I guess you can get if the server is down. I am not 100% about the cause but just printing and closing client socket for a SocketException is making the test to fail. I am going to have to stop working on this jira for a while until I look at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4331&quot; title=&quot;Join returns results in wrong order&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4331&quot;&gt;&lt;del&gt;DERBY-4331&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12738506" author="espinha" created="Mon, 3 Aug 2009 20:13:26 +0100"  >&lt;p&gt;I might be experiencing this same issue under Ubuntu with Sun&apos;s 1.6 JDK. My NSSecurityMechanismTest is taking around 22 minutes to run which seems to be a lot.&lt;/p&gt;</comment>
                            <comment id="12739026" author="myrna" created="Tue, 4 Aug 2009 17:45:20 +0100"  >&lt;p&gt;The last successful run on this machine was with 10.3 and ibm&apos;s 1.4.2.&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; The test has undergone some changes since that time...&lt;/p&gt;

&lt;p&gt;grabbed this issue while I will do the experiments suggested by Kathey and try out Mamta&apos;s patch. &lt;/p&gt;

&lt;p&gt;I did finally try this test on this machine with Sun&apos;s 1.6 JDK and the test had been going for up to 1 hour - (on my windows XP the networkserver fixture testNetworkServerSecurityMechanism takes about 2703 ms). So, looks like the same problem and it doesn&apos;t look like a jvm issue.&lt;/p&gt;
</comment>
                            <comment id="12739224" author="myrna" created="Tue, 4 Aug 2009 23:39:59 +0100"  >&lt;p&gt;As an aside...I thought I&apos;d try to run suites.All with junit.textui.TestRunner with only embedded. First I tried without derbynet.jar and derbyclient.jar in my classpath, but they still got picked up by sysinfo, so I then removed them physically from the dir where the other derby jars lived. This resulted in this error: &lt;br/&gt;
Failed to invoke suite():java.lang.NoClassDefFoundError: org.apache.derby.jdbc.ClientConnectionPoolDataSource&lt;br/&gt;
So apparently, there&apos;s no way to do this...&lt;/p&gt;</comment>
                            <comment id="12739324" author="myrna" created="Wed, 5 Aug 2009 04:28:28 +0100"  >&lt;p&gt;attaching the file to which I had sent the console output when running the test with ibm 1.6 and sane trunk jars with the test change suggested by Kathey.&lt;br/&gt;
Nothing happened at all, until I used the SendSignal.exe tool at which time the java core dump also ended up in the redirected output.&lt;br/&gt;
The only other info was in logs\consoleServerOutput.log:&lt;br/&gt;
-------------------&lt;br/&gt;
2009-08-04 23:23:41.969 GMT : Apache Derby Network Server - 10.6.0.0 alpha - (80&lt;br/&gt;
0946M) started and ready to accept connections on port 1527&lt;br/&gt;
2009-08-04 23:23:47.859 GMT : Connection reset by peer: setsockopt&lt;br/&gt;
java.net.SocketException: Connection reset by peer: setsockopt&lt;br/&gt;
        at java.net.PlainSocketImpl.socketSetOption(Native Method)&lt;br/&gt;
        at java.net.PlainSocketImpl.setOption(PlainSocketImpl.java:264)&lt;br/&gt;
        at java.net.Socket.setKeepAlive(Socket.java:1160)&lt;br/&gt;
        at org.apache.derby.impl.drda.ClientThread.run(ClientThread.java:79)&lt;br/&gt;
---------------------&lt;/p&gt;</comment>
                            <comment id="12739332" author="myrna" created="Wed, 5 Aug 2009 05:24:46 +0100"  >&lt;p&gt;Attaching a jar-ed up of the results directory (minus system\wombat) from running with mamta&apos;s not-for-commit patch (ran with modified sane trunk jars, and ibm1.6). The test fails, but at least the hang is gone.&lt;br/&gt;
Apparently, judging from derby.log I&apos;m getting &apos;invalid authentication&apos; - or is that expected with this test?&lt;/p&gt;</comment>
                            <comment id="12739759" author="kmarsden" created="Wed, 5 Aug 2009 22:17:47 +0100"  >&lt;p&gt;I did not apply but  looked briefly at Mamta&apos;s patch.  I think in the shutdown case we should not log the interrupt exception as it is an expected part of the shutdown.&lt;/p&gt;

&lt;p&gt;In the code:&lt;br/&gt;
+                    if (parent.getShutdown()) &lt;/p&gt;
{
+                    	clientSocket.close();
+            	        return;
                     }
&lt;p&gt;We should probably also check that clientSocket != null.&lt;br/&gt;
Otherwise it looks ok except for some comment cleanup.&lt;/p&gt;</comment>
                            <comment id="12739786" author="myrna" created="Wed, 5 Aug 2009 23:18:59 +0100"  >&lt;p&gt;With a build with mamta&apos;s patch applied I ran derbyall and suites.All on my winvista box and on my XP.&lt;br/&gt;
On winvista, this time I ran with sun&apos;s jdk 1.6 but forgot to set -XX:MaxPermSize=128M for suites.All and ran out of memory during the upgrade tests...&lt;br/&gt;
However, I did see a couple of java.net.socketExceptions logged, in the following tests:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;derbyall: derbyNetAutoStart. (both XP &amp;amp; my winvista).&lt;br/&gt;
The diff is like this: &lt;br/&gt;
--------------------&lt;br/&gt;
1a2&lt;br/&gt;
&amp;gt; java.net.SocketException: socket closed&lt;br/&gt;
2a4&lt;br/&gt;
&amp;gt; java.net.SocketException: socket closed&lt;br/&gt;
-------------------&lt;br/&gt;
As we&apos;re now logging SocketExceptions, I think this can be expected. If indeed it is expected, we can filter this out again using a _sed.properties file.&lt;/li&gt;
	&lt;li&gt;suites.All:&lt;br/&gt;
on both XP &amp;amp; netvista: &lt;/li&gt;
	&lt;li&gt;DerbyNetNewServer. (test passed anyway),&lt;/li&gt;
	&lt;li&gt;ttestSetPortPriority (4x. test passed anyway).&lt;br/&gt;
The difference is in fixture ttestNetworkServerSecurityMechanism; both have 3 identical stack traces, but the first one is different on my winvista box vs. XP:&lt;br/&gt;
winvista:&lt;br/&gt;
----------------------&lt;br/&gt;
testNetworkServerSecurityMechanism java.net.SocketException: Connection reset by peer: setsockopt&lt;br/&gt;
	at java.net.PlainSocketImpl.socketSetOption(Native Method)&lt;br/&gt;
	at java.net.PlainSocketImpl.setOption(PlainSocketImpl.java:264)&lt;br/&gt;
	at java.net.Socket.setKeepAlive(Socket.java:1160)&lt;br/&gt;
	at org.apache.derby.impl.drda.ClientThread.run(ClientThread.java:79)&lt;br/&gt;
----------------------&lt;br/&gt;
xp:&lt;br/&gt;
----------------------&lt;br/&gt;
testNetworkServerSecurityMechanism java.net.SocketException: socket closed&lt;br/&gt;
	at java.net.PlainSocketImpl.socketAccept(Native Method)&lt;br/&gt;
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:414)&lt;br/&gt;
	at java.net.ServerSocket.implAccept(ServerSocket.java:464)&lt;br/&gt;
	at java.net.ServerSocket.accept(ServerSocket.java:432)&lt;br/&gt;
	at org.apache.derby.impl.drda.ClientThread$1.run(ClientThread.java:67)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(AccessController.java:251)&lt;br/&gt;
	at org.apache.derby.impl.drda.ClientThread.run(ClientThread.java:62)&lt;br/&gt;
----------------------&lt;br/&gt;
Even so, it now looks as though this test now passes on both OSs.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12747478" author="myrna" created="Tue, 25 Aug 2009 17:30:59 +0100"  >&lt;p&gt;Forgot to mention, that I did get a full-no-failures-run of suites.All on my vista machine - but I can no longer remember if this was with ibm 16 and -Xmx1024M -Xms1024M or sun jdk 1.6 with -XX:MaxPermSize=256M. I&apos;m guessing it was the ibm 1.6.&lt;/p&gt;</comment>
                            <comment id="12760974" author="mamtas" created="Wed, 30 Sep 2009 19:12:25 +0100"  >&lt;p&gt;I am attaching a new patch DERBY4326_printExceptions_patch2_diff.txt which ran derbyall fine (with no derbyNetAutoStart failure). During an IOException, I was printing the stack trace before checking if the exception was for server shutdown. This patch first checks for server shutdown and if we are not dealing with that, then we should log the exception trace. If there are no comments, I will work on committing this patch soon.&lt;/p&gt;</comment>
                            <comment id="12762462" author="myrna" created="Tue, 6 Oct 2009 01:22:07 +0100"  >&lt;p&gt;I tested patch2 on my winvista machine and ran into no failures except for unit/T_RawStoreFactory.unit.&lt;/p&gt;

&lt;p&gt;I don&apos;t think that failure is related, although it appears consistent...&lt;/p&gt;

&lt;p&gt;I have 1 nit: it seems the patch has 1 unnecessary white-character change.&lt;br/&gt;
 +1 for commit from me.&lt;/p&gt;</comment>
                            <comment id="12762471" author="myrna" created="Tue, 6 Oct 2009 01:46:02 +0100"  >&lt;p&gt;just to confirm that the T_RawStoreFactory failure is unrelated, I rebuilt without any patches and I get the same failure. The failure is indicating there is still an observer when it expects 0 observers, and that failure we have seen before (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3993&quot; title=&quot;With IBM 1.6 T_RawStoreFactory fails with There should be 0 observers, but we still have 1 observers on Win 2K&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3993&quot;&gt;&lt;del&gt;DERBY-3993&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12764154" author="mamtas" created="Fri, 9 Oct 2009 19:46:08 +0100"  >&lt;p&gt;Committed changes into 823659 in trunk.  Will merge into 10.5 codeline next&lt;/p&gt;</comment>
                            <comment id="12765127" author="myrna" created="Tue, 13 Oct 2009 16:58:08 +0100"  >&lt;p&gt;I merged the fix to 10.5, built, then ran suites.All and derbyall on my winvista machine with ibm16 and there were no failures nor errors.&lt;/p&gt;</comment>
                            <comment id="12765158" author="mamtas" created="Tue, 13 Oct 2009 18:24:50 +0100"  >&lt;p&gt;Thanks for running the tests on winvista, Myrna. both derbyall and junit suite ran fine on windows xp machine too with IBM 16. Have committed the merged changes into 10.5 codeline using revision 824850. Will go ahead and resolve the issue&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12415387" name="DERBY4326_notForCommit_patch1_diff.txt" size="3243" author="mamtas" created="Mon, 3 Aug 2009 20:06:57 +0100"/>
                            <attachment id="12420932" name="DERBY4326_printExceptions_patch2_diff.txt" size="2958" author="mamtas" created="Wed, 30 Sep 2009 19:12:25 +0100"/>
                            <attachment id="12414809" name="javacore.20090728.095131.5196.0001.txt" size="654395" author="myrna" created="Tue, 28 Jul 2009 22:44:25 +0100"/>
                            <attachment id="12414810" name="javacore.20090728.114939.5640.0001.txt" size="233768" author="myrna" created="Tue, 28 Jul 2009 22:44:25 +0100"/>
                            <attachment id="12415573" name="mamtapatch1result.jar" size="3360" author="myrna" created="Wed, 5 Aug 2009 05:24:46 +0100"/>
                            <attachment id="12415571" name="run.out" size="11806" author="myrna" created="Wed, 5 Aug 2009 04:28:28 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 28 Jul 2009 23:04:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24186</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rpz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38309</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>