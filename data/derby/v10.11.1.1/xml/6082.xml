<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:59 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6082/DERBY-6082.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6082] Investigate if openOnServer_ field in org.apache.derby.client.am.Statement is still needed.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6082</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;While working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6053&quot; title=&quot;Client should use a prepared statement rather than regular statement for Connection.setTransactionIsolation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6053&quot;&gt;&lt;del&gt;DERBY-6053&lt;/del&gt;&lt;/a&gt;, there was some discussion over openOnServer_ field in org.apache.derby.client.am.Statement. This field has following comment in Statement class&lt;br/&gt;
    // This means a DERBY server-side section for this statement is in the prepared state. &lt;br/&gt;
    // A client-side jdbc statement may remain open across commits (openOnClient=true), &lt;br/&gt;
    // but the server-side DERBY section moves to an unprepared state (openOnServer=false) across commits, &lt;br/&gt;
    // requiring an implicit re-prepare &quot;under the covers&quot; by the driver. &lt;br/&gt;
    // Unprepared jdbc query statements still have prepared sections on the server. &lt;br/&gt;
    // This openOnServer_ only has implications for preparedstatement &lt;/p&gt;

&lt;p&gt;Kathey commented following on that field in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6053&quot; title=&quot;Client should use a prepared statement rather than regular statement for Connection.setTransactionIsolation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6053&quot;&gt;&lt;del&gt;DERBY-6053&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
*******************************************************************************&lt;br/&gt;
 I do not think that comment is true about statements not staying prepared across commits.&lt;br/&gt;
If I prepare a statement and execute it twice with a commit in between from client, I do not see a reprepare in the derby.log . I think maybe the openOnServer_ property may be a relic of some place or time in the original code base when that was true.&lt;br/&gt;
*******************************************************************************&lt;/p&gt;</description>
                <environment></environment>
        <key id="12633221">DERBY-6082</key>
            <summary>Investigate if openOnServer_ field in org.apache.derby.client.am.Statement is still needed.</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dyret">Dyre Tjeldvoll</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Feb 2013 16:42:24 +0000</created>
                <updated>Wed, 21 Jan 2015 00:23:33 +0000</updated>
                            <resolved>Thu, 7 Nov 2013 07:48:57 +0000</resolved>
                                    <version>10.10.1.1</version>
                                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13791937" author="dyret" created="Thu, 10 Oct 2013 21:09:53 +0100"  >&lt;p&gt;I looked a bit at the client code, and AFAICT openOnServer is still being used as described. It is set to false when committing or rolling back a tx, and a PRPSQLSTT is sent (before executing) if this variable is false. And the server will prepare the statement when receiving the command, but there appears to be tests in GenericStatement.prepMinion() that&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Skips the prepare if its already up-to-date&lt;/li&gt;
	&lt;li&gt;Then tries to locate it in the cache&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Which perhaps explains why there is no trace of a reprepare in derby.log?&lt;br/&gt;
It may well be that the reprepare request is unnecessary, though. &lt;/p&gt;</comment>
                            <comment id="13792481" author="dyret" created="Fri, 11 Oct 2013 10:23:23 +0100"  >&lt;p&gt;It is actually worse than described because &lt;tt&gt;openOnServer_&lt;/tt&gt; is set to false in &lt;tt&gt;ClientStatement.markClosedOnServer()&lt;/tt&gt;, which in turn is called from &lt;tt&gt;flowExecute()&lt;/tt&gt;. So the statement is marked as needing a re-prepare after each execute.&lt;/p&gt;

&lt;p&gt;I decided to try running the tests without setting &lt;tt&gt;openOnServer_&lt;/tt&gt; to when committing and aborting, and also drop the call to &lt;tt&gt;markClosedOnServer()&lt;/tt&gt;, but that causes us to leak sections as  &lt;tt&gt;markClosedOnServer()&lt;/tt&gt; is also responsible for freeing the section.&lt;/p&gt;

&lt;p&gt;Perhaps it is possible to decouple the section management from closing/re-preparing?&lt;/p&gt;</comment>
                            <comment id="13795095" author="dyret" created="Tue, 15 Oct 2013 12:37:19 +0100"  >&lt;p&gt;Turns out that it is ok to not call &lt;tt&gt;markClosedOnServer()&lt;/tt&gt; after each execute, as long as &lt;tt&gt;section_&lt;/tt&gt; is freed before assigning another section. So for the majority of prepared statements &lt;tt&gt;openOnServer_&lt;/tt&gt; now redundant: They are prepared on the server when they are created is and &lt;tt&gt;openOnServer_&lt;/tt&gt; is never set to false until it is closed. &lt;/p&gt;

&lt;p&gt;Unfortunately, the meaning of &lt;tt&gt;openOnServer_&lt;/tt&gt; has been overloaded. For  &lt;tt&gt;ClientStatement.preparedStatementForGeneratedKeys_&lt;/tt&gt; it is also used to track if a prepare of this statement should be piggybacked on an insert with generated keys, and also to track if the prepare-result must be parsed when the reply arrives. In this case it may be better to track this with a local variable in flowExecute_ rather than a member variable.&lt;/p&gt;</comment>
                            <comment id="13796675" author="dyret" created="Wed, 16 Oct 2013 12:41:10 +0100"  >&lt;p&gt;Attaching a patch which removes &lt;tt&gt;openOnServer_&lt;/tt&gt;. Details:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Removed re-prepares trigged by &lt;tt&gt;openOnServer_&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;Changed piggy-backing of prepare of &lt;tt&gt;preparedStatementForAutogeneratedKeys_&lt;/tt&gt; so that it doesn&apos;t need  &lt;tt&gt;openOnServer_&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;Removed &lt;tt&gt;MaterialStatement.markClosedOnServer&lt;/tt&gt; and implementation since it did not do anything.&lt;/li&gt;
	&lt;li&gt;Since this reduced &lt;tt&gt;ClientStatement.markClosedOnServer()&lt;/tt&gt; to a cleanup-method for &lt;tt&gt;section_&lt;/tt&gt;, it was removed and &lt;tt&gt;section_&lt;/tt&gt; was encapsulated as a private member where &lt;tt&gt;setSection&lt;/tt&gt; is responsible for cleanup.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13808877" author="knutanders" created="Wed, 30 Oct 2013 09:22:26 +0000"  >&lt;p&gt;Thanks for investigating and doing this cleanup, Dyre. I think the patch looks like a good improvement. Minor nit: In ClientStatement.java around line #1792 a reference to openOnServer_ can still be found (commented out).&lt;/p&gt;</comment>
                            <comment id="13815744" author="jira-bot" created="Thu, 7 Nov 2013 07:48:27 +0000"  >&lt;p&gt;Commit 1539540 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dyret&quot; class=&quot;user-hover&quot; rel=&quot;dyret&quot;&gt;Dyre Tjeldvoll&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1539540&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1539540&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6082&quot; title=&quot;Investigate if openOnServer_ field in org.apache.derby.client.am.Statement is still needed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6082&quot;&gt;&lt;del&gt;DERBY-6082&lt;/del&gt;&lt;/a&gt;: Removed re-prepares trigged by openOnServer_&lt;/p&gt;

&lt;p&gt;Changed piggy-backing of prepare of preparedStatementForAutogeneratedKeys_ so that it doesn&apos;t need openOnServer_ &lt;/p&gt;

&lt;p&gt;Removed MaterialStatement.markClosedOnServer and implementation since it did not do anything.&lt;/p&gt;

&lt;p&gt;Since this reduced ClientStatement.markClosedOnServer() to a cleanup-method for section_, it was removed and section_ was encapsulated as a private member where setSection is responsible for cleanup.&lt;/p&gt;

&lt;p&gt;Patch file derby-6082a.diff. (+ review comment)&lt;/p&gt;</comment>
                            <comment id="14284819" author="myrna" created="Wed, 21 Jan 2015 00:23:33 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12454927">DERBY-4531</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12630769">DERBY-6066</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12608699" name="derby-6082a.diff" size="35669" author="dyret" created="Wed, 16 Oct 2013 12:41:10 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Oct 2013 20:09:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>313717</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzbzkf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314062</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>