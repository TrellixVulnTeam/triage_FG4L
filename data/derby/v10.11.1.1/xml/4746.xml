<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4746/DERBY-4746.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4746] (Server) Implement UTF8 support on DRDA</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4746</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I&apos;m branching out this issue into server and client changes. Since the changes are incremental and small, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt; would soon become confusing if it had to bear the patches for both server and client.&lt;/p&gt;

&lt;p&gt;For future reference, some patches have actually been applied in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt;. These *&lt;b&gt;ARE&lt;/b&gt;* also required for the server implementation.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12469536">DERBY-4746</key>
            <summary>(Server) Implement UTF8 support on DRDA</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12326016">DERBY-728</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="espinha">Tiago R. Espinha</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Jul 2010 16:38:13 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:29 +0100</updated>
                            <resolved>Tue, 28 Sep 2010 17:49:41 +0100</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12889517" author="espinha" created="Sat, 17 Jul 2010 17:00:57 +0100"  >&lt;p&gt;This patch is a small incremental patch on what has been done for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt; to accommodate the server implementation. It does not yet insert any switch to the UTF8 encoding. Following is a walkthrough the changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DDMWriter.java - When writing a scalar string, getting the length() off a string is no longer correct. When using EBCDIC this worked as ASCII characters in Java Strings take just 1 byte. However, what we require is the byte length and this differs based on the current ccsidManager (EbcdicCcsidManager maintains the old behavior).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;CcsidManager.java - Added two constants that represent the manager level for each of the CCSIDs. Note that our current implementation has EBCDIC at level 0, where as the specification mentions that it should be at level 500. I&apos;m ignoring this for now as it doesn&apos;t interfere with the implementation (I check whether the level is 1208, if it isn&apos;t then it is EBCDIC) but we might want to fix this in the future.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The CcsidManager also gets a new abstract method called getByteLength(String str) that takes a String and returns the byte length of that String, using the method specified by each CCSID manager.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Utf8CcsidManager.java - Converting to a Java String from bytes now has a different behavior. After experimenting with the protocol tests I&apos;ve noticed that the offset and numToConvert are given in bytes and not characters.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12889543" author="espinha" created="Sat, 17 Jul 2010 23:41:02 +0100"  >&lt;p&gt;Made a small change to the Utf8CcsidManagerTest to accommodate for the fact that the convertToJavaString takes the offset and numCount in bytes and not characters.&lt;/p&gt;

&lt;p&gt;Running regressions now.&lt;/p&gt;</comment>
                            <comment id="12889608" author="espinha" created="Sun, 18 Jul 2010 12:36:46 +0100"  >&lt;p&gt;Regressions ran without failures. Marking as patch available. Please review and commit.&lt;/p&gt;

&lt;p&gt;Soon I&apos;ll be posting two more patches that roll in the remaining changes for server-side support and additional protocol tests to ensure the feature is working.&lt;/p&gt;</comment>
                            <comment id="12890101" author="kmarsden" created="Tue, 20 Jul 2010 01:28:24 +0100"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;In Utf8CcsidManager.convertToJavaString I think it would be more efficient to just use.&lt;br/&gt;
String(byte[] bytes, int offset, int length, String charsetName)&lt;br/&gt;
          Constructs a new String by decoding the specified subarray of bytes using the specified charset.&lt;/p&gt;

&lt;p&gt;Instead of creating a new byte array and copying into it.&lt;/p&gt;

&lt;p&gt;The rest looks good.&lt;/p&gt;</comment>
                            <comment id="12890787" author="espinha" created="Wed, 21 Jul 2010 18:32:14 +0100"  >&lt;p&gt;This new patch includes Kathey&apos;s recommendation. I&apos;ve ran suites.All with no failures.&lt;/p&gt;</comment>
                            <comment id="12891077" author="espinha" created="Thu, 22 Jul 2010 10:40:45 +0100"  >&lt;p&gt;Attaching two patches:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt;_p2-impl.diff - puts in place all the switches necessary on the server-side to enable and disable UTF8 support.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt;_p2-tests.diff - contains the protocol tests and changes to the framework required for the UTF8 protocol tests. I&apos;ve added a new command to the protocol tests (deleteDatabase) so that these tests can cleanup after themselves. The UTF8 protocol tests try to create a database with UTF8 characters and as such they need to be able to delete it afterwards.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Kathey suggested the cleanup be done on the tearDown in ProtocolTest.java but from what I could see, this is not a very good solution as the ProtocolTest actually has several fixtures (one per test in the protocol.tests file) and this way we&apos;d be trying to delete the UTF8 database after every single fixture (there are about 150 currently).&lt;/p&gt;

&lt;p&gt;There&apos;s also a caveat about these tests. In the UTF8 fixtures, we have the following string &apos;%UTF8TestString%&apos;. This is then replaced with a few Chinese characters in ProtocolTest.java and it&apos;s just a workaround to be able to pass UTF8 characters on to the server (as the ProtocolTest tokenizer does not deal well with characters in unicode representation \uXXXX).&lt;/p&gt;

&lt;p&gt;Lastly, I&apos;ve implemented the command &apos;switchToUtf8CcsidManager&apos; in the protocol tests that essentially tells the framework to switch its DDMWriter and Reader to UTF8. Normally, a client would negotiate this through the MGRLVLS but the ProtocolTest doesn&apos;t take this into consideration and has to be forced into UTF8 mode.&lt;/p&gt;

&lt;p&gt;I&apos;m now running regressions for these patches.&lt;/p&gt;</comment>
                            <comment id="12891286" author="espinha" created="Thu, 22 Jul 2010 20:09:19 +0100"  >&lt;p&gt;Regressions ran fine without failures.&lt;/p&gt;</comment>
                            <comment id="12891841" author="kmarsden" created="Fri, 23 Jul 2010 23:54:29 +0100"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;I looked at the patches (although in a bit of a hurry)  and they look good except that I am not sure about adding the DriverManager Import to ProtocolTest because of possible J2ME issues. It may be fine as the network server tests don&apos;t actually run for J2ME but I am not sure.   It might be better instead to use JDBCDataSource.getDataSource() and then JDBCDataSource.shutdownDatabase().&lt;/p&gt;

&lt;p&gt;Also I don&apos;t think  public static final int EBCDIC_CCSID = 500; is used and might be a bit confusing since I UNICODEMGR uses 0 for EBCDIC as I recall. Sorry for the hurried comments.  I hope another commiter picks up the patches.&lt;/p&gt;

&lt;p&gt;bye for now!&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12892470" author="espinha" created="Mon, 26 Jul 2010 22:19:54 +0100"  >&lt;p&gt;Regarding Kathey&apos;s comments, I have now tried to use the JDBCDataSource instead but this poses as an issue as it tries to get a DataSource using TestConfiguration.getCurrent(). The current configuration during a ProtocolTest is client/server and not embedded, which makes it impossible to use this method to shutdown the database.&lt;/p&gt;

&lt;p&gt;I will remove EBCDIC_CCSID. That shouldn&apos;t have been there in the first place.&lt;/p&gt;</comment>
                            <comment id="12892888" author="espinha" created="Tue, 27 Jul 2010 19:49:06 +0100"  >&lt;p&gt;Attaching a new implementation patch that removes the line as per my previous comment. Considering this line wasn&apos;t being used anywhere, it&apos;s safe to say that the regressions pass still applies.&lt;/p&gt;

&lt;p&gt;Can anyone please review and commit?&lt;/p&gt;</comment>
                            <comment id="12893010" author="bryanpendleton" created="Wed, 28 Jul 2010 01:51:56 +0100"  >&lt;p&gt;The patch applies and builds cleanly for me.&lt;/p&gt;

&lt;p&gt;I also had a quick read of the patch and didn&apos;t notice anything new.&lt;/p&gt;

&lt;p&gt;I&apos;ll give it a bit more testing and if I don&apos;t encounter any problems, I&apos;ll commit this patch.&lt;/p&gt;</comment>
                            <comment id="12893191" author="bryanpendleton" created="Wed, 28 Jul 2010 15:45:54 +0100"  >&lt;p&gt;Oh, I see now that the p2-impl and p2-tests patches were designed to be applied together;&lt;br/&gt;
I missed that in the first examination, and was only running with the p2-impl patch.&lt;/p&gt;

&lt;p&gt;I will also apply the p2-tests patch and do a bit more testing.&lt;/p&gt;</comment>
                            <comment id="12893221" author="espinha" created="Wed, 28 Jul 2010 17:01:22 +0100"  >&lt;p&gt;Indeed Bryan &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; you might also want to run: &quot;ant junit-pptesting&quot; as this runs the protocol.tests file where I&apos;ve added a couple more tests.&lt;/p&gt;

&lt;p&gt;That runs fine with no failures on my end.&lt;/p&gt;</comment>
                            <comment id="12893449" author="bryanpendleton" created="Thu, 29 Jul 2010 01:36:29 +0100"  >&lt;p&gt;Hi Tiago, thanks for the suggestion about junit-pptesting, I will give that a try.&lt;/p&gt;

&lt;p&gt;When I run the full regression suite in my setup, I see a failure in one of the modified tests:&lt;/p&gt;


&lt;p&gt;Failure Details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/derbynetclientmats/DerbyNetClient/derbynetmats/derbynetmats/testProtocol.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: testProtocol jdk1.6.0_20 DerbyNetClient derbynetmats:derbynetmats 2010-07-28 08:28:24 ***&lt;br/&gt;
308 add&lt;br/&gt;
&amp;gt; Unknown command, switchToUtf8CcsidManager in line 3548&lt;br/&gt;
&amp;gt; Test UNICODEMGR at level 1208 while sending UTF8 characters in RDBNAM&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   testProtocol jdk1.6.0_20 DerbyNetClient derbynetmats:derbynetmats 2010-07-28 08:28:30 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Do you think this indicates a build failure? A test setup problem?&lt;/p&gt;</comment>
                            <comment id="12893453" author="bryanpendleton" created="Thu, 29 Jul 2010 01:51:29 +0100"  >&lt;p&gt;&apos;ant junit-pptesting&apos; appears to complete successfully for me:&lt;/p&gt;

&lt;p&gt;junit-pptesting:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.derby.PackagePrivateTestSuite&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 222, Failures: 0, Errors: 0, Time elapsed: 31.608 sec&lt;/p&gt;

&lt;p&gt;So I just need to understand the testProtocol diff.&lt;/p&gt;</comment>
                            <comment id="12893467" author="bryanpendleton" created="Thu, 29 Jul 2010 02:29:48 +0100"  >&lt;p&gt;I can reproduce the testProtocol diff as a standalone test failure by:&lt;/p&gt;

&lt;p&gt; java -Dframework=DerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest derbynet/testProtocol.java&lt;/p&gt;</comment>
                            <comment id="12893567" author="espinha" created="Thu, 29 Jul 2010 10:46:05 +0100"  >&lt;p&gt;Oh I see why this happens, it has to do with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think this is a mess in maintainability though... the original goal of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt; was to convert the whole functionality of derbynet/testProtocol.java to a proper JUnit test and this is how impl/drda/ProtocolTest.java came to life. However, as it is, each time we add a feature to the JUnit protocol test we have to do the same for the other or it&apos;ll break.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what to do about this. Do we want to maintain these two tests that do essentially the same? I can easily implement the switchToUtf8CcsidManager logic in the testProtocol as well but should I do it?&lt;/p&gt;</comment>
                            <comment id="12893691" author="bryanpendleton" created="Thu, 29 Jul 2010 17:39:58 +0100"  >&lt;p&gt;Thanks for drawing my attention to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt;; I had forgotten about that entirely.&lt;/p&gt;

&lt;p&gt;Kristian&apos;s final comment in that issue was:&lt;br/&gt;
&amp;gt; Changes done to the protocol test file will affect both versions of the test. &lt;/p&gt;

&lt;p&gt;So I guess that means that, for now, the two-versions-of-the-same-test is our&lt;br/&gt;
reality, so if it&apos;s not too hard to add the duplicate logic to the other test, I&apos;d say&lt;br/&gt;
that would be fine.&lt;/p&gt;

&lt;p&gt;It&apos;s far better to have too many tests than too few, and this does seem like a really&lt;br/&gt;
special situation.&lt;/p&gt;

&lt;p&gt;Would the additional change be a large one?&lt;/p&gt;

&lt;p&gt;Also, are you anticipating writing additional tests in this area as part of your&lt;br/&gt;
upcoming work? Or is this a one-time-only situation? If this will become an&lt;br/&gt;
annoying thorn in your side than maybe we need to look for an alternate idea?&lt;/p&gt;

&lt;p&gt;I suppose that the alternate idea might be:&lt;br/&gt;
1) Pick &lt;b&gt;one&lt;/b&gt; version of the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt; tests to preserve for the future (presumably,&lt;br/&gt;
the JUnit version)&lt;br/&gt;
2) Entirely discard the old version of the tests&lt;br/&gt;
3) Document in the code and in the wiki, etc. how to run the new test, and explain&lt;br/&gt;
to the community that this test is special and needs to be run, periodically, in&lt;br/&gt;
this special fashion.&lt;/p&gt;

&lt;p&gt;BTW, when I did &quot;ant junit-pptesting&quot;, was I running the new &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt; JUnit test? And was I doing that against the &apos;classes&apos; directory in my build tree?&lt;/p&gt;</comment>
                            <comment id="12893711" author="espinha" created="Thu, 29 Jul 2010 18:15:53 +0100"  >&lt;p&gt;The additional change is small. I just need to add the new command to the testProtocol grammar and tell the Java code what to do with it, which is a rather small change.&lt;/p&gt;

&lt;p&gt;My only concern has to do with maintainability. We have two sets of everything for this test: two grammars, two separate logics for each of the same commands in the protocols.test file, etc - this shouldn&apos;t pose as a problem unless we&apos;re adding new grammar to the tests though, I just have a certain aversion to code repetition #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;For my tests, this shouldn&apos;t be a problem again I think.&lt;/p&gt;

&lt;p&gt;I do agree with your solution for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt;. As it is the tests aren&apos;t being ran as part of suites.All anyway, so whoever touches the DRDA code should be aware of these protocol tests. So as long as we document how to run them, I think this solution should be fine. I&apos;ll suggest this on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2031&quot; title=&quot;Convert derbynet/testProtocol.java to JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2031&quot;&gt;&lt;del&gt;DERBY-2031&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With ant junit-pptesting you were indeed running the new JUnit test (ProtocolTest.java) and it is ran against the classes in your build tree.&lt;/p&gt;

&lt;p&gt;I will submit a new patch in a few minutes that adds the changes to the testProtocol.&lt;/p&gt;</comment>
                            <comment id="12893796" author="espinha" created="Thu, 29 Jul 2010 20:51:51 +0100"  >&lt;p&gt;I&apos;m getting heaps of failures trying to fit this into the old test so it might take a while before I submit a new patch.&lt;/p&gt;</comment>
                            <comment id="12893858" author="espinha" created="Fri, 30 Jul 2010 00:26:14 +0100"  >&lt;p&gt;I&apos;ve finally managed to iron out all the issues. Here&apos;s a quick diff of this patch versus the previous one:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds the commands switchToUtf8CcsidManager and deleteDatabase to the grammar of TestProto.java&lt;br/&gt;
(The deleteDatabase is a no-op as the cleanup is done automatically using this harness)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds the UTF8 test strings that are used in TestProto.getString() to replace the placeholders in the protocol.tests file&lt;br/&gt;
(The protocol.tests file does not have UTF8 strings itself)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After applying this patch, the test run posted above by Bryan passes with no failures. I&apos;ve also managed to see the database with international characters being created and then deleted.&lt;/p&gt;

&lt;p&gt;I&apos;ll be running derbyall overnight to make sure everything still works as should. It should be safe to say that this does not affect suites.All.&lt;/p&gt;</comment>
                            <comment id="12893925" author="bryanpendleton" created="Fri, 30 Jul 2010 04:49:49 +0100"  >&lt;p&gt;Thanks for the quick turnaround on the revised tests. I&apos;ve been successful&lt;br/&gt;
running the new tests in various configurations on my system. Please let&lt;br/&gt;
me know how your re-run of the tests goes. &lt;/p&gt;</comment>
                            <comment id="12893954" author="espinha" created="Fri, 30 Jul 2010 08:35:52 +0100"  >&lt;p&gt;Bryan, my run of derbyall ran without failures.&lt;/p&gt;</comment>
                            <comment id="12894047" author="bryanpendleton" created="Fri, 30 Jul 2010 15:11:34 +0100"  >&lt;p&gt;Committed imp.diff and the revised tests.diff to the trunk as a single commit, revision 980800.&lt;/p&gt;

&lt;p&gt;Tiago, does this resolve this issue? Or are additional patches intended here? I didn&apos;t&lt;br/&gt;
mark the issue resolved because I wasn&apos;t sure of the overall plan here. Please mark&lt;br/&gt;
the issue resolved (and closed) if it is in fact complete.&lt;/p&gt;

&lt;p&gt;Thanks for all the hard work on this; international character support in Derby is a nice&lt;br/&gt;
feature and it will be great to have it!&lt;/p&gt;</comment>
                            <comment id="12894057" author="espinha" created="Fri, 30 Jul 2010 15:28:12 +0100"  >&lt;p&gt;Thank you Bryan for reviewing and committing the patches.&lt;/p&gt;

&lt;p&gt;This does indeed resolve the issue as it is a branch of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt; that relates to the server part only.&lt;/p&gt;

&lt;p&gt;Now I&apos;ll start the work on the client part. Thanks again for committing, I&apos;ll be closing the issue.&lt;/p&gt;</comment>
                            <comment id="12895007" author="espinha" created="Tue, 3 Aug 2010 20:50:24 +0100"  >&lt;p&gt;Patches applied, all works as should, closing issue.&lt;/p&gt;</comment>
                            <comment id="12910167" author="espinha" created="Thu, 16 Sep 2010 15:33:37 +0100"  >&lt;p&gt;Reopening the issue to submit an additional patch required for the server implementation.&lt;/p&gt;</comment>
                            <comment id="12910174" author="espinha" created="Thu, 16 Sep 2010 15:45:54 +0100"  >&lt;p&gt;This patch makes some changes on the DDMWriter to ensure that the length of the strings is calculated based on the CCSID manager, and not just a straight call to .length(). It also enforces that whenever a new session is started, the CCSID manager is pushed back to EBCDIC, as all exchanges between the client and the server must start in EBCDIC.&lt;/p&gt;

&lt;p&gt;This is just a consolidation patch and it should not make any changes to the outside behavior of the code. At this point, the CCSID negotiation isn&apos;t yet in place and as such the server always stays in EBCDIC.&lt;/p&gt;

&lt;p&gt;I have a few more changes to submit but I wanted to first check these in and make sure everything still works as it should.&lt;/p&gt;

&lt;p&gt;I&apos;ll be running regressions and I&apos;ll post the results shortly. Please feel free to review the patch.&lt;/p&gt;</comment>
                            <comment id="12910674" author="espinha" created="Fri, 17 Sep 2010 18:25:27 +0100"  >&lt;p&gt;Attaching a new patch as my previous one has an issue with the ByteBuffer. Running regressions again.&lt;/p&gt;</comment>
                            <comment id="12911049" author="espinha" created="Sat, 18 Sep 2010 17:58:16 +0100"  >&lt;p&gt;I&apos;m attaching the final patch to this issue. I had some issues with the ByteBuffer handling but that&apos;s fixed now.&lt;/p&gt;

&lt;p&gt;This patch forces the write*String methods within DDMWriter to query the length of a String off the CCSID manager. It also forces all the sessions in the DRDAConnThread to start as EBCDIC and fixes the issue Knut found on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4799&quot; title=&quot;IllegalArgumentException when generating error message on server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4799&quot;&gt;&lt;del&gt;DERBY-4799&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4799&quot; title=&quot;IllegalArgumentException when generating error message on server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4799&quot;&gt;&lt;del&gt;DERBY-4799&lt;/del&gt;&lt;/a&gt; is fixed by changing the way the server writes the RDBNAM back to the client within DRDAConnThread.writeRDBNAM(String). Before the patch, the RDBNAM was being sent back &lt;span class=&quot;error&quot;&gt;&amp;#91;serv. -&amp;gt; cli&amp;#93;&lt;/span&gt; in UTF-8 &lt;span class=&quot;error&quot;&gt;&amp;#91;surprising, since everything should be EBCDIC so far&amp;#93;&lt;/span&gt; and the client correctly expected EBCDIC. This would be fine for normal ASCII characters but whenever special Latin characters were used, this would cause the server to throw an exception and consequently, the client to crash.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a test client that demonstrates this by crashing 10.5.3 and 10.3.3 servers, using their respective clients. By using a database name with more than three extra-ASCII characters, the server will throw the exception seen in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4799&quot; title=&quot;IllegalArgumentException when generating error message on server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4799&quot;&gt;&lt;del&gt;DERBY-4799&lt;/del&gt;&lt;/a&gt; whenever we try to send actual SQL commands to the server.&lt;/p&gt;

&lt;p&gt;It&apos;s also worth noting that with this patch, old clients will now be able to actually create databases with Latin characters on a new server. This could be seen as a positive regression as something that used to fail is now working, but I don&apos;t think it is any matter for concern.&lt;/p&gt;

&lt;p&gt;Finally, Knut has provided a test fixture on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4799&quot; title=&quot;IllegalArgumentException when generating error message on server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4799&quot;&gt;&lt;del&gt;DERBY-4799&lt;/del&gt;&lt;/a&gt; that uncovers part of this issue. With this fix the test passes, although I think we can probably add another fixture that does the same as my test client (that only would fail upon creating the table).&lt;/p&gt;

&lt;p&gt;So far suites.All has passed without any failures and I am now running derbyall.&lt;/p&gt;</comment>
                            <comment id="12911054" author="espinha" created="Sat, 18 Sep 2010 18:42:59 +0100"  >&lt;p&gt;derbyall passed as well so I&apos;m marking this as patch available. Please review and if no one objects, I will go ahead and commit it.&lt;/p&gt;</comment>
                            <comment id="12912480" author="knutanders" created="Mon, 20 Sep 2010 15:42:25 +0100"  >&lt;p&gt;The new logic in the patch looks correct to me, but the writeRDBNAM() method is a bit too aggressive on allocating byte arrays:&lt;/p&gt;

&lt;p&gt;1)&lt;br/&gt;
+        int len = currentManager.getByteLength(rdbnam);&lt;/p&gt;

&lt;p&gt;The UTF-8 CCSID manager will allocate a new byte array in order to find the length, and then throw it away.&lt;/p&gt;

&lt;p&gt;2)&lt;br/&gt;
+        /* Initialize the buffer at MAX_NAME - max length in bytes for RDBNAM */&lt;br/&gt;
+        ByteBuffer buff = ByteBuffer.allocate(CodePoint.MAX_NAME);&lt;/p&gt;

&lt;p&gt;This will allocate a byte buffer with length 255, but after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4805&quot; title=&quot;Increase the length of the RDBNAM field in the DRDA implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4805&quot;&gt;&lt;del&gt;DERBY-4805&lt;/del&gt;&lt;/a&gt; it&apos;ll increase to ~64K, and then it&apos;s probably going to hurt.&lt;/p&gt;

&lt;p&gt;3)&lt;br/&gt;
+        /* Convert the RDBNAM into bytes using the current CCSID */&lt;br/&gt;
+        currentManager.convertFromJavaString(rdbnam, buff);&lt;/p&gt;

&lt;p&gt;Here, the UTF-8 CCSID manager will allocate a new byte array again, holding the contents of the string, before it puts it into the ByteBuffer.&lt;/p&gt;

&lt;p&gt;4)&lt;br/&gt;
+        /* Get the byte array out of the byte buffer */&lt;br/&gt;
+        int bytesLen = buff.position();&lt;br/&gt;
+        byte[] rdbBytes = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;bytesLen&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;And here yet another byte array is allocated before it&apos;s sent to DDMWriter.&lt;/p&gt;

&lt;p&gt;I think if writeRDBNAM() had used writeScalarPaddedString() instead of writeScalarPaddedBytes(), we could avoid some of these byte array allocations. We wouldn&apos;t avoid all of them, because writeScalarPaddedString() would still call getByteLength() and convertFromJavaString() internally, but at least 2 and 4 would go away.&lt;/p&gt;

&lt;p&gt;As a possible future improvement, we may also consider changing Utf8CcsidManager&apos;s implementation of convertFromJavaString(String,ByteBuffer) and getByteLength() so that they don&apos;t create any byte arrays internally.&lt;/p&gt;</comment>
                            <comment id="12914961" author="espinha" created="Sun, 26 Sep 2010 12:05:52 +0100"  >&lt;p&gt;Thank you Knut for your comments. I&apos;ve included the changes you suggested in this patch as indeed, we were creating unnecessary byte arrays. As for removing them from the getByteLength(), that might be a little more tricky as we actually need to convert the String into UTF-8 bytes to get the length. I&apos;m not sure if there&apos;d be an easier way to go about this, considering that UTF-8 is a variable-length encoding scheme.&lt;/p&gt;

&lt;p&gt;Maybe we could individually get the length for each of the characters and keep a sum variable where we update the length. This way we&apos;d only have a byte array with 4 bytes used at any given time. I&apos;ll leave this for future improvements though as the byte array should be collected by the GC anyway, so I don&apos;t think it will have any immediate noticeable impact for now.&lt;/p&gt;

&lt;p&gt;I&apos;ve already ran suites.All and derbyall on this patch with no failures, so I&apos;ll leave it until tomorrow evening (GMT) and if no one objects, I&apos;ll go ahead and commit it.&lt;/p&gt;</comment>
                            <comment id="12915228" author="knutanders" created="Mon, 27 Sep 2010 09:04:59 +0100"  >&lt;p&gt;Thanks, Tiago. The latest patch looks good to me. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="13685256" author="knutanders" created="Mon, 17 Jun 2013 10:19:29 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12470520">DERBY-4757</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12450070" name="DERBY-4746.diff" size="4425" author="espinha" created="Wed, 21 Jul 2010 18:32:14 +0100"/>
                            <attachment id="12449772" name="DERBY-4746.diff" size="4514" author="espinha" created="Sat, 17 Jul 2010 23:41:02 +0100"/>
                            <attachment id="12449760" name="DERBY-4746.diff" size="3667" author="espinha" created="Sat, 17 Jul 2010 17:00:57 +0100"/>
                            <attachment id="12450613" name="DERBY-4746_p2-impl.diff" size="4880" author="espinha" created="Tue, 27 Jul 2010 19:49:06 +0100"/>
                            <attachment id="12450152" name="DERBY-4746_p2-impl.diff" size="4251" author="espinha" created="Thu, 22 Jul 2010 10:40:45 +0100"/>
                            <attachment id="12450873" name="DERBY-4746_p2-tests.diff" size="11580" author="espinha" created="Fri, 30 Jul 2010 00:26:14 +0100"/>
                            <attachment id="12450153" name="DERBY-4746_p2-tests.diff" size="8478" author="espinha" created="Thu, 22 Jul 2010 10:40:45 +0100"/>
                            <attachment id="12455602" name="DERBY-4746_p3.diff" size="4545" author="espinha" created="Sun, 26 Sep 2010 12:05:52 +0100"/>
                            <attachment id="12454947" name="DERBY-4746_p3.diff" size="3657" author="espinha" created="Sat, 18 Sep 2010 17:58:16 +0100"/>
                            <attachment id="12454877" name="DERBY-4746_p3.diff" size="4872" author="espinha" created="Fri, 17 Sep 2010 18:25:27 +0100"/>
                            <attachment id="12454768" name="DERBY-4746_p3.diff" size="4715" author="espinha" created="Thu, 16 Sep 2010 15:45:54 +0100"/>
                            <attachment id="12454948" name="TestClient.java" size="941" author="espinha" created="Sat, 18 Sep 2010 17:58:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Jul 2010 00:28:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31358</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0jif:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36979</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>