org.apache.derby.catalog.IndexDescriptor.hasDeferrableChecking()
org.apache.derby.catalog.IndexDescriptor.isUniqueDeferrable()
org.apache.derby.catalog.IndexDescriptor.isUniqueWithDuplicateNulls()
org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,boolean,boolean,int[],boolean[],int)
org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int)
org.apache.derby.catalog.types.IndexDescriptorImpl.isUnique()
org.apache.derby.catalog.types.IndexDescriptorImpl.readExternal(ObjectInput)
org.apache.derby.catalog.types.IndexDescriptorImpl.toString()
org.apache.derby.catalog.types.IndexDescriptorImpl.writeExternal(ObjectOutput)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.checkIntegrity()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getDeferredHashTables()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getTopLevelSQLSessionContext()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.invalidateDeferredConstraintsData(long)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.isEffectivelyDeferred(Activation,long)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.popNestedSessionContext(Activation)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.pushNestedSessionContext(Activation,boolean,String)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setDeferred(Activation,long,boolean)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setDeferredAll(Activation,boolean)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setReferencedColumnMap(TableDescriptor,FormatableBitSet)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupSubStatementSessionContext(Activation)
org.apache.derby.iapi.sql.conn.SQLSessionContext.getConstraintModes()
org.apache.derby.iapi.sql.conn.SQLSessionContext.getDefaultSchema()
org.apache.derby.iapi.sql.conn.SQLSessionContext.getDeferredAll()
org.apache.derby.iapi.sql.conn.SQLSessionContext.isDeferred(long)
org.apache.derby.iapi.sql.conn.SQLSessionContext.resetConstraintModes()
org.apache.derby.iapi.sql.conn.SQLSessionContext.setConstraintModes(HashMap<Long,Boolean>,Long,Boolean)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setDeferredAll(Boolean)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setDeferred(long,boolean)
org.apache.derby.iapi.sql.conn.StatementContext.getSQLSessionContext()
org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.drop(LanguageConnectionContext,boolean)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,boolean,boolean,int[],boolean[],int)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int)
org.apache.derby.iapi.store.access.SortObserver.deferrable()
org.apache.derby.iapi.store.access.SortObserver.deferred()
org.apache.derby.iapi.store.access.SortObserver.getArrayClone()
org.apache.derby.iapi.store.access.SortObserver.rememberDuplicate(DataValueDescriptor[])
org.apache.derby.impl.jdbc.EmbedConnection.xa_prepare()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(TabInfoImpl,int)
org.apache.derby.impl.sql.catalog.TabInfoImpl.insertRowListImpl(ExecRow[],TransactionController,RowLocation[])
org.apache.derby.impl.sql.compile.CreateIndexNode.makeConstantAction()
org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.generatePushNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String)
org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary)
org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,boolean,boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary)
org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.clearDeferreds()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.compareConstraintModes(SQLSessionContext,SQLSessionContext)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.createSQLSessionContext()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(boolean,boolean,int,boolean)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doRollback(boolean,boolean)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doValidateConstraint(long,BackingStoreHashtable,boolean)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.effectivelyDeferred(SQLSessionContext,long)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentSQLSessionContext(Activation)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean,boolean,String)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.validateDeferredConstraint(long)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.validateDeferredConstraints(boolean)
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.setRole(String)
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String)
org.apache.derby.impl.sql.execute.AlterConstraintConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateIndex(long,DataDictionary,int,long[])
org.apache.derby.impl.sql.execute.BaseActivation.checkStatementValidity()
org.apache.derby.impl.sql.execute.BaseActivation.close()
org.apache.derby.impl.sql.execute.BaseActivation.closeActivationAction()
org.apache.derby.impl.sql.execute.BaseActivation.createResultSet()
org.apache.derby.impl.sql.execute.BaseActivation.getSQLSessionContextForChildren()
org.apache.derby.impl.sql.execute.BaseActivation.reinit()
org.apache.derby.impl.sql.execute.BaseActivation.setupActivation(ExecPreparedStatement,boolean)
org.apache.derby.impl.sql.execute.BasicSortObserver.getClone(DataValueDescriptor[])
org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)
org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)
org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(ConglomerateDescriptor,TableDescriptor,Properties)
org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.recreateUniqueConstraintBackingIndexAsUniqueWhenNotNull(ConglomerateDescriptor,TableDescriptor,Activation,LanguageConnectionContext)
org.apache.derby.impl.sql.execute.DeferredDuplicates.associateDuplicatesWithConglomerate(LanguageConnectionContext,long)
org.apache.derby.impl.sql.execute.DeferredDuplicates.makeHashTable(TransactionController,int)
org.apache.derby.impl.sql.execute.DeferredDuplicates.rememberDuplicate(TransactionController,long,BackingStoreHashtable,LanguageConnectionContext,DataValueDescriptor[])
org.apache.derby.impl.sql.execute.DeferredDuplicates.updateIndexCID(LanguageConnectionContext,long,long)
org.apache.derby.impl.sql.execute.DeferredDuplicates.validate(TransactionController,long,LanguageConnectionContext,BackingStoreHashtable,boolean)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)
org.apache.derby.impl.sql.execute.IndexChanger.IndexChanger(IndexRowGenerator,long,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo,String,ConglomerateController,TransactionController,int,FormatableBitSet,int,Activation)
org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(ExecIndexRow)
org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation)
org.apache.derby.impl.sql.execute.InsertResultSet.bulkInsertCore(LanguageConnectionContext,ExecRow,long)
org.apache.derby.impl.sql.execute.InsertResultSet.emptyIndexes(long,InsertConstantAction,TableDescriptor,DataDictionary,ExecRow)
org.apache.derby.impl.sql.execute.InsertResultSet.setUpAllSorts(ExecRow,RowLocation)
org.apache.derby.impl.sql.execute.InsertResultSet.updateAllIndexes(long,InsertConstantAction,TableDescriptor,DataDictionary,ExecRow)
org.apache.derby.impl.sql.execute.MaterializedResultSet.getNextRowFromSource()
org.apache.derby.impl.sql.execute.RIBulkChecker.failure(DataValueDescriptor[])
org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(ExecRow)
org.apache.derby.impl.sql.execute.SetConstraintsConstantAction.SetConstraintsConstantAction(List<TableName>,TableName,boolean)
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insert(ExecRow)
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insertToPositionIndex(int,RowLocation)
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.isRowAlreadyExist(ExecRow)
org.apache.derby.impl.sql.execute.UniqueIndexSortObserver.insertDuplicateKey(DataValueDescriptor[],DataValueDescriptor[])
org.apache.derby.impl.sql.execute.UniqueIndexSortObserver.UniqueIndexSortObserver(boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UniqueIndexSortObserver.UniqueIndexSortObserver(TransactionController,LanguageConnectionContext,long,boolean,boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UniqueWithDuplicateNullsIndexSortObserver.UniqueWithDuplicateNullsIndexSortObserver(boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UniqueWithDuplicateNullsIndexSortObserver.UniqueWithDuplicateNullsIndexSortObserver(TransactionController,LanguageConnectionContext,long,boolean,boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Activation,boolean,long)
org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(LeafControlRow,LeafControlRow,int,BTreeRowPosition,FetchDescriptor,DataValueDescriptor[],RowLocation,int,int)
org.apache.derby.impl.store.access.heap.HeapController.getOpenConglomerate()
org.apache.derby.impl.store.access.heap.Heap.openScan(TransactionManager,Transaction,boolean,int,int,LockingPolicy,int,FormatableBitSet,DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.RAMTransaction.openConglomerate(Conglomerate,boolean,int,int,int,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.RAMTransaction.openScan(Conglomerate,boolean,int,int,int,FormatableBitSet,DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[])
org.apache.derby.jdbc.EmbedXAResource.prepare(Xid)
org.apache.derby.jdbc.EmbedXAResource.wrapInXAException(SQLException)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.assertAlterInconsistentCharacteristics(Statement,String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.assertColumnLevelDefaultBehaviorAccepted(Statement)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.assertCreateInconsistentCharacteristics(Statement,String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.assertTableLevelDefaultBehaviorAccepted(Statement)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.assertXidRolledBack(XAResource,Xid)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.calledNested()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.checkConsistencyOfBaseTableAndIndex(Statement)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.computeNewState(String,String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.ConstraintCharacteristicsTest(String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.declareCalledNested(Statement)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.doXAWork(Statement,XAResource)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.dropTab1()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.dumpFullResultSet(ResultSet)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.executeThreads(int,int,boolean)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.rs2Values(String[][])
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.setUp()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.setupTab1()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.suite()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testAlmostRemovedAllDups()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testAlterConstraintInvalidation()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testBasicDeferral()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testDeferredRowsInvalidation()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testDerby6374()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testImport()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testLocking()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testLockingWithCommit()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testLockingWithRollback()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testManySimilarDuplicates()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testRoutines()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testSyntaxAndBinding()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testXA()
org.apache.derbyTesting.functionTests.tests.lang.LockTableTest.getSelectLocksString()
org.apache.derbyTesting.junit.SupportFilesSetup.getReadWrite(String)
