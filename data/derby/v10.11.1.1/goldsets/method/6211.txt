org.apache.derby.iapi.db.OptimizerTrace.getOptimizerTraceOutput()
org.apache.derby.iapi.db.OptimizerTrace.nullifyTrace()
org.apache.derby.iapi.db.OptimizerTrace.setOptimizerTrace(boolean)
org.apache.derby.iapi.db.OptimizerTrace.setOptimizerTraceHtml(boolean)
org.apache.derby.iapi.db.OptimizerTrace.setOptimizerTracer(OptTrace)
org.apache.derby.iapi.db.OptimizerTrace.writeOptimizerTraceOutputHtml(String)
org.apache.derby.iapi.sql.compile.JoinStrategy.getOperatorSymbol()
org.apache.derby.iapi.sql.compile.JoinStrategy.scanCostType()
org.apache.derby.iapi.sql.compile.Optimizable.getOptimizerTracer()
org.apache.derby.iapi.sql.compile.Optimizable.optimizerTracingIsOn()
org.apache.derby.iapi.sql.compile.Optimizable.uniqueJoin(OptimizablePredicateList)
org.apache.derby.iapi.sql.compile.OptimizerFactory.getCostEstimate()
org.apache.derby.iapi.sql.compile.Optimizer.getJoinStrategy(String)
org.apache.derby.iapi.sql.compile.Optimizer.getOptimizedCost()
org.apache.derby.iapi.sql.compile.Optimizer.modifyAccessPaths()
org.apache.derby.iapi.sql.compile.Optimizer.newCostEstimate()
org.apache.derby.iapi.sql.compile.OptimizerPlan.DeadEnd.bind(DataDictionary,LanguageConnectionContext,CompilerContext)
org.apache.derby.iapi.sql.compile.OptimizerPlan.DeadEnd.DeadEnd(String)
org.apache.derby.iapi.sql.compile.OptimizerPlan.DeadEnd.isBound()
org.apache.derby.iapi.sql.compile.OptimizerPlan.DeadEnd.toString()
org.apache.derby.iapi.sql.compile.OptimizerPlan.Join.countLeafNodes()
org.apache.derby.iapi.sql.compile.OptimizerPlan.Join.equals(Object)
org.apache.derby.iapi.sql.compile.OptimizerPlan.Join.isLeftPrefixOf(OptimizerPlan)
org.apache.derby.iapi.sql.compile.OptimizerPlan.leftmostLeaf()
org.apache.derby.iapi.sql.compile.Optimizer.trace(int,int,int,double,Object)
org.apache.derby.iapi.sql.compile.Optimizer.tracer()
org.apache.derby.iapi.sql.compile.Optimizer.tracingIsOn()
org.apache.derby.iapi.sql.compile.OptTrace.traceEndQueryBlock()
org.apache.derby.iapi.sql.compile.OptTrace.traceModifyingAccessPaths()
org.apache.derby.iapi.sql.compile.OptTrace.traceRememberingBestJoinOrder(int,int[],JBitSet)
org.apache.derby.iapi.sql.compile.OptTrace.traceSortNeededForOrdering(int,RequiredRowOrdering)
org.apache.derby.iapi.sql.compile.OptTrace.traceStart(long)
org.apache.derby.iapi.sql.compile.OptTrace.traceStart(long,int)
org.apache.derby.iapi.sql.compile.OptTrace.traceStart(long,int,OptimizableList)
org.apache.derby.iapi.sql.compile.OptTrace.traceStartQueryBlock(long,int,OptimizableList)
org.apache.derby.iapi.sql.compile.OptTrace.traceStartStatement(String)
org.apache.derby.iapi.sql.compile.OptTrace.traceTimeout(long,CostEstimate)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.appendOptimizerTraceOutput(String)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getOptimizerTrace()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getOptimizerTraceHtml()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.prepareInternalStatement(String)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setOptimizerTraceOutput(String)
org.apache.derby.impl.sql.compile.DefaultOptTrace.appendTraceString(String)
org.apache.derby.impl.sql.compile.DefaultOptTrace.DefaultOptTrace()
org.apache.derby.impl.sql.compile.DefaultOptTrace.DefaultOptTrace(LanguageConnectionContext,int)
org.apache.derby.impl.sql.compile.DefaultOptTrace.reportConglomerateDescriptor(ConglomerateDescriptor)
org.apache.derby.impl.sql.compile.DefaultOptTrace.reportCostForTable(Object,int)
org.apache.derby.impl.sql.compile.DefaultOptTrace.reportCostIncluding(String,CostEstimate,int)
org.apache.derby.impl.sql.compile.DefaultOptTrace.reportJoinOrder(String,boolean,int,int,int[],JBitSet)
org.apache.derby.impl.sql.compile.FromBaseTable.changeAccessPath()
org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)
org.apache.derby.impl.sql.compile.FromBaseTable.nextAccessPath(Optimizer,OptimizablePredicateList,RowOrdering)
org.apache.derby.impl.sql.compile.FromTable.getCostEstimate(Optimizer)
org.apache.derby.impl.sql.compile.FromTable.getScratchCostEstimate(Optimizer)
org.apache.derby.impl.sql.compile.FromTable.rememberAsBest(int,Optimizer)
org.apache.derby.impl.sql.compile.FromTable.rememberJoinStrategyAsBest(AccessPath)
org.apache.derby.impl.sql.compile.HashJoinStrategy.feasible(Optimizable,OptimizablePredicateList,Optimizer)
org.apache.derby.impl.sql.compile.HashJoinStrategy.resultSetMethodName(boolean,boolean)
org.apache.derby.impl.sql.compile.JoinNode.optimizeIt(Optimizer,OptimizablePredicateList,CostEstimate,RowOrdering)
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.bestCost()
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.buildJoinOrder(String,boolean,int,int[])
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.costForTable(Object,int)
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.costIncluding(String,Object,int)
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.dumpConglomerateDescriptor(ConglomerateDescriptor)
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.getNewCostEstimate(double,double,double)
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.Level2OptimizerImpl(OptimizableList,OptimizablePredicateList,DataDictionary,boolean,boolean,boolean,int,JoinStrategy[],int,RequiredRowOrdering,int,LanguageConnectionContext)
org.apache.derby.impl.sql.compile.Level2OptimizerImpl.lockModeThreshold(String,String,double,int)
org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.estimateCost(Optimizable,OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,CostEstimate)
org.apache.derby.impl.sql.compile.OptimizerImpl.addScopedPredicatesToList(PredicateList)
org.apache.derby.impl.sql.compile.OptimizerImpl.addScopedPredicatesToList(PredicateList,ContextManager)
org.apache.derby.impl.sql.compile.OptimizerImpl.considerCost(Optimizable,OptimizablePredicateList,CostEstimate,CostEstimate)
org.apache.derby.impl.sql.compile.OptimizerImpl.costBasedCostOptimizable(Optimizable,TableDescriptor,ConglomerateDescriptor,OptimizablePredicateList,CostEstimate)
org.apache.derby.impl.sql.compile.OptimizerImpl.getMaxMemoryPerTable()
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextDecoratedPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.getOptimizableCount()
org.apache.derby.impl.sql.compile.OptimizerImpl.OptimizerImpl(OptimizableList,OptimizablePredicateList,DataDictionary,boolean,boolean,boolean,int,JoinStrategy[],int,RequiredRowOrdering,int,OptimizerPlan,LanguageConnectionContext)
org.apache.derby.impl.sql.compile.OptimizerImpl.prepForNextRound()
org.apache.derby.impl.sql.compile.OptimizerImpl.rememberBestCost(CostEstimate,int)
org.apache.derby.impl.sql.compile.OptimizerImpl.useStatistics()
org.apache.derby.impl.sql.compile.OptimizerTracer.cantInstantiate(String)
org.apache.derby.impl.sql.compile.OptimizerTracer.OptimizerTracer()
org.apache.derby.impl.sql.compile.OptimizerTracer.unloadTool.run()
org.apache.derby.impl.sql.compile.OptimizerTracer.unloadTool(String)
org.apache.derby.impl.sql.compile.OptTraceViewer.executeDDL(Connection,String)
org.apache.derby.impl.sql.compile.OptTraceViewer.getDerbyConnection()
org.apache.derby.impl.sql.compile.OptTraceViewer.loadTool(String)
org.apache.derby.impl.sql.compile.OptTraceViewer.OptTraceViewer()
org.apache.derby.impl.sql.compile.OptTraceViewer.prepareStatement(Connection,String)
org.apache.derby.impl.sql.compile.OptTraceViewer.wrap(String)
org.apache.derby.impl.sql.compile.OptTraceViewer.wrap(Throwable)
org.apache.derby.impl.sql.compile.QueryTreeNode.getOptimizerFactory()
org.apache.derby.impl.sql.compile.ResultSetNode.getOptimizer(OptimizableList,OptimizablePredicateList,DataDictionary,RequiredRowOrdering,OptimizerPlan)
org.apache.derby.impl.sql.compile.ResultSetNode.isNotExists()
org.apache.derby.impl.sql.compile.SelectNode.optimize(DataDictionary,PredicateList,double)
org.apache.derby.impl.sql.compile.TableName.getFullSQLName()
org.apache.derby.impl.sql.compile.TableName.getFullTableName()
org.apache.derby.impl.sql.compile.TableOperatorNode.optimizeSource(Optimizer,ResultSetNode,PredicateList,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.createElement(Element,String,String)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatCost(Element,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatJoinOrder(Element,int[])
org.apache.derby.impl.sql.compile.XMLOptTrace.formatPlanCost(Element,String,int[],int,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatPlanSummary(int[],int)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatPlanSummary(int[],int,boolean)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatSelectivity(Element,String,int,double)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatSkip(Element,String,String)
org.apache.derby.impl.sql.compile.XMLOptTrace.formatTimestamp(long)
org.apache.derby.impl.sql.compile.XMLOptTrace.getConglomerateName(Optimizable,ConglomerateDescriptor,boolean)
org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizable(int)
org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)
org.apache.derby.impl.sql.compile.XMLOptTrace.getSQLName(Optimizable,ConglomerateDescriptor,boolean)
org.apache.derby.impl.sql.compile.XMLOptTrace.isBaseTable(Optimizable)
org.apache.derby.impl.sql.compile.XMLOptTrace.isComplete(int[])
org.apache.derby.impl.sql.compile.XMLOptTrace.isFromTable(Optimizable)
org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)
org.apache.derby.impl.sql.compile.XMLOptTrace.makeTableName(String,String)
org.apache.derby.impl.sql.compile.XMLOptTrace.printThrowable(Throwable)
org.apache.derby.impl.sql.compile.XMLOptTrace.printToWriter(PrintWriter)
org.apache.derby.impl.sql.compile.XMLOptTrace.QueryBlock.QueryBlock(int,OptimizableList,Element)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceAddingUnorderedOptimizable(int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceChangingAccessPathForTable(int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCheapestPlanSoFar(int,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCompleteJoinOrder()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCompositeSelectivityFromStatistics(double)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceConsideringConglomerate(ConglomerateDescriptor,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceConsideringJoinStrategy(JoinStrategy,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceConstantStartStopPositions()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostIncludingCompositeSelectivityFromStats(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostIncludingExtra1stColumnSelectivity(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostIncludingExtraNonQualifierSelectivity(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostIncludingExtraQualifierSelectivity(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostIncludingExtraStartStop(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostIncludingStatsForIndex(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostOfConglomerateScan(int,ConglomerateDescriptor,CostEstimate,int,double,int,double,int,double,int,double,int,double)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostOfNoncoveringIndex(CostEstimate,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostOfNScans(int,double,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostWithoutSortAvoidance(CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCostWithSortAvoidance(CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceCurrentPlanAvoidsSort(CostEstimate,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceEstimatingCostOfConglomerate(ConglomerateDescriptor,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceHashKeyColumns(int[])
org.apache.derby.impl.sql.compile.XMLOptTrace.traceIllegalUserJoinOrder()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceJoinOrderConsideration(int,int[],JBitSet)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceLookingForSpecifiedIndex(String,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceModifyingAccessPaths(int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceNextAccessPath(String,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceNoBestPlan()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceNoMoreConglomerates(int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceNonCoveringIndexCost(double,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceNoStartStopPosition()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceOptimizingJoinNode()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceRememberingBestAccessPath(AccessPath,int,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceRememberingBestAccessPathSubstring(AccessPath,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceRememberingBestJoinOrder(int,int[],int,CostEstimate,JBitSet)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceRememberingBestSortAvoidanceAccessPathSubstring(AccessPath,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceRememberingBestUnknownAccessPathSubstring(AccessPath,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceRememberingJoinStrategy(JoinStrategy,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceScanningHeapWithUniqueKey()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceShortCircuiting(boolean,Optimizable,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceSingleMatchedRowCost(double,int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceSkipHashJoinNoHashKeys()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceSkippingBecauseTooMuchMemory(int)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceSkippingJoinOrder(int,int,int[],JBitSet)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceSkipUnmaterializableHashJoin()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceSortCost(CostEstimate,CostEstimate)
org.apache.derby.impl.sql.compile.XMLOptTrace.traceUserJoinOrderOptimized()
org.apache.derby.impl.sql.compile.XMLOptTrace.traceVacuous()
org.apache.derby.impl.sql.compile.XMLOptTrace.XMLOptTrace()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getStatementContext()
org.apache.derby.impl.sql.GenericStatement.prepMinion(LanguageConnectionContext,boolean,Object[],SchemaDescriptor,boolean)
org.apache.derbyTesting.functionTests.tests.lang.DummyOptTrace.BadSubclass.BadSubclass(int)
org.apache.derbyTesting.functionTests.tests.lang.DummyOptTrace.DummyOptTrace()
org.apache.derbyTesting.functionTests.tests.lang.DummyOptTrace.fullTrace()
org.apache.derbyTesting.functionTests.tests.lang.OptionalToolsTest.test_03_customTool()
org.apache.derbyTesting.functionTests.tests.lang.OptionalToolsTest.test_04_customOptimizerTrace()
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.close()
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.getMetaData()
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.getRawColumn(int)
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.getResultSetMetaData(String)
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.loadMethods()
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.next()
org.apache.derbyTesting.functionTests.tests.lang.RSMDWrapper.RSMDWrapper(Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.routineExists(Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.setUp()
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.suite()
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.tableExists(Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.test_01_planCost()
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.test_02_xmlVTI()
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.vetOuterJoin(Connection)
org.apache.derbyTesting.functionTests.tests.lang.XMLOptimizerTraceTest.XMLOptimizerTraceTest(String)
org.apache.derby.vti.XmlVTI.readRows()
