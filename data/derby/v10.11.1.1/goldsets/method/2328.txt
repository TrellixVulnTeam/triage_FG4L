org.apache.derby.diag.LockTable.dumpLock(Latch)
org.apache.derby.iapi.services.loader.ClassFactoryContext.getLockSpace()
org.apache.derby.iapi.services.locks.CompatibilitySpace.getOwner()
org.apache.derby.iapi.services.locks.Latch.getCompatabilitySpace()
org.apache.derby.iapi.services.locks.Limit.reached(CompatibilitySpace,Object,int,Enumeration,int)
org.apache.derby.iapi.services.locks.Limit.reached(Object,Object,int,Enumeration,int)
org.apache.derby.iapi.services.locks.LockFactory.anyoneBlocked()
org.apache.derby.iapi.services.locks.LockFactory.areLocksHeld(CompatibilitySpace)
org.apache.derby.iapi.services.locks.LockFactory.areLocksHeld(CompatibilitySpace,Object)
org.apache.derby.iapi.services.locks.LockFactory.areLocksHeld(Object)
org.apache.derby.iapi.services.locks.LockFactory.areLocksHeld(Object,Object)
org.apache.derby.iapi.services.locks.LockFactory.clearLimit(CompatibilitySpace,Object)
org.apache.derby.iapi.services.locks.LockFactory.clearLimit(Object,Object)
org.apache.derby.iapi.services.locks.LockFactory.createCompatibilitySpace(Object)
org.apache.derby.iapi.services.locks.LockFactory.isLockHeld(CompatibilitySpace,Object,Lockable,Object)
org.apache.derby.iapi.services.locks.LockFactory.isLockHeld(Object,Object,Lockable,Object)
org.apache.derby.iapi.services.locks.LockFactory.lockObject(CompatibilitySpace,Object,Lockable,Object,int)
org.apache.derby.iapi.services.locks.LockFactory.lockObject(Object,Object,Lockable,Object,int)
org.apache.derby.iapi.services.locks.LockFactory.setLimit(CompatibilitySpace,Object,int,Limit)
org.apache.derby.iapi.services.locks.LockFactory.setLimit(Object,Object,int,Limit)
org.apache.derby.iapi.services.locks.LockFactory.transfer(CompatibilitySpace,Object,Object)
org.apache.derby.iapi.services.locks.LockFactory.transfer(Object,Object,Object)
org.apache.derby.iapi.services.locks.LockFactory.unlock(CompatibilitySpace,Object,Lockable,Object)
org.apache.derby.iapi.services.locks.LockFactory.unlockGroup(CompatibilitySpace,Object)
org.apache.derby.iapi.services.locks.LockFactory.unlockGroup(CompatibilitySpace,Object,Matchable)
org.apache.derby.iapi.services.locks.LockFactory.unlockGroup(Object,Object)
org.apache.derby.iapi.services.locks.LockFactory.unlockGroup(Object,Object,Matchable)
org.apache.derby.iapi.services.locks.LockFactory.unlock(Object,Object,Lockable,Object)
org.apache.derby.iapi.services.locks.LockFactory.zeroDurationlockObject(CompatibilitySpace,Lockable,Object,int)
org.apache.derby.iapi.services.locks.LockFactory.zeroDurationlockObject(Object,Lockable,Object,int)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getLockObject(int)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.isTransactionPristine()
org.apache.derby.iapi.store.access.TransactionController.getFileHandler()
org.apache.derby.iapi.store.access.TransactionController.getLockObject()
org.apache.derby.iapi.store.raw.RawStoreFactory.startNestedReadOnlyUserTransaction(CompatibilitySpace,ContextManager,String)
org.apache.derby.iapi.store.raw.RawStoreFactory.startNestedReadOnlyUserTransaction(Object,ContextManager,String)
org.apache.derby.iapi.store.raw.Transaction.getCompatibilitySpace()
org.apache.derby.iapi.store.raw.xact.TransactionFactory.startNestedReadOnlyUserTransaction(RawStoreFactory,CompatibilitySpace,ContextManager,String)
org.apache.derby.iapi.store.raw.xact.TransactionFactory.startNestedReadOnlyUserTransaction(RawStoreFactory,Object,ContextManager,String)
org.apache.derby.impl.db.StoreClassFactoryContext.getPersistentSet()
org.apache.derby.impl.db.StoreClassFactoryContext.StoreClassFactoryContext(ContextManager,ClassFactory,AccessFactory,JarReader)
org.apache.derby.impl.services.locks.ActiveLock.ActiveLock(CompatibilitySpace,Lockable,Object)
org.apache.derby.impl.services.locks.ActiveLock.ActiveLock(Object,Lockable,Object)
org.apache.derby.impl.services.locks.Control.getLock(CompatibilitySpace,Object)
org.apache.derby.impl.services.locks.Control.getLockControl()
org.apache.derby.impl.services.locks.Control.getLock(Object,Object)
org.apache.derby.impl.services.locks.Control.getWaiting()
org.apache.derby.impl.services.locks.Control.isGrantable(boolean,CompatibilitySpace,Object)
org.apache.derby.impl.services.locks.Control.isGrantable(boolean,Object,Object)
org.apache.derby.impl.services.locks.Deadlock.handle(SinglePool,Stack,int,Dictionary,byte)
org.apache.derby.impl.services.locks.D_LockControl.debugLock(String,CompatibilitySpace,Object)
org.apache.derby.impl.services.locks.D_LockControl.debugLockString(CompatibilitySpace,Object)
org.apache.derby.impl.services.locks.D_LockControl.debugLock(String,CompatibilitySpace,Object,Lockable)
org.apache.derby.impl.services.locks.D_LockControl.debugLockString(CompatibilitySpace,Object,Lockable)
org.apache.derby.impl.services.locks.D_LockControl.debugLock(String,CompatibilitySpace,Object,Lockable,Object,int)
org.apache.derby.impl.services.locks.D_LockControl.debugLockString(CompatibilitySpace,Object,Lockable,Object,int)
org.apache.derby.impl.services.locks.D_LockControl.debugLock(String,Object,Object)
org.apache.derby.impl.services.locks.D_LockControl.debugLockString(Object,Object)
org.apache.derby.impl.services.locks.D_LockControl.debugLock(String,Object,Object,Lockable)
org.apache.derby.impl.services.locks.D_LockControl.debugLockString(Object,Object,Lockable)
org.apache.derby.impl.services.locks.D_LockControl.debugLock(String,Object,Object,Lockable,Object,int)
org.apache.derby.impl.services.locks.D_LockControl.debugLockString(Object,Object,Lockable,Object,int)
org.apache.derby.impl.services.locks.LockControl.addLock(LockSet,CompatibilitySpace,Object)
org.apache.derby.impl.services.locks.LockControl.addLock(LockSet,Object,Object)
org.apache.derby.impl.services.locks.Lock.equals(Object)
org.apache.derby.impl.services.locks.Lock.getLockable()
org.apache.derby.impl.services.locks.Lock.Lock(CompatibilitySpace,Lockable,Object)
org.apache.derby.impl.services.locks.Lock.Lock(Object,Lockable,Object)
org.apache.derby.impl.services.locks.LockSet.lockObject(CompatibilitySpace,Lockable,Object,int)
org.apache.derby.impl.services.locks.LockSet.lockObject(Object,Lockable,Object,int)
org.apache.derby.impl.services.locks.LockSpace.addLock(Object,Lock)
org.apache.derby.impl.services.locks.LockSpace.clearLimit(Object)
org.apache.derby.impl.services.locks.LockSpace.isLockHeld(Object,Lockable,Object)
org.apache.derby.impl.services.locks.LockSpace.LockSpace(Dictionary,Object)
org.apache.derby.impl.services.locks.LockSpace.LockSpace(Object)
org.apache.derby.impl.services.locks.LockSpace.unlockGroup(LockSet,Object)
org.apache.derby.impl.services.locks.LockSpace.unlockGroup(LockSet,Object,Matchable)
org.apache.derby.impl.services.locks.LockSpace.unlockReference(LockSet,Lockable,Object,Object)
org.apache.derby.impl.services.locks.SinglePool.lockAnObject(CompatibilitySpace,Object,Lockable,Object,int)
org.apache.derby.impl.services.locks.SinglePool.lockAnObject(Object,Object,Lockable,Object,int)
org.apache.derby.impl.services.reflect.UpdateLoader.checkLoaded(String,boolean)
org.apache.derby.impl.services.reflect.UpdateLoader.getResourceAsStream(String)
org.apache.derby.impl.services.reflect.UpdateLoader.loadClass(String,boolean)
org.apache.derby.impl.services.reflect.UpdateLoader.lockClassLoader(ShExQual)
org.apache.derby.impl.services.reflect.UpdateLoader.UpdateLoader(String,DatabaseClasses,boolean,boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.doneReading(int,LanguageConnectionContext)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.startReading(LanguageConnectionContext)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.startWriting(LanguageConnectionContext)
org.apache.derby.impl.store.access.PropertyConglomerate.iHoldTheUpdateLock(TransactionController)
org.apache.derby.impl.store.access.PropertyConglomerate.lockProperties(TransactionController)
org.apache.derby.impl.store.access.RAMTransaction.startNestedUserTransaction(boolean)
org.apache.derby.impl.store.raw.data.BaseContainer.addPage(BaseContainerHandle,boolean)
org.apache.derby.impl.store.raw.data.BaseContainer.compressContainer(BaseContainerHandle)
org.apache.derby.impl.store.raw.RawStore.startTransaction(ContextManager,String)
org.apache.derby.impl.store.raw.xact.Xact.close()
org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransaction(RawStoreFactory,ContextManager,boolean,CompatibilitySpace,String,String,boolean)
org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransaction(RawStoreFactory,ContextManager,boolean,Object,String,String,boolean)
org.apache.derby.impl.store.raw.xact.Xact.setup(PersistentSet)
org.apache.derby.impl.store.raw.xact.Xact.Xact(XactFactory,LogFactory,DataFactory,boolean,CompatibilitySpace)
org.apache.derby.impl.store.raw.xact.Xact.Xact(XactFactory,LogFactory,DataFactory,boolean,Object)
org.apache.derbyTesting.unitTests.services.T_LockFactory.checkLockCount(CompatibilitySpace,int)
org.apache.derbyTesting.unitTests.services.T_LockFactory.checkLockCount(Object,int)
org.apache.derbyTesting.unitTests.services.T_LockFactory.checkLockGroupCount(CompatibilitySpace,Object,int)
org.apache.derbyTesting.unitTests.services.T_LockFactory.checkLockGroupCount(Object,Object,int)
org.apache.derbyTesting.unitTests.services.T_LockFactory.S001()
org.apache.derbyTesting.unitTests.services.T_LockFactory.S002()
org.apache.derbyTesting.unitTests.services.T_LockFactory.S003()
org.apache.derbyTesting.unitTests.services.T_LockFactory.S004()
org.apache.derbyTesting.unitTests.services.T_LockFactory.S005()
org.apache.derbyTesting.unitTests.services.T_LockFactory.S007()
org.apache.derbyTesting.unitTests.services.T_User.checkValue(T_L1,long)
org.apache.derbyTesting.unitTests.services.T_User.T001()
org.apache.derbyTesting.unitTests.services.T_User.T002()
org.apache.derbyTesting.unitTests.services.T_User.T003()
org.apache.derbyTesting.unitTests.services.T_User.T004()
org.apache.derbyTesting.unitTests.store.T_AccessFactory.nestedUserTransaction(TransactionController)
org.apache.derbyTesting.unitTests.store.T_TWC.checkNullLockCount()
org.apache.derbyTesting.unitTests.store.T_Util.t_checkNullLockCount(Transaction)
