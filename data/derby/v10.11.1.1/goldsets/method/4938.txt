org.apache.derby.catalog.Statistics.getRowEstimate()
org.apache.derby.catalog.types.StatisticsImpl.selectivity(Object[])
org.apache.derby.catalog.types.StatisticsImpl.StatisticsImpl()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getAndClearIndexStatsIsUpToDate()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getIndexStatsUpdateReason()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getStatistics()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.markForIndexStatsUpdate(long)
org.apache.derby.iapi.store.access.RowCountable.getEstimatedRowCount()
org.apache.derby.iapi.store.access.RowCountable.setEstimatedRowCount(long)
org.apache.derby.impl.sql.compile.CursorNode.bindStatement()
org.apache.derby.impl.sql.compile.CursorNode.collectTablePrivsAndStats(FromBaseTable)
org.apache.derby.impl.sql.compile.CursorNode.getXML()
org.apache.derby.impl.sql.compile.CursorNode.updateIndexStatisticsFor()
org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)
org.apache.derby.impl.sql.compile.StatementNode.generate(ByteArray)
org.apache.derby.impl.sql.GenericStatement.prepMinion(LanguageConnectionContext,boolean,Object[],SchemaDescriptor,boolean)
