org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.buildTableNumList(FromTable,boolean)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.columnOnOneSide(Optimizable)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.generateExpressionOperand(Optimizable,int,ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getColumnOperand(int,int)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getColumnOperand(Optimizable)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getColumnOperand(Optimizable,int)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getExpressionOperand(int,int)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getExpressionOperand(int,int,FromTable)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getOperand(ColumnReference,int,boolean)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getScopedOperand(int,JBitSet,ResultSetNode)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.initBaseTableVisitor(int,boolean)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.init(Object,Object)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.isQualifier(Optimizable)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.isQualifier(Optimizable,boolean)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.keyColumnOnLeft(Optimizable)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.valNodeReferencesOptTable(ValueNode,FromTable,boolean,boolean)
org.apache.derby.impl.sql.compile.HashJoinStrategy.feasible(Optimizable,OptimizablePredicateList,Optimizer)
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.OptimizerImpl(OptimizableList,OptimizablePredicateList,DataDictionary,boolean,boolean,boolean,int,JoinStrategy[],int,RequiredRowOrdering,int)
org.apache.derby.impl.sql.compile.OptimizerImpl.prepForNextRound()
org.apache.derby.impl.sql.compile.OptimizerImpl.rememberBestCost(CostEstimate,int)
org.apache.derby.impl.sql.compile.Predicate.isJoinPredicate()
org.apache.derby.impl.sql.compile.Predicate.isPushableOrClause(Optimizable)
org.apache.derby.impl.sql.compile.PredicateList.constantColumn(ColumnReference)
org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean)
org.apache.derby.impl.sql.compile.PredicateList.hasOptimizableEquijoin(Optimizable,int)
org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean)
org.apache.derby.impl.sql.compile.PredicateList.transferNonQualifiers(Optimizable,PredicateList)
org.apache.derby.impl.sql.compile.Predicate.pushableToSubqueries()
org.apache.derby.impl.sql.compile.ProjectRestrictNode.isMaterializable()
org.apache.derby.impl.sql.compile.ProjectRestrictNode.legalJoinOrder(JBitSet)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.modifyAccessPath(JBitSet)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.optimizeIt(Optimizer,OptimizablePredicateList,CostEstimate,RowOrdering)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.replaceWithHashTableNode()
org.apache.derby.impl.sql.compile.UnaryComparisonOperatorNode.orderedNulls()
org.apache.derby.impl.sql.compile.UnaryComparisonOperatorNode.selfComparison(ColumnReference)
org.apache.derbyTesting.functionTests.tests.lang.User.getConnection()
