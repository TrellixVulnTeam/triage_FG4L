org.apache.derby.iapi.jdbc.BrokeredConnection40.BrokeredConnection40(BrokeredConnectionControl)
org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[])
org.apache.derby.iapi.jdbc.BrokeredConnection40.createNClob()
org.apache.derby.iapi.jdbc.BrokeredConnection40.createSQLXML()
org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[])
org.apache.derby.iapi.jdbc.BrokeredConnection40.$GenericMethodDeclaration$()
org.apache.derby.iapi.jdbc.BrokeredConnection40.getJDBCLevel()
org.apache.derby.iapi.jdbc.BrokeredConnection40.getTypeMap()
org.apache.derby.iapi.jdbc.BrokeredConnection40.isWrapperFor(Class<?>)
org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl)
org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String)
org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object)
org.apache.derby.iapi.jdbc.BrokeredConnection40.unwrap(java.lang.Class<T>,T)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.BrokeredPreparedStatement40(BrokeredStatementControl,int,String,Object)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML)
org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String)
org.apache.derbyTesting.functionTests.harness.RunList.setTopSuiteProperties()
org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String)
org.apache.derbyTesting.functionTests.harness.RunTest.getProperties(Properties)
org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnection()
org.apache.derbyTesting.functionTests.util.TestConfiguration.isSingleLegXA()
org.apache.derbyTesting.functionTests.util.TestConfiguration.loadingFromJars()
org.apache.derbyTesting.functionTests.util.TestConfiguration.TestConfiguration(Properties)
