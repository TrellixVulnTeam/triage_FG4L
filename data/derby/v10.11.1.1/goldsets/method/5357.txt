org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.getUUIDFactory()
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newUserDescriptor(String,String,char[],Timestamp)
org.apache.derby.iapi.store.access.FileResource.removeJarDir(String)
org.apache.derby.iapi.store.access.FileResource.remove(String,long)
org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.upgradeJarStorage(TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.upgradeMakeCatalog(TransactionController,int)
org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)
org.apache.derby.impl.sql.execute.JarUtil.add(InputStream)
org.apache.derby.impl.sql.execute.JarUtil.drop()
org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean)
org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(String,String,char)
org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char)
org.apache.derby.impl.sql.execute.JarUtil.replace(InputStream)
org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor)
org.apache.derby.impl.store.raw.data.RemoveFile.run()
org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream)
org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File)
org.apache.derby.impl.tools.dblook.DB_Jar.doCopy(String,String)
org.apache.derby.impl.tools.dblook.DB_Jar.doHeader(boolean)
org.apache.derby.impl.tools.dblook.DB_Jar.doJars(String,Connection)
org.apache.derby.impl.tools.dblook.DB_Jar.doJars(String,Connection,boolean)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.assertFileNameShape(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.Changes10_9(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.CharRange.CharRange(char[][])
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.CharRange.CharRange(char[][],int)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.createSchema(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.Goal.foundOnce()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.Goal.isRepeatable()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.Goal.matches(char)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.Goal.setFoundOnce()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.initPattern()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.installJar(String,String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.matches(String,Goal[])
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.removeJar(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.replaceJar(String,String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.setDBClasspath(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.SingleChar.SingleChar(char)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.SingleChar.SingleChar(char,int)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.suite(int)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.testJarStorage()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.tryCall()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.verifyCanConnect(DataSource)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.verifyNewLocations(int)
org.apache.derby.tools.dblook.expandDoubleQuotes(String)
org.apache.derby.tools.dblook.go()
org.apache.derby.tools.dblook.unExpandDoubleQuotes(String)
