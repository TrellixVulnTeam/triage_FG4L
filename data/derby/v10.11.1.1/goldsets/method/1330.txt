org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.checkOwner(String)
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.ColPermsDescriptor(DataDictionary,String,String,UUID,String)
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.ColPermsDescriptor(DataDictionary,String,String,UUID,String,FormatableBitSet)
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.ColPermsDescriptor(DataDictionary,UUID)
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.getCatalogNumber()
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.getClassType()
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.getDependableFinder()
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.getObjectName()
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.hashCode()
org.apache.derby.iapi.sql.dictionary.ColPermsDescriptor.toString()
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newColPermsDescriptor(TableDescriptor,String,FormatableBitSet,String)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newRoutinePermsDescriptor(AliasDescriptor,String)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newTablePermsDescriptor(TableDescriptor,String,String,String,String,String,String,String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getColumnPermissions(UUID)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getColumnPermissions(UUID,int,boolean,String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getColumnPermissions(UUID,String,boolean,String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getRoutinePermissions(UUID)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getRoutinePermissions(UUID,String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getTablePermissions(UUID)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getTablePermissions(UUID,String)
org.apache.derby.iapi.sql.dictionary.PermissionsCatalogRowFactory.removePermissions(ExecRow,PermissionsDescriptor,boolean[])
org.apache.derby.iapi.sql.dictionary.PermissionsCatalogRowFactory.setUUIDOfThePassedDescriptor(ExecRow,PermissionsDescriptor)
org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor.getGrantee()
org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor.getGrantor()
org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor.getObjectID()
org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor.getUUID()
org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor.isPersistent()
org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor.setUUID(UUID)
org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor.RoutinePermsDescriptor(DataDictionary,String,String)
org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor.RoutinePermsDescriptor(DataDictionary,String,String,UUID)
org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor.RoutinePermsDescriptor(DataDictionary,String,String,UUID,boolean)
org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor.RoutinePermsDescriptor(DataDictionary,UUID)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.addPermittedColumns(DataDictionary,boolean,String,FormatableBitSet)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.getPermissionDescriptor(String,DataDictionary)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.getPUBLIClevelColPermsDescriptor(String,DataDictionary)
org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(DataDictionary,String,boolean)
org.apache.derby.iapi.sql.dictionary.StatementTablePermission.oneAuthHasPermissionOnTable(DataDictionary,String,boolean)
org.apache.derby.iapi.sql.dictionary.TablePermsDescriptor.TablePermsDescriptor(DataDictionary,String,String,UUID)
org.apache.derby.iapi.sql.dictionary.TablePermsDescriptor.TablePermsDescriptor(DataDictionary,String,String,UUID,String,String,String,String,String,String)
org.apache.derby.iapi.sql.dictionary.TablePermsDescriptor.TablePermsDescriptor(DataDictionary,UUID)
org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo.getNewInstance()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addRemovePermissionsDescriptor(boolean,PermissionsDescriptor,String,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getPermissions(PermissionsDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedColPermsDescriptor(ColPermsDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedPermissionsDescriptor(int,int,PermissionsDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedRoutinePermsDescriptor(RoutinePermsDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedTablePermsDescriptor(TablePermsDescriptor)
org.apache.derby.impl.sql.catalog.DDColumnPermissionsDependableFinder.DDColumnPermissionsDependableFinder(int)
org.apache.derby.impl.sql.catalog.DDColumnPermissionsDependableFinder.DDColumnPermissionsDependableFinder(int,String)
org.apache.derby.impl.sql.catalog.DDColumnPermissionsDependableFinder.getColumnPrivType()
org.apache.derby.impl.sql.catalog.DDColumnPermissionsDependableFinder.getDependable(DataDictionary,UUID)
org.apache.derby.impl.sql.catalog.DDColumnPermissionsDependableFinder.readExternal(ObjectInput)
org.apache.derby.impl.sql.catalog.DDColumnPermissionsDependableFinder.writeExternal(ObjectOutput)
org.apache.derby.impl.sql.catalog.DDdependableFinder.getSQLObjectName(DataDictionary,UUID)
org.apache.derby.impl.sql.catalog.DDdependableFinder.getSQLObjectType()
org.apache.derby.impl.sql.catalog.SYSCOLPERMSRowFactory.buildEmptyIndexRow(int,RowLocation)
org.apache.derby.impl.sql.catalog.SYSCOLPERMSRowFactory.buildIndexKeyRow(int,PermissionsDescriptor)
org.apache.derby.impl.sql.catalog.SYSROUTINEPERMSRowFactory.buildColumnList()
org.apache.derby.impl.sql.catalog.SYSROUTINEPERMSRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)
org.apache.derby.impl.sql.catalog.SYSROUTINEPERMSRowFactory.makeRow(TupleDescriptor,TupleDescriptor)
org.apache.derby.impl.sql.catalog.SYSTABLEPERMSRowFactory.removeOnePermission(ExecRow,boolean[],int,String)
org.apache.derby.impl.sql.compile.CreateSchemaNode.bind()
org.apache.derby.impl.sql.compile.DDLStatementNode.getSchemaDescriptor(boolean)
org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode.bind(DDLStatementNode,DataDictionary)
org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(DataDictionary,FromList)
org.apache.derby.impl.sql.compile.FromList.bindColumnReference(ColumnReference)
org.apache.derby.impl.sql.compile.FromSubquery.disablePrivilegeCollection()
org.apache.derby.impl.sql.compile.FromSubquery.getAllResultColumns(TableName)
org.apache.derby.impl.sql.compile.JavaToSQLValueNode.getJavaValueNode()
org.apache.derby.impl.sql.compile.PrivilegeNode.bind(HashMap)
org.apache.derby.impl.sql.compile.QueryTreeNode.isPrivilegeCollectionRequired()
org.apache.derby.impl.sql.compile.QueryTreeNode.isSessionSchema(String)
org.apache.derby.impl.sql.compile.ResultColumn.bindResultColumnByName(TableDescriptor,int)
org.apache.derby.impl.sql.compile.ResultColumnList.markUpdatableByCursor()
org.apache.derby.impl.sql.compile.ResultColumn.updatableByCursor()
org.apache.derby.impl.sql.compile.ResultSetNode.getFromList()
org.apache.derby.impl.sql.compile.SelectNode.referencesTarget(String,boolean)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpression(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.execute.CreateConstraintConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.execute.DDLConstantAction.constructToString(String,String)
org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID)
org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)
org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List)
org.apache.derbyTesting.functionTests.util.ProcedureTest.insertInBig(Connection,String,String,String,String)
org.apache.derbyTesting.functionTests.util.ProcedureTest.insertRow(int,String)
org.apache.derbyTesting.functionTests.util.ProcedureTest.selectFromSpecificSchema(int)
