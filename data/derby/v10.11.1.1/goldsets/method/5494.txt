org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatement(boolean)
org.apache.derby.iapi.store.access.TransactionController.startNestedUserTransaction(boolean)
org.apache.derby.iapi.store.access.TransactionController.startNestedUserTransaction(boolean,boolean)
org.apache.derby.iapi.store.raw.RawStoreFactory.startNestedUpdateUserTransaction(ContextManager,String)
org.apache.derby.iapi.store.raw.RawStoreFactory.startNestedUpdateUserTransaction(ContextManager,String,boolean)
org.apache.derby.iapi.store.raw.xact.TransactionFactory.startNestedUpdateUserTransaction(RawStoreFactory,ContextManager,String)
org.apache.derby.iapi.store.raw.xact.TransactionFactory.startNestedUpdateUserTransaction(RawStoreFactory,ContextManager,String,boolean)
org.apache.derby.impl.sql.catalog.SequenceUpdater.setIdentity(Object)
org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDisk(Long,Long)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.beginNestedTransaction(boolean)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.defragmentRows(TransactionController)
org.apache.derby.impl.sql.execute.DDLConstantAction.executeCAPreferSubTrans(CreateSchemaConstantAction,TransactionController,Activation)
org.apache.derby.impl.sql.execute.InsertResultSet.getSetAutoincrementValue(int,long)
org.apache.derby.impl.store.access.heap.Heap.purgeConglomerate(TransactionManager,Transaction)
org.apache.derby.impl.storeless.NoOpTransaction.findContainerid(long)
org.apache.derby.impl.store.raw.RawStore.findUserTransaction(ContextManager,String)
org.apache.derby.impl.store.raw.xact.InternalXact.InternalXact(XactFactory,LogFactory,DataFactory,DataValueFactory)
org.apache.derby.impl.store.raw.xact.XactFactory.flushLogOnCommit(String)
org.apache.derby.impl.store.raw.xact.XactFactory.makeNewUUID()
org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransaction(RawStoreFactory,ContextManager,boolean,CompatibilitySpace,String,String,boolean)
org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransaction(RawStoreFactory,ContextManager,boolean,CompatibilitySpace,String,String,boolean,boolean)
org.apache.derby.impl.store.raw.xact.XactFactory.startGlobalTransaction(RawStoreFactory,ContextManager,int,byte[],byte[])
org.apache.derby.impl.store.raw.xact.XactFactory.startNestedReadOnlyUserTransaction(RawStoreFactory,CompatibilitySpace,ContextManager,String)
org.apache.derby.impl.store.raw.xact.XactFactory.startNestedTopTransaction(RawStoreFactory,ContextManager)
org.apache.derby.impl.store.raw.xact.XactFactory.startTransaction(RawStoreFactory,ContextManager,String)
org.apache.derby.impl.store.raw.xact.Xact.prepareCommit(int)
org.apache.derby.impl.store.raw.xact.Xact.Xact(XactFactory,LogFactory,DataFactory,DataValueFactory,boolean,CompatibilitySpace)
org.apache.derby.impl.store.raw.xact.Xact.Xact(XactFactory,LogFactory,DataFactory,DataValueFactory,boolean,CompatibilitySpace,boolean)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.assertNextValue(Connection,String,String,int)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.getCurrentValue(Connection,String,String)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.getCurrentValue(String,String)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.postCrashActions()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.preCrashActions()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_10_5398()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_13_5494()
org.apache.derbyTesting.unitTests.store.T_AccessFactory.nestedUserTransaction(TransactionController)
