org.apache.derby.database.Database.backupAndEnableLogArchiveMode(String,boolean,boolean)
org.apache.derby.database.Database.failover(String)
org.apache.derby.database.Database.isInSlaveMode()
org.apache.derby.iapi.services.replication.slave.SlaveFactory.startSlave(RawStoreFactory,LogFactory)
org.apache.derby.iapi.store.access.AccessFactory.stopReplicationMaster()
org.apache.derby.impl.db.BasicDatabase.freeze()
org.apache.derby.impl.db.BasicDatabase.stopReplicationSlave()
org.apache.derby.impl.db.SlaveDatabase.boot(boolean,Properties)
org.apache.derby.impl.db.SlaveDatabase.getAuthenticationService()
org.apache.derby.impl.db.SlaveDatabase.handleShutdown()
org.apache.derby.impl.db.SlaveDatabase.setSlaveFactory(SlaveFactory)
org.apache.derby.impl.db.SlaveDatabase.setupConnection(ContextManager,String,String,String)
org.apache.derby.impl.db.SlaveDatabase.SlaveDatabase()
org.apache.derby.impl.db.SlaveDatabase.stop()
org.apache.derby.impl.db.SlaveDatabase.verifyShutdownSlave()
org.apache.derby.impl.jdbc.EmbedConnection.checkDatabaseBooted(Database,String,String)
org.apache.derby.impl.jdbc.EmbedConnection.createBoot(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.EmbedConnection(InternalDriver,String,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.getReplicationOperation(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.handleDBNotFound()
org.apache.derby.impl.jdbc.EmbedConnection.handleFailoverMaster(TransactionResourceImpl)
org.apache.derby.impl.jdbc.EmbedConnection.handleFailoverSlave(Database)
org.apache.derby.impl.jdbc.EmbedConnection.handleFailover(TransactionResourceImpl,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.handleStartReplicationMaster(TransactionResourceImpl,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.handleStopReplicationMaster(TransactionResourceImpl,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.handleStopReplicationSlave(Database,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.handleStopReplicationSlave(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.internalStopReplicationSlave(Database,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.internalStopReplicationSlave(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isHardUpgradeBoot(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isInternalShutdownSlaveDatabase(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isReplicationFailover(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isStartReplicationMasterBoot(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isStartReplicationSlaveBoot(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isStopReplicationMasterBoot(Properties)
org.apache.derby.impl.jdbc.EmbedConnection.isStopReplicationSlaveBoot(Properties)
org.apache.derby.impl.services.replication.master.MasterController.startFailover()
org.apache.derby.impl.services.replication.master.MasterController.stopMaster()
org.apache.derby.impl.services.replication.net.ReplicationMessageReceive.createServerSocket()
org.apache.derby.impl.services.replication.net.ReplicationMessageReceive.tearDown()
org.apache.derby.impl.services.replication.net.SocketConnection.writeMessage(Object)
org.apache.derby.impl.services.replication.slave.SlaveController.doFailover()
org.apache.derby.impl.services.replication.slave.SlaveController.failover()
org.apache.derby.impl.services.replication.slave.SlaveController.handleDisconnect(EOFException)
org.apache.derby.impl.services.replication.slave.SlaveController.handleDisconnect(Exception)
org.apache.derby.impl.services.replication.slave.SlaveController.handleFatalException(Exception)
org.apache.derby.impl.services.replication.slave.SlaveController.setupConnection()
org.apache.derby.impl.services.replication.slave.SlaveController.SlaveLogReceiverThread.run()
org.apache.derby.impl.services.replication.slave.SlaveController.stopSlave()
org.apache.derby.impl.services.replication.slave.SlaveController.stopSlave(boolean)
org.apache.derby.impl.services.replication.slave.SlaveController.teardownNetwork()
org.apache.derby.impl.store.access.RAMAccessManager.startReplicationMaster(String,String,int,String)
org.apache.derby.impl.store.raw.log.LogToFile.failoverSlave()
org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(long)
org.apache.derby.impl.store.raw.log.LogToFile.recover(RawStoreFactory,DataFactory,TransactionFactory)
org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationMasterRole()
org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationSlaveMode()
org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationSlaveRole()
org.apache.derby.impl.store.raw.log.ReadOnly.startReplicationMasterRole(MasterFactory)
org.apache.derby.impl.store.raw.RawStore.startReplicationMaster(String,int,String)
