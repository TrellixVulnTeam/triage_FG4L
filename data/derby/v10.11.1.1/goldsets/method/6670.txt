org.apache.derby.iapi.sql.conn.LanguageConnectionContext.checkIntegrity()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.forgetDeferredConstraintsData(long)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getDeferredHashTables()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.isEffectivelyDeferred(SQLSessionContext,long)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setConstraintDeferred(Activation,ConstraintDescriptor,boolean)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setConstraintDeferred(Activation,long,boolean)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setConstraintDeferred(Activation,long,UUID,boolean)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setReferencedColumnMap(TableDescriptor,FormatableBitSet)
org.apache.derby.iapi.sql.conn.SQLSessionContext.getCheckConstraintModes()
org.apache.derby.iapi.sql.conn.SQLSessionContext.getConstraintModes()
org.apache.derby.iapi.sql.conn.SQLSessionContext.getUniquePKConstraintModes()
org.apache.derby.iapi.sql.conn.SQLSessionContext.isDeferred(long)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setCheckConstraintModes(HashMap<UUID,Boolean>,UUID,Boolean)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setConstraintModes(HashMap<Long,Boolean>,Long,Boolean)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setConstraintModes(HashMap<UUID,Boolean>,UUID,Boolean)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setDeferred(long,boolean)
org.apache.derby.iapi.sql.conn.SQLSessionContext.setDeferred(UUID,boolean)
org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.drop(LanguageConnectionContext,boolean)
org.apache.derby.iapi.sql.execute.ResultSetFactory.getProjectRestrictResultSet(NoPutResultSet,GeneratedMethod,GeneratedMethod,int,GeneratedMethod,int,int,boolean,boolean,boolean,long,double,double)
org.apache.derby.iapi.sql.execute.ResultSetFactory.getProjectRestrictResultSet(NoPutResultSet,GeneratedMethod,GeneratedMethod,int,GeneratedMethod,int,int,boolean,boolean,boolean,String,double,double)
org.apache.derby.impl.sql.compile.DMLModStatementNode.generateFKInfo(ConstraintDescriptorList,DataDictionary,TableDescriptor,FormatableBitSet)
org.apache.derby.impl.sql.compile.FromBaseTable.genProjectRestrict(int)
org.apache.derby.impl.sql.compile.FromBaseTable.isValidatingCheckConstraint()
org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ExpressionClassBuilder,MethodBuilder,boolean)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.pushOffsetFetchFirst(ValueNode,ValueNode,boolean)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.setValidatingCheckConstraints(long)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.setValidatingCheckConstraints(String)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.compareConstraintModes(SQLSessionContext,SQLSessionContext)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.isEffectivelyDeferred(SQLSessionContext,UUID)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setDeferredAll(Activation,boolean)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean,boolean,String)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.validateDeferredConstraint(ConstraintDescriptor)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.validateDeferredConstraint(long,UUID)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.validateDeferredConstraints(boolean)
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.isDeferred(UUID)
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.resetConstraintModes()
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.setDeferredAll(Boolean)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateIndex(long,DataDictionary,int,long[])
org.apache.derby.impl.sql.execute.ConstraintConstantAction.validateConstraint(String,String,UUID,TableDescriptor,LanguageConnectionContext,boolean,boolean)
org.apache.derby.impl.sql.execute.CreateConstraintConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.associateDuplicatesWithConglomerate(LanguageConnectionContext,long)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.CheckInfo.getCulprints()
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.CheckInfo.validateCheck(LanguageConnectionContext,long,UUID,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.CheckInfo.validateCheck(LanguageConnectionContext,UUID,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.compressOrTruncate(LanguageConnectionContext,UUID,String)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.ForeignKeyInfo(BackingStoreHashtable,UUID,long,String,String)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.ForeignKeyInfo(BackingStoreHashtable,UUID,String,String)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.getFkId()
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.getRtCID()
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.updateRtCID(long)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.validateForeignKey(LanguageConnectionContext,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ForeignKeyInfo.validateForeignKey(LanguageConnectionContext,long,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.getDeferredCheckConstraintLocations(Activation,long)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.getDeferredCheckConstraintLocations(Activation,UUID)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.makeDeferredHashTable(TransactionController,int)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.rememberCheckViolations(LanguageConnectionContext,long,String,String,BackingStoreHashtable,List<UUID>,UUID,RowLocation,CheckInfo[])
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.rememberCheckViolations(LanguageConnectionContext,UUID,String,String,BackingStoreHashtable,List<UUID>,UUID,RowLocation,CheckInfo[])
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.rememberDuplicate(LanguageConnectionContext,BackingStoreHashtable,long,DataValueDescriptor[])
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.rememberDuplicate(LanguageConnectionContext,BackingStoreHashtable,UUID,DataValueDescriptor[])
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.rememberFKViolation(LanguageConnectionContext,BackingStoreHashtable,long,long,UUID,DataValueDescriptor[],String,String)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.rememberFKViolation(LanguageConnectionContext,BackingStoreHashtable,UUID,DataValueDescriptor[],String,String)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.UniquePkInfo.UniquePkInfo(BackingStoreHashtable)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.UniquePkInfo.UniquePkInfo(BackingStoreHashtable,UUID)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.UniquePkInfo.validateUniquePK(LanguageConnectionContext,BackingStoreHashtable,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.UniquePkInfo.validateUniquePK(LanguageConnectionContext,long,BackingStoreHashtable,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.updateIndexCID(LanguageConnectionContext,long,long)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.updateIndexCIDs(LanguageConnectionContext,boolean,long,long)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.updateKey(LanguageConnectionContext,long,long)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ValidationInfo.possiblyValidateOnReturn(LanguageConnectionContext,SQLSessionContext,SQLSessionContext)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ValidationInfo.possiblyValidateOnReturn(Map.Entry<Long,ValidationInfo>,Long,ValidationInfo,LanguageConnectionContext,SQLSessionContext,SQLSessionContext)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ValidationInfo.validateConstraint(LanguageConnectionContext,long,UUID,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ValidationInfo.validateConstraint(LanguageConnectionContext,UUID,boolean)
org.apache.derby.impl.sql.execute.DeferredConstraintsMemory.ValidationInfo.ValidationInfo(BackingStoreHashtable)
org.apache.derby.impl.sql.execute.FKInfo.FKInfo(String[],String,String,int,int,UUID,long,boolean,UUID[],long[],boolean[],int[],RowLocation,int[],boolean[],UUID[])
org.apache.derby.impl.sql.execute.FKInfo.FKInfo(String[],String,String,int,int,UUID,long,UUID,boolean,UUID[],long[],boolean[],int[],RowLocation,int[],boolean[],UUID[])
org.apache.derby.impl.sql.execute.FKInfo.readExternal(ObjectInput)
org.apache.derby.impl.sql.execute.FKInfo.writeExternal(ObjectOutput)
org.apache.derby.impl.sql.execute.ForeignKeyRIChecker.doCheck(Activation,ExecRow,boolean,int)
org.apache.derby.impl.sql.execute.IndexChanger.doDeferredInsert()
org.apache.derby.impl.sql.execute.IndexChanger.getUniqueConstraintId()
org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(ExecIndexRow)
org.apache.derby.impl.sql.execute.IndexConstantAction.setConstraintID(UUID)
org.apache.derby.impl.sql.execute.IndexConstantAction.setIndexName(String)
org.apache.derby.impl.sql.execute.InsertResultSet.emptyIndexes(long,InsertConstantAction,TableDescriptor,DataDictionary,ExecRow)
org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(LanguageConnectionContext,boolean)
org.apache.derby.impl.sql.execute.InsertResultSet.offendingRowLocation(RowLocation,long)
org.apache.derby.impl.sql.execute.InsertResultSet.setUpAllSorts(ExecRow,RowLocation)
org.apache.derby.impl.sql.execute.InsertResultSet.updateAllIndexes(long,InsertConstantAction,TableDescriptor,DataDictionary,ExecRow)
org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore()
org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.ProjectRestrictResultSet(NoPutResultSet,Activation,GeneratedMethod,GeneratedMethod,int,GeneratedMethod,int,int,boolean,boolean,boolean,long,double,double)
org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.ProjectRestrictResultSet(NoPutResultSet,Activation,GeneratedMethod,GeneratedMethod,int,GeneratedMethod,int,int,boolean,boolean,boolean,UUID,double,double)
org.apache.derby.impl.sql.execute.RIBulkChecker.failure(DataValueDescriptor[])
org.apache.derby.impl.sql.execute.UniqueIndexSortObserver.rememberDuplicate(DataValueDescriptor[])
org.apache.derby.impl.sql.execute.UniqueIndexSortObserver.UniqueIndexSortObserver(LanguageConnectionContext,UUID,boolean,boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UniqueIndexSortObserver.UniqueIndexSortObserver(TransactionController,LanguageConnectionContext,long,boolean,boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UniqueWithDuplicateNullsIndexSortObserver.UniqueWithDuplicateNullsIndexSortObserver(LanguageConnectionContext,UUID,boolean,boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UniqueWithDuplicateNullsIndexSortObserver.UniqueWithDuplicateNullsIndexSortObserver(TransactionController,LanguageConnectionContext,long,boolean,boolean,boolean,String,ExecRow,boolean,String)
org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows()
org.apache.derby.impl.sql.execute.UpdateResultSet.updateDeferredRows()
org.apache.derby.impl.sql.execute.ValidateCheckConstraintResultSet.getNextRowCore()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.dontThrow(Statement,String)
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testDerby6670_a()
org.apache.derbyTesting.functionTests.tests.lang.ConstraintCharacteristicsTest.testDerby6670_b()
