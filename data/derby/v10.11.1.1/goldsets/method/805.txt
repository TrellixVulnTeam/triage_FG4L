org.apache.derby.iapi.sql.compile.Optimizable.addOrLoadBestPlanMapping(boolean,Object)
org.apache.derby.iapi.sql.compile.Optimizable.addOrLoadBestPlanMapping(boolean,Optimizer)
org.apache.derby.iapi.sql.compile.Optimizable.convertAbsoluteToRelativeColumnPosition(int)
org.apache.derby.iapi.sql.compile.Optimizable.rememberAsBest(int)
org.apache.derby.impl.sql.compile.BaseTableNumbersVisitor.BaseTableNumbersVisitor(JBitSet)
org.apache.derby.impl.sql.compile.BaseTableNumbersVisitor.setTableMap(JBitSet)
org.apache.derby.impl.sql.compile.BaseTableNumbersVisitor.skipChildren(Visitable)
org.apache.derby.impl.sql.compile.BaseTableNumbersVisitor.stopTraversal()
org.apache.derby.impl.sql.compile.BaseTableNumbersVisitor.visit(Visitable)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.genSQLJavaSQLTree()
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getScopedOperand(int,JBitSet,ResultSetNode)
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.getScopedOperand(int,JBitSet,ResultSetNode,int[])
org.apache.derby.impl.sql.compile.ColumnReference.copyFields(ColumnReference)
org.apache.derby.impl.sql.compile.ColumnReference.generateExpression(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.ColumnReference.getSourceResultSet(int[])
org.apache.derby.impl.sql.compile.ColumnReference.getTypeServices()
org.apache.derby.impl.sql.compile.ColumnReference.hasBeenRemapped()
org.apache.derby.impl.sql.compile.ColumnReference.init(Object,Object)
org.apache.derby.impl.sql.compile.ColumnReference.init(Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.ColumnReference.isScoped()
org.apache.derby.impl.sql.compile.ColumnReference.markAsScoped()
org.apache.derby.impl.sql.compile.ColumnReference.pointsToBaseTable()
org.apache.derby.impl.sql.compile.ColumnReference.remapColumnReferences()
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.getColumnName()
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.getColumnNumber()
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.getSource()
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.getTableNumber()
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.RemapInfo(int,int,String,ResultColumn)
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.setColName(String)
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.setColNumber(int)
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.setSource(ResultColumn)
org.apache.derby.impl.sql.compile.ColumnReference.RemapInfo.setTableNumber(int)
org.apache.derby.impl.sql.compile.ColumnReference.setColumnNumber(int)
org.apache.derby.impl.sql.compile.ColumnReference.unRemapColumnReferences()
org.apache.derby.impl.sql.compile.FromTable.optimizeIt(Optimizer,OptimizablePredicateList,CostEstimate,RowOrdering)
org.apache.derby.impl.sql.compile.FromTable.rememberAsBest(int,Optimizer)
org.apache.derby.impl.sql.compile.OptimizerImpl.addOrLoadBestPlanMappings(boolean,Object)
org.apache.derby.impl.sql.compile.OptimizerImpl.addOrLoadBestPlanMappings(boolean,Optimizer)
org.apache.derby.impl.sql.compile.OptimizerImpl.addPredicatesToList(PredicateList)
org.apache.derby.impl.sql.compile.OptimizerImpl.addScopedPredicatesToList(PredicateList)
org.apache.derby.impl.sql.compile.OptimizerImpl.considerCost(Optimizable,OptimizablePredicateList,CostEstimate,CostEstimate)
org.apache.derby.impl.sql.compile.OptimizerImpl.getMaxMemoryPerTable()
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextDecoratedPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.OptimizerImpl(OptimizableList,OptimizablePredicateList,DataDictionary,boolean,boolean,boolean,int,JoinStrategy[],int,RequiredRowOrdering,int)
org.apache.derby.impl.sql.compile.OptimizerImpl.prepForNextRound()
org.apache.derby.impl.sql.compile.OptimizerImpl.rememberBestCost(CostEstimate,int)
org.apache.derby.impl.sql.compile.OptimizerImpl.rewindJoinOrder()
org.apache.derby.impl.sql.compile.OptimizerImpl.useStatistics()
org.apache.derby.impl.sql.compile.Predicate.binaryRelOpColRefsToString()
org.apache.derby.impl.sql.compile.Predicate.getPredScopedForResultSet(JBitSet,ResultSetNode)
org.apache.derby.impl.sql.compile.Predicate.getPredScopedForResultSet(JBitSet,ResultSetNode,int[])
org.apache.derby.impl.sql.compile.Predicate.getPushable()
org.apache.derby.impl.sql.compile.Predicate.getSearchClauseHT()
org.apache.derby.impl.sql.compile.Predicate.isJoinPredicate()
org.apache.derby.impl.sql.compile.Predicate.isScopedForPush()
org.apache.derby.impl.sql.compile.Predicate.isScopedToSourceResultSet()
org.apache.derby.impl.sql.compile.PredicateList.hasOptimizableEquijoin(Optimizable,int)
org.apache.derby.impl.sql.compile.Predicate.markAsScopedForPush()
org.apache.derby.impl.sql.compile.Predicate.pushableToSubqueries()
org.apache.derby.impl.sql.compile.Predicate.remapScopedPred()
org.apache.derby.impl.sql.compile.Predicate.setPushable(boolean)
org.apache.derby.impl.sql.compile.Predicate.toString()
org.apache.derby.impl.sql.compile.ProjectRestrictNode.feasibleJoinStrategy(OptimizablePredicateList,Optimizer)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.modifyAccessPath(JBitSet)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.pushOptPredicate(OptimizablePredicate)
org.apache.derby.impl.sql.compile.ResultColumn.getBaseColumnNode()
org.apache.derby.impl.sql.compile.ResultColumnList.getResultColumn(int)
org.apache.derby.impl.sql.compile.ResultColumnList.getResultColumn(int,ResultSetNode,int[])
org.apache.derby.impl.sql.compile.ResultSetNode.getOptimizerImpl()
org.apache.derby.impl.sql.compile.ResultSetNode.getOptimizer(OptimizableList,OptimizablePredicateList,DataDictionary,RequiredRowOrdering)
org.apache.derby.impl.sql.compile.ResultSetNode.makeResultDescriptors(ExecutionContext)
org.apache.derby.impl.sql.compile.ResultSetNode.modifyAccessPaths()
org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths(PredicateList)
org.apache.derby.impl.sql.compile.SelectNode.optimize(DataDictionary,PredicateList,double)
org.apache.derby.impl.sql.compile.SetOperatorNode.getLeftOptPredicateList()
org.apache.derby.impl.sql.compile.SetOperatorNode.getOperatorName()
org.apache.derby.impl.sql.compile.SetOperatorNode.getRightOptPredicateList()
org.apache.derby.impl.sql.compile.SetOperatorNode.modifyAccessPath(JBitSet,PredicateList)
org.apache.derby.impl.sql.compile.SetOperatorNode.pullOptPredicates(OptimizablePredicateList)
org.apache.derby.impl.sql.compile.SingleChildResultSetNode.initAccessPaths(Optimizer)
org.apache.derby.impl.sql.compile.TableOperatorNode.optimizeSource(Optimizer,ResultSetNode,PredicateList,CostEstimate)
org.apache.derby.impl.sql.compile.TableOperatorNode.verifyProperties(DataDictionary)
