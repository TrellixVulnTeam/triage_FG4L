org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newPermDescriptor(UUID,String,UUID,String,String,String,boolean)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newRoleGrantDescriptor(UUID,String,String,String,boolean,boolean)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newSequenceDescriptor(SchemaDescriptor,UUID,String,DataTypeDescriptor,long,long,long,long,long,boolean)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newSequenceDescriptor(SchemaDescriptor,UUID,String,DataTypeDescriptor,Long,long,long,long,long,boolean)
org.apache.derby.iapi.sql.dictionary.DataDictionary.dropAllPermDescriptors(UUID,TransactionController)
org.apache.derby.iapi.sql.dictionary.DataDictionary.dropSequenceDescriptor(SequenceDescriptor,TransactionController)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getCurrentValueAndAdvance(String,NumberDataValue)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getPermissions(UUID)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getPermissions(UUID,String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getSequenceDescriptor(SchemaDescriptor,String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getSequenceDescriptor(UUID)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getStatisticsDescriptors(TableDescriptor)
org.apache.derby.iapi.sql.dictionary.DataDictionary.setAutoincrementValue(TransactionController,UUID,String,long,boolean)
org.apache.derby.iapi.sql.dictionary.DataDictionary.updateMetadataSPSes(TransactionController)
org.apache.derby.iapi.sql.dictionary.PermDescriptor.checkOwner(String)
org.apache.derby.iapi.sql.dictionary.PermDescriptor.equals(Object)
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getCatalogNumber()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getClassType()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getDependableFinder()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getObjectName()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getObjectType()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getPermission()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.getPermObjectId()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.hashCode()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.isGrantable()
org.apache.derby.iapi.sql.dictionary.PermDescriptor.PermDescriptor(DataDictionary,UUID)
org.apache.derby.iapi.sql.dictionary.PermDescriptor.PermDescriptor(DataDictionary,UUID,String,UUID,String,String,String,boolean)
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.canCycle()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.drop(LanguageConnectionContext)
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getCurrentValue()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getDataType()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getDescriptorName()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getDescriptorType()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getIncrement()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getMaximumValue()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getMinimumValue()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getObjectID()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getSchemaDescriptor()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getSchemaId()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getSequenceName()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getSequenceUUID()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getStartValue()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.getUUID()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.isCycle()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.isPersistent()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.isValid()
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.makeInvalid(int,LanguageConnectionContext)
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.prepareToInvalidate(Provider,int,LanguageConnectionContext)
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.SequenceDescriptor(DataDictionary,SchemaDescriptor,UUID,String,DataTypeDescriptor,long,long,long,long,long,boolean)
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.SequenceDescriptor(DataDictionary,SchemaDescriptor,UUID,String,DataTypeDescriptor,Long,long,long,long,long,boolean)
org.apache.derby.iapi.sql.dictionary.SequenceDescriptor.toString()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.boot(boolean,Properties)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearCaches()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.computeRowLocation(TransactionController,TableDescriptor,String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.computeSequenceRowLocation(TransactionController,String,RowLocation[],SequenceDescriptor[])
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getNonCoreTIByNumber(int)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getRowLocationTemplate(LanguageConnectionContext,TableDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedPermDescriptor(PermDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.isSchemaEmpty(SchemaDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.newCacheable(CacheManager)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateCurrentSequenceValue(TransactionController,RowLocation,boolean,Long,Long)
org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)
org.apache.derby.impl.sql.catalog.SequenceGenerator.advanceValue(long[])
org.apache.derby.impl.sql.catalog.SequenceGenerator.allocateNewRange(long,long)
org.apache.derby.impl.sql.catalog.SequenceGenerator.computeNewAllocation(long,long[])
org.apache.derby.impl.sql.catalog.SequenceGenerator.computePreAllocationCount()
org.apache.derby.impl.sql.catalog.SequenceGenerator.computeRemainingValues(long)
org.apache.derby.impl.sql.catalog.SequenceGenerator.getCurrentValueAndAdvance()
org.apache.derby.impl.sql.catalog.SequenceGenerator.getLCC()
org.apache.derby.impl.sql.catalog.SequenceGenerator.getName()
org.apache.derby.impl.sql.catalog.SequenceGenerator.markExhausted(long[])
org.apache.derby.impl.sql.catalog.SequenceGenerator.overflowed(long,long)
org.apache.derby.impl.sql.catalog.SequenceGenerator.peekAtCurrentValue()
org.apache.derby.impl.sql.catalog.SequenceGenerator.SequenceGenerator(Long,boolean,long,long,long,long,String)
org.apache.derby.impl.sql.catalog.SequenceGenerator.unimplementedFeature()
org.apache.derby.impl.sql.catalog.SequenceUpdater.clean(boolean)
org.apache.derby.impl.sql.catalog.SequenceUpdater.clearIdentity()
org.apache.derby.impl.sql.catalog.SequenceUpdater.createIdentity(Object,Object)
org.apache.derby.impl.sql.catalog.SequenceUpdater.createSequenceGenerator(TransactionController)
org.apache.derby.impl.sql.catalog.SequenceUpdater.getCurrentValueAndAdvance(NumberDataValue)
org.apache.derby.impl.sql.catalog.SequenceUpdater.getIdentity()
org.apache.derby.impl.sql.catalog.SequenceUpdater.isDirty()
org.apache.derby.impl.sql.catalog.SequenceUpdater.SequenceUpdater()
org.apache.derby.impl.sql.catalog.SequenceUpdater.SequenceUpdater(DataDictionaryImpl)
org.apache.derby.impl.sql.catalog.SequenceUpdater.setIdentity(Object)
org.apache.derby.impl.sql.catalog.SequenceUpdater.SyssequenceUpdater.SyssequenceUpdater()
org.apache.derby.impl.sql.catalog.SequenceUpdater.SyssequenceUpdater.SyssequenceUpdater(DataDictionaryImpl)
org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDisk(Long,Long)
org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDisk(TransactionController,Long,Long,boolean)
org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory.buildColumnList()
org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory.buildIndexKeyRow(int,PermissionsDescriptor)
org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory.orPermissions(ExecRow,PermissionsDescriptor,boolean[])
org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory.removePermissions(ExecRow,PermissionsDescriptor,boolean[])
org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory.setUUIDOfThePassedDescriptor(ExecRow,PermissionsDescriptor)
org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory.SYSPERMSRowFactory(UUIDFactory,ExecutionFactory,DataValueFactory)
org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)
org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory.makeRow(TupleDescriptor,TupleDescriptor)
org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory.SYSSEQUENCESRowFactory(UUIDFactory,ExecutionFactory,DataValueFactory)
org.apache.derby.impl.sql.compile.CreateSequenceNode.bindStatement()
org.apache.derby.impl.sql.compile.CreateSequenceNode.init(Object)
org.apache.derby.impl.sql.compile.CreateSequenceNode.init(Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.CreateSequenceNode.makeConstantAction()
org.apache.derby.impl.sql.compile.CreateSequenceNode.statementToString()
org.apache.derby.impl.sql.compile.NextSequenceNode.bindExpression(FromList,SubqueryList,Vector,boolean)
org.apache.derby.impl.sql.compile.NextSequenceNode.generateConstant(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.NextSequenceNode.generateExpression(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.NextSequenceNode.isEquivalent(ValueNode)
org.apache.derby.impl.sql.compile.NodeFactoryImpl.nodeName(int)
org.apache.derby.impl.sql.compile.PrivilegeNode.bind(HashMap,List,boolean)
org.apache.derby.impl.sql.compile.PrivilegeNode.init(Object,Object,Object)
org.apache.derby.impl.sql.compile.PrivilegeNode.makePrivilegeInfo()
org.apache.derby.impl.sql.depend.BasicDependencyManager.getActionString(int)
org.apache.derby.impl.sql.execute.BaseActivation.getCurrentValueAndAdvance(String,int)
org.apache.derby.impl.sql.execute.BaseActivation.getSetAutoincrementValue(int,long)
org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.CreateSequenceConstantAction(String,String)
org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.CreateSequenceConstantAction(String,String,DataTypeDescriptor,long,long,long,long,boolean)
org.apache.derby.impl.sql.execute.CreateSequenceConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[])
org.apache.derby.impl.sql.execute.DropSequenceConstantAction.DropSequenceConstantAction(SchemaDescriptor,String)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateSequenceConstantAction(TableName)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateSequenceConstantAction(TableName,DataTypeDescriptor,long,long,long,long,boolean)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getDropRoleConstantAction(String)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getDropSequenceConstantAction(SchemaDescriptor,String)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getSetRoleConstantAction(String,int)
org.apache.derby.impl.storeless.EmptyDictionary.computeAutoincRowLocations(TransactionController,TableDescriptor)
org.apache.derby.impl.tools.dblook.DB_Alias.doProceduresFunctionsAndUDTs(Connection)
org.apache.derby.impl.tools.dblook.DB_Alias.doProceduresFunctionsAndUDTs(Connection,boolean)
org.apache.derby.impl.tools.dblook.DB_GrantRevoke.doAuthorizations(Connection)
org.apache.derby.impl.tools.dblook.DB_GrantRevoke.doAuthorizations(Connection,boolean)
org.apache.derby.impl.tools.dblook.DB_GrantRevoke.generateSequencePrivs(ResultSet)
org.apache.derby.impl.tools.dblook.DB_GrantRevoke.generateUDTPrivs(ResultSet)
org.apache.derby.impl.tools.dblook.DB_GrantRevoke.genericPrivStatement(String,String,String,String)
org.apache.derby.impl.tools.dblook.DB_Sequence.createSequenceString(String,String,long,long,long,long,String)
org.apache.derby.impl.tools.dblook.DB_Sequence.doSequences(Connection)
org.apache.derby.impl.tools.dblook.DB_Sequence.stripNotNull(String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DMDBugsTest.testDerby3000()
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropConstraint()
org.apache.derbyTesting.functionTests.tests.lang.CollationTest.commonTestingForTerritoryBasedDB(Statement)
org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.verifyRestrictedDrop(Connection,String,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.verifyRevokePrivilege(Connection,Connection,String,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeDDLTest.testGrantRevokeDDL2()
org.apache.derbyTesting.functionTests.tests.lang.PrimaryKeyTest.testCatalog()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.assertLongEquals(Long,Long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.getCurrentValue(String,String)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.getScalarInteger(PreparedStatement)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.getScalarLong(PreparedStatement)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.SequenceGeneratorTest(String)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.suite()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_01_basic()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_02_boundary()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_03_nonCycling()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_04_reboot()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_05_concurrency()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_06_bigStepSize()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.test_07_dropSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.T_SequenceUpdater.getValueOnDisk()
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.T_SequenceUpdater.T_SequenceUpdater(Long,boolean,long,long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBigStep(long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBoundaries(long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBoundaries(long,long,long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBumping(Connection,String,String,int,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBumping(long,boolean,long,long,long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBumping(T_SequenceUpdater,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetBump(SGVetter,T_SequenceUpdater)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetLowerBoundary(long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetNonCycling(long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetNonCycling(long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequenceGeneratorTest.vetUpperBoundary(long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SequencePermsTest.SequencePermsTest(String)
org.apache.derbyTesting.functionTests.tests.lang.SequencePermsTest.test_001_basicGrant()
org.apache.derbyTesting.functionTests.tests.lang.SequencePermsTest.test_002_basicRevoke()
org.apache.derbyTesting.functionTests.tests.lang.SequencePermsTest.test_003_dropSchema()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.goodSequence(Connection,String,String,String,long,long,long,long,boolean)
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.SequenceTest(String)
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_01_CreateSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_02_DropSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_03_DuplicateCreationFailure()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_04_ImplicitSchemaCreation()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_05CreateWithSchemaSpecified()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_06_CreateWithSchemaSpecifiedCreateTrue()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_07_CreateWithSchemaDropWithNoSchema()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_08_DropOtherSchemaSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_09_CreateOtherSchemaSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_10_NextValue()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.test_13_restrictedDrop()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateOtherSchemaSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateSequenceWithArguments()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateWithSchemaDropWithNoSchema()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateWithSchemaSpecified()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testCreateWithSchemaSpecifiedCreateTrue()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testDropOtherSchemaSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testDropSequence()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testDuplicateCreationFailure()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testImplicitSchemaCreation()
org.apache.derbyTesting.functionTests.tests.lang.SequenceTest.testNextValue()
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.advance()
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.bump(BigInteger)
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.cloneBigInteger(BigInteger)
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.getNextValue()
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.getUpperBound()
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.overflowed(BigInteger)
org.apache.derbyTesting.functionTests.tests.lang.SGVetter.SGVetter(Long,boolean,long,long,long,long,long)
org.apache.derbyTesting.functionTests.tests.lang.SystemCatalogTest.testSystemCatalogColumns()
org.apache.derbyTesting.functionTests.tests.lang.SystemCatalogTest.testSystemCatalogIndexes()
org.apache.derbyTesting.functionTests.tests.lang.ViewsTest.test_views()
org.apache.derbyTesting.junit.JDBC.dropSchema(DatabaseMetaData,String)
org.apache.derbyTesting.junit.JDBC.dropUsingDMD(Statement,ResultSet,String,String,String)
org.apache.derbyTesting.junit.JDBC.sysSequencesExists(Connection)
org.apache.derbyTesting.junit.RuntimeStatisticsParser.getStartPosition()
org.apache.derbyTesting.junit.RuntimeStatisticsParser.getStopPosition()
org.apache.derby.tools.dblook.atVersion(Connection,int,int)
org.apache.derby.tools.dblook.go()
org.apache.derby.tools.dblook.removeNewlines(String)
