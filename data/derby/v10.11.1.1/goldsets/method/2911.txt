org.apache.derby.iapi.services.cache.CacheFactory.newSizedCacheManager(CacheableFactory,String,int,long)
org.apache.derby.iapi.services.cache.CacheManager.containsKey(Object)
org.apache.derby.iapi.services.cache.CacheManager.getCacheStats()
org.apache.derby.iapi.services.cache.CacheManager.getMaximumSize()
org.apache.derby.iapi.services.cache.CacheManager.getNumberInUse()
org.apache.derby.iapi.services.cache.CacheManager.resetCacheStats()
org.apache.derby.iapi.services.cache.CacheManager.resize(long)
org.apache.derby.iapi.services.cache.CacheManager.scan(Matchable,Operator)
org.apache.derby.iapi.services.cache.CacheManager.setUsed(Object[])
org.apache.derby.iapi.services.cache.CacheManager.useDaemonService(DaemonService)
org.apache.derby.iapi.services.cache.CacheManager.values()
org.apache.derby.iapi.store.access.TransactionController.getCacheStats(String)
org.apache.derby.iapi.store.access.TransactionController.getDynamicCompiledConglomInfo(long)
org.apache.derby.iapi.store.access.TransactionController.resetCacheStats(String)
org.apache.derby.iapi.store.raw.data.DataFactory.removeStubsOK()
org.apache.derby.iapi.store.raw.Transaction.anyoneBlocked()
org.apache.derby.iapi.store.raw.Transaction.getFileHandler()
org.apache.derby.iapi.store.raw.xact.RawTransaction.getLogFactory()
org.apache.derby.impl.services.cache.BackgroundCleaner.BackgroundCleaner(ConcurrentCache,DaemonService,int)
org.apache.derby.impl.services.cache.BackgroundCleaner.performWork(ContextManager)
org.apache.derby.impl.services.cache.BackgroundCleaner.requestService()
org.apache.derby.impl.services.cache.BackgroundCleaner.scheduleClean(CacheEntry)
org.apache.derby.impl.services.cache.BackgroundCleaner.scheduleShrink()
org.apache.derby.impl.services.cache.BackgroundCleaner.scheduleWork(CacheEntry)
org.apache.derby.impl.services.cache.BackgroundCleaner.serviceASAP()
org.apache.derby.impl.services.cache.BackgroundCleaner.serviceImmediately()
org.apache.derby.impl.services.cache.BackgroundCleaner.unsubscribe()
org.apache.derby.impl.services.cache.CacheEntry.getCacheable()
org.apache.derby.impl.services.cache.CacheEntry.isKept()
org.apache.derby.impl.services.cache.CacheEntry.isValid()
org.apache.derby.impl.services.cache.CacheEntry.keep()
org.apache.derby.impl.services.cache.CacheEntry.keep(boolean)
org.apache.derby.impl.services.cache.CacheEntry.lock()
org.apache.derby.impl.services.cache.CacheEntry.lockWhenIdentityIsSet()
org.apache.derby.impl.services.cache.CacheEntry.setCacheable(Cacheable)
org.apache.derby.impl.services.cache.CacheEntry.setCallback(ReplacementPolicy.Callback)
org.apache.derby.impl.services.cache.CacheEntry.settingIdentityComplete()
org.apache.derby.impl.services.cache.CacheEntry.unkeep()
org.apache.derby.impl.services.cache.CacheEntry.unkeepForRemove()
org.apache.derby.impl.services.cache.CacheEntry.unlock()
org.apache.derby.impl.services.cache.CacheEntry.waitUntilIdentityIsSet()
org.apache.derby.impl.services.cache.ClockPolicy.ClockPolicy(ConcurrentCache,int)
org.apache.derby.impl.services.cache.ClockPolicy.ClockPolicy(ConcurrentCache,int,int)
org.apache.derby.impl.services.cache.ClockPolicy.doShrink()
org.apache.derby.impl.services.cache.ClockPolicy.grow(CacheEntry)
org.apache.derby.impl.services.cache.ClockPolicy.Holder.access()
org.apache.derby.impl.services.cache.ClockPolicy.Holder.evictIfFree()
org.apache.derby.impl.services.cache.ClockPolicy.Holder.free()
org.apache.derby.impl.services.cache.ClockPolicy.Holder.getEntry()
org.apache.derby.impl.services.cache.ClockPolicy.Holder.Holder(CacheEntry)
org.apache.derby.impl.services.cache.ClockPolicy.Holder.isEvicted()
org.apache.derby.impl.services.cache.ClockPolicy.Holder.setEvicted()
org.apache.derby.impl.services.cache.ClockPolicy.Holder.switchEntry(CacheEntry)
org.apache.derby.impl.services.cache.ClockPolicy.Holder.takeIfFree(CacheEntry)
org.apache.derby.impl.services.cache.ClockPolicy.insertEntry(CacheEntry)
org.apache.derby.impl.services.cache.ClockPolicy.isEvictable(CacheEntry,Holder,boolean)
org.apache.derby.impl.services.cache.ClockPolicy.moveHand()
org.apache.derby.impl.services.cache.ClockPolicy.removeHolder(int,Holder)
org.apache.derby.impl.services.cache.ClockPolicy.rotateClock(CacheEntry,boolean)
org.apache.derby.impl.services.cache.ClockPolicy.rotateClock(CacheEntry,float)
org.apache.derby.impl.services.cache.ClockPolicy.rotateClock(CacheEntry,float,boolean)
org.apache.derby.impl.services.cache.ClockPolicy.shrinkMe()
org.apache.derby.impl.services.cache.ClockPolicy.trimMe()
org.apache.derby.impl.services.cache.ClockPolicy.trimToSize()
org.apache.derby.impl.services.cache.ConcurrentCache.ageOut()
org.apache.derby.impl.services.cache.ConcurrentCache.cleanAll()
org.apache.derby.impl.services.cache.ConcurrentCache.cleanAndUnkeepEntry(CacheEntry,Cacheable)
org.apache.derby.impl.services.cache.ConcurrentCache.cleanCache(Matchable)
org.apache.derby.impl.services.cache.ConcurrentCache.cleanEntry(CacheEntry)
org.apache.derby.impl.services.cache.ConcurrentCache.clean(Matchable)
org.apache.derby.impl.services.cache.ConcurrentCache.ConcurrentCache(CacheableFactory,String)
org.apache.derby.impl.services.cache.ConcurrentCache.ConcurrentCache(CacheableFactory,String,int)
org.apache.derby.impl.services.cache.ConcurrentCache.ConcurrentCache(CacheableFactory,String,int,int)
org.apache.derby.impl.services.cache.ConcurrentCache.create(Object,Object)
org.apache.derby.impl.services.cache.ConcurrentCache.discard(Matchable)
org.apache.derby.impl.services.cache.ConcurrentCache.evictEntry(Object)
org.apache.derby.impl.services.cache.ConcurrentCacheFactory.newCacheManager(CacheableFactory,String,int,int)
org.apache.derby.impl.services.cache.ConcurrentCache.findCached(Object)
org.apache.derby.impl.services.cache.ConcurrentCache.findFreeCacheable()
org.apache.derby.impl.services.cache.ConcurrentCache.findFreeCacheable(CacheEntry)
org.apache.derby.impl.services.cache.ConcurrentCache.find(Object)
org.apache.derby.impl.services.cache.ConcurrentCache.findOrCreateObject(Object,boolean,Object)
org.apache.derby.impl.services.cache.ConcurrentCache.getBackgroundCleaner()
org.apache.derby.impl.services.cache.ConcurrentCache.getEntry(Object)
org.apache.derby.impl.services.cache.ConcurrentCache.getReplacementPolicy()
org.apache.derby.impl.services.cache.ConcurrentCache.initIdentity(CacheEntry,Object,Object,boolean)
org.apache.derby.impl.services.cache.ConcurrentCache.insertIntoFreeSlot(Object,CacheEntry)
org.apache.derby.impl.services.cache.ConcurrentCache.release(Cacheable)
org.apache.derby.impl.services.cache.ConcurrentCache.remove(Cacheable)
org.apache.derby.impl.services.cache.ConcurrentCache.removeEntry(CacheEntry)
org.apache.derby.impl.services.cache.ConcurrentCache.removeEntry(Object)
org.apache.derby.impl.services.cache.ConcurrentCache.settingIdentityComplete(Object,CacheEntry,Cacheable)
org.apache.derby.impl.services.cache.ConcurrentCache.shutdown()
org.apache.derby.impl.store.access.RAMTransaction.openConglomerate(Conglomerate,boolean,int,int,int,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.RAMTransaction.openScan(Conglomerate,boolean,int,int,int,FormatableBitSet,DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.RAMTransaction.setContext(RAMTransactionContext)
org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getPageCache()
org.apache.derbyTesting.functionTests.tests.lang.wisconsin.createTables(Connection)
org.apache.derbyTesting.functionTests.tests.lang.wisconsin.createTables(Connection,boolean)
org.apache.derbyTesting.functionTests.tests.lang.wisconsin.main(String[])
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.ClientThread.ClientThread(Client)
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.ClientThread.run()
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.init(Client[])
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.printReport(PrintStream)
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.startSteadyState()
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.startWarmup()
org.apache.derbyTesting.perf.clients.BackToBackLoadGenerator.stop()
org.apache.derbyTesting.perf.clients.Client.doWork()
org.apache.derbyTesting.perf.clients.Client.init(Connection)
org.apache.derbyTesting.perf.clients.DBFiller.fill(Connection)
org.apache.derbyTesting.perf.clients.PoissonLoadGenerator.ClientThread.runClient()
org.apache.derbyTesting.perf.clients.PoissonLoadGenerator.ClientThread.wakeup()
org.apache.derbyTesting.perf.clients.PoissonLoadGenerator.PoissonLoadGenerator(double)
org.apache.derbyTesting.perf.clients.Runner.getDBFiller()
org.apache.derbyTesting.perf.clients.Runner.getLoadGenerator()
org.apache.derbyTesting.perf.clients.Runner.newClient()
org.apache.derbyTesting.perf.clients.Runner.parseArgs(String[])
org.apache.derbyTesting.perf.clients.Runner.printUsage(PrintStream)
org.apache.derbyTesting.perf.clients.Runner.shutdownDatabase()
org.apache.derbyTesting.perf.clients.SingleRecordFiller.getTableName(int,int)
org.apache.derbyTesting.perf.clients.SingleRecordFiller.randomString(int)
org.apache.derbyTesting.perf.clients.SingleRecordFiller.SingleRecordFiller(int,int)
org.apache.derbyTesting.perf.clients.SingleRecordSelectClient.SingleRecordSelectClient(int,int)
org.apache.derbyTesting.perf.clients.SingleRecordUpdateClient.SingleRecordUpdateClient(int,int)
org.apache.derbyTesting.perf.clients.WisconsinFiller.dropTable(Connection,String)
