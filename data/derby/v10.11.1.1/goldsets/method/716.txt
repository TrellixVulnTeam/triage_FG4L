org.apache.derby.catalog.GetProcedureColumns.GetProcedureColumns(AliasInfo,String)
org.apache.derby.catalog.GetProcedureColumns.translate(int)
org.apache.derby.catalog.TypeDescriptor.getCollationName()
org.apache.derby.catalog.TypeDescriptor.isRowMultiSet()
org.apache.derby.catalog.types.BaseTypeIdImpl.hashCode()
org.apache.derby.catalog.types.RoutineAliasInfo.getReturnType()
org.apache.derby.catalog.types.RoutineAliasInfo.isTableFunction()
org.apache.derby.catalog.types.RowMultiSetImpl.getColumnNames()
org.apache.derby.catalog.types.RowMultiSetImpl.getJDBCTypeId()
org.apache.derby.catalog.types.RowMultiSetImpl.getSQLTypeName()
org.apache.derby.catalog.types.RowMultiSetImpl.getTypeFormatId()
org.apache.derby.catalog.types.RowMultiSetImpl.getTypes()
org.apache.derby.catalog.types.RowMultiSetImpl.readExternal(ObjectInput)
org.apache.derby.catalog.types.RowMultiSetImpl.RowMultiSetImpl()
org.apache.derby.catalog.types.RowMultiSetImpl.RowMultiSetImpl(String[],DataTypeDescriptor[])
org.apache.derby.catalog.types.RowMultiSetImpl.wrapperTypeFormatId()
org.apache.derby.catalog.types.RowMultiSetImpl.writeExternal(ObjectOutput)
org.apache.derby.catalog.types.TypeDescriptorImpl.getMaximumWidthInBytes()
org.apache.derby.catalog.types.TypeDescriptorImpl.isStringType()
org.apache.derby.catalog.types.TypeDescriptorImpl.setNullability(boolean)
org.apache.derby.iapi.sql.dictionary.AliasDescriptor.isPersistent()
org.apache.derby.iapi.sql.dictionary.DataDictionary.getBuiltinVTIClass(TableDescriptor,boolean)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getVTIClass(TableDescriptor,boolean)
org.apache.derby.iapi.sql.execute.ResultSetFactory.getVTIResultSet(Activation,GeneratedMethod,int,GeneratedMethod,String,Qualifier[][],int,boolean,boolean,int,boolean,int,double,double)
org.apache.derby.iapi.sql.execute.ResultSetFactory.getVTIResultSet(Activation,GeneratedMethod,int,GeneratedMethod,String,Qualifier[][],int,boolean,boolean,int,boolean,int,double,double,boolean)
org.apache.derby.iapi.types.DataTypeDescriptor.getCollationDerivation()
org.apache.derby.iapi.types.DataTypeDescriptor.getRowMultiSet(String[],DataTypeDescriptor[])
org.apache.derby.iapi.types.DataTypeDescriptor.getSQLDataTypeDescriptor(String,int,int,boolean,int)
org.apache.derby.iapi.types.DTSClassInfo.getNewInstance()
org.apache.derby.iapi.types.TypeId.isRowMultiSetTypeId()
org.apache.derby.iapi.types.TypeId.isXMLTypeId()
org.apache.derby.impl.sql.compile.CreateAliasNode.bindStatement()
org.apache.derby.impl.sql.compile.CreateAliasNode.setTableFunctionCollations()
org.apache.derby.impl.sql.compile.CreateAliasNode.typeDescriptorWithCorrectCollation(TypeDescriptor)
org.apache.derby.impl.sql.compile.FromVTI.accept(Visitor)
org.apache.derby.impl.sql.compile.FromVTI.bindExpressions(FromList)
org.apache.derby.impl.sql.compile.FromVTI.bindVTITables(FromList)
org.apache.derby.impl.sql.compile.FromVTI.createResultColumnsForTableFunction(TypeDescriptor)
org.apache.derby.impl.sql.compile.FromVTI.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)
org.apache.derby.impl.sql.compile.FromVTI.generate(ActivationClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.FromVTI.generateConstructor(ActivationClassBuilder,MethodBuilder,boolean)
org.apache.derby.impl.sql.compile.FromVTI.getMethodCall()
org.apache.derby.impl.sql.compile.FromVTI.getNewInvocation()
org.apache.derby.impl.sql.compile.FromVTI.getNodesFromParameters(Class)
org.apache.derby.impl.sql.compile.FromVTI.getScanArguments(ActivationClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.FromVTI.getVTICosting()
org.apache.derby.impl.sql.compile.FromVTI.getVTIName()
org.apache.derby.impl.sql.compile.FromVTI.implementsDerbyStyleVTICosting(String)
org.apache.derby.impl.sql.compile.FromVTI.init(Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.FromVTI.init(Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.FromVTI.isConstructor()
org.apache.derby.impl.sql.compile.FromVTI.preprocess(int,GroupByList,FromList)
org.apache.derby.impl.sql.compile.FromVTI.printSubNodes(int)
org.apache.derby.impl.sql.compile.FromVTI.referencesTarget(String,boolean)
org.apache.derby.impl.sql.compile.MethodCallNode.addParms(Vector)
org.apache.derby.impl.sql.compile.MethodCallNode.getCorrelationTables(JBitSet)
org.apache.derby.impl.sql.compile.MethodCallNode.getJavaClassName()
org.apache.derby.impl.sql.compile.MethodCallNode.getMethodParameterClasses()
org.apache.derby.impl.sql.compile.MethodCallNode.getRoutineInfo()
org.apache.derby.impl.sql.compile.MethodCallNode.resolveMethodCall(String,boolean)
org.apache.derby.impl.sql.compile.NewInvocationNode.categorize(JBitSet,boolean)
org.apache.derby.impl.sql.compile.NewInvocationNode.isBuiltinVTI()
org.apache.derby.impl.sql.compile.NewInvocationNode.setSingleInstantiation()
org.apache.derby.impl.sql.compile.ResultColumnList.addColumn(TableName,String,DataTypeDescriptor)
org.apache.derby.impl.sql.compile.ResultColumnList.bindResultColumnsByName(ResultColumnList,FromVTI,DMLStatementNode)
org.apache.derby.impl.sql.compile.ResultColumnList.createListFromResultSetMetaData(ResultSetMetaData,TableName,String)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpression(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.VTIDeferModPolicy.deferIt(int,FromVTI,String[],QueryTreeNode)
org.apache.derby.impl.sql.compile.VTIDeferModPolicy.visit(Visitable)
org.apache.derby.impl.sql.execute.VTIResultSet.openCore()
org.apache.derby.impl.sql.execute.VTIResultSet.setNullableColumnList()
org.apache.derby.impl.sql.execute.VTIResultSet.VTIResultSet(Activation,GeneratedMethod,int,GeneratedMethod,String,Qualifier[][],int,boolean,boolean,int,boolean,int,double,double)
org.apache.derby.impl.sql.execute.VTIResultSet.VTIResultSet(Activation,GeneratedMethod,int,GeneratedMethod,String,Qualifier[][],int,boolean,boolean,int,boolean,int,double,double,boolean)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.assertGetFunctionsRs(ResultSet)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.GeneratedId.equals(Object)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.GeneratedId.toString()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.testGetWrapperNegative()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.close()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.ConstructorException.ConstructorException()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.deduceGetXXXCaller()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.getMetaData()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.getRawColumn(int)
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.getXXXrecord()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.GoodVTICosting.GoodVTICosting()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.MissingConstructor.dummyVTI()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.MissingConstructor.MissingConstructor(String[],String[][])
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.MissingConstructor.supportsMultipleInstantiations(VTIEnvironment)
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.next()
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.StringArrayVTI(String[],String[][])
org.apache.derbyTesting.functionTests.tests.lang.StringArrayVTI.ZeroArgConstructorNotPublic.ZeroArgConstructorNotPublic()
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.checkNull(String)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.findColumn(String)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getAsciiStream(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getBigDecimal(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getBinaryStream(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getBlob(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getBoolean(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getByte(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getBytes(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getClob(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getDate(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getDouble(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getEncodedStream(String,String)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getFloat(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getInt(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getLong(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getShort(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getString(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getTime(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.getTimestamp(int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.parseDateTime(String)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.getBinaryStream()
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.getBytes(long,int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.length()
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.position(Blob,long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.position(byte[],long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.setBinaryStream(long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.setBytes(long,byte[])
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.setBytes(long,byte[],int,int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.SimpleBlob(byte[])
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleBlob.truncate(long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.getAsciiStream()
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.getCharacterStream()
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.getSubString(long,int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.position(Clob,long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.position(String,long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.setAsciiStream(long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.setCharacterStream(long)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.setString(long,String)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.setString(long,String,int,int)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.SimpleClob.SimpleClob(String)
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.StringColumnVTI(String[])
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.wasNull()
org.apache.derbyTesting.functionTests.tests.lang.StringColumnVTI.wrap(Throwable)
org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.testInvalidTableFunctions()
org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.testSpaceTable()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.allLegalDatatypesVTIResults()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.allStringTypesFunction()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.appendFooAndBar(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertFunctionDBMD(String,Object[][],Object[][])
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(int[],String[],ResultSet,String[][])
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(String,String[][],int[])
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(String,String[],String[][],int[])
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.badDDL()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.chattyPrepare(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.checkGetXXXCalls()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.collatedSuite(String,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.collationTest()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.compareColumnNames(String[],ResultSet)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.compareJdbcTypes(int[],int[])
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.dropFunction(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.dropSchema()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.dropTable(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.expectError(String,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.getFunctionColumns(String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.getFunctions(String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.getJdbcColumnTypes(ResultSet)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.getOptimizerStats(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.goodDDL(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.goodStatement(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.invert(int)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.makeColumnNames(int,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.makeVTI(String[][])
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.noSpecialCollation()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.notTableFunction()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.prettyPrint(Connection,ResultSet)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.readDoubleTag(String,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.returnsACoupleRows()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.returnsAllLegalDatatypes()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.returnsAllLegalDatatypes(int,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.setUp()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleDDL()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleVTIResults()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.specialCollation()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.squeezeString(Object)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.subqueryTest()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.suite()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.tableFunctionTest()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.TableFunctionTest(String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.tearDown()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.unexpectedThrowable(Throwable)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.verifyReturnType(String,String)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.vtiCosting()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_4.testMetaDataQueryRunInSYScompilationSchema()
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_4.testTableFunctionDeclaration()
org.apache.derbyTesting.junit.BaseTestCase.printStackTrace(Throwable)
org.apache.derby.vti.VTICosting.getEstimatedCostPerInstantiation(VTIEnvironment)
org.apache.derby.vti.VTICosting.getEstimatedRowCount(VTIEnvironment)
org.apache.derby.vti.VTIEnvironment.getSharedState(String)
org.apache.derby.vti.VTIEnvironment.isCompileTime()
org.apache.derby.vti.VTIEnvironment.setSharedState(String,java.io.Serializable)
