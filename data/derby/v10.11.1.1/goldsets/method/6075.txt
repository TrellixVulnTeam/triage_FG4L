org.apache.derby.iapi.sql.compile.CompilerContext.getParameterList()
org.apache.derby.iapi.sql.compile.CompilerContext.setParameterList(List)
org.apache.derby.iapi.sql.compile.CompilerContext.setParameterList(Vector)
org.apache.derby.iapi.store.access.TransactionController.openSortCostController()
org.apache.derby.iapi.store.access.TransactionController.openSortCostController(Properties)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getTriggerActionString(Visitable,String,String,String,int[],int[],int,TableDescriptor,int,boolean)
org.apache.derby.impl.sql.compile.AggregateNode.bindExpression(FromList,SubqueryList,List)
org.apache.derby.impl.sql.compile.AggregateNode.bindExpression(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.CharConstantNode.getConstantValueAsObject()
org.apache.derby.impl.sql.compile.CollectNodesVisitor.CollectNodesVisitor(Class)
org.apache.derby.impl.sql.compile.CollectNodesVisitor.CollectNodesVisitor(Class,Class)
org.apache.derby.impl.sql.compile.CollectNodesVisitor.getList()
org.apache.derby.impl.sql.compile.ColumnDefinitionNode.validateDefault(DataDictionary,TableDescriptor)
org.apache.derby.impl.sql.compile.ColumnOrdering.addColumn(int,int)
org.apache.derby.impl.sql.compile.ColumnOrdering.cloneMe()
org.apache.derby.impl.sql.compile.ColumnOrdering.empty()
org.apache.derby.impl.sql.compile.ColumnOrdering.hasAnyOtherTable(int)
org.apache.derby.impl.sql.compile.ColumnOrdering.hasTable(int)
org.apache.derby.impl.sql.compile.CompilerContextImpl.addProviderToAuxiliaryList(Provider)
org.apache.derby.impl.sql.compile.CompilerContextImpl.addSavedObject(Object)
org.apache.derby.impl.sql.compile.CompilerContextImpl.closeStoreCostControllers()
org.apache.derby.impl.sql.compile.CompilerContextImpl.getSavedObjects()
org.apache.derby.impl.sql.compile.CompilerContextImpl.getSortCostController()
org.apache.derby.impl.sql.compile.CompilerContextImpl.getStoreCostController(long)
org.apache.derby.impl.sql.compile.CompilerContextImpl.popCurrentPrivType()
org.apache.derby.impl.sql.compile.CompilerContextImpl.pushCurrentPrivType(int)
org.apache.derby.impl.sql.compile.ConditionalNode.findType(ValueNodeList,FromList,SubqueryList,List)
org.apache.derby.impl.sql.compile.ConditionalNode.findType(ValueNodeList,FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.ConditionalNode.recastNullNodes(ValueNodeList,DataTypeDescriptor,FromList,SubqueryList,List)
org.apache.derby.impl.sql.compile.ConditionalNode.recastNullNodes(ValueNodeList,DataTypeDescriptor,FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.CreateIndexNode.verifyAndGetUniqueNames()
org.apache.derby.impl.sql.compile.CreateTriggerNode.bindReferencesClause(DataDictionary)
org.apache.derby.impl.sql.compile.CreateTriggerNode.forbidActionsOnGenCols()
org.apache.derby.impl.sql.compile.CreateTriggerNode.init(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.CreateTriggerNode.validateReferencesClause(DataDictionary)
org.apache.derby.impl.sql.compile.CursorNode.getUpdateColumnNames()
org.apache.derby.impl.sql.compile.CursorNode.getXML()
org.apache.derby.impl.sql.compile.CursorNode.init(Object,Object,Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.DeleteNode.bindStatement()
org.apache.derby.impl.sql.compile.DeleteNode.getDeleteReadMap(TableDescriptor,List,GenericDescriptorList,boolean[])
org.apache.derby.impl.sql.compile.DeleteNode.getDeleteReadMap(TableDescriptor,Vector,GenericDescriptorList,boolean[])
org.apache.derby.impl.sql.compile.DeleteNode.getDependentTableNode(String,int,ColumnDescriptorList)
org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)
org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList)
org.apache.derby.impl.sql.compile.DeleteNode.getReadMap(DataDictionary,TableDescriptor)
org.apache.derby.impl.sql.compile.DistinctNode.isOrderedOn(ColumnReference[],boolean,List)
org.apache.derby.impl.sql.compile.DistinctNode.isOrderedOn(ColumnReference[],boolean,Vector)
org.apache.derby.impl.sql.compile.DMLModStatementNode.bindRowScopedExpression(NodeFactory,ContextManager,TableDescriptor,ResultColumnList,ValueNode)
org.apache.derby.impl.sql.compile.DMLModStatementNode.generateFKInfo(ConstraintDescriptorList,DataDictionary,TableDescriptor,FormatableBitSet)
org.apache.derby.impl.sql.compile.DMLModStatementNode.getAffectedIndexes(TableDescriptor,ResultColumnList,FormatableBitSet)
org.apache.derby.impl.sql.compile.DMLModStatementNode.getXAffectedIndexes(TableDescriptor,ResultColumnList,FormatableBitSet,List)
org.apache.derby.impl.sql.compile.DMLModStatementNode.getXAffectedIndexes(TableDescriptor,ResultColumnList,FormatableBitSet,Vector)
org.apache.derby.impl.sql.compile.DMLModStatementNode.markAffectedIndexes(List)
org.apache.derby.impl.sql.compile.DMLModStatementNode.markAffectedIndexes(Vector)
org.apache.derby.impl.sql.compile.DMLStatementNode.activationKind()
org.apache.derby.impl.sql.compile.DMLStatementNode.generateParameterValueSet(ActivationClassBuilder)
org.apache.derby.impl.sql.compile.FromBaseTable.clearDependency(List)
org.apache.derby.impl.sql.compile.FromBaseTable.clearDependency(Vector)
org.apache.derby.impl.sql.compile.FromList.flattenFromTables(ResultColumnList,PredicateList,SubqueryList,GroupByList,ValueNode)
org.apache.derby.impl.sql.compile.FromTable.markUpdatableByCursor(List)
org.apache.derby.impl.sql.compile.FromTable.markUpdatableByCursor(Vector)
org.apache.derby.impl.sql.compile.FromVTI.bindExpressions(FromList)
org.apache.derby.impl.sql.compile.FromVTI.bindVTITables(FromList)
org.apache.derby.impl.sql.compile.FromVTI.getNodesFromParameters(Class)
org.apache.derby.impl.sql.compile.FromVTI.getScanArguments(ActivationClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.FromVTI.remapBaseTableColumns()
org.apache.derby.impl.sql.compile.GenerationClauseNode.findReferencedColumns()
org.apache.derby.impl.sql.compile.GenerationClauseNode.isEquivalent(ValueNode)
org.apache.derby.impl.sql.compile.GroupByList.bindGroupByColumns(SelectNode,List)
org.apache.derby.impl.sql.compile.GroupByList.bindGroupByColumns(SelectNode,Vector)
org.apache.derby.impl.sql.compile.GroupByNode.addAggregateColumns()
org.apache.derby.impl.sql.compile.GroupByNode.addDistinctAggregatesToOrderBy()
org.apache.derby.impl.sql.compile.GroupByNode.addUnAggColumns()
org.apache.derby.impl.sql.compile.GroupByNode.considerPostOptimizeOptimizations(boolean)
org.apache.derby.impl.sql.compile.GroupByNode.init(Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.GroupByNode.printSubNodes(int)
org.apache.derby.impl.sql.compile.HalfOuterJoinNode.transformOuterJoins(ValueNode,int)
org.apache.derby.impl.sql.compile.HashJoinStrategy.findHashKeyColumns(Optimizable,ConglomerateDescriptor,OptimizablePredicateList)
org.apache.derby.impl.sql.compile.HashJoinStrategy.HashJoinStrategy()
org.apache.derby.impl.sql.compile.HashJoinStrategy.toString()
org.apache.derby.impl.sql.compile.JoinNode.deferredBindExpressions(FromList)
org.apache.derby.impl.sql.compile.JoinNode.setAggregates(List)
org.apache.derby.impl.sql.compile.JoinNode.setAggregateVector(List)
org.apache.derby.impl.sql.compile.JoinNode.setAggregateVector(Vector)
org.apache.derby.impl.sql.compile.JoinNode.setSubqueryList(SubqueryList)
org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode.setupOptimizeStringFromParameter(ValueNode,ValueNode,String,int)
org.apache.derby.impl.sql.compile.MethodCallNode.bindParameters(FromList,SubqueryList,List)
org.apache.derby.impl.sql.compile.MethodCallNode.bindParameters(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.MethodCallNode.getCorrelationTables(JBitSet)
org.apache.derby.impl.sql.compile.NextSequenceNode.bindExpression(FromList,SubqueryList,List,boolean)
org.apache.derby.impl.sql.compile.NextSequenceNode.bindExpression(FromList,SubqueryList,Vector,boolean)
org.apache.derby.impl.sql.compile.OrderedColumnList.getColumnOrdering()
org.apache.derby.impl.sql.compile.ParameterNode.generateParameterValueSet(ExpressionClassBuilder,int,List)
org.apache.derby.impl.sql.compile.ParameterNode.generateParameterValueSet(ExpressionClassBuilder,int,Vector)
org.apache.derby.impl.sql.compile.Predicate.copyFields(Predicate)
org.apache.derby.impl.sql.compile.Predicate.getSearchClauseHT()
org.apache.derby.impl.sql.compile.PredicateList.chooseLongestMatch(PredicateWrapperList[],List,int)
org.apache.derby.impl.sql.compile.PredicateList.chooseLongestMatch(PredicateWrapperList[],Vector,int)
org.apache.derby.impl.sql.compile.PredicateList.joinClauseTransitiveClosure(int,FromList,CompilerContext)
org.apache.derby.impl.sql.compile.PredicateList.markReferencedColumns()
org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean)
org.apache.derby.impl.sql.compile.PredicateList.PredicateWrapperList.createLeadingUnique()
org.apache.derby.impl.sql.compile.PredicateList.PredicateWrapperList.PredicateWrapperList(int)
org.apache.derby.impl.sql.compile.PredicateList.PredicateWrapperList.removeElement(Predicate)
org.apache.derby.impl.sql.compile.PredicateList.PredicateWrapperList.removeElement(PredicateWrapper)
org.apache.derby.impl.sql.compile.PredicateList.PredicateWrapperList.retainLeadingContiguous()
org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean)
org.apache.derby.impl.sql.compile.PredicateList.selectivity(Optimizable)
org.apache.derby.impl.sql.compile.Predicate.setTransitiveSearchClauseAdded(RelationalOperator)
org.apache.derby.impl.sql.compile.Predicate.transitiveSearchClauseAdded(RelationalOperator)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.addElement(QueryTreeNode)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.destructiveAppend(QueryTreeNodeVector)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.elementAt(int)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.insertElementAt(QueryTreeNode,int)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.nondestructiveAppend(QueryTreeNodeVector)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.removeAllElements()
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.removeElementAt(int)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.removeElement(QueryTreeNode)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.remove(int)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.setElementAt(QueryTreeNode,int)
org.apache.derby.impl.sql.compile.QueryTreeNodeVector.size()
org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressions(FromList,SubqueryList,List)
org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressions(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.ResultColumnList.bindResultColumnsByName(ResultColumnList,FromVTI,DMLStatementNode)
org.apache.derby.impl.sql.compile.ResultColumnList.commonCodeForUpdatableByCursor(List,boolean)
org.apache.derby.impl.sql.compile.ResultColumnList.commonCodeForUpdatableByCursor(Vector,boolean)
org.apache.derby.impl.sql.compile.ResultColumnList.markColumnsInSelectListUpdatableByCursor(List)
org.apache.derby.impl.sql.compile.ResultColumnList.markColumnsInSelectListUpdatableByCursor(Vector)
org.apache.derby.impl.sql.compile.ResultColumnList.verifyUniqueNames(boolean)
org.apache.derby.impl.sql.compile.ResultSetNode.genNewRCForInsert(TableDescriptor,FromVTI,int,DataDictionary)
org.apache.derby.impl.sql.compile.ResultSetNode.numDistinctAggregates(List)
org.apache.derby.impl.sql.compile.ResultSetNode.numDistinctAggregates(Vector)
org.apache.derby.impl.sql.compile.RowOrderingImpl.addOrderedColumn(int,int,int)
org.apache.derby.impl.sql.compile.RowOrderingImpl.alwaysOrdered(int)
org.apache.derby.impl.sql.compile.RowOrderingImpl.nextOrderPosition(int)
org.apache.derby.impl.sql.compile.RowOrderingImpl.optimizableAlwaysOrdered(Optimizable)
org.apache.derby.impl.sql.compile.RowOrderingImpl.orderedOnColumn(int,int,int)
org.apache.derby.impl.sql.compile.RowOrderingImpl.orderedOnColumn(int,int,int,int)
org.apache.derby.impl.sql.compile.RowOrderingImpl.removeOptimizableFromVector(int,ArrayList)
org.apache.derby.impl.sql.compile.RowOrderingImpl.removeOptimizableFromVector(int,Vector)
org.apache.derby.impl.sql.compile.RowOrderingImpl.removeOptimizable(int)
org.apache.derby.impl.sql.compile.RowOrderingImpl.removeOptimizable(int,ArrayList)
org.apache.derby.impl.sql.compile.RowOrderingImpl.RowOrderingImpl()
org.apache.derby.impl.sql.compile.RowOrderingImpl.vectorContainsOptimizable(int,ArrayList)
org.apache.derby.impl.sql.compile.RowOrderingImpl.vectorContainsOptimizable(int,Vector)
org.apache.derby.impl.sql.compile.RowResultSetNode.flattenableInFromSubquery(FromList)
org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(int)
org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.SelectNode.isOrderedResult(ResultColumnList,ResultSetNode,boolean)
org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList)
org.apache.derby.impl.sql.compile.SetOperatorNode.modifyAccessPath(JBitSet,PredicateList)
org.apache.derby.impl.sql.compile.SetOperatorNode.setResultToBooleanTrueNode(boolean)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.coerceMethodParameter(FromList,SubqueryList,List,RoutineAliasInfo,int,DataTypeDescriptor,TypeId,int,int)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.coerceMethodParameter(FromList,SubqueryList,Vector,RoutineAliasInfo,int,DataTypeDescriptor,TypeId,int,int)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,List,SchemaDescriptor)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor)
org.apache.derby.impl.sql.compile.TableElementList.bindAndValidateCheckConstraints(FromList)
org.apache.derby.impl.sql.compile.TableElementList.bindAndValidateGenerationClauses(SchemaDescriptor,FromList,FormatableBitSet,TableDescriptor)
org.apache.derby.impl.sql.compile.TableElementList.checkForDuplicateColumns(DDLStatementNode,Hashtable,String)
org.apache.derby.impl.sql.compile.TableElementList.checkForDuplicateColumns(DDLStatementNode,Set,String)
org.apache.derby.impl.sql.compile.TableElementList.checkForDuplicateConstraintNames(DDLStatementNode,Hashtable,String)
org.apache.derby.impl.sql.compile.TableElementList.checkForDuplicateConstraintNames(DDLStatementNode,Set,String)
org.apache.derby.impl.sql.compile.TableElementList.findIllegalGenerationReferences(FromList,TableDescriptor)
org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor)
org.apache.derby.impl.sql.compile.UnaryOperatorNode.bindOperand(FromList,SubqueryList,List)
org.apache.derby.impl.sql.compile.UnaryOperatorNode.bindOperand(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.UntypedNullConstantNode.convertDefaultNode(DataTypeDescriptor)
org.apache.derby.impl.sql.compile.UpdateNode.getReadMap(DataDictionary,TableDescriptor,ResultColumnList,ColumnDescriptorList)
org.apache.derby.impl.sql.compile.UpdateNode.getUpdateReadMap(DataDictionary,TableDescriptor,ResultColumnList,List,ConstraintDescriptorList,GenericDescriptorList,boolean[],ColumnDescriptorList)
org.apache.derby.impl.sql.compile.UpdateNode.getUpdateReadMap(DataDictionary,TableDescriptor,ResultColumnList,Vector,ConstraintDescriptorList,GenericDescriptorList,boolean[],ColumnDescriptorList)
org.apache.derby.impl.sql.compile.ValueNode.getTransformed()
org.apache.derby.impl.sql.compile.VTIDeferModPolicy.deferIt(int,FromVTI,String[],QueryTreeNode)
org.apache.derby.impl.sql.compile.VTIDeferModPolicy.visit(Visitable)
org.apache.derby.impl.sql.compile.VTIDeferModPolicy.VTIDeferModPolicy(FromVTI,String[],DeferModification,int)
org.apache.derby.impl.sql.compile.WindowResultSetNode.addNewColumns()
org.apache.derby.impl.sql.compile.WindowResultSetNode.addNewPRNode()
org.apache.derby.impl.sql.compile.WindowResultSetNode.colRefAlreadySeen(List,ColumnReference)
org.apache.derby.impl.sql.compile.WindowResultSetNode.colRefAlreadySeen(Vector,ColumnReference)
org.apache.derby.impl.sql.compile.WindowResultSetNode.init(Object,Object,Object,Object)
org.apache.derby.impl.storeless.NoOpTransaction.openSort(long)
org.apache.derbyTesting.functionTests.tests.lang.NullsTest.testAlter()
org.apache.derbyTesting.functionTests.tests.lang.NullsTest.testCreate()
org.apache.derbyTesting.unitTests.store.T_AccessFactory.sortCost(TransactionController)
