org.apache.derby.iapi.services.io.CloneableStream.cloneStream()
org.apache.derby.iapi.services.io.FormatIdInputStream.closeStream()
org.apache.derby.iapi.types.SQLChar.ansiTrim(int,StringDataValue,StringDataValue)
org.apache.derby.iapi.types.SQLChar.appendBlanks(char[],int,int)
org.apache.derby.iapi.types.SQLChar.charLength(NumberDataValue)
org.apache.derby.iapi.types.SQLChar.cloneObject()
org.apache.derby.iapi.types.SQLChar.compare(DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.compare(int,DataValueDescriptor,boolean,boolean)
org.apache.derby.iapi.types.SQLChar.concatenate(StringDataValue,StringDataValue,StringDataValue)
org.apache.derby.iapi.types.SQLChar.copyState(SQLChar)
org.apache.derby.iapi.types.SQLChar.equals(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.estimateMemoryUsage()
org.apache.derby.iapi.types.SQLChar.formatJDBCDate(Calendar,StringBuffer)
org.apache.derby.iapi.types.SQLChar.formatJDBCTime(Calendar,StringBuffer)
org.apache.derby.iapi.types.SQLChar.getBoolean()
org.apache.derby.iapi.types.SQLChar.getByte()
org.apache.derby.iapi.types.SQLChar.getCharArray()
org.apache.derby.iapi.types.SQLChar.getClone()
org.apache.derby.iapi.types.SQLChar.getCollationKey()
org.apache.derby.iapi.types.SQLChar.getCollatorForCollation()
org.apache.derby.iapi.types.SQLChar.getDate(Calendar)
org.apache.derby.iapi.types.SQLChar.getDateFormat()
org.apache.derby.iapi.types.SQLChar.getDateFormat(Calendar)
org.apache.derby.iapi.types.SQLChar.getDate(java.util.Calendar,String,LocaleFinder)
org.apache.derby.iapi.types.SQLChar.getDouble()
org.apache.derby.iapi.types.SQLChar.getFloat()
org.apache.derby.iapi.types.SQLChar.getInt()
org.apache.derby.iapi.types.SQLChar.getLength()
org.apache.derby.iapi.types.SQLChar.getLocale()
org.apache.derby.iapi.types.SQLChar.getLocaleFinder()
org.apache.derby.iapi.types.SQLChar.getLong()
org.apache.derby.iapi.types.SQLChar.getNewNull()
org.apache.derby.iapi.types.SQLChar.getNewVarchar()
org.apache.derby.iapi.types.SQLChar.getObject()
org.apache.derby.iapi.types.SQLChar.getShort()
org.apache.derby.iapi.types.SQLChar.getStream()
org.apache.derby.iapi.types.SQLChar.getString()
org.apache.derby.iapi.types.SQLChar.getTime(Calendar)
org.apache.derby.iapi.types.SQLChar.getTime(Calendar,String,LocaleFinder)
org.apache.derby.iapi.types.SQLChar.getTimeFormat()
org.apache.derby.iapi.types.SQLChar.getTimeFormat(Calendar)
org.apache.derby.iapi.types.SQLChar.getTimestamp(Calendar)
org.apache.derby.iapi.types.SQLChar.getTimestampFormat()
org.apache.derby.iapi.types.SQLChar.getTimestampFormat(Calendar)
org.apache.derby.iapi.types.SQLChar.getTimestamp(java.util.Calendar,String,LocaleFinder)
org.apache.derby.iapi.types.SQLChar.getTraceString()
org.apache.derby.iapi.types.SQLChar.getTypeFormatId()
org.apache.derby.iapi.types.SQLChar.getTypeName()
org.apache.derby.iapi.types.SQLChar.getValue(RuleBasedCollator)
org.apache.derby.iapi.types.SQLChar.greaterOrEquals(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.greaterThan(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.growBy()
org.apache.derby.iapi.types.SQLChar.hashCode()
org.apache.derby.iapi.types.SQLChar.hasNonBlankChars(String,int,int)
org.apache.derby.iapi.types.SQLChar.isNull()
org.apache.derby.iapi.types.SQLChar.lessOrEquals(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.lessThan(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.like(DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.like(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.loadStream()
org.apache.derby.iapi.types.SQLChar.locate(StringDataValue,NumberDataValue,NumberDataValue)
org.apache.derby.iapi.types.SQLChar.lower(StringDataValue)
org.apache.derby.iapi.types.SQLChar.normalize(DataTypeDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.normalize(DataTypeDescriptor,String)
org.apache.derby.iapi.types.SQLChar.notEquals(DataValueDescriptor,DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.readExternalFromArray(ArrayInputStream)
org.apache.derby.iapi.types.SQLChar.readExternal(ObjectInput)
org.apache.derby.iapi.types.SQLChar.restoreToNull()
org.apache.derby.iapi.types.SQLChar.returnStream()
org.apache.derby.iapi.types.SQLChar.setBigDecimal(Number)
org.apache.derby.iapi.types.SQLChar.setDateFormatCalendar(DateFormat,Calendar)
org.apache.derby.iapi.types.SQLChar.setFrom(DataValueDescriptor)
org.apache.derby.iapi.types.SQLChar.setInto(PreparedStatement,int)
org.apache.derby.iapi.types.SQLChar.setLocaleFinder(LocaleFinder)
org.apache.derby.iapi.types.SQLChar.setObjectForCast(Object,boolean,String)
org.apache.derby.iapi.types.SQLChar.setStream(InputStream)
org.apache.derby.iapi.types.SQLChar.setValue(boolean)
org.apache.derby.iapi.types.SQLChar.setValue(byte)
org.apache.derby.iapi.types.SQLChar.setValue(byte[])
org.apache.derby.iapi.types.SQLChar.setValue(Date,Calendar)
org.apache.derby.iapi.types.SQLChar.setValue(double)
org.apache.derby.iapi.types.SQLChar.setValue(float)
org.apache.derby.iapi.types.SQLChar.setValueFromResultSet(ResultSet,int,boolean)
org.apache.derby.iapi.types.SQLChar.setValue(InputStream,int)
org.apache.derby.iapi.types.SQLChar.setValue(int)
org.apache.derby.iapi.types.SQLChar.setValue(long)
org.apache.derby.iapi.types.SQLChar.setValue(short)
org.apache.derby.iapi.types.SQLChar.setValue(String)
org.apache.derby.iapi.types.SQLChar.setValue(Time,Calendar)
org.apache.derby.iapi.types.SQLChar.setValue(Timestamp,Calendar)
org.apache.derby.iapi.types.SQLChar.setWidth(int,int,boolean)
org.apache.derby.iapi.types.SQLChar.SQLChar()
org.apache.derby.iapi.types.SQLChar.SQLChar(String)
org.apache.derby.iapi.types.SQLChar.stringCompare(char[],int,char[],int)
org.apache.derby.iapi.types.SQLChar.stringCompare(SQLChar,SQLChar)
org.apache.derby.iapi.types.SQLChar.stringCompare(String,String)
org.apache.derby.iapi.types.SQLChar.substring(NumberDataValue,NumberDataValue,ConcatableDataValue,int)
org.apache.derby.iapi.types.SQLChar.toString()
org.apache.derby.iapi.types.SQLChar.trimInternal(int,char,String)
org.apache.derby.iapi.types.SQLChar.typePrecedence()
org.apache.derby.iapi.types.SQLChar.typeToBigDecimal()
org.apache.derby.iapi.types.SQLChar.upper(StringDataValue)
org.apache.derby.iapi.types.SQLChar.writeExternal(ObjectOutput)
org.apache.derby.impl.sql.execute.MergeJoinResultSet.getReturnRow(ExecRow,ExecRow)
org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCore()
org.apache.derby.impl.sql.execute.NestedLoopLeftOuterJoinResultSet.getMergedRow(ExecRow,ExecRow)
org.apache.derby.impl.store.raw.data.ByteHolder.cloneEmpty()
org.apache.derby.impl.store.raw.data.ByteHolder.writingMode()
org.apache.derby.impl.store.raw.data.OverflowInputStream.fillByteHolder()
org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle)
org.apache.derby.impl.store.raw.data.OverflowInputStream.resetStream()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.baseSuite.decorateSQL(Statement)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.Derby3650Test(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.initializeBlobTables(Statement)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.initializeClobTables(Statement)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.runQueryBlob(String,boolean,boolean)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.runQueryCasesBlob(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.runQueryCasesClob(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.runQueryClob(String,boolean,boolean)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.setup()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.setUp()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyHashJoinBlob()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyHashJoinClob()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinBlob()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinBlob(boolean,boolean)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinBlobNoFree()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinBlobWithCommit()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinBlobWithFree()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinClob()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinClob(boolean,boolean)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinClobNoFree()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinClobWithCommit()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyJoinClobWithFree()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyleftOuterJoinBlob()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.test1ToManyleftOuterJoinClob()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.testBlobSelect()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.testClobSelect()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.verify40KBlob(InputStream)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.verify40KClob(Reader)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.verifyBlob(InputStream,int,int)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby3650Test.verifyClob(Reader,int,Reader)
org.apache.derbyTesting.functionTests.tests.jdbc4._Suite.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.testDerby4477_3645_3646_Repro()
org.apache.derbyTesting.functionTests.tests.memory.BlobMemTest.testDerby4477_3645_3646_Repro_lowmem()
org.apache.derbyTesting.functionTests.tests.memory.ClobMemTest.testDerby4477_3645_3646_Repro_lowmem_clob()
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.available()
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.reopen()
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.reset()
