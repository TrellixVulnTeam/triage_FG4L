org.apache.derby.iapi.sql.compile.Optimizer.getFinalCost()
org.apache.derby.iapi.sql.compile.Optimizer.getOptimizedCost()
org.apache.derby.iapi.sql.compile.Optimizer.prepForNextRound()
org.apache.derby.iapi.store.access.BackingStoreHashtable.BackingStoreHashtable(TransactionController,RowSource,int[],boolean,long,long,int,float,boolean,boolean)
org.apache.derby.iapi.store.access.BackingStoreHashtable.doSpaceAccounting(Object[],boolean)
org.apache.derby.iapi.store.access.BackingStoreHashtable.getEstimatedMemUsage(Object[])
org.apache.derby.iapi.store.access.BackingStoreHashtable.spillToDisk(Hashtable,Object,Object[])
org.apache.derby.impl.sql.compile.CostEstimateImpl.compare(CostEstimate)
org.apache.derby.impl.sql.compile.DistinctNode.generate(ActivationClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.FromBaseTable.optimizeIt(Optimizer,OptimizablePredicateList,CostEstimate,RowOrdering)
org.apache.derby.impl.sql.compile.FromTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)
org.apache.derby.impl.sql.compile.FromTable.getFinalCostEstimate()
org.apache.derby.impl.sql.compile.FromVTI.getScanArguments(ActivationClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.HashTableNode.generateMinion(ExpressionClassBuilder,MethodBuilder,boolean)
org.apache.derby.impl.sql.compile.IntersectOrExceptNode.getOperatorName()
org.apache.derby.impl.sql.compile.IntersectOrExceptNode.getRowCountEstimate(double,double)
org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(ActivationClassBuilder,MethodBuilder,ValueNode)
org.apache.derby.impl.sql.compile.JoinNode.oneRowRightSide(ActivationClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.OptimizerImpl.considerCost(Optimizable,OptimizablePredicateList,CostEstimate,CostEstimate)
org.apache.derby.impl.sql.compile.OptimizerImpl.costBasedCostOptimizable(Optimizable,TableDescriptor,ConglomerateDescriptor,OptimizablePredicateList,CostEstimate)
org.apache.derby.impl.sql.compile.OptimizerImpl.getMaxMemoryPerTable()
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextDecoratedPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.getNextPermutation()
org.apache.derby.impl.sql.compile.OptimizerImpl.OptimizerImpl(OptimizableList,OptimizablePredicateList,DataDictionary,boolean,boolean,boolean,int,JoinStrategy[],int,RequiredRowOrdering,int)
org.apache.derby.impl.sql.compile.OptimizerImpl.rememberBestCost(CostEstimate,int)
org.apache.derby.impl.sql.compile.OptimizerImpl.setOuterRows(double)
org.apache.derby.impl.sql.compile.OrderByList.generate(ActivationClassBuilder,MethodBuilder,ResultSetNode)
org.apache.derby.impl.sql.compile.ResultSetNode.getOptimizer(OptimizableList,OptimizablePredicateList,DataDictionary,RequiredRowOrdering)
org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths()
org.apache.derby.impl.sql.compile.SubqueryNode.generateExpression(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.TableOperatorNode.optimizeSource(Optimizer,ResultSetNode,PredicateList,CostEstimate)
