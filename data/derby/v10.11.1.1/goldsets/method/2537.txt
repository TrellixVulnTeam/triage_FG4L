org.apache.derby.iapi.services.io.ArrayUtil.readInts(ObjectInput)
org.apache.derby.iapi.services.io.ArrayUtil.toString(int[])
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.getColumnCollationIds(ColumnDescriptorList)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.indexChanged(int[])
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getColumnCollationIds()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getEmptyExecRow(ContextManager)
org.apache.derby.iapi.sql.ResultDescription.getColumnInfo()
org.apache.derby.iapi.store.access.BackingStoreHashtable.spillToDisk(Object[])
org.apache.derby.iapi.store.access.conglomerate.Conglomerate.addColumn(TransactionManager,int,Storable)
org.apache.derby.iapi.store.access.conglomerate.Conglomerate.addColumn(TransactionManager,int,Storable,int)
org.apache.derby.iapi.store.access.conglomerate.ConglomerateFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int)
org.apache.derby.iapi.store.access.conglomerate.ConglomerateFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],Properties,int)
org.apache.derby.iapi.store.access.conglomerate.TransactionManager.addPostCommitWork(Serviceable)
org.apache.derby.iapi.store.access.conglomerate.TransactionManager.checkVersion(int,int,String)
org.apache.derby.iapi.store.access.conglomerate.TransactionManager.getRawStoreXact()
org.apache.derby.iapi.store.access.DiskHashtable.DiskHashtable(TransactionController,DataValueDescriptor[],int[],boolean,boolean)
org.apache.derby.iapi.store.access.DiskHashtable.DiskHashtable(TransactionController,DataValueDescriptor[],int[],int[],boolean,boolean)
org.apache.derby.iapi.store.access.RowUtil.newClassInfoTemplate(FormatableBitSet,int[])
org.apache.derby.iapi.store.access.RowUtil.newRowFromClassInfoTemplateError()
org.apache.derby.iapi.store.access.RowUtil.newRowFromClassInfoTemplate(InstanceGetter[])
org.apache.derby.iapi.store.access.RowUtil.newRowFromTemplate(DataValueDescriptor[])
org.apache.derby.iapi.store.access.RowUtil.newTemplate(DataValueFactory,FormatableBitSet,int[],int[])
org.apache.derby.iapi.store.access.RowUtil.newTemplate(FormatableBitSet,int[])
org.apache.derby.iapi.store.access.TransactionController.addColumnToConglomerate(long,int,Storable)
org.apache.derby.iapi.store.access.TransactionController.addColumnToConglomerate(long,int,Storable,int)
org.apache.derby.iapi.store.access.TransactionController.createAndLoadConglomerate(String,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int,RowLocationRetRowSource,long[])
org.apache.derby.iapi.store.access.TransactionController.createAndLoadConglomerate(String,DataValueDescriptor[],ColumnOrdering[],Properties,int,RowLocationRetRowSource,long[])
org.apache.derby.iapi.store.access.TransactionController.createConglomerate(String,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int)
org.apache.derby.iapi.store.access.TransactionController.createConglomerate(String,DataValueDescriptor[],ColumnOrdering[],Properties,int)
org.apache.derby.iapi.store.access.TransactionController.recreateAndLoadConglomerate(String,boolean,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int,long,RowLocationRetRowSource,long[])
org.apache.derby.iapi.store.access.TransactionController.recreateAndLoadConglomerate(String,boolean,DataValueDescriptor[],ColumnOrdering[],Properties,int,long,RowLocationRetRowSource,long[])
org.apache.derby.iapi.store.raw.RawStoreFactory.getXactFactory()
org.apache.derby.iapi.store.raw.Transaction.getActiveStateTxIdString()
org.apache.derby.iapi.store.raw.Transaction.getDataValueFactory()
org.apache.derby.iapi.types.DataValueFactoryImpl.getNullDVDWithUCS_BASICcollation(int)
org.apache.derby.impl.db.BasicDatabase.boot(boolean,Properties)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.bootstrapOneIndex(SchemaDescriptor,TransactionController,DataDescriptorGenerator,TabInfoImpl,int,long)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.createConglomerate(String,TransactionController,ExecRow,Properties)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.widenConglomerate(ExecRow,int[],long,TransactionController)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.cleanupTempTableOnCommitOrRollback(TableDescriptor,boolean)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(boolean,boolean,int,boolean)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.addNewColumnToTable(Activation,int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.addNewColumnToTable(Activation,LanguageConnectionContext,DataDictionary,TransactionController,int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.AlterTableConstantAction(SchemaDescriptor,String,UUID,long,int,ColumnInfo[],ConstraintConstantAction[],char,boolean,int,boolean,boolean)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.compressTable(Activation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.dropColumnFromTable(Activation,int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.execGuts(Activation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.getAffectedIndexes(Activation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.getNextRowFromRowSource()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnDefault(Activation,int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.setUpAllSorts(ExecRow,RowLocation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.truncateTable(Activation)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateAllIndexes(long,DataDictionary)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateIndex(long,DataDictionary,int,long[])
org.apache.derby.impl.sql.execute.InsertResultSet.bulkInsertCore(LanguageConnectionContext,long)
org.apache.derby.impl.sql.execute.InsertResultSet.emptyIndexes(long,InsertConstantAction,TableDescriptor,DataDictionary,ExecRow)
org.apache.derby.impl.sql.execute.InsertResultSet.getTableScanResultSet(long)
org.apache.derby.impl.sql.execute.InsertResultSet.updateAllIndexes(long,InsertConstantAction,TableDescriptor,DataDictionary,ExecRow)
org.apache.derby.impl.sql.execute.MaterializedResultSet.getNextRowFromSource()
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insert(ExecRow)
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insertToPositionIndex(int,RowLocation)
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.isRowAlreadyExist(ExecRow)
org.apache.derby.impl.store.access.btree.BranchControlRow.getRowTemplate(OpenBTree)
org.apache.derby.impl.store.access.btree.BranchControlRow.shrinkFor(OpenBTree,DataValueDescriptor[])
org.apache.derby.impl.store.access.btree.BranchControlRow.splitFor(OpenBTree,DataValueDescriptor[],BranchControlRow,DataValueDescriptor[],int)
org.apache.derby.impl.store.access.btree.BranchRow.BranchRow()
org.apache.derby.impl.store.access.btree.BranchRow.BranchRow(BTree)
org.apache.derby.impl.store.access.btree.BranchRow.BranchRow(Transaction,BTree)
org.apache.derby.impl.store.access.btree.BranchRow.createEmptyTemplate(BTree)
org.apache.derby.impl.store.access.btree.BranchRow.createEmptyTemplate(Transaction,BTree)
org.apache.derby.impl.store.access.btree.BTreeController.doIns(DataValueDescriptor[])
org.apache.derby.impl.store.access.btree.BTreeController.load(TransactionManager,boolean,RowLocationRetRowSource)
org.apache.derby.impl.store.access.btree.BTree.createBranchTemplate(DataValueDescriptor)
org.apache.derby.impl.store.access.btree.BTree.createBranchTemplate(Transaction,DataValueDescriptor)
org.apache.derby.impl.store.access.btree.BTree.createTemplate()
org.apache.derby.impl.store.access.btree.BTree.createTemplate(Transaction)
org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeRowPosition,DataValueDescriptor[][],RowLocation[],BackingStoreHashtable,long,int[])
org.apache.derby.impl.store.access.btree.BTree.getDynamicCompiledConglomInfo(long)
org.apache.derby.impl.store.access.btree.BTreePostCommit.getShrinkKey(OpenBTree,ControlRow,int)
org.apache.derby.impl.store.access.btree.BTreeScan.init(TransactionManager,Transaction,boolean,int,int,BTreeLockingPolicy,FormatableBitSet,DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,BTree,LogicalUndo,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.btree.BTreeScan.next()
org.apache.derby.impl.store.access.btree.BTreeScan.savePosition()
org.apache.derby.impl.store.access.btree.BTreeScan.savePosition(Conglomerate,Page)
org.apache.derby.impl.store.access.btree.index.B2I.create(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int)
org.apache.derby.impl.store.access.btree.index.B2I.create(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],Properties,int)
org.apache.derby.impl.store.access.btree.index.B2I.estimateMemoryUsage()
org.apache.derby.impl.store.access.btree.index.B2I.getTypeFormatId()
org.apache.derby.impl.store.access.btree.index.B2I.localReadExternal(ObjectInput)
org.apache.derby.impl.store.access.btree.index.B2I.readExternal(ObjectInput)
org.apache.derby.impl.store.access.btree.index.B2I.readExternal_v36(ObjectInput)
org.apache.derby.impl.store.access.btree.index.B2IUndo.findUndo(Transaction,LogicalUndoable,LimitObjectInput)
org.apache.derby.impl.store.access.btree.index.B2I_v10_2.B2I_v10_2()
org.apache.derby.impl.store.access.btree.index.B2I.writeExternal(ObjectOutput)
org.apache.derby.impl.store.access.btree.index.B2I.writeExternal_v10_2(ObjectOutput)
org.apache.derby.impl.store.access.btree.index.B2I.writeExternal_v36(ObjectOutput)
org.apache.derby.impl.store.access.btree.OpenBTree.init(TransactionManager,TransactionManager,ContainerHandle,Transaction,boolean,int,int,BTreeLockingPolicy,BTree,LogicalUndo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(DataValueDescriptor[])
org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.createCollationIds(int,int[])
org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.readCollationIdArray(int[],ObjectInput)
org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.writeCollationIdArray(int[],ObjectOutput)
org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.writeFormatIdArray(int[],ObjectOutput)
org.apache.derby.impl.store.access.conglomerate.GenericScanController.doesCurrentPositionQualify()
org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchRows(DataValueDescriptor[][],RowLocation[],BackingStoreHashtable,long,int[])
org.apache.derby.impl.store.access.conglomerate.GenericScanController.positionAtInitScan(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,RowPosition)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.debugConglomerate()
org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.init(ContainerHandle,Conglomerate,int[],int[],TransactionManager,Transaction,boolean,int,int,LockingPolicy,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.init(ContainerHandle,Conglomerate,int[],TransactionManager,Transaction,boolean,int,int,LockingPolicy,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_row_for_export()
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_row_for_export(Transaction)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_scratch_row()
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_scratch_row(Transaction)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_template()
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_template(Transaction)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.init(FormatableBitSet)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.OpenConglomerateScratchSpace(int[])
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.OpenConglomerateScratchSpace(int[],int[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.allocate_objects(int,FormatableBitSet,int[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.allocate_objects(Transaction,int,FormatableBitSet,int[],int[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.checkColumnTypes(DataValueFactory,int[],int[],DataValueDescriptor[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.checkColumnTypes(int[],DataValueDescriptor[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.checkPartialColumnTypes(int[],FormatableBitSet,int[],DataValueDescriptor[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.newBranchRow(int[],DataValueDescriptor)
org.apache.derby.impl.store.access.conglomerate.TemplateRow.newBranchRow(Transaction,int[],int[],DataValueDescriptor)
org.apache.derby.impl.store.access.conglomerate.TemplateRow.newRow(DataValueDescriptor[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.newRow(FormatableBitSet,int[])
org.apache.derby.impl.store.access.conglomerate.TemplateRow.newRow(Transaction,FormatableBitSet,int[],int[])
org.apache.derby.impl.store.access.heap.Heap.compressConglomerate(TransactionManager,Transaction)
org.apache.derby.impl.store.access.heap.HeapCompressScan.fetchRowsForCompress(DataValueDescriptor[][],RowLocation[],RowLocation[])
org.apache.derby.impl.store.access.heap.HeapController.load(TransactionManager,Heap,boolean,RowLocationRetRowSource)
org.apache.derby.impl.store.access.heap.Heap.create(Transaction,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int,int)
org.apache.derby.impl.store.access.heap.Heap.create(Transaction,int,long,DataValueDescriptor[],Properties,int)
org.apache.derby.impl.store.access.heap.Heap.defragmentConglomerate(TransactionManager,Transaction,boolean,int,int,LockingPolicy,int)
org.apache.derby.impl.store.access.heap.Heap.openScan(TransactionManager,Transaction,boolean,int,int,LockingPolicy,int,FormatableBitSet,DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.heap.Heap.openStoreCost(TransactionManager,Transaction)
org.apache.derby.impl.store.access.heap.Heap.open(TransactionManager,Transaction,boolean,int,int,LockingPolicy,StaticCompiledOpenConglomInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.heap.Heap.purgeConglomerate(TransactionManager,Transaction)
org.apache.derby.impl.store.access.heap.Heap.readExternalFromArray(ArrayInputStream)
org.apache.derby.impl.store.access.heap.Heap_v10_2.Heap_v10_2()
org.apache.derby.impl.store.access.PropertyConglomerate.PropertyConglomerate(TransactionController,boolean,Properties,PropertyFactory)
org.apache.derby.impl.storeless.NoOpTransaction.getProperties()
org.apache.derby.impl.store.raw.data.LoggableAllocActions.actionCompressSpaceOperation(RawTransaction,BasePage,int,int)
org.apache.derby.impl.store.raw.RawStore.getMaxContainerId()
org.apache.derby.impl.store.raw.xact.InternalXact.InternalXact(XactFactory,LogFactory,DataFactory)
org.apache.derby.impl.store.raw.xact.InternalXact.InternalXact(XactFactory,LogFactory,DataFactory,DataValueFactory)
org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransaction(RawStoreFactory,ContextManager,boolean,CompatibilitySpace,String,String,boolean)
org.apache.derby.impl.store.raw.xact.XactFactory.startInternalTransaction(RawStoreFactory,ContextManager)
org.apache.derby.impl.store.raw.xact.XactFactory.startNestedTopTransaction(RawStoreFactory,ContextManager)
org.apache.derby.impl.store.raw.xact.Xact.getState()
org.apache.derby.impl.store.raw.xact.Xact.Xact(XactFactory,LogFactory,DataFactory,boolean,CompatibilitySpace)
org.apache.derby.impl.store.raw.xact.Xact.Xact(XactFactory,LogFactory,DataFactory,DataValueFactory,boolean,CompatibilitySpace)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.checkLangBasedQuery(Connection,String,String[][])
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.checkOneParamQuery(Connection,String,String,String[][])
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.checkSimpleCompare(Connection,int[])
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.checkTwoPersistentCompare(Connection,int[])
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.CollationTest2(String)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.doExportTable(Connection,String,String,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.doImportTable(Connection,String,String,String,String,String,String,int)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.dropTable(Connection)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.full_row_set(int[],int,int,boolean)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runAlterTableAddColumn(Connection,int)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runAlterTableCompress(Connection,int)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runAlterTableDropColumn(Connection,int)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runBulkInsert(Connection,int)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runQueries(Connection,int,String,String)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runTestIter(int)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.setUpTable(Connection)
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.suite()
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.testDefaultCollation()
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.testEnglishCollation()
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.testNorwayCollation()
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.testPolishCollation()
org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testOneVariant(TransactionController,boolean,DataValueDescriptor[],int[],DataValueDescriptor[][])
org.apache.derbyTesting.unitTests.store.T_AccessFactory.alterTable(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.commitTest(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.createAConglom(TransactionController,int,boolean)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.createBtree(TransactionController,long,boolean)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.dropTest(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.getTableProperties(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.insertAndFetchExample(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.insertAndUpdateExample(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.insert_bench(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.nestedUserTransaction(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.partialScan(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.readUncommitted(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.scanExample(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.scanInfo(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.sortCost(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.storeCost(TransactionController)
org.apache.derbyTesting.unitTests.store.T_AccessFactory.updatelocks_0(TransactionController,int)
org.apache.derbyTesting.unitTests.store.T_b2i.createCongloms(TransactionController,int,boolean,boolean,int,T_CreateConglomRet)
org.apache.derbyTesting.unitTests.store.T_b2i.t_003(TransactionController)
org.apache.derbyTesting.unitTests.store.T_b2i.t_010(TransactionController)
org.apache.derbyTesting.unitTests.store.T_b2i.t_014(TransactionController)
org.apache.derbyTesting.unitTests.store.T_b2i.t_017(TransactionController)
org.apache.derbyTesting.unitTests.store.T_b2i.t_018(TransactionController)
org.apache.derbyTesting.unitTests.store.T_b2i.t_019(TransactionController)
org.apache.derbyTesting.unitTests.store.T_QualifierTest.t_testqual(TransactionController)
org.apache.derbyTesting.unitTests.store.T_XA.XATest_1(commit_method)
org.apache.derbyTesting.unitTests.store.T_XA.XATest_2(commit_method)
org.apache.derbyTesting.unitTests.store.T_XA.XATest_3(commit_method)
org.apache.derbyTesting.unitTests.store.T_XA.XATest_4(commit_method)
org.apache.derbyTesting.unitTests.store.T_XA.XATest_5(commit_method)
org.apache.derbyTesting.unitTests.store.T_XA.XATest_6(commit_method)
