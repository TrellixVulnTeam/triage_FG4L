This is a chicken-and-egg problem between thread leak detection and failure detection rule. I have an idea how to fix this. It'd prevent cascading failures resulting from previous zombie thread errors, like this one:

http://builds.flonkings.com/job/Lucene-trunk-Linux-Java7-64-test-only/81259/consoleText



   [junit4] Tests with failures:
   [junit4]   - org.apache.lucene.codecs.lucene45.TestLucene45DocValuesFormat.testSortedSetVariableLengthVsUninvertedField
   [junit4]   - org.apache.lucene.codecs.lucene45.TestLucene45DocValuesFormat (suite)
   [junit4]   - org.apache.lucene.util.junitcompat.TestFailOnFieldCacheInsanity.testFailOnFieldCacheInsanity
   [junit4]   - org.apache.lucene.util.junitcompat.TestSystemPropertiesInvariantRule.testRuleInvariantBeforeClass
   [junit4]   - org.apache.lucene.util.junitcompat.TestSystemPropertiesInvariantRule.testRuleInvariantAfterClass
   [junit4]   - org.apache.lucene.util.junitcompat.TestSystemPropertiesInvariantRule.testRuleInvariantInTestMethod
   [junit4]   - org.apache.lucene.util.junitcompat.TestSystemPropertiesInvariantRule.testNonStringProperties
   [junit4]   - org.apache.lucene.util.junitcompat.TestLeaveFilesIfTestFails.testLeaveFilesIfTestFails

