<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:03:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2073/LUCENE-2073.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LUCENE-2073] Document issues involved in building your index with one jdk version and then searching/updating with another</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2073</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                    <description>&lt;p&gt;I think this needs to go in something of a permenant spot - this isn&apos;t a one time release type issues - its going to present over multiple release.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If there is nothing we can do here, then we just have to do the best we can -&lt;br/&gt;
such as a prominent notice alerting that if you transition JVM&apos;s between building and searching the index and you are using or doing X, things will break.&lt;/p&gt;

&lt;p&gt;We should put this in a spot that is always pretty visible - perhaps even a new readme file titlted something like IndexBackwardCompatibility or something, to which we can add other tips and gotchyas as they come up. Or MaintainingIndicesAcrossVersions, or FancyWhateverGetsYourAttentionAboutUpgradingStuff. Or a permanent entry/sticky entry at the top of Changes.&lt;/p&gt;&lt;/blockquote&gt;</description>
                <environment></environment>
        <key id="12440857">LUCENE-2073</key>
            <summary>Document issues involved in building your index with one jdk version and then searching/updating with another</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="rcmuir">Robert Muir</assignee>
                                    <reporter username="markrmiller@gmail.com">Mark Miller</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 Nov 2009 21:10:55 +0000</created>
                <updated>Wed, 16 Apr 2014 13:54:50 +0100</updated>
                                                            <fixVersion>4.9</fixVersion>
                    <fixVersion>Trunk</fixVersion>
                                    <component>core/index</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12778547" author="rcmuir" created="Mon, 16 Nov 2009 21:16:42 +0000"  >&lt;p&gt;Mark, I agree, there are two issues I know of:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;using a new java version can change unicode version, which changes character properties, which makes things tokenize differently.&lt;/li&gt;
	&lt;li&gt;using a different default locale can change at least some things in contrib, for example PatternAnalyzer uses a Locale-based toLowerCase() method, which will break if default locale is different between index and search.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;... &amp;lt;other things you can think of&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12778815" author="thetaphi" created="Tue, 17 Nov 2009 10:44:56 +0000"  >&lt;p&gt;How about adding a general note into some JRE_VERSION_MIGRATION.txt on each release, also add this to the non-version specific site docs?&lt;br/&gt;
The first version that would contain it in the distribution would be 3.0, but it should be noted on the site-docs, that this affects &lt;b&gt;all&lt;/b&gt; versions. Something like &quot;whenever you change JRE major versions 1.4 -&amp;gt; 1.5 -&amp;gt; 1.6 -&amp;gt; 1.7 you may have to reindex, because the underlying VM&apos;s Unicode version could have changed in a way, affecting your tokenizers.&quot;&lt;/p&gt;</comment>
                            <comment id="12778862" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 13:22:42 +0000"  >&lt;p&gt;Sounds good to me.&lt;/p&gt;</comment>
                            <comment id="12778875" author="creamyg" created="Tue, 17 Nov 2009 13:43:15 +0000"  >&lt;p&gt;Which components are affected by this?  I think just Analyzers and query&lt;br/&gt;
parsers, yes?&lt;/p&gt;

&lt;p&gt;If that&apos;s true, my inclination would be to add a note to the javadocs for each&lt;br/&gt;
such class. In every case, it&apos;s theoretically possible to build alternative&lt;br/&gt;
implementations which are unaffected by upgrading the JVM.  &lt;/p&gt;

&lt;p&gt;This isn&apos;t a fundamental problem with the Lucene architecture; it&apos;s an&lt;br/&gt;
artifact of the way certain classes are implemented.  Outside of the affected&lt;br/&gt;
components, Lucene doesn&apos;t get down and dirty with Unicode properties and&lt;br/&gt;
other fast-moving stuff &amp;#8211; it&apos;s just dealing in UTF-8 bytes, Java strings,&lt;br/&gt;
etc.  Those things can change (Modified UTF-8, shudder), but they move on a&lt;br/&gt;
slower timescale.&lt;/p&gt;

&lt;p&gt;Arguably, Analyzer subclasses shouldn&apos;t be in core for reasons like this.&lt;br/&gt;
Perhaps there could be an &quot;ICUAnalysis&quot; package which depends on ICU4J, so&lt;br/&gt;
that Unicode-related index incompatibilites occur when you upgrade your&lt;br/&gt;
Unicode library.  Though most people would probably choose to use the&lt;br/&gt;
smaller-footprint, zero-dependency &quot;JVMAnalysis&quot; package, where reindexing&lt;br/&gt;
would be required after a JVM upgrade.&lt;/p&gt;

&lt;p&gt;The software certifiers wouldn&apos;t like that, and I&apos;m not seriously advocating&lt;br/&gt;
such a disruptive change (yet), but I just wanted to illustrate that this is a&lt;br/&gt;
contained problem.&lt;/p&gt;
</comment>
                            <comment id="12778880" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 13:49:17 +0000"  >&lt;blockquote&gt;&lt;p&gt; If that&apos;s true, my inclination would be to add a note to the javadocs for each&lt;br/&gt;
such class. In every case, it&apos;s theoretically possible to build alternative&lt;br/&gt;
implementations which are unaffected by upgrading the JVM. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think thats a good idea, but I&apos;d still like the top level warning as well - I think it should be specific in explaining the problem, and not claim that it exists for everything - Robert has already laid out a couple specific examples we can mention. The problem with the javadoc approach only is that its very easy to miss - I think its a good place to lay out the details for that particular class - but it would still be great to have a visible top level warning so that users know to be careful of this.&lt;/p&gt;</comment>
                            <comment id="12778882" author="rcmuir" created="Tue, 17 Nov 2009 13:51:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;Which components are affected by this? I think just Analyzers and query parsers, yes? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think just tokenstreams / analyzers.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This isn&apos;t a fundamental problem with the Lucene architecture; it&apos;s an artifact of the way certain classes are implemented.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes, you are exactly right. StandardTokenizer does not have this problem. its behavior is independent of the users JVM, although dependent on the JVM of the developer who last re-ran jflex &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Perhaps there could be an &quot;ICUAnalysis&quot; package which depends on ICU4J&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yeah, this is what I think most of us who need unicode support do anyway. so i tried to start a good impl of this in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1488&quot; title=&quot;multilingual analyzer based on icu&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-1488&quot;&gt;&lt;del&gt;LUCENE-1488&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
even if you do not care about unicode support, maybe you care that things like .isWhiteSpace() are faster than in the jdk:&lt;br/&gt;
&lt;a href=&quot;http://site.icu-project.org/home/why-use-icu4j&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://site.icu-project.org/home/why-use-icu4j&lt;/a&gt; (see under Performance section).&lt;/p&gt;
</comment>
                            <comment id="12778886" author="rcmuir" created="Tue, 17 Nov 2009 14:05:02 +0000"  >&lt;p&gt;Hello, whereever we put this text (i do not care), I thought the following would be a start.&lt;/p&gt;

&lt;p&gt;please help me make it easier to digest/understand&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;If possible, use the same major JVM version at both index and search time.
Different JVM versions may implement different versions of the Unicode Standard, which will change the way Lucene treats your text.
For example, under Java 1.4, LetterTokenizer will split around the character U+02C6, but under Java 5 it will not.
This is because Java 1.4 implements Unicode 3, but Java 5 implements Unicode 4.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12778890" author="rcmuir" created="Tue, 17 Nov 2009 14:12:40 +0000"  >&lt;p&gt;I guess that warning still isnt good enough. if you bump jvm version you should reindex older data too, and not just add new documents to it...&lt;/p&gt;</comment>
                            <comment id="12778948" author="rcmuir" created="Tue, 17 Nov 2009 15:47:50 +0000"  >&lt;p&gt;i tried to improve the wording a bit.&lt;/p&gt;</comment>
                            <comment id="12778955" author="rcmuir" created="Tue, 17 Nov 2009 16:02:55 +0000"  >&lt;p&gt;ok, i think this one is better.&lt;br/&gt;
For convenience, I list which JRE versions correspond to which unicode versions.&lt;/p&gt;

&lt;p&gt;Because I think that for example, if someone goes from Java 5 to Java 6, they should not worry about this.&lt;/p&gt;</comment>
                            <comment id="12778998" author="creamyg" created="Tue, 17 Nov 2009 17:25:05 +0000"  >&lt;p&gt;I like this:&lt;/p&gt;

&lt;p&gt;&amp;gt; some parts of Lucene&lt;/p&gt;

&lt;p&gt;... but I still think the message is a little too aggressive.  There are a lot&lt;br/&gt;
of people just using ye olde StandardAnalyzer, and they don&apos;t need to reindex.&lt;br/&gt;
We don&apos;t need to spread our own FUD. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Can we change it to say &quot;Analyzers&quot;, and then refer people to the docs for&lt;br/&gt;
their specific Analyzer?  Alternatively, should that notification just contain&lt;br/&gt;
a complete list of the affected classes?&lt;/p&gt;</comment>
                            <comment id="12778999" author="rcmuir" created="Tue, 17 Nov 2009 17:29:00 +0000"  >&lt;p&gt;Hi Marvin, thanks for reviewing it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;... but I still think the message is a little too aggressive. There are a lot&lt;br/&gt;
of people just using ye olde StandardAnalyzer, and they don&apos;t need to reindex.&lt;br/&gt;
We don&apos;t need to spread our own FUD. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;are you sure? StandardAnalyzer uses LowerCaseFilter, i did not check to see if any casing properties have changed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Can we change it to say &quot;Analyzers&quot;, and then refer people to the docs for&lt;br/&gt;
their specific Analyzer? Alternatively, should that notification just contain&lt;br/&gt;
a complete list of the affected classes?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Basically I am trying to be ambiguous, because I&apos;m not sure what all is affected without doing some significant analysis!&lt;br/&gt;
I will do this, if its the right thing though.&lt;/p&gt;</comment>
                            <comment id="12779000" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 17:29:05 +0000"  >&lt;p&gt;Agreed - we don&apos;t want to cause those that don&apos;t need to to reindex just to try and be safe.&lt;/p&gt;</comment>
                            <comment id="12779004" author="rcmuir" created="Tue, 17 Nov 2009 17:36:02 +0000"  >&lt;p&gt;Mark, but here is the crux of the issue:&lt;/p&gt;

&lt;p&gt;While i think casing property is normative and should not change, new characters can be introduced with new casing properties.&lt;br/&gt;
This of course should not affect Simple/StopAnalyzer, but may affect StandardAnalyzer.&lt;/p&gt;

&lt;p&gt;The reason is that StandardTokenizer contains hardcoded (sometimes oversized) ranges that may include some characters that were previously unassigned in Unicode 3.&lt;br/&gt;
If they are assigned in Unicode 4, with a casing property, then this means for lucene, they were indexed in uppercase in 1.4 but lowercase in 1.5... i hope this makes sense.&lt;/p&gt;</comment>
                            <comment id="12779006" author="creamyg" created="Tue, 17 Nov 2009 17:41:26 +0000"  >&lt;p&gt;&amp;gt; are you sure? StandardAnalyzer uses LowerCaseFilter,&lt;/p&gt;

&lt;p&gt;No, I&apos;m not sure.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I was confusing StandardAnalyzer and StandardTokenizer.&lt;/p&gt;

&lt;p&gt;I still think that there are a lot of people who don&apos;t need to reindex,&lt;br/&gt;
because, for example, their entire corpus is limited to Latin-1 code points. &lt;/p&gt;

&lt;p&gt;Conversely, the people most likely to be affected are the people most likely&lt;br/&gt;
to be on the lookout for this kind of think.  I think it&apos;s important to&lt;br/&gt;
reach this group, without unduly alarming those who don&apos;t really need to&lt;br/&gt;
reindex.  Reindexing is a huge pain for some installations.&lt;/p&gt;</comment>
                            <comment id="12779010" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 17:45:43 +0000"  >&lt;p&gt;Okay, fair enough - in the end I do think we want to err on the side of caution - losing terms/docs in the index can be disastrous for some. Can we contain the statement at all though? What if you are just working with essentially ascii text? Basic English chars? That type of thing ... perhaps saying something to the effect of, in many/some cases, a user might not be affected, but if you need to be sure, you must reindex?&lt;/p&gt;</comment>
                            <comment id="12779011" author="rcmuir" created="Tue, 17 Nov 2009 17:47:37 +0000"  >&lt;p&gt;I am pretty sure StandardAnalyzer is ok actually now.&lt;br/&gt;
The only time it uses hardcoded ranges is for the CJK definition:&lt;br/&gt;
and the following UnicodeSet is the empty set (0 codepoints):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[[\u3100-\u312f\u3040-\u309F\u30A0-\u30FF\u31F0-\u31FF\u3300-\u337f\u3400-\u4dbf\u4e00-\u9fff\uf900-\ufaff\uff65-\uff9f]&amp;amp;[:Case_Sensitive=True:]]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;WikipediaTokenizer, probably not ok &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12779012" author="rcmuir" created="Tue, 17 Nov 2009 17:52:05 +0000"  >&lt;p&gt;Mark good point, if you are using &quot;Basic Latin&quot; as exists on your keyboard, you might be ok.&lt;/p&gt;

&lt;p&gt;Of course, one never knows, I feel like i remember Microsoft Word creating strange hyphens and smart quotes automatically... &lt;/p&gt;

&lt;p&gt;I&apos;d love to contain it, if you have some suggested verbage lets put it in there.&lt;/p&gt;</comment>
                            <comment id="12779015" author="creamyg" created="Tue, 17 Nov 2009 17:54:24 +0000"  >&lt;p&gt;&amp;gt; I am pretty sure StandardAnalyzer is ok actually now.&lt;/p&gt;

&lt;p&gt;Good news!  Thanks for performing that analysis.&lt;/p&gt;</comment>
                            <comment id="12779018" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 18:01:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;if you are using &quot;Basic Latin&quot; as exists on your keyboard, you might be ok.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Heh - well if thats the strongest you would say that, sounds like its not very containable. Perhaps we just put that?&lt;/p&gt;


&lt;p&gt;&lt;b&gt;edit&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Yes, word def uses a couple funky things by default with hyphens and quotes - ran into that before. But I think its somewhat up to you to know that. If you are getting your text from another application, than you don&apos;t likely properly know you have latin1 stuff. But some people will know - in the newspaper biz, we use pre processing filters to map anything outside of latin1 to latin1 - else remove it. If you don&apos;t know your source text well enough, then yes, all bets are off.&lt;/p&gt;</comment>
                            <comment id="12779020" author="rcmuir" created="Tue, 17 Nov 2009 18:04:27 +0000"  >&lt;blockquote&gt;
&lt;p&gt;&amp;gt; I am pretty sure StandardAnalyzer is ok actually now.&lt;/p&gt;

&lt;p&gt;Good news! Thanks for performing that analysis.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Doh! this case pair stability policy was not introduced until 5.0, so to validate, i must do further analysis&lt;br/&gt;
ref: &quot;unicode back compat policy&quot;: &lt;a href=&quot;http://www.unicode.org/policies/stability_policy.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.unicode.org/policies/stability_policy.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12779023" author="thetaphi" created="Tue, 17 Nov 2009 18:05:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Of course, one never knows, I feel like i remember Microsoft Word creating strange hyphens and smart quotes automatically... &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is the same strange soft hyphen we talked about before... Normally you should simply remove it during indexing using a CharFilter (I do this when indexing word documents and so on).&lt;/p&gt;</comment>
                            <comment id="12779030" author="rcmuir" created="Tue, 17 Nov 2009 18:30:02 +0000"  >&lt;p&gt;Hi, I completely validated. StandardAnalyzer is ok. none of the casing changed for any previous &lt;span class=&quot;error&quot;&gt;&amp;#91;:letter:&amp;#93;&lt;/span&gt; characters from Unicode 3 in Unicode 4.&lt;/p&gt;

&lt;p&gt;I&apos;ll work on adding more explanation&lt;/p&gt;
</comment>
                            <comment id="12779035" author="rcmuir" created="Tue, 17 Nov 2009 18:41:40 +0000"  >&lt;p&gt;very happy to add new verbage here mentioning that StandardAnalyzer is ok.&lt;/p&gt;</comment>
                            <comment id="12779038" author="rcmuir" created="Tue, 17 Nov 2009 18:48:10 +0000"  >&lt;p&gt;the crappy test script i wrote to confirm the lowercasing behavior.&lt;br/&gt;
maybe we need it again if we go to java 1.7 in this decade, or maybe i screwed something up &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12779043" author="thetaphi" created="Tue, 17 Nov 2009 18:55:28 +0000"  >&lt;p&gt;Text looks good, maybe we should still add the &quot;basic latin as on your keyboard&quot;.&lt;/p&gt;</comment>
                            <comment id="12779049" author="rcmuir" created="Tue, 17 Nov 2009 19:03:53 +0000"  >&lt;p&gt;Uwe, ok, I am currently trying to come up with a way to word this.&lt;/p&gt;

&lt;p&gt;Unknowns like the soft hyphen thing and other things word processors, etc might do make me really cautious to say something like this...&lt;br/&gt;
I don&apos;t want someone to unnecessarily reindex, but on the other hand, I don&apos;t want to see bug report or whatever either.&lt;/p&gt;</comment>
                            <comment id="12779056" author="rcmuir" created="Tue, 17 Nov 2009 19:14:37 +0000"  >&lt;p&gt;i added the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In general, whether or not you need to re-index largely depends upon the data that&lt;br/&gt;
you are searching, and what was changed in any given Unicode version. For example,&lt;br/&gt;
if you are completely sure that your content is limited to the &quot;Basic Latin&quot; range&lt;br/&gt;
of Unicode, you can safely ignore this.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="12779078" author="rcmuir" created="Tue, 17 Nov 2009 19:38:48 +0000"  >&lt;p&gt;guys I would like to commit this file soon, let me know if you see any issues with it.&lt;/p&gt;

&lt;p&gt;I think this additional verbage i added about &quot;basic latin&quot; is safe, the only properties that have changed even up to unicode 5.1 are minor changes to bidirectional properties.&lt;br/&gt;
This only affects rendering/layout.&lt;/p&gt;</comment>
                            <comment id="12779083" author="thetaphi" created="Tue, 17 Nov 2009 19:52:45 +0000"  >&lt;p&gt;+1, ok&lt;/p&gt;</comment>
                            <comment id="12779086" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 19:56:40 +0000"  >&lt;p&gt;Looks great! +1&lt;/p&gt;</comment>
                            <comment id="12779094" author="rcmuir" created="Tue, 17 Nov 2009 20:09:09 +0000"  >&lt;p&gt;Committed revision 881466.&lt;/p&gt;

&lt;p&gt;should we keep the issue open Mark, or close it?&lt;br/&gt;
I think we will potentially have some specialized problems in 3.1 also... (due to fixing unicode 4/suppl characters)&lt;/p&gt;</comment>
                            <comment id="12779096" author="markrmiller@gmail.com" created="Tue, 17 Nov 2009 20:13:24 +0000"  >&lt;p&gt;Okay - popped it to 3.1 to ensure we look at this again.&lt;/p&gt;</comment>
                            <comment id="12779098" author="rcmuir" created="Tue, 17 Nov 2009 20:17:57 +0000"  >&lt;p&gt;Cool, we can do something similar in 3.1 &lt;/p&gt;

&lt;p&gt;While it seems crazy, like these issues affect no one, someone told me today about relying upon broken unicode 4 behavior in lucene for chinese tokenization....!&lt;/p&gt;</comment>
                            <comment id="13292101" author="hossman" created="Sat, 9 Jun 2012 00:49:30 +0100"  >&lt;p&gt;rmuir already wrote a doc on this back in 2009, not sure why it was the jira was left open.&lt;/p&gt;

&lt;p&gt;rmuir: can you resolve if you think we&apos;re good here, or update with what you think is still needed otherwise?&lt;/p&gt;</comment>
                            <comment id="13412294" author="hossman" created="Thu, 12 Jul 2012 00:03:44 +0100"  >&lt;p&gt;bulk cleanup of 4.0-ALPHA / 4.0 Jira versioning. all bulk edited issues have hoss20120711-bulk-40-change in a comment&lt;/p&gt;</comment>
                            <comment id="13429693" author="rcmuir" created="Tue, 7 Aug 2012 04:41:18 +0100"  >&lt;p&gt;rmuir20120906-bulk-40-change&lt;/p&gt;</comment>
                            <comment id="13554263" author="steve_rowe" created="Tue, 15 Jan 2013 20:11:46 +0000"  >&lt;p&gt;AFAICT, &lt;tt&gt;lucene/JRE_VERION_MIGRATION.txt&lt;/tt&gt; doesn&apos;t need any modifications for the 4.1 release.&lt;/p&gt;</comment>
                            <comment id="13716987" author="steve_rowe" created="Tue, 23 Jul 2013 19:44:33 +0100"  >&lt;p&gt;Bulk move 4.4 issues to 4.5 and 5.0&lt;/p&gt;</comment>
                            <comment id="13970897" author="thetaphi" created="Wed, 16 Apr 2014 13:54:50 +0100"  >&lt;p&gt;Move issue to Lucene 4.9.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12425249" name="LUCENE-2073.patch" size="2017" author="rcmuir" created="Tue, 17 Nov 2009 19:14:37 +0000"/>
                            <attachment id="12425245" name="LUCENE-2073.patch" size="1721" author="rcmuir" created="Tue, 17 Nov 2009 18:41:40 +0000"/>
                            <attachment id="12425231" name="LUCENE-2073.patch" size="1020" author="rcmuir" created="Tue, 17 Nov 2009 16:02:55 +0000"/>
                            <attachment id="12425228" name="LUCENE-2073.patch" size="856" author="rcmuir" created="Tue, 17 Nov 2009 15:47:50 +0000"/>
                            <attachment id="12425246" name="stdAnalyzerTest.java" size="1722" author="rcmuir" created="Tue, 17 Nov 2009 18:48:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Nov 2009 21:16:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2915</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Lucene Fields</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxynkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25970</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>