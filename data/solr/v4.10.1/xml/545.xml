<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:21:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-545/SOLR-545.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-545] remove MultiCore &quot;default&quot; core / cleanup DispatchHandler</title>
                <link>https://issues.apache.org/jira/browse/SOLR-545</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;MultiCore should require a core name in the URL.  If the core name is missing, there should be a 404, not a valid core.  That is:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/select?q=*:*&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=*:*&lt;/a&gt;  should return 404.&lt;/p&gt;

&lt;p&gt;While we are at it, we should cleanup the DispatchHandler.  Perhaps the best approach is to treat single core as multicore with only one core?  As is the tangle of potential paths is ugly.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12394490">SOLR-545</key>
            <summary>remove MultiCore &quot;default&quot; core / cleanup DispatchHandler</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryantxu">Ryan McKinley</assignee>
                                    <reporter username="ryantxu">Ryan McKinley</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Apr 2008 01:36:40 +0100</created>
                <updated>Fri, 10 May 2013 11:38:44 +0100</updated>
                            <resolved>Thu, 14 Aug 2008 19:55:49 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12602839" author="klaasm" created="Fri, 6 Jun 2008 00:09:05 +0100"  >&lt;p&gt;assigning 1.3 multicore stuff to Ryan&lt;/p&gt;</comment>
                            <comment id="12620041" author="yseeley@gmail.com" created="Tue, 5 Aug 2008 22:08:25 +0100"  >&lt;blockquote&gt;&lt;p&gt;Perhaps the best approach is to treat single core as multicore with only one core?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12620078" author="henrib" created="Tue, 5 Aug 2008 23:53:46 +0100"  >&lt;p&gt;Not knowing how advanced Ryan is on solving the whole issue, I might be completely off-base...&lt;/p&gt;

&lt;p&gt;As far as I remember, we had a &quot;default&quot; attribute that could be applied to one core (in the multicore case); this part is gone.&lt;br/&gt;
The current SolrDispatchFilter behavior is to let the filter chain handle any URL that is not a request that solr can recognize as valid. We may add as a default that the chain ends in 404 in the &apos;unhandlable&apos; case but that default fall through behavior should remain opened/overridable (multiple core spanning/joining requests could be handled in another filter for instance). &lt;/p&gt;

&lt;p&gt;If we treat single core as multicore with only one core AND there is no default core:&lt;br/&gt;
The current test for what would be that &quot;single-core&quot; multicore situation looks like (multicore == null || multicore.isEnabled() == false); the ability to let users derive MultiCore (for serialization purpose at least) and  let them allocate it (through SolrDispatchFilter.initMultiCore()) should be kept (we are trying to avoid reintroducing a singleton here).&lt;br/&gt;
 If so &amp;amp; as is, this &quot;single-core&quot; multicore can not (should not be able to?) create new cores (nor can it swap cores since it can&apos;t create a new one) and probably should not attempt to read the multicore.properties (by-product of solr-646); this implies some new checks must be performed at the multicore level &amp;amp; dealing with a &apos;null&apos; core name will still have to be considered &amp;amp; tested.&lt;br/&gt;
The risk - with my current understanding/knowledge - does not seem worth the (shallow) gain.&lt;/p&gt;

&lt;p&gt;Back to the issue description:&lt;br/&gt;
&quot;MultiCore should require a core name in the URL; If the core name is missing, there should be a 404&quot;: +1 as long as this can be changed (&quot;not a valid core&quot; is already out of the equation)&lt;br/&gt;
&quot;...treat single core as multicore with only one core? As is the tangle of potential paths is ugly..&quot;: although the code is more complex than we&apos;d like (at least the SolrDispatchFilter code), it is fairly well documented and I&apos;m not completely sure there is a lot to gain (considering the null core name &amp;amp; 1.3 delays and that the simplest action could be to deprecate &quot;single core&quot; altogether). So, -1&lt;/p&gt;</comment>
                            <comment id="12620250" author="henrib" created="Wed, 6 Aug 2008 14:47:55 +0100"  >&lt;p&gt;About the fall-through behavior of the filter, the default/example Jetty configuration still declares the (deprecated) servlet.&lt;br/&gt;
The net effect is that hitting &apos;http://.../select&apos; (instead of &lt;a href=&quot;http://.../corename/select&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://.../corename/select&lt;/a&gt;&apos;) still works since the servlet will use the SolrCore.getCore() to find a core.&lt;/p&gt;

&lt;p&gt;As a tentative workaround, this small patch introduces the SolrDispatchFilter &apos;strict&apos; parameter.&lt;br/&gt;
If &apos;strict&apos; is set to true, the filter will not fall through the chain and thus disallow any other filter/servlet to handle the request.&lt;br/&gt;
By default, if unspecified, the filter is &apos;strict&apos; in multicore and lenient (not strict) in &apos;single core&apos;.&lt;/p&gt;</comment>
                            <comment id="12620524" author="henrib" created="Thu, 7 Aug 2008 08:02:29 +0100"  >&lt;p&gt;The SolrDispatchFilter (&amp;amp; EmbeddedSolrServer) need to protect against core closing while queries are executing.&lt;/p&gt;</comment>
                            <comment id="12620590" author="henrib" created="Thu, 7 Aug 2008 11:35:35 +0100"  >&lt;p&gt;New version of the patch integrates solr-647 (ref counting for SolrCore) &amp;amp; modifies SolrDispatchFilter/EmbeddedSolrServer to protect running queries.&lt;br/&gt;
Also fixes the &apos;strict&apos; filter parameter that was not properly consumed if set though the web.xml.&lt;/p&gt;</comment>
                            <comment id="12620616" author="yseeley@gmail.com" created="Thu, 7 Aug 2008 14:06:22 +0100"  >&lt;p&gt;It seems like this type of reference counting still has a race (either that, or it&apos;s a form of  optimistic locking that must be re-tried in a loop which is currently missing from the code).&lt;/p&gt;

&lt;p&gt;Could this be simplified?&lt;br/&gt;
SolrCore has a refCount... simply increment it in MultiCore (while in the sync block anyway) and decrement it on a SolrCore.release().... the SolrCore.Reference class wouldn&apos;t be needed.&lt;/p&gt;</comment>
                            <comment id="12620771" author="henrib" created="Thu, 7 Aug 2008 23:07:15 +0100"  >&lt;p&gt;Revisited version with latest version of solr-647 included in.&lt;/p&gt;

&lt;p&gt;Regarding ref-counting, the SolrCore.Reference now delegates most of the real work to SolrCore; it&apos;s only a convenience class that makes it easy &lt;b&gt;not&lt;/b&gt; to forget to close.&lt;br/&gt;
The locking code is the following &amp;amp; I believe it does not allow race conditions:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SolrCore open() {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count;
    &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
      count = refCount.get();
      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; core can not be acquired since it is clos{ed,ing}
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt;= 0)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!refCount.compareAndSet(count, count + 1));
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close() {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count;
    &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
      count = refCount.get();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt;= 0)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!refCount.compareAndSet(count, count - 1));
    &lt;span class=&quot;code-comment&quot;&gt;// the count must be 1 which is the value at creation time
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; count &amp;lt;= 0, we&apos;ve already closed it
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; count &amp;gt; 1, we must not close it
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count != 1) {
      &lt;span class=&quot;code-comment&quot;&gt;//log.fine(logid+&lt;span class=&quot;code-quote&quot;&gt;&quot; CLOSING SolrCore postponed, refcount: &quot;&lt;/span&gt; + (count - 1));
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
    }
    log.info(logid+&lt;span class=&quot;code-quote&quot;&gt;&quot; CLOSING SolrCore now!&quot;&lt;/span&gt;);
   &lt;span class=&quot;code-comment&quot;&gt;// ...perform real close....
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12620958" author="yseeley@gmail.com" created="Fri, 8 Aug 2008 16:33:52 +0100"  >&lt;blockquote&gt;&lt;p&gt;The locking code is the following &amp;amp; I believe it does not allow race conditions:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, but as I said, it does allow the failure to aquire, and thus client code (DispatchFilter) would need to poll or something.&lt;/p&gt;</comment>
                            <comment id="12620995" author="henrib" created="Fri, 8 Aug 2008 19:05:20 +0100"  >&lt;p&gt;Took me some time to understand, sorry Yonik.&lt;br/&gt;
There was a &quot;hole&quot; between finding a core and acquiring it.&lt;br/&gt;
I hope I got it right this time...&lt;/p&gt;</comment>
                            <comment id="12621124" author="ryantxu" created="Sat, 9 Aug 2008 08:27:03 +0100"  >&lt;p&gt;Henri - thanks for your help on this.... a couple comments.&lt;/p&gt;

&lt;p&gt;It would be nice to keep solr-647 as in independent issue.  I would rather have Yonik verify all the ref counted stuff.&lt;/p&gt;

&lt;p&gt;I&apos;m not a big fan of adding the &apos;strict&apos; parameter to web.xml &amp;#8211; the behavior should be well defined simply from the external configs (multicore(solr).xml / solrconfig.xml) &lt;/p&gt;

&lt;p&gt;Currently, I see two problems with the RequestDispatcher:&lt;/p&gt;

&lt;p&gt;1. it has a lot of crazy path checking&lt;br/&gt;
2. It has incorrect behavior for /select and /admin/ in a &quot;multicore&quot; environment&lt;/p&gt;

&lt;p&gt;The attached patch only helps with #2 and does not make #1 worse &amp;#8211;  In the deprecated SolrServlet, it checks the existance of multicore.xml (soon to be solr.xml) and throws an error if it exists.  For the /admin side, we throw an error if the DispatchFilter does not set the core&lt;/p&gt;</comment>
                            <comment id="12621187" author="yseeley@gmail.com" created="Sat, 9 Aug 2008 21:59:34 +0100"  >&lt;p&gt;I&apos;ve not fully diciphered the dispatch filter, but my first thought was that multi-core could always be there (no enabled/disabled).&lt;br/&gt;
The only difference could be in the DispatchFilter which if a core of name &quot;&quot; exists, it uses paths w/o a core name and the other cores would be unreachable. That would enable core reloading, etc, for the single-core scenario.&lt;/p&gt;</comment>
                            <comment id="12621190" author="henrib" created="Sat, 9 Aug 2008 22:37:53 +0100"  >&lt;p&gt;Ryan, glad  I could. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;On solr-647, or more precisely &quot;The SolrDispatchFilter (&amp;amp; EmbeddedSolrServer) need to protect against core closing while queries are executing&quot;, should we then create another specific issue (solved in the 1.3 timeframe) ?&lt;/p&gt;

&lt;p&gt;On solr-545 itself, I agree your solution is better &amp;amp; simpler than introducing the &apos;strict&apos; parameter.&lt;br/&gt;
One comment, shouldn&apos;t the deprecated servlet check for the existence of the &apos;org.apache.solr.MultiCore&apos; request attribute though?&lt;br/&gt;
You can instantiate multicore in other/derived ways through the servlet filter &amp;amp; could still inadvertently go through the servlet.&lt;/p&gt;

&lt;p&gt;On the &quot;crazy path checking&quot;, I&apos;m currently trying to refactor/merge SolrDipatchFilter &amp;amp; EmbeddedSolrServer to both derive from one &quot;SolrFilter&quot; .&lt;br/&gt;
Tell me if  this is a bad idea or if this should be also another issue (that could be fixed later than 1.3).&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</comment>
                            <comment id="12621195" author="henrib" created="Sat, 9 Aug 2008 23:17:59 +0100"  >&lt;p&gt;Yonik,&lt;br/&gt;
Good catch!&lt;br/&gt;
I&apos;m gonna give it a try.&lt;/p&gt;</comment>
                            <comment id="12621316" author="ryantxu" created="Sun, 10 Aug 2008 23:35:19 +0100"  >&lt;p&gt;I just committed &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-545&quot; title=&quot;remove MultiCore &amp;quot;default&amp;quot; core / cleanup DispatchHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-545&quot;&gt;&lt;del&gt;SOLR-545&lt;/del&gt;&lt;/a&gt;-path-access.patch &amp;#8211; that should fix the behavior when things fall through to /admin/ or /select (via the SolrServlet)&lt;/p&gt;

&lt;p&gt;We still need to clean up the DispatchFilter path &amp;#8211; henri, i like the idea of a single code path for SolrDipatchFilter &amp;amp; EmbeddedSolrServer&lt;/p&gt;</comment>
                            <comment id="12621337" author="larsko" created="Mon, 11 Aug 2008 02:54:59 +0100"  >&lt;p&gt;Throwing an exception in the JSP causes the error page to look like an error page that&apos;s generated when the JSP can&apos;t be compiled. This might be confusing and should probably be replaced with a &quot;nicer&quot; error page.&lt;/p&gt;</comment>
                            <comment id="12621339" author="ryantxu" created="Mon, 11 Aug 2008 03:02:20 +0100"  >&lt;p&gt;how about:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--- src/webapp/web/admin/_info.jsp	(revision 684615)
+++ src/webapp/web/admin/_info.jsp	(working copy)
@@ -29,7 +29,8 @@
   &lt;span class=&quot;code-comment&quot;&gt;// 
&lt;/span&gt;   SolrCore  core = (SolrCore) request.getAttribute(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.SolrCore&quot;&lt;/span&gt;);
   &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (core == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SolrException( SolrException.ErrorCode.BAD_REQUEST, &lt;span class=&quot;code-quote&quot;&gt;&quot;missing core name&quot;&lt;/span&gt; );
+    response.sendError( 400, &lt;span class=&quot;code-quote&quot;&gt;&quot;missing core name in path&quot;&lt;/span&gt; );
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12621342" author="larsko" created="Mon, 11 Aug 2008 03:06:33 +0100"  >&lt;p&gt;I like that idea, but how about returning a 404 instead of a 400? Technically the request isn&apos;t malformed, it&apos;s just that it doesn&apos;t specify a core name and the requested page cannot be found because of that.&lt;/p&gt;</comment>
                            <comment id="12621343" author="ryantxu" created="Mon, 11 Aug 2008 03:15:41 +0100"  >&lt;p&gt;done. thanks Lars&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12402301">SOLR-695</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12392401">SOLR-513</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12400811">SOLR-647</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12377827">SOLR-350</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12387866" name="SOLR-545-path-access.patch" size="3510" author="ryantxu" created="Sat, 9 Aug 2008 08:27:03 +0100"/>
                            <attachment id="12387838" name="solr-545.patch" size="23386" author="henrib" created="Fri, 8 Aug 2008 19:05:20 +0100"/>
                            <attachment id="12387775" name="solr-545.patch" size="20845" author="henrib" created="Thu, 7 Aug 2008 23:07:15 +0100"/>
                            <attachment id="12387720" name="solr-545.patch" size="19580" author="henrib" created="Thu, 7 Aug 2008 11:35:35 +0100"/>
                            <attachment id="12387637" name="solr-545.patch" size="2952" author="henrib" created="Wed, 6 Aug 2008 14:47:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Jun 2008 23:09:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7062</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxqon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20642</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>