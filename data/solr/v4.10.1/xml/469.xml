<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:26:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-469/SOLR-469.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-469] Data Import RequestHandler</title>
                <link>https://issues.apache.org/jira/browse/SOLR-469</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;We need a RequestHandler Which can import data from a DB or other dataSources into the Solr index .Think of it as an advanced form of SqlUpload Plugin (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-103&quot; title=&quot;SQL Upload Plugin&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-103&quot;&gt;&lt;del&gt;SOLR-103&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The way it works is as follows.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Provide a configuration file (xml) to the Handler which takes in the necessary SQL queries and mappings to a solr schema&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It also takes in a properties file for the data source configuraution&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Given the configuration it can also generate the solr schema.xml&lt;/li&gt;
	&lt;li&gt;It is registered as a RequestHandler which can take two commands do-full-import, do-delta-import&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;do-full-import - dumps all the data from the Database into the index (based on the SQL query in configuration)&lt;/li&gt;
	&lt;li&gt;do-delta-import - dumps all the data that has changed since last import. (We assume a modified-timestamp column in tables)&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;It provides a admin page&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;where we can schedule it to be run automatically at regular intervals&lt;/li&gt;
	&lt;li&gt;It shows the status of the Handler (idle, full-import, delta-import)&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12387616">SOLR-469</key>
            <summary>Data Import RequestHandler</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="noble.paul">Noble Paul</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Feb 2008 09:59:20 +0000</created>
                <updated>Thu, 2 May 2013 03:29:15 +0100</updated>
                            <resolved>Wed, 30 Jul 2008 20:45:47 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>update</component>
                        <due></due>
                            <votes>7</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="12566202" author="shalinmangar" created="Wed, 6 Feb 2008 17:03:31 +0000"  >&lt;p&gt;A patch out of our (Noble Paul&apos;s and Shalin Shekhar Mangar&apos;s) work on this issue. Please refer to &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/DataImportHandler&lt;/a&gt; for a user guide.&lt;/p&gt;

&lt;p&gt;Our design philosophy for data imports is based on templatized SQL which gives the user of this tool a lot of flexibility. It can generate schemas, do full-imports and delta-imports. Please note that this is work in progress and there&apos;s a lot to be done for it to be committed. We plan to write more documentation and tests as we go on.&lt;/p&gt;

&lt;p&gt;Start by looking at changes to solrconfig.xml and then to DataImportHandler.java The central class is DataImporter.java which uses DocBuilder to do the actual full-dump and delta-dump operations.&lt;/p&gt;

&lt;p&gt;We expose a powerful API for applications to do custom tasks. This API was needed because even in our own tasks, there was frequent need to perform custom operations on rows/columns before they could be indexed. Assuming that other users may face the same problems, we expose Context.java, DataSource.java, EntityProcessor.java, Transformer.java as interfaces which can be used to provide custom data sources or transformations on column values before indexing. In our own project, we have used these interfaces to do tasks such as reading XML from a column and extracting relevant items to be indexed.&lt;/p&gt;

&lt;p&gt;Looking forward to your feedback and comments. Let us know what will it take to get this feature into SOLR.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Noble Paul &amp;amp; Shalin Shekhar Mangar&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12566217" author="ryantxu" created="Wed, 6 Feb 2008 17:29:27 +0000"  >&lt;p&gt;Hi-  thanks for posting this.&lt;/p&gt;

&lt;p&gt;I have not had a chance to look at this in depth, but a couple things jump out at me.&lt;/p&gt;

&lt;p&gt;1.  It looks like the model here is to treat &quot;data-config.xml&quot; as the master and generate schema,xml from that.  To me this seems a bit strange and difficult to support long term.  In my view, &quot;schema.xml&quot; should always be the place to define fields and indexing properties.  &quot;data-config.xml&quot; should just be the place that maps SQL to the schema.&lt;/p&gt;

&lt;p&gt;2. why not just use the standard copyField stuff rather then rolling your own?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;field name=&lt;span class=&quot;code-quote&quot;&gt;&quot;text&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;copyFrom&amp;gt;&lt;/span&gt;cat&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/copyFrom&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;copyFrom&amp;gt;&lt;/span&gt;name&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/copyFrom&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;copyFrom&amp;gt;&lt;/span&gt;manu&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/copyFrom&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;copyFrom&amp;gt;&lt;/span&gt;features&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/copyFrom&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="12566246" author="noblepaul" created="Wed, 6 Feb 2008 18:11:17 +0000"  >&lt;p&gt;hi ,&lt;br/&gt;
thanks for the inputs&lt;br/&gt;
!) for very simple use cases we can avoid people touching the&lt;br/&gt;
schema.xml altogether. because we usually have a standard schema.xml&lt;br/&gt;
but for the &amp;lt;field &amp;gt; tags. People can choose to edit the schema after&lt;br/&gt;
it is created but if both are totally different, both may not be in&lt;br/&gt;
sync and can throw errors. Anyway, we are open to suggestions&lt;br/&gt;
2)We can use &amp;lt;copyField&amp;gt; instead of &amp;lt;copyFrom&amp;gt;&lt;br/&gt;
--thanks&lt;br/&gt;
Noble Paul&lt;/p&gt;




&lt;p&gt;&amp;#8211; &lt;br/&gt;
--Noble Paul&lt;/p&gt;</comment>
                            <comment id="12566599" author="noble.paul" created="Thu, 7 Feb 2008 13:59:27 +0000"  >&lt;p&gt;We are planning to eliminate the schema creation step. So we may not need to put in those details which are already present in schema.xml and we can simplify the data-config and eliminate the &amp;lt;copyField&amp;gt; also. So we must introduce a verifier which ensures that the data-config is in sync with the schema.xml. &lt;/p&gt;</comment>
                            <comment id="12567311" author="shalinmangar" created="Sat, 9 Feb 2008 13:40:45 +0000"  >&lt;p&gt;It seems my earlier patch wasn&apos;t generated in the correct way. It had absolute paths to all files instead of having relative paths. This new patch corrects it. Also, it removes a test which had got in by mistake the previous patch.&lt;/p&gt;</comment>
                            <comment id="12567313" author="shalinmangar" created="Sat, 9 Feb 2008 13:48:08 +0000"  >&lt;p&gt;Sorry, this new patch is the correct one. Still learning the ropes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12567447" author="shalinmangar" created="Sun, 10 Feb 2008 16:23:46 +0000"  >&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eliminated schema creation step as per Ryan&apos;s suggestions.&lt;/li&gt;
	&lt;li&gt;No need to put field attributes such as type, multiValued, indexed, stores etc. in data-config.xml, those are now read directly from the Solr IndexSchema&lt;/li&gt;
	&lt;li&gt;No need to put copyField information in data-config.xml since copy fields are managed by Solr&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The only attributes needed to be provided in data-config.xml for a field are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;column (The column in the db from which the field&apos;s value comes from, Required)&lt;/li&gt;
	&lt;li&gt;name (Optional, if the field name differs from the column name, the field name needs to be given)&lt;/li&gt;
	&lt;li&gt;boost (Optional, if the field needs to be boosted)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll update the wiki document to reflect the above changes.&lt;/p&gt;</comment>
                            <comment id="12568295" author="shalinmangar" created="Tue, 12 Feb 2008 19:02:36 +0000"  >&lt;p&gt;The wiki page for &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;DataImportHandler&lt;/a&gt; now has instructions for running an example for a full-import process. We&apos;ve used the same data provided by example in Solr and created a hsqldb database out of it. Would love to have some feedback at this point.&lt;/p&gt;

&lt;p&gt;We&apos;ll add examples for delta-import soon.&lt;/p&gt;</comment>
                            <comment id="12569572" author="shalinmangar" created="Sat, 16 Feb 2008 14:49:40 +0000"  >&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Support for deleted rows detection (Details will be added to Wiki soon)&lt;/li&gt;
	&lt;li&gt;Numerous bug fixes&lt;/li&gt;
	&lt;li&gt;Merged DataImporter and DataImporterContext together&lt;/li&gt;
	&lt;li&gt;Improved response format showing status messages of operation&lt;/li&gt;
	&lt;li&gt;DataImportHandler is now SolrCoreAware&lt;/li&gt;
	&lt;li&gt;Code refactorings&lt;/li&gt;
	&lt;li&gt;A Verifier which checks data-config.xml against the solr schema.xml to make sure that all fields defined in data-config.xml are defined in schema.xml and all (required) fields defined in solr schema.xml are mentioned in data-config.xml&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We recently indexed around 1.7 million documents using this tool. The documents had mostly sint and sdouble fields in it (since we wanted to see the performance of this patch and not lucene&apos;s speed). We were able to index 1.7 million documents in 166 seconds on our production hardware.&lt;/p&gt;

&lt;p&gt;Note: Details of the API exposed in our work is now added to our &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Wiki&lt;/a&gt;. Also, an example solr home is provided in the Wiki page (under &quot;Full Import Example&quot; section to try this out.&lt;/p&gt;</comment>
                            <comment id="12569979" author="noble.paul" created="Mon, 18 Feb 2008 17:49:43 +0000"  >&lt;p&gt;Add a facility to delete documents from Solr index on the basis of a solr query.&lt;br/&gt;
It is useful if you wish to expire the documents after a certain period of time. &lt;/p&gt;</comment>
                            <comment id="12570588" author="otis" created="Wed, 20 Feb 2008 06:18:14 +0000"  >&lt;p&gt;Haven&apos;t looked at the patch, but I&apos;ve read most of &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/DataImportHandler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Small comment: don&apos;t name that config file &quot;data-config.xml&quot;.  &quot;data&quot; is &lt;b&gt;so&lt;/b&gt; generic.  What is this?  It&apos;s a RDBMS indexing tool implemented as a request handler.  I&apos;d pick a better, more specific name both for the config and the handler itself - DataImportHandler - does it import from a file?  A BDB?  RDBMS?  Another search engine?  Can&apos;t tell from a generic name.&lt;/p&gt;

&lt;p&gt;Really well documented, good job, and I&apos;m looking forward to seeing this in Solr!&lt;/p&gt;</comment>
                            <comment id="12570591" author="shalinmangar" created="Wed, 20 Feb 2008 06:40:44 +0000"  >&lt;p&gt;Hi Otis,&lt;/p&gt;

&lt;p&gt;Thanks for showing interest in this issue and your feedback.&lt;/p&gt;

&lt;p&gt;Originally we started developing this to be a pure DB Import tool. But our own requirements led to us to keep this general enough to be used with other kinds of data sources. For example, we&apos;re using this internally for reading from REST API&apos;s (including RSS/ATOM feeds). Therefore, we kept the name as DataImportHandler on purpose. Previously, our data source was JdbcDataSource and EntityProcessor was called SqlEntityProcessor. We later extracted interfaces out of them as DataSource and EntityProcessor to make them as generic as possible. Also note that the DataImportHandler does not care about the name of data-config.xml. It could be called anything, all we need is that it should be specified in solrconfig.xml&lt;/p&gt;

&lt;p&gt;We&apos;re developing our generic REST datasources and entity processors and plan to contribute them as well. We too are looking forward to see this in Solr and we&apos;re committed to do whatever it takes to make sure it becomes a part of Solr.&lt;/p&gt;</comment>
                            <comment id="12570594" author="otis" created="Wed, 20 Feb 2008 06:49:57 +0000"  >&lt;p&gt;I see, I just read to the bottom of the Wiki page - I spoke too soon.  It would be great, then, to include another non-SQL/RDBMS example in there.&lt;/p&gt;

&lt;p&gt;What site are you using this on by the way?  Oh, AOL?  It looks like AOL is jumping on Solr, Hadoop, and friends and contributing - bravo!&lt;/p&gt;
</comment>
                            <comment id="12570596" author="noble.paul" created="Wed, 20 Feb 2008 06:59:06 +0000"  >&lt;p&gt;The DB example was an easy one because we could get a schema out of the sample data.&lt;br/&gt;
 An RSS/ATOM example is in the works. &lt;/p&gt;</comment>
                            <comment id="12579879" author="noble.paul" created="Tue, 18 Mar 2008 14:52:03 +0000"  >&lt;p&gt;This is the biggest ever feature release for the patch . This contains almost all the planned features for DataImportHandler include:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;support for xml/http datasources&lt;/li&gt;
	&lt;li&gt;Javascript for transformer (requires java 6)&lt;/li&gt;
	&lt;li&gt;Numerous performance enhancements and bug fixes&lt;/li&gt;
	&lt;li&gt;Better logging and error handling&lt;/li&gt;
	&lt;li&gt;An improved command interface&lt;/li&gt;
	&lt;li&gt;command to reload config&lt;/li&gt;
	&lt;li&gt;statistics integrated with solr statistics&lt;/li&gt;
	&lt;li&gt;Can accessrequest parameters&lt;/li&gt;
	&lt;li&gt;Extra configurable parameters can be passed from solrconfig.xml&lt;/li&gt;
	&lt;li&gt;Multiple transformers possible (chaining)&lt;/li&gt;
	&lt;li&gt;Can put in the handler without a data-config.xml and datasource&lt;br/&gt;
*Can make an arbitrary entity a root entity&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;More documentation in the wiki&lt;/p&gt;</comment>
                            <comment id="12579919" author="noble.paul" created="Tue, 18 Mar 2008 16:47:24 +0000"  >&lt;p&gt;The last patch started from the wrong root. This applies properly&lt;/p&gt;</comment>
                            <comment id="12583363" author="shalinmangar" created="Sat, 29 Mar 2008 20:39:59 +0000"  >&lt;p&gt;Fixes a bug with html handling in XPathRecordReader&lt;/p&gt;</comment>
                            <comment id="12583459" author="shalinmangar" created="Sun, 30 Mar 2008 17:21:16 +0100"  >&lt;p&gt;A change in behavior for XPathEntityProcessor. It now makes &apos;&apos;pk&apos;&apos; optional for entities having XPathEntityProcessor.&lt;/p&gt;</comment>
                            <comment id="12586676" author="noble.paul" created="Tue, 8 Apr 2008 07:36:09 +0100"  >&lt;p&gt;The scope has been changed from consuming just DB data. It is designed to consume any type of structured data&lt;/p&gt;</comment>
                            <comment id="12586680" author="noble.paul" created="Tue, 8 Apr 2008 07:42:34 +0100"  >&lt;p&gt;The priority is changed to major&lt;/p&gt;</comment>
                            <comment id="12588384" author="shalinmangar" created="Sun, 13 Apr 2008 13:01:17 +0100"  >&lt;p&gt;A new patch consisting of a few bug fixes and some major new features. The changes include:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;No need to write fields in data-config if the field name from DB/XML and field-name in schema.xml are the same. This removes a lot of useless verbosity from data-config.xml&lt;/li&gt;
	&lt;li&gt;A cool new interactive development page, in which you write/change data-config.xml and see results immeadiately making interations extremely fast! Use &lt;a href=&quot;http://host:port/solr/admin/dataimport.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://host:port/solr/admin/dataimport.jsp&lt;/a&gt; or if using multi-core &lt;a href=&quot;http://host:port/solr/core-name/admin/dataimport.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://host:port/solr/core-name/admin/dataimport.jsp&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;You can start using the interactive mode without specifying data-config file in solrconfig.xml, however, specifying the data sources is necessary in solrconfig.xml&lt;/li&gt;
	&lt;li&gt;Interactive development uses a new debug mode in DataImportHandler, add debug=on to the full-import command to see the actual documents which are created by DataImportHandler. This shows the first 10 documents created by DataImportHandler using the existing config without committing them to solr. It supports the start and rows parameter (just like query params) which you can use to see any document. This comes in very useful when suppose the 1000th document failed during indexing and you want to see the reason. If there are exceptions, the stacktrace is shown with the response.&lt;/li&gt;
	&lt;li&gt;Verbose mode with verbose=on as a request parameter (used in conjunction with debug=on) which shows exactly how DataImportHandler created each document.
	&lt;ul&gt;
		&lt;li&gt;What query was executed?&lt;/li&gt;
		&lt;li&gt;How much time it took?&lt;/li&gt;
		&lt;li&gt;What rows it gave back?&lt;/li&gt;
		&lt;li&gt;What transformers were applied and what was the result?&lt;/li&gt;
		&lt;li&gt;Another advantage is that you can see the fields which are indexed but not stored&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;A show-config command has been added which gives the data-config.xml as a raw response (uses RawResponseWriter)&lt;/li&gt;
	&lt;li&gt;A new interface called Evaluator has been added which makes it possible to plugin new expression evaluators (for resolving variable names)&lt;/li&gt;
	&lt;li&gt;Using the same Evaluator interface, a few new evaluators have been added
	&lt;ul&gt;
		&lt;li&gt;formatDate - use as $
{dataimporter.functions.formatDate(&apos;NOW&apos;,yyyy-MM-dd HH:mm)}
&lt;p&gt;, this will format NOW as per the given format and return a string which can be used in queries or urls. It supports the full DateMathParser syntax. You can also format fields e.g. $&lt;/p&gt;
{dataimporter.functions.formatDate(A.purchase_date,dd-MM-yyyy)}&lt;/li&gt;
		&lt;li&gt;encodeUrl - useful for URL-encoding parameters when making a HTTP call. Use as $
{dataimport.functions.encodeUrl(emp.name)}&lt;/li&gt;
		&lt;li&gt;escapeSql - useful for escaping parameters supplied in sql statements. This can replace quotes with two quotes to avoid sql syntax errors. Use as $
{dataimporter.functions.escapeSql(emp.name)}&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Custom Evaluators can be specified in data-config.xml (more details and example will be added to the wiki)&lt;/li&gt;
	&lt;li&gt;HttpDataSource now reads the content encoding from the response by default. Previously it assumed the default encoding to be UTF-8. This behavior can be overriden by explicitly specifying an encoding in solrconfig.xml&lt;/li&gt;
	&lt;li&gt;A FileDataSource has been added which can read content from local files (e.g. XML feed files on local disk).&lt;/li&gt;
	&lt;li&gt;Transformers can signal skipping a document by adding a key &quot;$skipDoc&quot; with value &quot;true&quot; in the returned map.&lt;/li&gt;
	&lt;li&gt;NumberFormatTransformer is a new transformer which can be used to extract/convert numbers from strings. It uses the java.text.NumberFormat class in Java to provide its features.&lt;/li&gt;
	&lt;li&gt;The Context interface has been enhanced to add new methods for getting/setting session variables which can be used by Transformers to share data. Also a new method called getParentContext can enable a Transformer/EntityProcessor to get the parent entity&apos;s context in full imports.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please let us know your comments and feedback. More details and examples will soon be added to the wiki page at &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/DataImportHandler&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12591257" author="shalinmangar" created="Tue, 22 Apr 2008 11:59:27 +0100"  >&lt;p&gt;This patch contains the following changes&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;DataSource definitions can now be added inside data-config.xml so there is no need to maintain configuration in two files. It also comes in handy with the interactive development mode.&lt;/li&gt;
	&lt;li&gt;XSLT support in XPathEntityProcessor can apply a given XSL on the XML document before processing it. For example: &amp;lt;entity name=&quot;e&quot; processor=&quot;XPathEntityProcessor&quot; xsl=&quot;/home/user/my.xsl&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;XPathEntityProcessor now knows how to process Solr Add XMLs. This is handy when using XSLT to change fetched XML directly into Solr Add XML format. Add an extra attribute useSolrAddSchema=&quot;true&quot; to enable this. If useSolrAddSchema=&quot;true&quot; is specified, then there is no need to put fields in the entity.&lt;/li&gt;
	&lt;li&gt;A new EntityProcessor called FileListEntityProcessor has been added which can operate over a filesystem (directory) and can be used to get files by name (using a regex), size (in bytes) and can also exclude files matching a regex. Recursively operating over a directory is also supported.&lt;/li&gt;
	&lt;li&gt;A TemplateTransformer which lets you put multiple fields into one field according the the given template. For example &amp;lt;field column=&quot;name&quot; template=&quot;$
{e.lastName}
&lt;p&gt;, $&lt;/p&gt;
{e.firstName}
&lt;p&gt; $&lt;/p&gt;
{e.middleName}
&lt;p&gt;&quot; /&amp;gt;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;In-built transformers are now enhanced to operate on multi-valued fields also.&lt;/li&gt;
	&lt;li&gt;A Test harness has been created to make it easier to test DataImportHandler features. It is called AbstractDataImportHandlerTest and extends from AbstractSolrTestCase. Look at TestDataConfig and TestDocBuilder2 for examples&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We shall write documentation and examples on these changes on the wiki at &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/DataImportHandler&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12591273" author="gsingers" created="Tue, 22 Apr 2008 13:21:29 +0100"  >&lt;p&gt;This is some really cool stuff and should be added at some point soon.&lt;/p&gt;

&lt;p&gt;Some high level questions/comments, as I haven&apos;t looked in depth into the patch yet:&lt;/p&gt;

&lt;p&gt;Is it possible to just pass in SQL statements, etc. via a request?  Or do they have to be configured ahead of time?  What about connections?  On the one hand, having to configure it ahead of time can lock things down and be a little more secure, on the other hand, having to configure it ahead of time can lock things down and take away flexibility.  I hope to combine some of the stuff I&apos;ve written to do this, with your patch.&lt;/p&gt;

&lt;p&gt;Not sure how to say it, but all the configuration starts to have the feel of Hibernate and/or the other ORMs.  Would there be a way to leverage something that already exists?  Although I do see from the comment the other day that you have reduced some of the verbosity&lt;/p&gt;

&lt;p&gt;How is scheduling handled?  &lt;/p&gt;

&lt;p&gt;Finally, I&apos;m not totally sure where this should live.  Solr doesn&apos;t currently have a &quot;contrib&quot; area, but this feels like a (major) contrib and may warrant adding it under a contrib area.&lt;/p&gt;
</comment>
                            <comment id="12591293" author="noble.paul" created="Tue, 22 Apr 2008 14:18:04 +0100"  >&lt;p&gt;Giving a single SQL may limit the utility, because you may need to join more than one table in most of the usecases. &lt;/p&gt;

&lt;p&gt;But it is possible to pass on the whole dataconfig itself as a request parameter. .We currently use that in the interactive development mode. &lt;/p&gt;

&lt;p&gt;We have tried hard to cut down the verbosity of the configuration patch after patch . Now the &apos;metadata&apos; i.e the extra information other than the queries itself is minimal. We leverage on the data such as schema etc to achieve it.&lt;/p&gt;

&lt;p&gt;The connections are created once and consumed throughout one import. We take in the details for creating connections in the configuration (see documentation)&lt;/p&gt;

</comment>
                            <comment id="12591300" author="gsingers" created="Tue, 22 Apr 2008 14:42:30 +0100"  >


&lt;p&gt;I was just thinking as an option.  How does it limit?  A single SQL  &lt;br/&gt;
can join across tables.  I will try to update the patch w/ my merges  &lt;br/&gt;
when I get a breather.  I have the case where I can send in something  &lt;br/&gt;
like:&lt;/p&gt;

&lt;p&gt;select col1 as field1, col2 as field2, ... from table1, ... where ...;&lt;/p&gt;

&lt;p&gt;and it goes and runs that SQL against the specified connection.   &lt;br/&gt;
Basically, any valid SQL select statement can be sent in.&lt;/p&gt;

&lt;p&gt;Actually, I can send in multiple SQL statements as well, or just  &lt;br/&gt;
specify the table, or the table and certain columns.&lt;/p&gt;


&lt;p&gt;--------------------------&lt;br/&gt;
Grant Ingersoll&lt;/p&gt;

&lt;p&gt;Lucene Helpful Hints:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/lucene-java/BasicsOfPerformance&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/lucene-java/BasicsOfPerformance&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/lucene-java/LuceneFAQ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/lucene-java/LuceneFAQ&lt;/a&gt;&lt;/p&gt;





</comment>
                            <comment id="12591310" author="shalinmangar" created="Tue, 22 Apr 2008 15:20:25 +0100"  >&lt;p&gt;Grant, the limitation comes from multi-valued fields. When you join tables, it is most probably because you have a 1-to-many relationship. However, in that case a single row in the result does not contain all the information needed to create the Solr document. You&apos;d need to combine many rows using the primary/foreign key to get all the data required in the Solr document. Btw, &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-103&quot; title=&quot;SQL Upload Plugin&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-103&quot;&gt;&lt;del&gt;SOLR-103&lt;/del&gt;&lt;/a&gt; is similiar to the functionality you have in mind.&lt;/p&gt;</comment>
                            <comment id="12591320" author="noble.paul" created="Tue, 22 Apr 2008 15:58:27 +0100"  >&lt;p&gt;hi Grant,&lt;br/&gt;
we started of with something like that and very soon realized that it cannot scale beyond the very basic usecases. &lt;br/&gt;
We need the ability to apply transformations like, splitting, merging fields etc etc.&lt;br/&gt;
sometimes we need to put in a totally different piece of data .&lt;br/&gt;
eg: if a value is 1-5 put in the string &apos;low&apos; , 5-10 put in &apos;medium&apos; etc etc. &lt;/p&gt;

&lt;p&gt;All these are really driven by the business requirements&lt;/p&gt;

&lt;p&gt;And there is the need for joining one table with another from the values in one table or merging one table with many tables. &lt;/p&gt;

&lt;p&gt;Then we had use cases where data comes from a Db and using a key we have to fetch data from an xml/http datasource etc etc. &lt;/p&gt;

&lt;p&gt;So , the fundamental design or the &apos;kernel&apos; of the system is supposed to be totally agnostic of the use cases and we let the users plug in the  implemenations in java/JS etc so that they can do what they actually want. And we want to share some of the components which can be common for others. &lt;/p&gt;</comment>
                            <comment id="12591327" author="noble.paul" created="Tue, 22 Apr 2008 16:13:45 +0100"  >&lt;p&gt;The best example of the simple usecase can be seen here &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler#shortconfig&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/DataImportHandler#shortconfig&lt;/a&gt;. &lt;br/&gt;
Here we have joined 4 different tables with so little configuration&lt;/p&gt;</comment>
                            <comment id="12594553" author="shalinmangar" created="Tue, 6 May 2008 12:37:19 +0100"  >&lt;p&gt;This patch adds DataImportHandler as a contrib project into Solr. It uses standard Maven directory structure and a build.xml file. No changes have been made to the codebase.&lt;/p&gt;

&lt;p&gt;Note - I&apos;ve opened &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-563&quot; title=&quot;Contrib area for Solr&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-563&quot;&gt;&lt;del&gt;SOLR-563&lt;/del&gt;&lt;/a&gt; to track contrib area creation in Solr. Using this patch with the &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-563&quot; title=&quot;Contrib area for Solr&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-563&quot;&gt;&lt;del&gt;SOLR-563&lt;/del&gt;&lt;/a&gt; patch lets you compile, test and package DataImportHandler with Solr war file.&lt;/p&gt;</comment>
                            <comment id="12595928" author="cpmoser" created="Sun, 11 May 2008 18:46:25 +0100"  >&lt;p&gt;Hi, &lt;/p&gt;

&lt;p&gt;Thanks for all of your work with the dataimporter.  It&apos;s made working with Solr much easier.&lt;/p&gt;

&lt;p&gt;I think I found a small bug in SqlEntityProcessory.java starting on line 120:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;SqlEntityProcessor.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
120:    &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; first = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
121:    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] primaryKeys = context.getEntityAttribute(&lt;span class=&quot;code-quote&quot;&gt;&quot;pk&quot;&lt;/span&gt;).split(&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;);
122:    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; primaryKeys.length; i++) {
123:      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!first) {
124:        sb.append(&lt;span class=&quot;code-quote&quot;&gt;&quot; and &quot;&lt;/span&gt;);
125:        first = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
126:      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This causes problems in a generated SQL statement because it doesn&apos;t add the &quot;and&quot; string into the SQL statement when more than one field is provided in the pk entity value.  End result being a SQL syntax error.&lt;/p&gt;

&lt;p&gt;Given &lt;tt&gt;first&lt;/tt&gt; initialized as true, the &lt;tt&gt;if&lt;/tt&gt; statement on line 123 will never happen (and first will never be set to false).  It looks like it would be more appropriate to have line 125 happen after the &lt;tt&gt;if&lt;/tt&gt; statement on line 123.&lt;/p&gt;

&lt;p&gt;This leads me to another issue, and that is the question of how to specify the table of the primary key when the primary key is ambiguous?  If there&apos;s a join condition in the SQL statment of a deltaQuery, and the any of the primary key columns are present in the joined table, the key is ambiguous and will cause a SQL error.&lt;/p&gt;

&lt;p&gt;Is there a way to specify the table for the primary key?  Perhaps an attribute &quot;pkTable&quot; can be added as an option for the entity declaration, i.e. in SqlEntityProcessor.java:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;SqlEntityProcessor.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
127:      &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; val = resolver.resolve(primaryKeys[i]);
--&amp;gt;	  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (context.getEntityAttribute(&lt;span class=&quot;code-quote&quot;&gt;&quot;pkTable&quot;&lt;/span&gt;).length()&amp;gt;0)
--&amp;gt;		sb.append(context.getEntityAttribute(&lt;span class=&quot;code-quote&quot;&gt;&quot;pkTable&quot;&lt;/span&gt;)+&lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;);
128:	  sb.append(primaryKeys[i]).append(&lt;span class=&quot;code-quote&quot;&gt;&quot; = &quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This removes any potential ambiguity issues with joins when pkTable is specified.&lt;/p&gt;</comment>
                            <comment id="12595931" author="shalinmangar" created="Sun, 11 May 2008 19:31:39 +0100"  >&lt;p&gt;Thanks Chris, nice catch! The first one is definitely a bug.  I&apos;ll fix that, add a test and upload a new patch. I&apos;m not sure if I understand your second point completely, can you please give an example?&lt;/p&gt;</comment>
                            <comment id="12596237" author="cpmoser" created="Tue, 13 May 2008 01:05:23 +0100"  >&lt;p&gt;Hi Shalin, &lt;/p&gt;

&lt;p&gt;I&apos;m indexing forums with Solr and have tables with a structure similar to this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
posts
------
forumid &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
messageid &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
deleted &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;
message text

forums
------
forumid &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
name text
deleted &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The simplified data query I&apos;m running goes like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
SELECT 
   p.forumid,
   p.messageid,
   IF (p.deleted OR f.deleted,&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;,&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;) as deleted,
   p.message
  
FROM 
   posts p, forums f

WHERE
   f.forumid = p.forumid
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The query checks to see if the post or the forum is deleted, and marks it in the index as deleted in either case (which is why I&apos;m doing the join).  The problem I&apos;m running into is that the importer is running the WHERE clause like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WHERE 
   f.forumid = p.forumid and forumid=123 and messageid=123456789
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case, the &lt;em&gt;forumid=123&lt;/em&gt; part is ambiguous (forumid being in the posts and the forums table) so this causes a SQL error.  So I added an additional attribute to the entity defintion (pkTable) which prepends the &lt;em&gt;forumid=123&lt;/em&gt; with the pkTable value so it generates &lt;em&gt;pkTable.forumid=123&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Not sure if this is the best way to do it but it fixed the problem &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12597541" author="noble.paul" created="Fri, 16 May 2008 17:35:36 +0100"  >&lt;p&gt;Moser :I guess I now understand your requirement . The solution you have proposed is indeed a good one. &lt;br/&gt;
How about this one:&lt;/p&gt;

&lt;p&gt;The pk is used only for this purpose . So you must be able to keep it as pk=&quot;forum.forumId&quot; and when the query is generated I can use it as it is and when I fetch the value , I can just use the part after the period (.)&lt;/p&gt;

&lt;p&gt;In addition I can make the getQuery() method in SqlEntityProcessor public so that you can implement your custom logic very easily&lt;/p&gt;</comment>
                            <comment id="12598820" author="hossman" created="Wed, 21 May 2008 23:12:51 +0100"  >&lt;p&gt;creating a contrib structure and making the DataImportHandler a contrib definitely seems like the smart way to go ... particularly since it doesn&apos;t require any &quot;core&quot; changes.&lt;/p&gt;</comment>
                            <comment id="12602089" author="rs" created="Tue, 3 Jun 2008 22:58:25 +0100"  >&lt;p&gt;Paul,&lt;/p&gt;

&lt;p&gt;The current version of the code seems not to allow the construction pk=&quot;forum.forumId&quot; you&apos;re talking about. I did a small patch to make it possible. I don&apos;t know if it&apos;s the correct way to do it but it worked well for me.&lt;/p&gt;

&lt;p&gt;Here is the patch:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
@@ -124,7 +124,9 @@ public class SqlEntityProcessor extends EntityProcessorBase {
         sb.append(&quot; and &quot;);
         first = false;
       }
-      Object val = resolver.resolve(primaryKeys[i]);
+      // Only send the field part of the pk when pk includes the table ref
+      String[] pkParts = primaryKeys[i].split(&quot;\\.&quot;);
+      Object val = resolver.resolve(pkParts[pkParts.length - 1]);
       sb.append(primaryKeys[i]).append(&quot; = &quot;);
       if (val instanceof Number) {
         sb.append(val.toString());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hope that helps.&lt;/p&gt;</comment>
                            <comment id="12603662" author="pjaol" created="Mon, 9 Jun 2008 20:51:16 +0100"  >&lt;p&gt;There&apos;s a slight problem using Connector/J for mysql, in that it doesn&apos;t fully implement the jdbc spec for &lt;br/&gt;
setFetchSize, resulting in all rows in mysql being selected into memory.&lt;/p&gt;

&lt;p&gt;Connector/J states that you must pass ?useCursorFetch=true in the connect string, but it exposes another mysql bug with server-side parsed queries throwing an error of &quot;incorrect key file&quot; on the temp tables generated by the cursor, &lt;br/&gt;
as yet there isn&apos;t a fix in mysql that I know of.&lt;/p&gt;

&lt;p&gt;Something that seems to work is to set the batchSize to Integer.MIN_VALUE:&lt;/p&gt;

&lt;p&gt;JdbcDataSource.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bsz != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        batchSize = &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.parseInt(bsz);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (batchSize &amp;lt; 0)
            batchSize = &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MIN_VALUE;  &lt;span class=&quot;code-comment&quot;&gt;// pjaol : setting batchSize to &amp;lt;0 in dataSource forces connector / j to use &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MIN_VALUE
&lt;/span&gt;      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NumberFormatException e) {
        LOG.log(Level.WARNING, &lt;span class=&quot;code-quote&quot;&gt;&quot;Invalid batch size: &quot;&lt;/span&gt; + bsz);
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This basically puts the result set size at 1 row, a little slow, but if you can&apos;t set your JVM memory settings high enough&lt;br/&gt;
it gives you a option.&lt;/p&gt;

&lt;p&gt;Also suggest null-ing the row hashmap in DocBuilder immediately after use to allow GC to clean up&lt;br/&gt;
the reference faster within eden space.&lt;/p&gt;

&lt;p&gt;DocBuilder.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (entity.isDocRoot) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (stop.get())
              &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
            &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; result = writer.upload(doc);
            doc = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (result)
              importStatistics.docCount.incrementAndGet();
          }
          
       arow = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;code-comment&quot;&gt;// pjaol : set reference to hashmap to &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; to eliminate strong reference                                                   
&lt;/span&gt;       

       } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (DataImportHandlerException e)
..........
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12603769" author="noble.paul" created="Tue, 10 Jun 2008 05:41:58 +0100"  >&lt;p&gt;Thanks for the suggestions . &lt;br/&gt;
&lt;em&gt;JdbcDataSource&lt;/em&gt; is a generic implementation for all jdbc drivers . so &lt;em&gt;batchSize&lt;/em&gt; itself is a configurable parameter for &lt;em&gt;JdbcdataSource&lt;/em&gt;. set the value and it should be fine. Anyway we will incorporate the changes you have suggested because it is convenient for users.&lt;/p&gt;

&lt;p&gt;The var &lt;em&gt;arow&lt;/em&gt; goes out of scope immedietly because the method terminates after this . I&apos;m not sure it make a any difference if I explicitly set it to null&lt;/p&gt;</comment>
                            <comment id="12604257" author="shalinmangar" created="Wed, 11 Jun 2008 16:41:59 +0100"  >&lt;p&gt;A new patch file (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-469&quot; title=&quot;Data Import RequestHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-469&quot;&gt;&lt;del&gt;SOLR-469&lt;/del&gt;&lt;/a&gt;.patch) consisting of some important bug fixes and minor enhancements. The changes and the corresponding classes are given below&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Set fetch size to Integer.MIN_VALUE if batchSize in configuration is -1 as per Patrick&apos;s suggestion &amp;#8211; JdbcDataSource&lt;/li&gt;
	&lt;li&gt;Transformers can add a boost to a document by adding a key/value pair row.put(&quot;$docBoost&quot;, 2.0f) from any entity &amp;#8211; DocBuilder,SolrWriter and DataImportHandler&lt;/li&gt;
	&lt;li&gt;Fixes for infinite loop in SqlEntityProcessor when delta query fails for some reason and NullPointerException is thrown in EntityProcessorBase &amp;#8211; EntityProcessorBase&lt;/li&gt;
	&lt;li&gt;Fix for NullPointerException in TemplateTransformer and corresponding test &amp;#8211; TemplateTransformer, TestTemplateTransformer&lt;/li&gt;
	&lt;li&gt;Enhancement for specifying table.column syntax for pk attribute in entity as per issue reported by Chris Moser and Olivier Poitrey &amp;#8211; SqlEntityProcessor,TestSqlEntityProcessor2&lt;/li&gt;
	&lt;li&gt;Fix for NullPointerException in XPathRecordReader when attribute specified through xpath is null as per issue reported by Nicolas Pastorino in solr-user &amp;#8211; XPathRecordReader, TestXPathRecordReader&lt;/li&gt;
	&lt;li&gt;Enhancement to DataSource interface to provide a close method &amp;#8211; DataSource, FileDataSource, HttpDataSource, MockDataSource&lt;/li&gt;
	&lt;li&gt;Context interface has a new method getDataSource(String name) for getting a new DataSource instance as per the name specified in solrconfig.xml or data-config.xml &amp;#8211; Context, ContextImpl, DataImporter, DocBuilder&lt;/li&gt;
	&lt;li&gt;FileListEntityProcessor implements olderThan and newerThan filtering parameters &amp;#8211; FileListEntityProcessor, TestFileListEntityProcessor&lt;/li&gt;
	&lt;li&gt;Debug Mode can be disabled from solrconfig.xml by enableDebug=false &amp;#8211; DataImporter, DataImportHandler&lt;/li&gt;
	&lt;li&gt;Running statistics are exposed on the Solr Statistics page in addition to cumulative statictics &amp;#8211; DataImportHandler, DocBuilder&lt;/li&gt;
	&lt;li&gt;The dataSource attribute can be null when using certain EntityProcessors such as FileListEntityProcessor which does not need a dataSource. So when dataSource=&quot;null&quot;, no attempt is made to create a DataSource instance &amp;#8211; DataImporter&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Updated as per Noble&apos;s comment below.&lt;/p&gt;</comment>
                            <comment id="12604259" author="noble.paul" created="Wed, 11 Jun 2008 16:51:21 +0100"  >&lt;p&gt;small correction&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Context interface has a new method getDataSource(String entityName) for getting a new DataSource instance for the given entity - Context, ContextImpl, DataImporter, DocBuilder&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
   * Gets a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataSource instance with a name.
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
   * @param name Name of the dataSource as defined in the dataSource tag
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; DataSource getDataSource(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12604261" author="rs" created="Wed, 11 Jun 2008 16:55:54 +0100"  >&lt;p&gt;No -contrib version this time? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12604263" author="shalinmangar" created="Wed, 11 Jun 2008 16:59:33 +0100"  >&lt;p&gt;A lot of people were using the older patch. I&apos;m generating the contrib one too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12604269" author="shalinmangar" created="Wed, 11 Jun 2008 17:47:39 +0100"  >&lt;p&gt;Copying changes in codebase from &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-469&quot; title=&quot;Data Import RequestHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-469&quot;&gt;&lt;del&gt;SOLR-469&lt;/del&gt;&lt;/a&gt;.patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-469&quot; title=&quot;Data Import RequestHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-469&quot;&gt;&lt;del&gt;SOLR-469&lt;/del&gt;&lt;/a&gt;-contrib.patch&lt;/p&gt;</comment>
                            <comment id="12604276" author="pjaol" created="Wed, 11 Jun 2008 18:39:28 +0100"  >&lt;p&gt;With the arow, I noticed by nulling it, that CMS GC was cleaning items up faster in eden space.&lt;br/&gt;
Without it, Full GC kicked in more frequently. This was with indexing about 250~MB from mysql.&lt;br/&gt;
If you&apos;ve not got that much data then there isn&apos;t much of a worry, it&apos;s just a little optimization that reduces the need&lt;br/&gt;
to increase your jvm&apos;s mx and newsize settings.&lt;/p&gt;

&lt;p&gt;Another thing I was looking at is the SolrWriter, instead of calling an updateHandler directly, I think you should call&lt;br/&gt;
the UpdateRequestProcessorFactory and allow the UpdateRequestProcessor chain handle the&lt;br/&gt;
*processAdd&lt;br/&gt;
*processDelete&lt;br/&gt;
*processCommit&lt;br/&gt;
*finish&lt;/p&gt;

&lt;p&gt;It allows for custom ChainedUpdateProcessor&apos;Factory&apos;s which is a fantastic little known about item.&lt;/p&gt;</comment>
                            <comment id="12605047" author="noble.paul" created="Sat, 14 Jun 2008 09:06:09 +0100"  >&lt;p&gt;This patch contains&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;integration with &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt; ( disable cache headers)&lt;/li&gt;
	&lt;li&gt;Tests inTestSCriptTransformer Ignored. (it requires java 6)&lt;/li&gt;
	&lt;li&gt;New feature &lt;em&gt;CachedSqlEntityProcessor&lt;/em&gt;. It can dramatically speed up indexing if there are sub-entities. It can cache the rows and avoid subsequent database calls. Consumes a lot of RAM. &lt;a href=&quot;http://wiki.apache.org/solr/DataImportHandler#cached&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;See wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12605285" author="shalinmangar" created="Mon, 16 Jun 2008 14:44:56 +0100"  >&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Updated the build.xml to compile Solr before building DataImportHandler and place DataImportHandler&apos;s javadoc jar to solr/dist folder so that the javadocs are available in Solr nightly builds&lt;/li&gt;
	&lt;li&gt;Removed @author Javadoc tags from all source files in accordance with Solr coding conventions&lt;/li&gt;
	&lt;li&gt;Improved Javadocs for a lot of classes especially the public interfaces&lt;/li&gt;
	&lt;li&gt;Formatted code using the Eclipse codestyle xml given at HowToContribute wiki page&lt;/li&gt;
	&lt;li&gt;Added @since solr 1.3 to all source files&lt;/li&gt;
	&lt;li&gt;I&apos;ve verified that the Apache license text is present in all the source files&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;No changes have been made to the code (in terms of functionality)&lt;/p&gt;

&lt;p&gt;Note &amp;#8211; The &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-563&quot; title=&quot;Contrib area for Solr&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-563&quot;&gt;&lt;del&gt;SOLR-563&lt;/del&gt;&lt;/a&gt; patch must be applied before this patch to build Solr with DataImportHandler as a contrib project.&lt;/p&gt;

&lt;p&gt;A lot of people are using this patch and it would be easier for them if DataImportHandler is available in the nightly builds. Also, this patch has become huge and enhancements and bug fixes would also be easier if it were committed. Grant &amp;#8211; We feel that this is ready to be committed now whenever you can take a look.&lt;/p&gt;</comment>
                            <comment id="12607171" author="noble.paul" created="Mon, 23 Jun 2008 10:48:03 +0100"  >&lt;p&gt;Changes &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;classloading is done using SolrresourceLoader . adding jars to solrhome/lib must work&lt;/li&gt;
	&lt;li&gt;The request parameter can add optimize=false to disable optimize&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12607659" author="shalinmangar" created="Tue, 24 Jun 2008 16:49:32 +0100"  >&lt;p&gt;The last patch wasn&apos;t generated correctly. This one fixes it. No changes in the code since the last patch.&lt;/p&gt;</comment>
                            <comment id="12607661" author="shalinmangar" created="Tue, 24 Jun 2008 16:51:28 +0100"  >&lt;p&gt;This time with the correct name &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-469&quot; title=&quot;Data Import RequestHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-469&quot;&gt;&lt;del&gt;SOLR-469&lt;/del&gt;&lt;/a&gt;-contrib.patch&lt;/p&gt;</comment>
                            <comment id="12608421" author="gsingers" created="Thu, 26 Jun 2008 14:25:24 +0100"  >&lt;p&gt;Patch applies cleanly, tests pass, although I notice several @ignore in there.   Docs look good in my preliminary perusing.  I&apos;ve only started looking at things, and have a lot of reading to catch up on, so these first comments, please take with a grain of salt, as the English saying goes... &lt;/p&gt;

&lt;p&gt;I&apos;d suggest,that instead of relying on MySQL in TestJdbcDataSource, we instead use and embedded Derby or some sort of JDBC mock.  I suggest Derby mainly b/c it&apos;s already ASF and I don&apos;t want to bother looking up licenses for HSQL or any of the others that might work.  &lt;/p&gt;

&lt;p&gt;Also, I notice several interfaces that have a number of methods on them.  Have you thought about abstract base classes instead?  I know, there is a whole big debate over it, and people will argue that if you get the interface exactly correct, you should use interfaces.  Nice in theory, but Lucene/Solr experience suggests that rarely happens.  Of course, I think the correct way is to actually do both, as one can easily decorate an abstract base class with more interfaces as needed.  Just food for thought, b/c what&apos;s going to quickly happen after release is someone is going to need a new method on the DataSource or something and then we are going to be stuck doing all kinds of workarounds due to back compatibility reasons.  The alternative is to clearly mark all Interfaces as being experimental at this point and clearly note that we expect them to change.  We may even want to consider both!  The other point, though, is contrib packages need not be held to the same standard as core when it comes to back compat.&lt;/p&gt;

&lt;p&gt;What relation does the Context have to the HttpDataSource?  In other words, the DataSource init method takes a Context, meaning the HttpDataSource needs a Context, yet in my first glance at the Context, it seems to be DB related.&lt;/p&gt;

&lt;p&gt;What if I wanted to slurp from a table on the fly?  That is, I want to send in a select statement in my request and I let the columns line up where they may Field wise (i.e. via dynamic fields or I rely on something like select id, colA as fieldA, colB as fieldB from MyTable;   )&lt;br/&gt;
Is that possible?  &lt;/p&gt;

&lt;p&gt;Interactive mode has a bit of a chicken and the egg problem when it comes to JDBC, right, in that the Driver needs to be present in Solr/lib right?  So, one can currently only interactively configure a JDBC DataSource if the driver is already in lib and loaded by the ClassLoader.   If you haven&apos;t already, it might actually be useful to show what drivers are present by using the DriverManager.&lt;/p&gt;

&lt;p&gt;In the JDBCDataSource, not sure I follow the connection stuff.  Can you explain a bit?  Also, what if I wanted to plug in my own Connection Pooling library, as I may already have one setup for other things (if using Solr embedded)?&lt;/p&gt;

</comment>
                            <comment id="12608429" author="noble.paul" created="Thu, 26 Jun 2008 14:46:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d suggest,that instead of relying on MySQL in TestJdbcDataSource, we instead use and embedded Derby or some sort of JDBC mock. I suggest Derby mainly b/c it&apos;s already ASF and I don&apos;t want to bother looking up licenses for HSQL or any of the others that might work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We must remove the TestJdbcDataSource if we cannot integrate derby in the dev dependencies. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Also, I notice several interfaces that have a number of methods on them. Have you thought about abstract base classes instead?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes/No A lot of interfaces are never implemented by users like Context, VariableResolver They are kept as interfaces to make API&apos;s simple&lt;br/&gt;
The interfaces people need to implement are &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;EntityProcessor: We  expect users to extend EntityProcessorBase&lt;/li&gt;
	&lt;li&gt;Transformer : The most commonly implemented interface. I am ambivalent regarding this. I&apos;m do  not know if it will change&lt;/li&gt;
	&lt;li&gt;DataSource : This may be made abstract class&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;What relation does the Context have to the HttpDataSource? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;DataSource is always created for an entity. The Context is the easiest  way to get info about the entity. The current DataSources do not use that info . But because we have the info readily available just pass it over.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What if I wanted to slurp from a table on the fly?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;CachedSqlEntityProcessor already does that. It slurps the table and caches the info&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Interactive mode has a bit of a chicken and the egg problem when it comes to JDBC, right, in that the Driver needs to be present in Solr/lib right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure If I got the question . Interactive dev mode does not need the drivers&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In the JDBCDataSource, not sure I follow the connection stuff. Can you explain a bit? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We create connections using Drivermanager.getConnection(). No pooling because, the same connection is used throughout the indexing. one conn is created per entity. So no pooling implemented.&lt;/p&gt;

&lt;p&gt;A  PooledJdbcDataSource impl?&lt;/p&gt;

</comment>
                            <comment id="12608447" author="shalinmangar" created="Thu, 26 Jun 2008 15:16:03 +0100"  >&lt;blockquote&gt;&lt;p&gt;Patch applies cleanly, tests pass, although I notice several @ignore in there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The @ignore are present in TestJdbcDataSource (for lack of mysql to test with) and in TestScriptTransformer (script tests can only be run with Java 6 which has a JS ScriptEngine present by default). We can rewrite the test with Derby if needed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, I notice several interfaces that have a number of methods on them. Have you thought about abstract base classes instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Apart from the ones Noble pointed out, there&apos;s Evaluator which users can use to extend the power of VariableResolver. The EvaluatorBag provides some generally useful implementations. Probably the context can be passed to Evaluator as well. Apart from that, I&apos;m not sure if/how they would change in the future. An AbstractDataSource can be added &amp;#8211; maybe we can templatize the query as well in addition to the return type.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What relation does the Context have to the HttpDataSource? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The Context is independent of a data source. It&apos;s just extra information which is passed along if someone needs to use. Most of the implementation do not actually use it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What if I wanted to slurp from a table on the fly?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If you mean passing an SQL query on the fly as a request parameter then no, it is not supported. We haven&apos;t seen a use-case for it yet &amp;#8211; since schema and indexing are well defined in advance and there is no harm in putting the query in the configuration. However, if someone really wants to do something like that, he/she can pass a full data-config as a request parameter (debug mode) which can be executed. The interactive mode uses this approach. An alternate approach can be to extend SqlEntityProcessor and override the getQuery method to use the Context#getRequestParameters and if sql param is present, use that as the query instead of the sql in configuration.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Interactive mode has a bit of a chicken and the egg problem when it comes to JDBC, right, in that the Driver needs to be present in Solr/lib right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, to play interactively while using a JdbcDataSource, one would need to have the driver jar present in the class-path before hand. The interactive mode is however independent &amp;#8211; HttpDataSource does not have this limitation (slashdot example on the wiki)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In the JDBCDataSource, not sure I follow the connection stuff. Can you explain a bit? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The connection is acquired once and used throught the import process. It is closed if not used for 10 seconds. The idea behind the time-out was to avoid the connection getting closed by the server due to the inactivity. Apart from that scenario, there&apos;s very less probability of a connection error happening &amp;#8211; and even if it did, we may not have a way to deal with it.&lt;/p&gt;
</comment>
                            <comment id="12610418" author="jjh" created="Fri, 4 Jul 2008 03:11:08 +0100"  >&lt;p&gt;I think there is a bug in the -contrib patch.  setting &lt;tt&gt;optimize=false&lt;/tt&gt; as a request parameter appears to turn off clean instead of turning off optimize.&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;DataImporter.java line 496&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (requestParams.containsKey(&lt;span class=&quot;code-quote&quot;&gt;&quot;clean&quot;&lt;/span&gt;))
    clean = &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.parseBoolean((&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;) requestParams.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;clean&quot;&lt;/span&gt;));
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (requestParams.containsKey(&lt;span class=&quot;code-quote&quot;&gt;&quot;optimize&quot;&lt;/span&gt;))
    clean = &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.parseBoolean((&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;) requestParams.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;optimize&quot;&lt;/span&gt;));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="12614245" author="noble.paul" created="Thu, 17 Jul 2008 07:42:04 +0100"  >&lt;ul&gt;
	&lt;li&gt;All interfaces are marked as experimental&lt;/li&gt;
	&lt;li&gt;The bug optimize=true fixed&lt;/li&gt;
	&lt;li&gt;added a new variable to dataimporter namespace _$
{dataimporter.index_start_time}
&lt;p&gt;_&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12615516" author="noble.paul" created="Tue, 22 Jul 2008 06:12:46 +0100"  >&lt;ul&gt;
	&lt;li&gt;Added a method &lt;em&gt;destroy()&lt;/em&gt; to &lt;em&gt;EntityProcessor&lt;/em&gt; . This coupled with &lt;em&gt;init()&lt;/em&gt; can be used for pre/post actions&lt;/li&gt;
	&lt;li&gt;&lt;em&gt;JdbcDataSource&lt;/em&gt; uses &lt;em&gt;Statement#execute()&lt;/em&gt;  instead of &lt;em&gt;Statement#executeQuery()&lt;/em&gt; . So users can execute DDL/DML using &lt;em&gt;JdbcDataSource&lt;/em&gt;&lt;/li&gt;
	&lt;li&gt;&lt;em&gt;Context&lt;/em&gt; has a new method &lt;em&gt;getSolrCore()&lt;/em&gt; which returns the &lt;em&gt;SolrCore&lt;/em&gt; instance&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12615518" author="noble.paul" created="Tue, 22 Jul 2008 06:17:14 +0100"  >&lt;p&gt;it was a bad patch &lt;/p&gt;</comment>
                            <comment id="12615952" author="jonjlee" created="Wed, 23 Jul 2008 11:56:57 +0100"  >&lt;p&gt;This patch has been a wonderful addition to solr - thanks for all the work!&lt;/p&gt;

&lt;p&gt;I believe that there is a bug in CachedSqlEntityProcessor that causes transformers to be ignored.  Here is a patch that worked for me, but I am not sure it is entirely correct:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;--- contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java
+++ contrib.new/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java
@@ -43,18 +43,23 @@
   }
 
   public Map&amp;lt;String, Object&amp;gt; nextRow() {
-    if (rowcache != null)
-      return getFromRowCache();
-    if (!isFirst)
+    Map&amp;lt;String, Object&amp;gt; r;
+    if (rowcache != null) {
+      r = getFromRowCache();
+    } else if (!isFirst) {
       return null;
-    String query = resolver.replaceTokens(context.getEntityAttribute(&quot;query&quot;));
-    isFirst = false;
-    if (simpleCache != null) {
-      return getSimplCacheData(query);
     } else {
-      return getIdCacheData(query);
+      String query = resolver.replaceTokens(context.getEntityAttribute(&quot;query&quot;));
+      isFirst = false;
+      if (simpleCache != null) {
+        r = getSimplCacheData(query);
+      } else {
+        r = getIdCacheData(query);
+      }
     }
-
+    if (r == null)
+      return null;
+    return applyTransformer(r);
   }
 
   protected List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; getAllNonCachedRows() {
 &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12615960" author="noble.paul" created="Wed, 23 Jul 2008 12:26:42 +0100"  >&lt;p&gt;bug fix in &lt;em&gt;CachedSqlEntityProcessor&lt;/em&gt;&lt;/p&gt;</comment>
                            <comment id="12615982" author="noble.paul" created="Wed, 23 Jul 2008 13:06:37 +0100"  >&lt;p&gt;ignore the previous patch&lt;/p&gt;</comment>
                            <comment id="12616203" author="noble.paul" created="Wed, 23 Jul 2008 19:20:26 +0100"  >&lt;p&gt;The previous patch did not take care of multirow-transformers for CachedSqlEntityProcessor. Added a testcase and fixed that&lt;/p&gt;</comment>
                            <comment id="12617472" author="jonjlee" created="Mon, 28 Jul 2008 18:00:06 +0100"  >&lt;p&gt;When using CachedSqlEntityProcessor, an NPE is thrown (EntityProcessorBase.java:367) if a key value doesn&apos;t exist in the cached row set.   This change to EntityProcessorBase.java should fix that, or let me know if I&apos;ve missed something here!&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;--- contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java	2008-07-28 12:49:21.000000000 -0400
+++ contrib.new/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java	2008-07-28 12:40:17.000000000 -0400
@@ -348,7 +348 @@
-    if (rowIdVsRows != null) {
-      rows = rowIdVsRows.get(key);
-      if (rows == null)
-        return null;
-      dataSourceRowCache = new ArrayList&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;(rows);
-      return getFromRowCacheTransformed();
-    } else {
+    if (rowIdVsRows == null) {
@@ -367,6 +360,0 @@
-        dataSourceRowCache = new ArrayList&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;(rowIdVsRows.get(key));
-        if (dataSourceRowCache.isEmpty()) {
-          dataSourceRowCache = null;
-          return null;
-        }
-        return getFromRowCacheTransformed();
@@ -374,0 +363,5 @@
+    rows = rowIdVsRows.get(key);
+    if (rows == null)
+      return null;
+    dataSourceRowCache = new ArrayList&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;(rows);
+    return getFromRowCacheTransformed();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12617483" author="shalinmangar" created="Mon, 28 Jul 2008 18:35:36 +0100"  >&lt;p&gt;Nice catch! We shall incorporate the fix into the next patch.&lt;/p&gt;

&lt;p&gt;Yes indeed it can throw NullPointerException when key value does not exist in cached row set. However, I am wondering what can cause such a cache miss.&lt;/p&gt;</comment>
                            <comment id="12618372" author="shalinmangar" created="Wed, 30 Jul 2008 15:54:17 +0100"  >&lt;p&gt;Sorry for the spam due to my (multiple) mistakes. I think this one is the one &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;A new patch containing the following changes:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;On further thinking about Interface vs. Abstract classes, we have decided to replace all interfaces with abstract classes. Transformer, Context, EntityProcessor, Evaluator, DataSource and VariableResolver are now abstract classes.&lt;/li&gt;
	&lt;li&gt;The bug reported by Jonathan has been fixed and the TestCachedEntityProcessor has been updated to catch it. This exception used to be thrown only if the first request to CachedEntityProcessor needs a row which is not in cache. Subsequent requests were not affected.&lt;/li&gt;
	&lt;li&gt;Javadoc improvements. In particular, all the API related classes are marked as experimental and subject to change.&lt;/li&gt;
	&lt;li&gt;Propset Id in all classes.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Users who have written their own custom transformers using the API will need to change their code. Sorry for the inconvenience.&lt;/p&gt;

&lt;p&gt;Grant - Is there anything else we need to do to get it committed?&lt;/p&gt;</comment>
                            <comment id="12618388" author="gsingers" created="Wed, 30 Jul 2008 16:31:18 +0100"  >&lt;p&gt;Shalin, &lt;/p&gt;

&lt;p&gt;I don&apos;t have the time at the moment on this so feel free to use your new powers.  I think putting it into contrib and marking it as experimental is good (such that it is bound as strictly by back compat rules).&lt;/p&gt;

&lt;p&gt;I have some needs that I would like to see worked in, but I haven&apos;t had the time and I don&apos;t think they should hold back others, as it is obviously in significant use already.  They are also nothing earth-shattering&lt;/p&gt;

&lt;p&gt;So, it&apos;s all yours.  Enjoy.&lt;/p&gt;</comment>
                            <comment id="12618395" author="shalinmangar" created="Wed, 30 Jul 2008 16:43:12 +0100"  >&lt;p&gt;Thanks Grant &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I shall go over the javadocs once more and then commit it.&lt;/p&gt;</comment>
                            <comment id="12618483" author="shalinmangar" created="Wed, 30 Jul 2008 20:45:47 +0100"  >&lt;p&gt;Committed revision 681182.&lt;/p&gt;

&lt;p&gt;A big thanks to Noble for designing these cool features and to Grant for his reviews, feedback and support! Thanks to everybody who helped us by using the patch, giving suggestions and pointing out bugs!&lt;/p&gt;

&lt;p&gt;Solr rocks!&lt;/p&gt;</comment>
                            <comment id="12618938" author="noble.paul" created="Fri, 1 Aug 2008 07:12:08 +0100"  >&lt;p&gt;xpath entity processor can stream rows one by one (for huge xml files) my making stream=&quot;true&quot;&lt;/p&gt;</comment>
                            <comment id="12619512" author="shalinmangar" created="Mon, 4 Aug 2008 14:38:22 +0100"  >&lt;p&gt;Committed revision 682383.&lt;/p&gt;</comment>
                            <comment id="12633046" author="smadhu" created="Sun, 21 Sep 2008 06:30:36 +0100"  >&lt;p&gt;Great patch. I am trying to use this with Firebird. The root Entity makes it&apos;s way into the index - but not the sub entities. On debugging with dataimport.jsp, the sub entities seem to be correctly processed. I can submit a test case with embedded firebird if necessary.&lt;/p&gt;</comment>
                            <comment id="12633048" author="shalinmangar" created="Sun, 21 Sep 2008 08:01:56 +0100"  >&lt;blockquote&gt;&lt;p&gt;Great patch. I am trying to use this with Firebird. The root Entity makes it&apos;s way into the index - but not the sub entities. On debugging with dataimport.jsp, the sub entities seem to be correctly processed. I can submit a test case with embedded firebird if necessary.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You don&apos;t need to use the patch anymore. DataImportHandler has been released with Solr 1.3&lt;/p&gt;

&lt;p&gt;A test case to reproduce your problem will be nice. Just showing us the debug output will also help.&lt;/p&gt;</comment>
                            <comment id="12633074" author="noble.paul" created="Sun, 21 Sep 2008 17:02:53 +0100"  >&lt;p&gt;This issue has served its purpose. Any new requirements/bugs can be raised on separate issue&lt;/p&gt;</comment>
                            <comment id="12633075" author="smadhu" created="Sun, 21 Sep 2008 17:11:20 +0100"  >&lt;p&gt;Shalin&lt;br/&gt;
Sent a test case for Firebird just now to your email ID. If it is a bug with firebird, please let me know how I may report it. thanks!&lt;/p&gt;</comment>
                            <comment id="12849093" author="mistigi" created="Wed, 24 Mar 2010 07:51:05 +0000"  >&lt;p&gt;Thanks for everyone involved for this wonderful contribution. I find it extremely useful, saves lots of time and allows has an added benefit of rapid prototyping.&lt;/p&gt;

&lt;p&gt;One of the initial goals for this project was to be able to schedule automatic imports at regular intervals. I cannot find any reference to it beyond the initial goals. Has this been implemented ? If not any suggestions what is best way to accomplish that ?&lt;/p&gt;

&lt;p&gt;I also have a question if documents deletes is something that this handler can do or it should be done outside of it.&lt;/p&gt;</comment>
                            <comment id="12849121" author="shalinmangar" created="Wed, 24 Mar 2010 09:27:57 +0000"  >&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Scheduling is not implemented inside Solr. You can use a cron job for scheduling automatic imports. For example, you can call &quot;wget &lt;a href=&quot;http://solr.host:port/solr/dataimport?command=full-import&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solr.host:port/solr/dataimport?command=full-import&lt;/a&gt;&quot;.&lt;/p&gt;</comment>
                            <comment id="12849299" author="dsmiley" created="Wed, 24 Mar 2010 17:29:35 +0000"  >&lt;p&gt;However doing so is a protocol crime &amp;#8211; HTTP GET verb should be read-only.  Use HTTP POST instead.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12360482">SOLR-103</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12395403">SOLR-563</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12387197" name="SOLR-469-contrib.patch" size="402880" author="shalinmangar" created="Wed, 30 Jul 2008 15:54:17 +0100"/>
                            <attachment id="12386744" name="SOLR-469-contrib.patch" size="393921" author="noble.paul" created="Wed, 23 Jul 2008 19:20:25 +0100"/>
                            <attachment id="12386707" name="SOLR-469-contrib.patch" size="391533" author="noble.paul" created="Wed, 23 Jul 2008 13:06:37 +0100"/>
                            <attachment id="12386704" name="SOLR-469-contrib.patch" size="391511" author="noble.paul" created="Wed, 23 Jul 2008 12:26:42 +0100"/>
                            <attachment id="12386599" name="SOLR-469-contrib.patch" size="388983" author="noble.paul" created="Tue, 22 Jul 2008 06:17:14 +0100"/>
                            <attachment id="12386267" name="SOLR-469-contrib.patch" size="387742" author="noble.paul" created="Thu, 17 Jul 2008 07:42:03 +0100"/>
                            <attachment id="12384594" name="SOLR-469-contrib.patch" size="376837" author="shalinmangar" created="Tue, 24 Jun 2008 16:51:28 +0100"/>
                            <attachment id="12384480" name="SOLR-469-contrib.patch" size="774464" author="noble.paul" created="Mon, 23 Jun 2008 10:48:03 +0100"/>
                            <attachment id="12384054" name="SOLR-469-contrib.patch" size="375393" author="shalinmangar" created="Mon, 16 Jun 2008 14:44:56 +0100"/>
                            <attachment id="12384004" name="SOLR-469-contrib.patch" size="758616" author="noble.paul" created="Sat, 14 Jun 2008 09:06:09 +0100"/>
                            <attachment id="12383857" name="SOLR-469-contrib.patch" size="357569" author="shalinmangar" created="Wed, 11 Jun 2008 17:47:39 +0100"/>
                            <attachment id="12381499" name="SOLR-469-contrib.patch" size="345204" author="shalinmangar" created="Tue, 6 May 2008 12:37:19 +0100"/>
                            <attachment id="12383854" name="SOLR-469.patch" size="343938" author="shalinmangar" created="Wed, 11 Jun 2008 16:41:59 +0100"/>
                            <attachment id="12380679" name="SOLR-469.patch" size="331709" author="shalinmangar" created="Tue, 22 Apr 2008 11:59:26 +0100"/>
                            <attachment id="12380002" name="SOLR-469.patch" size="235714" author="shalinmangar" created="Sun, 13 Apr 2008 13:01:17 +0100"/>
                            <attachment id="12378899" name="SOLR-469.patch" size="185860" author="shalinmangar" created="Sun, 30 Mar 2008 17:21:16 +0100"/>
                            <attachment id="12378868" name="SOLR-469.patch" size="186062" author="shalinmangar" created="Sat, 29 Mar 2008 20:39:59 +0000"/>
                            <attachment id="12378135" name="SOLR-469.patch" size="385854" author="noble.paul" created="Tue, 18 Mar 2008 16:48:29 +0000"/>
                            <attachment id="12375753" name="SOLR-469.patch" size="104575" author="shalinmangar" created="Sat, 16 Feb 2008 14:49:40 +0000"/>
                            <attachment id="12375183" name="SOLR-469.patch" size="102925" author="shalinmangar" created="Sun, 10 Feb 2008 16:23:46 +0000"/>
                            <attachment id="12375149" name="SOLR-469.patch" size="117087" author="shalinmangar" created="Sat, 9 Feb 2008 13:48:08 +0000"/>
                            <attachment id="12387326" name="xpath-stream.patch" size="10271" author="noble.paul" created="Fri, 1 Aug 2008 07:12:08 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Feb 2008 17:03:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7135</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxr5b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20717</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>