<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:16:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-37/SOLR-37.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-37] Add additional configuration options for Highlighting</title>
                <link>https://issues.apache.org/jira/browse/SOLR-37</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;As discussed in the mailing list, I&apos;ve been looking at adding additional configuration options for highlighting. &lt;br/&gt;
I&apos;ve made quite a few changes to the properties for highlighting:&lt;/p&gt;

&lt;p&gt;Properties that can be set on request, or in solrconfig.xml at the top level:&lt;br/&gt;
  highlight (true/false)&lt;br/&gt;
  highlightFields&lt;br/&gt;
Properties that can be set in solrconfig.xml at the top level or per-field&lt;br/&gt;
  formatter (simple/gradient)&lt;br/&gt;
  formatterPre (preTag for simple formatter)&lt;br/&gt;
  formatterPost (postTag for simple formatter)&lt;br/&gt;
  formatterMinFgCl (min foreground colour for gradient formatter)&lt;br/&gt;
  formatterMaxFgCl (max foreground colour for gradient formatter)&lt;br/&gt;
  formatterMinBgCl (min background colour for gradient formatter)&lt;br/&gt;
  formatterMaxBgCl (max background colour for gradient formatter)&lt;br/&gt;
  fragsize (if &amp;lt;=0 use NullFragmenter, otherwise use GapFragmenter with this value)&lt;/p&gt;

&lt;p&gt;I&apos;ve added variables for these values to CommonParams, plus there&apos;s a fields Map&amp;lt;String,CommonParams&amp;gt; that is parsed from nested NamedLists (i.e. a lst named &quot;fields&quot;, with a nested lst for each field).&lt;/p&gt;

&lt;p&gt;Here&apos;s a sample of how you can mix and match properties in solrconfig.xml:&lt;/p&gt;

&lt;p&gt;  &amp;lt;requestHandler name=&quot;hl&quot; class=&quot;solr.StandardRequestHandler&quot; &amp;gt;&lt;br/&gt;
    &amp;lt;str name=&quot;formatter&quot;&amp;gt;simple&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;str name=&quot;formatterPre&quot;&amp;gt;&amp;lt;i&amp;gt;&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;str name=&quot;formatterPost&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;str name=&quot;highlightFields&quot;&amp;gt;title,authors,journal&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;int name=&quot;fragsize&quot;&amp;gt;0&amp;lt;/int&amp;gt;&lt;br/&gt;
    &amp;lt;lst name=&quot;fields&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;lst name=&quot;abstract&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;str name=&quot;formatter&quot;&amp;gt;gradient&amp;lt;/str&amp;gt;&lt;br/&gt;
        &amp;lt;str name=&quot;formatterMinBgCl&quot;&amp;gt;#FFFF99&amp;lt;/str&amp;gt;&lt;br/&gt;
        &amp;lt;str name=&quot;formatterMaxBgCl&quot;&amp;gt;#FF9900&amp;lt;/str&amp;gt;&lt;br/&gt;
        &amp;lt;int name=&quot;fragsize&quot;&amp;gt;30&amp;lt;/int&amp;gt;&lt;br/&gt;
        &amp;lt;int name=&quot;maxSnippets&quot;&amp;gt;2&amp;lt;/int&amp;gt;&lt;br/&gt;
      &amp;lt;/lst&amp;gt;&lt;br/&gt;
      &amp;lt;lst name=&quot;authors&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;str name=&quot;formatterPre&quot;&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;/str&amp;gt;&lt;br/&gt;
        &amp;lt;str name=&quot;formatterPost&quot;&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;/lst&amp;gt;&lt;br/&gt;
    &amp;lt;/lst&amp;gt;&lt;br/&gt;
  &amp;lt;/requestHandler&amp;gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve created HighlightingUtils to handle most of the parameter parsing, but the hightlighting is still done in SolrPluginUtils and the doStandardHighlighting() method still has the same signature, but the other highlighting methods have had to be changed (because highlighters are now created per highlighted field).&lt;/p&gt;

&lt;p&gt;I&apos;m not particularly happy with the code to pull parameters from CommonParams, first checking the field then falling back, e.g.:&lt;br/&gt;
         String pre = (params.fields.containsKey(fieldName) &amp;amp;&amp;amp; params.fields.get(fieldName).formatterPre != null) ?&lt;br/&gt;
               params.fields.get(fieldName).formatterPre : &lt;br/&gt;
                  params.formatterPre != null ? params.formatterPre : &quot;&amp;lt;em&amp;gt;&quot;;&lt;/p&gt;

&lt;p&gt;I&apos;ve removed support for a custom formatter - just choosing between simple/gradient. Probably that&apos;s a bad decision, but I wanted an easy way to choose between the standard formatters without having to invent a generic way of supplying arguments for the constructor. Perhaps there should be formatterType=simple/gradient and formatterClass=... which overrides formatterType if set at a lower level - with the formatterClass having to have a zero-args constructor? Note: gradient is actually SpanGradientFormatter.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I properly understand how Fragmenters work, so supplying fragsize to GapFragmenter where &amp;gt;0 (instead of what was a default of 50) may not make sense.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12346435">SOLR-37</key>
            <summary>Add additional configuration options for Highlighting</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="klaasm">Mike Klaas</assignee>
                                    <reporter username="amayingenta">Andrew May</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Jul 2006 16:05:04 +0100</created>
                <updated>Fri, 10 May 2013 11:40:29 +0100</updated>
                            <resolved>Fri, 1 Sep 2006 21:21:31 +0100</resolved>
                                                    <fixVersion>1.1.0</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12422669" author="amayingenta" created="Fri, 21 Jul 2006 16:06:23 +0100"  >&lt;p&gt;Changes to CommonParams, SolrPluginUtils, plus new HighlightingUtils&lt;/p&gt;</comment>
                            <comment id="12430299" author="amayingenta" created="Thu, 24 Aug 2006 19:07:13 +0100"  >&lt;p&gt;New patch to configure Highlighting using new SolrParams.&lt;/p&gt;

&lt;p&gt;Parameters:&lt;br/&gt;
hl - turn highlighting on/off&lt;br/&gt;
hl.fl - list of fields to be highlighted, either as a single parameter (e.g. hl.fl=title,keywords) or multiple parameters (hl.fl=title&amp;amp;hl.fl=keywords)&lt;br/&gt;
hl.snippets - maximum number of highlight snippets (default = 1)&lt;br/&gt;
hl.fragsize - fragment size for highlighting, 0 -&amp;gt; NullFragmenter (default = 50)&lt;br/&gt;
hl.formatter - value of either simple or gradient (default = simple)&lt;br/&gt;
hl.simple.pre - simple formatter pre tag (default = &amp;lt;em&amp;gt;)&lt;br/&gt;
hl.simple.post - simple formatter post tag (default = &amp;lt;/em&amp;gt;)&lt;br/&gt;
hl.gradient.minFg - gradient formatter min foreground colour&lt;br/&gt;
hl.gradient.maxFg - gradient formatter max foreground colour&lt;br/&gt;
hl.gradient.minBg - gradient formatter min background colour&lt;br/&gt;
hl.gradient.maxBg - gradient formatter max background colour&lt;/p&gt;

&lt;p&gt;All values appart from hl &amp;amp; hl.fl can be specified per field. e.g. f.title.hl.fragsize=0.&lt;/p&gt;

&lt;p&gt;All the highlighting code is now in HighlighingUtils rather than SolrPluginUtils. Seems like I&apos;ve ended up with one big doHighlighting method that does all the work - not sure that&apos;s a good thing, but things ended up this way when I started creating highlighters per field.&lt;/p&gt;</comment>
                            <comment id="12430318" author="yseeley@gmail.com" created="Thu, 24 Aug 2006 21:22:17 +0100"  >&lt;p&gt;ping test  (4:24 EDT, 8/24/2006)&lt;/p&gt;</comment>
                            <comment id="12430345" author="klaasm" created="Thu, 24 Aug 2006 22:51:56 +0100"  >&lt;p&gt;Thanks for the patch!&lt;/p&gt;

&lt;p&gt;A few comments:&lt;/p&gt;

&lt;p&gt;1) The patch uses absolute paths, which makes it difficult to apply.  Please generate patches using &apos;svn diff &amp;gt; mypatch.diff&apos; at the root level of a solr trunk checkout&lt;/p&gt;

&lt;p&gt;2) I don&apos;t believe that it is necessary to add the constructors to GrapFragmenter--the existing constructors from SimpleFragmenter are equivalent.&lt;/p&gt;

&lt;p&gt;3) The default FRAGSIZE should be 100 to conform to Lucene&apos;s Highlighter default (it would be nice if this was exposed so we could use it)&lt;/p&gt;

&lt;p&gt;4) Might it be worth providing sensible defaults for the gradient values so users can try hl.formatter=gradient without futher configuration?&lt;/p&gt;

&lt;p&gt;5) There are a few constuctions of this form: &lt;br/&gt;
+      String param = getParams(request).getFieldParam(fieldName, SNIPPETS);&lt;br/&gt;
+      //the default of zero should never be used, as SNIPPETS is defined in the defaults&lt;br/&gt;
+      return (param != null) ? Integer.parseInt(param) : 0;&lt;/p&gt;

&lt;p&gt;where getParams returns a SolrParams instance which already has defaults for this parameter.  Surely providing a default is unnecessary, and shouldn&apos;t null also be impossible due to the DefaultSolrParams construction?  Inlining these (in the calling method) to something like&lt;/p&gt;

&lt;p&gt;SolrParams p = getParams(request)&lt;br/&gt;
int maxSnippets = Integer.parseInt(p.getFieldParam(fieldName));&lt;/p&gt;

&lt;p&gt;would be cleaner and save some object construction costs.&lt;/p&gt;

&lt;p&gt;6) The last time this patch was discussed it was mentioned that there are tradeoffs in using field-specific idf values for highlighting scoring.  One downside is that they must be read. Another is terms are only highlit in fields they are searched in, which may be desirable behaviour, but limits the usefulness of the hl.fl parameter.  I&apos;m not sure what the best approach is.&lt;/p&gt;

&lt;p&gt;7) The attached patch contains no tests, and further, though I have not applied the patch due to 1), I&apos;m skeptical that the testsuite passes since the parameter names weren&apos;t changed in src/test/o/a/s/HighlighterTest.java.  The latter is easy enough to fix, but new test should be included before this patch is committed.&lt;/p&gt;

&lt;p&gt;Thanks again for the patch!&lt;/p&gt;</comment>
                            <comment id="12430503" author="amayingenta" created="Fri, 25 Aug 2006 14:33:02 +0100"  >&lt;p&gt;Mike,&lt;br/&gt;
1) Was using SVN support in Eclipse and it doesn&apos;t let you control this - I&apos;ve installed the command line version now.&lt;br/&gt;
2) If GapFragmenter just has a default constructor it&apos;s not possible to pass the fragsize (constructors not inherited)?&lt;br/&gt;
3) My mistake - I think this is a legacy of me originally confusing fragsize and GapFragmenter&apos;s increment threshold.&lt;br/&gt;
4) Perhaps - I wasn&apos;t sure what sensible defaults were, and I can&apos;t seem to get the gradient fragmenter to do anything useful - but I can&apos;t see an obvious bug in my code to construct it.&lt;br/&gt;
5) That was me being overly defensive, and I&apos;ve changed it now. I considered adding methods like getFieldInt(), getFieldBool to SolrParams, so there were field versions of all the non-field methods - but decided against it.&lt;br/&gt;
6) I was wondering whether a hl.exact flag might be useful - if false (the default?) the QueryScorer wouldn&apos;t be created with the field/maxTermWeight. I&apos;m not sure there&apos;s any point using the gradient formatter unless you supply the field name/maxTermWeight, so that might ignore this setting.&lt;br/&gt;
7) Sorry - will fix and add additional tests.&lt;/p&gt;

&lt;p&gt;One thing I don&apos;t like about HighlightingUtils as it stands is the lack of state. When highlighting multiple fields, getParams() is called many times, each time constructing a DefaultSolrParams (although I don&apos;t think there&apos;s a big overhead to doing this). If we&apos;re not specifying the field when creating the QueryScorer then this could be reused for multiple fields. We could possibly re-use the highlighter instance as well.&lt;/p&gt;</comment>
                            <comment id="12430552" author="klaasm" created="Fri, 25 Aug 2006 18:44:06 +0100"  >&lt;p&gt;Hi Andrew,&lt;/p&gt;

&lt;p&gt;1) 3) 5) 7) thanks!&lt;br/&gt;
2) You&apos;re right--I&apos;m head is sometimes too steeped in pythonland.&lt;br/&gt;
4) If no-one is using the gradient formatter, perhaps we shouldn&apos;t include it by default?  There may be more intuitive ways of designing this feature if we have the benefit of a real world use case.&lt;br/&gt;
6) &quot;exact&quot; could mean many things in the context of highlighting.  Perhaps something like &lt;/p&gt;

&lt;p&gt;hl.scoring=simple (default)&lt;br/&gt;
hl.scoring=fieldidf (per-field idf weights)&lt;/p&gt;</comment>
                            <comment id="12430558" author="amayingenta" created="Fri, 25 Aug 2006 18:59:25 +0100"  >&lt;p&gt;New patch incorporating feedback (hopefully the diff is more usable this time).&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;default fragsize now 100&lt;/li&gt;
	&lt;li&gt;removed redundant defaults when getting fragsize and snippets&lt;/li&gt;
	&lt;li&gt;fixed tests and added new tests&lt;/li&gt;
	&lt;li&gt;added &quot;Enable Highlighting&quot; and &quot;Fields to Highlight&quot; to the advanced form in the admin pages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The other change, which is more complex is to add a new &quot;hl.exact&quot; parameter (which defaults to false) which affects how the QueryScorer is created. The logic is now this:&lt;/p&gt;

&lt;p&gt;if using gradient formatter&lt;br/&gt;
    new QueryScorer(query, indexReader, fieldName)&lt;br/&gt;
else if hl.exact=true&lt;br/&gt;
    new QueryScorer(query, fieldName)&lt;br/&gt;
else&lt;br/&gt;
    new QueryScorer(query)&lt;/p&gt;

&lt;p&gt;My understanding is that the GradientFormatter requires the scorer to be created with IndexReader and field name to work properly, so using a gradient formatter for any field overrides the hl.exact flag.&lt;br/&gt;
I&apos;ve assumed that it&apos;s more efficient to create a QueryScorer that doesn&apos;t use an IndexReader in the case of hl.exact=true. If not then that could be rolled in with the gradient formatter case.&lt;br/&gt;
Then the default behaviour is to create a QueryScorer without the field name and have less exact highlighting.&lt;/p&gt;

&lt;p&gt;Does that sound like reasonable behaviour?&lt;/p&gt;

&lt;p&gt;Ah - looks like I&apos;m overlapping with a comment from Mike. I&apos;m suggesting &apos;exact&apos; because of how adding the fieldname to the QueryScorer affects searches across multiple fields - basically for what I&apos;m using it for I don&apos;t want a value I searched for in the journal field appearing in the highlight for the title field (which was searched with something different) - so I would want hl.exact=true. But you&apos;re right - this is probably an overly broad term, and it is all about the scorer.&lt;/p&gt;

&lt;p&gt;As for removing the gradient highlighter - I still don&apos;t really know how it&apos;s supposed to work, and I can&apos;t get it to do anything useful when searching my data, but perhaps that&apos;s my configuration error (rather than a coding error in this patch). I&apos;ll probably end up using the simple formatter with custom pre and post values.&lt;/p&gt;</comment>
                            <comment id="12430752" author="yseeley@gmail.com" created="Sat, 26 Aug 2006 16:51:45 +0100"  >&lt;p&gt;JIRA ping test (11:54 EDT, 8/26/2006)&lt;/p&gt;</comment>
                            <comment id="12431039" author="klaasm" created="Mon, 28 Aug 2006 20:27:29 +0100"  >&lt;p&gt;Does anyone else have comments on the two issues I raised, namely:&lt;/p&gt;

&lt;p&gt;1) should we include support for gradient formatting? (My opinion is &quot;no&quot;, since no-one uses it and Andrew can&apos;t get it to work with his data so we have no functionality tests)&lt;/p&gt;

&lt;p&gt;2) the &quot;exact&quot; parameter.  I&apos;m uncomfortable about the name and the fact that setting a formatter (which feels to the user like a cosmetic setting) can influence core highlighting functionality.&lt;/p&gt;

&lt;p&gt;Once these items are resolved and re-reviewed I am in favour of committing the patch.&lt;/p&gt;</comment>
                            <comment id="12431590" author="amayingenta" created="Wed, 30 Aug 2006 15:39:33 +0100"  >&lt;p&gt;I&apos;ve spent a bit of time trying to understand Gradient formatting and how QueryScorer is used. As I didn&apos;t see any very good documentation for this (I may have missed it) - I thought I&apos;d share.&lt;/p&gt;

&lt;p&gt;It appears that GradientFormatter colours according to the term&apos;s weight within the index - so terms that appear less frequently in the index will be coloured closer to the max foreground/background colour. So, the colour is not related to the specific document or fragment being evaluated and that term will be highlighted the same for the entire results set. If two terms appear with a similar frequency in the index they will have similar colours - and this seems to happen a lot (perhaps because scaling is done between 0 and maxWeight rather than minWeight and maxWeight).&lt;/p&gt;

&lt;p&gt;There&apos;s also a fairly serious bug in the colouring that makes a lot of combinations give meaningless results (e.g. minBg=#FF0000, maxBg=#00FF00 will give results coloured #FFFF00) - see GradientFormatter.getColorVal().&lt;/p&gt;

&lt;p&gt;In other words, I now agree with Mike that we should not support Gradient formatting. Perhaps we still want to retain the hl.formatter= parameter in case we have any other values than &quot;simple&quot; in the future - and keep hl.simple.pre and hl.simple.post as they are.&lt;/p&gt;

&lt;p&gt;As for the QueryScorer, I think it makes sense to support all three ways it can be construted:&lt;br/&gt;
1) hl.scoring=simple (the default)  - construct with Query only. May have some matches from other terms, but allows you to highlight different fields to the ones searched.&lt;br/&gt;
2) hl.scoring=field - constructed with Query and fieldName. Only highlights terms matched in this field by the query.&lt;br/&gt;
3) hl.scoring=fieldidx - constructed with Query, fieldName and IndexReader. I think the selection of the best fragment(s) will be improved because the terms will be weighted according to their frequency in the index - but this has to be more costly as it calls IndexReader.docFreq for each term.&lt;/p&gt;

&lt;p&gt;Does that sound reasonable?&lt;/p&gt;</comment>
                            <comment id="12431616" author="amayingenta" created="Wed, 30 Aug 2006 17:24:11 +0100"  >&lt;p&gt;New patch that removes support for gradient formatter, and uses hl.scoring parameter instead of hl.exact to control how the QueryScorer is created.&lt;/p&gt;</comment>
                            <comment id="12431618" author="amayingenta" created="Wed, 30 Aug 2006 17:27:20 +0100"  >&lt;p&gt;I guess I need to number my patch files as they don&apos;t seem to get listed in the order they were added and I can&apos;t remove old ones. The new patch appears to be number 3.&lt;/p&gt;</comment>
                            <comment id="12432144" author="amayingenta" created="Fri, 1 Sep 2006 15:02:58 +0100"  >&lt;p&gt;New patch.diff - removed hl.scoring=simple/field/fieldidx parameter and added hl.requireFieldMatch=true/false.&lt;/p&gt;

&lt;p&gt;Also added two getFieldBool methods to SolrParams - so that field parameters can use the same parseBool method (which also evaluates yes/on to true).&lt;/p&gt;</comment>
                            <comment id="12432230" author="klaasm" created="Fri, 1 Sep 2006 21:21:31 +0100"  >&lt;p&gt;Commited r439428&lt;/p&gt;</comment>
                            <comment id="12589351" author="hossman" created="Wed, 16 Apr 2008 00:56:44 +0100"  >&lt;p&gt;This bug was modified as part of a bulk update using the criteria...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Marked (&quot;Resolved&quot; or &quot;Closed&quot;) and &quot;Fixed&quot;&lt;/li&gt;
	&lt;li&gt;Had no &quot;Fix Version&quot; versions&lt;/li&gt;
	&lt;li&gt;Was listed in the CHANGES.txt for 1.1&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The Fix Version for all 38 issues found was set to 1.1, email notification&lt;br/&gt;
was suppressed to prevent excessive email.&lt;/p&gt;

&lt;p&gt;For a list of all the issues modified, search jira comments for this&lt;br/&gt;
(hopefully) unique string: 20080415hossman3&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12339509" name="patch" size="24837" author="amayingenta" created="Thu, 24 Aug 2006 19:07:13 +0100"/>
                            <attachment id="12337303" name="patch" size="23655" author="amayingenta" created="Fri, 21 Jul 2006 16:06:23 +0100"/>
                            <attachment id="12340038" name="patch.diff" size="35529" author="amayingenta" created="Fri, 1 Sep 2006 15:02:58 +0100"/>
                            <attachment id="12339883" name="patch.diff" size="34744" author="amayingenta" created="Wed, 30 Aug 2006 17:24:11 +0100"/>
                            <attachment id="12339588" name="patch.diff" size="35369" author="amayingenta" created="Fri, 25 Aug 2006 18:59:25 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 24 Aug 2006 20:22:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7541</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxts7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21144</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>