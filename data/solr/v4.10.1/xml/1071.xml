<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:24:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1071/SOLR-1071.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1071] spellcheck.extendedResults returns an invalid JSON response when count &gt; 1</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1071</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;When: wt=json &amp;amp; spellcheck.extendedResults=true &amp;amp; spellcheck.count &amp;gt; 1, the suggestions are returned in the following format:&lt;/p&gt;

&lt;p&gt;&quot;suggestions&quot;:[&lt;br/&gt;
	&quot;amsterdm&quot;,{&lt;br/&gt;
	 &quot;numFound&quot;:5,&lt;br/&gt;
	 &quot;startOffset&quot;:0,&lt;br/&gt;
	 &quot;endOffset&quot;:8,&lt;br/&gt;
	 &quot;origFreq&quot;:0,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:8498,
	  &quot;word&quot;:&quot;amsterdam&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:1,
	  &quot;word&quot;:&quot;amsterd&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:8,
	  &quot;word&quot;:&quot;amsterdams&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:1,
	  &quot;word&quot;:&quot;amstedam&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:{&lt;br/&gt;
	  &quot;frequency&quot;:22,&lt;br/&gt;
	  &quot;word&quot;:&quot;amsterdamse&quot;}},&lt;br/&gt;
	&quot;beak&quot;,{&lt;br/&gt;
	 &quot;numFound&quot;:5,&lt;br/&gt;
	 &quot;startOffset&quot;:9,&lt;br/&gt;
	 &quot;endOffset&quot;:13,&lt;br/&gt;
	 &quot;origFreq&quot;:0,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:379,
	  &quot;word&quot;:&quot;beek&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:26,
	  &quot;word&quot;:&quot;beau&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:26,
	  &quot;word&quot;:&quot;baak&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:&lt;/p&gt;
{
	  &quot;frequency&quot;:15,
	  &quot;word&quot;:&quot;teak&quot;}
&lt;p&gt;,&lt;br/&gt;
	 &quot;suggestion&quot;:{&lt;br/&gt;
	  &quot;frequency&quot;:11,&lt;br/&gt;
	  &quot;word&quot;:&quot;beuk&quot;}},&lt;br/&gt;
	&quot;correctlySpelled&quot;,false,&lt;br/&gt;
	&quot;collation&quot;,&quot;amsterdam beek&quot;]}}&lt;/p&gt;

&lt;p&gt;This is an invalid json as each term is associated with a JSON object which holds multiple &quot;suggestion&quot; attributes. When working with a JSON library only the last &quot;suggestion&quot; attribute is picked up.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12417016">SOLR-1071</key>
            <summary>spellcheck.extendedResults returns an invalid JSON response when count &gt; 1</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                    <reporter username="uboness">Uri Boness</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Mar 2009 00:54:05 +0000</created>
                <updated>Tue, 10 Nov 2009 15:50:35 +0000</updated>
                            <resolved>Tue, 8 Sep 2009 23:27:56 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.4</fixVersion>
                                    <component>spellchecker</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12694196" author="gsingers" created="Tue, 31 Mar 2009 19:03:39 +0100"  >&lt;p&gt;I don&apos;t know much about JSON, but it is my understanding that it is all generated from the NamedList, so I&apos;m not sure what the solution would be.&lt;/p&gt;</comment>
                            <comment id="12694199" author="djimenez" created="Tue, 31 Mar 2009 19:09:49 +0100"  >&lt;p&gt;the JSON response writer has a specific parameter for this case: json.nl&lt;/p&gt;

&lt;p&gt;It allows the the user to specify how they want named lists (which don&apos;t necessarily have unique keys suited to a JSON object map) to be treated. The values are listed in the wiki documentation:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/solr/SolJSON&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/SolJSON&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe it affects the treatment of all named lists in the response, so if you&apos;re using facets or the like, they&apos;d also be affected.&lt;/p&gt;</comment>
                            <comment id="12694246" author="gsingers" created="Tue, 31 Mar 2009 21:20:00 +0100"  >&lt;p&gt;Uri, does that solve your problem?&lt;/p&gt;</comment>
                            <comment id="12694295" author="uboness" created="Tue, 31 Mar 2009 22:52:04 +0100"  >&lt;p&gt;OK, so I checked it out and no, setting the &lt;tt&gt;json.nl&lt;/tt&gt; parameter doesn&apos;t help in this case. I looked it up and the problem lays in the fact that the &lt;tt&gt;suggestions&lt;/tt&gt; data structure is SimpleOrderedMap. SimpleOrderedMap structure are always renderer by the JsonResponseWriter as a map and are not influenced by the &lt;tt&gt;json.nl&lt;/tt&gt; parameter. There are two possible solutions here as I see it:&lt;/p&gt;

&lt;p&gt;1. A simple fix that would just replace the current SimpleOrderedMap with an ordinary NamedList (see SpecllCheckComponent_fix.patch)&lt;br/&gt;
   &lt;b&gt;Advantages:&lt;/b&gt; More backward compatible&lt;br/&gt;
   &lt;b&gt;Disadvantages:&lt;/b&gt; you still need to use the &lt;tt&gt;json.nl&lt;/tt&gt; parameter in order to get it to work (and the this parameter influences the complete response structure, not just the spellcheck output)&lt;/p&gt;


&lt;p&gt;2. A small change to the response data structure that will put all the suggestion items as an array value of one field named &quot;suggestionItems&quot; (see SpellCheckComponent_new_structure.patch)&lt;br/&gt;
   &lt;b&gt;Advantages:&lt;/b&gt; A proper and intuitive structure for the response&lt;br/&gt;
   &lt;b&gt;Disadvantages:&lt;/b&gt; probably less backward compatible as the first solution&lt;/p&gt;

&lt;p&gt;(NOTE: patches applied on the trunk version)&lt;/p&gt;</comment>
                            <comment id="12694707" author="yseeley@gmail.com" created="Wed, 1 Apr 2009 20:54:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;2. A small change to the response data structure that will put all the suggestion items as an array value of one field named &quot;suggestionItems&quot; &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1... how about &quot;suggestions&quot; for the tag though.&lt;/p&gt;
</comment>
                            <comment id="12694710" author="uboness" created="Wed, 1 Apr 2009 21:07:25 +0100"  >&lt;p&gt;At first I tagged it &quot;suggestions&quot; but then I thought it might be confusing having two such tags on different levels&lt;/p&gt;</comment>
                            <comment id="12694727" author="djimenez" created="Wed, 1 Apr 2009 21:42:23 +0100"  >&lt;p&gt;Some other response writers, like Serialized PHP for example, always output an object or keyed array for named lists. Do they need to implement similar parameters as the JSON writer? Or, like the direction you seem to be going here, should all response structures avoid the use of named lists with repeating element names?&lt;/p&gt;

&lt;p&gt;This seems, at least to me, like a more general issue of convention and guidelines in the search components.&lt;/p&gt;</comment>
                            <comment id="12694745" author="yseeley@gmail.com" created="Wed, 1 Apr 2009 22:09:06 +0100"  >&lt;blockquote&gt;&lt;p&gt;At first I tagged it &quot;suggestions&quot; but then I thought it might be confusing having two such tags on different levels &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;good point - I hadn&apos;t noticed it was the same as the top level tag.&lt;br/&gt;
We could use a different word altogether... say &quot;words&quot;, &quot;terms&quot;, &quot;replacements&quot;, &quot;alternatives&quot;,&quot;corrections&quot;?&lt;/p&gt;</comment>
                            <comment id="12694763" author="uboness" created="Wed, 1 Apr 2009 22:41:52 +0100"  >&lt;p&gt;I think &quot;alternatives&quot; and &quot;corrections&quot; are best candidate semantically speaking. Personally, I like &quot;alternatives&quot; the most but &quot;corrections&quot; is good as well.&lt;/p&gt;</comment>
                            <comment id="12701490" author="uboness" created="Wed, 22 Apr 2009 12:29:20 +0100"  >&lt;p&gt;Changed &quot;items&quot; to &quot;alternatives&quot; and updated the SpellCheckComponentTest class accordingly.&lt;/p&gt;</comment>
                            <comment id="12701492" author="uboness" created="Wed, 22 Apr 2009 12:35:45 +0100"  >&lt;p&gt;One more thing to consider: now this component is a bit inconsistent with its response format. When extendedResults is used, the suggestions are put in an array called &quot;alternatives&quot;, while when it&apos;s not used the suggestions are put in an array called &quot;suggestion&quot;. I think it will be wise to consider changing the later to &quot;alternatives&quot; as well, but of course it will break backward compatibility and as this component is probably widely used it&apos;s a risk. Another option is at least temporary for 1.4 release add support for another parameter (something like, spellcheck.version=1.3) that will then signal the component to render the response in the 1.3 format - a bit ugly, but it will at least solve the compatibility issues.&lt;/p&gt;</comment>
                            <comment id="12735749" author="gsingers" created="Mon, 27 Jul 2009 21:09:43 +0100"  >&lt;blockquote&gt;&lt;p&gt;When extendedResults is used, the suggestions are put in an array called &quot;alternatives&quot;, while when it&apos;s not used the suggestions are put in an array called &quot;suggestion&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I debated the two different structures for a while and ultimately decided that people would have to deal with it no matter what.  My suspicion was that people either use extendedResults or not and that they don&apos;t mix them, but perhaps I was wrong.  Even if they do mix them, they still need code for recognizing when there is a difference (unless they are just spitting back out the raw, which means it doesn&apos;t matter anyway), so I don&apos;t know if it matters either way.  Since this is out in the wild already, I think we should just fix the bug.  &lt;/p&gt;</comment>
                            <comment id="12735751" author="gsingers" created="Mon, 27 Jul 2009 21:15:20 +0100"  >&lt;p&gt;One thought, though:&lt;/p&gt;

&lt;p&gt;Why isn&apos;t this a JSONResponseWriter bug?  It seems to me that the code is using valid Solr data structures and that the problem lies in the fact that the JSONRW is not creating valid JSON output.  Say we fix this here in the SCC, it doesn&apos;t stop anyone from doing it anywhere else, which will just lead to more bugs later.&lt;/p&gt;</comment>
                            <comment id="12735856" author="uboness" created="Tue, 28 Jul 2009 01:36:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;I debated the two different structures for a while and ultimately decided that people would have to deal with it no matter what. My suspicion was that people either use extendedResults or not and that they don&apos;t mix them, but perhaps I was wrong. Even if they do mix them, they still need code for recognizing when there is a difference (unless they are just spitting back out the raw, which means it doesn&apos;t matter anyway), so I don&apos;t know if it matters either way. Since this is out in the wild already, I think we should just fix the bug. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I guess you&apos;re right - the users will have to handle the differences between the results anyway&lt;/p&gt;</comment>
                            <comment id="12735859" author="uboness" created="Tue, 28 Jul 2009 01:37:34 +0100"  >&lt;p&gt;I&apos;m not sure it&apos;s a bug in the JSONRW, it seems to me that it was intentionally implemented to behave in this manner. It is confusing though, and indeed when developing components one has to keep in mind the consequences of using a &lt;em&gt;SimpleOrderedMap&lt;/em&gt; vs. a simple &lt;em&gt;NamedList&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;I think there are several ways to tackle this:&lt;/p&gt;

&lt;p&gt;1. Do nothing. In which case people should always know the consequences of using a &lt;em&gt;SimpleOrderedMap&lt;/em&gt; vs. a simple &lt;em&gt;NamedList.&lt;/em&gt; &lt;br/&gt;
&lt;b&gt;Advantages:&lt;/b&gt; you probably don&apos;t break existing functionality. No code changes need to take place.&lt;br/&gt;
&lt;b&gt;Disadvantages:&lt;/b&gt; (as you mentioned) more error prone - easier to introduce such bugs when writing new components. People need to know the best practices which are not enforced.&lt;/p&gt;

&lt;p&gt;2. In the &lt;em&gt;SimpleOrderedMap&lt;/em&gt;, keep track of duplicate keys. If a &lt;em&gt;SimpleOrderedMap&lt;/em&gt; hold duplicate keys then it should not be rendered as a JSON object, but more like a normal &lt;em&gt;NamedList&lt;/em&gt;&lt;br/&gt;
&lt;b&gt;Advantages:&lt;/b&gt; you probably break nothing.. if components already use duplicate keys in a &lt;em&gt;SimpleOrderedMap&lt;/em&gt; then most probably they&apos;ve introduced this same bug.&lt;br/&gt;
&lt;b&gt;Disadvantage:&lt;/b&gt; Inconsistent in the sense that in different occasions a &lt;em&gt;SimpleOrderedMap&lt;/em&gt; will be rendered differently. If duplicate keys are added, then there&apos;s no added value in choosing &lt;em&gt;SimpleOrderedMap&lt;/em&gt; over a normal &lt;em&gt;NamedList&lt;/em&gt;. Which brings me to the last option&lt;/p&gt;

&lt;p&gt;3. Make sure that &lt;em&gt;SimpleOrderedMap&lt;/em&gt; does not accept duplicates. Either by enforcing it (e.g. by throwing an exception) or just by overriding the values.&lt;br/&gt;
&lt;b&gt;Advantages:&lt;/b&gt; Gives the &lt;em&gt;SimpleOrderedMap&lt;/em&gt; a true meaning and a reason to exist. With this in place, it will be clear when and how it can be used. No changes need to be applied to the JSONRW.&lt;br/&gt;
&lt;b&gt;Disadvantages:&lt;/b&gt; Existing functionality might break, yet again... if duplicate keys are already used than this bug is introduced anyway. According to the Javadoc, the &lt;em&gt;SimpleOrderedMap&lt;/em&gt; implementation intentionality doesn&apos;t prevent duplicate keys... so there must be a reason for that.&lt;/p&gt;

&lt;p&gt;Personally, I&apos;m for option 3. The current implementation of &lt;em&gt;SimpleOrderedMap&lt;/em&gt; doesn&apos;t seem to add any functionality to the &lt;em&gt;NamedList&lt;/em&gt; class, so it seems to me this class was created just as a hint for the response writers to render it differently. The name &quot;SimpleOrderedMap&quot; also suggest a &quot;Map-like&quot; functionality which doesn&apos;t support duplicate keys. But again, I&apos;m not sure about the original reasons for not preventing duplicate keys in the first place, so there might be something I&apos;m missing here.&lt;/p&gt;</comment>
                            <comment id="12740965" author="yseeley@gmail.com" created="Sat, 8 Aug 2009 22:04:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;Why isn&apos;t this a JSONResponseWriter bug?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;JSON does not require unique keys.  It&apos;s certainly a good idea though.&lt;/p&gt;

&lt;p&gt;Donovan had it right:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This seems, at least to me, like a more general issue of convention and guidelines in the search components.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s a bad idea to repeat keys... this isn&apos;t XML.  When access-by-key is more important, use SimpleOrderedMap... when position must be maintained, use NamedList.  In both cases, we should strive not to repeat keys.&lt;/p&gt;

&lt;p&gt;Here is what the current output is for non-extendedResults:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;suggestions&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;hell&quot;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;numFound&quot;&lt;/span&gt;&amp;gt;2&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;startOffset&quot;&lt;/span&gt;&amp;gt;0&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;endOffset&quot;&lt;/span&gt;&amp;gt;4&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	&amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;suggestion&quot;&lt;/span&gt;&amp;gt;
	 &amp;lt;str&amp;gt;dell&amp;lt;/str&amp;gt;
	 &amp;lt;str&amp;gt;all&amp;lt;/str&amp;gt;
	&amp;lt;/arr&amp;gt;
  &amp;lt;/lst&amp;gt;
 &amp;lt;/lst&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The logical extension for extended results would be to simply replace each string in the array with a map.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;hell&quot;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;numFound&quot;&lt;/span&gt;&amp;gt;2&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;startOffset&quot;&lt;/span&gt;&amp;gt;0&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;endOffset&quot;&lt;/span&gt;&amp;gt;4&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;origFreq&quot;&lt;/span&gt;&amp;gt;0&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
        &amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;suggestion&quot;&lt;/span&gt;&amp;gt;
           &amp;lt;lst&amp;gt;
		 &amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;frequency&quot;&lt;/span&gt;&amp;gt;1&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
  	         &amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;word&quot;&lt;/span&gt;&amp;gt;dell&amp;lt;/str&amp;gt;
           &amp;lt;/lst&amp;gt;
           &amp;lt;lst&amp;gt;
	         &amp;lt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;frequency&quot;&lt;/span&gt;&amp;gt;1&amp;lt;/&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;gt;
	         &amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;word&quot;&lt;/span&gt;&amp;gt;all&amp;lt;/str&amp;gt;
           &amp;lt;/lst&amp;gt;
	&amp;lt;/arr&amp;gt;
  &amp;lt;/lst&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If extended results only ever added frequency, we could further simplify to have the suggest be the key and the freq be the val, but I don&apos;t know that we wouldn&apos;t want to add more metadata in the future.&lt;/p&gt;




</comment>
                            <comment id="12750606" author="stevvooe" created="Wed, 2 Sep 2009 19:43:33 +0100"  >&lt;p&gt;Why did this ever change to begin with? From the wiki, there is a clear definition of how it originally worked, that was compatible with the JSON Writer:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/solr/SpellCheckComponent&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/SpellCheckComponent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The current format is obnoxiously verbose, even for XML.&lt;/p&gt;</comment>
                            <comment id="12750659" author="uboness" created="Wed, 2 Sep 2009 21:51:26 +0100"  >&lt;p&gt;Because there are issues with the current format is json (and perhaps also in other formats)... see comments above&lt;/p&gt;</comment>
                            <comment id="12752268" author="yseeley@gmail.com" created="Mon, 7 Sep 2009 22:45:00 +0100"  >&lt;p&gt;I&apos;m moving forward with the most straightforward fix... the string becomes a map for extended results.  So&lt;br/&gt;
&amp;lt;str&amp;gt;dell&amp;lt;/str&amp;gt; in non extended results becomes the following in extended results:&lt;br/&gt;
&amp;lt;lst&amp;gt;  &amp;lt;str name=&quot;word&quot;&amp;gt;dell&amp;lt;/str&amp;gt; &amp;lt;int name=&quot;freq&quot;&amp;gt;1&amp;lt;/int&amp;gt; &amp;lt;/lst&amp;gt;&lt;/p&gt;

&lt;p&gt;So voice your objections now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Actually, the code to do the change is already done... the hard part is the tests... and there seems to be no unit tests for the SolrJ part that actually test the Suggestion class.&lt;/p&gt;</comment>
                            <comment id="12752282" author="yseeley@gmail.com" created="Tue, 8 Sep 2009 00:05:56 +0100"  >&lt;p&gt;Attaching patch.&lt;/p&gt;

&lt;p&gt;Here is some example JSON output:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-quote&quot;&gt;&quot;spellcheck&quot;&lt;/span&gt;:{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;suggestions&quot;&lt;/span&gt;:[
	&lt;span class=&quot;code-quote&quot;&gt;&quot;hell&quot;&lt;/span&gt;,{
	 &lt;span class=&quot;code-quote&quot;&gt;&quot;numFound&quot;&lt;/span&gt;:2,
	 &lt;span class=&quot;code-quote&quot;&gt;&quot;startOffset&quot;&lt;/span&gt;:0,
	 &lt;span class=&quot;code-quote&quot;&gt;&quot;endOffset&quot;&lt;/span&gt;:4,
	 &lt;span class=&quot;code-quote&quot;&gt;&quot;origFreq&quot;&lt;/span&gt;:0,
	 &lt;span class=&quot;code-quote&quot;&gt;&quot;suggestion&quot;&lt;/span&gt;:[{
		&lt;span class=&quot;code-quote&quot;&gt;&quot;word&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;dell&quot;&lt;/span&gt;,
		&lt;span class=&quot;code-quote&quot;&gt;&quot;freq&quot;&lt;/span&gt;:4},
	  {
		&lt;span class=&quot;code-quote&quot;&gt;&quot;word&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;all&quot;&lt;/span&gt;,
		&lt;span class=&quot;code-quote&quot;&gt;&quot;freq&quot;&lt;/span&gt;:4}]},
	&lt;span class=&quot;code-quote&quot;&gt;&quot;correctlySpelled&quot;&lt;/span&gt;,&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;]}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12752285" author="yseeley@gmail.com" created="Tue, 8 Sep 2009 00:13:19 +0100"  >&lt;p&gt;I haven&apos;t changed the SolrJ SpellCheckResponse class, but it does look like the naming could be improved.&lt;/p&gt;

&lt;p&gt;Example:&lt;br/&gt;
  response.getSuggestions().get(0).getSuggestions().get(0);&lt;/p&gt;</comment>
                            <comment id="12752417" author="uboness" created="Tue, 8 Sep 2009 10:58:49 +0100"  >&lt;p&gt;Looks good! &lt;/p&gt;

&lt;p&gt;As for the naming, I really like your suggestion (in one of the comments above) to replace &quot;suggestion&quot; with &quot;alternatives&quot;. So the client code can look something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
response.getSuggestions().get(&lt;span class=&quot;code-quote&quot;&gt;&quot;hell&quot;&lt;/span&gt;).getAlternatives().get(0);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One more thing - I think it will be more intuitive to use a SimpleOrderedMap instead of a NamedList for the &quot;suggestions&quot; node. for the xml response it won&apos;t make much difference I guess, but for the json one it will be more intuitive and easier to work with. So to take your example above, you&apos;d get something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;spellcheck&quot;&lt;/span&gt;: {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;suggestions&quot;&lt;/span&gt;: {
        &lt;span class=&quot;code-quote&quot;&gt;&quot;hell&quot;&lt;/span&gt;:{
            &lt;span class=&quot;code-quote&quot;&gt;&quot;numFound&quot;&lt;/span&gt;:2,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;startOffset&quot;&lt;/span&gt;:0,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;endOffset&quot;&lt;/span&gt;:4,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;origFreq&quot;&lt;/span&gt;:0,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;alternatives&quot;&lt;/span&gt;:[
                {
                    &lt;span class=&quot;code-quote&quot;&gt;&quot;word&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;dell&quot;&lt;/span&gt;,
                    &lt;span class=&quot;code-quote&quot;&gt;&quot;freq&quot;&lt;/span&gt;:4
                },
                {
                    &lt;span class=&quot;code-quote&quot;&gt;&quot;word&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;all&quot;&lt;/span&gt;,
                    &lt;span class=&quot;code-quote&quot;&gt;&quot;freq&quot;&lt;/span&gt;:4
                }
            ]
        },
        &lt;span class=&quot;code-quote&quot;&gt;&quot;correctlySpelled&quot;&lt;/span&gt;:&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;}}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12752423" author="yseeley@gmail.com" created="Tue, 8 Sep 2009 11:24:37 +0100"  >&lt;p&gt;Thanks for the review Uri!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One more thing - I think it will be more intuitive to use a SimpleOrderedMap instead of a NamedList for the &quot;suggestions&quot; node.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It already does... it&apos;s just the client code that checks for NamedList (the parent of SimpleOrderedMap)&lt;/p&gt;</comment>
                            <comment id="12752448" author="uboness" created="Tue, 8 Sep 2009 12:18:03 +0100"  >&lt;blockquote&gt;&lt;p&gt;It already does... it&apos;s just the client code that checks for NamedList (the parent of SimpleOrderedMap)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No... sorry, I mean the top most &quot;suggestions&quot; node. line 182 in the patched class.&lt;/p&gt;</comment>
                            <comment id="12752449" author="yseeley@gmail.com" created="Tue, 8 Sep 2009 12:36:15 +0100"  >&lt;blockquote&gt;&lt;p&gt;I mean the top most &quot;suggestions&quot; node.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oh I see - I wasn&apos;t sure about that one... I guess it depends on how important order is in the top-level suggestions list?  It would break back compat for the non-extended results too (for JSON and friends).&lt;/p&gt;</comment>
                            <comment id="12752472" author="uboness" created="Tue, 8 Sep 2009 13:34:43 +0100"  >&lt;blockquote&gt;&lt;p&gt;I guess it depends on how important order is in the top-level suggestions list?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I guess the order is not that important, it&apos;s just that using a SimpleOrderedMap will output a more intuitive JSON output to work with IMO.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would break back compat for the non-extended results too (for JSON and friends).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True... I didn&apos;t think about that one. hmm... well... I guess you can keep it as is then. I mean, it&apos;s not like you cannot work with the current format after all &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12752793" author="yseeley@gmail.com" created="Tue, 8 Sep 2009 23:27:09 +0100"  >&lt;p&gt;Committed!  The Solr release schedule is tight enough, I&apos;ll update the wiki docs during the Solr code freeze (unless someone beats me to it).&lt;/p&gt;</comment>
                            <comment id="12752841" author="uboness" created="Wed, 9 Sep 2009 01:37:51 +0100"  >&lt;p&gt;cool! thanks for the effort Yonik. I&apos;ve updated the wiki so you can focus on the release &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12775475" author="gsingers" created="Tue, 10 Nov 2009 15:50:35 +0000"  >&lt;p&gt;Bulk close Solr 1.4 issues&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12418857" name="SOLR-1071.patch" size="14196" author="yseeley@gmail.com" created="Tue, 8 Sep 2009 00:05:56 +0100"/>
                            <attachment id="12404273" name="SpellCheckComponent_fix.patch" size="846" author="uboness" created="Tue, 31 Mar 2009 22:52:04 +0100"/>
                            <attachment id="12404274" name="SpellCheckComponent_new_structure.patch" size="1667" author="uboness" created="Tue, 31 Mar 2009 22:52:04 +0100"/>
                            <attachment id="12406123" name="SpellCheckComponent_new_structure_incl_test.patch" size="7948" author="uboness" created="Wed, 22 Apr 2009 12:29:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 31 Mar 2009 18:03:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6564</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxngn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20120</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>