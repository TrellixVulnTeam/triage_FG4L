<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:16:50 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-553/SOLR-553.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-553] Highlighter does not match phrase queries correctly</title>
                <link>https://issues.apache.org/jira/browse/SOLR-553</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/highlighting-pt2%3A-returning-tokens-out-of-order-from-PhraseQuery-to16156718.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/highlighting-pt2%3A-returning-tokens-out-of-order-from-PhraseQuery-to16156718.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Say we search for the band &quot;I Love You But I&apos;ve Chosen Darkness&quot;&lt;br/&gt;
.../selectrows=100&amp;amp;q=%22I%20Love%20You%20But%20I\&apos;ve%20Chosen%20Darkness%22&amp;amp;fq=type:html&amp;amp;hl=true&amp;amp;hl.fl=content&amp;amp;hl.fragsize=500&amp;amp;hl.snippets=5&amp;amp;hl.simple.pre=%3Cspan%3E&amp;amp;hl.simple.post=%3C/span%3E&lt;/p&gt;

&lt;p&gt;The highlight returns a snippet that does have the name altogether:&lt;/p&gt;

&lt;p&gt;Lights (Live) : &amp;lt;span&amp;gt;I&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;Love&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;You&amp;lt;/span&amp;gt; But &amp;lt;span&amp;gt;I&apos;ve&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;Chosen&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;Darkness&amp;lt;/span&amp;gt; :&lt;/p&gt;

&lt;p&gt;But also returns unrelated snips from the same page:&lt;/p&gt;

&lt;p&gt;Black Francis Shop &quot;&amp;lt;span&amp;gt;I&amp;lt;/span&amp;gt; Think &amp;lt;span&amp;gt;I&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;Love&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;You&amp;lt;/span&amp;gt;&quot;&lt;/p&gt;

&lt;p&gt;A correct highlighter should not return snippets that do not match the phrase exactly.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-794&quot; title=&quot;Extend contrib Highlighter to properly support PhraseQuery, SpanQuery,  ConstantScoreRangeQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-794&quot;&gt;&lt;del&gt;LUCENE-794&lt;/del&gt;&lt;/a&gt; (not yet committed, but seems to be ready) fixes up the problem from the Lucene end. Solr should get it too.&lt;/p&gt;

&lt;p&gt;Related: &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-575&quot; title=&quot;Highlighting spans should merge across phrase query&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-575&quot;&gt;SOLR-575&lt;/a&gt; &lt;/p&gt;</description>
                <environment>&lt;p&gt;all&lt;/p&gt;</environment>
        <key id="12394932">SOLR-553</key>
            <summary>Highlighter does not match phrase queries correctly</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="bwhitman">Brian Whitman</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Apr 2008 20:58:41 +0100</created>
                <updated>Fri, 10 May 2013 11:41:11 +0100</updated>
                            <resolved>Mon, 26 May 2008 13:08:13 +0100</resolved>
                                    <version>1.2</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>highlighter</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12592932" author="klaasm" created="Tue, 29 Apr 2008 01:31:35 +0100"  >&lt;p&gt;Changed to feature request, since the current behaviour is expected.  I&apos;d be happy to review a patch to use SpanScorer in Solr, though.&lt;/p&gt;</comment>
                            <comment id="12593137" author="bwhitman" created="Tue, 29 Apr 2008 22:51:10 +0100"  >&lt;p&gt;Attaching a base test case document xml to post to the trunk solr example to see the problem. &lt;/p&gt;

&lt;p&gt;Steps to reproduce:&lt;br/&gt;
1) checkout solr-trunk&lt;br/&gt;
2) ant example&lt;br/&gt;
3) java -jar start.jar&lt;br/&gt;
4) post.sh highlighttest.xml&lt;br/&gt;
5) query: &lt;a href=&quot;http://localhost:8983/solr/select?q=features:%22ax%20bx%20cx%22&amp;amp;hl=on&amp;amp;hl.fl=features&amp;amp;hl.fragsize=20&amp;amp;hl.snippets=10&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=features:%22ax%20bx%20cx%22&amp;amp;hl=on&amp;amp;hl.fl=features&amp;amp;hl.fragsize=20&amp;amp;hl.snippets=10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Expected results: the only highlight snip results returned should be &amp;lt;em&amp;gt;ax bx cx&amp;lt;/em&amp;gt; and nothing else. &lt;/p&gt;</comment>
                            <comment id="12596350" author="bosmid" created="Tue, 13 May 2008 11:43:47 +0100"  >&lt;p&gt;I am playing around with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-794&quot; title=&quot;Extend contrib Highlighter to properly support PhraseQuery, SpanQuery,  ConstantScoreRangeQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-794&quot;&gt;&lt;del&gt;LUCENE-794&lt;/del&gt;&lt;/a&gt; integration into Solr. I have two options:&lt;/p&gt;

&lt;p&gt;1) add &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-794&quot; title=&quot;Extend contrib Highlighter to properly support PhraseQuery, SpanQuery,  ConstantScoreRangeQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-794&quot;&gt;&lt;del&gt;LUCENE-794&lt;/del&gt;&lt;/a&gt; code to current implementation in DefaultSolrHighlighter where client would provide request parameter (say useSpanScorer) if he wants to use new functionality. In case he didn&apos;t provide the parameter, he would get old functionality.&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;2) to provide &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-794&quot; title=&quot;Extend contrib Highlighter to properly support PhraseQuery, SpanQuery,  ConstantScoreRangeQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-794&quot;&gt;&lt;del&gt;LUCENE-794&lt;/del&gt;&lt;/a&gt; highlighting in new SolrHighlighter, for instance in class PhraseQuerySolrHighlighter&lt;/p&gt;

&lt;p&gt;I would appreciate any comments on this.&lt;/p&gt;

&lt;p&gt;Also, since I already test some of this code, I noticed that we still wouldn&apos;t get exact behavior from description. For instance, in text  ax bx cx dx ax bx&lt;/p&gt;

&lt;p&gt;for phrase query &quot;ax bx cx&quot;&lt;/p&gt;

&lt;p&gt;the result is : &amp;lt;span&amp;gt;ax&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;bx&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;cx&amp;lt;/span&amp;gt; dx ax bx&lt;/p&gt;

&lt;p&gt;Which means that we got a fix for part of the problem (words from unrelated snippets are no longer highlighted), but we still wouldn&apos;t get whole phrase highlighted inside single tag.&lt;/p&gt;</comment>
                            <comment id="12596402" author="bwhitman" created="Tue, 13 May 2008 15:28:25 +0100"  >&lt;p&gt;Probably best to create a new ticket (if necessary) about the &amp;lt;span&amp;gt;ax&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;bx&amp;lt;/span&amp;gt; instead of &amp;lt;span&amp;gt;ax bx&amp;lt;/span&amp;gt; problem. That highlights have incorrect matches is far worse. I&apos;ll adjust the problem description.&lt;/p&gt;
</comment>
                            <comment id="12596793" author="bosmid" created="Wed, 14 May 2008 16:32:26 +0100"  >&lt;p&gt;I made a fix, patch is uploaded. &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-794&quot; title=&quot;Extend contrib Highlighter to properly support PhraseQuery, SpanQuery,  ConstantScoreRangeQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-794&quot;&gt;&lt;del&gt;LUCENE-794&lt;/del&gt;&lt;/a&gt; is now incorporated into default Solr highlighter.&lt;/p&gt;

&lt;p&gt;Old way of highlighting is still retained and will be used in case requests to Solr Highlighter remain the same as they were (same request parameters). New functionality is invoked by adding another request parameter to URL, hl.usePhraseHighlighter=true.&lt;/p&gt;

&lt;p&gt;So, for URL:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/select?q=features:%22ax%20bx%20cx%22&amp;amp;hl=on&amp;amp;hl.fl=features&amp;amp;hl.fragsize=20&amp;amp;hl.snippets=10&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=features:%22ax%20bx%20cx%22&amp;amp;hl=on&amp;amp;hl.fl=features&amp;amp;hl.fragsize=20&amp;amp;hl.snippets=10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;results will be the same as they were, but in case you want to use this fix (and have correct phrase highlighting), the URL would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8983/solr/select?q=features:%22ax%20bx%20cx%22&amp;amp;hl=on&amp;amp;hl.fl=features&amp;amp;hl.fragsize=20&amp;amp;hl.snippets=10&amp;amp;hl.usePhraseHighlighter=true&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=features:%22ax%20bx%20cx%22&amp;amp;hl=on&amp;amp;hl.fl=features&amp;amp;hl.fragsize=20&amp;amp;hl.snippets=10&amp;amp;hl.usePhraseHighlighter=true&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This patch needs latest lucene-highlighter-&lt;b&gt;.jar and lucene-memory-&lt;/b&gt;.jar from trunk (since &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-794&quot; title=&quot;Extend contrib Highlighter to properly support PhraseQuery, SpanQuery,  ConstantScoreRangeQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-794&quot;&gt;&lt;del&gt;LUCENE-794&lt;/del&gt;&lt;/a&gt; fix is committed there).&lt;/p&gt;</comment>
                            <comment id="12596794" author="bosmid" created="Wed, 14 May 2008 16:34:26 +0100"  >&lt;p&gt;Patch for Solr-553 (uses Lucene-794 highlighting fix)&lt;/p&gt;</comment>
                            <comment id="12596882" author="bwhitman" created="Wed, 14 May 2008 19:35:24 +0100"  >&lt;p&gt;Patch works for me on the highlighttest.xml. thanks Bojan!!&lt;/p&gt;
</comment>
                            <comment id="12596914" author="klaasm" created="Wed, 14 May 2008 20:33:13 +0100"  >&lt;p&gt;What do people think of making span highlighting the default behaviour if the query contains phrases?  It might be better to have the default behaviour that which people expect, even if it is technically different output from 1.2.&lt;/p&gt;</comment>
                            <comment id="12596915" author="bwhitman" created="Wed, 14 May 2008 20:37:55 +0100"  >&lt;p&gt;+1 on making it default if there was a phrasequery. The &quot;old&quot; way comes across as a bad bug if you&apos;re displaying the highlights for your search results.&lt;/p&gt;
</comment>
                            <comment id="12596924" author="otis" created="Wed, 14 May 2008 21:15:27 +0100"  >&lt;p&gt;+1 for making it the default - it makes more sense than the old HL that highlighted other matching tokens&lt;br/&gt;
that were not a part of the given phrase.&lt;/p&gt;</comment>
                            <comment id="12597091" author="bosmid" created="Thu, 15 May 2008 12:35:54 +0100"  >&lt;p&gt;Added unit test for this fix to the patch.&lt;/p&gt;</comment>
                            <comment id="12597611" author="otis" created="Fri, 16 May 2008 21:56:30 +0100"  >&lt;p&gt;Added explicit check for usePhraseHighlighter=true to avoid things like usePhraseHighlighter=false to turn it on.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit shortly, along with a fresh lucene-highlighter-2.4-dev.jar built from from Lucene trunk.&lt;/p&gt;</comment>
                            <comment id="12597647" author="bwhitman" created="Fri, 16 May 2008 23:58:51 +0100"  >&lt;p&gt;just FYI, I&apos;ve tested this on a much larger/realworld index and it works great. &lt;/p&gt;
</comment>
                            <comment id="12597657" author="klaasm" created="Sat, 17 May 2008 00:41:04 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;quote&amp;#93;&lt;/span&gt;Added explicit check for usePhraseHighlighter=true to avoid things like usePhraseHighlighter=false to turn it on.&lt;span class=&quot;error&quot;&gt;&amp;#91;/quote&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I follow you here.  Just to verify:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the default is to use SpanScorer when the query is a &quot;pure&quot; phrase query&lt;/li&gt;
	&lt;li&gt;you can force SS with usePhraseHighlighting&lt;/li&gt;
	&lt;li&gt;queries that are mixed queries with keywords and phrases are still problematic.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If this is correct, is there any point in the usePhraseHighlighter parameter?  I don&apos;t see where it would entail different behaviour.  Also, what are the consequences for dismax queries (pure or mixed)?&lt;/p&gt;</comment>
                            <comment id="12597680" author="otis" created="Sat, 17 May 2008 02:39:51 +0100"  >&lt;p&gt;I think there are no pure vs. mixed situation any more.  If usePH=true we use SpanScorer otherwise we use QueryScorer, or at least that&apos;s how I read the patch.&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;DefaultSolrHighlighter.java:295-304&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER))) {
            &lt;span class=&quot;code-comment&quot;&gt;// wrap CachingTokenFilter around TokenStream &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reuse
&lt;/span&gt;            tstream = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CachingTokenFilter(tstream);
            
            &lt;span class=&quot;code-comment&quot;&gt;// get highlighter
&lt;/span&gt;            highlighter = getPhraseHighlighter(query, fieldName, req, (CachingTokenFilter) tstream);
            
            &lt;span class=&quot;code-comment&quot;&gt;// after highlighter initialization, reset tstream since construction of highlighter already used it
&lt;/span&gt;            tstream.reset();
          }
          &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;code-comment&quot;&gt;// use &lt;span class=&quot;code-quote&quot;&gt;&quot;the old way&quot;&lt;/span&gt;
&lt;/span&gt;            highlighter = getHighlighter(query, fieldName, req);
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12597681" author="otis" created="Sat, 17 May 2008 02:43:08 +0100"  >&lt;p&gt;I&apos;ll wait for &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1285&quot; title=&quot;WeightedSpanTermExtractor incorrectly treats the same terms occurring in different query types&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-1285&quot;&gt;&lt;del&gt;LUCENE-1285&lt;/del&gt;&lt;/a&gt; to get committed first.&lt;/p&gt;</comment>
                            <comment id="12598494" author="markrmiller@gmail.com" created="Tue, 20 May 2008 22:49:20 +0100"  >&lt;p&gt;&amp;gt;Probably best to create a new ticket (if necessary) about the &amp;lt;span&amp;gt;ax&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;bx&amp;lt;/span&amp;gt; instead of &amp;lt;span&amp;gt;ax bx&amp;lt;/span&amp;gt; problem. That &amp;gt;highlights have incorrect matches is far worse. I&apos;ll adjust the problem description.&lt;/p&gt;

&lt;p&gt;If I remember correctly, this was an ease of implementation issue. Part of it was fitting into the current Highlighter framework (individual tokens are scored and highlighted) and part of it was ease in general I think. I am not sure that it would be too easy to alter.&lt;/p&gt;

&lt;p&gt;It&apos;s very easy to do with the new Highlighter I have been working on, the LargeDocHighlighter. It breaks from the current API, and makes this type of highlight markup quite easy. It may never see the light of day though...to do what I want, all parts of the query need to be located with the MemoryIndex, and the time this takes on non position sensitive queries clauses is almost equal to the savings I get from not iterating through and scoring each token in a TokenStream. I do still have hopes I can pull something off though, and it may end up being useful for something else.&lt;/p&gt;

&lt;p&gt;For now though, Highlighting each each token seems a small inconvenience to retain all the old Highlighters tests, corner cases, and speed in non position sensitive scoring. Thats not to say there will not be a way if you take a look at the code though.&lt;/p&gt;</comment>
                            <comment id="12599513" author="otis" created="Fri, 23 May 2008 22:23:46 +0100"  >&lt;p&gt;Thanks Bojan.&lt;/p&gt;

&lt;p&gt;Committed revision 659664.&lt;/p&gt;</comment>
                            <comment id="12599534" author="gsingers" created="Fri, 23 May 2008 23:51:07 +0100"  >&lt;p&gt;Needs new Lucene jars, per the earlier comments.  Build is currently broken.&lt;/p&gt;</comment>
                            <comment id="12599595" author="gsingers" created="Sat, 24 May 2008 14:34:41 +0100"  >&lt;p&gt;Otis,&lt;/p&gt;

&lt;p&gt;Here&apos;s a patch that fixes the Spell Checker test that gets broken when you upgrade the Lucene jars.&lt;/p&gt;</comment>
                            <comment id="12599669" author="markrmiller@gmail.com" created="Sun, 25 May 2008 11:37:12 +0100"  >&lt;p&gt;Just to point out, as I am not sure its clear, the SpanScorer is just as fast as the old Scorer when no Phrase&apos;s, or Span&apos;s are in the query. Mark H actually tested it as slightly faster, though thats a bit odd.&lt;/p&gt;

&lt;p&gt;When there is a Span or Phrase, none Span/Phrase clauses of the Query are still highlighted the same and at the same speed as the original Scorer...it is just the Span/Phrase clauses that fire up a MemoryIndex and have getSpans called against it.&lt;/p&gt;

&lt;p&gt;So you really only pay for the extra position sensitive part where actually needed.&lt;/p&gt;</comment>
                            <comment id="12599823" author="gsingers" created="Mon, 26 May 2008 13:08:13 +0100"  >&lt;p&gt;I committed the new JARs and fixed the SpellChecker test&lt;/p&gt;</comment>
                            <comment id="12599825" author="otis" created="Mon, 26 May 2008 13:21:19 +0100"  >&lt;p&gt;If I understood Mark correctly, he is saying we can just have usePhraseHighlighter=true&lt;br/&gt;
be the default and it won&apos;t hurt performance.  Should we do that, and allow one to get the&lt;br/&gt;
old behaviour with usePhraseHighlighter=false if they really prefer the old highlighting?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12396099">LUCENE-1285</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12382718" name="SOLR-553-SC.patch" size="4336" author="gsingers" created="Sat, 24 May 2008 14:34:41 +0100"/>
                            <attachment id="12382216" name="Solr-553.patch" size="10818" author="otis" created="Fri, 16 May 2008 21:56:30 +0100"/>
                            <attachment id="12382100" name="Solr-553.patch" size="10396" author="bosmid" created="Thu, 15 May 2008 12:35:54 +0100"/>
                            <attachment id="12382045" name="Solr-553.patch" size="7550" author="bosmid" created="Wed, 14 May 2008 16:34:26 +0100"/>
                            <attachment id="12381143" name="highlighttest.xml" size="1718" author="bwhitman" created="Tue, 29 Apr 2008 22:51:10 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Apr 2008 00:31:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7054</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxqmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20634</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>