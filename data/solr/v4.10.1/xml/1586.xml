<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:22:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1586/SOLR-1586.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1586] Create Spatial Point FieldTypes</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1586</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Per &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-773&quot; title=&quot;Incorporate Local Lucene/Solr&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-773&quot;&gt;&lt;del&gt;SOLR-773&lt;/del&gt;&lt;/a&gt;, create field types that hid the details of creating tiers, geohash and lat/lon fields.&lt;/p&gt;

&lt;p&gt;Fields should take in lat/lon points in a single form, as in:&lt;br/&gt;
&amp;lt;field name=&quot;foo&quot;&amp;gt;lat lon&amp;lt;/field&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12441367">SOLR-1586</key>
            <summary>Create Spatial Point FieldTypes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Nov 2009 11:42:52 +0000</created>
                <updated>Thu, 2 May 2013 03:29:25 +0100</updated>
                            <resolved>Fri, 2 Apr 2010 14:08:13 +0100</resolved>
                                                    <fixVersion>1.5</fixVersion>
                    <fixVersion>3.1</fixVersion>
                    <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12781172" author="chrismattmann" created="Sun, 22 Nov 2009 17:51:44 +0000"  >&lt;p&gt;For reference, I&apos;m going to put up a patch (or series of them) on this issue that implements Ryan McKinley&apos;s suggestion (from &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-773&quot; title=&quot;Incorporate Local Lucene/Solr&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-773&quot;&gt;&lt;del&gt;SOLR-773&lt;/del&gt;&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be great if the schema field type could define everything needed to index and search. There are (at least) three approaches to indexing points that each have their advantages (and disadvantages) - we should be able to support any of these options.&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
	&lt;li&gt;GeoPointField (abstract? the standard stuff about dealing with points)
	&lt;ul&gt;
		&lt;li&gt;GeoPointFieldHash (represented as a GeoHash, fast bounds query (with limited accuracy))&lt;/li&gt;
		&lt;li&gt;GeoPointFieldTiers (highly scalable, fast, complex)
		&lt;ul&gt;
			&lt;li&gt;GeoPointFieldTrie (...)&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;GeoLineField...&lt;/li&gt;
	&lt;li&gt;GeoPolygonField...&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;I think it makes sense to try to follow the georss format to represent geometry:&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;georss:point&amp;gt;45.256 -71.92&amp;lt;/georss:point&amp;gt;

&amp;lt;georss:line&amp;gt;45.256 -110.45 46.46 -109.48 43.84 -109.86&amp;lt;/georss:line&amp;gt;

&amp;lt;georss:polygon&amp;gt;
	45.256 -110.45 46.46 -109.48 43.84 -109.86 45.256 -110.45
&amp;lt;/georss:polygon&amp;gt;

&amp;lt;georss:box&amp;gt;42.943 -71.032 43.039 -69.856&amp;lt;/georss:box&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12781193" author="gsingers" created="Sun, 22 Nov 2009 19:32:11 +0000"  >&lt;p&gt;Sounds good, but how are you going to deal with the field types that need multiple fields (i.e. &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1131&quot; title=&quot;Allow a single field type to index multiple fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1131&quot;&gt;&lt;del&gt;SOLR-1131&lt;/del&gt;&lt;/a&gt;)?&lt;/p&gt;

&lt;p&gt;We certainly could put up a GeohashField to get things started.&lt;/p&gt;</comment>
                            <comment id="12781202" author="chrismattmann" created="Sun, 22 Nov 2009 19:52:45 +0000"  >&lt;p&gt;Hey Grant:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Sounds good, but how are you going to deal with the field types that need multiple fields (i.e. &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1131&quot; title=&quot;Allow a single field type to index multiple fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1131&quot;&gt;&lt;del&gt;SOLR-1131&lt;/del&gt;&lt;/a&gt;)? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Heh, I wasn&apos;t. I was just starting with GeoPointField, and was going to start indexing it as e.g., a single String value, in georss:point format. I thought about the whole 2-field approach, i.e., to do a double lat, double lon thingeee, but I just wanted to start simple, with what exists, and see where it leads me. Sound OK?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12781215" author="gsingers" created="Sun, 22 Nov 2009 20:58:49 +0000"  >&lt;p&gt;I&apos;m not sure what good that does to put a lat/lon in a single String in georss:point format.  What&apos;s your intent for searching/sorting/faceting?  &lt;/p&gt;</comment>
                            <comment id="12781247" author="chrismattmann" created="Sun, 22 Nov 2009 23:15:12 +0000"  >&lt;p&gt;Good question: I&apos;m not sure what my intent is yet either. Sorting on a lat,lon pair is different depending on which lines you are trying to follow (North, South, etc.), so it&apos;s not entirely clear to me the best way to do that. As far as searching my guess is that, at least in the beginning, like requiring the user to input Dates in ISO 8601, maybe we start out asking the users to input georss points, but then get smarter as we understand more. Dunno, just a thought.&lt;/p&gt;</comment>
                            <comment id="12781262" author="gsingers" created="Mon, 23 Nov 2009 00:30:52 +0000"  >&lt;p&gt;I&apos;d say wait until &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1131&quot; title=&quot;Allow a single field type to index multiple fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1131&quot;&gt;&lt;del&gt;SOLR-1131&lt;/del&gt;&lt;/a&gt; is done for everything other than the GeohashFieldType, as what you are proposing doesn&apos;t get you anything over just using StrField.  By all means, put up a patch for GeohashFieldType when you have.  We can commit that now.&lt;/p&gt;</comment>
                            <comment id="12781265" author="chrismattmann" created="Mon, 23 Nov 2009 00:42:26 +0000"  >&lt;p&gt;Hey Grant: &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;what you are proposing doesn&apos;t get you anything over just using StrField.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I sort of get this, but then I don&apos;t. The outlier is DateField &amp;#8211; what does it get you other than some magic around ensuring that dates are stored as ISO 8601 dates? In the end, it&apos;s just a special type of StrField though too, right? Not trying to be difficult, just trying to understand.&lt;/p&gt;

&lt;p&gt;In any case, I&apos;ll focus on GeoHashFieldType for now, regardless...&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;
</comment>
                            <comment id="12781299" author="chrismattmann" created="Mon, 23 Nov 2009 04:24:02 +0000"  >&lt;p&gt;I&apos;m linking this to &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1592&quot; title=&quot;Refactor XMLWriter startTag to allow arbitrary attributes to be written&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1592&quot;&gt;&lt;del&gt;SOLR-1592&lt;/del&gt;&lt;/a&gt; since regardless of how we store the spatial point field types, we should have the ability to output those fields as georss per ryan&apos;s suggestion.&lt;/p&gt;</comment>
                            <comment id="12781306" author="chrismattmann" created="Mon, 23 Nov 2009 04:41:07 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;patch only includes GeoField, and doesn&apos;t do any fancy multi-field stuff yet, as discussed. However, the parts about writing its output in georss is probably still useable in its current form. Note to test this patch, post.sh the example doc I&apos;m attaching to your solr instance using the mods to the example schema I&apos;ve attached. Then, do a default solr query to get the doc back, and then observe a georss:point field coming back &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12781307" author="chrismattmann" created="Mon, 23 Nov 2009 04:43:31 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;note check out this patch: I messed up the copyrights on the other one I included (Eclipse threw my work copyright ones in there rather than Apache)...&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12781945" author="gsingers" created="Tue, 24 Nov 2009 14:17:42 +0000"  >&lt;p&gt;Hey Chris,&lt;/p&gt;

&lt;p&gt;I&apos;m not sure we want to bring in the actual namespace for georss.  That seems like overkill, but I&apos;m open to hear what others think.&lt;/p&gt;</comment>
                            <comment id="12781973" author="gsingers" created="Tue, 24 Nov 2009 15:11:02 +0000"  >&lt;p&gt;Also, where does this patch actually encode the Geohash value?   The Lucene spatial contrib JAR has GeoHashUtils for just this.  See the GeohashFunction for usage. &lt;/p&gt;</comment>
                            <comment id="12781975" author="chrismattmann" created="Tue, 24 Nov 2009 15:17:02 +0000"  >&lt;p&gt;Hey Grant:&lt;/p&gt;

&lt;p&gt;It doesn&apos;t encode the geohash, I was working on that. What&apos;s hilarious is that I was reading up on Wikipedia on how to implement Geohash:  &lt;a href=&quot;http://en.wikipedia.org/wiki/Geohash&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Geohash&lt;/a&gt;. I noted that it needed a Base32 encoder/decoder as part of this. So, of course I went over to commons-codec and looked for it there: &lt;a href=&quot;http://commons.apache.org/codec/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/codec/&lt;/a&gt;. I saw &lt;a href=&quot;https://issues.apache.org/jira/browse/CODEC-88&quot; title=&quot;Base32 encoder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CODEC-88&quot;&gt;&lt;del&gt;CODEC-88&lt;/del&gt;&lt;/a&gt; and said oh, no one has implemented an ASL base32 encoder: I guess I&apos;ll implement one as part of this issue and then contribute it back to commons-codec. However if you are saying this exists already in the spatial contrib jar, acccck!!!! What&apos;s more if that implements the whole GeoHash thing then double acccck!&lt;/p&gt;

&lt;p&gt;I&apos;ll have a patch up in 30 minutes if that&apos;s the case. However, if it &lt;em&gt;is&lt;/em&gt; the case, then I&apos;m sad because I just got my Base32.encode function to work: &lt;a href=&quot;http://tools.ietf.org/html/rfc3548&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tools.ietf.org/html/rfc3548&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12781991" author="chrismattmann" created="Tue, 24 Nov 2009 15:53:29 +0000"  >&lt;p&gt;sniffle, found the geohash in spatial contrib &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Uh uh I mean, yes!&lt;/p&gt;

&lt;p&gt;Patch, attached...&lt;/p&gt;</comment>
                            <comment id="12781996" author="chrismattmann" created="Tue, 24 Nov 2009 15:58:20 +0000"  >&lt;p&gt;another Eclipse copyright snafu (I took it out back though and I don&apos;t think this will be happening again), please use this latest patch...&lt;/p&gt;</comment>
                            <comment id="12782774" author="chrismattmann" created="Thu, 26 Nov 2009 07:08:52 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;updated patch based on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1592&quot; title=&quot;Refactor XMLWriter startTag to allow arbitrary attributes to be written&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1592&quot;&gt;&lt;del&gt;SOLR-1592&lt;/del&gt;&lt;/a&gt; being committed...&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12787113" author="gsingers" created="Mon, 7 Dec 2009 21:10:57 +0000"  >&lt;p&gt;FYI, see the &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1131&quot; title=&quot;Allow a single field type to index multiple fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1131&quot;&gt;&lt;del&gt;SOLR-1131&lt;/del&gt;&lt;/a&gt; for an implementation of a Point Field Type.&lt;/p&gt;</comment>
                            <comment id="12787115" author="gsingers" created="Mon, 7 Dec 2009 21:14:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;we should have the ability to output those fields as georss per ryan&apos;s suggestion&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ryan can correct me if I am putting words in his mouth, but I don&apos;t think he literally meant we needed to use those exact tags.  I think he just meant the format of the actual values.&lt;/p&gt;</comment>
                            <comment id="12787121" author="chrismattmann" created="Mon, 7 Dec 2009 21:24:39 +0000"  >&lt;p&gt;Hey Grant:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Ryan can correct me if I am putting words in his mouth, but I don&apos;t think he literally meant we needed to use those exact tags. I think he just meant the format of the actual values.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah no worries &amp;#8211; I think it would be a nice feature to actual output using those exact tags. That&apos;s the point of a standard, right? With the tags comes namespacing and all that good stuff, which I believe to be important.&lt;/p&gt;

&lt;p&gt;Also, since XmlWriter is even more flexible per &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1592&quot; title=&quot;Refactor XMLWriter startTag to allow arbitrary attributes to be written&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1592&quot;&gt;&lt;del&gt;SOLR-1592&lt;/del&gt;&lt;/a&gt;, then I see no reason not to use those tags in the output?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12787150" author="chrismattmann" created="Mon, 7 Dec 2009 22:05:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;FYI, see the &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1131&quot; title=&quot;Allow a single field type to index multiple fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1131&quot;&gt;&lt;del&gt;SOLR-1131&lt;/del&gt;&lt;/a&gt; for an implementation of a Point Field Type. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, I&apos;ll take a look @ it and try to bring this patch up to speed w.r.t to that. Independently though, the geohash implementation i put up should be good to go right now. Please take a look and let me know if you are +1 to commit. I included an example doc to test it out with.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12787198" author="gsingers" created="Mon, 7 Dec 2009 23:42:59 +0000"  >&lt;p&gt;Can you put a patch containing just the geohash stuff?&lt;/p&gt;</comment>
                            <comment id="12787282" author="chrismattmann" created="Tue, 8 Dec 2009 03:38:08 +0000"  >&lt;p&gt;updated patch containing only the geohash goodies.&lt;/p&gt;</comment>
                            <comment id="12789823" author="chrismattmann" created="Sat, 12 Dec 2009 23:55:38 +0000"  >&lt;p&gt;Okay, so I gave up on outputting georss in the SOLRXmlResponse (&lt;b&gt;sniffle&lt;/b&gt;). Instead, here&apos;s the 1st of 2 patches. This one outputs the point as a double array. I&apos;m torn. It&apos;s probably more conceptually correct, but it&apos;s weirder from a I put in a string delimited by a whitespace and got out a point as an array. Nevertheless, I&apos;m attaching it. Next one will just be a string.&lt;/p&gt;</comment>
                            <comment id="12789824" author="chrismattmann" created="Sun, 13 Dec 2009 00:00:12 +0000"  >&lt;p&gt;, and #2, the string version. My +1 for this in the end.&lt;/p&gt;</comment>
                            <comment id="12794415" author="gsingers" created="Thu, 24 Dec 2009 13:06:34 +0000"  >&lt;p&gt;I committed PointType as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1131&quot; title=&quot;Allow a single field type to index multiple fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1131&quot;&gt;&lt;del&gt;SOLR-1131&lt;/del&gt;&lt;/a&gt;.  This leaves the geohash stuff, which I take a look at now.&lt;/p&gt;</comment>
                            <comment id="12794487" author="gsingers" created="Thu, 24 Dec 2009 19:37:10 +0000"  >&lt;p&gt;Here&apos;s a patch for Geohash along w/ tests and support in the examples.  &lt;/p&gt;</comment>
                            <comment id="12794494" author="chrismattmann" created="Thu, 24 Dec 2009 21:11:54 +0000"  >&lt;p&gt;Grant:&lt;/p&gt;

&lt;p&gt;Thanks! +1 on the patch &amp;#8211; I think it&apos;s pretty much ready to go.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12794620" author="gsingers" created="Sat, 26 Dec 2009 15:40:54 +0000"  >&lt;p&gt;Should have a CartesianTier field type patch today.&lt;/p&gt;</comment>
                            <comment id="12794627" author="cmale" created="Sat, 26 Dec 2009 15:56:47 +0000"  >&lt;p&gt;Hi Grant,&lt;/p&gt;

&lt;p&gt;Are you building the CartesianTier field type against the existing CartesianTier API?&lt;/p&gt;</comment>
                            <comment id="12794628" author="gsingers" created="Sat, 26 Dec 2009 16:07:06 +0000"  >&lt;p&gt;For better or worse, yes.  It&apos;s either that, or it needs to be duplicated here until Solr is on 3.x of Lucene and can incorporate your changes there.&lt;/p&gt;</comment>
                            <comment id="12794634" author="gsingers" created="Sat, 26 Dec 2009 16:54:08 +0000"  >&lt;p&gt;Here&apos;s a patch with both geohash and Cartesian Tier.&lt;/p&gt;

&lt;p&gt;Note, the test for Cartesian Tier (in PolyFieldTest) is not yet correct even though I think the underlying functionality is. (In other words, the test itself is not right).&lt;/p&gt;

&lt;p&gt;Comments/improvements welcome.  Still needs javadocs (and wiki docs on &lt;a href=&quot;http://wiki.apache.org/solr/SpatialSearch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/SpatialSearch&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;One of the interesting things for Cart Tier is what the notion of a field query and range query are.  See my thoughts in the comments.  Also, I currently am throwing an UnsupportedOpException in getValueSource in Cart Tier stuff.  Not sure if it is meaningful or not to allow functions to operate on the whole tier.&lt;/p&gt;</comment>
                            <comment id="12794649" author="chrismattmann" created="Sat, 26 Dec 2009 21:12:31 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;updated Grant&apos;s patch with more javadocs&lt;/li&gt;
	&lt;li&gt;formatting updates&lt;/li&gt;
	&lt;li&gt;fixed bug about referencing StrFieldSource via &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1688&quot; title=&quot;Inner class FieldCacheSources should be refactored into their own classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1688&quot;&gt;SOLR-1688&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I get errors on the following tests:&lt;/p&gt;

&lt;p&gt;   &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 2, Failures: 1, Errors: 0, Time elapsed: 2.473 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.solr.search.function.distance.DistanceFunctionTest FAILED&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 5, Failures: 1, Errors: 0, Time elapsed: 6.32 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.solr.schema.PolyFieldTest FAILED&lt;/p&gt;

&lt;p&gt;Which I think Grant noted in his prior comment.&lt;/p&gt;</comment>
                            <comment id="12794681" author="gsingers" created="Sun, 27 Dec 2009 12:50:33 +0000"  >&lt;p&gt;The DistanceFunctionTest failure is unrelated and has been fixed.  The PolyFieldTest failure is expected.&lt;/p&gt;</comment>
                            <comment id="12794682" author="gsingers" created="Sun, 27 Dec 2009 12:57:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;fixed bug about referencing StrFieldSource via &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1688&quot; title=&quot;Inner class FieldCacheSources should be refactored into their own classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1688&quot;&gt;SOLR-1688&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What&apos;s the bug here?&lt;/p&gt;</comment>
                            <comment id="12794684" author="gsingers" created="Sun, 27 Dec 2009 14:59:21 +0000"  >&lt;p&gt;The problem w/ the PolyFieldTest is that the CartesianShapeFilterbuilder automatically picks the &quot;best fit&quot; tier w/o knowing what tiers were actually indexed.  So, it picks tier 15 when the test only sets up tiers 4-10.&lt;/p&gt;</comment>
                            <comment id="12794690" author="yseeley@gmail.com" created="Sun, 27 Dec 2009 16:22:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;One of the interesting things for Cart Tier is what the notion of a field query and range query are&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmmm, why is there even a fieldType for cartesian tier?&lt;br/&gt;
How will it be used?  I don&apos;t see any examples of end-user config and query syntax this is meant to support.&lt;/p&gt;
</comment>
                            <comment id="12794693" author="chrismattmann" created="Sun, 27 Dec 2009 16:31:14 +0000"  >&lt;p&gt;Hi Grant:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What&apos;s the bug here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Your last patch referenced StrFieldSource in the GeoHashField class we developed:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  @Override
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ValueSource getValueSource(SchemaField field, QParser parser) {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StrFieldSource(field.name);
+  }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course, StrFieldSource is a private class defined in StrField in the o.a.solr.schema package. This led me to take a look and realize that the FieldSources are really defined inconsistently (check out &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1688&quot; title=&quot;Inner class FieldCacheSources should be refactored into their own classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1688&quot;&gt;SOLR-1688&lt;/a&gt;, patch available).&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12794694" author="gsingers" created="Sun, 27 Dec 2009 16:34:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;How will it be used?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s a common GIS technique for reducing the number of terms/space to enumerate in a single field by dynamically selecting the appropriate tier based on the lat/lon input and a distance.  It&apos;s mainly used for creating filters.&lt;/p&gt;

&lt;p&gt;Once &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1568&quot; title=&quot;Implement Spatial Filter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1568&quot;&gt;&lt;del&gt;SOLR-1568&lt;/del&gt;&lt;/a&gt; is converted to use this field type, then it will be fully supported.&lt;/p&gt;</comment>
                            <comment id="12794695" author="gsingers" created="Sun, 27 Dec 2009 16:35:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Of course, StrFieldSource is a private class&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No it&apos;s not.  It&apos;s package private.  Is there something that isn&apos;t working?&lt;/p&gt;</comment>
                            <comment id="12794699" author="chrismattmann" created="Sun, 27 Dec 2009 16:49:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;No it&apos;s not. It&apos;s package private. Is there something that isn&apos;t working?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Interesting. Eclipse was giving me an error on using StrFieldSource in GeoHashField, right on that line I pasted above. It said StrFieldSource not found, and so taking a look it looked like StrFieldSource was an inner class (hard to see that little &quot;}&quot; at the end and whether it was defined inside of StrField or not). So I thought you were referencing an inner (private) class from StrField external to it. Funny now though after an Eclipse rebuild, Eclispe seems to be OK with StrFieldSource and its referencing in GeoHashField (which it should since they are both in the same package).&lt;/p&gt;

&lt;p&gt;Regardless though, this illustrates my point on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1688&quot; title=&quot;Inner class FieldCacheSources should be refactored into their own classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1688&quot;&gt;SOLR-1688&lt;/a&gt; &amp;#8211; these FieldCacheSources should be defined a bit more consistently &amp;#8211; when looking at a bunch of code, it&apos;s hard to see whether it was an inner class or a separate class defined in the same java file.&lt;/p&gt;</comment>
                            <comment id="12794823" author="yseeley@gmail.com" created="Mon, 28 Dec 2009 15:00:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;&amp;gt; How will it be used?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It&apos;s a common GIS technique&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I meant as it pertains to Solr... what will one put in their schema and then what will an example query look like that does both a filter and a sort by distance?  Or is that out of scope for this issue?&lt;/p&gt;</comment>
                            <comment id="12794834" author="gsingers" created="Mon, 28 Dec 2009 17:02:05 +0000"  >&lt;p&gt;There is an example of what goes in the schema on this patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;!--
      A CartesianTier is like a set of zoom levels on an interactive map (i.e. Google Maps or MapQuest).  It takes a lat/lon
      field and indexes it into (endTier - startTier) different fields, each representing a different zoom level.
      This can then be leveraged to quickly narrow the search space by creating a filter, at an appropriate tier level,
      that only has to enumerate a minimum number of terms.

      See http:&lt;span class=&quot;code-comment&quot;&gt;//wiki.apache.org/solr/SpatialSearch
&lt;/span&gt;     --&amp;gt;
    &amp;lt;fieldType name=&lt;span class=&quot;code-quote&quot;&gt;&quot;tier&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;solr.CartesianTierField&quot;&lt;/span&gt; start=&lt;span class=&quot;code-quote&quot;&gt;&quot;4&quot;&lt;/span&gt; end=&lt;span class=&quot;code-quote&quot;&gt;&quot;15&quot;&lt;/span&gt; subFieldSuffix=&lt;span class=&quot;code-quote&quot;&gt;&quot;_d&quot;&lt;/span&gt;/&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think the filter question is best answered on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1568&quot; title=&quot;Implement Spatial Filter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1568&quot;&gt;&lt;del&gt;SOLR-1568&lt;/del&gt;&lt;/a&gt;, but I&apos;ll give a brief thought.  Something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;amp;fq={!tier dist=20}location:49.32,-79.0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or it could be:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;amp;fq={!tier lat=49.32 lat=-79.0 dist=20}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m not sure which I prefer.&lt;/p&gt;</comment>
                            <comment id="12794888" author="gsingers" created="Mon, 28 Dec 2009 19:13:03 +0000"  >&lt;p&gt;Renamed CartesianTierFieldType to SpatialTileField and renamed the other nomenclature to be called a SpatialTileField as I think the &quot;tile&quot; name is much more commonly used in the GIS communities.&lt;/p&gt;</comment>
                            <comment id="12794913" author="yseeley@gmail.com" created="Mon, 28 Dec 2009 20:18:23 +0000"  >&lt;p&gt;The reason why I was asking about interface examples is that it looks like filtering is being considered separate (i.e. it would be up to the user to correlate the point field with the tile field).  While it&apos;s fine to allow the explicit creation of a tile filter, it doesn&apos;t seem like we should require clients to know all the details.&lt;/p&gt;

&lt;p&gt;#gfilt short for geo-filter?&lt;br/&gt;
q=foo&amp;amp;fq=&lt;/p&gt;
{!gfilt p=10,20 f=store_location, d=1000}
&lt;p&gt;&amp;amp;sort=gdist(store_location,10,20)&lt;/p&gt;

&lt;p&gt;So it would be really nice if the same request would work regardless of which point field was being used (trie based, spacial tile, or geohash).&lt;/p&gt;</comment>
                            <comment id="12794922" author="gsingers" created="Mon, 28 Dec 2009 20:28:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;So it would be really nice if the same request would work regardless of which point field was being used (trie based, spacial tile, or geohash).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed, how about I rename &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1568&quot; title=&quot;Implement Spatial Filter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1568&quot;&gt;&lt;del&gt;SOLR-1568&lt;/del&gt;&lt;/a&gt; to be &quot;Create a Spatial Filter Parser Plugin&quot; or something to that effect and we handle it there?&lt;/p&gt;</comment>
                            <comment id="12795006" author="gsingers" created="Tue, 29 Dec 2009 02:59:03 +0000"  >&lt;p&gt;Committed revision 894301.&lt;/p&gt;</comment>
                            <comment id="12795069" author="yseeley@gmail.com" created="Tue, 29 Dec 2009 15:24:01 +0000"  >&lt;p&gt;Unlike PointType, it seems odd that a user would need to understand and declare any kind of subFieldTyp/Suffiix for SpatialTileField... seems like this one we really want to be an implementation detail somehow... and ultimately it seems like we want to allow the SpacialTileFIeld to be an implementation detail as well.  It would be nice to just define a SpacialTilePoint and just use it for everything (filtering, distance calculations, etc).&lt;/p&gt;</comment>
                            <comment id="12795070" author="gsingers" created="Tue, 29 Dec 2009 15:38:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Unlike PointType, it seems odd that a user would need to understand and declare any kind of subFieldTyp/Suffiix for SpatialTileField... seems like this one we really want to be an implementation detail somehow..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suppose they could just always be a DoubleField subtype, but how do you guarantee it is registered in the schema?  I suppose it is 99.99% likely it will be there, so we could just assume it.  I can change it to do this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;and ultimately it seems like we want to allow the SpacialTileFIeld to be an implementation detail as well. It would be nice to just define a SpacialTilePoint and just use it for everything (filtering, distance calculations, etc).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not sure I see how to use a tile for anything other than filtering (is the point in the box or not).  I suppose it could be used for vary crude distance calculations, but that doesn&apos;t seem all that useful.  I think there may be too much of a goal to hide all the details from the application.  The choice of the data structure is going to depend on the application, just as one chooses to use int, float or double depending on their application needs.  Many applications will do just fine using PointType with a double, even for range queries.  Others may specifically want a tile approach as it best solves their problem.&lt;/p&gt;</comment>
                            <comment id="12795073" author="yseeley@gmail.com" created="Tue, 29 Dec 2009 15:50:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure I see how to use a tile for anything other than filtering &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s the point though - as a casual user, I want a point field.  I want to be able to do efficient spacial search on that field and not worry about all of the details.  See the example I gave above... it&apos;s doing everything spacial-related on the &lt;b&gt;same&lt;/b&gt; field.  So a higher level SpatialTilePoint would be a point field (i.e. it would still have lat/lon separately) that used tiles under the cover for efficient bounding box / filters.&lt;/p&gt;

&lt;p&gt;edit: don&apos;t get me wrong, I think it&apos;s also good to also enable the use of SpatialTileField separately (as this issue does).  It&apos;s the overall spacial-solr capabilities I&apos;m talking about.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The choice of the data structure is going to depend on the application&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There will often be many applications / clients.  One should be able to change the underlying implementation and use the same requests.  We can do this today with range queries on any type of numeric field... we should be able to do it with a bounding box or distance filter.&lt;/p&gt;</comment>
                            <comment id="12795075" author="gsingers" created="Tue, 29 Dec 2009 16:04:57 +0000"  >&lt;p&gt;A tile is not a point.  A tile is a box containing lots of points and is used as a quick substitution for all of those points in the box.  It&apos;s basically an indexing time optimization that precalculates the bounding boxes ahead of time. &lt;/p&gt;</comment>
                            <comment id="12795076" author="yseeley@gmail.com" created="Tue, 29 Dec 2009 16:10:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;A tile is not a point.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then we&apos;re talking past each other a bit.  I understand what a tile is.&lt;br/&gt;
A tile can also be viewed as an implementation detail to speed up spacial querying / filtering.  So we could have a SpatialTilePoint that &lt;b&gt;is&lt;/b&gt; a point, and under the covers, it also does stuff (like index spatial tiles) to speed up filtering.&lt;/p&gt;

&lt;p&gt;I&apos;m not suggesting changing SpatialTileField... I&apos;m suggesting that in the overall scheme of things, it&apos;s not the highest level abstraction we want.&lt;/p&gt;</comment>
                            <comment id="12795077" author="gsingers" created="Tue, 29 Dec 2009 16:16:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;A tile can also be viewed as an implementation detail to speed up spacial querying / filtering. So we could have a SpatialTilePoint that is a point, and under the covers, it also does stuff (like index spatial tiles) to speed up filtering.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I debated whether we wanted the SpatialTileField to also index the point (as in deferring to PointType) but decided this was easily enough done via a copy field.  If you think there is value there, though, it would be trivial to implement the combination of PointType and SpatialTileField.  &lt;/p&gt;

&lt;p&gt;FWIW, I think &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1568&quot; title=&quot;Implement Spatial Filter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1568&quot;&gt;&lt;del&gt;SOLR-1568&lt;/del&gt;&lt;/a&gt; will take care of hiding the details sufficiently from the user.&lt;/p&gt;</comment>
                            <comment id="12795081" author="cmale" created="Tue, 29 Dec 2009 16:55:30 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;m not entirely clear of the outcome of the discussion re the SpatialTilePoint, but I would really recommend keeping this as far away from the user as possible.  Ideally they shouldn&apos;t have to know about it at all since it seems that the implementation of the spatial tiling is still heavily in development.  Alternatives have even been suggested that would make it redundant.  &lt;/p&gt;

&lt;p&gt;I agree with the idea that to the user they should only be concerned about their documents have a Point.  It then frees us up to do all kinds of changes to the underlying logic, without the definition of their documents having to change.&lt;/p&gt;</comment>
                            <comment id="12795087" author="gsingers" created="Tue, 29 Dec 2009 17:20:12 +0000"  >&lt;p&gt;Yep, the user still simply adds a Point to the document, that side of the coin won&apos;t change.   How the tile is implemented underneath the hood is in fact one of the benefits of doing it as a FieldType.  At some point, though, if a app designers does wants a tile-based system, they need to declare as much.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Alternatives have even been suggested that would make it redundant. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Would be good to provide a reference if you have it handy, just so it is recorded here.&lt;/p&gt;</comment>
                            <comment id="12795097" author="cmale" created="Tue, 29 Dec 2009 18:27:55 +0000"  >&lt;p&gt;The alternatives I&apos;m alluding to are the use of TrieRanges to do an efficient bounding box style filter instead of the tiling system.  In &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-773&quot; title=&quot;Incorporate Local Lucene/Solr&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-773&quot;&gt;&lt;del&gt;SOLR-773&lt;/del&gt;&lt;/a&gt; this was touched on, but I never saw an outcome to that discussion.  I think it is a worthwhile thing to explore, even as part of the work being done here in Solr.&lt;/p&gt;</comment>
                            <comment id="12795108" author="gsingers" created="Tue, 29 Dec 2009 19:03:54 +0000"  >&lt;p&gt;Do you mean TrieFields (not familiar w/ TrieRanges)?  Assuming you do, Trie Fields can be used, but their downside is they require searching two fields instead of one.  They are already supported out of the box by Solr.&lt;/p&gt;</comment>
                            <comment id="12795112" author="cmale" created="Tue, 29 Dec 2009 19:11:22 +0000"  >&lt;p&gt;Ah yes sorry TrieFields.  I don&apos;t see searching 2 fields as a downside since that&apos;s just an implementation detail like the Spatial Tile (which requires you to have upto 15 fields).  Assuming you can use the Point FieldType to index an x and y field, then it just becomes another option like Spatial Tile.  The fact they are supported out of box is part of the attraction, as it would reduce how much custom code has to be maintained. &lt;/p&gt;</comment>
                            <comment id="12795116" author="gsingers" created="Tue, 29 Dec 2009 19:34:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t see searching 2 fields as a downside since that&apos;s just an implementation detail like the Spatial Tile &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Searching 2 fields instead of one can be significant.  AIUI, the big problem comes in when you have really dense areas that are used by high traffic sites, such as Manhattan or somewhere similar and could have a million lat/lon pairs all in a 5 mile radius.&lt;/p&gt;</comment>
                            <comment id="12795120" author="cmale" created="Tue, 29 Dec 2009 19:42:35 +0000"  >&lt;p&gt;If its not something we want to support, then thats fine.  Particularly given the stats Patrick has, its been clear that in those high density environments its not a good choice.   My original point was that this aspect of the spatial search is still heavily in development and I was advocating trying to reduce the visibility of the Spatial Tile implementation so that we are freer to do that development.&lt;/p&gt;</comment>
                            <comment id="12795129" author="yseeley@gmail.com" created="Tue, 29 Dec 2009 20:01:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;My original point was that this aspect of the spatial search is still heavily in development and I was advocating trying to reduce the visibility of the Spatial Tile implementation so that we are freer to do that development.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;br/&gt;
One could also imagine future implementations that allow varying resolution depending on the area to help fix the dense city issues.&lt;br/&gt;
Also, an implementation based just on trie range queries might be nice, as a reference to test other implementations against.  As Patrick points out, the only missing code is that to determine the bounding box so that  range queries can be created.&lt;/p&gt;</comment>
                            <comment id="12795160" author="gsingers" created="Tue, 29 Dec 2009 21:33:18 +0000"  >&lt;p&gt;Sounds good.  I&apos;m open to specific suggestions on how to do that.  I think the key lies in the QParser, which will completely hide it from the app other than the schema designer needs to make the choice about setting up a field to index it.  I don&apos;t see it as something that would work as an attribute on the generic PointType, but we could have a derived 2D PointType that specifically captures both the point capabilities and the Tile capabilities.&lt;/p&gt;

&lt;p&gt;I also don&apos;t feel like having a SpatialTileField necessarily ties our hands dev. wise.  We can still change the underlying implementation (heck, it could likely all be done in a single field w/ payloads.  I&apos;d like to see the performance characteristics of that)  The user is still just passing in a lat/lon pair against that field.&lt;/p&gt;</comment>
                            <comment id="12795164" author="yseeley@gmail.com" created="Tue, 29 Dec 2009 21:50:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Sounds good. I&apos;m open to specific suggestions on how to do that. I think the key lies in the QParser&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right - I&apos;ve mentioned a spacial base class a few times and this is why.  It allows the implementation to be hidden, while also allowing custom classes to plug right into it.  The QParser for &quot;sfilt&quot; would simply delegate to a method on the spacial base.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t see it as something that would work as an attribute on the generic PointType, but we could have a derived 2D PointType that specifically captures both the point capabilities and the Tile capabilities. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep, that&apos;s what I had in mind.&lt;/p&gt;</comment>
                            <comment id="12872708" author="hossman" created="Fri, 28 May 2010 00:20:36 +0100"  >
&lt;p&gt;Correcting Fix Version based on CHANGES.txt, see this thread for more details...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13013224" author="gsingers" created="Wed, 30 Mar 2011 16:45:55 +0100"  >&lt;p&gt;Bulk close for 3.1.0 release&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12404381">SOLR-773</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12440848">SOLR-1568</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12423951">SOLR-1131</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12444210">SOLR-1688</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12441421">SOLR-1592</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12428926" name="SOLR-1586-geohash.patch" size="9646" author="gsingers" created="Thu, 24 Dec 2009 19:37:10 +0000"/>
                            <attachment id="12425801" name="SOLR-1586.Mattmann.112209.geopointonly.patch.txt" size="6214" author="chrismattmann" created="Mon, 23 Nov 2009 04:43:31 +0000"/>
                            <attachment id="12425800" name="SOLR-1586.Mattmann.112209.geopointonly.patch.txt" size="5532" author="chrismattmann" created="Mon, 23 Nov 2009 04:41:07 +0000"/>
                            <attachment id="12425979" name="SOLR-1586.Mattmann.112409.geopointandgeohash.patch.txt" size="12944" author="chrismattmann" created="Tue, 24 Nov 2009 15:58:20 +0000"/>
                            <attachment id="12425977" name="SOLR-1586.Mattmann.112409.geopointandgeohash.patch.txt" size="12174" author="chrismattmann" created="Tue, 24 Nov 2009 15:53:29 +0000"/>
                            <attachment id="12426191" name="SOLR-1586.Mattmann.112509.geopointandgeohash.patch.txt" size="13379" author="chrismattmann" created="Thu, 26 Nov 2009 07:08:52 +0000"/>
                            <attachment id="12427287" name="SOLR-1586.Mattmann.120709.geohashonly.patch.txt" size="10041" author="chrismattmann" created="Tue, 8 Dec 2009 03:38:08 +0000"/>
                            <attachment id="12427839" name="SOLR-1586.Mattmann.121209.geohash.outarr.patch.txt" size="9806" author="chrismattmann" created="Sat, 12 Dec 2009 23:55:38 +0000"/>
                            <attachment id="12427840" name="SOLR-1586.Mattmann.121209.geohash.outstr.patch.txt" size="9501" author="chrismattmann" created="Sun, 13 Dec 2009 00:00:08 +0000"/>
                            <attachment id="12428984" name="SOLR-1586.Mattmann.122609.patch.txt" size="35306" author="chrismattmann" created="Sat, 26 Dec 2009 21:12:31 +0000"/>
                            <attachment id="12429022" name="SOLR-1586.patch" size="32918" author="gsingers" created="Mon, 28 Dec 2009 19:13:03 +0000"/>
                            <attachment id="12428979" name="SOLR-1586.patch" size="31613" author="gsingers" created="Sat, 26 Dec 2009 16:54:08 +0000"/>
                            <attachment id="12425810" name="examplegeopointdoc.patch.txt" size="1160" author="chrismattmann" created="Mon, 23 Nov 2009 07:32:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 22 Nov 2009 17:51:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6084</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxkdj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19620</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>