<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:15:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-449/SOLR-449.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-449] python (and presumably ruby) writer can generate NaN</title>
                <link>https://issues.apache.org/jira/browse/SOLR-449</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;The JSON response writer can omit &quot;NaN&quot; as float literal; this is fine for JSON but breaks eval() in python (not sure if this is a problem in ruby).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12385474">SOLR-449</key>
            <summary>python (and presumably ruby) writer can generate NaN</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="klaasm">Mike Klaas</assignee>
                                    <reporter username="klaasm">Mike Klaas</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Jan 2008 01:58:00 +0000</created>
                <updated>Fri, 10 May 2013 11:38:49 +0100</updated>
                            <resolved>Fri, 4 Jan 2008 22:21:12 +0000</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12555680" author="klaasm" created="Thu, 3 Jan 2008 21:19:55 +0000"  >&lt;p&gt;Fix that serializes NaN/Inf as &lt;/p&gt;

&lt;p&gt;float(&apos;NaN&apos;)&lt;br/&gt;
float(&apos;Inf&apos;)&lt;/p&gt;

&lt;p&gt;which will produce the proper values if the underlying c library is sufficiently smart.  To do it more portably requires importing modules, so isn&apos;t particularly feasible.&lt;/p&gt;

&lt;p&gt;I&apos;ll probably commit this soon.  ruby might also suffer from the same problem, though I don&apos;t know how to represent NaN properly there.&lt;/p&gt;</comment>
                            <comment id="12555686" author="hossman" created="Thu, 3 Jan 2008 21:50:50 +0000"  >&lt;p&gt;when the description says &quot;omit&quot; i think you mean &quot;emit&quot; right?&lt;/p&gt;

&lt;p&gt;I don&apos;t know squat about Ruby, but the docs seem to suggest that...&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NaN&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...is the proper way to express &quot;not a number&quot; as a float literal...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ruby-doc.org/core/classes/Float.html#M000244&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ruby-doc.org/core/classes/Float.html#M000244&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12555690" author="klaasm" created="Thu, 3 Jan 2008 21:58:25 +0000"  >&lt;p&gt;Yes, &quot;emit&quot;&lt;/p&gt;

&lt;p&gt;Using an online ruby interpreter, &quot;NaN&quot; and &quot;Infinity&quot; aren&apos;t literals.  But I can produce them using (0.0/0.0) and (1.0/1e-3000), so I&apos;ll throw that into the patch too.&lt;/p&gt;</comment>
                            <comment id="12555695" author="yseeley@gmail.com" created="Thu, 3 Jan 2008 22:15:00 +0000"  >&lt;p&gt;Rather than rely on an overflow for infinity, one can divide by zero, right?&lt;/p&gt;

&lt;p&gt;irb(main):022:0&amp;gt; 1.0/0.0&lt;br/&gt;
=&amp;gt; Infinity&lt;br/&gt;
irb(main):023:0&amp;gt;&lt;br/&gt;
irb(main):024:0* -1.0/0.0&lt;br/&gt;
=&amp;gt; -Infinity&lt;/p&gt;</comment>
                            <comment id="12555697" author="klaasm" created="Thu, 3 Jan 2008 22:24:53 +0000"  >&lt;p&gt;so you can!  I tried the integer version (1/0), which complains bitterly.&lt;/p&gt;</comment>
                            <comment id="12555740" author="hossman" created="Fri, 4 Jan 2008 00:32:56 +0000"  >&lt;p&gt;Yonik&apos;s comment lead me to discover that &quot;irb&quot; is the interactive ruby shell (who knew!) which lead me to spend 20 minutes banging my head against my desk (and google) attempting to find literals or constants that express NaN or Infinity.&lt;/p&gt;

&lt;p&gt;I can not fathom the existence a language written in this millennium that understands the concept of NaN but has no literal way for you to express NaN without doing a computation.  I would say &quot;i&apos;ve lost all respect for Ruby&quot;, but since i didn&apos;t really know enough about ruby to respest it before, let me just say &quot;i&apos;ve lost the ability to gain respect for Ruby in the future&quot;.&lt;/p&gt;

&lt;p&gt;I can&apos;t believe i&apos;m saying this, but: would it be worth while for the RubyResponseWriter to output code that declares variables for NaN, Infinite and -Infinite and only does those 3 computations once, instead of each time they occur?  (i&apos;m assuming that if one document has a NaN value for a field value, then other docs will probably have a NaN value).&lt;/p&gt;</comment>
                            <comment id="12555743" author="klaasm" created="Fri, 4 Jan 2008 00:46:07 +0000"  >&lt;p&gt;I don&apos;t think that declaring a viable approach.  At least in python, it would create a series of statements rather than a single expression, which would make parsing more difficult (using exec instead of eval(), etc).  Ruby might behave similarly.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure that repeating the computation is a justifiable worry though: even floating point division is blazingly fast compared to anything ruby will try to do.  Also, I&apos;m not sure if it is possible to store a NaN or infinity in a document field, is it?  I&apos;m too lazy to check if Float.parseFloat(&quot;NaN&quot;) does the right thing in java.&lt;/p&gt;

&lt;p&gt;It came up for me because of a bug in a custom queryscorer that gamely attempted a division by zero.  I&apos;ve checked in a the fix that we discussed for python and ruby--I&apos;ll leave the issue open in case our resident rubyista has a better solution.&lt;/p&gt;</comment>
                            <comment id="12555881" author="ehatcher" created="Fri, 4 Jan 2008 10:44:39 +0000"  >&lt;p&gt;I&apos;ve looked around for constants for those too, and asked around to several Ruby experts, and sure enough no such constants exist for Infinity or NaN. But come on, Hoss, don&apos;t throw in the towel on Ruby just for that - there are plenty of other great features of Ruby to more than make up for this weird omission of those constants. There are methods on Float that allow you to ask if something is infinite or not a number.&lt;/p&gt;

&lt;p&gt;Hoss&apos;s point about outputting code is not that far-fetched and is actually along the lines of what I proposed in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-358&quot; title=&quot;Implement solr-ruby-specific response capability&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-358&quot;&gt;&lt;del&gt;SOLR-358&lt;/del&gt;&lt;/a&gt; - having a special Ruby response writer mode that output something interpretable by solr-ruby that took care of all data type / ordering issues. For now the divide-by-zero hack is fine I suppose. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12372465" name="nan.patch" size="3909" author="klaasm" created="Thu, 3 Jan 2008 21:19:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Jan 2008 21:50:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7154</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxr9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20737</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>