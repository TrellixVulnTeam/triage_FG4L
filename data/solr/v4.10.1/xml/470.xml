<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:26:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-470/SOLR-470.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-470] DateField throws error on iso8601 date</title>
                <link>https://issues.apache.org/jira/browse/SOLR-470</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;A correct iso 8601 date 2006-01-01T12:01:00Z throws an error.&lt;br/&gt;
Unparseable date: &quot;2006-01-01T12:01:00Z&quot; at org.apache.solr.schema.DateField.toObject(DateField.java:173) at org.apache.solr.schema.DateField.toObject(DateField.java:83)&lt;/p&gt;

&lt;p&gt;The ThreadLocalDateFormat requires fractional seconds &quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&quot;&lt;br/&gt;
to parse with simple date format. Where as the jdoc states their optional.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12387708">SOLR-470</key>
            <summary>DateField throws error on iso8601 date</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hossman">Hoss Man</assignee>
                                    <reporter username="pjaol">patrick o&apos;leary</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Feb 2008 14:22:55 +0000</created>
                <updated>Fri, 10 May 2013 11:40:22 +0100</updated>
                            <resolved>Mon, 19 May 2008 23:01:26 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12565564" author="hossman" created="Mon, 4 Feb 2008 22:06:55 +0000"  >&lt;p&gt;a quick glance at the code verifies this (to me anyway ... i haven&apos;t written a test case for it)&lt;/p&gt;

&lt;p&gt;I believe the problem only exists when dealing with DateMath relative to an absolute date ... when indexing or querying on a pure date value (ie: ending with a Z) the SimpleDateFormatter isn&apos;t used, so the milliseconds are still optional.&lt;/p&gt;

&lt;p&gt;The ThreadLocalDateFormat helper was introduced in Solr 1.2, but this bug shouldn&apos;t affect 1.2 because it didn&apos;t support date math relative anything except &quot;NOW&quot;&lt;/p&gt;

&lt;p&gt;The root of the problem is that when i added the ThreadLocalDateFormat before 1.2, i tried to make it clear in the javadocs it was only for formatting, not for parsing...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * Returns a formatter that can be use by the current thread &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; needed to
   * convert Date objects to the Internal representation.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; DateFormat getThreadLocalDateFormat() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;....but when i generalized the DateMath support i forgot to read my own javadoc and starte using it for parsing as well.&lt;/p&gt;

&lt;p&gt;There&apos;s no simple way (that i know of) to make a SimpleDateFormatter support optional milliseconds.  So the most straight forward fix is probably to use a (Parsing) Formatter that stops reading before the milliseconds, and then add them manually &amp;#8211; this means two seperate SimpleDateFormatters, (one for parsing and one for formatting) but that&apos;s &quot;OK&quot; since we never said the existing one was safe for parsing anyway.&lt;/p&gt;</comment>
                            <comment id="12565571" author="pjaol" created="Mon, 4 Feb 2008 22:32:20 +0000"  >&lt;p&gt;It&apos;s a little iffy but what if you just default the dateFields to have 0 milliseconds&lt;br/&gt;
unless specified.&lt;br/&gt;
e.g.&lt;/p&gt;

&lt;p&gt;org.apache.solr.util.DateMathParser&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Date parseMath(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; math) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ParseException {

    Calendar cal = Calendar.getInstance(zone, loc);
    cal.setTime(getNow());
    cal.add(Calendar.Calendar.MILLISECOND, 0);
...................
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if a millisecond field is added, it over writes the default ?&lt;/p&gt;</comment>
                            <comment id="12565584" author="hossman" created="Mon, 4 Feb 2008 22:46:33 +0000"  >&lt;p&gt;I&apos;m notsure i understand your comment ... i don&apos;t see any reason why this bug would have anything to do with DateMathParser &amp;#8211; which only deals with the &quot;math&quot; portion of an input string (ie: &quot;/HOUR&quot;, &quot;+2YEARS&quot;, &quot;+6MONTHS+3DAYS/DAY&quot; etc...) and evaluates them relative some concept of &quot;now&quot; &amp;#8211; the problem seems to fall squarely on DateField.toObject which assumes it can call call getThreadLocalDateFormat().parse(...) even though that DateFormat is only intended for formatting.&lt;/p&gt;

&lt;p&gt;Even if we changed DateMathParser as you described i don&apos;t see how that would stop the parser from throwing the &quot;Invalid Date in Date Math String:...&quot; exception.&lt;/p&gt;</comment>
                            <comment id="12565637" author="pjaol" created="Tue, 5 Feb 2008 04:12:05 +0000"  >&lt;p&gt;parseMath returns a Date object that&apos;s formated to the SDF in the LocalThread that&apos;s fine /scratch last un-caffeinated comment.&lt;/p&gt;

&lt;p&gt;I think the root of the problem is any call to &apos;toInternal(String)&apos; with a string that end&apos;s in &apos;Z&apos; is indexed directly, which now means there can be multiple date formats represented internally in the index.&lt;/p&gt;

&lt;p&gt;But in saying that, I&apos;m guessing that a Field does not necessarily have to be indexed to call toObject.&lt;/p&gt;

&lt;p&gt;What would be nice is to switch from using SimpleDateFormat to org.apache.commons.lang.time.DateUtils&lt;br/&gt;
Which supports parseDate(String str, String[] parsePatterns) , where multiple patterns can be tried, and using&lt;br/&gt;
init to allow users supply their own patterns.&lt;/p&gt;

&lt;p&gt;And then using org.apache.commons.lang.time.FastDateFormat to represent the dates internally.&lt;/p&gt;

&lt;p&gt;Both of these are thread safe, which should make a Flexible DateField a lot easier to implement without&lt;br/&gt;
much over head.&lt;/p&gt;</comment>
                            <comment id="12575506" author="hossman" created="Wed, 5 Mar 2008 21:58:35 +0000"  >&lt;p&gt;note: in addition to DateField.toObject(String) (which is used when there is DateMath)  DateField.toObject(Fieldable) also has the same bug...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Unparseable-date-td15854401.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Unparseable-date-td15854401.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12590875" author="noble.paul" created="Mon, 21 Apr 2008 10:33:26 +0100"  >&lt;p&gt;A simple patch which can parse a date that ends with &apos;Z&apos;&lt;/p&gt;
</comment>
                            <comment id="12591001" author="hossman" created="Mon, 21 Apr 2008 20:12:05 +0100"  >&lt;p&gt;Paul: there are a few things that concern me about your patch...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;it isn&apos;t back compatible (changes the sig of getThreadLocalDateFormat)&lt;/li&gt;
	&lt;li&gt;it doesn&apos;t address the root problem.  The issue isn&apos;t Z or no Z, it&apos;s millis or no millis (SimpleDateFormat.parse will happily ignore extra stuff at end of string if it&apos;s not in the format, so specifying the Z isn&apos;t needed) ... what is needed is a parser that doesn&apos;t require the millis &amp;#8211; which you have, but drawing the distinction between Z and not Z isn&apos;t correct.&lt;/li&gt;
	&lt;li&gt;it doesn&apos;t really work: toObject is always called on the &lt;b&gt;indexed&lt;/b&gt; form which never has a Z at the end, so your new DateFormat isn&apos;t used ... and you&apos;ll still get an error if a date without millis is in the index.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12591002" author="hossman" created="Mon, 21 Apr 2008 20:13:57 +0100"  >&lt;p&gt;alternate patch that addresses the problem in the way i described back in my first comment ... along with some test cases.&lt;/p&gt;

&lt;p&gt;The parsing isn&apos;t pretty, but it&apos;s fairly straightforward (and doesn&apos;t add any dependencies on third party libraries)&lt;/p&gt;</comment>
                            <comment id="12592654" author="noble.paul" created="Sun, 27 Apr 2008 17:29:58 +0100"  >&lt;p&gt;hoss:  The approach is fine and if we need to refine it it can be taken up later. The fix is important to be checked in as we have made the binary format the default for distributed search. &lt;/p&gt;</comment>
                            <comment id="12592702" author="hossman" created="Mon, 28 Apr 2008 00:41:45 +0100"  >&lt;p&gt;I agree that it needs to be fixed, but i want to make sure it gets fixed correctly &amp;#8211; i would prefer we come up with a patch that also addresses &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-552&quot; title=&quot;DateField does not format Date objects for indexing according to DateField spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-552&quot;&gt;&lt;del&gt;SOLR-552&lt;/del&gt;&lt;/a&gt; before committing half cocked.&lt;/p&gt;</comment>
                            <comment id="12596581" author="hossman" created="Wed, 14 May 2008 01:37:14 +0100"  >&lt;p&gt;checkpoint ... better test cases that take into account &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-552&quot; title=&quot;DateField does not format Date objects for indexing according to DateField spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-552&quot;&gt;&lt;del&gt;SOLR-552&lt;/del&gt;&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;This still isn&apos;t completed because it doesn&apos;t deal with formating correctly (see failing test cases) ... attaching in case i get hit by a bus before i have time to work on it again.&lt;/p&gt;

&lt;p&gt;in this approach, i&apos;m attempting to make the parsing &quot;forgiving&quot; of trailing zeros in the millis, but strict about ensuring that the indexed form is always the canonical per the docs.&lt;/p&gt;

&lt;p&gt;As a result, i introduced a LegacyDateField for people who relied on the old broken behavior that anything ending with a Z was &quot;ok&quot;&lt;/p&gt;

&lt;p&gt;Reminder to self: if applying patch to commit, do an &quot;svn copy DateField.java LegacyDateField.java; rm LegacyDateField.java&quot; before applying patch.&lt;/p&gt;</comment>
                            <comment id="12596982" author="hossman" created="Thu, 15 May 2008 01:33:23 +0100"  >&lt;p&gt;builds on the previous patch to include fixes for the formatting issues, code clean up, better tests (LegacyDateFieldTest is now standalone, and can be droped into Solr1.2 to regress against the old DateField), and better documentation ... addresses  &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-552&quot; title=&quot;DateField does not format Date objects for indexing according to DateField spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-552&quot;&gt;&lt;del&gt;SOLR-552&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-544&quot; title=&quot;Dates with &amp;quot;optional&amp;quot; milliseconds are not equivilent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-544&quot;&gt;&lt;del&gt;SOLR-544&lt;/del&gt;&lt;/a&gt; as well.&lt;/p&gt;


&lt;p&gt;I think this is ready to commit, but i&apos;d like to see some positive feedback before proceeding &amp;#8211; both on the implementation, and the documentation changes. (something approximating the class docs for LegacyDateField should show up in CHANGES.txt&apos;s  upgrading section as well).&lt;/p&gt;</comment>
                            <comment id="12597006" author="noble.paul" created="Thu, 15 May 2008 06:11:20 +0100"  >&lt;p&gt;The patch did not apply properly on trunk. SVN cound not fetc the given version of LegacyDateField&lt;/p&gt;

&lt;p&gt;The implementation looks fine&lt;/p&gt;</comment>
                            <comment id="12597627" author="hossman" created="Fri, 16 May 2008 22:41:18 +0100"  >&lt;p&gt;Grr... apparently &quot;svn diff&quot; does really foolish things in conjunction with &quot;svn copy&quot;&lt;/p&gt;

&lt;p&gt;This new patch should apply much cleaner (although there will probably still be a stray javadoc hunk because of $Id$ interpolation)&lt;/p&gt;</comment>
                            <comment id="12598110" author="hossman" created="Mon, 19 May 2008 23:01:26 +0100"  >&lt;p&gt;Committed revision 658003.&lt;/p&gt;

&lt;p&gt;variation on last patch that included some javadoc formating, spelling, and grammar fixes&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12394466">SOLR-544</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12394887">SOLR-552</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12382222" name="SOLR-470.patch" size="28376" author="hossman" created="Fri, 16 May 2008 22:41:18 +0100"/>
                            <attachment id="12382083" name="SOLR-470.patch" size="31669" author="hossman" created="Thu, 15 May 2008 01:33:23 +0100"/>
                            <attachment id="12382005" name="SOLR-470.patch" size="21607" author="hossman" created="Wed, 14 May 2008 01:37:14 +0100"/>
                            <attachment id="12380630" name="SOLR-470.patch" size="7908" author="hossman" created="Mon, 21 Apr 2008 20:13:57 +0100"/>
                            <attachment id="12380595" name="SOLR-470.patch" size="1935" author="noble.paul" created="Mon, 21 Apr 2008 10:33:26 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Feb 2008 22:06:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7134</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxr53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20716</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>