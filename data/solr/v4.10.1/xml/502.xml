<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:22:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-502/SOLR-502.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-502] Add search time out support</title>
                <link>https://issues.apache.org/jira/browse/SOLR-502</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Uses &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-997&quot; title=&quot;Add search timeout support to Lucene&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-997&quot;&gt;&lt;del&gt;LUCENE-997&lt;/del&gt;&lt;/a&gt; to add time out support to Solr.  &lt;/p&gt;</description>
                <environment></environment>
        <key id="12390491">SOLR-502</key>
            <summary>Add search time out support</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                    <reporter username="timmsc">Sean Timm</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Mar 2008 21:04:07 +0000</created>
                <updated>Fri, 10 May 2013 11:40:50 +0100</updated>
                            <resolved>Sun, 6 Jul 2008 02:19:01 +0100</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12576374" author="timmsc" created="Fri, 7 Mar 2008 21:07:52 +0000"  >&lt;p&gt;This patch adds a &quot;timeallowed&quot; parameter which takes a time out value in milliseconds.  On a timeout, an exception is thrown from the searcher which results in a 500 error page with the time out exception message. &lt;/p&gt;

&lt;p&gt;I&apos;d like to add support to return partial results, but I haven&apos;t done that part yet.&lt;/p&gt;</comment>
                            <comment id="12577925" author="timmsc" created="Wed, 12 Mar 2008 17:07:18 +0000"  >&lt;p&gt;This patch adds a partialResults flag which is set to true in the event of a timeout.  A partial set of results will be returned (including possibly no results).  The flag is supported in the XML, JSON, Ruby, and Python response writers.&lt;/p&gt;

&lt;p&gt;A count of the number of timeouts is included in the statistics similar to the errors count.&lt;/p&gt;

&lt;p&gt;Caveats/ToDo: SolrJ is not aware of this setting, nor is distributed search (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-303&quot; title=&quot;Distributed Search over HTTP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-303&quot;&gt;&lt;del&gt;SOLR-303&lt;/del&gt;&lt;/a&gt;).  Some execution paths may not recognize partial results (such as sorting by field) as I haven&apos;t tested those yet.&lt;/p&gt;</comment>
                            <comment id="12578936" author="timmsc" created="Fri, 14 Mar 2008 21:29:13 +0000"  >&lt;p&gt;Better handling of timeout condition with other code paths such as sorting by a field.&lt;/p&gt;</comment>
                            <comment id="12578939" author="timmsc" created="Fri, 14 Mar 2008 21:40:27 +0000"  >&lt;p&gt;It looks like the recent work on playing nice with external HTTP caches (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-127&quot; title=&quot;Make Solr more friendly to external HTTP caches&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-127&quot;&gt;&lt;del&gt;SOLR-127&lt;/del&gt;&lt;/a&gt;) will need to be aware of the timeout condition.  I do not think a timeout should be cached.  Currently an &quot;HTTP/1.x 304 Not Modified&quot; is returned.  I&apos;ll try to work this into my next patch update.&lt;/p&gt;</comment>
                            <comment id="12579499" author="shalinmangar" created="Mon, 17 Mar 2008 16:22:35 +0000"  >&lt;p&gt;An updated patch which contains changes to SolrJ to support search timeouts.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;SolrQuery has two new methods - setTimeAllowed and getTimeAllowed to specify timeout in milliseconds&lt;/li&gt;
	&lt;li&gt;SolrDocumentList has isPartialResult and setPartialResult to signal that a timeout occured and the results returned are partial&lt;/li&gt;
	&lt;li&gt;XMLResponseParser#readDocuments handles the partialResults boolean attribute sent by the server&lt;/li&gt;
	&lt;li&gt;SolrQueryTest has a trivial test for adding/removing the timeAllowed parameter&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12579518" author="shalinmangar" created="Mon, 17 Mar 2008 17:18:26 +0000"  >&lt;p&gt;My previous patch wasn&apos;t generated correctly. This is a corrected patch.&lt;/p&gt;</comment>
                            <comment id="12580076" author="timmsc" created="Tue, 18 Mar 2008 20:55:23 +0000"  >&lt;p&gt;Timeouts should not be cached.  This patch allows suppressing the generation of HTTP cache headers.&lt;/p&gt;</comment>
                            <comment id="12580093" author="timmsc" created="Tue, 18 Mar 2008 21:26:56 +0000"  >&lt;p&gt;This patch includes Shalin&apos;s SolrJ patch and includes the &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt; patch.  HTTP cache headers are now suppressed on a timeout.&lt;/p&gt;</comment>
                            <comment id="12583967" author="timmsc" created="Tue, 1 Apr 2008 02:44:59 +0100"  >&lt;p&gt;Added the ability to allows timeouts to occur on one or more shards in a distributed search (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-303&quot; title=&quot;Distributed Search over HTTP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-303&quot;&gt;&lt;del&gt;SOLR-303&lt;/del&gt;&lt;/a&gt;) and still be merged.  The resulting set is reported as a partial result and is not cachable in an HTTP cache.&lt;/p&gt;

&lt;p&gt;This fixes the last known issue.&lt;/p&gt;</comment>
                            <comment id="12593634" author="pjaol" created="Thu, 1 May 2008 21:54:06 +0100"  >&lt;p&gt;Has this had any traction in the solr core yet? seems like a critical thing to have &lt;/p&gt;</comment>
                            <comment id="12598893" author="otis" created="Thu, 22 May 2008 04:18:16 +0100"  >&lt;p&gt;Yes, I think we should get this in 1.3.  I left the following comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt;, but since this issue includes the patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt;, I will assume the patch will be developed further as part of this issue and not &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;I took a quick look at the patch and saw this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;rsp.setAvoidHttpCaching(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Am I the only one who has a harder time reading negative methods like this, esp. when they take false?&lt;br/&gt;
Would it not be nicer to just have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;rsp.setHttpCaching(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;/&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or even&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;rsp.httpCachingOn() + rsp.httpCachingOff()&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly, instead of &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;isAvoidHttpCaching()&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; have &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;isHttpCachingOn()&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I know this is &quot;just naming&quot;, but I think it helps with readability a bit.&lt;/p&gt;

&lt;p&gt;I notice the unit test mods are not in the patch.  Is there no need to test the modified behaviour?&lt;/p&gt;</comment>
                            <comment id="12598895" author="otis" created="Thu, 22 May 2008 04:31:22 +0100"  >&lt;p&gt;The patch needs to be brought up to date with trunk.  I believe a person new to this issue (but in need of the functionality) will try to do that tomorrow.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;otis@localhost trunk&amp;#93;&lt;/span&gt;$ patch -p0 -i solrTimeout.patch --dry-run &lt;br/&gt;
patching file src/java/org/apache/solr/search/DocSet.java&lt;br/&gt;
patching file src/java/org/apache/solr/search/DocSlice.java&lt;br/&gt;
patching file src/java/org/apache/solr/search/BitDocSet.java&lt;br/&gt;
patching file src/java/org/apache/solr/search/SolrIndexSearcher.java&lt;br/&gt;
patching file src/java/org/apache/solr/search/HashDocSet.java&lt;br/&gt;
patching file src/java/org/apache/solr/request/SolrQueryResponse.java&lt;br/&gt;
Hunk #1 succeeded at 88 (offset 9 lines).&lt;br/&gt;
Hunk #2 succeeded at 159 with fuzz 2 (offset -11 lines).&lt;br/&gt;
patching file src/java/org/apache/solr/request/JSONResponseWriter.java&lt;br/&gt;
patching file src/java/org/apache/solr/request/XMLWriter.java&lt;br/&gt;
patching file src/java/org/apache/solr/common/params/CommonParams.java&lt;br/&gt;
patching file src/java/org/apache/solr/common/SolrDocumentList.java&lt;br/&gt;
Hunk #2 succeeded at 65 with fuzz 2 (offset 8 lines).&lt;br/&gt;
patching file src/java/org/apache/solr/handler/RequestHandlerBase.java&lt;br/&gt;
Hunk #3 FAILED at 43.&lt;br/&gt;
Hunk #4 succeeded at 126 (offset 7 lines).&lt;br/&gt;
Hunk #5 succeeded at 168 with fuzz 2.&lt;br/&gt;
1 out of 5 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/RequestHandlerBase.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/handler/component/SearchHandler.java&lt;br/&gt;
Hunk #1 succeeded at 118 (offset -5 lines).&lt;br/&gt;
Hunk #2 succeeded at 259 (offset 6 lines).&lt;br/&gt;
patching file src/java/org/apache/solr/handler/component/QueryComponent.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/SpellCheckerRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/MoreLikeThisHandler.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/cache/Method.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/cache/HttpCacheHeaderUtil.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java&lt;br/&gt;
Hunk #1 FAILED at 263.&lt;br/&gt;
Hunk #2 FAILED at 282.&lt;br/&gt;
2 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java.rej&lt;br/&gt;
patching file client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java&lt;br/&gt;
patching file client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser.java&lt;br/&gt;
Hunk #1 succeeded at 344 (offset 1 line).&lt;br/&gt;
patching file client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java&lt;/p&gt;</comment>
                            <comment id="12599072" author="otis" created="Thu, 22 May 2008 17:29:01 +0100"  >&lt;p&gt;Sean, do you think you can remove the changes that are a part of &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt; from your patch, as mentioned here: &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505?focusedCommentId=12598951#action_12598951&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/SOLR-505?focusedCommentId=12598951#action_12598951&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12599085" author="timmsc" created="Thu, 22 May 2008 18:10:53 +0100"  >&lt;p&gt;Otis, I&apos;d be happy to do so.  Is there a way to generate a patch excluding the content of another patch without doing a manual editing of the patch file--which would be error prone?  Or should I wait until &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt; is committed?&lt;/p&gt;</comment>
                            <comment id="12599091" author="otis" created="Thu, 22 May 2008 18:16:51 +0100"  >&lt;p&gt;I think it&apos;s a manual thing, but super simple in this case.  I&apos;ll commit &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt; as soon as Thomas does the renaming, so if you want you can wait, svn up, see conflicts, and then manually remove conflicts and re-generate the patch.&lt;/p&gt;</comment>
                            <comment id="12599217" author="yseeley@gmail.com" created="Thu, 22 May 2008 23:14:27 +0100"  >&lt;p&gt;whew... that&apos;s a lot of changes for timeouts (flag on DocSet, DocList, ResponseWriter changes, etc)&lt;/p&gt;

&lt;p&gt;It also seems like we shouldn&apos;t add any more conditionals to the inner loop HitCollector.collect().&lt;br/&gt;
If it&apos;s a timed hit collector, perhaps just wrap the original hit collector so non-timed collectors don&apos;t take a speed hit.&lt;/p&gt;</comment>
                            <comment id="12599495" author="timmsc" created="Fri, 23 May 2008 21:24:40 +0100"  >&lt;p&gt;Patch brought up to date with trunk.  This patch no longer includes &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-505&quot; title=&quot;Give RequestHandlers the possiblity to suppress the generation of HTTP caching headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-505&quot;&gt;&lt;del&gt;SOLR-505&lt;/del&gt;&lt;/a&gt;, but is dependent on it.&lt;/p&gt;

&lt;p&gt;Though I doubt the conditional check, even in the tight loop, has any performance impact, I was able to remove it while also improving the code readability.&lt;/p&gt;</comment>
                            <comment id="12599523" author="otis" created="Fri, 23 May 2008 23:06:06 +0100"  >&lt;ul&gt;
	&lt;li&gt;Does timeallowed=-1 mean &quot;do not time out at all&quot;?  Is that mentioned anywhere?  I also see a check for timeallowed &amp;gt; 0, so 0 also seems to mean &quot;do not time out at all&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;CamelCase: timeallowed =&amp;gt; timeAllowed?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I see &quot;This should only be called using either filterList or filter, but not both.&quot;, but I don&apos;t see a check for that.  Should there be a test for the two vars?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I see System.out.println( &quot;partialResults0: &quot; + partialResults );&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The rest, from what I can tell, looks good.&lt;/p&gt;

&lt;p&gt;P.S.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-502&quot; title=&quot;Add search time out support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-502&quot;&gt;&lt;del&gt;SOLR-502&lt;/del&gt;&lt;/a&gt;-solrj.patch  is just an old patch that we can really remove so it doesn&apos;t confuse anyone, correct?&lt;/p&gt;</comment>
                            <comment id="12600191" author="timmsc" created="Tue, 27 May 2008 17:54:13 +0100"  >&lt;ul&gt;
	&lt;li&gt;Added Javadoc note that a timeallowed param &amp;lt;=0 (or omitted) results in no timeout.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Fixed the &quot;CamelCase: timeallowed =&amp;gt; timeAllowed&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Removed the System.out.println(...) statements.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;I see &quot;This should only be called using either filterList or filter, but not both.&quot;, but I don&apos;t see a check for that. Should there be a test for the two vars?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This comment was copied from the existing getDocListC method (without the timeAllowed parameter).  If there should be a sanity check there, it should probably be added as a separate JIRA issue.&lt;/p&gt;</comment>
                            <comment id="12600196" author="timmsc" created="Tue, 27 May 2008 17:59:02 +0100"  >&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-502&quot; title=&quot;Add search time out support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-502&quot;&gt;&lt;del&gt;SOLR-502&lt;/del&gt;&lt;/a&gt;-solrj.patch is just an old patch that we can really remove so it doesn&apos;t confuse anyone, correct?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, this is an old patch which can be removed.  The solrTimeout.patch files could be removed as well if they are found to be confusing.&lt;/p&gt;</comment>
                            <comment id="12600248" author="shalinmangar" created="Tue, 27 May 2008 20:16:55 +0100"  >&lt;p&gt;I&apos;ve removed the &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-502&quot; title=&quot;Add search time out support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-502&quot;&gt;&lt;del&gt;SOLR-502&lt;/del&gt;&lt;/a&gt;-solrj.patch as per the above comments.&lt;/p&gt;</comment>
                            <comment id="12601761" author="otis" created="Mon, 2 Jun 2008 22:07:56 +0100"  >&lt;p&gt;I finally had the chance to apply this locally and try it out.  I have not been able to get this time out business to kick in, though.  Here is what I did so far, after applying the patch, and clean dist and deployment of solr war.&lt;/p&gt;

&lt;p&gt;I set up 2 Solr instances (actually 1 Jetty with 2 Solr homes defined via JNDI).  Identical schema, each index with 100K docs.&lt;/p&gt;

&lt;p&gt;I then hit one of the instances, specifying both shards and asked for q=title:a* (expensive query), while using timeAllowed=1, like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
curl --silent &apos;http:&lt;span class=&quot;code-comment&quot;&gt;//localhost:8080/solr1/select/?q=title%3Aa*&amp;amp;version=2.2&amp;amp;start=0&amp;amp;rows=1000&amp;amp;indent=on&amp;amp;shards=localhost:8080/solr1,localhost:8080/solr2&amp;amp;timeAllowed=1&apos; | less&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;....Aaaarg, I see one problem.  That &quot;timeAllowed&quot; is specified as &quot;timeallowed&quot;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[otis@localhost SOLR-502]$ grep TIME_ALLOW SOLR-502.patch  | head -1
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; TIME_ALLOWED = &lt;span class=&quot;code-quote&quot;&gt;&quot;timeallowed&quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sean, I think this should be camelCase, too.&lt;/p&gt;

&lt;p&gt;OK, so changing that:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
curl --silent &apos;http:&lt;span class=&quot;code-comment&quot;&gt;//localhost:8080/solr1/select/?q=title%3Aa*&amp;amp;version=2.2&amp;amp;start=0&amp;amp;rows=1000&amp;amp;indent=on&amp;amp;shards=localhost:8080/solr1,localhost:8080/solr2&amp;amp;timeallowed=1&apos; | less&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, I am &lt;b&gt;still&lt;/b&gt; unable to get the timeout to happen.  I see QTime of 257 in the response, clearly above timeallowed=1.  If timeallowed=1, should I ever be seeing QTime over 1?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;responseHeader&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;int name=&lt;span class=&quot;code-quote&quot;&gt;&quot;status&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/int&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;int name=&lt;span class=&quot;code-quote&quot;&gt;&quot;QTime&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;257&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/int&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;params&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;shards&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;localhost:8080/solr1,localhost:8080/solr2&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;indent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;on&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;start&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;q&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;title:a*&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;timeallowed&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;version&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2.2&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;rows&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;10&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/lst&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/lst&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;result name=&lt;span class=&quot;code-quote&quot;&gt;&quot;response&quot;&lt;/span&gt; numFound=&lt;span class=&quot;code-quote&quot;&gt;&quot;50936&quot;&lt;/span&gt; start=&lt;span class=&quot;code-quote&quot;&gt;&quot;0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also grepped the output for &quot;partial&quot; and never find anything.  Am I doing something wrong?&lt;br/&gt;
I also see the latest &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-502&quot; title=&quot;Add search time out support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-502&quot;&gt;&lt;del&gt;SOLR-502&lt;/del&gt;&lt;/a&gt;.patch still has some print statements, so I looked at stdout, but nothing is getting printed there.&lt;/p&gt;

&lt;p&gt;I&apos;ll see if I can trace this, but if I did something wrong or see a bug in your code, I&apos;m all eyes.&lt;/p&gt;</comment>
                            <comment id="12602068" author="otis" created="Tue, 3 Jun 2008 21:45:40 +0100"  >&lt;p&gt;Just in case it helps:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I used solrconfig.xml from example/solr/conf&lt;/li&gt;
	&lt;li&gt;I set all cache sizes to 0&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also, after adding some lovely print statements to the patch, right in the QueryComponent&apos;s process method, it looks like my query requests are not even executing QueryComponent&apos;s process method.  Is there something I need to enable to get QueryComponent included?  Standard request handler should be using it already, no?&lt;/p&gt;</comment>
                            <comment id="12602546" author="timmsc" created="Thu, 5 Jun 2008 06:34:47 +0100"  >&lt;ul&gt;
	&lt;li&gt;Adds partialResults support to the binary response, which is used by distributed search.&lt;/li&gt;
	&lt;li&gt;Really removes the System.out.println() this time.&lt;/li&gt;
	&lt;li&gt;timeallowed param is now camelcase (timeAllowed).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12602550" author="timmsc" created="Thu, 5 Jun 2008 06:54:54 +0100"  >&lt;p&gt;Sorry about the timeallowed parameter.  For some reason I had in my head that the parameters were not supposed to be camel case and I only switched the parameter variable names.&lt;/p&gt;

&lt;p&gt;You should be seeing a log message similar to:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;WARNING: Query: title:s*; Elapsed time: 20Exceeded allowed search time: 1 ms.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;even with the previous patch.  Though, when using distributed search, the new binary response is used which I hadn&apos;t modified to include partial results support.  It should work with this new patch.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&amp;lt;lst name=&quot;responseHeader&quot;&amp;gt;
 &amp;lt;int name=&quot;status&quot;&amp;gt;0&amp;lt;/int&amp;gt;
 &amp;lt;int name=&quot;QTime&quot;&amp;gt;39&amp;lt;/int&amp;gt;
 &amp;lt;lst name=&quot;params&quot;&amp;gt;
  &amp;lt;str name=&quot;shards&quot;&amp;gt;naan.office.aol.com:8973/solr,naan.office.aol.com:8993/solr&amp;lt;/str&amp;gt;
  &amp;lt;str name=&quot;indent&quot;&amp;gt;on&amp;lt;/str&amp;gt;

  &amp;lt;str name=&quot;start&quot;&amp;gt;0&amp;lt;/str&amp;gt;
  &amp;lt;str name=&quot;q&quot;&amp;gt;headline:s*&amp;lt;/str&amp;gt;
  &amp;lt;str name=&quot;timeAllowed&quot;&amp;gt;1&amp;lt;/str&amp;gt;
  &amp;lt;str name=&quot;version&quot;&amp;gt;2.2&amp;lt;/str&amp;gt;
  &amp;lt;str name=&quot;rows&quot;&amp;gt;100&amp;lt;/str&amp;gt;
 &amp;lt;/lst&amp;gt;

&amp;lt;/lst&amp;gt;
&amp;lt;result name=&quot;response&quot; numFound=&quot;0&quot; start=&quot;0&quot; partialResults=&quot;true&quot;/&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;If timeallowed=1, should I ever be seeing QTime over 1?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, the TimeLimitedCollector can only interrupt searches during the collect() calls.  Other, sometimes substantial, work is done outside of the collect().&lt;/p&gt;

&lt;p&gt;Also, see the note in the TimeLimitedCollector.setResolution(long) Javadocs &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Lucene-trunk/javadoc//org/apache/lucene/search/TimeLimitedCollector.html#setResolution(long&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Lucene-trunk/javadoc//org/apache/lucene/search/TimeLimitedCollector.html#setResolution(long&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12602559" author="noble.paul" created="Thu, 5 Jun 2008 07:46:43 +0100"  >&lt;p&gt;Sean: For the namedListCodec changes to be backward compatible (within 1.3) add check the list size before calling a &lt;em&gt;list.get()&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(list.size() &amp;gt; 3)  solrDocs.setPartialResult((&lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;)list.get(3));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12602672" author="timmsc" created="Thu, 5 Jun 2008 16:07:39 +0100"  >&lt;p&gt;This patch adds a conditional to ensure backwards compatibility within SOLR 1.3 nightly builds, per Noble Paul&apos;s suggestion.  Is that necessary?&lt;/p&gt;</comment>
                            <comment id="12602716" author="otis" created="Thu, 5 Jun 2008 18:32:44 +0100"  >&lt;p&gt;Just a quick note that the patch now does produce partial results.&lt;/p&gt;

&lt;p&gt;I see two &quot;problems&quot; with time-limiting search, but they are mostly general and not all are directly related to this patch:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;lots of work can be done outside collect, so the QTime can be radically higher than timeAllowed (e.g. I have timeAllowed=50, but I&apos;m seeing QTime of over 2000)&lt;/li&gt;
	&lt;li&gt;the number of hits will vary for the same timeAllowed and the same query.  This may not be good for apps that want to show the exact number of hits in the UI.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Still, I think having the option of timing out long searches is a good thing.&lt;br/&gt;
I&apos;m +1 on committing this.&lt;/p&gt;</comment>
                            <comment id="12605124" author="otis" created="Sun, 15 Jun 2008 04:45:07 +0100"  >&lt;p&gt;Yonik, I think Sean addressed the 2 issues from your May 22 comments.  Here is svn st:&lt;/p&gt;

&lt;p&gt;M      src/java/org/apache/solr/search/DocSet.java&lt;br/&gt;
M      src/java/org/apache/solr/search/DocSlice.java&lt;br/&gt;
M      src/java/org/apache/solr/search/BitDocSet.java&lt;br/&gt;
M      src/java/org/apache/solr/search/SolrIndexSearcher.java&lt;br/&gt;
M      src/java/org/apache/solr/search/HashDocSet.java&lt;br/&gt;
M      src/java/org/apache/solr/common/params/CommonParams.java&lt;br/&gt;
M      src/java/org/apache/solr/common/SolrDocumentList.java&lt;br/&gt;
M      src/java/org/apache/solr/common/util/NamedListCodec.java&lt;br/&gt;
M      src/java/org/apache/solr/request/BinaryResponseWriter.java&lt;br/&gt;
M      src/java/org/apache/solr/request/JSONResponseWriter.java&lt;br/&gt;
M      src/java/org/apache/solr/request/XMLWriter.java&lt;br/&gt;
M      src/java/org/apache/solr/handler/RequestHandlerBase.java&lt;br/&gt;
M      src/java/org/apache/solr/handler/component/QueryComponent.java&lt;br/&gt;
M      client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java&lt;br/&gt;
M      client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser.java&lt;br/&gt;
M      client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java&lt;/p&gt;

&lt;p&gt;I&apos;ll commit next week if nobody objects.&lt;/p&gt;</comment>
                            <comment id="12605673" author="yseeley@gmail.com" created="Tue, 17 Jun 2008 18:40:14 +0100"  >&lt;p&gt;From &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-303&quot; title=&quot;Distributed Search over HTTP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-303&quot;&gt;&lt;del&gt;SOLR-303&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Perhaps a string should also be added indicating why all results were not able to be returned.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If we had that (perhaps in the response header) would there still be a need to have this partial results flag on DocSet/DocList?  It always felt a little wrong that this feature wormed it&apos;s way to that low of a level (DocSet, response writers, response parsers, etc).  Seems like it could/should me much simpler.&lt;/p&gt;</comment>
                            <comment id="12605714" author="timmsc" created="Tue, 17 Jun 2008 21:22:02 +0100"  >&lt;p&gt;Yonik--&lt;/p&gt;

&lt;p&gt;Do you have a suggestion on how to get it into the response header?  That isn&apos;t available down at the SolrIndexSearcher level as far as I can tell.  It would be much easier if the ResponseBuilder or some other object was passed all the way down to the searcher level, but I was trying to make the smallest change possible.&lt;/p&gt;

&lt;p&gt;I think an easy machine readable value to indicate partial results is important.  I think a descriptive string is optional, but would be a nice addition.&lt;/p&gt;

&lt;p&gt;-Sean&lt;/p&gt;</comment>
                            <comment id="12605719" author="yseeley@gmail.com" created="Tue, 17 Jun 2008 21:53:09 +0100"  >&lt;blockquote&gt;&lt;p&gt;Do you have a suggestion on how to get it into the response header? That isn&apos;t available down at the SolrIndexSearcher level as far as I can tell.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Off the top of my head, it seems like it might be cleaner to throw an exception in the SolrIndexSearcher method doing the searching (that would have the added benefit of  automatically bypassing DocSet/DocList caching, etc).&lt;/p&gt;

&lt;p&gt;Catch that exception in the query component and set a flag in the header indicating that a timeout happened.&lt;/p&gt;

&lt;p&gt;Or if it&apos;s easier, pass more info down to the SolrIndexSearcher.&lt;/p&gt;

&lt;p&gt;After all, this only handles timeouts at the query level (not query expansion/rewriting, highlighting, retrieving stored fields, faceting, or any other number of components that will be added in the future).  It also doesn&apos;t even totally handle timeouts at the query level... one could construct a query that takes a lot of time yet matches no documents so there is never an opportunity to time out.  Then there is the issue of false positives (a major GC compaction hits and causes all the currently running queries to time out).  Given these restrictions, and the fact that most people would choose not to get partial results, it seems like we should really try to limit the impact/invasiveness of this feature.&lt;/p&gt;</comment>
                            <comment id="12606025" author="yseeley@gmail.com" created="Wed, 18 Jun 2008 19:11:29 +0100"  >&lt;blockquote&gt;&lt;p&gt;one could construct a query that takes a lot of time yet matches no documents...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually, thinking a little further on this point, some of the longest queries are range queries or prefix queries.  Solr uses the constant scoring variety of these, where &lt;b&gt;all&lt;/b&gt; of the matching documents are collected up front.  So these queries would never be interrupted in the middle, but only at the end after the majority of the work had been done.&lt;/p&gt;</comment>
                            <comment id="12606050" author="timmsc" created="Wed, 18 Jun 2008 20:24:52 +0100"  >&lt;p&gt;I&apos;ve been thinking about putting the timeout info in the response header.  Throwing an exception from the searcher will not work because that sacrifices the ability to get partial results.  I really feel that having the partial results flag as an attribute on the response tag makes more sense than putting it in the resonse header as the partial results pertains to the results section of the response.  I will create an alternate patch however with the partial results flag in the response header to compare the two methods.&lt;/p&gt;</comment>
                            <comment id="12606085" author="yseeley@gmail.com" created="Wed, 18 Jun 2008 21:46:57 +0100"  >&lt;p&gt;I&apos;m trying to think of Solr installations I&apos;ve seen with problems, where this would be the solution I would recommend... but I can&apos;t say I can think of any (hence my hesitation, wondering if this is more of a solution in search of a problem).&lt;/p&gt;

&lt;p&gt;What is the underlying problem with some queries taking longer than others?&lt;br/&gt;
Is it more for the server side (don&apos;t spend too much time on any 1 query), or for&lt;br/&gt;
the client side (control latency, even if result set is partial).&lt;/p&gt;

&lt;p&gt;I &lt;b&gt;have&lt;/b&gt; seen problems where queries started stacking up:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/TermInfosReader-lazy-term-index-reading-to8772766.html#a8775141&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/TermInfosReader-lazy-term-index-reading-to8772766.html#a8775141&lt;/a&gt;&lt;br/&gt;
But this would not have fixed the problem.&lt;/p&gt;

&lt;p&gt;If timeouts and partial results are expected to happen regularly (a non-trivial % of queries), then one needs to start worrying about the bias introduced (it&apos;s always low doc numbers that will be returned, which will be older documents if one is doing incremental indexing).  It seems like a better solution is to increase hardware dedicated to the search collection.&lt;/p&gt;

&lt;p&gt;If timeouts and partial results are expected to be rare, then it should have little impact on the overall server load, so why worry about them?&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;
</comment>
                            <comment id="12606103" author="iholsman" created="Wed, 18 Jun 2008 22:44:01 +0100"  >&lt;p&gt;Hi Yonik.&lt;/p&gt;

&lt;p&gt;The scenario I always come up with is when a developer launches something into production without properly testing it out on a large size index and fluffs the query.&lt;/p&gt;

&lt;p&gt;Without a timeout/partial result he will bring the site down quite quickly and it will stay down until the operations guys roll it out again.&lt;/p&gt;</comment>
                            <comment id="12606148" author="yseeley@gmail.com" created="Thu, 19 Jun 2008 00:42:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;The scenario I always come up with is when a developer launches something into production without properly testing it out on a large size index and fluffs the query.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Heh... yup I remember seeing a couple of those.&lt;br/&gt;
Unfortunately the ones I remember wouldn&apos;t have been saved by this patch because the &quot;bad&quot; part of the query was an expensive range query (or once a prefix query) that wasn&apos;t pulled out into a separate &quot;fq&quot;.&lt;/p&gt;</comment>
                            <comment id="12606404" author="timmsc" created="Thu, 19 Jun 2008 15:48:33 +0100"  >&lt;p&gt;Changes the setting of the partialResults flag from the results to the responseHeader.&lt;/p&gt;</comment>
                            <comment id="12606424" author="yseeley@gmail.com" created="Thu, 19 Jun 2008 16:59:29 +0100"  >&lt;p&gt;Thanks Sean, that definitely cuts down the patch size, and it seems nicer not to be touching DocSet and ResponseWriters, etc.  What&apos;s your take?&lt;/p&gt;

&lt;p&gt;Another thing to consider is perhaps a SolrIndexSearcher.search() method that uses a command pattern to avoid having to always change the signatures when we want to pass something new in or out?  It might be more natural than passing down an un-typed NamedList&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
QueryCommand {
  Query q
  Sort s
  List&amp;lt;Query&amp;gt; filters
  DocSet filter
  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; flags
  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; timeout
  ...
}

QueryResult {
  DocList list
  DocSet set
  &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; timedOut
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12606428" author="timmsc" created="Thu, 19 Jun 2008 17:12:11 +0100"  >&lt;p&gt;The timeout is to protect the server side.  The client side can be largely protected by setting a read timeout, but if the client aborts before the server responds, the server is just wasting resources processing a request that will never be used.  The partial results is useful in a couple of scenarios, probably the most important is a large distributed complex where you would rather get whatever results you can from a slow shard rather than throw them away.&lt;/p&gt;

&lt;p&gt;As a real world example, the query &quot;contact us about our site&quot; on a 2.3MM document index (partial Dmoz crawl) takes several seconds to complete, while the mean response time is sub 50 ms.  We&apos;ve had cases where a bot walks the next page links (including expensive queries such as this).  Also users are prone to repeatedly click the query button if they get impatient on a slow site.  Without a server side timeout, this is a real issue.&lt;/p&gt;

&lt;p&gt;Rate limiting and limiting the number of next pages that can be fetched at the front end are also part of the solution to the above example.&lt;/p&gt;</comment>
                            <comment id="12606473" author="timmsc" created="Thu, 19 Jun 2008 18:35:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;that definitely cuts down the patch size &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; What&apos;s your take?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Before I made the change, I was against it as it seems more logical to have the partialResults associated with the results list, where the total count, etc. are.  But this greatly simplifies the patch.  I could go either way.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Another thing to consider is perhaps a SolrIndexSearcher.search() method that uses a command pattern&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think I agree. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  How is this different than my suggestion of passing the ResponseBuilder into the searcher?  It seems that it would be useful to take it even a step further and pass the ResonseBuilder object around everywhere including the response handlers and writers.&lt;/p&gt;</comment>
                            <comment id="12606483" author="yseeley@gmail.com" created="Thu, 19 Jun 2008 19:02:24 +0100"  >&lt;p&gt;I see your point on the overlap between something like QueryCommand and ResponseBuilder... but ResponseBuilder feels like it&apos;s at a higher level.  Say that a custom component or handler wants to do a couple queries... or different queries depending on the results of the first query (or something like unsupervised feedback).  Should a different ResponseBuilder object be built for each query that is part of a request/response?&lt;/p&gt;

&lt;p&gt;ResponseBuilder is also a bit big and ill-defined (but currently gets the job done for communication between different query components).  Upgrading it to serve as something you pass to a SolrIndexSearcher to do a query doesn&apos;t feel quite right (or at least that&apos;s not the way I&apos;ve been thinking about it).&lt;/p&gt;</comment>
                            <comment id="12606798" author="timmsc" created="Fri, 20 Jun 2008 16:25:13 +0100"  >&lt;p&gt;Are you thinking the command pattern would be the preferred way of doing a SolrIndexSearcher.search(), possibly even deprecating the existing methods?  I think that makes sense, but seems to be a big change to add to this patch.  I think I&apos;d prefer to see it fleshed out in a separate issue.  The methods returning Hits should probably be deprecated in Solr 1.3 anyway since Hits is going away in Lucene 3.0.&lt;/p&gt;</comment>
                            <comment id="12606810" author="yseeley@gmail.com" created="Fri, 20 Jun 2008 17:18:44 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think that makes sense, but seems to be a big change to add to this patch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The patch already changes (or adds to) the API.  So instead of passing down extra parameters (timeout and NamedList), pass down an object that encapsulates all the parameters.  Deprecations can wait for another day.&lt;/p&gt;

&lt;p&gt;The primary motivation is that it seems messy passing down the un-typed NamedList&amp;lt;Object&amp;gt; and having SolrIndexSearcher set things in the header (rather than the QueryComponent do it).&lt;/p&gt;</comment>
                            <comment id="12608812" author="timmsc" created="Fri, 27 Jun 2008 16:59:18 +0100"  >&lt;p&gt;Added a SolrIndexSearcher.search() method that uses a command pattern.&lt;/p&gt;</comment>
                            <comment id="12610716" author="otis" created="Sun, 6 Jul 2008 00:02:28 +0100"  >&lt;p&gt;I&apos;m a bit out of touch with this one now (vacationnnnnnn), but should this patch contain solrj changes as well?&lt;br/&gt;
(a new method for max allowed time?)&lt;/p&gt;</comment>
                            <comment id="12610718" author="yseeley@gmail.com" created="Sun, 6 Jul 2008 02:19:01 +0100"  >&lt;p&gt;That was a bigger change set than I had anticipated - I thought perhaps of just introducing the QueryCommand and passing an extra param to the non-public method(s) to minimize changes. Things look good though, and I just committed this patch.&lt;br/&gt;
Thanks Sean!&lt;/p&gt;</comment>
                            <comment id="12612176" author="timmsc" created="Wed, 9 Jul 2008 17:24:51 +0100"  >&lt;p&gt;Yonik--&lt;/p&gt;

&lt;p&gt;I just noticed that the Javadoc specifies &quot;Long&quot;, but the setTimeAllowed function takes an Integer in org.apache.solr.client.solrj.SolrQuery.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Sean&lt;/p&gt;</comment>
                            <comment id="12612258" author="yseeley@gmail.com" created="Wed, 9 Jul 2008 21:28:31 +0100"  >&lt;p&gt;Hmmm, so should we change timeAllowed to an int everywhere (1.6 years worth of timeout) or add getLong() methods to SolrParams?&lt;/p&gt;</comment>
                            <comment id="12612596" author="timmsc" created="Thu, 10 Jul 2008 19:00:24 +0100"  >&lt;p&gt;I think that the code is fine as is.  Just the Javadoc comment needs to be changed.  The Integer is explicitly cast to a long when it is used.  And as you note, 1.6 years is plenty long enough. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12622245" author="magr" created="Wed, 13 Aug 2008 16:12:33 +0100"  >&lt;p&gt;I am using the trunk version of Solr and split a lucene index in 2 (2 GB) shards hosting them on 2 different ports.&lt;br/&gt;
Even though i know work is being done outside the timeAllowed period, i get some extreme numbers giving the user impression that timeAllowed is not actually doing anything.&lt;/p&gt;

&lt;p&gt;INFO: webapp=/solr path=/select params=&lt;/p&gt;
{fl=bla1&amp;amp;shards=localhost:8983/solr,localhost:7574/solr&amp;amp;start=65850&amp;amp;q=bla2&amp;amp;timeAllowed=1000&amp;amp;wt=javabin&amp;amp;rows=5&amp;amp;version=2.2}
&lt;p&gt; status=0 QTime=331390 &lt;/p&gt;

&lt;p&gt;I am browsing to the end of some search result. I assume that under the hood an extreme amount of id&apos;s with scores have to be sent to the merge machine, but i was hoping that the timeAllowed parameter would limit the amount of time seacrhed on the shards and thus limiting the time for the client. Possible resulting in getting no result (because of the browsing so far to the end of a large search result).&lt;/p&gt;

&lt;p&gt;But still the number 1000 and 331390 are a bit far apart.&lt;/p&gt;

&lt;p&gt;Any suggestions or do i have to give some more data?&lt;/p&gt;</comment>
                            <comment id="12622880" author="otis" created="Fri, 15 Aug 2008 15:57:57 +0100"  >&lt;p&gt;Magne,&lt;br/&gt;
I think the problem is that start=65850.  You have rows=5, so I think result merging is not the problem.&lt;br/&gt;
I&apos;m not sure what exactly happens outside of the collect call (the part that can be time-limited), but that&apos;s clearly costing you time.&lt;br/&gt;
Going deep in search results is a problem for all search engines, as war as I know.  Try going beyond 1000 matches in Google. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
If you are OK with not returning &lt;b&gt;any&lt;/b&gt; results to the client, then why not put the timeout around that client&apos;s call to Solr?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12391733">SOLR-505</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12381120">SOLR-392</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12384841" name="SOLR-502.patch" size="40049" author="timmsc" created="Fri, 27 Jun 2008 16:59:18 +0100"/>
                            <attachment id="12384297" name="SOLR-502.patch" size="22572" author="timmsc" created="Thu, 19 Jun 2008 15:48:33 +0100"/>
                            <attachment id="12383463" name="SOLR-502.patch" size="33448" author="timmsc" created="Thu, 5 Jun 2008 16:07:38 +0100"/>
                            <attachment id="12383435" name="SOLR-502.patch" size="33356" author="timmsc" created="Thu, 5 Jun 2008 06:34:47 +0100"/>
                            <attachment id="12382858" name="SOLR-502.patch" size="31928" author="timmsc" created="Tue, 27 May 2008 17:54:13 +0100"/>
                            <attachment id="12382696" name="SOLR-502.patch" size="31906" author="timmsc" created="Fri, 23 May 2008 21:24:40 +0100"/>
                            <attachment id="12378992" name="solrTimeout.patch" size="41178" author="timmsc" created="Tue, 1 Apr 2008 02:44:59 +0100"/>
                            <attachment id="12378176" name="solrTimeout.patch" size="38328" author="timmsc" created="Tue, 18 Mar 2008 21:26:56 +0000"/>
                            <attachment id="12377944" name="solrTimeout.patch" size="26237" author="timmsc" created="Fri, 14 Mar 2008 21:29:13 +0000"/>
                            <attachment id="12377708" name="solrTimeout.patch" size="22813" author="timmsc" created="Wed, 12 Mar 2008 17:07:18 +0000"/>
                            <attachment id="12377390" name="solrTimeout.patch" size="13213" author="timmsc" created="Fri, 7 Mar 2008 21:07:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Mar 2008 16:22:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7103</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxqxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20684</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>