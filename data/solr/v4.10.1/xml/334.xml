<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:16:21 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-334/SOLR-334.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-334] pluggable query parsers</title>
                <link>https://issues.apache.org/jira/browse/SOLR-334</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;One should be able to optionally specify an alternate query syntax on a per-query basis&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Using-HTTP-Post-for-Queries-tf3039973.html#a8483387&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Using-HTTP-Post-for-Queries-tf3039973.html#a8483387&lt;/a&gt;&lt;br/&gt;
Many benefits, including avoiding the need to do query parser escaping for simple term or prefix queries.&lt;br/&gt;
Possible Examples:&lt;br/&gt;
fq=&amp;lt;!term field=&quot;myfield&quot;&amp;gt;The Term&lt;br/&gt;
fq=&amp;lt;!prefix field=&quot;myfield&quot;&amp;gt;The Prefix&lt;br/&gt;
q=&amp;lt;!qp op=&quot;AND&quot;&amp;gt;a b&lt;br/&gt;
q=&amp;lt;!xml&amp;gt;&amp;lt;?xml...&amp;gt;  // lucene XML query syntax?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12375797">SOLR-334</key>
            <summary>pluggable query parsers</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="yseeley@gmail.com">Yonik Seeley</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Aug 2007 22:50:46 +0100</created>
                <updated>Fri, 10 May 2013 11:38:46 +0100</updated>
                            <resolved>Fri, 29 Aug 2008 20:45:18 +0100</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12525195" author="yseeley@gmail.com" created="Wed, 5 Sep 2007 20:48:35 +0100"  >&lt;p&gt;could be a way to mostly unify what are currently different request handlers and parameters&lt;/p&gt;

&lt;p&gt;&amp;lt;!dismax&amp;gt;the user query goes here&lt;br/&gt;
&amp;lt;!function&amp;gt;recip(rord(datefield),1,2,3)&lt;/p&gt;

&lt;p&gt;Optionally, dismax we could perhaps allow selective overriding of the dismax params&lt;br/&gt;
&amp;lt;!dismax mm=&quot;.5&quot;&amp;gt;another dismax query&lt;br/&gt;
This would allow any query handler that needed to specify more than one query to be able to use more than one dismax query.&lt;/p&gt;</comment>
                            <comment id="12525199" author="yseeley@gmail.com" created="Wed, 5 Sep 2007 20:51:53 +0100"  >&lt;p&gt;Another easy-yet-useful feature would be parameter substitution.  Great for separating the user query from what you do with it.&lt;/p&gt;

&lt;p&gt;If the userq parameter contained the raw user query, one could specify a dismax query via&lt;br/&gt;
q=&amp;lt;!dismax value=$userq&amp;gt;&lt;/p&gt;
</comment>
                            <comment id="12528474" author="yseeley@gmail.com" created="Tue, 18 Sep 2007 19:01:37 +0100"  >&lt;p&gt;It occurs to me that this would help out gather together other parameters also.&lt;/p&gt;

&lt;p&gt;Instead of&lt;br/&gt;
facet.field=category&amp;amp;f.category.facet.offset=100&amp;amp;f.category.facet.limit=10&amp;amp;f.category.facet.sort=false&amp;amp;f.category.facet.mincount=1&lt;/p&gt;

&lt;p&gt;We could have&lt;br/&gt;
facet.field=&amp;lt;!offset=100 limit=10 sort=false mincount=1&amp;gt;category&lt;br/&gt;
OR&lt;br/&gt;
facet.field=&amp;lt;!field=category offset=100 limit=10 sort=false mincount=1&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12530372" author="yseeley@gmail.com" created="Wed, 26 Sep 2007 07:37:05 +0100"  >&lt;p&gt;OK, heres a prototype... still needs some cleaning up and testing&lt;/p&gt;

&lt;p&gt;Examples:&lt;br/&gt;
&amp;lt;!lucene q.op=AND df=myfield&amp;gt;&lt;br/&gt;
&amp;lt;!sort=&apos;price asc&apos; start=100 rows=10&amp;gt;foo&lt;br/&gt;
&amp;lt;!dismax&amp;gt;hi there&lt;br/&gt;
&amp;lt;!dismax v=$userq&amp;gt;   // indirection - userq is loaded from the other params&lt;br/&gt;
&amp;lt;!prefix f=myfield&amp;gt;the unescaped prefix&lt;/p&gt;

&lt;p&gt;Query boosted by function (multiplied)&lt;br/&gt;
&amp;lt;!boost b=sqrt(popularity)&amp;gt;foo:bar&lt;br/&gt;
&amp;lt;!boost b=popularity defType=dismax&amp;gt;user query terms     // set default query type for nested query&lt;/p&gt;

&lt;p&gt;Nested Queries in Lucene syntax:&lt;br/&gt;
+foo +bar &lt;em&gt;query&lt;/em&gt;:&quot;&amp;lt;!dismax&amp;gt;a b&quot;&lt;/p&gt;

&lt;p&gt;Nested Queries in FunctionQuery syntax (untested)&lt;br/&gt;
sqrt(log(query($q,1.0)))&lt;br/&gt;
sqrt(log(query(&amp;lt;!lucene v=$myq&amp;gt;,1.0)))&lt;/p&gt;

&lt;p&gt;You can&apos;t currently override any parameters for dismax, and I&apos;ve only changed the standard request handler&apos;s main query to support this syntax.  You should be able to register your own query plugins, but I haven&apos;t tested that yet.&lt;/p&gt;
</comment>
                            <comment id="12531982" author="yseeley@gmail.com" created="Wed, 3 Oct 2007 03:19:13 +0100"  >&lt;p&gt;refresh of patch, including external value source since it overlaps.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;changed getValueSource so it accepted a qparser instance  (SolrCore was needed for external value source patch)&lt;/li&gt;
	&lt;li&gt;updates to dismax parser so bq and bf parsing uses the qparser&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12532767" author="yseeley@gmail.com" created="Fri, 5 Oct 2007 21:25:29 +0100"  >&lt;p&gt;re localParams: right now they are map&amp;lt;String,String&amp;gt; (I wanted to keep it lightweight)&lt;br/&gt;
but I could perhaps see one wanting multi-valued params in the future.&lt;br/&gt;
Should localParams be changed to map&amp;lt;String,String[]&amp;gt; or to SolrParams?&lt;br/&gt;
Thoughts?&lt;/p&gt;

&lt;p&gt;Also, any syntax thoughts/improvements?&lt;br/&gt;
I like &amp;lt;!a=1 b=2&amp;gt; fine in cleartext, but if you need to configure it in XML, then it&apos;s a bit uglier because of the needed escaping, but I&apos;m not sure if it warrants a change to something else for that alone.&lt;/p&gt;</comment>
                            <comment id="12534993" author="yseeley@gmail.com" created="Mon, 15 Oct 2007 23:33:30 +0100"  >&lt;p&gt;Attaching latest patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;more tests + javadocs&lt;/li&gt;
	&lt;li&gt;&quot;raw&quot; and &quot;field&quot; query parsers&lt;/li&gt;
	&lt;li&gt;&quot;dismax&quot; parser can get it&apos;s params from local params&lt;/li&gt;
	&lt;li&gt;localParams  changed from map&amp;lt;String,String&amp;gt; to SolrParams for future flexibility&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll commit in the next few days barring objections.&lt;/p&gt;</comment>
                            <comment id="12536683" author="yseeley@gmail.com" created="Mon, 22 Oct 2007 15:29:09 +0100"  >&lt;p&gt;I just committed this.&lt;/p&gt;

&lt;p&gt;TODO: document local params syntax and perhaps pull together single page doc on available query types&lt;/p&gt;</comment>
                            <comment id="12573601" author="otis" created="Fri, 29 Feb 2008 05:46:17 +0000"  >&lt;p&gt;Yonik - it looks like this was committed but left open (for your last TODO?)&lt;/p&gt;</comment>
                            <comment id="12575459" author="yseeley@gmail.com" created="Wed, 5 Mar 2008 18:55:47 +0000"  >&lt;p&gt;So I recently added a nested query parser... it&apos;s useful to be able to allow the client to specify query parts but not know about them.&lt;/p&gt;

&lt;p&gt;So a client could send bf=&amp;lt;!query v=$dateboost&amp;gt; to add a date boost, but the actual date boost query could be configured as a default on the server: dateboost=&amp;lt;!func&amp;gt;recip(rord(datefield,1,1000,1000))&lt;/p&gt;

&lt;p&gt;I&apos;m finding the local params stuff very useful, but I hate the fact that when I type the following URL in firefox, it transforms all the special chars.  It makes it very hard to edit (I use a browser a lot for testing).  Also, &amp;lt; would need to be escaped in any XML config too.&lt;/p&gt;

&lt;p&gt;Example:  I type in&lt;br/&gt;
  &lt;a href=&quot;http://localhost:8983/solr/select?q=&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=&lt;/a&gt;&amp;lt;!dismax qf=&apos;title^10 body&apos;&amp;gt;foo&lt;br/&gt;
But then firefox transforms it to&lt;br/&gt;
  &lt;a href=&quot;http://localhost:8983/solr/select?q=%3C!dismax%20qf=&amp;#39;title&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=%3C!dismax%20qf=&apos;title&lt;/a&gt;^10%20body&apos;%3Efoo&lt;/p&gt;

&lt;p&gt;So while things are still changeable (before a release), is this really the right syntax?&lt;br/&gt;
We could alternately go with [! which doesn&apos;t have this problem (and wouldn&apos;t have to be escaped in XML config either).&lt;br/&gt;
So it could look like:&lt;br/&gt;
  &lt;a href=&quot;http://localhost:8983/solr/select?q=[!dismax&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=[!dismax&lt;/a&gt; qf=&apos;title^10 body&apos;]foo&lt;br/&gt;
Which firefox changes to&lt;br/&gt;
  &lt;a href=&quot;http://localhost:8983/solr/select?q=[!dismax%20qf=&amp;#39;title&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/select?q=[!dismax%20qf=&apos;title&lt;/a&gt;^10%20body&apos;]foo&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12586960" author="hossman" created="Tue, 8 Apr 2008 22:05:04 +0100"  >&lt;p&gt;I&apos;d vote for anything but &quot;&amp;lt;&quot; ... mainly because of the XML similarity and escaping needed..&lt;/p&gt;

&lt;p&gt;square brackets or curly braces are fine with me ... we could even go with a combo approach to reduce the likelyhood of collision with any existing/future syntax people want to write QParser plugins for....&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;bf={[!query v=$dateboost]} &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;...OR... and call me crazy here ... we could make the actual start/end tokens be configurable (could make sense as a  &amp;lt;requestParser&amp;gt; option since using different markup per handler seems like overkill)&lt;/p&gt;</comment>
                            <comment id="12590924" author="yseeley@gmail.com" created="Mon, 21 Apr 2008 15:19:03 +0100"  >&lt;p&gt;OK, I&apos;m thinking of changing it to&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;!query v=$dateboost&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;At some point, more configurability has more drawbacks than benefits... if someone really needs a different escape for this stuff, then that can be done later.  In the unlikely event of a future syntax collision, one can still easily escape the real query string by prepending a space.&lt;/p&gt;</comment>
                            <comment id="12591045" author="hossman" created="Mon, 21 Apr 2008 21:45:35 +0100"  >&lt;p&gt;well, at hte very least i would suggest using &lt;/p&gt;
{...}
&lt;p&gt; instead of &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; since square brackets already have meaning in the primary query parser syntax.&lt;/p&gt;

&lt;p&gt;from a huffman encoding standpoint, i would also argue that a multi character delimiter (ie: &lt;/p&gt;
{[...]}
&lt;p&gt;  ) is better then a single character since it&apos;s the atypical behavior.  things people type frequently should be easier then the things they type infrequently ... let&apos;s not make this too easy.&lt;/p&gt;</comment>
                            <comment id="12591069" author="yseeley@gmail.com" created="Mon, 21 Apr 2008 22:18:06 +0100"  >&lt;p&gt;It&apos;s not a single character at the start... it is currently &amp;lt;!&lt;br/&gt;
I actually like the look of the curly braces (looks like a map), but using both types at once would make me always forget which came first (and it&apos;s uglier).&lt;/p&gt;

&lt;p&gt;So here are some more ideas:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
!{a=1}
{{a=1}}
[[a=1]]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12591070" author="yseeley@gmail.com" created="Mon, 21 Apr 2008 22:22:02 +0100"  >&lt;p&gt;Note that the middle option (double curly braces) didn&apos;t render correctly in JIRA, so I&apos;d eliminate that one.&lt;/p&gt;</comment>
                            <comment id="12591087" author="hossman" created="Mon, 21 Apr 2008 23:07:44 +0100"  >&lt;p&gt;i&apos;d put the &quot;!&quot; inside the delimiter ... &lt;/p&gt;
{!query a=1}
&lt;p&gt; seems better to me then !&lt;/p&gt;
{query a=1}</comment>
                            <comment id="12593050" author="yseeley@gmail.com" created="Tue, 29 Apr 2008 18:02:01 +0100"  >&lt;p&gt;Attaching patch to change from &amp;lt;!foo&amp;gt; to &lt;/p&gt;
{!foo}
&lt;p&gt;Seeing no other opinions, I&apos;ll commit after we get writable svn back.&lt;/p&gt;</comment>
                            <comment id="12593116" author="yseeley@gmail.com" created="Tue, 29 Apr 2008 22:05:11 +0100"  >&lt;p&gt;curly brace patch committed.&lt;/p&gt;</comment>
                            <comment id="12625218" author="shalinmangar" created="Sun, 24 Aug 2008 20:20:49 +0100"  >&lt;p&gt;Seems like this was committed. Should we close this issue?&lt;/p&gt;</comment>
                            <comment id="12627081" author="dsmiley" created="Fri, 29 Aug 2008 20:30:31 +0100"  >&lt;p&gt;I intend on submitting a patch very soon which I think is related to this.  There are two parts to it,&lt;br/&gt;
1. Enhancing the DisjunctionMaxQueryParser to work on all the query variants such as wildcard, prefix, and fuzzy queries.  This was not in Solr already because DisMax was only used for a very limited syntax that didn&apos;t use those features.  In my opinion, this makes a more suitable base parser for general use because unlike the Lucene/Solr parser, this one supports multiple default fields whereas other ones (say your &amp;lt;!prefix&amp;gt; one for example, can&apos;t do dismax).  The notion of a single default field is antiquated and a technical under-the-hood detail of Lucene that I think Solr should shield the user from by on-the-fly using a DisMax when multiple fields are used.&lt;/p&gt;

&lt;p&gt;2. Enhancing the DisMax QParser plugin to use a pluggable query string re-writer (via subclass extension) instead of the logic currently embedded within it (i.e. the escape nearly everything logic).  Additionally, made this QParser have a notion of a &quot;simple&quot; syntax (the default) or non-simple in which case some of the logic in this QParser doesn&apos;t occur because it&apos;s irrelevant (phrase boosting and min-should-max in particular).  As part of my work I significantly moved the code around to make it clearer and more extensible.&lt;/p&gt;

&lt;p&gt;Should I submit a new issue for this or add to this one?&lt;/p&gt;</comment>
                            <comment id="12627084" author="yseeley@gmail.com" created="Fri, 29 Aug 2008 20:44:53 +0100"  >&lt;blockquote&gt;&lt;p&gt;Should I submit a new issue for this or add to this one?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should definitely get it&apos;s own issue.&lt;/p&gt;</comment>
                            <comment id="12627085" author="yseeley@gmail.com" created="Fri, 29 Aug 2008 20:45:18 +0100"  >&lt;p&gt;resolving this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12377856">SOLR-351</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12381120" name="angle2curly.patch" size="13206" author="yseeley@gmail.com" created="Tue, 29 Apr 2008 18:02:01 +0100"/>
                            <attachment id="12367781" name="qparser.patch" size="92223" author="yseeley@gmail.com" created="Mon, 15 Oct 2007 23:33:30 +0100"/>
                            <attachment id="12366973" name="qparser.patch" size="99199" author="yseeley@gmail.com" created="Wed, 3 Oct 2007 03:19:13 +0100"/>
                            <attachment id="12366575" name="qparser.patch" size="71820" author="yseeley@gmail.com" created="Wed, 26 Sep 2007 07:37:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 29 Feb 2008 05:46:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7258</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxryv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>