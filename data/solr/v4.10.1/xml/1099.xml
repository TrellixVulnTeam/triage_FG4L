<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:24:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1099/SOLR-1099.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1099] FieldAnalysisRequestHandler</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1099</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;The FieldAnalysisRequestHandler provides the analysis functionality of the web admin page as a service. This handler accepts a filetype/fieldname parameter and a value and as a response returns a breakdown of the analysis process. It is also possible to send a query value which will use the configured query analyzer as well as a showmatch parameter which will then mark every matched token as a match.&lt;/p&gt;

&lt;p&gt;If this handler is added to the code base, I also recommend to rename the current AnalysisRequestHandler to DocumentAnalysisRequestHandler and have them both inherit from one AnalysisRequestHandlerBase class which provides the common functionality of the analysis breakdown and its translation to named lists. This will also enhance the current AnalysisRequestHandler which right now is fairly simplistic.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12422049">SOLR-1099</key>
            <summary>FieldAnalysisRequestHandler</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="koji">Koji Sekiguchi</assignee>
                                    <reporter username="uboness">Uri Boness</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Apr 2009 20:02:12 +0100</created>
                <updated>Tue, 10 Nov 2009 15:52:00 +0000</updated>
                            <resolved>Tue, 20 Oct 2009 12:25:56 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.4</fixVersion>
                                    <component>Schema and Analysis</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12698681" author="shalinmangar" created="Tue, 14 Apr 2009 08:25:18 +0100"  >&lt;p&gt;This looks great Uri.&lt;/p&gt;

&lt;p&gt;I&apos;m yet to look completely into the patch. But is there anything in the AnalysisRequestHandler which is not there in this patch? If not, does it make sense to just deprecate AnalysisRequestHandler and use this instead?&lt;/p&gt;</comment>
                            <comment id="12698696" author="uboness" created="Tue, 14 Apr 2009 09:06:55 +0100"  >&lt;p&gt;Well, the AnalysisRequestHandler goal is to handle documents, so basically, you send a XML document (same document as you would send for indexing) and the handler analyses the fields of the document. So the main difference between the two handlers is that the AnalsisRequestHandler enables you to provides a set of field names/types and their values to be analysed, while in the FieldAnalysisRequestHandler you&apos;re mainly targeting just a couple of fields and you can only specify one value to be analysed. The other main difference is that the AnalysisRequestHandler handles a POST request with an XML request body while the FieldAnalysisRequestHandler handles a GET request where all the parameters are specified as URL params. &lt;/p&gt;

&lt;p&gt;As I mentioned, the analysis breakdown of the FieldAnalysisRequestHandler is more detailed than the AnalysisRequestHandler and this is why I think that some refactoring can take place by extracting all the common functionality to a parent class for these two classes.&lt;/p&gt;</comment>
                            <comment id="12698704" author="shalinmangar" created="Tue, 14 Apr 2009 09:37:43 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Well, the AnalysisRequestHandler goal is to handle documents, so basically, you send a XML document (same document as you would send for indexing) and the handler analyses the fields of the document. So the main difference between the two handlers is that the AnalsisRequestHandler enables you to provides a set of field names/types and their values to be analysed, while in the FieldAnalysisRequestHandler you&apos;re mainly targeting just a couple of fields and you can only specify one value to be analysed. The other main difference is that the AnalysisRequestHandler handles a POST request with an XML request body while the FieldAnalysisRequestHandler handles a GET request where all the parameters are specified as URL params. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for clarifying Uri.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As I mentioned, the analysis breakdown of the FieldAnalysisRequestHandler is more detailed than the AnalysisRequestHandler and this is why I think that some refactoring can take place by extracting all the common functionality to a parent class for these two classes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree. With this coming in, we will have three places which help with analysis (analysis.jsp, AnalysisRequestHandler and FieldAnalysisRequestHandler). Would you like to take a stab at this before we commit?&lt;/p&gt;

&lt;p&gt;I doubt our refactoring will change the public API (the request/response format) for any of the three. Therefore, I&apos;m fine with refactoring later and committing this as-is.&lt;/p&gt;</comment>
                            <comment id="12698708" author="uboness" created="Tue, 14 Apr 2009 10:14:41 +0100"  >&lt;p&gt;The public API for the AnalysisRequestHandler will change in the context of the response. Since the analysis breakdown is more detailed, the response format will have to change a bit. Furthermore, it&apos;s probably wise to rename the AnalysisRequestHandler to DocumentAnalysisRequestHandler (more expressive name and also consistent with the FieldAnalysisRequestHandler). Another option is to do this refactoring anyway, and leave the AnalysisRequestHandler as is and only deprecate it. So basically we&apos;ll have 4 classes:&lt;/p&gt;

&lt;p&gt;AnalysisRequestHanlderBase&lt;br/&gt;
FieldAnalysisRequestHanlder&lt;br/&gt;
DocumentAnalysisRequestHandler&lt;br/&gt;
AnalysisRequestHandler (deprecated)&lt;/p&gt;

&lt;p&gt;what do you think?&lt;/p&gt;

&lt;p&gt;BTW, once commited, it would be also be wise to reimplement the anaysis.jsp to use this new handler and clean it up from all the analysis (now duplicate) logic code.&lt;/p&gt;</comment>
                            <comment id="12698711" author="shalinmangar" created="Tue, 14 Apr 2009 10:26:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;The public API for the AnalysisRequestHandler will change in the context of the response. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was assuming that the output format of AnalysisRequestHandler and FieldAnalysisRequestHandler remains exactly as they are today and the refactoring is just to abstract common code into a base class.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Furthermore, it&apos;s probably wise to rename the AnalysisRequestHandler to DocumentAnalysisRequestHandler (more expressive name and also consistent with the FieldAnalysisRequestHandler). Another option is to do this refactoring anyway, and leave the AnalysisRequestHandler as is and only deprecate it. So basically we&apos;ll have 4 classes:&lt;/p&gt;

&lt;p&gt;AnalysisRequestHanlderBase&lt;br/&gt;
FieldAnalysisRequestHanlder&lt;br/&gt;
DocumentAnalysisRequestHandler&lt;br/&gt;
AnalysisRequestHandler (deprecated)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed. But the output of DocumentAnalysisRequestHandler will look exactly like what AnalysisRequestHandler returns today, right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;it would be also be wise to reimplement the anaysis.jsp to use this new handler and clean it up from all the analysis (now duplicate) logic code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed.&lt;/p&gt;</comment>
                            <comment id="12698713" author="uboness" created="Tue, 14 Apr 2009 10:35:20 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I was assuming that the output format of AnalysisRequestHandler and FieldAnalysisRequestHandler remains exactly as they are today and the refactoring is just to abstract common code into a base class.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Agreed. But the output of DocumentAnalysisRequestHandler will look exactly like what AnalysisRequestHandler returns today, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You know what... your&apos;re right... I think it is possible to keep the same output by default. The only change to the original structure will happen when more parameters will be sent, for example, when a query analysis takes place and a &quot;showmatch=true&quot; is sent then each matched token will be marked as a &quot;match&quot;. I&apos;ll have to have a closer look at the current response of the AnalysisRequestHandler and see if I can support the exact same structure.... my gut feeling is that it&apos;s possible.&lt;/p&gt;

&lt;p&gt;I&apos;ll start working on it and see where I get&lt;/p&gt;</comment>
                            <comment id="12698720" author="shalinmangar" created="Tue, 14 Apr 2009 10:48:02 +0100"  >&lt;blockquote&gt;
&lt;p&gt;The only change to the original structure will happen when more parameters will be sent, for example, when a query analysis takes place and a &quot;showmatch=true&quot; is sent then each matched token will be marked as a &quot;match&quot;. I&apos;ll have to have a closer look at the current response of the AnalysisRequestHandler and see if I can support the exact same structure.... my gut feeling is that it&apos;s possible.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the part that I do not understand.&lt;/p&gt;

&lt;p&gt;Let me outline what I understood:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;We copy AnalysisRequestHandler (ARH) to DocumentAnalysisRequestHandler and deprecate ARH.&lt;/li&gt;
	&lt;li&gt;We extract common code (if any) of ARH and FieldARH in to a base class AnalysisRequestHandlerBase, as you suggested&lt;/li&gt;
	&lt;li&gt;We modify analysis.jsp to use FieldARH (maybe as a separate issue)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;You do not need to support AnalysisRequestHandler&apos;s format because it will also exist by the name of DocumentAnalysisRequestHandler. Since FieldARH is a new handler, it does not need to be back-compatible with ARH. Supporting the old format is a nice-to-have feature but not necessary.&lt;/p&gt;</comment>
                            <comment id="12698723" author="uboness" created="Tue, 14 Apr 2009 11:07:45 +0100"  >&lt;blockquote&gt;
&lt;p&gt;We copy AnalysisRequestHandler (ARH) to DocumentAnalysisRequestHandler and deprecate ARH.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;true, but it will be enhanced with functionality and support more extensive analysis breakdown (e.g. adding a query analysis and showmatch support)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We extract common code (if any) of ARH and FieldARH in to a base class AnalysisRequestHandlerBase, as you suggested&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;true&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We modify analysis.jsp to use FieldARH (maybe as a separate issue)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;probably a separate issue is more appropriate.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You do not need to support AnalysisRequestHandler&apos;s format because it will also exist by the name of DocumentAnalysisRequestHandler. Since FieldARH is a new handler, it does not need to be back-compatible with ARH. Supporting the old format is a nice-to-have feature but not necessary.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;True. The old AnalysisRequestHandler will be deprecated and it&apos;s (enhanced) functionality will be available via the DocumentAnalysisRequestHandler. That said, it would be nice to be backward compatible as much as possible for those who are using the old ARH already (I suspect not many are using it anyway as it&apos;s mostly used for tooling and debugging). I do believe that both the new DocumentARH and the FieldARH are useful for different purposes due the nature of their differences as I mentioned above.&lt;/p&gt;

&lt;p&gt;I hope this makes things a bit clearer &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12698726" author="shalinmangar" created="Tue, 14 Apr 2009 11:18:42 +0100"  >&lt;blockquote&gt;&lt;p&gt;I hope this makes things a bit clearer &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Crystal clear! Thanks Uri!&lt;/p&gt;</comment>
                            <comment id="12700417" author="uboness" created="Sat, 18 Apr 2009 04:04:06 +0100"  >&lt;p&gt;The latest patch (AnalisysRequestHandler_refactored.patch) does the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;deprecates the AnalysisRequesthandler&lt;/li&gt;
	&lt;li&gt;adds the AnalysisRequestHandlerBase&lt;/li&gt;
	&lt;li&gt;adds the DocumentAnalysisRequestHandler&lt;/li&gt;
	&lt;li&gt;modifies the FieldAnalysisRequestHandler&lt;/li&gt;
	&lt;li&gt;adds/updates the appropriate test classes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;NOTE: the response format of the DocumentAnalysisRequestHandler differs from the AnalysisRequestHandler after all. This is mainly for two reasons: 1) to be consistent with the response format of the FieldAnalysisRequestHandler, 2) New features were added to this request handler which didn&apos;t exist in the old AnalysisRequestHandler&lt;/p&gt;</comment>
                            <comment id="12700558" author="shalinmangar" created="Sun, 19 Apr 2009 08:25:35 +0100"  >&lt;p&gt;Uri &amp;#8211; the patch is missing a class &amp;#8211; org.apache.solr.client.solrj.request.DocumentAnalysisRequest. Also, can you please remove the author javadoc tags? We don&apos;t use them in Lucene/Solr.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12700564" author="uboness" created="Sun, 19 Apr 2009 10:01:25 +0100"  >&lt;p&gt;see the new AnalysisRequestHandler_refactored1.patch file.&lt;/p&gt;

&lt;p&gt;I started working on solrj support for these request handlers, I just need to write some tests and will commit it soon as a separate patch.&lt;/p&gt;</comment>
                            <comment id="12700622" author="gsingers" created="Mon, 20 Apr 2009 02:01:53 +0100"  >&lt;p&gt;Sorry for being a bit late...  &lt;br/&gt;
Am I understanding that the main thing this does is allow you to specify one input and get back analysis for each field you specify?  Well, that and the GET, right?&lt;/p&gt;</comment>
                            <comment id="12700626" author="uboness" created="Mon, 20 Apr 2009 02:22:23 +0100"  >&lt;p&gt;Basically that was the original idea, but since then a few things were added. &lt;/p&gt;

&lt;p&gt;I thought it would be nice to have the same features provided by the &lt;tt&gt;FieldAnalysisRequestHandler&lt;/tt&gt; in the &lt;tt&gt;AnalysisRequestHnalder&lt;/tt&gt;, so the latest patch does the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The &lt;tt&gt;FieldAnalysisRequestHandler&lt;/tt&gt; accepts a query, a value, and field names/types to work on. It will then return the analysis breakdown for each field name/type. It is also possible to send a &lt;tt&gt;showmatch&lt;/tt&gt; param to &quot;mark&quot; the field tokens that match the query tokens (just like you have in the analysis.jsp)&lt;/li&gt;
	&lt;li&gt;The current/old &lt;tt&gt;AnalysisRequestHandler&lt;/tt&gt; is deprecated in favour of a new class -&amp;gt; &lt;tt&gt;DocumentAnalysisRequestHandler&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;The new &lt;tt&gt;DocumentARH&lt;/tt&gt; acts on sent documents (just like the old ARH) only that it also support &lt;tt&gt;query&lt;/tt&gt;  and &lt;tt&gt;showmatche&lt;/tt&gt; parameters&lt;/li&gt;
	&lt;li&gt;The reason I didn&apos;t apply this logic directly to the &lt;tt&gt;AnalysisRequestHandler&lt;/tt&gt; is to be consistent with the naming here -&amp;gt; &lt;tt&gt;DocumentARH&lt;/tt&gt; vs. &lt;tt&gt;FieldARH&lt;/tt&gt; (and it&apos;s a more descriptive name now that we have yet another analysis request handler)&lt;/li&gt;
	&lt;li&gt;Both the &lt;tt&gt;FieldARH&lt;/tt&gt; and the &lt;tt&gt;DocumentARH&lt;/tt&gt; inherit from the same base class - so they can share common functionality (e.g. rendering of the analysis breakdown)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12700777" author="uboness" created="Mon, 20 Apr 2009 13:00:32 +0100"  >&lt;p&gt;latest patch. This one includes SolrJ support.&lt;/p&gt;</comment>
                            <comment id="12700782" author="gsingers" created="Mon, 20 Apr 2009 13:09:25 +0100"  >&lt;p&gt;So, why not just fold all of this into the ARH?  Seems like all of these features work just as well as input parameters and there is no need for deprecation, etc.  &lt;/p&gt;</comment>
                            <comment id="12700787" author="uboness" created="Mon, 20 Apr 2009 13:49:53 +0100"  >&lt;p&gt;Not all input can be sent as input parameters (the documents will still be sent as a request body via a POST) but of course it&apos;s still possible to fold everything in one handler. It just feels like putting too much logic &amp;amp; responsibility on a single handler which increases code complexity and makes it harder to maintain (at least in my opinion). The deprecation also provides users who already use the current ARH a chance to move to the DocumentARH (which has a different response format)&lt;/p&gt;</comment>
                            <comment id="12701086" author="shalinmangar" created="Tue, 21 Apr 2009 08:42:20 +0100"  >&lt;p&gt;Patch with the following changes:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Removed rsp.getResponseHeader().add(&quot;params&quot;, req.getParams().toNamedList()); from AnalysisRequestHandlerBase as that is already done in SolrCore#execute if echoParams=explicit is passed as a request param (or configured in solrconfig.xml)&lt;/li&gt;
	&lt;li&gt;Re-formatted code to Lucene/Solr code style&lt;/li&gt;
	&lt;li&gt;Added /analysis/document and /analysis/field to example solrconfig.xml with documentation and added a note on the deprecation of AnalysisRequestHandler&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;All tests pass.&lt;/p&gt;

&lt;p&gt;Uri, AnalysisRequest cannot be an inner class of FieldAnalysisRequestHandler because when people use Solrj, FieldAnalysisRequestHandler won&apos;t be in the class-path. Same for DocumentAnalysisRequestHandler. We&apos;d need to change this.&lt;/p&gt;</comment>
                            <comment id="12701094" author="uboness" created="Tue, 21 Apr 2009 09:19:01 +0100"  >&lt;p&gt;Actually, there is not dependency between the handlers and SolrJ. SolrJ comes with its own &lt;tt&gt;FieldAnalysisRequest&lt;/tt&gt; and &lt;tt&gt;DocumentAnalysisRequest&lt;/tt&gt; classes (which extend the &lt;tt&gt;SolrRequest&lt;/tt&gt; class). The inner classes in the handlers are used to represent analysis requests on the server side. &lt;/p&gt;

&lt;p&gt;Another thing. I believe that the default names for the handlers as you defined in the default solrconfig.xml (i.e. &quot;analysis/field&quot; and &quot;analysis/document&quot;) are better than the ones I came up with &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. The only thing left to do is to update these defaults in the SolrJ request classes:  &lt;tt&gt;FieldAnalysisRequest&lt;/tt&gt; and &lt;tt&gt;DocumentAnalysisRequests&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="12701107" author="shalinmangar" created="Tue, 21 Apr 2009 09:38:49 +0100"  >&lt;blockquote&gt;&lt;p&gt;Actually, there is not dependency between the handlers and SolrJ. SolrJ comes with its own FieldAnalysisRequest and DocumentAnalysisRequest classes (which extend the SolrRequest class). The inner classes in the handlers are used to represent analysis requests on the server side. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I see. But why are they needed? Can&apos;t we use the Solrj ones on the server side? SolrJ is in the core&apos;s class path always. Let me see if that is possible.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The only thing left to do is to update these defaults in the SolrJ request classes: FieldAnalysisRequest and DocumentAnalysisRequests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I&apos;ll do that.&lt;/p&gt;</comment>
                            <comment id="12701113" author="shalinmangar" created="Tue, 21 Apr 2009 10:14:52 +0100"  >&lt;ol&gt;
	&lt;li&gt;Removed DocumentAnalysisRequestHandler.DocumentAnalysisRequest inner class and replaced all usages with the SolrJ DocumentAnalysisRequest&lt;/li&gt;
	&lt;li&gt;Removed FieldAnalysisRequestHandler.AnalysisRequest inner class and replaced all usages with the SolrJ FieldAnalysisRequest&lt;/li&gt;
	&lt;li&gt;Renamed mis-spelled method name List&amp;lt;String&amp;gt; getFieldNamed() in FieldAnalysisRequest&lt;/li&gt;
	&lt;li&gt;Added methods setFieldNames(List&amp;lt;String&amp;gt;) and setFieldTypes(List&amp;lt;String&amp;gt;) to FieldAnalysisRequest&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;All tests pass. I think this is ready for commit.&lt;/p&gt;

&lt;p&gt;Grant, did you have any suggestions? Should we go ahead with this?&lt;/p&gt;</comment>
                            <comment id="12701439" author="shalinmangar" created="Wed, 22 Apr 2009 09:53:45 +0100"  >&lt;p&gt;Committed revision 767412.&lt;/p&gt;

&lt;p&gt;Thanks Uri!&lt;/p&gt;</comment>
                            <comment id="12705327" author="yseeley@gmail.com" created="Sat, 2 May 2009 20:58:27 +0100"  >&lt;p&gt;Trying to review some of the new external APIs before 1.4.... but this one gives me a null-pointer exception.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8983/solr/analysis/field?analysis.fieldvalue=hello&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/analysis/field?analysis.fieldvalue=hello&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.solr.handler.FieldAnalysisRequestHandler.handleAnalysisRequest(FieldAnalysisRequestHandler.java:157)&lt;br/&gt;
	at org.apache.solr.handler.FieldAnalysisRequestHandler.doAnalysis(FieldAnalysisRequestHandler.java:97)&lt;/p&gt;</comment>
                            <comment id="12705385" author="shalinmangar" created="Sun, 3 May 2009 06:39:46 +0100"  >&lt;p&gt;I guess contrary to the javadocs, you need to specify either analysis.fieldname or analysis.fieldtype along with analysis.fieldvalue to make it work. They are optional but one of them must be present.&lt;/p&gt;

&lt;p&gt;On second thought, we could just use the default search field if both fieldname and fieldtype are not specified.&lt;/p&gt;</comment>
                            <comment id="12705406" author="uboness" created="Sun, 3 May 2009 11:43:03 +0100"  >&lt;blockquote&gt;&lt;p&gt;I guess contrary to the javadocs, you need to specify either analysis.fieldname or analysis.fieldtype along with analysis.fieldvalue to make it work. They are optional but one of them must be present.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s true, one of them must be set.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On second thought, we could just use the default search field if both fieldname and fieldtype are not specified.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds like a reasonable fallback.&lt;/p&gt;</comment>
                            <comment id="12705417" author="yseeley@gmail.com" created="Sun, 3 May 2009 14:23:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;I guess contrary to the javadocs, you need to specify either analysis.fieldname or analysis.fieldtype &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I had tried that too though - I just posted the simplest example that conformed to the javadoc.&lt;br/&gt;
This also gives me an exception:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8983/solr/analysis/field?analysis.fieldvalue=hello&amp;amp;analysis.fieldname=text&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/analysis/field?analysis.fieldvalue=hello&amp;amp;analysis.fieldname=text&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12705433" author="shalinmangar" created="Sun, 3 May 2009 19:38:31 +0100"  >&lt;p&gt;A null-check was missing. Now we use the default search field if both field type and name are not specified. All the tests were actually testing with a request containing both field name and field type.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this shortly.&lt;/p&gt;</comment>
                            <comment id="12705434" author="shalinmangar" created="Sun, 3 May 2009 19:48:19 +0100"  >&lt;p&gt;Committed revision 771099.&lt;/p&gt;</comment>
                            <comment id="12740152" author="yseeley@gmail.com" created="Thu, 6 Aug 2009 18:07:39 +0100"  >&lt;p&gt;Finally got around to reviewing the interface for some of this stuff...&lt;br/&gt;
there are a number of oddities (things like using the complete text of a field as the key or name in a map value, listing the value twice, requiring a uniqueKey)... but then I started thinking about who will use this, and maybe it&apos;s not worth trying to fix it up right now.&lt;/p&gt;

&lt;p&gt;And that got me thinking why there are SolrJ classes dedicated to it... and I&apos;m not sure that we should take up space for that.&lt;/p&gt;

&lt;p&gt;IMO, common things in SolrJ should have easier, more type safe interfaces and uncommon, advanced features should be accessed via the generic APIs in order to keep the interfaces smaller and more understandable for the general user.&lt;/p&gt;</comment>
                            <comment id="12741302" author="uboness" created="Mon, 10 Aug 2009 13:53:23 +0100"  >&lt;blockquote&gt;&lt;p&gt;there are a number of oddities (things like using the complete text of a field as the key or name in a map value, listing the value twice, requiring a uniqueKey)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I know... I didn&apos;t feel best with it as well, but that how the original analysis handler worked so I just followed that&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And that got me thinking why there are SolrJ classes dedicated to it... and I&apos;m not sure that we should take up space for that.&lt;/p&gt;

&lt;p&gt;IMO, common things in SolrJ should have easier, more type safe interfaces and uncommon, advanced features should be accessed via the generic APIs in order to keep the interfaces smaller and more understandable for the general user.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why wouldn&apos;t you want SolrJ support for it? IMO, it would be great to have SolrJ support for every request handler that ships out of the box with Solr. It makes the user&apos;s life simpler and easier to use Solr this way. And as far as space is concerned... how much does it really add to the overall size of solrj jar? In any case, we&apos;re not talking of megabytes here... and for most people it doesn&apos;t really matter - I think it&apos;s more important to provide a simple and user friendly API to work with, and if the cost is to add a few extra classes I think it&apos;s a pretty cheap price to pay. It is true (I also mentioned it before) that it&apos;s not a major functionality that will be used often... but it is useful to have for tooling support - We&apos;re using it in one of the tools that we&apos;ve created and the admin website can use it as well.&lt;/p&gt;</comment>
                            <comment id="12767653" author="koji" created="Tue, 20 Oct 2009 02:32:14 +0100"  >&lt;p&gt;Hmm, I think the order of Tokenizer/TokenFilters in response is unconsidered. For example, I cannot take out Tokenizer/TokenFilters from ruby response in order...&lt;/p&gt;</comment>
                            <comment id="12767662" author="koji" created="Tue, 20 Oct 2009 03:10:26 +0100"  >&lt;p&gt;I&apos;d like to use NamedList rather than SimpleOrderedMap. If there is no objections, I&apos;ll commit soon. All tests pass.&lt;/p&gt;</comment>
                            <comment id="12767706" author="hossman" created="Tue, 20 Oct 2009 06:46:51 +0100"  >&lt;p&gt;go for it koji&lt;/p&gt;</comment>
                            <comment id="12767777" author="koji" created="Tue, 20 Oct 2009 12:25:56 +0100"  >&lt;p&gt;Committed revision 827032. Thanks.&lt;/p&gt;</comment>
                            <comment id="12775706" author="gsingers" created="Tue, 10 Nov 2009 15:52:00 +0000"  >&lt;p&gt;Bulk close for Solr 1.4&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12426266">SOLR-1183</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12405836" name="AnalisysRequestHandler_refactored.patch" size="78179" author="uboness" created="Sat, 18 Apr 2009 04:04:06 +0100"/>
                            <attachment id="12405864" name="AnalysisRequestHandler_refactored1.patch" size="79146" author="uboness" created="Sun, 19 Apr 2009 10:01:25 +0100"/>
                            <attachment id="12404656" name="FieldAnalysisRequestHandler_incl_test.patch" size="40419" author="uboness" created="Sat, 4 Apr 2009 20:03:03 +0100"/>
                            <attachment id="12422641" name="SOLR-1099-ordered-TokenizerChain.patch" size="1160" author="koji" created="Tue, 20 Oct 2009 03:10:26 +0100"/>
                            <attachment id="12407119" name="SOLR-1099.patch" size="6517" author="shalinmangar" created="Sun, 3 May 2009 19:38:31 +0100"/>
                            <attachment id="12406014" name="SOLR-1099.patch" size="138075" author="shalinmangar" created="Tue, 21 Apr 2009 10:14:52 +0100"/>
                            <attachment id="12406009" name="SOLR-1099.patch" size="140618" author="shalinmangar" created="Tue, 21 Apr 2009 08:42:20 +0100"/>
                            <attachment id="12405923" name="analysis_request_handlers_incl_solrj.patch" size="141699" author="uboness" created="Mon, 20 Apr 2009 13:00:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Apr 2009 07:25:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6540</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxnav:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20094</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>