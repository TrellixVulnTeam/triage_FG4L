<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:15:23 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-593/SOLR-593.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-593] Solr hangs at QueryElevationComponent.inform() if elevate.xml is in data directory</title>
                <link>https://issues.apache.org/jira/browse/SOLR-593</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;The thread dump is:&lt;/p&gt;

&lt;p&gt;&quot;main&quot; prio=6 tid=0x003f81d8 nid=0x10e4 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0x0006f000..0x0006fc20&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x23dd0188&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:474)&lt;br/&gt;
        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:685)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x23dd0188&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:624)&lt;br/&gt;
        at org.apache.solr.handler.component.QueryElevationComponent.inform(QueryElevationComponent.java:185)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x23e51ee0&amp;gt; (a java.util.WeakHashMap)&lt;br/&gt;
        at org.apache.solr.core.SolrResourceLoader.inform(SolrResourceLoader.java:264)&lt;br/&gt;
        at org.apache.solr.core.SolrCore.&amp;lt;init&amp;gt;(SolrCore.java:396)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x27b44b60&amp;gt; (a java.lang.Class)&lt;br/&gt;
        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:90)&lt;br/&gt;
        at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:99)&lt;br/&gt;
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)&lt;br/&gt;
        at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:594)&lt;br/&gt;
        at org.mortbay.jetty.servlet.Context.startContext(Context.java:139)&lt;br/&gt;
        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1218)&lt;br/&gt;
        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:500)&lt;br/&gt;
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)&lt;br/&gt;
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:147)&lt;br/&gt;
        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)&lt;br/&gt;
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:147)&lt;br/&gt;
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:117)&lt;br/&gt;
        at org.mortbay.jetty.Server.doStart(Server.java:210)&lt;br/&gt;
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)&lt;br/&gt;
        at org.mortbay.xml.XmlConfiguration.main(XmlConfiguration.java:929)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at org.mortbay.start.Main.invokeMain(Main.java:183)&lt;br/&gt;
        at org.mortbay.start.Main.start(Main.java:497)&lt;br/&gt;
        at org.mortbay.start.Main.main(Main.java:115)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The cause is that accessing reader during SolrCoreAware.inform(). Shalin pointed out same thing at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Accessing-IndexReader-during-core-initialization-hangs-init-td17259235.html#a17259235&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Accessing-IndexReader-during-core-initialization-hangs-init-td17259235.html#a17259235&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12397661">SOLR-593</key>
            <summary>Solr hangs at QueryElevationComponent.inform() if elevate.xml is in data directory</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="koji">Koji Sekiguchi</reporter>
                        <labels>
                    </labels>
                <created>Fri, 6 Jun 2008 11:00:12 +0100</created>
                <updated>Fri, 10 May 2013 11:40:14 +0100</updated>
                            <resolved>Mon, 21 Jul 2008 15:02:06 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12613218" author="hossman" created="Mon, 14 Jul 2008 01:57:41 +0100"  >&lt;p&gt;bugs in code new since 1.2 should be fixed before 1.3&lt;/p&gt;</comment>
                            <comment id="12613728" author="yseeley@gmail.com" created="Tue, 15 Jul 2008 21:51:58 +0100"  >&lt;p&gt;Solr has a deadlock when useColdSearcher=false and a plugin calls getSearcher() from inform():&lt;/p&gt;

&lt;p&gt;The SolrCore constructor prevents warming queries from firing before inform() has been called on plugins.  But if useColdSearcher=false, then those warming queries will need to be completed before the searcher is registered.  If a plugin calls getSearcher() from inform() it will block waiting for the searcher to be registered (which is dependent on completing the inform() calls): deadlock.&lt;/p&gt;</comment>
                            <comment id="12613731" author="yseeley@gmail.com" created="Tue, 15 Jul 2008 21:58:09 +0100"  >&lt;p&gt;The simplest solution might be to deprecate/remove useColdSearcher=false&lt;/p&gt;</comment>
                            <comment id="12615082" author="koji" created="Sun, 20 Jul 2008 12:17:55 +0100"  >&lt;p&gt;Can we introduce getColdSearcher() method so that SolrCoreAware components can call it to get searcher, instead of getSearcher(), to avoid this deadlock? getColdSearcher() always returns a cold searcher regardless of useColdSearcher setting...&lt;/p&gt;</comment>
                            <comment id="12615102" author="yseeley@gmail.com" created="Sun, 20 Jul 2008 16:39:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can we introduce getColdSearcher() method so that SolrCoreAware components can call it to get searcher&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That could work.&lt;/p&gt;

&lt;p&gt;We could also try to do something more generic like getNewestSearcher() that could be called in any context.  That could also be used internally to use the new lucene reopen() for better efficiency.  But the implementation would be a little tricky.&lt;/p&gt;</comment>
                            <comment id="12615108" author="yseeley@gmail.com" created="Sun, 20 Jul 2008 18:38:02 +0100"  >&lt;p&gt;This patch implements a getNewestSearcher() method, and keeps a list of searchers that are currently open.&lt;/p&gt;

&lt;p&gt;Keeping a list like this opens a race condition in that someone could aquire a reference from the list just as close is being called.  To protect against this, the list is only accessed when searcherLock is held, and the close() of RefCounted&amp;lt;SolrIndexSearcher&amp;gt; aquires searcherLock and checks the referece count again.  If it&apos;s greater than 0, it aborts the close.&lt;/p&gt;

&lt;p&gt;Having the list will also be useful for using Lucene&apos;s new reopen, as well as other future admin actions.&lt;/p&gt;

&lt;p&gt;All tests pass, but I&apos;m going to do some ad-hoc testing to make sure this hasn&apos;t introduced any new issues.&lt;/p&gt;</comment>
                            <comment id="12615248" author="yseeley@gmail.com" created="Mon, 21 Jul 2008 15:02:06 +0100"  >&lt;p&gt;committed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12386491" name="SOLR-593.patch" size="5550" author="yseeley@gmail.com" created="Sun, 20 Jul 2008 18:38:02 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Jul 2008 00:57:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7015</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxqe7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20595</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>