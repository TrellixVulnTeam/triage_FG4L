<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:22:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1427/SOLR-1427.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1427] SearchComponents aren&apos;t listed on registry.jsp</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1427</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;SearchComponent implements SolrInfoMBean using getCategory() of &quot;OTHER&quot; but they aren&apos;t listed on the registry.jsp display of loaded plugins.&lt;/p&gt;

&lt;p&gt;This may be a one-of-glitch because of the way SearchComponents get loaded, or it may indicate some other problem with the infoRegistry.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12435481">SOLR-1427</key>
            <summary>SearchComponents aren&apos;t listed on registry.jsp</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="hossman">Hoss Man</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Sep 2009 23:05:26 +0100</created>
                <updated>Tue, 10 Nov 2009 15:52:15 +0000</updated>
                            <resolved>Tue, 22 Sep 2009 05:30:52 +0100</resolved>
                                                    <fixVersion>1.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12755479" author="gsingers" created="Tue, 15 Sep 2009 14:20:41 +0100"  >&lt;p&gt;Yeah, doesn&apos;t look like the get registered w/ the infoRegistry on the core.  &lt;/p&gt;

&lt;p&gt;Some other things I noticed:&lt;br/&gt;
1. Should ProcessorChains implement SolrInfoMBean too?  That could be a 1.5 thing.&lt;br/&gt;
2. Seems like custom code that implements SolrInfoMBean is not going to be registered either.  Again, I think that can be handled for 1.5.&lt;/p&gt;

&lt;p&gt;I&apos;ll put up a patch shortly on fixing the SearchComponents one (or at least the default ones for now)&lt;/p&gt;</comment>
                            <comment id="12755488" author="gsingers" created="Tue, 15 Sep 2009 14:45:25 +0100"  >&lt;p&gt;Fixes the issue, including handling registering beans loaded by the SolrResourceLoader.  Added test to SolrCoreTest.  Will commit later today or tomorrow.&lt;/p&gt;</comment>
                            <comment id="12755491" author="gsingers" created="Tue, 15 Sep 2009 14:52:57 +0100"  >&lt;p&gt;Adds in a section for highlighting.&lt;/p&gt;</comment>
                            <comment id="12755838" author="gsingers" created="Wed, 16 Sep 2009 02:59:52 +0100"  >&lt;p&gt;Committed revision 815587.&lt;/p&gt;</comment>
                            <comment id="12756690" author="yseeley@gmail.com" created="Thu, 17 Sep 2009 19:48:01 +0100"  >&lt;p&gt;Reopening - these changes are implicated in deadlocks on startup.&lt;br/&gt;
We need to find a way to make it bullet proof, or revert for now.&lt;/p&gt;</comment>
                            <comment id="12756697" author="gsingers" created="Thu, 17 Sep 2009 19:53:53 +0100"  >&lt;p&gt;Hmm, I thought they would be fine given I handled them like the SolrCoreAware stuff.  It seems like all it is doing is adding to a map, no?&lt;/p&gt;</comment>
                            <comment id="12756711" author="hossman" created="Thu, 17 Sep 2009 20:14:14 +0100"  >&lt;p&gt;Comments from email thread...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I haven&apos;t tried to reproduce the problem, and i don&apos;t even have a concrete &lt;br/&gt;
theory as to what the problem is ... but i did want to point out something &lt;br/&gt;
that smells fishy...&lt;/p&gt;

&lt;p&gt;looking over the patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1427&quot; title=&quot;SearchComponents aren&amp;#39;t listed on registry.jsp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1427&quot;&gt;&lt;del&gt;SOLR-1427&lt;/del&gt;&lt;/a&gt;, i notice that the patch adds new code &lt;br/&gt;
so that SolrResourceLoader adds everything it instantiates to the registry &lt;br/&gt;
map &amp;#8211; but there are no lines in that patch removing any code that was &lt;br/&gt;
already adding stuff to the infoRegistry ... which means any bean &lt;br/&gt;
types that were already getting instantiated by the ResourceLoader, and explicitly &lt;br/&gt;
added to hte registry are probably now getting added to the registry twice &lt;br/&gt;
... for a normal Map that&apos;s not a big deal, but perhaps the JMX backed map &lt;br/&gt;
has some problems with that? (it&apos;s not likely something that we ever &lt;br/&gt;
tested extensively)&lt;/p&gt;

&lt;p&gt;Alternately: maybe the problem isn&apos;t with adding to the JMX backed map &lt;br/&gt;
twice ... maybe the issue is what state the beans are in each time we add &lt;br/&gt;
them to the map ... the first time requesthandlers are added to the &lt;br/&gt;
infoRegistry it&apos;s prior to the inform(SolrCore) call so they havne&apos;t been &lt;br/&gt;
fully initalized yet &amp;#8211; but the way SOlrResourceLoader adds them now (the &lt;br/&gt;
second time) is &lt;b&gt;after&lt;/b&gt; inform(SolrCore) has been called and in between &lt;br/&gt;
the creation/countDown of the CountDownLatch for the searchExecutor ... &lt;/p&gt;

&lt;p&gt;   ...hmmm, actually this starting to sound like a concrete theory, &lt;br/&gt;
ReplicationHandler.getStatistics has very different behavior before/after &lt;br/&gt;
inform(SolrCore) has been called....&lt;/p&gt;

&lt;p&gt;Maybe moving the resourceLoader.inform(infoRegistry) call PRIOR to &lt;br/&gt;
resourceLoader.inform( this ) &lt;b&gt;or&lt;/b&gt; AFTER latch.countDown() would solve &lt;br/&gt;
this problem?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;followup comment...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If this really is the problem, then a more general purpose solution to &lt;br/&gt;
future proof us against similar problems down the road would probably be &lt;br/&gt;
to get rid of the current &quot;if (config.jmxConfig.enabled)&quot; logic for &lt;br/&gt;
initializing SolrCore.infoRegistry, and instead us something like...&lt;/p&gt;

&lt;p&gt;  infoRegistry = new ConcurrentHashMap&amp;lt;String, SolrInfoMBean&amp;gt;();&lt;br/&gt;
  ...&lt;br/&gt;
  // do all initialization, add things to infoRegistry as needed&lt;br/&gt;
  ...&lt;br/&gt;
  // done with all initilation, core and all MBeans are fully functional&lt;br/&gt;
  if (config.jmxConfig.enabled) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
     Map tmp = infoRegistry;
     infoRegistry = new JmxMonitoredMap&amp;lt;String, SolrInfoMBean&amp;gt;(name, config.jmxConfig);
     infoRegistry.putAll(tmp);
  }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; else &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
    log.info(&amp;quot;JMX monitoring not detected for core}&lt;/span&gt; &lt;/div&gt;

&lt;p&gt;...that way we wouldn&apos;t have to worry about any other type of resource &lt;br/&gt;
contention that might happen from the JMX monitor wanting ot get info from &lt;br/&gt;
the MBeans as soon as they are added to the registry.&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="12757185" author="gsingers" created="Fri, 18 Sep 2009 15:43:10 +0100"  >&lt;p&gt;I&apos;m guessing the problem is most likely in loading the SearchComponents, not in the SolrResourceLoader.  The reason being what Yonik said in that the core is not ready yet at that point.&lt;/p&gt;

&lt;p&gt;Also, need to address the possible double loading in SolrResourceLoader.&lt;/p&gt;</comment>
                            <comment id="12757195" author="gsingers" created="Fri, 18 Sep 2009 16:08:38 +0100"  >&lt;p&gt;Hoss, where in the SolrResourceLoader do you see other puts into the infoRegistry happening?&lt;/p&gt;</comment>
                            <comment id="12757198" author="gsingers" created="Fri, 18 Sep 2009 16:15:34 +0100"  >&lt;p&gt;Patch that defers registering the components until later.  I can&apos;t reproduce the problem, so this is just a educated guess.&lt;/p&gt;</comment>
                            <comment id="12757732" author="yseeley@gmail.com" created="Sun, 20 Sep 2009 16:34:43 +0100"  >&lt;p&gt;I&apos;ve reverted the majority of this patch (except for adding a highlight section to registry.xsl&lt;br/&gt;
We probably should have done that immediately when this hang was detected since it turned a minor bug into a critical bug.&lt;/p&gt;</comment>
                            <comment id="12757733" author="yseeley@gmail.com" created="Sun, 20 Sep 2009 16:54:56 +0100"  >&lt;p&gt;update: given one more try, I was able to reproduce the hang in tomcat before the patch was reverted.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I used java6&lt;/li&gt;
	&lt;li&gt;enabled replication as master&lt;/li&gt;
	&lt;li&gt;export JAVA_OPTS=&quot;-Dcom.sun.management.jmxremote&quot;  (I don&apos;t think this is necessary w/ Java6)&lt;/li&gt;
	&lt;li&gt;bin/catalina.sh start&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12757772" author="hossman" created="Sun, 20 Sep 2009 23:42:47 +0100"  >&lt;p&gt;The more I think about it, and the more I look at the threaddumps from people reporting a problem after this patch...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Latest-trunk--locks-execution-thread-in-SolrCore.getSearcher%28%29-to25483788.html#a25496516&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Latest-trunk--locks-execution-thread-in-SolrCore.getSearcher%28%29-to25483788.html#a25496516&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;...the more certain i am that my previous guess was correct.  &lt;/p&gt;

&lt;p&gt;Some background...&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;SolrCore.getSearcher() explicitly says it can&apos;t be called during SolrCoreAware.inform(SolrCore) ... there is a &quot;latch&quot; that blocks getSearcher arround the inform calls.&lt;/li&gt;
	&lt;li&gt;ReplicationHandler implements SolrCoreAware, and obey&apos;s this contract but stores a permanent reference to the core.&lt;/li&gt;
	&lt;li&gt;ReplicationHandler.getStatistics uses that core to call getSearcher()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now here&apos;s where our problem comes from...&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the previous patch resulted in SOlrResoureceLoader adding SOlrMBeans into the infoRegsitry map (which could be a JmxMonitoredMap) during the &quot;latch&quot; that causes blocks on getSearcher&lt;/li&gt;
	&lt;li&gt;JmxMonitoredMap.put registeres the MBeans with the JMX server.&lt;/li&gt;
	&lt;li&gt;based on the threaddumps provided there are evidently &lt;em&gt;some&lt;/em&gt; JMX implementations in which JmxMBeanServer.registerMBean blocks until rDynamicMBean.getMBeanInfo returns.&lt;/li&gt;
	&lt;li&gt;In a SolrDynamicMBean.getMBeanInfo this method calls getStatistics&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;... hence the problem.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a patch that is essentially a &quot;redo&quot; of what Yonik reverted, but it moves the line adding items to the infoRegistry until after the latch has been released.&lt;/p&gt;


&lt;p&gt;I&apos;d appreciate it if anyone who was able to reproduce the problem that caused the revert could try this patch (with JMX turned on as it is in the example solrconfig.xml)&lt;/p&gt;</comment>
                            <comment id="12757773" author="hossman" created="Sun, 20 Sep 2009 23:59:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;Hoss, where in the SolrResourceLoader do you see other puts into the infoRegistry happening? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I didn&apos;t say i saw other puts in SolrResourceLoader, I said now there are puts in SolrResourceLoader, but none of the existing puts (in other files) were removed even though in some cases they are now redundent.  &lt;/p&gt;

&lt;p&gt;One Example...&lt;/p&gt;

&lt;p&gt;RequestHandlers.initHandlersFromConfig calls core.createRequestHandler which uses SolrResourceLoader to create every RequestHandler, and then initHandlersFromConfig also calls RequestHandlers.register which adds the handler to core.getInfoRegistry().&lt;/p&gt;

&lt;p&gt;But we problem shouldn&apos;t just remove any redundent looking puts on  core.getInfoRegistry(), because they night not be redundant in all cases (RequestHandler.register could conceivable be used to register a Handler that some other plugin created w/o using SOlrResourceLoader) ... so the redundancy isn&apos;t necessarily bad, it just raised a red flag &amp;#8211; and explains where the thread hang came from: registering RequestHandlers twice didn&apos;t cause the hang, it was the fact that the second registration happened during the latch on the searchExecutor.&lt;/p&gt;</comment>
                            <comment id="12758120" author="hossman" created="Tue, 22 Sep 2009 05:30:52 +0100"  >&lt;p&gt;got feedback on solr-user from two who had thread locks with &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1427&quot; title=&quot;SearchComponents aren&amp;#39;t listed on registry.jsp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1427&quot;&gt;&lt;del&gt;SOLR-1427&lt;/del&gt;&lt;/a&gt;.patch indicating that &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1427&quot; title=&quot;SearchComponents aren&amp;#39;t listed on registry.jsp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1427&quot;&gt;&lt;del&gt;SOLR-1427&lt;/del&gt;&lt;/a&gt;.afterlatch.patch worked fine for them, so....&lt;/p&gt;


&lt;p&gt;hossman@coaster:~/lucene/solr$ svn commit -m &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1427&quot; title=&quot;SearchComponents aren&amp;#39;t listed on registry.jsp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1427&quot;&gt;&lt;del&gt;SOLR-1427&lt;/del&gt;&lt;/a&gt;: redo of Grant&apos;s previous commit that yonik rolled back - but this time with the registration postponed until the latch is released&quot;&lt;br/&gt;
...&lt;br/&gt;
Committed revision 817499.&lt;/p&gt;</comment>
                            <comment id="12775871" author="gsingers" created="Tue, 10 Nov 2009 15:52:15 +0000"  >&lt;p&gt;Bulk close for Solr 1.4&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12420151" name="SOLR-1427.afterlatch.patch" size="4775" author="hossman" created="Sun, 20 Sep 2009 23:42:47 +0100"/>
                            <attachment id="12420033" name="SOLR-1427.patch" size="1170" author="gsingers" created="Fri, 18 Sep 2009 16:15:34 +0100"/>
                            <attachment id="12419633" name="SOLR-1427.patch" size="6146" author="gsingers" created="Tue, 15 Sep 2009 14:52:57 +0100"/>
                            <attachment id="12419632" name="SOLR-1427.patch" size="4705" author="gsingers" created="Tue, 15 Sep 2009 14:45:25 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Sep 2009 13:20:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6227</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxlbz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19775</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>