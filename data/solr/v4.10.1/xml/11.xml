<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:21:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-11/SOLR-11.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-11] DeDupTokenFilter{Factory}</title>
                <link>https://issues.apache.org/jira/browse/SOLR-11</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;I recently noticed a situation in which my Query analyzer was producing the same Token more then once, resulting in it getting two equally boosted clauses in the resulting query.  In my specific case, i was using the same synonym file for multiple fields (some stemmed some not) and two synonyms for a word stemmed to the same root, which ment that particular word was worth twice as as any of the other variations of the synonym &amp;#8211; but I can imagine other situations where this might come up, both at index time and at query time, particularlay when using SynonymFilter in combination with the WordDelimiter filter.&lt;/p&gt;

&lt;p&gt;It occured to me that a DeDupFilter would be handy.  In it&apos;s simplest form it would drop any Token it gets where the startOffset, endOffset,termText,and type are all identical to the previous token and the positionIncriment is 0.  A more robust implimentation might support init options indicating that only certain combinations of those things should be used to determine equality (ie: just termText, just termText and positionIncriment=0, etc...) but in this case, an option might also be neccessary to determine with of the Tokens should be propogated (the first of the last)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12332376">SOLR-11</key>
            <summary>DeDupTokenFilter{Factory}</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hossman">Hoss Man</assignee>
                                    <reporter username="hossman">Hoss Man</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Apr 2006 02:36:26 +0100</created>
                <updated>Fri, 10 May 2013 11:40:41 +0100</updated>
                            <resolved>Thu, 6 Jul 2006 13:40:00 +0100</resolved>
                                                    <fixVersion>1.1.0</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12378681" author="rhyde" created="Wed, 10 May 2006 02:19:38 +0100"  >&lt;p&gt;This one is working well for me.   It also fixes a number of the problems that came up after my &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-14&quot; title=&quot;Add the ability to preserve the original term when using WordDelimiterFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-14&quot;&gt;&lt;del&gt;SOLR-14&lt;/del&gt;&lt;/a&gt; patch.&lt;/p&gt;</comment>
                            <comment id="12378683" author="rhyde" created="Wed, 10 May 2006 02:20:45 +0100"  >&lt;p&gt;Sorry for no factory class.  My code repo is way too divergent for a clean diff at the moment but the factory is fairly obvious.&lt;/p&gt;</comment>
                            <comment id="12378702" author="yseeley@gmail.com" created="Wed, 10 May 2006 03:22:54 +0100"  >&lt;p&gt;It looks like this implementation is O(n^2), right?&lt;br/&gt;
It also looks like it removes &lt;b&gt;all&lt;/b&gt; duplicates for a whole field, not limiting itself to those tokens with a positionIncrement=0.  Is this the indended behavior?&lt;/p&gt;</comment>
                            <comment id="12378708" author="rhyde" created="Wed, 10 May 2006 03:31:53 +0100"  >&lt;p&gt;re algorith,: Yes, it would not be advisable for large fields.   &lt;br/&gt;
 I&apos;m not all that familiar with the subtleties of position but for at least some of my data, I am geting duplicates in other posistions.&lt;/p&gt;</comment>
                            <comment id="12378728" author="rhyde" created="Wed, 10 May 2006 04:08:55 +0100"  >&lt;p&gt;Alternate implementation based on LinkedHashMap instead of a LinkedList queue.   Should work better for larger data sets.   Still doesn&apos;t pay attention to position but I don&apos;t know enough to know if that is important.&lt;/p&gt;</comment>
                            <comment id="12378758" author="hossman" created="Wed, 10 May 2006 05:33:39 +0100"  >&lt;p&gt;DeDuping purely on tem text without any regard for position seems a litle extreme for most cases ... it will seriously throw off term frequencies and phrase queries.&lt;/p&gt;

&lt;p&gt;I&apos;m sure it has benefits, but i&apos;d prefer a solution where it&apos;s that behavior is an &quot;option&quot; and the defualt is to only rmeove duplicate tokens at the same position.&lt;/p&gt;</comment>
                            <comment id="12378759" author="yseeley@gmail.com" created="Wed, 10 May 2006 05:46:17 +0100"  >&lt;p&gt;Another issue is memory use for very large fields (the current impl doesn&apos;t stream).&lt;/p&gt;

&lt;p&gt;It seems like a lot of token filter implementations need some kind of buffering that could be refactored into a TokenQueue, or perhaps a base-class BufferedTokenFilter.&lt;/p&gt;</comment>
                            <comment id="12378780" author="rhyde" created="Wed, 10 May 2006 07:34:48 +0100"  >&lt;p&gt;YMMV, I had to put this together rather quickly this morning  to dedupe tokens in different positions.  But again, that&apos;s a result of my imperfect &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-14&quot; title=&quot;Add the ability to preserve the original term when using WordDelimiterFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-14&quot;&gt;&lt;del&gt;SOLR-14&lt;/del&gt;&lt;/a&gt; patch.  I just thought I&apos;d get a little discussion started on the topic.  I&apos;d like to see some solution integrated.&lt;/p&gt;

&lt;p&gt;Re BufferedTokenFilter.   That would be great.  It&apos;s much easier to deal with context and symantics when you have forward and reverse state... especially for non-Java-literate people like myself.&lt;/p&gt;</comment>
                            <comment id="12418518" author="hossman" created="Fri, 30 Jun 2006 03:18:08 +0100"  >&lt;p&gt;Back in this email...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/BufferingTokenStream-and-RemoveDups-p4320716.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/BufferingTokenStream-and-RemoveDups-p4320716.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;...yonik posted an off the cuff solution to this probem that also included a nice reusable &quot;BufferedTokenStream&quot;&lt;/p&gt;

&lt;p&gt;I&apos;ve cleaned it up, added some tests, and fixed the bugs the tests surfaced (mainly the infinite loops and the fact that the dup detection ignored every token with a non zero position gap thta was followed by a 0 position gap)&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this in the next few days unless anyone has any objections/comments regarding ways to imporve it.  the RemoveDuplicatesTokenFilter.process method is much less elegant then Yonik&apos;s orriginal version, but that&apos;s the only way i could get it to work.  I&apos;d welcome any suggestions on regaining the elegance without breaking the tests.&lt;/p&gt;
</comment>
                            <comment id="12419337" author="yseeley@gmail.com" created="Thu, 6 Jul 2006 05:44:47 +0100"  >&lt;p&gt;I looked it over quick, looks fine to me!&lt;/p&gt;

&lt;p&gt;A few weeks ago I did some more premature optimization, writing a circular queue (power-of-two based) that&apos;s about twice as fast as a LinkedList for our typical usage.  I was intending it for use in BufferedTokenFilter if insertion/removal of tokens in the middle of the buffers was unneeded (or rare, as it could be implemented).&lt;/p&gt;

&lt;p&gt;Anyway, I&apos;m attaching it here for lack of a better place.  I support committing the current BufferedTokenFilter as-is, since I doubt the LinkedList implementation will be any kind of bottleneck.&lt;/p&gt;</comment>
                            <comment id="12419408" author="hossman" created="Thu, 6 Jul 2006 13:40:00 +0100"  >&lt;p&gt;patch commited as is, plus some additional test cases and example schema usages.&lt;/p&gt;</comment>
                            <comment id="12589357" author="hossman" created="Wed, 16 Apr 2008 00:56:44 +0100"  >&lt;p&gt;This bug was modified as part of a bulk update using the criteria...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Marked (&quot;Resolved&quot; or &quot;Closed&quot;) and &quot;Fixed&quot;&lt;/li&gt;
	&lt;li&gt;Had no &quot;Fix Version&quot; versions&lt;/li&gt;
	&lt;li&gt;Was listed in the CHANGES.txt for 1.1&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The Fix Version for all 38 issues found was set to 1.1, email notification&lt;br/&gt;
was suppressed to prevent excessive email.&lt;/p&gt;

&lt;p&gt;For a list of all the issues modified, search jira comments for this&lt;br/&gt;
(hopefully) unique string: 20080415hossman3&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Cloners</name>
                                                                <inwardlinks description="is cloned by">
                                        <issuelink>
            <issuekey id="12345458">SOLR-26</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12336388" name="ArrayQueue.java" size="3148" author="yseeley@gmail.com" created="Thu, 6 Jul 2006 05:44:47 +0100"/>
                            <attachment id="12336171" name="SOLR-11-BufferedTokenStream-RemoveDuplicatesTokenFilter.patch" size="14862" author="hossman" created="Fri, 30 Jun 2006 03:18:08 +0100"/>
                            <attachment id="12326463" name="solr.analysis.RemoveDuplicateTokensFilter.java" size="1456" author="rhyde" created="Wed, 10 May 2006 02:19:38 +0100"/>
                            <attachment id="12326473" name="solr.analysys.RemomveDuplicateTokensFilter.linkedhashmap.java" size="1504" author="rhyde" created="Wed, 10 May 2006 04:08:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 10 May 2006 01:19:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7566</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxtxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21169</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>