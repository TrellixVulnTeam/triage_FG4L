<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:23:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-215/SOLR-215.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-215] Multiple Solr Cores - remove static singleton</title>
                <link>https://issues.apache.org/jira/browse/SOLR-215</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;WHAT:&lt;br/&gt;
As of 1.2, Solr only instantiates one SolrCore which handles one Lucene index.&lt;br/&gt;
This patch is intended to allow multiple cores in Solr which also brings multiple indexes capability.&lt;br/&gt;
The patch file to grab is solr-215.patch.zip (see MISC session below).&lt;/p&gt;

&lt;p&gt;WHY:&lt;br/&gt;
The current Solr practical wisdom is that one schema - thus one index - is most likely to accomodate your indexing needs, using a filter to segregate documents if needed. If you really need multiple indexes, deploy multiple web applications.&lt;br/&gt;
There are a some use cases however where having multiple indexes or multiple cores through Solr itself may make sense.&lt;br/&gt;
Multiple cores:&lt;br/&gt;
Deployment issues within some organizations where IT will resist deploying multiple web applications.&lt;br/&gt;
Seamless schema update where you can create a new core and switch to it without starting/stopping servers.&lt;br/&gt;
Embedding Solr in your own application (instead of &apos;raw&apos; Lucene) and functionally need to segregate schemas &amp;amp; collections.&lt;br/&gt;
Multiple indexes:&lt;br/&gt;
Multiple language collections where each document exists in different languages, analysis being language dependant.&lt;br/&gt;
Having document types that have nothing (or very little) in common with respect to their schema, their lifetime/update frequencies or even collection sizes.&lt;/p&gt;

&lt;p&gt;HOW:&lt;br/&gt;
The best analogy is to consider that instead of deploying multiple web-application, you can have one web-application that hosts more than one Solr core. The patch does not change any of the core logic (nor the core code); each core is configured &amp;amp; behaves exactly as the one core in 1.2; the various caches are per-core &amp;amp; so is the info-bean-registry.&lt;br/&gt;
What the patch does is replace the SolrCore singleton by a collection of cores; all the code modifications are driven by the removal of the different singletons (the config, the schema &amp;amp; the core).&lt;br/&gt;
Each core is &apos;named&apos; and a static map (keyed by name) allows to easily manage them.&lt;br/&gt;
You declare one servlet filter mapping per core you want to expose in the web.xml; this allows easy to access each core through a different url. &lt;/p&gt;

&lt;p&gt;USAGE (example web deployment, patch installed):&lt;br/&gt;
Step0&lt;br/&gt;
java -Durl=&apos;http://localhost:8983/solr/core0/update&apos; -jar post.jar solr.xml monitor.ml&lt;br/&gt;
Will index the 2 documents in solr.xml &amp;amp; monitor.xml&lt;br/&gt;
Step1:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/core0/admin/stats.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/core0/admin/stats.jsp&lt;/a&gt;&lt;br/&gt;
Will produce the statistics page from the admin servlet on core0 index; 2 documents&lt;br/&gt;
Step2:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/core1/admin/stats.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/core1/admin/stats.jsp&lt;/a&gt;&lt;br/&gt;
Will produce the statistics page from the admin servlet on core1 index; no documents&lt;br/&gt;
Step3:&lt;br/&gt;
java -Durl=&apos;http://localhost:8983/solr/core0/update&apos; -jar post.jar ipod*.xml&lt;br/&gt;
java -Durl=&apos;http://localhost:8983/solr/core1/update&apos; -jar post.jar mon*.xml&lt;br/&gt;
Adds the ipod*.xml to index of core0 and the mon*.xml to the index of core1;&lt;br/&gt;
running queries from the admin interface, you can verify indexes have different content. &lt;/p&gt;

&lt;p&gt;USAGE (Java code):&lt;br/&gt;
//create a configuration&lt;br/&gt;
SolrConfig config = new SolrConfig(&quot;solrconfig.xml&quot;);&lt;br/&gt;
//create a schema&lt;br/&gt;
IndexSchema schema = new IndexSchema(config, &quot;schema0.xml&quot;);&lt;br/&gt;
//create a core from the 2 other.&lt;br/&gt;
SolrCore core = new SolrCore(&quot;core0&quot;, &quot;/path/to/index&quot;, config, schema);&lt;br/&gt;
//Accessing a core:&lt;br/&gt;
SolrCore core = SolrCore.getCore(&quot;core0&quot;); &lt;/p&gt;

&lt;p&gt;PATCH MODIFICATIONS DETAILS (per package):&lt;br/&gt;
org.apache.solr.core:&lt;br/&gt;
The heaviest modifications are in SolrCore &amp;amp; SolrConfig.&lt;br/&gt;
SolrCore is the most obvious modification; instead of a singleton, there is a static map of cores keyed by names and assorted methods. To retain some compatibility, the &apos;null&apos; named core replaces the singleton for the relevant methods, for instance SolrCore.getCore(). One small constraint on the core name is they can&apos;t contain &apos;/&apos; or &apos;\&apos; avoiding potential url &amp;amp; file path problems.&lt;br/&gt;
SolrConfig (&amp;amp; SolrIndexConfig) are now used to persist all configuration options that need to be quickly accessible to the various components. Most of these variables were static like those found in SolrIndexSearcher. Mimicking the intent of these static variables, SolrConfig &amp;amp; SolrIndexConfig use public final members to expose them.&lt;br/&gt;
SolrConfig inherits from Config which has been modified; Config is now more strictly a dom document (filled from some resource) and methods to evaluate xpath expressions. Config also continues to be the classloader singleton that allows to easily instantiate classes located in the Solr installation directory.&lt;/p&gt;

&lt;p&gt;org.apache.solr.analysis:&lt;br/&gt;
TokenizerFactory &amp;amp; FilterFactory now get the SolrConfig passed as a parameter to init; one might want to read some resources to initialize the factory and the config dir is in the config. This is partially redundant with the argument map though.&lt;/p&gt;

&lt;p&gt;org.apache.solr.handler:&lt;br/&gt;
RequestHandlerBase takes the core as a constructor parameter.&lt;/p&gt;

&lt;p&gt;org.apache.solr.util:&lt;br/&gt;
The test harness has been modified to expose the core it instantiates.&lt;/p&gt;

&lt;p&gt;org.apache.solr.servlet:&lt;br/&gt;
SolrDispatchFilter is now instantiating a core configured at init time; the web.xml must contain one filter declaration and one filter mapping per core you want to expose.  Wherever some admin or servlet or page was referring to the SolrCore singleton or SolrConfig, they now check for the request attribute &apos;org.apache.solr.SolrCore&apos; first; the filters set this attribute before forwarding to the other parts.&lt;/p&gt;

&lt;p&gt;Admin/servlet:&lt;br/&gt;
Has been modified to use the core exposed through the request attribute &apos;org.apache.solr.SolrCore&apos;.&lt;/p&gt;

&lt;p&gt;REPLICATION:&lt;br/&gt;
The feature has not been implemented yet; the starting point is that instead of having just one index directory &apos;index/&apos;, the naming scheme for the index data directories is &apos;index*/&apos;. Have to investigate. &lt;/p&gt;

&lt;p&gt;FUTURE:&lt;br/&gt;
Uploading new schema/conf would be nice, allowing Solr to create cores dynamically; the upload mechanism itself is easy, the servlet dispatch filter needs to be modified.&lt;br/&gt;
Having replication embedded in the Solr application itself using an http based version of the rsync algorithm; some of the core code of jarsync might be handy.&lt;/p&gt;

&lt;p&gt;MISC:&lt;br/&gt;
The patch production process (not as easy as I thought it was with a Windows/Netbeans/cygwin/TortoiseSVN).&lt;br/&gt;
0/ Initial point is to have the modified code running in a local patch branch, all tests ok.&lt;br/&gt;
1/ Have one &apos;clean version&apos; of the trunk aside the local patch branch; you&apos;ll need to verify that your patch can be applied to the last clean trunk version and that various tests still work from there. Creating the patch is key.&lt;br/&gt;
2/ If you used some IDE and forgot to set the auto-indentation corrrectly, you most likely need working around the space/indentation patch clutter that results. I could not find a way to get TortoiseSVN create a patch with the proper options (ignore spaces &amp;amp; al) and could not find a way to get NetbeansSVN generate one either. Thus I create the patch from the local trunk root through cygwin (with svn+patchutils); svn diff --diff-cmd /usr/bin/diff -x &quot;-w -B -b -E -d -N -u&quot; &amp;gt; ~/solr-215.patch.&lt;br/&gt;
Before generating the patch, it is important to issue an &apos;svn add ...&apos; for each file you might have added; a quick &quot;svn status | grep &apos;?&apos;&quot; allows to verify nothing will be missing. Not elegant, but you can even follow with: svn status | grep &apos;?&apos; | awk &apos;&lt;/p&gt;
{print $2}
&lt;p&gt;&apos; | xargs svn add&lt;br/&gt;
3/ Apply the patch to the &apos;clean trunk&apos;.&lt;br/&gt;
TortoiseSVN &apos;apply patch&apos; command only understands &apos;unified diff&apos; thus the &apos;-u&apos; option.&lt;br/&gt;
Alternatively, you can apply the patch through cygwin: patch -p0 -u &amp;lt; solr-215.patch.&lt;/p&gt;

&lt;p&gt;I&apos;ve updated the &apos;dev&apos; environment to an x86 Solaris 10 box which now generates the zipped patch( solr-215.patch.zip , same patch production method).&lt;br/&gt;
For Solaris 10 users, patch must be &quot;gnu&quot; patch: /usr/local/bin/patch is its usual location (not to be confused with /bin/patch...)&lt;br/&gt;
For x86, you can find it at &lt;a href=&quot;ftp://ftp.sunfreeware.com/pub/freeware/intel/10/patch-2.5.4-sol10-x86-local.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ftp://ftp.sunfreeware.com/pub/freeware/intel/10/patch-2.5.4-sol10-x86-local.gz&lt;/a&gt; ; I don&apos;t know about diff but I&apos;m using the version located at &lt;a href=&quot;ftp://ftp.sunfreeware.com/pub/freeware/intel/10/diffutils-2.8.1-sol10-intel-local.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ftp://ftp.sunfreeware.com/pub/freeware/intel/10/diffutils-2.8.1-sol10-intel-local.gz&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12368128">SOLR-215</key>
            <summary>Multiple Solr Cores - remove static singleton</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryantxu">Ryan McKinley</assignee>
                                    <reporter username="henrib">Henri Biestro</reporter>
                        <labels>
                    </labels>
                <created>Thu, 26 Apr 2007 15:18:16 +0100</created>
                <updated>Fri, 10 May 2013 11:40:33 +0100</updated>
                            <resolved>Tue, 16 Oct 2007 02:05:48 +0100</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>7</votes>
                                    <watches>6</watches>
                                                                                                            <comments>
                            <comment id="12492025" author="henrib" created="Thu, 26 Apr 2007 15:20:46 +0100"  >&lt;p&gt;The patch that allows multiple cores/indexes&lt;/p&gt;</comment>
                            <comment id="12492691" author="henrib" created="Mon, 30 Apr 2007 16:43:16 +0100"  >&lt;p&gt;The patch as it stands still requires some refactoring &apos;above&apos; the Java core.&lt;br/&gt;
Although the &apos;single core&apos; feature has been retained (aka the static SolrCore.getCore), the SolrConfig.config could not; the admin servlet has been modified accordingly.&lt;/p&gt;

&lt;p&gt;Updated patch based on latest trunk.&lt;/p&gt;</comment>
                            <comment id="12492709" author="henrib" created="Mon, 30 Apr 2007 17:30:35 +0100"  >&lt;p&gt;junits &amp;amp; admin servlet (single core) test ok&lt;/p&gt;</comment>
                            <comment id="12492743" author="hossman" created="Mon, 30 Apr 2007 19:29:31 +0100"  >&lt;p&gt;I&apos;m confused ... why is this issue Resolved:Fixed ?&lt;/p&gt;</comment>
                            <comment id="12492836" author="otis" created="Tue, 1 May 2007 05:03:44 +0100"  >&lt;p&gt;I think Henri accidentally resolved this. Reopening.&lt;br/&gt;
Btw. I&apos;m &lt;b&gt;very&lt;/b&gt; interested in serving multiple indices under a single Solr instance, possibly even embedded as described on the wiki or in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-212&quot; title=&quot;Embeddable class to call solr directly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-212&quot;&gt;&lt;del&gt;SOLR-212&lt;/del&gt;&lt;/a&gt;. I may not find the time to look at the patch before next week, though.&lt;/p&gt;</comment>
                            <comment id="12495899" author="henrib" created="Tue, 15 May 2007 09:50:53 +0100"  >&lt;p&gt;Updated for revision 538091&lt;/p&gt;</comment>
                            <comment id="12499919" author="otis" created="Tue, 29 May 2007 21:51:49 +0100"  >&lt;p&gt;Henri - I&apos;m starting to ook at this.  I see a lot of space changes in the patch.  Could you please generate a patch that doesn&apos;t have all those space changes?&lt;br/&gt;
When you generate a diff file for the patch, these may be handy parameters to use (I&apos;m assuming you&apos;re going work under some kind of UNIX)&lt;/p&gt;

&lt;p&gt;       -E  --ignore-tab-expansion&lt;br/&gt;
              Ignore changes due to tab expansion.&lt;/p&gt;

&lt;p&gt;       -b  --ignore-space-change&lt;br/&gt;
              Ignore changes in the amount of white space.&lt;/p&gt;

&lt;p&gt;       -w  --ignore-all-space&lt;br/&gt;
              Ignore all white space.&lt;/p&gt;

&lt;p&gt;       -B  --ignore-blank-lines&lt;br/&gt;
              Ignore changes whose lines are all blank.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
I just skimmed the patch and didn&apos;t see where the name of the index/core gets passed in the request.  Can you please point me to the right place to look?&lt;/p&gt;</comment>
                            <comment id="12500181" author="henrib" created="Wed, 30 May 2007 17:19:07 +0100"  >&lt;p&gt;A revised version of the patch based on revision 542847.&lt;/p&gt;

&lt;p&gt;The patch was produced with the following command run from trunk directory:&lt;br/&gt;
svn diff --diff-cmd /usr/bin/diff -x &quot;-w -B -b -E -d -N&quot; &amp;gt; solr-trunk-542847.patch&lt;br/&gt;
This should take care of the white spaces as well as inclusion of new files.&lt;br/&gt;
All unit tests behave as in the single core version; 133 tests, 5 failures, 0 errors&lt;/p&gt;

&lt;p&gt;The content of the patch also includes modifications to the admin, servlet &amp;amp; filters to accomodate the declaration &amp;amp; handling of multiple cores. The example conf &amp;amp; web.xml have been modified to declare 2 other cores (besides the default) named &apos;core0&apos; and &apos;core1&apos;.&lt;br/&gt;
The filter itself forwards to the proper servlet if no specific handler exists in the core configuration.&lt;br/&gt;
Example:&lt;br/&gt;
Step0&lt;br/&gt;
java -Durl=&apos;http://localhost:8983/solr/core0/update&apos; -jar post.jar solr.xml monitor.ml&lt;br/&gt;
Will index the 2 documents in solr.xml &amp;amp; monitor.xml&lt;br/&gt;
Step1:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/core0/admin/stats.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/core0/admin/stats.jsp&lt;/a&gt;&lt;br/&gt;
Will produce the statistics page from the admin servlet on core0 index; 2 documents&lt;br/&gt;
Step2:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/core1/admin/stats.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/core1/admin/stats.jsp&lt;/a&gt;&lt;br/&gt;
Will produce the statistics page from the admin servlet on core1 index; no documents&lt;br/&gt;
Step3:&lt;br/&gt;
java -Durl=&apos;http://localhost:8983/solr/core0/update&apos; -jar post.jar ipod*.xml&lt;br/&gt;
java -Durl=&apos;http://localhost:8983/solr/core1/update&apos; -jar post.jar mon*.xml&lt;br/&gt;
Adds the ipod*.xml to index of core0 and the mon*.xml to the index of core1;&lt;br/&gt;
running queries from the admin interface, you can verify indexes have different content.&lt;/p&gt;

&lt;p&gt;Comments &amp;amp; advice welcome.&lt;/p&gt;
</comment>
                            <comment id="12500194" author="henrib" created="Wed, 30 May 2007 17:58:16 +0100"  >&lt;p&gt;Supersedes previous patches (including solr-trunk-542847.patch); all other attached patches should be ignored (&amp;amp; removed by anyone with proper permissions?).&lt;/p&gt;

&lt;p&gt;Forgot to svn add some new files before creating the patch;&lt;br/&gt;
fixed a stupid logic error in SolrInit when parameters were missing;&lt;br/&gt;
added a way to get to the config &amp;amp; schema file names from a configured core.&lt;/p&gt;</comment>
                            <comment id="12500216" author="klaasm" created="Wed, 30 May 2007 19:55:29 +0100"  >&lt;p&gt;I haven&apos;t looked at the patch, but:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;there are no current failures on trunk, save from a sporatic AutoCommitTest failure if the machine is heavily-loaded.  Are you testing this patch in the context of other local changes?&lt;/li&gt;
	&lt;li&gt;if you maintain the same name for subsequent versions of the patch, JIRA automatically keeps track of the most recent for you&lt;/li&gt;
	&lt;li&gt;personally, I find it helpful to check out a fresh copy of trunk and apply my patch and run the tests there.  It helps ferret out the problematic issues and oversights.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;cheers&lt;/p&gt;</comment>
                            <comment id="12500384" author="henrib" created="Thu, 31 May 2007 15:48:42 +0100"  >&lt;p&gt;Thanks Mike for your usefull advice; &lt;br/&gt;
I&apos;ve corrected the (modified) tests so they are now behaving as the non-patched version do (aka no error nor failure, 133 tests); there were still some of them using the &apos;unnamed/null&apos; core. My bad, thanks again for pointing it out.&lt;br/&gt;
The &apos;superseding&apos; patch is now called solr-215.patch so JIRA should take care of keeping only the last version. (all others can be ignored &amp;amp; deleted).&lt;br/&gt;
This drop is based on svn revision 543145.&lt;/p&gt;</comment>
                            <comment id="12502774" author="henrib" created="Fri, 8 Jun 2007 13:55:10 +0100"  >&lt;p&gt;New version of the patch that should be easier to verify.&lt;br/&gt;
Created with: svn diff  --diff-cmd /usr/bin/diff -x &quot;-w -B -b -E -N -u&quot; &amp;gt; ~/solr-215.patch&lt;br/&gt;
Verified it can be applied on clean trunk through: patch -u -p0 &amp;lt; ~/solr-215.patch&lt;/p&gt;</comment>
                            <comment id="12502781" author="henrib" created="Fri, 8 Jun 2007 14:06:42 +0100"  >&lt;p&gt;Patch can now be installed on a clean trunk.&lt;/p&gt;</comment>
                            <comment id="12502783" author="henrib" created="Fri, 8 Jun 2007 14:13:39 +0100"  >&lt;p&gt;Forgot usage example in description&lt;/p&gt;</comment>
                            <comment id="12505854" author="henrib" created="Mon, 18 Jun 2007 16:52:30 +0100"  >&lt;p&gt;update to current trunk; patch generated from a Solaris Express 10 box.&lt;/p&gt;</comment>
                            <comment id="12506717" author="otis" created="Thu, 21 Jun 2007 00:16:17 +0100"  >&lt;p&gt;Henri, I think Toru is doing something useful in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-255&quot; title=&quot;RemoteSearchable for Solr(use RMI)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-255&quot;&gt;&lt;del&gt;SOLR-255&lt;/del&gt;&lt;/a&gt; - FederatedSearch over RMI + support for multiple local indices.  I think your work is overlapping a lot and you two need to sync, either working on a single patch or on multiple smaller patches with serial dependency.&lt;/p&gt;</comment>
                            <comment id="12506920" author="otis" created="Thu, 21 Jun 2007 15:39:57 +0100"  >&lt;p&gt;Henri, question about this:&lt;/p&gt;

&lt;p&gt;FUTURE:&lt;br/&gt;
Uploading new schema/conf would be nice, allowing Solr to create cores dynamically; the upload mechanism itself is easy, the servlet dispatch filter needs to be modified.&lt;/p&gt;

&lt;p&gt;Wouldn&apos;t one simply way to get dynamic SolrCore creation be via custom/specific admin request handlers that create a core with the given name by adding it to that static map of cores that you&apos;ve created?&lt;/p&gt;

&lt;p&gt;e.g.&lt;br/&gt;
/admin/coremanager?cmd=add&amp;amp;name=foo&lt;br/&gt;
/admin/coremanager?cmd=del&amp;amp;name=foo&lt;/p&gt;

&lt;p&gt;Maybe a naming convention could be used to figure out which schema.xml + solrconfig.xml to use for the newly added core.  e.g. foo-schema.xml and foo-solrconfig.xml.  The assumption would be that when the new core is added, the needed config files are already in place and ready to be loaded.&lt;/p&gt;

&lt;p&gt;Thoughts anyone?&lt;/p&gt;</comment>
                            <comment id="12507189" author="henrib" created="Fri, 22 Jun 2007 11:21:28 +0100"  >&lt;p&gt;I like the suggestion. Thanks Otis.&lt;br/&gt;
The specific admin handler is definitely a good idea to handle cores (no need to modify the servlet dispatch filter).&lt;/p&gt;

&lt;p&gt;Could definitely use a naming convention and/or specify schema &amp;amp; config as parameters as in:&lt;br/&gt;
/admin/coremanager?cmd=add&amp;amp;name=foo&amp;amp;schema=foo-schema.xml&amp;amp;config=foo-config.xml&lt;/p&gt;

&lt;p&gt;It does not preclude being able to upload the schema &amp;amp; config files (so the files dont have to be there before).&lt;/p&gt;</comment>
                            <comment id="12507207" author="otis" created="Fri, 22 Jun 2007 12:17:39 +0100"  >&lt;p&gt;Excellent.  I&apos;ll assume you&apos;ll add something like this to your patch, then.&lt;br/&gt;
Any thoughs on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-255&quot; title=&quot;RemoteSearchable for Solr(use RMI)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-255&quot;&gt;&lt;del&gt;SOLR-255&lt;/del&gt;&lt;/a&gt; and ensuring you and Toru don&apos;t step on each other&apos;s toes?&lt;/p&gt;</comment>
                            <comment id="12507344" author="henrib" created="Fri, 22 Jun 2007 15:19:32 +0100"  >&lt;p&gt;About solr-255, I&apos;ve posted a small comment to Toru.&lt;br/&gt;
Seems to me that solr-255/solr-215 features are mostly orthogonal; solr-255 allows one core to use multiple indexes, solr-215 allows multiple cores in one instance.&lt;br/&gt;
But I like the idea of federated search (and federated indexing!).&lt;br/&gt;
I&apos;m a bit worried though that adding a Lucene patch dependency &amp;amp; merging solr-215/solr-255 will make the commit occur even later... And I&apos;m getting confused; how could this fusion help reduce the amount of effort to review the patch?&lt;br/&gt;
But I&apos;ll follow your lead; I&apos;ll try &amp;amp; see if I can merge.&lt;/p&gt;</comment>
                            <comment id="12507591" author="henrib" created="Sat, 23 Jun 2007 11:49:59 +0100"  >&lt;p&gt;updated for trunk 550264&lt;br/&gt;
patch is zipped; solr-215.patch.zip&lt;/p&gt;</comment>
                            <comment id="12509941" author="henrib" created="Tue, 3 Jul 2007 18:01:31 +0100"  >&lt;p&gt;updated for trunk revision 55291&lt;/p&gt;</comment>
                            <comment id="12510723" author="waltersbox" created="Fri, 6 Jul 2007 17:15:25 +0100"  >&lt;p&gt;By using the patch, (assuming I&apos;m using it correctly), it seems that Solr is not able anymore to load my handlers, which resides in a jar under solr/lib dir. The exception I&apos;ve got is (handler class name censored):&lt;/p&gt;

&lt;p&gt;GRAVE: org.apache.solr.common.SolrException: Error loading class &apos;com.*****&lt;b&gt;.&lt;/b&gt;*****&apos;&lt;br/&gt;
        at org.apache.solr.core.Config.findClass(Config.java:295)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;..&amp;#93;&lt;/span&gt;&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: com.*****&lt;b&gt;.&lt;/b&gt;*****&lt;br/&gt;
        at java.net.URLClassLoader$1.run(Unknown Source)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;..&amp;#93;&lt;/span&gt;&lt;br/&gt;
(full stack trace available if needed)&lt;/p&gt;

&lt;p&gt;The problem arise in both patched trunk I&apos;ve tested (550264 with previous patch, and 552910 with latest patch), I&apos;ve been compiling it using Netbeans 5.5 and java1.6 on windows.&lt;br/&gt;
To resolve the issue, I modified a bit the Config.java. Now it works fine, it loads all the jars, but full implication of the change I made have to be determined.&lt;/p&gt;

&lt;p&gt;Here the modification I made on patched (org.apache.solr.core) Config.java (working Config.java versus original solr-215  &quot;Config_solr215.java&quot;)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Config.java&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;Config_origSolr215.java&lt;br/&gt;
***************&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul&gt;
			&lt;li&gt;393,399 ****&lt;br/&gt;
            SolrException.log(log,&quot;Can&apos;t construct solr lib class loader&quot;, e);&lt;br/&gt;
          }&lt;br/&gt;
        }&lt;br/&gt;
!       if (null == classLoader) classLoader = loader;&lt;br/&gt;
      }&lt;br/&gt;
      return classLoader;&lt;br/&gt;
    }&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;393,399 ----&lt;br/&gt;
            SolrException.log(log,&quot;Can&apos;t construct solr lib class loader&quot;, e);&lt;br/&gt;
          }&lt;br/&gt;
        }&lt;br/&gt;
!       classLoader = loader;&lt;br/&gt;
      }&lt;br/&gt;
      return classLoader;&lt;br/&gt;
    }&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12510853" author="henrib" created="Sat, 7 Jul 2007 06:32:21 +0100"  >&lt;p&gt;Thanks Walter.&lt;/p&gt;

&lt;p&gt;I&apos;ve been &quot;fighting&quot; a bit with this code in the same kind of environment (NB5.5 / JVM 1.5).&lt;br/&gt;
The static classLoader was not assigned correctly and I already had to modify the original code to workaround it.&lt;br/&gt;
Looks like the JVM 1.6 reintroduces the issue. I don&apos;t understand why this happens - may be class loading through NB...&lt;br/&gt;
The fix you propose seems totally harmless; I&apos;ll check against a 1.5 JVM &amp;amp; introduce it in the next upload.&lt;/p&gt;

&lt;p&gt;Using the patch should be straightforward besides handler classes needing a constructor with a SolrCore.&lt;br/&gt;
Let me know how it goes.&lt;/p&gt;</comment>
                            <comment id="12511454" author="otis" created="Tue, 10 Jul 2007 15:13:04 +0100"  >&lt;p&gt;Henri:&lt;br/&gt;
I&apos;ve finally started looking at this.  The latest version of the patch doesn&apos;t apply 100% cleanly (e.g. src/java/org/apache/solr/handler/StaxUpdateRequestHandler.java has been replaced by src/java/org/apache/solr/handler/XppUpdateRequestHandler.java) and thus &apos;ant compile&apos; results in several compilation errors.  You can probably see the same locally, but just in case it make it easier for you, here is how patching looks for me:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;otis@localhost trunk&amp;#93;&lt;/span&gt;$ patch -p0 &amp;lt; solr-215.patch&lt;br/&gt;
patching file src/test/org/apache/solr/update/AutoCommitTest.java&lt;br/&gt;
Hunk #1 FAILED at 55.&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/test/org/apache/solr/update/AutoCommitTest.java.rej&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/TestBufferedTokenStream.java&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/TestPatternReplaceFilter.java&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/TestPhoneticFilter.java&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/AnalysisTestCase.java&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/TestPatternTokenizerFactory.java&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/TestRemoveDuplicatesTokenFilter.java&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/TestKeepWordFilter.java&lt;br/&gt;
Hunk #1 FAILED at 27.&lt;br/&gt;
1 out of 3 hunks FAILED &amp;#8211; saving rejects to file src/test/org/apache/solr/analysis/TestKeepWordFilter.java.rej&lt;br/&gt;
patching file src/test/org/apache/solr/analysis/BaseTokenTestCase.java&lt;br/&gt;
patching file src/test/org/apache/solr/servlet/SolrRequestParserTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/servlet/DirectSolrConnectionTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/core/TestConfig.java&lt;br/&gt;
patching file src/test/org/apache/solr/core/SolrCoreTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/core/RequestHandlersTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/core/TestBadConfig.java&lt;br/&gt;
patching file src/test/org/apache/solr/schema/BadIndexSchemaTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/schema/NotRequiredUniqueKeyTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/schema/RequiredFieldsTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/schema/IndexSchemaTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/BasicFunctionalityTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/handler/StandardRequestHandlerTest.java&lt;br/&gt;
patching file src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java&lt;br/&gt;
Hunk #2 FAILED at 13.&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java.rej&lt;br/&gt;
patching file src/test/org/apache/solr/handler/MoreLikeThisHandlerTest.java&lt;br/&gt;
patching file src/java/org/apache/solr/schema/IndexSchema.java&lt;br/&gt;
Hunk #2 succeeded at 57 (offset 1 line).&lt;br/&gt;
Hunk #4 succeeded at 294 (offset 1 line).&lt;br/&gt;
Hunk #5 FAILED at 303.&lt;br/&gt;
Hunk #6 succeeded at 314 with fuzz 2.&lt;br/&gt;
Hunk #7 FAILED at 327.&lt;br/&gt;
Hunk #8 succeeded at 458 (offset 3 lines).&lt;br/&gt;
Hunk #10 succeeded at 593 (offset 3 lines).&lt;br/&gt;
Hunk #12 succeeded at 617 (offset 3 lines).&lt;br/&gt;
2 out of 13 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/schema/IndexSchema.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/update/UpdateHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/update/DirectUpdateHandler2.java&lt;br/&gt;
Hunk #1 succeeded at 607 (offset 11 lines).&lt;br/&gt;
patching file src/java/org/apache/solr/update/SolrIndexConfig.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/PatternTokenizerFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/TokenizerFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/TrimFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/KeepWordFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/TokenFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/EnglishPorterFilterFactory.java&lt;br/&gt;
Hunk #2 succeeded at 33 with fuzz 1.&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/PhoneticFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/SynonymFilterFactory.java&lt;br/&gt;
Hunk #2 succeeded at 31 with fuzz 1.&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/PhoneticFilter.java&lt;br/&gt;
Hunk #1 FAILED at 28.&lt;br/&gt;
1 out of 1 hunk FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/analysis/PhoneticFilter.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/LengthFilterFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/StopFilterFactory.java&lt;br/&gt;
Hunk #2 succeeded at 32 with fuzz 1.&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/NGramTokenizerFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/analysis/BaseTokenizerFactory.java&lt;br/&gt;
patching file src/java/org/apache/solr/search/SolrIndexSearcher.java&lt;br/&gt;
Hunk #10 FAILED at 261.&lt;br/&gt;
Hunk #11 succeeded at 329 (offset 1 line).&lt;br/&gt;
Hunk #13 succeeded at 589 (offset 1 line).&lt;br/&gt;
Hunk #14 succeeded at 979 (offset 1 line).&lt;br/&gt;
1 out of 14 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/search/SolrIndexSearcher.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/search/CacheConfig.java&lt;br/&gt;
Hunk #1 succeeded at 37 with fuzz 2.&lt;br/&gt;
patching file src/java/org/apache/solr/search/DocSetHitCollector.java&lt;br/&gt;
patching file src/java/org/apache/solr/core/SolrInfoRegistry.java&lt;br/&gt;
patching file src/java/org/apache/solr/core/Config.java&lt;br/&gt;
Hunk #1 succeeded at 44 with fuzz 2.&lt;br/&gt;
patching file src/java/org/apache/solr/core/SolrConfig.java&lt;br/&gt;
Hunk #2 succeeded at 44 with fuzz 2.&lt;br/&gt;
patching file src/java/org/apache/solr/core/SolrCore.java&lt;br/&gt;
Hunk #2 FAILED at 75.&lt;br/&gt;
Hunk #3 succeeded at 144 (offset 2 lines).&lt;br/&gt;
Hunk #5 succeeded at 177 (offset 2 lines).&lt;br/&gt;
Hunk #6 succeeded at 185 with fuzz 2.&lt;br/&gt;
Hunk #7 succeeded at 349 (offset 6 lines).&lt;br/&gt;
Hunk #9 succeeded at 479 (offset 13 lines).&lt;br/&gt;
Hunk #11 succeeded at 629 (offset 13 lines).&lt;br/&gt;
Hunk #13 succeeded at 768 (offset 13 lines).&lt;br/&gt;
Hunk #15 succeeded at 876 (offset 13 lines).&lt;br/&gt;
Hunk #16 FAILED at 896.&lt;br/&gt;
Hunk #17 FAILED at 906.&lt;br/&gt;
3 out of 17 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/core/SolrCore.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/core/RequestHandlers.java&lt;br/&gt;
Hunk #1 FAILED at 45.&lt;br/&gt;
Hunk #3 FAILED at 128.&lt;br/&gt;
Hunk #4 FAILED at 153.&lt;br/&gt;
Hunk #5 FAILED at 193.&lt;br/&gt;
Hunk #6 succeeded at 201 with fuzz 1 (offset -23 lines).&lt;br/&gt;
4 out of 7 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/core/RequestHandlers.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/core/AbstractSolrEventListener.java&lt;br/&gt;
patching file src/java/org/apache/solr/core/QuerySenderListener.java&lt;br/&gt;
Hunk #1 succeeded at 31 with fuzz 1.&lt;br/&gt;
patching file src/java/org/apache/solr/core/RunExecutableListener.java&lt;br/&gt;
patching file src/java/org/apache/solr/request/XSLTResponseWriter.java&lt;br/&gt;
patching file src/java/org/apache/solr/request/StandardRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/request/DisMaxRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/tst/OldRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/tst/TestRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/RequestHandlerBase.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/CSVRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/StandardRequestHandler.java&lt;br/&gt;
Hunk #1 succeeded at 61 (offset 1 line).&lt;br/&gt;
patching file src/java/org/apache/solr/handler/admin/PropertiesRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/admin/LukeRequestHandler.java&lt;br/&gt;
Hunk #1 succeeded at 43 (offset 1 line).&lt;br/&gt;
Hunk #2 succeeded at 85 (offset -1 lines).&lt;br/&gt;
patching file src/java/org/apache/solr/handler/admin/PluginInfoHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/admin/ThreadDumpHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/admin/SystemInfoHandler.java&lt;br/&gt;
can&apos;t find file to patch at input line 2931&lt;br/&gt;
Perhaps you used the wrong -p or --strip option?&lt;br/&gt;
The text leading up to this was:&lt;br/&gt;
--------------------------&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Index: src/java/org/apache/solr/handler/StaxUpdateRequestHandler.java&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;===================================================================&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;#8212; src/java/org/apache/solr/handler/StaxUpdateRequestHandler.java     (revision 548274)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;+++ src/java/org/apache/solr/handler/StaxUpdateRequestHandler.java     (working copy)&lt;br/&gt;
--------------------------&lt;br/&gt;
File to patch: src/java/org/apache/solr/handler/StaxUpdateRequestHandler.java&lt;br/&gt;
src/java/org/apache/solr/handler/StaxUpdateRequestHandler.java: No such file or directory&lt;br/&gt;
Skip this patch? &lt;span class=&quot;error&quot;&gt;&amp;#91;y&amp;#93;&lt;/span&gt;&lt;br/&gt;
Skipping patch.&lt;br/&gt;
1 out of 1 hunk ignored&lt;br/&gt;
patching file src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java&lt;br/&gt;
Hunk #1 FAILED at 51.&lt;br/&gt;
Hunk #2 FAILED at 102.&lt;br/&gt;
2 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/handler/SpellCheckerRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/DisMaxRequestHandler.java&lt;br/&gt;
Hunk #1 succeeded at 158 (offset 1 line).&lt;br/&gt;
patching file src/java/org/apache/solr/handler/DumpRequestHandler.java&lt;br/&gt;
patching file src/java/org/apache/solr/handler/MoreLikeThisHandler.java&lt;br/&gt;
Hunk #1 succeeded at 71 (offset 1 line).&lt;br/&gt;
patching file src/java/org/apache/solr/util/AbstractSolrTestCase.java&lt;br/&gt;
patching file src/java/org/apache/solr/util/TestHarness.java&lt;br/&gt;
Hunk #1 FAILED at 74.&lt;br/&gt;
1 out of 1 hunk FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/util/TestHarness.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/util/xslt/TransformerProvider.java&lt;br/&gt;
patching file src/webapp/WEB-INF/web.xml&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/SolrInit.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/SolrServlet.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/SolrRequestParsers.java&lt;br/&gt;
patching file src/webapp/src/org/apache/solr/servlet/DirectSolrConnection.java&lt;br/&gt;
patching file src/webapp/resources/admin/raw-schema.jsp&lt;br/&gt;
patching file src/webapp/resources/admin/_info.jsp&lt;br/&gt;
patching file src/webapp/resources/admin/get-file.jsp&lt;br/&gt;
patching file src/webapp/resources/admin/ping.jsp&lt;br/&gt;
patching file src/webapp/resources/admin/stats.jsp&lt;br/&gt;
patching file src/webapp/resources/admin/index.jsp&lt;br/&gt;
patching file example/solr/conf/core0.schema.xml&lt;br/&gt;
patching file example/solr/conf/core1.schema.xml&lt;br/&gt;
patching file example/solr/conf/core0.config.xml&lt;br/&gt;
patching file example/solr/conf/core1.config.xml&lt;br/&gt;
patching file client/java/solrj/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServer.java&lt;br/&gt;
patching file client/java/solrj/test/org/apache/solr/client/solrj/embedded/TestJettySolrRunner.java&lt;br/&gt;
patching file client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

</comment>
                            <comment id="12511551" author="yseeley@gmail.com" created="Tue, 10 Jul 2007 20:43:28 +0100"  >&lt;p&gt;I don&apos;t know if we should make Henri keep his patch up to date with the trunk (since it&apos;s likely to continue evolving right now) until he&apos;s received more feedback about the approach and we are ready to commit it.&lt;/p&gt;

&lt;p&gt;One question I had was about backward compatibility... is there a way to register a null or default core that reverts to the original paths?  Are there any other backward compatible gotchas (not related to custom java code)?&lt;/p&gt;</comment>
                            <comment id="12511740" author="henrib" created="Wed, 11 Jul 2007 13:32:47 +0100"  >&lt;p&gt;updated for trunk 555252; should apply cleanly now (a few fuzzies but no rejects).&lt;/p&gt;

&lt;p&gt;Yonik,&lt;br/&gt;
About backwards compatibility &amp;amp; named cores, the &apos;null&apos; core (ie the core named &apos;null&apos;) is equivalent to the (non-solr215-patched) original version; SolrCore.getSolrCore() returns that core.&lt;br/&gt;
Besides the obvious SolrConfig.config that has been removed, I dont (fore)see any other non-compatible behaviors.&lt;br/&gt;
Henri&lt;/p&gt;</comment>
                            <comment id="12511783" author="otis" created="Wed, 11 Jul 2007 16:56:35 +0100"  >&lt;p&gt;Henri, I&apos;m starting to suspect I&apos;m doing something wrong here:&lt;/p&gt;

&lt;p&gt;svn co -r 555252 &lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/solr/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/lucene/solr/trunk&lt;/a&gt;&lt;br/&gt;
cd trunk&lt;br/&gt;
svn info&lt;br/&gt;
  Path: .&lt;br/&gt;
  URL: &lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/solr/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/lucene/solr/trunk&lt;/a&gt;&lt;br/&gt;
  Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68&lt;br/&gt;
  Revision: 555252&lt;br/&gt;
  Node Kind: directory&lt;br/&gt;
  Schedule: normal&lt;br/&gt;
  Last Changed Author: ryan&lt;br/&gt;
  Last Changed Rev: 554915&lt;br/&gt;
  Last Changed Date: 2007-07-10 13:57:36 +0200 (Tue, 10 Jul 2007)&lt;br/&gt;
  Properties Last Updated: 2007-07-11 17:48:55 +0200 (Wed, 11 Jul 2007)&lt;/p&gt;

&lt;p&gt;wget &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12360039/solr-215.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12360039/solr-215.patch&lt;/a&gt;&lt;br/&gt;
patch -p0 &amp;lt; solr-215 &amp;amp;&amp;gt; patch.out&lt;/p&gt;

&lt;p&gt;$ grep .rej$ patch.out&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/test/org/apache/solr/update/AutoCommitTest.java.rej&lt;br/&gt;
1 out of 3 hunks FAILED &amp;#8211; saving rejects to file src/test/org/apache/solr/analysis/TestKeepWordFilter.java.rej&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.java.rej&lt;br/&gt;
2 out of 13 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/schema/IndexSchema.java.rej&lt;br/&gt;
1 out of 1 hunk FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/analysis/PhoneticFilter.java.rej&lt;br/&gt;
1 out of 14 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/search/SolrIndexSearcher.java.rej&lt;br/&gt;
3 out of 17 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/core/SolrCore.java.rej&lt;br/&gt;
4 out of 7 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/core/RequestHandlers.java.rej&lt;br/&gt;
2 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java.rej&lt;br/&gt;
1 out of 1 hunk FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/util/TestHarness.java.rej&lt;/p&gt;


&lt;p&gt;Am I doing something wrong?&lt;/p&gt;</comment>
                            <comment id="12511796" author="henrib" created="Wed, 11 Jul 2007 18:00:21 +0100"  >&lt;p&gt;Otis,&lt;br/&gt;
You need to grab the &apos;zipped&apos; version aka solr-215.patch.zip (since June 23).&lt;br/&gt;
I was trying to be space &amp;amp; bandwidth friendly...&lt;br/&gt;
Sorry I did not make it more obvious in some previous comments.&lt;br/&gt;
Henri&lt;/p&gt;</comment>
                            <comment id="12512038" author="otis" created="Thu, 12 Jul 2007 12:12:07 +0100"  >&lt;p&gt;Just a quick comment - the .zip version of the patch is really a gzipped file:&lt;/p&gt;

&lt;p&gt;$ wget --quiet &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12361583/solr-215.patch.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12361583/solr-215.patch.zip&lt;/a&gt;&lt;br/&gt;
$ file solr-215.patch.zip&lt;br/&gt;
solr-215.patch.zip: gzip compressed data, was &quot;solr-215.patch&quot;, from Unix&lt;/p&gt;</comment>
                            <comment id="12513595" author="otis" created="Wed, 18 Jul 2007 15:51:15 +0100"  >&lt;p&gt;Henri - is SolrInit something that you added in this patch or something that Solr once had?  I don&apos;t recall seeing SolrInit.java before, so I&apos;m guessing you added SolrInit.java in your patch.  However, your patch does not contain SolrInit.java (forgot to svn add it?), so things don&apos;t compile even when using the latest .zip (.gz really) and the correct Solr revision:&lt;/p&gt;

&lt;p&gt;compile:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 5 source files to /home/otis/dev/repos/lucene/solr/foo/trunk/build/core&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java:69: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrInit&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.solr.servlet.SolrDispatchFilter&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       SolrInit solrInit = new SolrInit(log) {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java:69: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrInit&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.solr.servlet.SolrDispatchFilter&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       SolrInit solrInit = new SolrInit(log) {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                               ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrServlet.java:49: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrInit&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.solr.servlet.SolrServlet&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       SolrInit solrInit = new SolrInit(log) {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrServlet.java:49: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrInit&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.solr.servlet.SolrServlet&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       SolrInit solrInit = new SolrInit(log) {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                               ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet.java:48: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrInit&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.solr.servlet.SolrUpdateServlet&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       SolrInit solrInit = new SolrInit(log) {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet.java:48: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrInit&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.solr.servlet.SolrUpdateServlet&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       SolrInit solrInit = new SolrInit(log) {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                               ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Note: /home/otis/dev/repos/lucene/solr/foo/trunk/src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet.java uses or overrides a deprecated API.&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Note: Recompile with -Xlint:deprecation for details.&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 6 errors&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;/p&gt;


&lt;p&gt;Could you please add SolrInit.java to the patch?  I&apos;d like to give this a go as soon as possible, actually.&lt;/p&gt;</comment>
                            <comment id="12513641" author="henrib" created="Wed, 18 Jul 2007 17:50:50 +0100"  >&lt;p&gt;previous patch version was missing SolrInit &amp;amp; AnalysisTestCase; sorry Otis&lt;/p&gt;</comment>
                            <comment id="12513656" author="henrib" created="Wed, 18 Jul 2007 18:59:01 +0100"  >&lt;p&gt;updated for trunk 557340&lt;/p&gt;</comment>
                            <comment id="12513660" author="henrib" created="Wed, 18 Jul 2007 19:00:57 +0100"  >&lt;p&gt;updated for trunk 557340 (ASF inclusion...)&lt;/p&gt;</comment>
                            <comment id="12513744" author="otis" created="Wed, 18 Jul 2007 23:35:44 +0100"  >&lt;p&gt;I reviewed about 43% of this looooooooooooooooong patch (up to RequestHandlers.java).  Everything sees pretty clear so far, the changes are limited to SolrCore and SolrConfig changes.  Everything compiles and all test pass - good!&lt;/p&gt;

&lt;p&gt;I will review the rest of the patch tomorrow and if there are no surprises, I hope to commit this tomorrow or Friday.&lt;/p&gt;

&lt;p&gt;NOTE: If anyone does NOT want this committed this week, please shout!&lt;/p&gt;

&lt;p&gt;Here are some comments about the things I saw in the patch so far:&lt;/p&gt;

&lt;p&gt;1. src/java/org/apache/solr/update/SolrIndexConfig.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (writeLockTimeout != -1) IndexWriter.WRITE_LOCK_TIMEOUT=writeLockTimeout;&lt;/li&gt;
	&lt;li&gt;if (commitLockTimeout != -1) IndexWriter.COMMIT_LOCK_TIMEOUT=commitLockTimeout;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think the above got lost, but maybe I missed where the timeouts are set now.&lt;/p&gt;

&lt;p&gt;2. src/java/org/apache/solr/core/SolrCore.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (mainIndexConfig.writeLockTimeout != -1) IndexWriter.setDefaultWriteLockTimeout(mainIndexConfig.writeLockTimeout);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Same as above - this might have gotten lost.&lt;/p&gt;

&lt;p&gt;3. Why is SolrInfoRegistry deprecated?  Because it is no longer really needed and its functionality is replaced by SolrCore.getSolrCore().getInfoRegistry()?  Just checking.&lt;/p&gt;

&lt;p&gt;4. src/java/org/apache/solr/core/Config.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;classLoader = Thread.currentThread().getContextClassLoader();&lt;br/&gt;
+      // NB5.5/win32/1.5_10: need to go thru local var or classLoader is not set!&lt;br/&gt;
+      ClassLoader loader = Thread.currentThread().getContextClassLoader();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Ah, NetBeans problem that you mentioned earlier.  This is just a local var being set, looks fine to me.&lt;/p&gt;

&lt;p&gt;5. src/java/org/apache/solr/core/SolrCore.java&lt;/p&gt;

&lt;p&gt;private static String checkName(String name) &lt;/p&gt;

&lt;p&gt;Couldn&apos;t the implementation of this checkName(name) method be simpler?  Aren&apos;t there String methods that will let you look for &apos;/&apos; or any other unwanted string/pattern?&lt;br/&gt;
Also, why does this method return a name when it doesn&apos;t modify it?  Wouldn&apos;t void or boolean without the exception be more straight forward?&lt;/p&gt;

&lt;p&gt;   @Override&lt;br/&gt;
   protected void finalize() &lt;/p&gt;
{ close(); }

&lt;p&gt;Shouldn&apos;t this finalize() method call shutdown() in order to close &lt;b&gt;all&lt;/b&gt; cores?&lt;/p&gt;</comment>
                            <comment id="12513789" author="ryantxu" created="Thu, 19 Jul 2007 03:06:10 +0100"  >&lt;p&gt;I just took a quick (well not so quick in applying the patch) look at this.  I have not run it, or tried to use it, just following the changes.&lt;/p&gt;

&lt;p&gt;Here are a couple concerns:&lt;/p&gt;

&lt;p&gt;1. TokenizerFactory breaks API compatibility:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void init(Map&amp;lt;String,String&amp;gt; args);&lt;br/&gt;
+  public void init(SolrConfig solrConfig, Map&amp;lt;String,String&amp;gt; args);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m not sure the best fix and understand Yonik&apos;s aversion to interfaces.&lt;/p&gt;


&lt;p&gt;2.  Why do RequestHandlers all need to know what core they are from?  The core is (and has been) passed along with the request.  It looks like the only place it is used is in @deprecated  SolrUpdateServlet.&lt;/p&gt;

&lt;p&gt;If we only support the multi-core stuff from the dispatch filter, we don&apos;t need to augment every request handler with the core that created it.&lt;/p&gt;

&lt;p&gt;The &apos;SolrInit&apos; stuff that works for filters or servlets is nice, but is more confusing then it needs to be if multi-core support were only avaliable from the filter.&lt;/p&gt;


&lt;p&gt;3.  I&apos;m not sure I like that you have to create a new filter and edit web.xml for each core.  If thats the case, why not run multiple web apps?  Perhaps the RequestDispatcher could accept ?core=name or look for a path that starts with /core:name/ to choose the core.  It would store the &apos;null&apos; core to avoid a map lookup in the default case.&lt;/p&gt;


&lt;p&gt;4. Rather then have each core configured in web.xml, perhaps there should be a core.xml or core.properties file that sits in solr home?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As for committing this soon.  If 1 &amp;amp; 2 are delt with before committing, I&apos;m for it.  It will be easier to push around improvements with smaller manageable patches.  &lt;/p&gt;


</comment>
                            <comment id="12513829" author="henrib" created="Thu, 19 Jul 2007 08:01:20 +0100"  >&lt;p&gt;On Otis&apos;s comments:&lt;br/&gt;
1 &amp;amp; 2- static initializers for lock related value: you are correct, the code has been lost most likely in some merge- my bad.&lt;br/&gt;
3- SolrInfoRegistry  deprecated: you are correct, functionality is replaced by SolrCore.getSolrCore().getInfoRegistry().&lt;br/&gt;
4-classLoader not assigned: not sure why it happens but this fixes it...&lt;br/&gt;
5- checkName is not subtle: I had the idea of &quot;normalizing&quot; the core name (url like normalize for instance) but did not pursue since it might make the replication scripts more complex to modify (aka the normalization code would need to be duplicated in the script). And since the solaris scripts were not completely functional (my dev machine being solaris), I&apos;ve postponed the task... ( I also was &quot;dreaming&quot; about being able to derive from SorlCore to benefit from the static map, implement a naming policy that would encompass the config &amp;amp; schema name generations, etc...). Anyhow, this can indeed be simplified with a regexp match.&lt;br/&gt;
6-finalize(): no, I believe finalizing one core should just ensure that this core is shutdown.This is only for completeness though since I cant see how a core could be gc-ed &amp;amp; finalized before it actually gets shutdown &amp;amp; removed from the map of cores.&lt;/p&gt;

&lt;p&gt;On Ryan&apos;s comments:&lt;br/&gt;
1- factory/init interface compatibility break: I&apos;ll look into other ways since if this is a blocker (ctor, setter or wrap/delegate...). &lt;br/&gt;
2- RequestHandlers know core: SolrUpdateServlet is deprecated but is still there; I was just trying to ensure correct/compatible behavior. I agree SolrInit is more clutter than necessity but can be dropped easily if there is no need to support the SolrUpdateServlet.&lt;br/&gt;
3- I do agree that there must be an easier &amp;amp; more functional way to declare and access a core than the current one. I&apos;ll try the route you describe.&lt;br/&gt;
4- Having core &quot;descriptors&quot; (config/schema) as explicit files in a $solrhome/cores directory; might use some naming convention to derive the core name from them (related to uploading/dynamic creation of cores).&lt;/p&gt;

&lt;p&gt;I&apos;m mostly &quot;off the grid&quot; today but I&apos;ll try my best on Friday.&lt;/p&gt;</comment>
                            <comment id="12513896" author="otis" created="Thu, 19 Jul 2007 14:57:54 +0100"  >&lt;p&gt;I didn&apos;t even realize this patch would still require cores to be declared apriori in static files such as web.xml. &lt;/p&gt;

&lt;p&gt;I think this new multi-core functionality should come with the &quot;core manager&quot; handler, as we said here:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-215#action_12506920&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/SOLR-215#action_12506920&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-215#action_12507189&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/SOLR-215#action_12507189&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, something like:&lt;br/&gt;
/admin/coremanager?cmd=add&amp;amp;name=foo&amp;amp;schema=foo-schema.xml&amp;amp;config=foo-solrconfig.xml&lt;br/&gt;
(this assumes that foo-schema.xml and foo-solrconfig.xml already exist in conf/ dir)&lt;/p&gt;

&lt;p&gt;One could also POST this and &lt;b&gt;include&lt;/b&gt; the &lt;b&gt;content&lt;/b&gt; of the 2 .xml files.  In that case the core manager would be the one writing their content to disk in conf/ dir prior to starting the given core.&lt;/p&gt;

&lt;p&gt;My suggestion is that this be added in phase 2, after Henri&apos;s initial changes are committed.&lt;br/&gt;
Does this sound reasonable?&lt;/p&gt;</comment>
                            <comment id="12513912" author="willjohnson3" created="Thu, 19 Jul 2007 15:51:13 +0100"  >&lt;p&gt;did anything ever get baked into the patch for handling the core name as a cgi param instead of as a url path element?  the email thread we had going didn&apos;t seem to come to any hard conclusions but i&apos;d like to lobby for it as a part of the spec.  i read through the patch but i couldn&apos;t quite follow things enough to tell.&lt;/p&gt;</comment>
                            <comment id="12513946" author="ryantxu" created="Thu, 19 Jul 2007 18:02:55 +0100"  >
&lt;p&gt;&amp;gt; My suggestion is that this be added in phase 2, after Henri&apos;s initial changes are committed.&lt;br/&gt;
&amp;gt; Does this sound reasonable?&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;Yes - perhaps getting this checked in without touching handlers or the web-app side is a good idea.  It is a little weird since the multi-core aspect would only be usable programatically, but that will make it possible to easily bat around a &apos;core manager&apos; and http design.&lt;/p&gt;

&lt;p&gt;The one big question is what to do with the TokenizerFactory API.  &lt;/p&gt;

&lt;p&gt;Yonik, how do you suggest upgrading an interface?  The only clean way I can think is to upgrade the TokenizerFactory interface with a &apos;MulitCoreTokenizerFactory&apos;  adding an additional argument.  I don&apos;t like it, but don&apos;t know the API compatibility rules well enough to know if it is required or is ok to change the API.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Will - as is, this patch does not let you dynamically change the core.  They are statically defined in web.xml.  This will change.&lt;/p&gt;</comment>
                            <comment id="12515888" author="otis" created="Thu, 26 Jul 2007 23:03:22 +0100"  >&lt;p&gt;Ryan e Henri:&lt;/p&gt;

&lt;p&gt;1. Re TokenizerFactory - what will break with this change?  Is the fear that people implemented this interface in their Solr apps and this change will break their implementations, or something else?&lt;/p&gt;

&lt;p&gt;2. So can SolrUpdateServlet  get axed, so SolrInit can be eliminated?&lt;/p&gt;

&lt;p&gt;If we can resolve these two, it sounds like we can commit this patch and then work on the rest.&lt;/p&gt;</comment>
                            <comment id="12515912" author="ryantxu" created="Fri, 27 Jul 2007 00:41:38 +0100"  >
&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; 1. Re TokenizerFactory - what will break with this change?  &lt;/p&gt;

&lt;p&gt;Personally, I don&apos;t have any problem with it.  But is is an API breaking change (a custom 1.2 TokenizerFactory would not work with 1.3).  &lt;/p&gt;

&lt;p&gt;I am fine with noting that in CHANGES.txt, but we should make sure more people are aware of this change.  &lt;/p&gt;


&lt;p&gt;&amp;gt; 2. So can SolrUpdateServlet  get axed, so SolrInit can be eliminated?&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;lets not axe SolrUpdateServlet just yet &amp;#8211; this patch does not need to touch SolrUpdateServlet  and SolrInit can be removed.&lt;/p&gt;


&lt;p&gt;&amp;gt; If we can resolve these two, it sounds like we can commit this patch and then work on the rest.&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;For now, I think we should remove anything in this patch that touches o.a.s.webapp.* and o.a.s.handler.*&lt;/p&gt;

&lt;p&gt;With Multiple Solr Cores working, we can bat around the best interface to accessing/modifying them.&lt;/p&gt;
</comment>
                            <comment id="12516192" author="hossman" created="Sun, 29 Jul 2007 01:04:55 +0100"  >&lt;p&gt;For the record, I have not looked at the most recent version of the patch &amp;#8211; don&apos;t think i&apos;ve ever had a chance to look at any version of this patch actually, but I since my fiance is currently reading harry potter, i figured this was a good day to at least try and catch up on all the issue comments.&lt;/p&gt;

&lt;p&gt;so far, i like what i&apos;m reading &amp;#8211; i think the plan to first commit the &quot;framework&quot; code so that multiple cores can be programmatic created, then tackle the syntax for defining/creating/querying multiple cores via config files and/or http params makes sense.&lt;/p&gt;

&lt;p&gt;As far as the backwards compatibility issues go with things like the Token(izer|Filter)Factory APIs, I think it&apos;s safe to say that people who want to use multiple cores can be required to make minor modifications to custom plugins they may have written in order to get them to work correctly with those multiple cores.  &lt;/p&gt;

&lt;p&gt;what we have to watch out for is people who don&apos;t care about custom cores, and have written custom plugins.  things should continue to work for those people.&lt;/p&gt;

&lt;p&gt;In the case of the token-blah-factories, a simple way to go (which can also help us move away from the interface headache) might be to deprecate the current factory interfaces, and add new abstract factory base classes which implement those interfaces and are multi-core aware ... the initialization code can first check to see if the class name in question extends the new abstract base class &amp;#8211; if so then jolly good, if not then fall back to the legacy behavior and init the class without any info about it&apos;s core.&lt;/p&gt;

&lt;p&gt;the kind of situation i do worry about however is along the lines of a comment Henri pointed out (very early on evidently, not sure how i missed it back then)...&lt;/p&gt;

&lt;p&gt;&amp;gt; Although the &apos;single core&apos; feature has been retained (aka the static SolrCore.getCore), &lt;br/&gt;
&amp;gt; the SolrConfig.config could not; &lt;/p&gt;

&lt;p&gt;...this is a little alarming, because there &lt;b&gt;may&lt;/b&gt; be custom plugins that use SolrConfig.config to get arbitrary configuration inforrmation from solrconfig.xml ... i say &lt;b&gt;may&lt;/b&gt; because we&apos;ve never exactly advertised that as a recommended technique, but that doesn&apos;t mean peope aren&apos;t doing it.  At a minimum we need a well documented replacement for (hopefully something like SolrCore.getSolrCore(null).getSolrConfig() works) but the question that immediately popped into my head was: &quot;if SolrCore.getCore(null) can return &apos;the null core&apos; why can&apos;t SolrCOnfig.config be assigned the config from the null core?&quot;&lt;/p&gt;

&lt;p&gt;In general, this is the kind of thing i worry about: making sure that any and all custom plugin code that may exist right now can continue to exist and function using a single core even after the multi-core functionality is committed.&lt;/p&gt;</comment>
                            <comment id="12516387" author="henrib" created="Mon, 30 Jul 2007 14:53:00 +0100"  >
&lt;p&gt;About the SolrConfig.config, the replacement is indeed SolrCore.getSolrCore(null).getSolrConfig().&lt;br/&gt;
What I meant about the SolrConfig.config not being retained was that there was no way to access through SolrConfig.config the configuration of an arbitrary core; &lt;br/&gt;
we can easily &apos;reinstate&apos; SolrConfig.config by assigning it the &apos;null&apos; core config as a compatibility (deprecated?) feature; I&apos;d advocate for stating this very clearly (to avoid unexpected side effects in the multi core case).&lt;br/&gt;
This should allow a &apos;default&apos; deployment to work as it was (without the patch).&lt;/p&gt;

&lt;p&gt;I like the plan; is there anything expected/needed that I can/should do? &apos;process-wise&apos;, I&apos;m a little confused about the patch status; should I create/upload a new version of the patch with the described modifications or is this taken care of by the committer? (this sounds like a stupid question, my apologies if it is; just let me know).&lt;/p&gt;</comment>
                            <comment id="12516415" author="ryantxu" created="Mon, 30 Jul 2007 16:15:10 +0100"  >&lt;p&gt;&amp;gt; we can easily &apos;reinstate&apos; SolrConfig.config by assigning it the &apos;null&apos; core config as a compatibility (deprecated?) &lt;/p&gt;

&lt;p&gt;yes.  that is good.  &lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt;  should I create/upload a new version of the patch with the described modifications or is this taken care of by the committer? (this sounds like a stupid question, my apologies if it is; just let me know).&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;whatever happens first &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;If you have time, can you make the modifications.  That will make it easier.&lt;/p&gt;</comment>
                            <comment id="12516718" author="otis" created="Tue, 31 Jul 2007 16:41:19 +0100"  >&lt;p&gt;Henri:&lt;br/&gt;
Typically a contributor will try to push a patch as far as he/she can based on committers&apos; comments and suggestions.  It sounds like we are all in agreement here and you know exactly what to do, so we&apos;ll wait for your next patch and hopefully that will be the one that we can commit.  Thank you very much for your patience with this - I&apos;m impressed.&lt;/p&gt;

&lt;p&gt;From what I can tell, this is what is left:&lt;br/&gt;
1. Remove anything in this patch that touches o.a.s.webapp.* and o.a.s.handler.* &lt;br/&gt;
2. Deprecate factory interfaces and add abstract factory base classes as Hoss descibed above&lt;/p&gt;

&lt;p&gt;One that&apos;s in the repository, I think you/we can take the description you wrote (all the way at the top of this issue) and turn it into a Wiki page (anyone can add/edit pages, just create an account on the Wiki).&lt;/p&gt;

&lt;p&gt;I&apos;m eager to try the new patch!&lt;/p&gt;</comment>
                            <comment id="12520041" author="henrib" created="Wed, 15 Aug 2007 18:23:22 +0100"  >&lt;p&gt;updated for revision 566269;&lt;br/&gt;
added back SolrConfig.config;&lt;br/&gt;
cleaned-up o.a.s.handler*&lt;/p&gt;</comment>
                            <comment id="12524891" author="rakesh.aimreddy" created="Tue, 4 Sep 2007 22:55:28 +0100"  >&lt;p&gt;Hi &amp;#8211;&lt;/p&gt;

&lt;p&gt;   Currently I am using SOLR 1.2.0 stable build, and this version does not have this feature (Support for Multiple SOLR cores). How do I get this feature? I tried to open the .patch file but I could not understand. Is there any particular version of SOLR in which I can get this. I also looked in to the file &lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java&lt;/a&gt;, but this does not contain any changes as this feature mentioned like introduction new SolrCore constructor.&lt;/p&gt;

&lt;p&gt; If possible could you please point me to the instructions where I can check out this feature or the latest source and build the SOLR binary.&lt;/p&gt;

&lt;p&gt;Thanks in advance.&lt;br/&gt;
Rakesh&lt;/p&gt;</comment>
                            <comment id="12524987" author="ryantxu" created="Wed, 5 Sep 2007 06:33:41 +0100"  >&lt;p&gt;Sorry for the long delay in looking at this...  &lt;/p&gt;

&lt;p&gt;I got the patch applied to trunk and it appears to be working.  I removed the servlet configuration stuff and think we should revist that in a different patch as soon as this monster is commited.&lt;/p&gt;

&lt;p&gt;Otis, if you have time to check this out that would be great. has time to check this over before commiting that would be great &amp;#8211; otherwise, I&apos;ll add it in a few days.&lt;/p&gt;</comment>
                            <comment id="12525054" author="henrib" created="Wed, 5 Sep 2007 11:25:10 +0100"  >
&lt;p&gt;Rakesh,&lt;br/&gt;
The patch needs to be applied to the Solr source 1.3 dev trunk.&lt;br/&gt;
Getting the source is decribed in &lt;a href=&quot;http://lucene.apache.org/solr/version_control.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.apache.org/solr/version_control.html&lt;/a&gt; (and I suggest you also read the FAQ here &lt;a href=&quot;http://wiki.apache.org/solr/FAQ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/FAQ&lt;/a&gt; ).&lt;br/&gt;
Instructions to apply the patch are described in the Jira issue (as well as a description of its applicability &amp;amp; usefulness; are you sure you need this patch?)&lt;br/&gt;
Regards&lt;br/&gt;
Henri&lt;/p&gt;

&lt;p&gt;Quoted from: &lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/-jira--Created%3A-%28SOLR-215%29-Multiple-Solr-Cores-tf3651963.html#a12487432&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/-jira--Created%3A-%28SOLR-215%29-Multiple-Solr-Cores-tf3651963.html#a12487432&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12525941" author="ryantxu" created="Sat, 8 Sep 2007 20:10:11 +0100"  >&lt;p&gt;I just committed a HUGE patch that removes the SolrCore static singleton.&lt;/p&gt;

&lt;p&gt;This does not yet support configuring and using multiple cores.  For clarity, i think that should get its own new issue while we figure out the best interface.  Lets continue to use this issue to resolve any problems that may occur from the core changes.&lt;/p&gt;

&lt;p&gt;Henri - thanks for your patience and stamina!&lt;/p&gt;</comment>
                            <comment id="12528936" author="hossman" created="Wed, 19 Sep 2007 23:30:55 +0100"  >&lt;p&gt;marking Fixed in 1.3&lt;/p&gt;

&lt;p&gt;(I believe Ryan left this open to track any potential issues ...  if nothing else this way we&apos;ll remember to resolve it before releasing)&lt;/p&gt;</comment>
                            <comment id="12529509" author="yseeley@gmail.com" created="Fri, 21 Sep 2007 18:16:56 +0100"  >&lt;p&gt;FYI, firstSearcher/newSearcher hooks are now broken because the constructors to AbstractSolrEventListener was changed to take a SolrCore, and the code in SolrCore that creates event listeners does a simple newInstance()&lt;/p&gt;</comment>
                            <comment id="12529625" author="henrib" created="Sat, 22 Sep 2007 07:28:27 +0100"  >&lt;p&gt;Replacing the line&lt;br/&gt;
          SolrEventListener listener = (SolrEventListener)solrConfig.newInstance(className);&lt;br/&gt;
With&lt;br/&gt;
          SolrEventListener listener = createEventListener(className);&lt;br/&gt;
should fix it.&lt;/p&gt;</comment>
                            <comment id="12529668" author="ryantxu" created="Sat, 22 Sep 2007 15:50:32 +0100"  >&lt;p&gt;fixed the SolrEventListener issue in rev578451&lt;/p&gt;</comment>
                            <comment id="12534433" author="ryantxu" created="Fri, 12 Oct 2007 23:42:24 +0100"  >&lt;p&gt;Mike Klass points out a BIG BAD problem with this patch:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Deprecations-and-SolrConfig-patch-tf4611038.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Deprecations-and-SolrConfig-patch-tf4611038.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The token filter interface keeps:&lt;br/&gt;
@Deprecated&lt;br/&gt;
  public void init(Map&amp;lt;String,String&amp;gt; args) &lt;/p&gt;
{
    log.warning(&quot;calling the deprecated form of init; should be calling init(SolrConfig solrConfig, Map&amp;lt;String,String&amp;gt; args)&quot;);
    this.args=args;
  }
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;but this is never called, so it only tricks us into thinking it is backwards compatible. &lt;/p&gt;

&lt;p&gt;Options:&lt;br/&gt;
1. Break the API &amp;#8211; at least no one would get fooled into thinking it works&lt;/p&gt;

&lt;p&gt;2. Add some hacky bits to IndexSchema readTokenFilterFactory that first calls the deprecated init, then calls the &apos;real&apos; one. &amp;#8211; make some clear statemes somewhere about how this works and how it will go away.&lt;/p&gt;

&lt;p&gt;I don&apos;t have time to look at this for another week or so, but it is very important.  Henri, if you have some time, it would be great if you could take a look at some options.&lt;/p&gt;

&lt;p&gt;ryan&lt;/p&gt;</comment>
                            <comment id="12534437" author="ryantxu" created="Sat, 13 Oct 2007 00:12:44 +0100"  >&lt;p&gt;Ok, I liked... fixing this is not hard.&lt;/p&gt;

&lt;p&gt;Deprecation support was already baked into IndexSchema:&lt;/p&gt;

&lt;p&gt;    TokenFilterFactory tfac = (TokenFilterFactory)solrConfig.newInstance(className);&lt;br/&gt;
    if (tfac instanceof SolrConfig.Initializable)&lt;br/&gt;
      ((SolrConfig.Initializable)tfac).init(solrConfig, DOMUtil.toMapExcept(attrs,&quot;class&quot;));&lt;br/&gt;
    else&lt;br/&gt;
      tfac.init(DOMUtil.toMapExcept(attrs,&quot;class&quot;));&lt;/p&gt;

&lt;p&gt;the problem is that BaseTokenizerFactory and BaseTokenFilterFactory both implement SolrConfig.Initializable so the IndexSchema assumes they are using the new interface.  If someone extends something from these Base classes it is not called.&lt;/p&gt;

&lt;p&gt;the fix is simply to call init( args ) from within init( config, args ) &amp;#8211; I&apos;ll remove the warning message since that will be called by default now.&lt;/p&gt;

&lt;p&gt;ryan&lt;/p&gt;</comment>
                            <comment id="12535028" author="ryantxu" created="Tue, 16 Oct 2007 02:05:48 +0100"  >&lt;p&gt;This was committed a while ago.  If it causes any problems, we should open a new issue to track progress.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12377827">SOLR-350</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12365143" name="solr-215.patch" size="166472" author="ryantxu" created="Wed, 5 Sep 2007 06:33:41 +0100"/>
                            <attachment id="12360039" name="solr-215.patch" size="311743" author="henrib" created="Mon, 18 Jun 2007 16:52:30 +0100"/>
                            <attachment id="12359274" name="solr-215.patch" size="227837" author="henrib" created="Fri, 8 Jun 2007 13:55:07 +0100"/>
                            <attachment id="12358622" name="solr-215.patch" size="77769" author="henrib" created="Thu, 31 May 2007 15:48:42 +0100"/>
                            <attachment id="12363863" name="solr-215.patch.zip" size="43618" author="henrib" created="Wed, 15 Aug 2007 18:23:22 +0100"/>
                            <attachment id="12362081" name="solr-215.patch.zip" size="43416" author="henrib" created="Wed, 18 Jul 2007 19:00:53 +0100"/>
                            <attachment id="12362080" name="solr-215.patch.zip" size="43416" author="henrib" created="Wed, 18 Jul 2007 18:59:01 +0100"/>
                            <attachment id="12362074" name="solr-215.patch.zip" size="44111" author="henrib" created="Wed, 18 Jul 2007 17:50:50 +0100"/>
                            <attachment id="12361583" name="solr-215.patch.zip" size="42629" author="henrib" created="Wed, 11 Jul 2007 13:32:47 +0100"/>
                            <attachment id="12361066" name="solr-215.patch.zip" size="42935" author="henrib" created="Tue, 3 Jul 2007 18:01:31 +0100"/>
                            <attachment id="12360390" name="solr-215.patch.zip" size="42693" author="henrib" created="Sat, 23 Jun 2007 11:49:59 +0100"/>
                            <attachment id="12356513" name="solr-trunk-533775.patch" size="132312" author="henrib" created="Mon, 30 Apr 2007 16:43:16 +0100"/>
                            <attachment id="12357364" name="solr-trunk-538091.patch" size="147607" author="henrib" created="Tue, 15 May 2007 09:50:53 +0100"/>
                            <attachment id="12358560" name="solr-trunk-542847-1.patch" size="158369" author="henrib" created="Wed, 30 May 2007 17:58:16 +0100"/>
                            <attachment id="12358556" name="solr-trunk-542847.patch" size="77873" author="henrib" created="Wed, 30 May 2007 17:19:07 +0100"/>
                            <attachment id="12356339" name="solr-trunk-src.patch" size="121646" author="henrib" created="Thu, 26 Apr 2007 15:20:46 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12382335">SOLR-409</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 30 Apr 2007 18:29:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7372</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxsov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20967</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>