<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:18:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1483/SOLR-1483.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1483] Example schema is confusing with int, tint and pint fields</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1483</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Example schema defines int (TrieIntField), tint (TrieIntField) and pint (IntField) which is confusing. In particular, the comments for int fields tell users to use tint types (which is the same thing).&lt;/p&gt;

&lt;p&gt;Let us remove tint, tlong, tdouble, tdate types from example schemas and fix the comments - carefully noting the things trie fields do not work with.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12437100">SOLR-1483</key>
            <summary>Example schema is confusing with int, tint and pint fields</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="shalinmangar">Shalin Shekhar Mangar</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Oct 2009 08:03:04 +0100</created>
                <updated>Tue, 10 Nov 2009 15:52:17 +0000</updated>
                            <resolved>Thu, 8 Oct 2009 06:35:15 +0100</resolved>
                                                    <fixVersion>1.4</fixVersion>
                                    <component>documentation</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12761569" author="gsingers" created="Fri, 2 Oct 2009 14:12:08 +0100"  >&lt;p&gt;I&apos;m not following.  What comments are you referring to?  The comments on the various field types for int, tint and pint are pretty clear to me.&lt;/p&gt;</comment>
                            <comment id="12761578" author="shalinmangar" created="Fri, 2 Oct 2009 14:50:36 +0100"  >&lt;blockquote&gt;&lt;p&gt;What comments are you referring to?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The comments just before int, float, long, double say &quot;For faster range queries, consider the tint/tfloat/tlong/tdouble types.&quot; But tint/tfloat/tlong/tdouble are actually the same as int/float/long/double with precisionStep being different.&lt;/p&gt;

&lt;p&gt;The example schema has 4 types of numeric fields - int/tint/pint/sint. I think we should have only one trie field else we should clearly document why using int is better/different than sint/pint. Without that it would be pretty confusing to a new Solr user who starts off with 1.4&lt;/p&gt;</comment>
                            <comment id="12761612" author="gsingers" created="Fri, 2 Oct 2009 16:14:17 +0100"  >&lt;p&gt;int says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Default numeric field types.  For faster range queries, consider the tint/tfloat/tlong/tdouble types.&lt;br/&gt;
      Note: the statistics component does not yet work with these field types.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;tint says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Numeric field types that index each value at various levels of precision&lt;br/&gt;
     to accelerate range queries when the number of values between the range&lt;br/&gt;
     endpoints is large. See the javadoc for NumericRangeQuery for internal&lt;br/&gt;
     implementation details.&lt;/p&gt;

&lt;p&gt;     Smaller precisionStep values (specified in bits) will lead to more tokens&lt;br/&gt;
     indexed per value, slightly larger index size, and faster range queries.&lt;/p&gt;

&lt;p&gt;     Note: faceting does not currently work for these fields.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I guess I&apos;d add that in the int case, you could add some &quot;why&quot; to it, but otherwise, I think both comments explain the case for each one.  One gives faster range queries than the other.&lt;/p&gt;</comment>
                            <comment id="12762177" author="shalinmangar" created="Mon, 5 Oct 2009 14:56:40 +0100"  >&lt;p&gt;Noting Grant&apos;s comments from the mailing list:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It seems like we should have tint4, tint8 instead of just 8, no?  My impression of the Lucene javadocs is that a step of 4 for ints/floats was more appropriate.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Also, StatsComponent does work with int/float/long/double/tdate types against the comment on the fields in schema. It does not work with the tint/tfloat/tlong/tdouble/tdate fields.&lt;/p&gt;</comment>
                            <comment id="12762180" author="shalinmangar" created="Mon, 5 Oct 2009 15:06:01 +0100"  >&lt;p&gt;It seems to me that we should use precisionStep 6 for tlong/tdouble fields just like we are doing for tdate?&lt;/p&gt;</comment>
                            <comment id="12762181" author="markrmiller@gmail.com" created="Mon, 5 Oct 2009 15:06:26 +0100"  >&lt;p&gt;Attaching that javadoc from Lucene:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&amp;lt;p&amp;gt;Good values for &amp;lt;code&amp;gt;precisionStep&amp;lt;/code&amp;gt; are depending on usage and data type:&lt;/li&gt;
	&lt;li&gt;&amp;lt;ul&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;The default for all data types is &amp;lt;b&amp;gt;4&amp;lt;/b&amp;gt;, which is used, when no &amp;lt;code&amp;gt;precisionStep&amp;lt;/code&amp;gt; is given.&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;Ideal value in most cases for &amp;lt;em&amp;gt;64 bit&amp;lt;/em&amp;gt; data types &amp;lt;em&amp;gt;(long, double)&amp;lt;/em&amp;gt; is &amp;lt;b&amp;gt;6&amp;lt;/b&amp;gt; or &amp;lt;b&amp;gt;8&amp;lt;/b&amp;gt;.&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;Ideal value in most cases for &amp;lt;em&amp;gt;32 bit&amp;lt;/em&amp;gt; data types &amp;lt;em&amp;gt;(int, float)&amp;lt;/em&amp;gt; is &amp;lt;b&amp;gt;4&amp;lt;/b&amp;gt;.&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;For low cardinality fields larger precision steps are good. If the cardinality is &amp;lt; 100, it is&lt;/li&gt;
	&lt;li&gt;fair to use 
{@link Integer#MAX_VALUE}
&lt;p&gt; (see below).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12762183" author="shalinmangar" created="Mon, 5 Oct 2009 15:21:23 +0100"  >&lt;p&gt;Clearly state:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Trie field types are new in Solr 1.4.0&lt;/li&gt;
	&lt;li&gt;Supported features&lt;/li&gt;
	&lt;li&gt;Features that don&apos;t work&lt;/li&gt;
	&lt;li&gt;pint/sint etc are for compatibility and should not be used if possible&lt;/li&gt;
	&lt;li&gt;Copied descriptions for pint/sint from pre-trie example schema (is there a need to remove them?)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I haven&apos;t changed the precisionSteps.&lt;/p&gt;</comment>
                            <comment id="12762206" author="yseeley@gmail.com" created="Mon, 5 Oct 2009 16:08:35 +0100"  >&lt;p&gt;On changing the precisionSteps... it feels like working in the dark a bit... I still haven&apos;t seen any good analysis on the size penalty that goes along with the performance increase.&lt;/p&gt;</comment>
                            <comment id="12762238" author="shalinmangar" created="Mon, 5 Oct 2009 17:17:38 +0100"  >&lt;blockquote&gt;&lt;p&gt;On changing the precisionSteps... it feels like working in the dark a bit... I still haven&apos;t seen any good analysis on the size penalty that goes along with the performance increase.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree. Anyways, it is not related to this issue.&lt;/p&gt;

&lt;p&gt;Should I commit this patch? Anything that needs to be added or clarified?&lt;/p&gt;</comment>
                            <comment id="12762242" author="yseeley@gmail.com" created="Mon, 5 Oct 2009 17:28:58 +0100"  >&lt;p&gt;I think the patch is way to verbose...&lt;br/&gt;
Solr is growing up - we shouldn&apos;t have a numeric field and say &quot;hey, it supports sorting as a feature!&quot;  Wouldn&apos;t one expect you could do sorting, range queries, faceting, function queries, etc?  We should really only need to call out what doesn&apos;t work.&lt;/p&gt;

&lt;p&gt;I also don&apos;t see why we want to call out that Trie fields are new in the schema - seems like more noise.&lt;/p&gt;

&lt;p&gt;I&apos;ll try and revisit / review your other points (#4 and #5) soon.&lt;/p&gt;</comment>
                            <comment id="12762779" author="shalinmangar" created="Tue, 6 Oct 2009 22:14:34 +0100"  >&lt;p&gt;Updated patch to take &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1492&quot; title=&quot;Can&amp;#39;t facet Trie fields with precisionSteps&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1492&quot;&gt;&lt;del&gt;SOLR-1492&lt;/del&gt;&lt;/a&gt; into account.&lt;/p&gt;

&lt;p&gt;I&apos;ve removed the note about trie being a new feature but I&apos;ve kept the descriptions of pint/sint fields as they were in the pre-trie era.&lt;/p&gt;</comment>
                            <comment id="12763150" author="shalinmangar" created="Wed, 7 Oct 2009 18:38:43 +0100"  >&lt;p&gt;Can I go ahead and commit this?&lt;/p&gt;</comment>
                            <comment id="12763221" author="lancenorskog" created="Wed, 7 Oct 2009 20:47:27 +0100"  >&lt;p&gt;Please commit the big comment at the end, but please retain the existing comments about how faceting does not yet work. &lt;/p&gt;

&lt;p&gt;It was painful enough learning Solr 1.2 from the existing mosaic of documentation and oral tradition; please don&apos;t recommend new features without warning of their problems.&lt;/p&gt;</comment>
                            <comment id="12763225" author="shalinmangar" created="Wed, 7 Oct 2009 20:50:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;Please commit the big comment at the end, but please retain the existing comments about how faceting does not yet work. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Lance, support for faceting on trie fields with precisionSteps has been added by Yonik. See &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1492&quot; title=&quot;Can&amp;#39;t facet Trie fields with precisionSteps&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1492&quot;&gt;&lt;del&gt;SOLR-1492&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12763229" author="yseeley@gmail.com" created="Wed, 7 Oct 2009 20:52:42 +0100"  >&lt;p&gt;The latest patch seems to duplicate docs for &quot;sortMissingLast&quot;, etc?&lt;/p&gt;</comment>
                            <comment id="12763239" author="shalinmangar" created="Wed, 7 Oct 2009 21:13:47 +0100"  >&lt;p&gt;Removing duplicate documentation on sortMissingFirst/Last and adding pint/pfloat/plong/pdouble to the list of types which support this feature.&lt;/p&gt;</comment>
                            <comment id="12763243" author="yseeley@gmail.com" created="Wed, 7 Oct 2009 21:21:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;Removing duplicate documentation on sortMissingFirst/Last and adding pint/pfloat/plong/pdouble to the list of types which support this feature. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I left pint and friends off for a reason... if you try using sortMissingFirst with them, it will double your fieldCache size.&lt;br/&gt;
pint uses a native int[] for the fieldcache entry and the comparator that implements sortMissingFirst asks for the StringIndex.&lt;/p&gt;</comment>
                            <comment id="12763248" author="shalinmangar" created="Wed, 7 Oct 2009 21:28:36 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I left pint and friends off for a reason... if you try using sortMissingFirst with them, it will double your fieldCache size.&lt;br/&gt;
pint uses a native int[] for the fieldcache entry and the comparator that implements sortMissingFirst asks for the StringIndex.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This full of gotchas! Things like this should be noted in CHANGES.txt in the upgrading section as well as on the wiki in the SchemaXml page. A user is very likely to keep using sortMissingFirst with his old schema in a new 1.4 installation.&lt;/p&gt;</comment>
                            <comment id="12763257" author="yseeley@gmail.com" created="Wed, 7 Oct 2009 21:43:36 +0100"  >&lt;blockquote&gt;&lt;p&gt;A user is very likely to keep using sortMissingFirst with his old schema in a new 1.4 installation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The doubling fieldCache behavior for sortMissingLast with pint isn&apos;t new, so that part at least should still work as it did before.&lt;br/&gt;
But yes, there are other fieldCache issues that we will need to call out.&lt;/p&gt;</comment>
                            <comment id="12763264" author="shalinmangar" created="Wed, 7 Oct 2009 22:00:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;The doubling fieldCache behavior for sortMissingLast with pint isn&apos;t new, so that part at least should still work as it did before.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fine. I&apos;ll remove the p-types and commit the other changes (which aren&apos;t many). The doubling memory issue for p-types should still be noted somewhere though. Should I remove pdate too (which already existed in that note)?&lt;/p&gt;</comment>
                            <comment id="12763266" author="yseeley@gmail.com" created="Wed, 7 Oct 2009 22:10:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;The doubling memory issue for p-types should still be noted somewhere though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I had just always considered it as unsupported.  Actually, sortMissingLast should probably work on trie based fields with precisionStep==0, again at the cost of doubling the fieldCache.  Less confusing to tell people that it&apos;s not supported.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should I remove pdate too (which already existed in that note)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nope - pdate (DateField) uses StringIndex by default, so no increased memory usage.&lt;/p&gt;</comment>
                            <comment id="12763371" author="shalinmangar" created="Thu, 8 Oct 2009 06:35:15 +0100"  >&lt;p&gt;Committed revision 823025.&lt;/p&gt;</comment>
                            <comment id="12763487" author="markrmiller@gmail.com" created="Thu, 8 Oct 2009 14:11:44 +0100"  >&lt;blockquote&gt;&lt;p&gt;The doubling memory issue for p-types should still be noted somewhere though&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed - if you can do it, considering it unsupported without saying such is not very helpful to a user...&lt;/p&gt;</comment>
                            <comment id="12763657" author="yseeley@gmail.com" created="Thu, 8 Oct 2009 20:50:08 +0100"  >&lt;blockquote&gt;&lt;p&gt;considering it unsupported without saying such is not very helpful to a user...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We currently list exactly the types that support sortMissingLast... that&apos;s good enough, right?&lt;/p&gt;</comment>
                            <comment id="12763665" author="markrmiller@gmail.com" created="Thu, 8 Oct 2009 21:06:22 +0100"  >&lt;p&gt;Yeah - I was basing my comment purely on the conversation with Shalin - hadn&apos;t looked.&lt;/p&gt;</comment>
                            <comment id="12775900" author="gsingers" created="Tue, 10 Nov 2009 15:52:17 +0000"  >&lt;p&gt;Bulk close for Solr 1.4&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421572" name="SOLR-1483.patch" size="4743" author="shalinmangar" created="Wed, 7 Oct 2009 21:13:46 +0100"/>
                            <attachment id="12421467" name="SOLR-1483.patch" size="4535" author="shalinmangar" created="Tue, 6 Oct 2009 22:14:34 +0100"/>
                            <attachment id="12421285" name="SOLR-1483.patch" size="6350" author="shalinmangar" created="Mon, 5 Oct 2009 15:21:23 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Oct 2009 13:12:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6175</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxkzr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19720</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>