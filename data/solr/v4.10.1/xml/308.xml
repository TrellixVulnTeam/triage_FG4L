<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:25:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-308/SOLR-308.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-308] Add a field that generates an unique id when you have none in your data to index</title>
                <link>https://issues.apache.org/jira/browse/SOLR-308</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;This patch adds a field that generates an unique id when you have no unique id in your data you want to index.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12374046">SOLR-308</key>
            <summary>Add a field that generates an unique id when you have none in your data to index</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hossman">Hoss Man</assignee>
                                    <reporter username="tpeuss">Thomas Peuss</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Jul 2007 08:04:02 +0100</created>
                <updated>Fri, 10 May 2013 11:40:08 +0100</updated>
                            <resolved>Fri, 24 Aug 2007 08:28:56 +0100</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12513508" author="ehatcher" created="Wed, 18 Jul 2007 10:52:26 +0100"  >&lt;p&gt;Can the client get the generated id back when adding a document?&lt;/p&gt;</comment>
                            <comment id="12513568" author="tpeuss" created="Wed, 18 Jul 2007 14:43:15 +0100"  >&lt;p&gt;Well, indirectly yes. It is viewable in the response when you store the field. We use this field because we mainly rely on 3rd party data where we have not much control of the data.&lt;/p&gt;</comment>
                            <comment id="12513582" author="otis" created="Wed, 18 Jul 2007 15:08:04 +0100"  >&lt;p&gt;What type does the id end up being after this?  String?&lt;/p&gt;</comment>
                            <comment id="12513661" author="hossman" created="Wed, 18 Jul 2007 19:02:06 +0100"  >&lt;p&gt;i&apos;m confused by this issue .. what&apos;s the need?&lt;/p&gt;

&lt;p&gt;solr doesn&apos;t require that you have a uniqueKey field, so if there isn&apos;t a unique id for your data, why add one artificially?&lt;/p&gt;</comment>
                            <comment id="12513702" author="ryantxu" created="Wed, 18 Jul 2007 20:57:26 +0100"  >&lt;p&gt;If I&apos;m following correct, this is a FieldType that generates a UUID regardless of the input value:&lt;/p&gt;

&lt;p&gt;	public Field createField(SchemaField field, String externalVal, float boost) &lt;/p&gt;
{
		// We ignore the external value and have our own
		return super.createField(field, UUID.randomUUID().toString(), boost);
	}

&lt;p&gt;What is a use case for that? &lt;/p&gt;

&lt;p&gt;If you are looking for something like the sql auto increment, it might be a good candidate for the new fangled &apos;UpdateRequestProcessor&apos; &amp;#8211; this could check if the input document has a uniqueKey - if not, add one and add the new value to the response.&lt;/p&gt;</comment>
                            <comment id="12513817" author="tpeuss" created="Thu, 19 Jul 2007 06:53:38 +0100"  >&lt;p&gt;The use case is the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;We get catalog data from vendors (300+). We have no control about the data.&lt;/li&gt;
	&lt;li&gt;The only unique thing is the catalogid, which is of course the same for all rows in one catalog.&lt;/li&gt;
	&lt;li&gt;In our webapp we request first only a few fields that are needed for the search result display.&lt;/li&gt;
	&lt;li&gt;When the customer clicks on a product in the search result he gets a detailed page. To get the info from Solr we need a unique id to read the rest of the fields (50+). This id is generated by this code.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Of course we could add the unique id in a preprocessing step but we wanted to achieve this with Solr alone.&lt;/p&gt;

&lt;p&gt;The update procedure goes like this:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Delete all documents with a specific catalogId&lt;/li&gt;
	&lt;li&gt;Insert the updated catalog data&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So you see we need this id to find the exact same document we have in the search result. We do nothing more with it.&lt;/p&gt;

&lt;p&gt;Maybe I overlooked something and this can be achieved with existing code. Any hint is welcome.&lt;/p&gt;</comment>
                            <comment id="12513891" author="pberkel" created="Thu, 19 Jul 2007 14:48:08 +0100"  >&lt;p&gt;From the usage case you have provided, it sounds like the unique id will change every time you delete and re-insert the document.  If this is the case, then perhaps it might be more efficient to use the lucene document id as your unique id value rather than a seperate field?  However, as far as I&apos;m aware, there currently isn&apos;t any way to access the lucene doc id from solr (except perhaps the luke request handler)?&lt;/p&gt;</comment>
                            <comment id="12513947" author="tpeuss" created="Thu, 19 Jul 2007 18:03:24 +0100"  >&lt;p&gt;That would be a good replacement for my problem. From the Lucene docs I see that the document id is 32 bits (int). I don&apos;t know if the docid &quot;wraps around&quot; when this address space is exhausted (I assume not). Or is the docid field recomputed on &quot;optimize&quot;?&lt;/p&gt;

&lt;p&gt;I try to add the functionality to see the document id in the response. So for now we can close this issue for now.&lt;/p&gt;</comment>
                            <comment id="12513959" author="yseeley@gmail.com" created="Thu, 19 Jul 2007 18:43:59 +0100"  >&lt;p&gt;Lucene docids are transient (they change when the index changes) - they should not be used across different instances of an IndexReader&lt;/p&gt;</comment>
                            <comment id="12513960" author="ryantxu" created="Thu, 19 Jul 2007 18:58:52 +0100"  >&lt;p&gt;The easiest option is to add a UUID when you index the data.  &lt;/p&gt;

&lt;p&gt;Other options would be to make this FieldType a plugin and put it in the &apos;lib&apos; directory.&lt;/p&gt;</comment>
                            <comment id="12513972" author="hossman" created="Thu, 19 Jul 2007 19:46:22 +0100"  >&lt;p&gt;I understood your data entry/delete reindexing strategy, but i hadn&apos;t considered the use case of doing a query, and then issuing a followup query to get more details about specific items.&lt;/p&gt;

&lt;p&gt;As yonik points out, exposing the internal lucene docid would be a bad idea since it may change every time an IndexReader is opened ... even if hte doc you are interested in is still in the index (ie: hasn&apos;t been deleted) other deletions may have changed it&apos;s internal id.&lt;/p&gt;

&lt;p&gt;i have no objection to adding a FieldType that can generate UUID on demand for use cases like this, but having it ignore the input seems a little sketchy to me.  it seems like a better approach would be to have UUIDFieldType with a toInternal() method that tests it&apos;s input for some marker token (like &quot;NEW&quot; or &quot;*&quot;) and if it sees that token, generates a new UUID, otherwise it uses the literal value.  then you can configure the id field with a defaultValue of &quot;NEW&quot; in the schema and any doc without an id will get a unique one, but if someone tries to update an existing doc whose id they already know, it will still work as well.&lt;/p&gt;</comment>
                            <comment id="12514154" author="tpeuss" created="Fri, 20 Jul 2007 09:45:10 +0100"  >&lt;p&gt;Hoss Man: I change the code in the way you described. Thanks for your notes on that.&lt;/p&gt;</comment>
                            <comment id="12514171" author="tpeuss" created="Fri, 20 Jul 2007 12:06:59 +0100"  >&lt;p&gt;Patch for an UUIDField and associated test.&lt;/p&gt;</comment>
                            <comment id="12514879" author="tpeuss" created="Tue, 24 Jul 2007 07:58:57 +0100"  >&lt;p&gt;An updated version of the patch. In the XML response the UUIDField is now rendered as &amp;lt;uuid&amp;gt;...&amp;lt;/uuid&amp;gt;.&lt;/p&gt;</comment>
                            <comment id="12516307" author="hossman" created="Mon, 30 Jul 2007 08:44:07 +0100"  >&lt;p&gt;a few misc comments...&lt;/p&gt;

&lt;p&gt;1)  ...val.startsWith(&quot;NEW&quot;)... seems like a bad idea, why not just val.equals(&quot;NEW&quot;) ?&lt;/p&gt;

&lt;p&gt;2) classes like IntField and DateField don&apos;t currently do strong parsing validation in the toInternal method, but this UUIDFIeld class does ... should it?&lt;/p&gt;

&lt;p&gt;3) should toObject be strongly typed to return UUID ?&lt;/p&gt;

&lt;p&gt;4) there shouldn&apos;t be new methods in the output writers for this field type ... output writers should only need to know about the most primitive types of data that should be viable regardless of the client language (ie: string, int, float, date, list, etc...)  the UUIDField should just write itself out as a string  (using &amp;lt;str&amp;gt; in the xml response writer)&lt;/p&gt;</comment>
                            <comment id="12516368" author="tpeuss" created="Mon, 30 Jul 2007 12:31:04 +0100"  >&lt;p&gt;1.) I change it.&lt;br/&gt;
2.) I remove the check. I understand that this has a performance impact.&lt;br/&gt;
3.) I changed it to what DateField and IntField do.&lt;br/&gt;
4.) I remove that as well.&lt;/p&gt;

&lt;p&gt;If we don&apos;t do strong parsing we should call this IDField instead of UUIDField.  If we don&apos;t enforce that this is an UUID we shouldn&apos;t name it like that. What do you think?&lt;/p&gt;</comment>
                            <comment id="12516370" author="tpeuss" created="Mon, 30 Jul 2007 12:33:21 +0100"  >&lt;p&gt;Changes based on comments...&lt;/p&gt;</comment>
                            <comment id="12516638" author="tpeuss" created="Tue, 31 Jul 2007 08:46:20 +0100"  >&lt;p&gt;BTW: The DateField does strong parsing of the input... It tries to convert the input value to the internal representation and throws a SolrException when that is not possible...&lt;/p&gt;</comment>
                            <comment id="12516680" author="tpeuss" created="Tue, 31 Jul 2007 13:00:24 +0100"  >&lt;p&gt;Added missing test class and readded strong checking that the given value is indeed a valid UUID. So this behaves now like DateField.&lt;/p&gt;</comment>
                            <comment id="12516888" author="hossman" created="Wed, 1 Aug 2007 08:28:21 +0100"  >&lt;p&gt;&amp;gt; BTW: The DateField does strong parsing of the input... It tries to convert the input value to&lt;br/&gt;
&amp;gt; the internal representation and throws a SolrException when that is not possible...&lt;/p&gt;

&lt;p&gt;...no, note quite.  DateField.toInternal(String) only does a quick sanity check to see if the string ends in a Z, if it does it &lt;b&gt;assumes&lt;/b&gt; it&apos;s in the correct date format, and does no parsing &amp;#8211; if it does not end in a Z, then it does DateMathParsing (which may include parsing the date and throwing an exception if that can&apos;t be done) ... that parsing is only done if  necessary for the date math.&lt;/p&gt;

&lt;p&gt;that was my point - if the UUIDFIeld class is going to index the UUID value using the orriginal human readable format, then there isn&apos;t really any reason to attempt to parse it &amp;#8211; except as a form of validation, i was just raising the question as to whether or not we think it should do that validation.&lt;/p&gt;

</comment>
                            <comment id="12516977" author="tpeuss" created="Wed, 1 Aug 2007 15:11:21 +0100"  >&lt;p&gt;Changed the input validation to only do basic input validation. We now only check if the thing looks like an UUID.&lt;/p&gt;</comment>
                            <comment id="12516979" author="tpeuss" created="Wed, 1 Aug 2007 15:17:47 +0100"  >&lt;p&gt;I personally would prefer strong input checking. This avoids problems at search time. Better we find the problem at index time than the customer at search time... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Maybe I am a bit paranoid here. But we get content from many suppliers and the quality is often not that good (commas instead of dots as decimal seperator in floats - even changing from row to row of the catalogue).&lt;/p&gt;</comment>
                            <comment id="12522403" author="hossman" created="Fri, 24 Aug 2007 08:27:13 +0100"  >&lt;p&gt;Thomas: I understand you concerns, but in the balance of performance vs safety Solr tends to err on the side of performance when dealing with indexing data &amp;#8211; since that comes from a finite number of controlled sources (you may get it from dozens of places, but &lt;b&gt;you&lt;/b&gt; must trust them at least a little and have the chance to sanitize their data before deciding to use it) while query inputs are treaty much more delicately since they typically come from much more diverse group of users many of whom you may outright distrust.&lt;/p&gt;

&lt;p&gt;that said, i went ahead and left in the remaining validation you had, although i had to replace the isEmpty() call (Solr still uses Java 1.5)&lt;/p&gt;

&lt;p&gt;I also changed the toInternal methods to always lowercase whatever value they get (the hex values need to be case insensitve in case someone tries to query/update using a different case then was orriginally indexed)&lt;/p&gt;</comment>
                            <comment id="12522405" author="hossman" created="Fri, 24 Aug 2007 08:28:56 +0100"  >&lt;p&gt;Committed revision 569279.&lt;/p&gt;</comment>
                            <comment id="12595757" author="rassen" created="Sat, 10 May 2008 00:52:29 +0100"  >&lt;p&gt;i&apos;m having small question.&lt;br/&gt;
how to use these files?&lt;/p&gt;</comment>
                            <comment id="12595766" author="ryantxu" created="Sat, 10 May 2008 01:39:41 +0100"  >&lt;p&gt;if you are using trunk (the nightly builds, not 1.2) it is included.&lt;/p&gt;</comment>
                            <comment id="12662615" author="lancenorskog" created="Sat, 10 Jan 2009 03:57:00 +0000"  >&lt;p&gt;This field type and its use is not documented in the Wiki: search for &apos;UUID&apos; finds only custom code in ExtractingRequestHandler.&lt;/p&gt;
</comment>
                            <comment id="12662626" author="otis" created="Sat, 10 Jan 2009 06:20:51 +0000"  >&lt;p&gt;Lance - anyone can add/modify a Wiki page.  Do you mind adding info about this field type?&lt;/p&gt;</comment>
                            <comment id="12662640" author="tpeuss" created="Sat, 10 Jan 2009 09:18:30 +0000"  >&lt;p&gt;Some documentation can be found here: &lt;a href=&quot;http://lucene.apache.org/solr/api/org/apache/solr/schema/UUIDField.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.apache.org/solr/api/org/apache/solr/schema/UUIDField.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12662654" author="tpeuss" created="Sat, 10 Jan 2009 12:35:05 +0000"  >&lt;p&gt;Fields are defined by:&lt;/p&gt;

&lt;p&gt;&amp;lt;fieldType name=&quot;uuid&quot; class=&quot;solr.UUIDField&quot; indexed=&quot;true&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;and used by&lt;/p&gt;

&lt;p&gt;&amp;lt;field name=&quot;id&quot; type=&quot;uuid&quot; indexed=&quot;true&quot; stored=&quot;true&quot; default=&quot;NEW&quot;/&amp;gt;&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12362979" name="UUIDField.patch" size="5350" author="tpeuss" created="Wed, 1 Aug 2007 15:11:21 +0100"/>
                            <attachment id="12362870" name="UUIDField.patch" size="5169" author="tpeuss" created="Tue, 31 Jul 2007 13:00:08 +0100"/>
                            <attachment id="12362764" name="UUIDField.patch" size="3294" author="tpeuss" created="Mon, 30 Jul 2007 12:33:21 +0100"/>
                            <attachment id="12362406" name="UUIDField.patch" size="7491" author="tpeuss" created="Tue, 24 Jul 2007 07:58:57 +0100"/>
                            <attachment id="12362208" name="UUIDField.patch" size="5193" author="tpeuss" created="Fri, 20 Jul 2007 12:06:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Jul 2007 09:52:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7282</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxs4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20876</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>