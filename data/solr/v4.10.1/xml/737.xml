<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:22:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-737/SOLR-737.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-737] Incorrect 500 error reported with maxClausCount limit</title>
                <link>https://issues.apache.org/jira/browse/SOLR-737</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Here is my installation:&lt;br/&gt;
Solr Specification Version: 1.2.2008.08.13.13.05.16&lt;br/&gt;
Lucene Implementation Version: 2.4-dev 685576 - 2008-08-13 10:55:25&lt;/p&gt;

&lt;p&gt;I did the following query today:&lt;br/&gt;
author:(r*a* AND fisher)&lt;/p&gt;

&lt;p&gt;And get the following 500 error:&lt;/p&gt;

&lt;p&gt;maxClauseCount is set to 1024&lt;/p&gt;

&lt;p&gt;org.apache.lucene.search.BooleanQuery$TooManyClauses: maxClauseCount is set to 1024&lt;br/&gt;
        at org.apache.lucene.search.BooleanQuery.add(BooleanQuery.java:165)&lt;br/&gt;
        at org.apache.lucene.search.BooleanQuery.add(BooleanQuery.java:156)&lt;br/&gt;
        at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:63)&lt;br/&gt;
        at org.apache.lucene.search.WildcardQuery.rewrite(WildcardQuery.java:54)&lt;br/&gt;
        at org.apache.lucene.search.BooleanQuery.rewrite(BooleanQuery.java:385)&lt;br/&gt;
        at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:163)&lt;br/&gt;
        at org.apache.lucene.search.Query.weight(Query.java:94)&lt;br/&gt;
        at org.apache.lucene.search.Searcher.createWeight(Searcher.java:175)&lt;br/&gt;
        at org.apache.lucene.search.Searcher.search(Searcher.java:126)&lt;br/&gt;
        at org.apache.lucene.search.Searcher.search(Searcher.java:105)&lt;br/&gt;
        at org.apache.solr.search.SolrIndexSearcher.getDocListNC(SolrIndexSearcher.java:966)&lt;br/&gt;
        at org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:838)&lt;br/&gt;
        at org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:269)&lt;br/&gt;
        at org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:160)&lt;br/&gt;
        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:167)&lt;br/&gt;
        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)&lt;br/&gt;
        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1156)&lt;br/&gt;
        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:341)&lt;br/&gt;
        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:272)&lt;br/&gt;
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)&lt;br/&gt;
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)&lt;br/&gt;
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)&lt;br/&gt;
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)&lt;br/&gt;
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:729)&lt;br/&gt;
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)&lt;br/&gt;
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)&lt;br/&gt;
        at org.mortbay.jetty.Server.handle(Server.java:324)&lt;br/&gt;
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)&lt;br/&gt;
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)&lt;br/&gt;
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)&lt;br/&gt;
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)&lt;br/&gt;
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)&lt;br/&gt;
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)&lt;br/&gt;
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12403257">SOLR-737</key>
            <summary>Incorrect 500 error reported with maxClausCount limit</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="asnagy">Andrew Nagy</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Aug 2008 15:57:37 +0100</created>
                <updated>Fri, 10 May 2013 11:40:48 +0100</updated>
                            <resolved>Thu, 28 Aug 2008 22:04:20 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12626611" author="asnagy" created="Thu, 28 Aug 2008 16:17:21 +0100"  >&lt;p&gt;Why has this been relegated to an improvement and held to 1.4?&lt;/p&gt;

&lt;p&gt;This is a major showstopper bug for me - unless I am understanding something incorrectly?&lt;/p&gt;</comment>
                            <comment id="12626615" author="markrmiller@gmail.com" created="Thu, 28 Aug 2008 16:22:11 +0100"  >&lt;p&gt;Because its an artificial limitation from lucene - truncation queries expand to one clause per possible term in the index - generate enough of these clauses and you have a &lt;b&gt;really&lt;/b&gt; slow search. Lucene bails at the default of 1024. Not sure if this setting is available in solr, but as Otis marked as improvement, I would guess not and the idea is to add it. Its not a bug though - your wildcard term is just matching over 1024 terms in the index.&lt;/p&gt;</comment>
                            <comment id="12626619" author="asnagy" created="Thu, 28 Aug 2008 16:27:11 +0100"  >&lt;p&gt;Thanks Mark for clarification.  This makes sense now.  Solr does already have a configurable maxClauseCount and the default is 1024.&lt;/p&gt;

&lt;p&gt;Can anyone supply more information on whether or not this is something that can be enhanced in Lucene - for me this is a very important query and since I have well over a million documents - I will never be able to issue this query.&lt;/p&gt;</comment>
                            <comment id="12626620" author="ehatcher" created="Thu, 28 Aug 2008 16:32:06 +0100"  >&lt;p&gt;Andrew - for one, you can increase the boolean clause limit (at the risk of a less performant query).  In solrconfig, adjust this: &amp;lt;maxBooleanClauses&amp;gt;1024&amp;lt;/maxBooleanClauses&amp;gt;&lt;/p&gt;

&lt;p&gt;Also, there are many tricks that can be played to make wildcard querying more efficient if you are willing to sacrifice index size and manage index analyzer and query analyzer carefully.  Have a look this topic in the java-user@lucene archives.  I did a lot of work once upon a time for a client that involved term rotation during indexing and then morphing wildcard queries to have maximal prefix for best efficiency.&lt;/p&gt;

&lt;p&gt;As a thought experiment - consider what you&apos;d do if you had to satisfy a patrons request for &quot;find me all books matching r*a* in the title&quot; using a card catalog system!   &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12626621" author="asnagy" created="Thu, 28 Aug 2008 16:32:25 +0100"  >&lt;p&gt;Sorry to keep blathering on - but I am trying to understand this issue better.&lt;/p&gt;

&lt;p&gt;If I issue the query (r* AND fisher) the results come back to me immediately ... no slow down what so ever.  And an r* is going to have many many more possibilities than r*a* - it still seems like there is a bug here.&lt;/p&gt;

&lt;p&gt;Can anyone clarify how lucene handles this?&lt;/p&gt;</comment>
                            <comment id="12626628" author="yseeley@gmail.com" created="Thu, 28 Aug 2008 16:40:09 +0100"  >&lt;p&gt;r* is a prefix query that Solr turns into a ConstantScorePrefixQuery&lt;br/&gt;
r*a* is a wildcard query.... it should eventually get the same treatment, but we don&apos;t currently have a ConstantScoreWildcardQuery.&lt;/p&gt;</comment>
                            <comment id="12626640" author="yseeley@gmail.com" created="Thu, 28 Aug 2008 17:37:30 +0100"  >&lt;p&gt;Here&apos;s a quick patch to fix things.&lt;/p&gt;</comment>
                            <comment id="12626648" author="yseeley@gmail.com" created="Thu, 28 Aug 2008 18:01:42 +0100"  >&lt;p&gt;Thinking on this a little further, I do think this is a bug, and I do think it warrants going into 1.3&lt;/p&gt;

&lt;p&gt;The original range and prefix queries were broken, and I fixed them via ConstantScoreQuery.  I never did it for wildcard query because the company I worked for at the time didn&apos;t use them.  But any query that explodes when you change the index is arguably broken.&lt;/p&gt;

&lt;p&gt;Objections to this going into 1.3?&lt;/p&gt;</comment>
                            <comment id="12626653" author="shalinmangar" created="Thu, 28 Aug 2008 18:14:03 +0100"  >&lt;p&gt;+1 for marking for 1.3&lt;/p&gt;

&lt;p&gt;Does it also make execution of these queries any faster? Sorry, I&apos;m not very familiar with ConstantScoreQuery and related Lucene classes.&lt;/p&gt;</comment>
                            <comment id="12626655" author="yseeley@gmail.com" created="Thu, 28 Aug 2008 18:19:25 +0100"  >&lt;blockquote&gt;&lt;p&gt;Does it also make execution of these queries any faster?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On balance, I think so.  If only a few terms would be matched, it will be a little slower.  If a lot of terms are matched, then it will normally be faster.&lt;/p&gt;</comment>
                            <comment id="12626738" author="yseeley@gmail.com" created="Thu, 28 Aug 2008 22:04:19 +0100"  >&lt;p&gt;committed.&lt;br/&gt;
I&apos;m currently figuring out how to do a merge to commit it to the 1.3 branch also.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12389107" name="SOLR-737.patch" size="4697" author="yseeley@gmail.com" created="Thu, 28 Aug 2008 17:37:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Aug 2008 15:22:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6881</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxpin:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20453</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>