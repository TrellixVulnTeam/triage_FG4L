<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:15:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1662/SOLR-1662.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1662] BufferedTokenStream incorrect cloning</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1662</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;As part of writing tests for &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1657&quot; title=&quot;convert the rest of solr to use the new tokenstream API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1657&quot;&gt;&lt;del&gt;SOLR-1657&lt;/del&gt;&lt;/a&gt;, I rewrote one of the base classes (BaseTokenTestCase) to use the new TokenStream API, but also with some additional safety.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tsToString(TokenStream in) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    StringBuilder out = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringBuilder();
    TermAttribute termAtt = (TermAttribute) in.addAttribute(TermAttribute.class);
    &lt;span class=&quot;code-comment&quot;&gt;// extra safety to enforce, that the state is not preserved and also
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// assign bogus values
&lt;/span&gt;    in.clearAttributes();
    termAtt.setTermBuffer(&lt;span class=&quot;code-quote&quot;&gt;&quot;bogusTerm&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (in.incrementToken()) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (out.length() &amp;gt; 0)
        out.append(&apos; &apos;);
      out.append(termAtt.term());
      in.clearAttributes();
      termAtt.setTermBuffer(&lt;span class=&quot;code-quote&quot;&gt;&quot;bogusTerm&quot;&lt;/span&gt;);
    }

    in.close();
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; out.toString();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Setting the term text to bogus values helps find bugs in tokenstreams that do not clear or clone properly. In this case there is a problem with a tokenstream AB_AAB_Stream in TestBufferedTokenStream, it converts A B -&amp;gt; A A B but does not clone, so the values get overwritten.&lt;/p&gt;

&lt;p&gt;This can be fixed in two ways: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;BufferedTokenStream does the cloning&lt;/li&gt;
	&lt;li&gt;subclasses are responsible for the cloning&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The question is which one should it be?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443531">SOLR-1662</key>
            <summary>BufferedTokenStream incorrect cloning</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Dec 2009 13:51:52 +0000</created>
                <updated>Thu, 8 Jul 2010 20:55:43 +0100</updated>
                            <resolved>Thu, 17 Dec 2009 20:48:39 +0000</resolved>
                                    <version>1.4</version>
                                    <fixVersion>1.4.1</fixVersion>
                    <fixVersion>1.5</fixVersion>
                    <fixVersion>3.1</fixVersion>
                    <fixVersion>4.0-ALPHA</fixVersion>
                                    <component>Schema and Analysis</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12791370" author="thetaphi" created="Wed, 16 Dec 2009 14:03:37 +0000"  >&lt;p&gt;Just the short desription from the API side in Lucene:&lt;br/&gt;
Lucene&apos;s documentation of TokenStream.next() says: &quot;The returned Token is a &quot;full private copy&quot; (not re-used across calls to next())&quot;. AB_AAB_Stream.process() duplicates the token by just putting it uncloned into the outQueue. As the consumer of the BufferedTokenStream assumes that the Token is private it is allowed to change it - and by that it also changes the token in the outQueue. If you e.g. put another TokenFilter in fromt of this AB_AAB_Stream, and modify the token there it would break.&lt;br/&gt;
In my opinion, the responsibility to clone is in AB_AAB_Stream, BufferedTokenStream will never return the same token twice by itsself. So its a bug in the test. But Robert told me that e.g. RemoveDuplicates has a similar problem.&lt;br/&gt;
The general contract for writing such streams is: whenever you return a Token from next(), never put it somewhere else uncloned, because the caller can change it.&lt;/p&gt;

&lt;p&gt;The fix is to do: write((Token) t.clone());&lt;/p&gt;</comment>
                            <comment id="12791374" author="rcmuir" created="Wed, 16 Dec 2009 14:09:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;but Robert told me that e.g. RemoveDuplicates has a similar problem.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, there is no cloning in RemoveDuplicates. CommonGrams creates a new Token() when it grams, but its not clear that this one is correct either.&lt;/p&gt;

&lt;p&gt;So if we decide its the responsibility of the subclass, these implementations need thorough tests to see if they are ok or not.&lt;br/&gt;
If we add the cloning to BufferedTokenStream itself, then we know they are ok... &lt;/p&gt;</comment>
                            <comment id="12791866" author="shalinmangar" created="Thu, 17 Dec 2009 10:15:46 +0000"  >&lt;blockquote&gt;
&lt;p&gt;So if we decide its the responsibility of the subclass, these implementations need thorough tests to see if they are ok or not.&lt;br/&gt;
If we add the cloning to BufferedTokenStream itself, then we know they are ok...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think cloning should be done by sub-classes before writing. If BufferedTokenStream clones the token then every sub-class pays the price even though the use-case may just be to throw the token away.&lt;/p&gt;</comment>
                            <comment id="12791867" author="thetaphi" created="Thu, 17 Dec 2009 10:19:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think cloning should be done by sub-classes before writing. If BufferedTokenStream clones the token then every sub-class pays the price even though the use-case may just be to throw the token away.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, that was what i said in my first comment, too. Because BufferedTokenStream itsself never reuses the token. The problem is the test and RemoveDuplicates, that push the same instance twice into the queue.&lt;/p&gt;</comment>
                            <comment id="12791888" author="rcmuir" created="Thu, 17 Dec 2009 11:45:19 +0000"  >&lt;p&gt;cool, will work up a patch with javadocs wordage (I think we need this at least, its not obvious and there is no mention of it), and any fixes.&lt;/p&gt;</comment>
                            <comment id="12791910" author="rcmuir" created="Thu, 17 Dec 2009 13:06:21 +0000"  >&lt;p&gt;attached is patch to fix the javadocs and test (this same test is also an example in the javadocs header...)&lt;/p&gt;

&lt;p&gt;edit: also btw i finished converting the tests to assertTokenStreamContents for the other BufferedTokenStreams, there are no problems in DuplicateFilter or CommonGrams, so this should be all we need.&lt;/p&gt;</comment>
                            <comment id="12791940" author="thetaphi" created="Thu, 17 Dec 2009 14:12:41 +0000"  >&lt;p&gt;+1 Looks good!&lt;/p&gt;</comment>
                            <comment id="12792122" author="shalinmangar" created="Thu, 17 Dec 2009 20:48:39 +0000"  >&lt;p&gt;Committed revision 891889.&lt;/p&gt;

&lt;p&gt;Thanks Robert and Uwe!&lt;/p&gt;</comment>
                            <comment id="12872780" author="hossman" created="Fri, 28 May 2010 03:52:50 +0100"  >
&lt;p&gt;Correcting Fix Version based on CHANGES.txt, see this thread for more details...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12873375" author="hossman" created="Sun, 30 May 2010 05:41:00 +0100"  >&lt;p&gt;Committed revision 949472.&lt;/p&gt;

&lt;p&gt;merged to branch-1.4 for 1.4.1&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12443422">SOLR-1657</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12428290" name="SOLR-1662.patch" size="1568" author="rcmuir" created="Thu, 17 Dec 2009 13:06:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 16 Dec 2009 14:03:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxjxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19548</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>