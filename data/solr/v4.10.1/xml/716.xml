<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:17:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-716/SOLR-716.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-716] Support properties in configuration files</title>
                <link>https://issues.apache.org/jira/browse/SOLR-716</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Initially suggested by Hoss at &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-350?focusedCommentId=12562834#action_12562834&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/SOLR-350?focusedCommentId=12562834#action_12562834&lt;/a&gt; and taken forward by Henri in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-646&quot; title=&quot;Configuration properties enhancements in solr.xml&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-646&quot;&gt;SOLR-646&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Allows users to define global as well as core-specific properties in solr.xml which can be used in solrconfig.xml and schema.xml
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;solr persistent=&lt;span class=&quot;code-quote&quot;&gt;&quot;false&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;property name=&lt;span class=&quot;code-quote&quot;&gt;&quot;var&quot;&lt;/span&gt; value=&lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;cores adminPath=&lt;span class=&quot;code-quote&quot;&gt;&quot;/admin/cores&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;core name=&lt;span class=&quot;code-quote&quot;&gt;&quot;core0&quot;&lt;/span&gt; instanceDir=&lt;span class=&quot;code-quote&quot;&gt;&quot;core0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;property name=&lt;span class=&quot;code-quote&quot;&gt;&quot;var&quot;&lt;/span&gt; value=&lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/core&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;core name=&lt;span class=&quot;code-quote&quot;&gt;&quot;core1&quot;&lt;/span&gt; instanceDir=&lt;span class=&quot;code-quote&quot;&gt;&quot;core1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/cores&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/solr&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;The following core-specific properties will be added automatically:
	&lt;ul&gt;
		&lt;li&gt;solr.core.instanceDir&lt;/li&gt;
		&lt;li&gt;solr.core.name&lt;/li&gt;
		&lt;li&gt;solr.core.configName&lt;/li&gt;
		&lt;li&gt;solr.core.schemaName&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;The variable substitution will be done in this fall-back order &amp;#8211; core-specific, implicit, global, system properties.&lt;/li&gt;
	&lt;li&gt;The properties defined in solr.xml should also be persisted back as is (without evaluation).&lt;/li&gt;
&lt;/ol&gt;
</description>
                <environment></environment>
        <key id="12402888">SOLR-716</key>
            <summary>Support properties in configuration files</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="shalinmangar">Shalin Shekhar Mangar</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Aug 2008 18:01:52 +0100</created>
                <updated>Fri, 10 May 2013 11:40:19 +0100</updated>
                            <resolved>Sat, 23 Aug 2008 17:28:25 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12624997" author="shalinmangar" created="Sat, 23 Aug 2008 00:11:41 +0100"  >&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;SolrResourceLoader keeps a reference to the CoreDescriptor to get access to the core specific properties without breaking API compatibility.&lt;/li&gt;
	&lt;li&gt;CoreContainer and CoreDescriptor keep a Properties instance each for global and core-specific properties respectively&lt;/li&gt;
	&lt;li&gt;DOMUtil#substituteSystemProperties has been refactored (without breaking compatibility) to another method which accepts a Properties instance. This instance is checked for a value failing which, System#getProperty is used.&lt;/li&gt;
	&lt;li&gt;TestSolrProperties is a test for this borrowed from Henri&apos;s patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-646&quot; title=&quot;Configuration properties enhancements in solr.xml&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-646&quot;&gt;SOLR-646&lt;/a&gt;. It is actually in SolrJ test sources rather than main sources for ease of testing.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The only thing not supported is that users cannot specify a variable inside solr.xml itself. Variables can only be used in the solrconfig.xml and schema.xml files (actually they can be used in any instance of Config class).&lt;/p&gt;

&lt;p&gt;Reviews and comments are invited.&lt;/p&gt;</comment>
                            <comment id="12625028" author="henrib" created="Sat, 23 Aug 2008 08:06:59 +0100"  >
&lt;blockquote&gt;&lt;p&gt;SolrResourceLoader keeps a reference to the CoreDescriptor&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It would seem preferable &amp;amp; possible to only store the properties (versus the CoreDescriptor) in the SolrResourceLoader; this is the only piece needed for evaluation.&lt;br/&gt;
IMHO, the CoreDescriptor giving potential access to everything (through the CoreContainer), it should not be shared/stored outside of the SolrCore without careful impact consideration.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;users cannot specify a variable inside solr.xml &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You could do a second evaluation pass to expand the property values (if they are property expressions) created for the CoreContainer and for each CoreDescriptor.&lt;br/&gt;
If you were though, you&apos;d need to keep the property expression map &amp;amp; the property value map separated.&lt;/p&gt;</comment>
                            <comment id="12625031" author="shalinmangar" created="Sat, 23 Aug 2008 09:03:42 +0100"  >&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Per Henri&apos;s comment, SolrResourceLoader now keeps a reference to the Properties instance instead of keeping a reference to CoreDescriptor&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="12625032" author="noble.paul" created="Sat, 23 Aug 2008 09:07:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;It would seem preferable &amp;amp; possible to only store the properties (versus the CoreDescriptor) in the SolrResourceLoader; this is the only piece needed for evaluation.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;CoreDescriptor can be easily obtained from SolrCore anyway and SolrCore is available to every single class in Solr . SolrResourceLoader is our own class and it does not expose the object (it is private and there is no getter). This enables the resourceloader to get access to any other property from CodeDescriptor (in future) if needed . &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;users cannot specify a variable inside solr.xml &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is it very useful ? considering that it can only substitute system properties?&lt;/p&gt;</comment>
                            <comment id="12625033" author="shalinmangar" created="Sat, 23 Aug 2008 09:10:33 +0100"  >&lt;blockquote&gt;&lt;p&gt;You could do a second evaluation pass to expand the property values (if they are property expressions) created for the CoreContainer and for each CoreDescriptor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We can do that but that will require modifying the Config constructor to pass in a boolean parameter &quot;substituteProperties&quot;. If set to false, Config should not try to substitute properties on the given node. When creating the Config object for solr.xml itself, we don&apos;t know the properties because we haven&apos;t got that point yet so we must suppress substitution. Later when we have read the global properties and we start reading the &quot;core&quot; node, we can substitute global+system properties on the &quot;core&quot; sub-tree. We can do that but I&apos;m not sure if that&apos;s necessary. Is it very useful?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you were though, you&apos;d need to keep the property expression map &amp;amp; the property value map separated.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I didn&apos;t understand what you meant. Can you elaborate?&lt;/p&gt;</comment>
                            <comment id="12625036" author="noble.paul" created="Sat, 23 Aug 2008 09:38:32 +0100"  >&lt;p&gt;I guess what is already there meets  most of the requirements . May be more enhancements can come in Solr1.4. &lt;/p&gt;</comment>
                            <comment id="12625040" author="henrib" created="Sat, 23 Aug 2008 10:41:20 +0100"  >&lt;p&gt;property expressions can be used in solr.xml &amp;amp; are preserved during solr.xml persistence (solr-716.patch).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you were though, you&apos;d need to keep the property expression map &amp;amp; the property value map separated&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;CoreDescriptor members can be property expressions - thus a map of expressions in both CoreDescriptor &amp;amp; CoreContainer to keep them around so we can reevaluate &amp;amp; persist them.&lt;br/&gt;
.&lt;br/&gt;
substituteProperties is made explicit so we can choose when to run it (instead of a ctor modification) and the substituteProperties() method would have been necessary anyway in that case.&lt;/p&gt;</comment>
                            <comment id="12625041" author="shalinmangar" created="Sat, 23 Aug 2008 11:56:22 +0100"  >&lt;p&gt;Henri &amp;#8211; I&apos;d like some help in understanding how having expressions in solr.xml itself help make multi cores easier to use. Can we see a use-case?&lt;/p&gt;</comment>
                            <comment id="12625046" author="henrib" created="Sat, 23 Aug 2008 13:27:52 +0100"  >
&lt;p&gt;So I can define properties in a core scope based on properties defined in the core-container scope.&lt;br/&gt;
Seems like a natural &amp;amp; expected feature.&lt;br/&gt;
Most of the code to allow idem-potent persistence allows it almost for free.&lt;br/&gt;
I did not expect that getting back all the solr-646 feature set (beside include) with very little modifications to your code would re-create a problem.&lt;br/&gt;
Sorry, I wont interfere again.&lt;/p&gt;

</comment>
                            <comment id="12625047" author="shalinmangar" created="Sat, 23 Aug 2008 13:39:40 +0100"  >&lt;p&gt;Oh no, no problem here. Interfere is the wrong word &amp;#8211; more eyes and hands can only help &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I only wanted to understand how it helps since I haven&apos;t used multiple cores a lot.&lt;/p&gt;

&lt;p&gt;The patch looks good, some comments:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Why is the public constructor of CoreContainer made package private?&lt;/li&gt;
	&lt;li&gt;Can we remove the properties parameter in CoreContainer#evalExpressions. It is confusing to call this method with two properties instances.&lt;/li&gt;
	&lt;li&gt;Note that the way you create coreProperties in CoreContainer#create(SolrCore) method, the implicit properties are set &lt;b&gt;after&lt;/b&gt; SolrConfig is created. Unless I&apos;m misunderstanding something, you will not be able to use the implicit/automatic properties in your solrconfig.xml.&lt;/li&gt;
	&lt;li&gt;Can you please help me understand what this bit of code in CoreContainer#persist is doing?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// restore the core expr name &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; it was one and has not changed
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; cname = StrUtils.join(aliases, &apos;,&apos;);
    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; pcore = dcore.getCoreExpressions();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (pcore != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; namex = pcore.get(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (namex != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; namev = DOMUtil.substituteProperty(namex, loader.getProperties());
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (namev != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; namev.equals(cname))
          cname = namex;
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="12625075" author="shalinmangar" created="Sat, 23 Aug 2008 16:38:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;So I can define properties in a core scope based on properties defined in the core-container scope. Seems like a natural &amp;amp; expected feature.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ve been thinking more on this. The core scope already inherits all properties defined in container scope. You can also override them. The only thing which is not possible is having expressions in the attributes of the &amp;lt;core&amp;gt; node such as name, instanceDir etc. Is that really necessary? If you enable expressions in a file whose information can be modified at run-time then it becomes a bit more complicated to persist back. You&apos;d need to track both expressions and keep their evaluated values separately instead of just one object.&lt;/p&gt;

&lt;p&gt;I feel that this discussion should not hold up the 1.3 release any more. Let us go ahead with the patch I posted and handle enhancements as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-646&quot; title=&quot;Configuration properties enhancements in solr.xml&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-646&quot;&gt;SOLR-646&lt;/a&gt; with 1.3.1 or 1.4 which ever comes first.&lt;/p&gt;</comment>
                            <comment id="12625077" author="shalinmangar" created="Sat, 23 Aug 2008 16:43:51 +0100"  >&lt;p&gt;No changes in functionality. A bit of javadocs added.&lt;/p&gt;

&lt;p&gt;I shall commit this shortly.&lt;/p&gt;</comment>
                            <comment id="12625080" author="henrib" created="Sat, 23 Aug 2008 17:26:40 +0100"  >&lt;p&gt;Might be post-commit but this will give a base to solr-646.&lt;br/&gt;
Fixed all issues raised by Shalin in previous version.&lt;br/&gt;
Added the persistence verification test. (thus the size bloat).&lt;/p&gt;</comment>
                            <comment id="12625081" author="shalinmangar" created="Sat, 23 Aug 2008 17:28:25 +0100"  >&lt;p&gt;Committed revision 688359.&lt;/p&gt;

&lt;p&gt;Thank you Henri for your support and flexibility! Let us work towards all required enhancements in the next release.&lt;/p&gt;

&lt;p&gt;Thanks to everybody who helped out in the related issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12400757">SOLR-646</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12388797" name="SOLR-716.patch" size="32483" author="shalinmangar" created="Sat, 23 Aug 2008 16:43:51 +0100"/>
                            <attachment id="12388789" name="SOLR-716.patch" size="32140" author="shalinmangar" created="Sat, 23 Aug 2008 09:03:42 +0100"/>
                            <attachment id="12388777" name="SOLR-716.patch" size="32262" author="shalinmangar" created="Sat, 23 Aug 2008 00:11:41 +0100"/>
                            <attachment id="12388798" name="solr-716.patch" size="43685" author="henrib" created="Sat, 23 Aug 2008 17:26:40 +0100"/>
                            <attachment id="12388790" name="solr-716.patch" size="37167" author="henrib" created="Sat, 23 Aug 2008 10:41:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 23 Aug 2008 07:06:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6901</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxpnb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20474</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>