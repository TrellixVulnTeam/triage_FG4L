<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:24:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-281/SOLR-281.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-281] Search Components (plugins)</title>
                <link>https://issues.apache.org/jira/browse/SOLR-281</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;A request handler with pluggable search components for things like:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;standard&lt;/li&gt;
	&lt;li&gt;dismax&lt;/li&gt;
	&lt;li&gt;more-like-this&lt;/li&gt;
	&lt;li&gt;highlighting&lt;/li&gt;
	&lt;li&gt;field collapsing&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For more discussion, see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/search-components-%28plugins%29-tf3898040.html#a11050274&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/search-components-%28plugins%29-tf3898040.html#a11050274&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12372788">SOLR-281</key>
            <summary>Search Components (plugins)</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryantxu">Ryan McKinley</assignee>
                                    <reporter username="ryantxu">Ryan McKinley</reporter>
                        <labels>
                    </labels>
                <created>Mon, 2 Jul 2007 01:28:49 +0100</created>
                <updated>Fri, 10 May 2013 11:41:02 +0100</updated>
                            <resolved>Sun, 25 May 2008 04:08:11 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>9</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="12509472" author="ryantxu" created="Mon, 2 Jul 2007 01:33:17 +0100"  >&lt;p&gt;This is a quick - poorly documented / no testing - implementation that mimics the current Standard query.&lt;/p&gt;

&lt;p&gt;It is mostly intended to flush out design issues.  &lt;/p&gt;

&lt;p&gt;This works by sticking a &apos;ResponseBuilder&apos; in the context and sharing that between each component.&lt;/p&gt;</comment>
                            <comment id="12511678" author="pberkel" created="Wed, 11 Jul 2007 08:19:16 +0100"  >&lt;p&gt;I really like this modular approach to handling search requests, it will greatly simplify the process of adding new functionality (e.g. collapsing, faceting, more-like-this) to existing handlers without the need for unnecessary code replication.  My primary goal is to extend the more-like-this handler capabilities and make them available to other handlers (such as dismax), and I think the proposed solution is a good approach.&lt;/p&gt;

&lt;p&gt;Some issues that I can forsee though are:&lt;/p&gt;

&lt;p&gt;1) Ordering: its fairly obvious that certain handlers need to be called before others (e.g. standard / dismax query parsing before faceting / highlighting) however there may be cases where the required sequence of events may be more subtle (e.g. faceting the results of a more-like-this query).  There probably needs to be some mechanism to determine the order in which the components are prepared / processed.&lt;/p&gt;

&lt;p&gt;2) Dependancy: a situation may arise where a component depends on operations performed by another component (e.g. more-like-this may take advantage of the dismax &apos;bq&apos; parameter), perhaps there needs to be some method of specifying component dependency so that the SearchHandler can load and process required components automatically?&lt;/p&gt;

&lt;p&gt;I hope this make sense, I&apos;m fairly new to Solr development so I&apos;m afraid my contributions to this issue would be mostly limited to (hopefully helpful) ideas and suggestions however I&apos;m happy to tinker with the patched code from above and help test this new component framework as it is developed.&lt;/p&gt;

&lt;p&gt;cheers,&lt;br/&gt;
Pieter&lt;/p&gt;</comment>
                            <comment id="12516732" author="ryantxu" created="Tue, 31 Jul 2007 17:50:22 +0100"  >
&lt;p&gt;&amp;gt; Is anybody working on this issue? &lt;/p&gt;

&lt;p&gt;not actively.&lt;/p&gt;


&lt;p&gt;&amp;gt; if not, I can start looking at it.&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;Of course!&lt;/p&gt;</comment>
                            <comment id="12517176" author="sharad" created="Thu, 2 Aug 2007 09:21:42 +0100"  >&lt;p&gt;updatedprevious patch to work against trunk (r562043)&lt;/p&gt;</comment>
                            <comment id="12519386" author="sharad" created="Mon, 13 Aug 2007 09:44:08 +0100"  >&lt;p&gt;Following changes from the previous patch:-&lt;br/&gt;
-Supported components in DisMaxRequestHandler. Extended StandardRequestHandler and DisMaxRequestHandler from SearchHandler.&lt;br/&gt;
-Deprecated StandardRequestHandler and DisMaxRequestHandler&lt;br/&gt;
-Components configured via solrconfig.xml&lt;br/&gt;
-Added DisMaxResponseBuilder, DisMaxQueryComponent and DisMaxDebugComponent classes&lt;/p&gt;

&lt;p&gt;Built and tested successfully with junit.&lt;/p&gt;</comment>
                            <comment id="12520434" author="pberkel" created="Fri, 17 Aug 2007 02:49:35 +0100"  >&lt;p&gt;I just tried this patch on svn trunk (r566899) and got the following failures:&lt;/p&gt;

&lt;p&gt;$ patch -p0 &amp;lt; ../&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-281&quot; title=&quot;Search Components (plugins)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-281&quot;&gt;&lt;del&gt;SOLR-281&lt;/del&gt;&lt;/a&gt;-SearchComponents.patch&lt;br/&gt;
...&lt;br/&gt;
patching file src/java/org/apache/solr/handler/StandardRequestHandler.java&lt;br/&gt;
Hunk #1 succeeded at 17 with fuzz 1.&lt;br/&gt;
Hunk #2 FAILED at 45.&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/StandardRequestHandler.java.rej&lt;br/&gt;
...&lt;br/&gt;
patching file src/java/org/apache/solr/handler/DisMaxRequestHandler.java&lt;br/&gt;
Hunk #1 FAILED at 17.&lt;br/&gt;
1 out of 1 hunk FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/DisMaxRequestHandler.java.rej&lt;/p&gt;

&lt;p&gt;I suspect it is the changes made by &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-326&quot; title=&quot;cleanup eclipse warnings&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-326&quot;&gt;&lt;del&gt;SOLR-326&lt;/del&gt;&lt;/a&gt; that is causing the these problems, would it be possible for you to create a new patch?&lt;/p&gt;

&lt;p&gt;thanks,&lt;br/&gt;
Piete&lt;/p&gt;</comment>
                            <comment id="12520494" author="sharad" created="Fri, 17 Aug 2007 09:55:00 +0100"  >&lt;p&gt;Fixed the patch to work with the trunk.&lt;/p&gt;</comment>
                            <comment id="12525966" author="ryantxu" created="Sun, 9 Sep 2007 00:01:24 +0100"  >&lt;p&gt;Thanks Sharad!  this is looking good.&lt;/p&gt;

&lt;p&gt;I just updated it to work with trunk and cleaned up a few things. &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;made SearchComponent an abstract class rather then an interface.  This will make adding features in the future easier.&lt;/li&gt;
	&lt;li&gt;made SearchComponent implement SolrInfoMBean&lt;/li&gt;
	&lt;li&gt;added lots of ASF headers and comment stubs&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Yonik and/or Hoss...  if you have time to check this out, that would be great.  &lt;/p&gt;</comment>
                            <comment id="12527931" author="pberkel" created="Mon, 17 Sep 2007 03:52:28 +0100"  >&lt;p&gt;I&apos;m having trouble applying the latest patch to trunk (r575809) again:&lt;/p&gt;

&lt;p&gt;$ patch -p0 &amp;lt; ../&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-281&quot; title=&quot;Search Components (plugins)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-281&quot;&gt;&lt;del&gt;SOLR-281&lt;/del&gt;&lt;/a&gt;-SearchComponents.patch &lt;br/&gt;
...&lt;br/&gt;
patching file src/java/org/apache/solr/handler/StandardRequestHandler.java&lt;br/&gt;
Hunk #1 FAILED at 17.&lt;br/&gt;
Hunk #2 FAILED at 45.&lt;br/&gt;
2 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/StandardRequestHandler.java.rej&lt;br/&gt;
patching file src/java/org/apache/solr/handler/DisMaxRequestHandler.java&lt;br/&gt;
Hunk #2 FAILED at 118.&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/solr/handler/DisMaxRequestHandler.java.rej&lt;/p&gt;

&lt;p&gt;It also looks like the additions to solrconfig.xml have not been included in the latest patch either.  I was also going to suggest that it might be a good idea to support class shorthand notation, so org.apache.solr.handler.component.* can be written solr.component.* in solrconfig.xml.&lt;/p&gt;</comment>
                            <comment id="12527938" author="ryantxu" created="Mon, 17 Sep 2007 04:40:48 +0100"  >&lt;p&gt;updated to work with trunk.  &lt;/p&gt;

&lt;p&gt;Added the lost solrconfig.xml example:&lt;/p&gt;

&lt;p&gt;&amp;lt;requestHandler name=&quot;/search&quot; class=&quot;solr.SearchHandler&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;lst name=&quot;defaults&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;str name=&quot;echoParams&quot;&amp;gt;explicit&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;/lst&amp;gt;&lt;br/&gt;
    &amp;lt;arr name=&quot;components&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.QueryComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.FacetComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.MoreLikeThisComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.HighlightComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.DebugComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;/arr&amp;gt;&lt;br/&gt;
  &amp;lt;/requestHandler&amp;gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Re class aliases, it should work fine to put:&lt;br/&gt;
 solr.component.*&lt;br/&gt;
If we add &quot;org.apache.solr.handler.component.&quot; to the base list, you could just configure: org.apache.solr.handler.component.QueryComponent&lt;/p&gt;

</comment>
                            <comment id="12536667" author="henrib" created="Mon, 22 Oct 2007 14:37:26 +0100"  >&lt;p&gt;updated to work with trunk (587079);&lt;br/&gt;
updated HighlightComponent to use SolrHighlighter.&lt;/p&gt;

&lt;p&gt;junit 0 failures/0 errors on Solaris 10 &amp;amp; WinXP.&lt;/p&gt;

&lt;p&gt;I&apos;ve tried and failed to overcome the diff/patch rejects that Pieter experienced.&lt;br/&gt;
I generated the patch from a Solaris 10 using GNU patch with:&lt;br/&gt;
svn diff --diff-cmd /usr/bin/diff -x &quot;-w -B -b -E -d -N -u&quot; &amp;gt; ~/solr-281.patch&lt;br/&gt;
I applied it to a clean trunk on Solaris 10 &amp;amp;  WinXP (using cygwin) with:&lt;br/&gt;
patch -u -p 0 &amp;lt; ~/solr-281.patch&lt;/p&gt;

&lt;p&gt;StandardRequestHandler.java generates rejects; replace the whole class definition with the &apos;-&apos; prefixed lines of the reject.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;WARNING&lt;/b&gt; since this is a &apos;unified&apos; patch and not wanting to mess with Sharad &amp;amp; Ryan&apos;s patch versions, I attached the patch as solr-281.patch (&lt;b&gt;not&lt;/b&gt; as &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-281&quot; title=&quot;Search Components (plugins)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-281&quot;&gt;&lt;del&gt;SOLR-281&lt;/del&gt;&lt;/a&gt;-SearchComponents.patch)&lt;/p&gt;
</comment>
                            <comment id="12536878" author="yseeley@gmail.com" created="Tue, 23 Oct 2007 02:55:34 +0100"  >&lt;p&gt;FYI, I&apos;m in the process of updating this patch to work with trunk again (pluggable query parser stuff... &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-334&quot; title=&quot;pluggable query parsers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-334&quot;&gt;&lt;del&gt;SOLR-334&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12536994" author="henrib" created="Tue, 23 Oct 2007 14:10:35 +0100"  >&lt;p&gt;Just a refresh on the latest trunk (587494) to keep things working before we got Yonik&apos;s proper version.&lt;br/&gt;
junit 0 errors 0 failures.&lt;br/&gt;
Same patch production process.&lt;/p&gt;</comment>
                            <comment id="12537324" author="yseeley@gmail.com" created="Wed, 24 Oct 2007 14:59:54 +0100"  >&lt;p&gt;Here&apos;s a new (smaller) patch that utilizes pluggable query parsers, and&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removes DisMax specific modules since dismax specific logic is limited to query construction&lt;/li&gt;
	&lt;li&gt;DisMax request handler is now just the standard handler with defType=dismax added as a default&lt;/li&gt;
	&lt;li&gt;removed variable RequestBuilder class logic since it seems unnecessary... if two non-standard components want to communicate something, they can use the Context or the Response.  (any reason I&apos;m missing why it should stay?)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thoughts on these changes?&lt;/p&gt;

&lt;p&gt;We need to think through all the members of ResponseBuilder carefully and decide what component sets/reads them in what phase (and if that makes the most sense).&lt;/p&gt;

&lt;p&gt;Should ResponseBuilder have methods instead of members?  If so, that would allow a component to perhaps even replace the ResponseBuilder and delegate to the original.&lt;/p&gt;

&lt;p&gt;How will a users custom component get configuration?  Should components be a full plugins with an init() for configuration?&lt;/p&gt;

</comment>
                            <comment id="12537626" author="ryantxu" created="Thu, 25 Oct 2007 16:04:00 +0100"  >&lt;p&gt;Yonik, i could not get your last patch to apply cleanly to trunk.  This is my best attempt to resolve the conflicts and fix a few things.&lt;/p&gt;

&lt;p&gt;1. remove the call to getResponseBuilder() in SearchComponent&lt;br/&gt;
2. the timing info was commented out of debugging&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The dismax changes look great - i like the new query parser stuff!&lt;/p&gt;

&lt;p&gt;&amp;gt; - removed variable RequestBuilder class logic since it seems unnecessary... &lt;br/&gt;
&amp;gt; if two non-standard components want to communicate something, they can &lt;br/&gt;
&amp;gt; use the Context or the Response.  (any reason I&apos;m missing why it should stay?)&lt;/p&gt;

&lt;p&gt;If at all possible, I think we should do our best to avoid depending on Map&amp;lt;String&amp;gt; for an interface.&lt;/p&gt;

&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; We need to think through all the members of ResponseBuilder carefully and decide what component sets/reads them in what phase (and if that makes the most sense).&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;yes &lt;/p&gt;

&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; Should ResponseBuilder have methods instead of members? If so, that would allow a component to perhaps even replace the ResponseBuilder and delegate to the original.&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;yes, that makes sense.  How would a component replace the ResponseBuilder?  If it could do that, there is obviously no need for the variable RequestBuilder class logic &lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; How will a users custom component get configuration? Should components be a full plugins with an init() for configuration?&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;As is, they are defined in a &quot;components&quot; section for SearchHandler (from the example solrconfig.xml):&lt;/p&gt;

&lt;p&gt;  &amp;lt;requestHandler name=&quot;/search&quot; class=&quot;solr.SearchHandler&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;lst name=&quot;defaults&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;str name=&quot;echoParams&quot;&amp;gt;explicit&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;/lst&amp;gt;&lt;br/&gt;
    &amp;lt;arr name=&quot;components&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.QueryComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.FacetComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.MoreLikeThisComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.HighlightComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;org.apache.solr.handler.component.DebugComponent&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;/arr&amp;gt;&lt;br/&gt;
  &amp;lt;/requestHandler&amp;gt;&lt;/p&gt;

&lt;p&gt;Perhaps the components should be passed the init params?&lt;/p&gt;

&lt;p&gt;Unless there is a compelling reason, I don&apos;t think components need to be shared across request handlers thus justifying a top level component registry.&lt;/p&gt;


</comment>
                            <comment id="12537645" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 17:01:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;Yonik, i could not get your last patch to apply cleanly to trunk. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That&apos;s OK, the one you produced fails for me on a clean checkout too.... looks like maybe we hit a little corner case with patch/diff.&lt;br/&gt;
Should we perhaps commit this working version, marking ResponseBuilder as in-flux, and then continue generating patches from that???&lt;/p&gt;</comment>
                            <comment id="12537648" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 17:25:01 +0100"  >&lt;p&gt;I&apos;ll see if I can jiggle things a bit to get better patch behavior first...&lt;/p&gt;</comment>
                            <comment id="12537651" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 17:32:26 +0100"  >&lt;p&gt;OK, uploading the one that works for me now.&lt;/p&gt;</comment>
                            <comment id="12537652" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 17:38:50 +0100"  >&lt;p&gt;Hold on... this patch is double in size from the last for some reason.... deleting.&lt;/p&gt;</comment>
                            <comment id="12537655" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 17:49:23 +0100"  >&lt;p&gt;OK, this patch should do it... sorry for the noise.&lt;/p&gt;</comment>
                            <comment id="12537740" author="ryantxu" created="Thu, 25 Oct 2007 22:38:33 +0100"  >&lt;p&gt;ok, that one works (or close enough)&lt;/p&gt;

&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; Should we perhaps commit this working version, marking ResponseBuilder as in-flux, and then continue generating patches from that???&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;If  you feel comfortable with the big picture, yes, I think we should commit this and refine the ResponseBuilder and perhaps the configuration options in smaller patches.&lt;/p&gt;
</comment>
                            <comment id="12541650" author="ryantxu" created="Sun, 11 Nov 2007 18:47:48 +0000"  >&lt;p&gt;Here is an updated version of your patch that converts the ResponseBuilder public variables to private vars with get/set methods.&lt;/p&gt;

&lt;p&gt;How do you feel about committing this and working out the ResponseBuilder details in subsequent smaller patches?&lt;/p&gt;
</comment>
                            <comment id="12541785" author="henrib" created="Mon, 12 Nov 2007 14:29:47 +0000"  >&lt;p&gt;Not sure process-wise whether votes/watchers got a say, my apologies if not; +1 otherwise.&lt;/p&gt;</comment>
                            <comment id="12541786" author="yseeley@gmail.com" created="Mon, 12 Nov 2007 14:31:19 +0000"  >&lt;p&gt;&amp;gt; How do you feel about committing this and working out the ResponseBuilder details in subsequent smaller patches?&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;In this case I think the current patch represents the right direction, seems to work fine, and committing now will save effort of people  working on other patches.&lt;/p&gt;</comment>
                            <comment id="12541916" author="ryantxu" created="Mon, 12 Nov 2007 19:45:15 +0000"  >&lt;p&gt;The core changes are committed in rev594268.&lt;/p&gt;

&lt;p&gt;I will resolve this issue and open a new issue to track cleaning up the ResponseBuilder&lt;/p&gt;</comment>
                            <comment id="12541925" author="ryantxu" created="Mon, 12 Nov 2007 19:57:50 +0000"  >&lt;p&gt;Lets track ResponseBuilder issues with &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-410&quot; title=&quot;Audit the new ResponseBuilder class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-410&quot;&gt;&lt;del&gt;SOLR-410&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12544672" author="ryantxu" created="Thu, 22 Nov 2007 01:33:57 +0000"  >&lt;p&gt;The SearchComponent framework needs to allow for custom component initialization &amp;#8211; I previously believed this could be done from within the RequestHandler NamedList args.  In trying to use this for a custom component that needs to load a resource file, I found it is woefully inadequate.&lt;/p&gt;

&lt;p&gt;As Yonik suggested a while back (and I disagreed with), I now think components should be loaded and initialized the same way as RequestHandlers.  That is, a top level name based registry in SolrCore that SearchHandlers can share.   For example, solrconfig.xml could declare:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;searchComponent name=&lt;span class=&quot;code-quote&quot;&gt;&quot;query&quot;&lt;/span&gt;     class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.handler.component.QueryComponent&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;searchComponent name=&lt;span class=&quot;code-quote&quot;&gt;&quot;facet&quot;&lt;/span&gt;     class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.handler.component.FacetComponent&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;searchComponent name=&lt;span class=&quot;code-quote&quot;&gt;&quot;mlt&quot;&lt;/span&gt;       class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.handler.component.MoreLikeThisComponent&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;searchComponent name=&lt;span class=&quot;code-quote&quot;&gt;&quot;highlight&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.handler.component.HighlightComponent&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;searchComponent name=&lt;span class=&quot;code-quote&quot;&gt;&quot;debug&quot;&lt;/span&gt;     class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.handler.component.DebugComponent&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and a SearchHandler can pick and choose what components are used with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;requestHandler name=&lt;span class=&quot;code-quote&quot;&gt;&quot;/search&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;solr.SearchHandler&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;components&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;query&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;facet&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;mlt&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;highlight&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;debug&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/arr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/requestHandler&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, there should be a way to configure components to run before or after the standard component list without having to know and maintain what the &quot;standard&quot; list is.  For example, when we add field collapsing to the &apos;standard&apos; options, it should not require everyone to update their solrconfig.xml&lt;/p&gt;

&lt;p&gt;When &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-414&quot; title=&quot;Coherent plugin initialization strategy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-414&quot;&gt;&lt;del&gt;SOLR-414&lt;/del&gt;&lt;/a&gt; is committed, I will attach a patch using this strategy.&lt;/p&gt;</comment>
                            <comment id="12545892" author="ryantxu" created="Tue, 27 Nov 2007 16:18:32 +0000"  >&lt;p&gt;This patch uses &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-414&quot; title=&quot;Coherent plugin initialization strategy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-414&quot;&gt;&lt;del&gt;SOLR-414&lt;/del&gt;&lt;/a&gt; Initialization strategy for SearchComponents.  &lt;/p&gt;

&lt;p&gt;This makes SearchComponents a top level plugin (just like RequestHandlers) that get registered to a unique name in SolrCore.  A SearchHandler can configure the component chain using:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;requestHandler name=&lt;span class=&quot;code-quote&quot;&gt;&quot;/search&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;solr.SearchHandler&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;defaults&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;echoParams&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;explicit&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/lst&amp;gt;&lt;/span&gt;
    &amp;lt;!--
    By default, this will register the following components:
    
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;components&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;query&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;facet&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;mlt&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;highlight&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;debug&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/arr&amp;gt;&lt;/span&gt;
    
    To insert handlers before or after the &apos;standard&apos; components, use:
    
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;first-components&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;first&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/arr&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;last-components&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;last&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/arr&amp;gt;&lt;/span&gt;
    
    --&amp;gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/requestHandler&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12545911" author="yseeley@gmail.com" created="Tue, 27 Nov 2007 16:54:06 +0000"  >&lt;p&gt;The other idea I had was numeric positioning... query=1000, facet=2000, etc, and so a user could add their component at any point.  Perhaps your first/last is sufficient though.&lt;/p&gt;</comment>
                            <comment id="12545938" author="ryantxu" created="Tue, 27 Nov 2007 17:37:45 +0000"  >&lt;p&gt;The problem first/last is trying to solve is to let a custom handler automatically incorporate default changes to the standard components without editing solrconfig.xml.  &lt;/p&gt;

&lt;p&gt;Numeric positioning seems a bit brittle unless the &apos;standard&apos; components have a locked position.  Without opening the door to legacy problems, I don&apos;t see any good way to insert a component between &quot;facet&quot; and &quot;mlt&quot; without specifying the whole chain.&lt;/p&gt;</comment>
                            <comment id="12549548" author="ryantxu" created="Fri, 7 Dec 2007 20:20:42 +0000"  >&lt;p&gt;updated initialization patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-418&quot; title=&quot;Editorial Query Boosting Component&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-418&quot;&gt;&lt;del&gt;SOLR-418&lt;/del&gt;&lt;/a&gt;.  Without objection, I will commit this soon.&lt;/p&gt;</comment>
                            <comment id="12550031" author="dalals" created="Mon, 10 Dec 2007 12:20:05 +0000"  >&lt;p&gt;I am updating the distributed search patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-303&quot; title=&quot;Distributed Search over HTTP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-303&quot;&gt;&lt;del&gt;SOLR-303&lt;/del&gt;&lt;/a&gt;) with this patch.&lt;br/&gt;
I added the dist search components as, &lt;/p&gt;

&lt;p&gt;   &amp;lt;searchComponent name=&quot;gstat&quot;     class=&quot;org.apache.solr.handler.federated.component.GlobalCollectionStatComponent&quot; /&amp;gt;&lt;br/&gt;
   &amp;lt;searchComponent name=&quot;mqp&quot;     class=&quot;org.apache.solr.handler.federated.component.MainQPhaseComponent&quot; /&amp;gt;&lt;br/&gt;
   &amp;lt;searchComponent name=&quot;aqp&quot;     class=&quot;org.apache.solr.handler.federated.component.AuxiliaryQPhaseComponent&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;requestHandler name=&quot;/search&quot; class=&quot;solr.SearchHandler&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;lst name=&quot;defaults&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;str name=&quot;echoParams&quot;&amp;gt;explicit&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;/lst&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;arr name=&quot;last-components&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;gstat&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;mqp&amp;lt;/str&amp;gt;&lt;br/&gt;
      &amp;lt;str&amp;gt;aqp&amp;lt;/str&amp;gt;&lt;br/&gt;
    &amp;lt;/arr&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;/requestHandler&amp;gt;&lt;/p&gt;

&lt;p&gt;But it was not working.  On debugging i found that these added components were not getting registered.&lt;/p&gt;

&lt;p&gt;I made the following change in SolrCore.loadSearchComponents,&lt;/p&gt;

&lt;p&gt;    // NamedListPluginLoader&amp;lt;SearchComponent&amp;gt; loader = new NamedListPluginLoader&amp;lt;SearchComponent&amp;gt;( xpath, searchComponents );&lt;br/&gt;
    NamedListPluginLoader&amp;lt;SearchComponent&amp;gt; loader = new NamedListPluginLoader&amp;lt;SearchComponent&amp;gt;( xpath, components );&lt;/p&gt;</comment>
                            <comment id="12551058" author="ryantxu" created="Wed, 12 Dec 2007 18:34:04 +0000"  >&lt;p&gt;Sabyasachi - check that your patch does not comment out the loading line...  &lt;/p&gt;

&lt;p&gt;the committed version of this patch is not commented out:&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/repos/asf/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12564449" author="mdodsworth" created="Thu, 31 Jan 2008 18:32:15 +0000"  >&lt;p&gt;This is great; decomposing the handler and allowing the components to be wired up in the config really helps development (and maintenance of those changes). &lt;/p&gt;

&lt;p&gt;For my purposes, I needed to make a change to the way the dismax query was being generated. Using the DisMaxQParserPlugin as a template, I created my own QParser and associated QParserPlugin; changed the relevant bits; added a &amp;lt;queryParser...&amp;gt; entry in solrconfig.xml; added the &apos;defType&apos; parameter to the wanted SearchHandler configuration...and...all works well. &lt;/p&gt;

&lt;p&gt;Just a few comments: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I had to make the QParser parse() method public (as the new query parser may still need to use the existing query parsers (backup lucene parser, boost parser, function parser, etc).&lt;/li&gt;
	&lt;li&gt;The QParserPlugin class seems unnecessary: all it does is implement init() and add a createParser method. Why not just have the parser constructor take those arguments...or, if that can&apos;t be done, create an interface to allow the parser itself implement both init() and createParser() (or create()). It then avoids having to create 2 classes (in the case of DisMax, in the same file...which is not pretty).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12564453" author="yseeley@gmail.com" created="Thu, 31 Jan 2008 18:48:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;The QParserPlugin class seems unnecessary: all it does is implement init() and add a createParser method.  Why not just have the parser constructor take those arguments...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That would require instantiation with reflection I think.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;or, if that can&apos;t be done, create an interface to allow the parser itself implement both init() and createParser() (or create()). It then avoids having to create 2 classes (in the case of DisMax, in the same file...which is not pretty).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;QParserPlugin &lt;b&gt;is&lt;/b&gt; that interface essentially (except that its an class instead of an interface).  For library maintainers an abstract class is preferred over an interface for things that a user will extend... that way signature changes can be made in a backward compatible manner.&lt;/p&gt;</comment>
                            <comment id="12564739" author="mdodsworth" created="Fri, 1 Feb 2008 12:39:33 +0000"  >&lt;blockquote&gt;
&lt;p&gt;That would require instantiation with reflection I think. &lt;/p&gt;&lt;/blockquote&gt; 

&lt;p&gt;Reflection is already being used to create the QParserPlugins (SolrCore:1027 and AbstractPluginLoader:83) - I&apos;m guessing the reason for the plugin is just to avoid creating instances through reflection on every parse (as you could keep hold of the QParser class and call newInstance). The second point is moot, once you take away the need for createParser(...). &lt;/p&gt;

&lt;p&gt;It&apos;s really not that big-a-deal, in the scheme of things. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;QParserPlugin is that interface essentially (except that its an class instead of an interface). For library maintainers an abstract class is preferred over an interface for things that a user will extend... that way signature changes can be made in a backward compatible manner. &lt;/p&gt;&lt;/blockquote&gt; 

&lt;p&gt;As an aside, method signature changes are usually trivial to fix; personally, the pain of those fixes is favourable to extending an abstract class unnecessarily. &lt;br/&gt;
Are there any architectural reworking projects on the roadmap? I&apos;m sure backward compatibility is a massive concern; perhaps with the more modular plugin design route Solr is going down, those concerns can be addressed. If there&apos;s a chance of being accepted, I would love to contribute a move towards using Spring. &lt;/p&gt;
</comment>
                            <comment id="12564853" author="yseeley@gmail.com" created="Fri, 1 Feb 2008 18:11:06 +0000"  >&lt;p&gt;Followed up on solr-dev to avoid stealing more of this JIRA isse:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Re%3A--jira--Commented%3A-Search-Components-%28plugins%29-to15227648.html#a15227648&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re%3A--jira--Commented%3A-Search-Components-%28plugins%29-to15227648.html#a15227648&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12599647" author="ryantxu" created="Sun, 25 May 2008 04:08:11 +0100"  >&lt;p&gt;I&apos;ll mark this issue as &quot;fixed&quot; &amp;#8211; I&apos;m not sure why it was still open, the reason it was repoened has been resolved.  Any new issues should get their own JIRA issue&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12373878">SOLR-303</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12363992">SOLR-176</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12360581">SOLR-110</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12382376">SOLR-410</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12380792">SOLR-386</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12369145">SOLR-236</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12383035">SOLR-418</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12373351">SOLR-295</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12371255" name="SOLR-281-ComponentInit.patch" size="28312" author="ryantxu" created="Fri, 7 Dec 2007 20:20:42 +0000"/>
                            <attachment id="12370315" name="SOLR-281-ComponentInit.patch" size="27950" author="ryantxu" created="Tue, 27 Nov 2007 16:18:32 +0000"/>
                            <attachment id="12369330" name="SOLR-281-SearchComponents.patch" size="63365" author="ryantxu" created="Sun, 11 Nov 2007 18:47:47 +0000"/>
                            <attachment id="12368392" name="SOLR-281-SearchComponents.patch" size="60876" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 17:49:22 +0100"/>
                            <attachment id="12368383" name="SOLR-281-SearchComponents.patch" size="61342" author="ryantxu" created="Thu, 25 Oct 2007 16:04:00 +0100"/>
                            <attachment id="12365965" name="SOLR-281-SearchComponents.patch" size="71351" author="ryantxu" created="Mon, 17 Sep 2007 04:40:48 +0100"/>
                            <attachment id="12365417" name="SOLR-281-SearchComponents.patch" size="71166" author="ryantxu" created="Sun, 9 Sep 2007 00:01:22 +0100"/>
                            <attachment id="12364009" name="SOLR-281-SearchComponents.patch" size="59478" author="sharad" created="Fri, 17 Aug 2007 09:55:00 +0100"/>
                            <attachment id="12363687" name="SOLR-281-SearchComponents.patch" size="63685" author="sharad" created="Mon, 13 Aug 2007 09:44:08 +0100"/>
                            <attachment id="12363028" name="SOLR-281-SearchComponents.patch" size="26780" author="sharad" created="Thu, 2 Aug 2007 09:21:42 +0100"/>
                            <attachment id="12360900" name="SOLR-281-SearchComponents.patch" size="28884" author="ryantxu" created="Mon, 2 Jul 2007 01:33:17 +0100"/>
                            <attachment id="12368296" name="solr-281.patch" size="60506" author="yseeley@gmail.com" created="Wed, 24 Oct 2007 14:59:54 +0100"/>
                            <attachment id="12368213" name="solr-281.patch" size="72201" author="henrib" created="Tue, 23 Oct 2007 14:10:35 +0100"/>
                            <attachment id="12368139" name="solr-281.patch" size="69934" author="henrib" created="Mon, 22 Oct 2007 14:38:12 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Jul 2007 07:19:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7309</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxsan:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20903</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>