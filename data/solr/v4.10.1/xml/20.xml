<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:17:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-20/SOLR-20.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-20] A simple Java client for updating and searching</title>
                <link>https://issues.apache.org/jira/browse/SOLR-20</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;I wrote a simple little client class that can connect to a Solr server and issue add, delete, commit and optimize commands using Java methods.  I&apos;m posting here for review and comments as suggested by Yonik.&lt;/p&gt;</description>
                <environment>&lt;p&gt;all&lt;/p&gt;</environment>
        <key id="12343833">SOLR-20</key>
            <summary>A simple Java client for updating and searching</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryantxu">Ryan McKinley</assignee>
                                    <reporter username="vengroff">Darren Erik Vengroff</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Jun 2006 14:11:58 +0100</created>
                <updated>Fri, 10 May 2013 11:40:14 +0100</updated>
                            <resolved>Fri, 15 Jun 2007 18:13:10 +0100</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                    <component>clients - java</component>
                        <due></due>
                            <votes>8</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="12414361" author="vengroff" created="Fri, 2 Jun 2006 14:33:20 +0100"  >&lt;p&gt;Previous version didn&apos;t properly escape the query in the deleteByQuery() case.&lt;/p&gt;</comment>
                            <comment id="12414382" author="ehatcher" created="Fri, 2 Jun 2006 17:17:22 +0100"  >&lt;p&gt;This looks quite good and well documented!   Thanks for this contribution.  The only issue my current project would have with this is the Map which prevents multiple fields of the same name from being added.  I use a lot of multi-valued fields. &lt;/p&gt;</comment>
                            <comment id="12414394" author="ehatcher" created="Fri, 2 Jun 2006 17:58:39 +0100"  >&lt;p&gt;One idea for dealing with multivalued fields is to check the type of the object in the Map and if is an array or Collection then iterate over it rather than just doing .toString() on it.  Would that logic work for your use as well?&lt;/p&gt;</comment>
                            <comment id="12414414" author="vengroff" created="Fri, 2 Jun 2006 21:18:44 +0100"  >&lt;p&gt;Iterating over an array or Collection of values is a great suggestion.  I&apos;ll change it and resubmit when I have some time later today.&lt;/p&gt;</comment>
                            <comment id="12414480" author="vengroff" created="Sat, 3 Jun 2006 00:58:02 +0100"  >&lt;p&gt;Here is the latest, incorporating Erik&apos;s suggestion about supporting multi-valued fields.&lt;/p&gt;

&lt;p&gt;BTW, is there any way to delete the older attached versions of this file from JIRA?  There&apos;s no real need for them to be there any more.&lt;/p&gt;</comment>
                            <comment id="12414663" author="vengroff" created="Mon, 5 Jun 2006 03:04:49 +0100"  >&lt;p&gt;New exception type for reporting server-side exceptions.&lt;/p&gt;</comment>
                            <comment id="12414664" author="vengroff" created="Mon, 5 Jun 2006 03:05:18 +0100"  >&lt;p&gt;New client code that uses the new exception.&lt;/p&gt;</comment>
                            <comment id="12415246" author="vengroff" created="Thu, 8 Jun 2006 10:05:53 +0100"  >&lt;p&gt;Here&apos;s the latest.  There is an abstract base class that handles client connection and request/response and two subclasses.  One is as before, with java APIs, and the other is for cases where you have an XML document you want to transform and send to the server.&lt;/p&gt;</comment>
                            <comment id="12415247" author="yseeley@gmail.com" created="Thu, 8 Jun 2006 10:28:27 +0100"  >&lt;p&gt;Great!  Now we need to figure out where it lives, and how to work out the dependencies (a solr-util.jar that a client could use, or perhaps just pull the needed class or two directly into the solr-client.jar)&lt;/p&gt;</comment>
                            <comment id="12421774" author="whirlycott" created="Tue, 18 Jul 2006 04:19:52 +0100"  >&lt;p&gt;delete() in the DocumentManagerClient ought to be doing this:&lt;/p&gt;

&lt;p&gt;&amp;lt;delete&amp;gt;&amp;lt;id&amp;gt;1234&amp;lt;/id&amp;gt;&amp;lt;/delete&amp;gt;&lt;/p&gt;

&lt;p&gt;It&apos;s currently doing this:&lt;/p&gt;

&lt;p&gt;&amp;lt;delete&amp;gt;&amp;lt;query&amp;gt;1234&amp;lt;/query&amp;gt;&amp;lt;/delete&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12421785" author="vengroff" created="Tue, 18 Jul 2006 06:19:42 +0100"  >&lt;p&gt;Good catch Philip.  For the benefit of future downloaders, here&apos;s a complete zip file with everything including this fix.&lt;/p&gt;</comment>
                            <comment id="12427788" author="vengroff" created="Mon, 14 Aug 2006 01:56:48 +0100"  >&lt;p&gt;Here is the latest version of the client code, in the form of solr-client-source.jar.  The big difference here is that there are now two clients, DocumentManagerClient for adding, inserting, and updating, and SearchClient for searching.  They share the same underlying communication mechanism, which consists of a low-level mechanism for doing queries and parsing responses by reading from an InputStream (see ResponseParser) and a slightly higher level mechanism that handles some of the XML for you (see XmlResponseParser).&lt;/p&gt;

&lt;p&gt;I&apos;ve been building this as a seperate project with a Maven2 dependency on Solr, but if the source is dropped into the Solr source tree at the appropriate place I suspect it will just compile and work.  There are no other outside dependencies.&lt;/p&gt;

&lt;p&gt;I have some unit tests as well, but for the moment they are too tied in to my environment to be useful to the broader community.  I will correct this and submit them.&lt;/p&gt;</comment>
                            <comment id="12428555" author="vengroff" created="Thu, 17 Aug 2006 03:23:17 +0100"  >&lt;p&gt;Please ignore that last attachment.  It contains an earlier version of the code than I intended, and has a couple of serious bugs.  I&apos;m sure that what I&apos;m running now is a lot better, but I&apos;m going to iterate a little more and build some more complete tests before I submit it again.  Unless anyone out there is dieing to be on the bleeding edge of this.&lt;/p&gt;</comment>
                            <comment id="12438790" author="yseeley@gmail.com" created="Fri, 29 Sep 2006 21:15:04 +0100"  >&lt;p&gt;Ping... &lt;br/&gt;
any chance you could make your latest version available?&lt;/p&gt;</comment>
                            <comment id="12447549" author="funtick" created="Mon, 6 Nov 2006 21:57:18 +0000"  >&lt;p&gt;I&apos;m dieing... which files should I download?&lt;/p&gt;</comment>
                            <comment id="12449911" author="davidhalsted" created="Wed, 15 Nov 2006 04:55:55 +0000"  >&lt;p&gt;it is a little confusing &amp;#8211; any chance one of the attachments could be designated as the right one?  Thanks!&lt;/p&gt;</comment>
                            <comment id="12450843" author="hossman" created="Fri, 17 Nov 2006 18:32:03 +0000"  >&lt;p&gt;I don&apos;t know that there is a specific &quot;right&quot; one at the moment ... Darren&apos;s last comment suggests that he has a better version but it&apos;s not quite ready for submission.&lt;/p&gt;

&lt;p&gt;FYI: if you click the &quot;All&quot; link at teh top left of the comment listing, you can see where in the flow of time each of the attachemnts was added &amp;#8211; from there it&apos;s pretty easy to tell that while solr-client-sources.jar is the most recent attachment, it&apos;s the one Darren said should be ignored...&lt;/p&gt;

&lt;p&gt;at this moment solr-client-java-2.zip.zip seems to be the most recent &quot;good&quot; version.&lt;/p&gt;
</comment>
                            <comment id="12457598" author="otis" created="Tue, 12 Dec 2006 06:39:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-30&quot; title=&quot;Java client code for performing searches against a Solr instance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-30&quot;&gt;&lt;del&gt;SOLR-30&lt;/del&gt;&lt;/a&gt; seem to be lingering in JIRA.&lt;br/&gt;
Is the plan to merge them, and get the code into Solr?&lt;/p&gt;</comment>
                            <comment id="12461050" author="funtick" created="Wed, 27 Dec 2006 17:57:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt;: add, delete, commit, optimize &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-30&quot; title=&quot;Java client code for performing searches against a Solr instance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-30&quot;&gt;&lt;del&gt;SOLR-30&lt;/del&gt;&lt;/a&gt;: search&lt;/p&gt;

&lt;p&gt;So, should be merged.&lt;/p&gt;

&lt;p&gt;HttpClient seems to be right choice (easily configurable; &apos;follow redirects&apos;, &apos;buffer size&apos;, etc.).&lt;/p&gt;

&lt;p&gt;Possible improvements: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;make it independent on implementation (for instance, use interface and HttpClient-based implementation)&lt;/li&gt;
	&lt;li&gt;XML-based external configuration file&lt;/li&gt;
	&lt;li&gt;no need for JDOM...&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Probably, we need separate src/client folder for source files (sources do not depend on SOLR)&lt;/p&gt;</comment>
                            <comment id="12461066" author="ryantxu" created="Wed, 27 Dec 2006 18:48:40 +0000"  >&lt;p&gt;I&apos;ve attached the client code i have written that merges &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-30&quot; title=&quot;Java client code for performing searches against a Solr instance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-30&quot;&gt;&lt;del&gt;SOLR-30&lt;/del&gt;&lt;/a&gt;.  It can add, delete, commit, optimize and search.&lt;/p&gt;

&lt;p&gt;The main interface is SolrClient.  &lt;/p&gt;

&lt;p&gt;It uses the XPP parser to parse the search results.  &lt;/p&gt;

&lt;p&gt;If there is interist, i can clean it up some more...  &lt;/p&gt;</comment>
                            <comment id="12461517" author="funtick" created="Sat, 30 Dec 2006 17:30:59 +0000"  >&lt;p&gt;My previous comment is visible to jira-users only, sorry.&lt;br/&gt;
Code submitted by Ryan looks great!&lt;/p&gt;</comment>
                            <comment id="12462800" author="ryantxu" created="Sun, 7 Jan 2007 07:43:24 +0000"  >&lt;p&gt;I just posted a new version of a java client.  This moves things to proper org.apache... packages and adds the waitFlush, waitSearcher suggested by Fuad.  &lt;/p&gt;

&lt;p&gt;If people are interested, i think this should sit next to /client/ruby in: /client/java/solrj/&lt;/p&gt;

&lt;p&gt;there is a build.xml file that will generate a solr-client.jar file.&lt;/p&gt;

&lt;p&gt;As a taste, this is how you perform a search:&lt;br/&gt;
&amp;lt;code&amp;gt;&lt;br/&gt;
    SolrClient client = new SolrClientImpl( new URL(&quot;http://localhost:8983/solr/&quot;) );&lt;/p&gt;

&lt;p&gt;    SolrQuery query = new SolrQuery();&lt;br/&gt;
    query.setQuery( &quot;video&quot; );&lt;/p&gt;

&lt;p&gt;    QueryResults results = client.query( query );&lt;/p&gt;

&lt;p&gt;    for( ResultDoc doc : results.getDocs() ) &lt;/p&gt;
{
        System.out.println( &quot;[&quot;+doc.getId()+&quot;] &quot;+ doc.getField( &quot;name&quot; ) );
    }
&lt;p&gt;&amp;lt;/code&amp;gt;&lt;/p&gt;

&lt;p&gt;Also, if there is interest, i can post an example webapp using this client library to search and explore a solr repository.&lt;/p&gt;


</comment>
                            <comment id="12463372" author="ryantxu" created="Tue, 9 Jan 2007 18:50:04 +0000"  >&lt;p&gt;added APL to zip&lt;/p&gt;</comment>
                            <comment id="12464641" author="hossman" created="Sun, 14 Jan 2007 23:27:22 +0000"  >
&lt;p&gt;(NOTE: revised summary since this issue has moved beyond just updating)&lt;/p&gt;

&lt;p&gt;I &lt;b&gt;finally&lt;/b&gt; had a chance to look this over, here&apos;s a few comments in&lt;br/&gt;
no particular order... &lt;/p&gt;

&lt;p&gt;1) i like the name solrj, i think this code should definitely live in client/java/solrj so that there is the potential for other java client code that is independent (if nothing else, i suspect something like &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-86&quot; title=&quot;[PATCH]  standalone updater cli based on httpClient&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-86&quot;&gt;&lt;del&gt;SOLR-86&lt;/del&gt;&lt;/a&gt; might be handy) ... we should probably put solrj in the package name as well.&lt;/p&gt;

&lt;p&gt;2) i wouldn&apos;t worry about having a special package for the exceptions ... they&apos;ve got exception in their name, no ones going to be confused.&lt;/p&gt;

&lt;p&gt;3) I&apos;m really not fond of &quot;ParamNames.java&quot; being a copy of the constants in &quot;SolrParams.java&quot;, or XML.java being copied, or the xpp jar being duplicated ... it seems like we should just pull in those (compiled) classes at build time ... but that would require that the whole Solr tree be checked out, and there seems to be interest in making it possible to &quot;svn checkout client/lang/impl&quot; and build that in isolation ... perhaps we could use svn:externals to pull in specific utility classes and jars from other places in the tree? (although based on what I&apos;ve read today, branching for releases would be hard since all of the svn:external props would have to be updated).&lt;/p&gt;

&lt;p&gt;what do people think in general about how the client code can/should/shouldn&apos;t depend on the core server code?&lt;/p&gt;


&lt;p&gt;4) one thing we should really try to support in a client is executing query requests against non-standard request handlers ... handlers that might take in request params that we can&apos;t even imagine.  The SolrQuery class has explicit setters for many of the params that the built in request handlers support, but there is no easy way for people to build other queries.  I think it might make sense if SolrQuery was an interface that just defined the methods needed by the SolrClient &amp;#8211; probably just getQueryString().  Then their can be a SimpleSolrQuery that has all of the setters in the current SolrQuery class, possibly using a general baseclass with an impl of getQueryString that uses some SolrParams...&lt;/p&gt;

&lt;p&gt;public class AbstractSolrQuery implements SolrQuery {&lt;br/&gt;
   protected abstract SolrParams getSolrParams();&lt;br/&gt;
   public String getQueryString() &lt;/p&gt;
{
     ... your current code, looping over getSolrParams() ...
   }
&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;5) what is the purpose of SolrClientStub ?&lt;/p&gt;

&lt;p&gt;6) what is the purpose of SolrDocumentable being an empty interface? ... it seems like you could replace SolrDocumentable, SolrDocument, and SolrDocumented with something like this...&lt;/p&gt;

&lt;p&gt;public interface SolrDocument &lt;/p&gt;
{
  public Map&amp;lt;String,Object&amp;gt; getSolrDocumentFields();
}
&lt;p&gt;public abstract class SolrDocumented implements SolrDocument {&lt;br/&gt;
  protected abstract SolrDocument getSolrDocument();&lt;br/&gt;
  public Map&amp;lt;String,Object&amp;gt; getSolrDocumentFields() &lt;/p&gt;
{
    return getSolrDocument().getSolrDocumentFields()
  }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Then you wouldn&apos;t need that instanceof code in SolrClientImpl&lt;/p&gt;

&lt;p&gt;Note that we should probably support field and document boosts as well, but field boosts don&apos;t really need to be specified in the Map since they apply to the whole field and not the individual values, so we could just add...&lt;/p&gt;

&lt;p&gt;  public int getDocumentBoost();&lt;br/&gt;
  public Map&amp;lt;String,Integer&amp;gt; getFieldBoosts()&lt;/p&gt;

&lt;p&gt;...to SolrDocument.&lt;/p&gt;

&lt;p&gt;7) The ResultsParser and QueryResults classes seem to suffer the same limitation that i was mentioning about the SolrQuery class &amp;#8211; they assume a very specific response structure (only one doc list, an optional facet block, an optional highlighting block, an optional debug block) ... I think since the ResultsParser already understands the all of the various tags that are used, it should be easy to do this as long as the QueryResult object becomes a more general container that any named data can be shoved into (just like SolrQueryResponse is on the server side) ... then a &quot;SimpleQueryResults&quot; class could be written that had the convenience methods that make sense when using StandardRequestHandler or DisMaxRequestHandler.&lt;/p&gt;

&lt;p&gt;8) There was a comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-30&quot; title=&quot;Java client code for performing searches against a Solr instance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-30&quot;&gt;&lt;del&gt;SOLR-30&lt;/del&gt;&lt;/a&gt; regarding the issue of that code only parsing the XML response ... i think it&apos;s completely practical to focus on client code which currently supports only the XmlResponseWriter output &amp;#8211; especially with the solrj ResultsParser class currently having a single public method...&lt;/p&gt;

&lt;p&gt;    public QueryResults process( Reader reader ) throws SolrClientException, SolrServerException, XmlPullParserException, IOException&lt;/p&gt;

&lt;p&gt;...i think if we removed XmlPullParserException from that list of exceptions (it could always be wrapped in a SolrClientException, or a new SolrClientParseException) we have a really simple API where other ResultParser classes could be written to handle JSON or what not down the road just by adding a simple setResultParser to SolrClient.&lt;/p&gt;
</comment>
                            <comment id="12464648" author="skeptikos" created="Mon, 15 Jan 2007 03:05:29 +0000"  >&lt;p&gt;Regarding Hoss&apos; point #3, perhaps it&apos;s time to reorganize into something like&lt;/p&gt;

&lt;p&gt;/solr/server/...&lt;br/&gt;
/solr/client/...&lt;br/&gt;
/solr/webapp/,,, (or /solr/server/webapp)&lt;br/&gt;
/solr/shared/...&lt;/p&gt;

&lt;p&gt;&quot;To build client XXX check out /solr/client or just /solr/client/java/XXX and /solr/shared&quot;&lt;/p&gt;

&lt;p&gt;Shared would include external constants and exceptions.&lt;/p&gt;</comment>
                            <comment id="12466970" author="ryantxu" created="Wed, 24 Jan 2007 10:09:48 +0000"  >&lt;p&gt;I have dramatically reworked the client code to fit with the pluggable ContentStream model in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-104&quot; title=&quot;Update Plugins&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-104&quot;&gt;&lt;del&gt;SOLR-104&lt;/del&gt;&lt;/a&gt;.  This version makes it easy to customize/extend the request/response behavior.  Once it stabilizes and is better tested, I&apos;ll upload a zip, but for now, you can preview it:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.lapnap.net/solr/solrj/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.lapnap.net/solr/solrj/&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Major changes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;it is based on commons-httpclient-3.0.1.jar&lt;/li&gt;
	&lt;li&gt;I&apos;m using wt=JSON rather then XML.  (It maps to a hash easier)&lt;/li&gt;
	&lt;li&gt;I moved some of the common classes to o.a.s.util.  Hopefully the core classes will be refactored to make it easier to share some classes&lt;/li&gt;
	&lt;li&gt;handles multiple ContentStreams using multi-part form upload&lt;/li&gt;
	&lt;li&gt;Got rid of the SolrDocumentable/SolrDocumented distinction. &amp;#8211; now there is only SolrDocument()&lt;/li&gt;
	&lt;li&gt;You can define and automatically build a solr document with annotations&lt;/li&gt;
	&lt;li&gt;Includes a first draft for a HibernateEventListener.  When stuff is added/updated/deleted, it gets sent to solr.  (Note, this class should probable not be in the main client as the hibernate prerequisite libraries are substantial - I&apos;ve included them because its what i need to have working soon)  When this is more stable, it will be something similar to a Compass Hibernate3GpsDevice (&lt;a href=&quot;http://www.opensymphony.com/compass/versions/1.1RC1/html/gps-hibernate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.opensymphony.com/compass/versions/1.1RC1/html/gps-hibernate.html&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;The key interfaces are:&lt;/p&gt;

&lt;p&gt;public interface SolrClient &lt;/p&gt;
{
	public abstract SolrResponse process( final SolrRequest req );
}

&lt;p&gt;public interface SolrRequest &lt;/p&gt;
{
	public String getMethod();
	public String getHandlerPath();
	public RequestParams getParams();
	public Collection&amp;lt;ContentStream&amp;gt; getContentStreams();
	public SolrResponse parseResponseBody(InputStream in);
	public SolrResponse execute(SolrClient solr);
}

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - - - -&lt;br/&gt;
Here is some sample usage:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;SolrClient client = new CommonsHttpSolrClient( &lt;br/&gt;
	new URL(&quot;http://localhost:8983/solr/&quot;) );&lt;/p&gt;

&lt;p&gt;// Set up a simple query&lt;br/&gt;
SolrQuery query = new SolrQuery();&lt;br/&gt;
query.setQuery( &quot;solr&quot; );&lt;br/&gt;
query.addFacetField( &quot;cat&quot; );&lt;br/&gt;
query.setFacetLimit( 15 );&lt;br/&gt;
query.setQuery( &quot;video&quot; );&lt;br/&gt;
query.setShowDebugInfo( true );&lt;/p&gt;

&lt;p&gt;QueryResponse rsp = query.execute( client );&lt;br/&gt;
for( ResultDoc doc : rsp.getDocs() ) &lt;/p&gt;
{
	System.out.println( doc.get( &quot;name&quot; ) );
	System.out.println( doc.getScore() );
	System.out.println( doc.getExplain() );
}

&lt;p&gt;SimpleSolrDoc doc = new SimpleSolrDoc();&lt;br/&gt;
doc.setField( &quot;id&quot;, &quot;xxx&quot; );&lt;br/&gt;
doc.setField( &quot;price&quot;, 12.34f );&lt;br/&gt;
doc.setField( &quot;cat&quot;, new String[] &lt;/p&gt;
{ &quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot; }
&lt;p&gt; );&lt;br/&gt;
new AddDocuments( doc ).execute( client );&lt;br/&gt;
new CommitIndex().execute( client );&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - - - - - - - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This also includes a utility to make solr documents from annotations.  Given the class:&lt;/p&gt;

&lt;p&gt;@SolrSearchable( boost=2.0 )&lt;br/&gt;
public class Example&lt;br/&gt;
{&lt;br/&gt;
  @SolrSearchable&lt;br/&gt;
  public String getName()&lt;/p&gt;
  {
    return &quot;hello&quot; 
  }

&lt;p&gt;  @SolrSearchable( name=&quot;cat&quot;, boost=3 )&lt;br/&gt;
  public String getSomeOtherName()&lt;/p&gt;
  {
    return &quot;there&quot; 
  }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;The DocumentBuilder can automatically make:&lt;/p&gt;

&lt;p&gt;&amp;lt;doc boost=&quot;2.0&quot;&amp;gt;&lt;br/&gt;
 &amp;lt;field name=&quot;name&quot;&amp;gt;hello&amp;lt;/field&amp;gt;&lt;br/&gt;
 &amp;lt;field name=&quot;cat&quot; boost=&quot;3&quot;&amp;gt;there&amp;lt;/field&amp;gt;&lt;br/&gt;
&amp;lt;/doc&amp;gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - - - - - - - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are a few parts of the API i think are awkward, I&apos;d love any feedback / review you may have.&lt;/p&gt;

&lt;p&gt;thanks&lt;br/&gt;
ryan&lt;/p&gt;</comment>
                            <comment id="12467116" author="yseeley@gmail.com" created="Wed, 24 Jan 2007 19:30:38 +0000"  >&lt;p&gt;&amp;gt; * it is based on commons-httpclient-3.0.1.jar&lt;br/&gt;
Cool, +1&lt;/p&gt;

&lt;p&gt;&amp;gt; * I&apos;m using wt=JSON rather then XML. (It maps to a hash easier)&lt;br/&gt;
Heh... I quickly checked out the code, but didn&apos;t see where you were parsing the code, or where the JSONObject class referenced is.&lt;/p&gt;

&lt;p&gt;Anyway, if you want the &lt;b&gt;best&lt;/b&gt; JSON parser on the planet, check out&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Apache-Lab-proposal%3A-noggit-tf2701405.html#a7532843&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Apache-Lab-proposal%3A-noggit-tf2701405.html#a7532843&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/repos/asf/labs/noggit/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/labs/noggit/&lt;/a&gt;&lt;br/&gt;
&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I haven&apos;t had a chance to do the writing side, or the &quot;create full object graph&quot; part, but the parser is screaming fast.&lt;/p&gt;

&lt;p&gt;&amp;gt; * handles multiple ContentStreams using multi-part form upload&lt;br/&gt;
Will a client need to do that?  I had thought a browser would be the only one using multi-part&lt;/p&gt;

&lt;p&gt;&amp;gt; * You can define and automatically build a solr document with annotations&lt;br/&gt;
Sounds cool&lt;/p&gt;

&lt;p&gt;&amp;gt; * Includes a first draft for a HibernateEventListener.&lt;br/&gt;
Sounds &lt;b&gt;very&lt;/b&gt; cool... it should go in a separate contrib eventually.&lt;/p&gt;
</comment>
                            <comment id="12473993" author="rubdabadub" created="Sun, 18 Feb 2007 14:24:09 +0000"  >&lt;p&gt;Hi:&lt;/p&gt;

&lt;p&gt;I was really hoping that this patch will make it to trunk soon. I been using it without any problem. I was wondering if there are any specifics that are left for &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt; to make it to trunk? I would be more then happy to help out anyway I can. I need &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt; for Nutch-Solr integration so it would be nice if it was included.&lt;/p&gt;

&lt;p&gt;Thankful for your kind attention to &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12474012" author="ehatcher" created="Sun, 18 Feb 2007 19:51:07 +0000"  >&lt;p&gt;I want this on trunk also.  I&apos;ll be reviewing it and testing it out this afternoon and committing if all is fine.&lt;/p&gt;</comment>
                            <comment id="12474032" author="ehatcher" created="Sun, 18 Feb 2007 21:33:18 +0000"  >&lt;p&gt;My bad... it was &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-86&quot; title=&quot;[PATCH]  standalone updater cli based on httpClient&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-86&quot;&gt;&lt;del&gt;SOLR-86&lt;/del&gt;&lt;/a&gt; that interested me, and I&apos;ve just committed it.    I can&apos;t take on these patches just yet.&lt;/p&gt;</comment>
                            <comment id="12474078" author="ryantxu" created="Mon, 19 Feb 2007 05:27:46 +0000"  >&lt;p&gt;I don&apos;t think this one is quite ready to go, but anyone interested can see an updated versions at:&lt;/p&gt;

&lt;p&gt; &lt;a href=&quot;http://solrstuff.org/svn/solrj/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj/&lt;/a&gt; &lt;br/&gt;
 &lt;a href=&quot;http://solrstuff.org/svn/solrj-hibernate/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj-hibernate/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have extracted the hibernate specific stuff into its own project so solrj is a bit more manageable.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you are looking for a stable, simple client &quot;solr-client.zip&quot; is still your best bet.&lt;/p&gt;</comment>
                            <comment id="12474080" author="ryantxu" created="Mon, 19 Feb 2007 06:03:11 +0000"  >&lt;p&gt;to do &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt; properly, it should use shared libraries rather then redefine things like constants and common utility classes.&lt;/p&gt;</comment>
                            <comment id="12478810" author="freblast" created="Wed, 7 Mar 2007 16:27:51 +0000"  >&lt;p&gt;Hello, we have been testing the solr-client and think we have found a small bug :&lt;/p&gt;

&lt;p&gt;the xml parsers on the query-side is not setup to use &quot;UTF-8&quot; encoding&lt;br/&gt;
this resulted in weird characters being returned by the solr-client...&lt;br/&gt;
for example : &quot;&#233;&quot; came out like &quot;&#194;&#169;&quot; ... not really what we would like...&lt;/p&gt;

&lt;p&gt;we fixed it by setting the input stream for the xmlparser to &quot;UTF8&quot; which gave us this code in ResultsParser.java :&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;code&amp;#93;&lt;/span&gt;&lt;br/&gt;
public QueryResults process( InputStream reader ) throws SolrClientException, SolrServerException, XmlPullParserException, IOException&lt;br/&gt;
    {&lt;br/&gt;
    	QueryResults res = new QueryResults();&lt;/p&gt;

&lt;p&gt;		try {&lt;br/&gt;
			XmlPullParser xpp = null;&lt;br/&gt;
			try &lt;/p&gt;
{
				xpp = factory.newPullParser();
				xpp.setInput(reader,&quot;UTF-8&quot;);
				xpp.nextTag();
			}
&lt;p&gt; &lt;br/&gt;
.....&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;/code&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;notice we changed the argument for this method to InputStream instead of the reader so we could add &quot;UTF-8&quot; to the stream.&lt;br/&gt;
by doing this we had to change the reader in SolrClientImpl.java to an inputstream :&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;code&amp;#93;&lt;/span&gt;&lt;br/&gt;
....&lt;br/&gt;
InputStream inputStream = urlc.getInputStream();&lt;br/&gt;
			try &lt;/p&gt;
{
				QueryResults res = parser.process( inputStream );
				res.setSolrURL( qurl );
				res.setQuery( query );
				return res;
			}
&lt;p&gt;....&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;/code&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;in our opinion this was a major bug (since all solr-xml is encoded in utf-8) and we guess somebody just forgot to put it in...&lt;/p&gt;

&lt;p&gt;yay, now we can all start using freaky characters without the client actually freaking out &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; enjoy&lt;/p&gt;</comment>
                            <comment id="12483051" author="tcollogne" created="Thu, 22 Mar 2007 08:12:37 +0000"  >&lt;p&gt;I found that there was no way of adding highlight paramters to an SolrQuery, so I made some modifications to SolrQuery.java and ParamNames.java to allow highlighting&lt;/p&gt;

&lt;p&gt;Changes to SolrQuery&lt;/p&gt;

&lt;p&gt;First add a new variable&lt;/p&gt;

&lt;p&gt;          private HighlightParams _highlight = new HighlightParams();&lt;/p&gt;

&lt;p&gt;Than I defined a new innerclass (a bit like FacetParams)&lt;/p&gt;

&lt;p&gt;       public static class HighlightParams {&lt;br/&gt;
		public List&amp;lt;String&amp;gt; field = new ArrayList&amp;lt;String&amp;gt;();&lt;br/&gt;
		public int snippets = 3;&lt;br/&gt;
		public int fragsize = 100;&lt;/p&gt;

&lt;p&gt;		public String simple_pre = &quot;&amp;lt;b&amp;gt;&quot;;&lt;br/&gt;
		public String simple_post = &quot;&amp;lt;/b&amp;gt;&quot;;&lt;/p&gt;

&lt;p&gt;		public boolean isEnabled()&lt;/p&gt;
		{
			return field.size() &amp;gt; 0;
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;Than add the following methods&lt;/p&gt;

&lt;p&gt;	public void addHighlightField( String f )&lt;/p&gt;
	{
		_highlight.field.add( f );
	}

&lt;p&gt;	public void setHighlightSnippets( int snippets )&lt;/p&gt;
	{
		_highlight.snippets = snippets;
	}

&lt;p&gt;	public void setHighlightFragSize( int fragsize )&lt;/p&gt;
	{
		_highlight.fragsize = fragsize;
	}

&lt;p&gt;       // ATTENTION : only simple tags. No quotes like in &amp;lt;span class=&quot;tag&quot;&amp;gt;&lt;br/&gt;
	public void setHighlightSurroundingTags( String pre, String post )&lt;/p&gt;
	{
		_highlight.simple_pre  = pre;
		_highlight.simple_post = post;
	}

&lt;p&gt;Add the following code to getQueryString method (for example right before return builder.toString()&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;              if( _highlight.isEnabled() ) {&lt;br/&gt;
			builder.append( &apos;&amp;amp;&apos; ).append( ParamNames.HIGHLIGHT ).append( &quot;=true&quot; );&lt;br/&gt;
			builder.append( &apos;&amp;amp;&apos; ).append( ParamNames.HIGHLIGHT_FIELDS ).append( &quot;=&quot; );&lt;br/&gt;
			for( String f : _highlight.field ) &lt;/p&gt;
{
				builder.append( f ).append( &apos;,&apos; );
			}
&lt;p&gt;			builder.append( &apos;&amp;amp;&apos; ).append( ParamNames.HIGHLIGHT_SNIPPETS ).append( &quot;=&quot; ).append( _highlight.snippets );&lt;br/&gt;
			builder.append( &apos;&amp;amp;&apos; ).append( ParamNames.HIGHLIGHT_FRAGSIZE ).append( &quot;=&quot; ).append( _highlight.fragsize );&lt;/p&gt;

&lt;p&gt;			builder.append( &apos;&amp;amp;&apos; ).append( ParamNames.HIGHLIGHT_SIMPLE_PRE ).append( &quot;=&quot; ).append( _highlight.simple_pre );&lt;br/&gt;
			builder.append( &apos;&amp;amp;&apos; ).append( ParamNames.HIGHLIGHT_SIMPLE_POST ).append( &quot;=&quot; ).append( _highlight.simple_post );&lt;br/&gt;
		}&lt;/p&gt;


&lt;p&gt;Changes to ParamNames.java&lt;/p&gt;

&lt;p&gt;Add/modify the following variables &lt;/p&gt;

&lt;p&gt;     /** wether to highlight */&lt;br/&gt;
     public static final String HIGHLIGHT = &quot;hl&quot;;&lt;br/&gt;
     /** fields to highlight */&lt;br/&gt;
     public static final String HIGHLIGHT_FIELDS = &quot;hl.fl&quot;;&lt;br/&gt;
     /** maximum highlight fragments to return */&lt;br/&gt;
     public static final String HIGHLIGHT_SNIPPETS = &quot;hl.snippets&quot;;&lt;br/&gt;
     /** override default highlight fragsize */&lt;br/&gt;
     public static final String HIGHLIGHT_FRAGSIZE = &quot;hl.fragsize&quot;;&lt;br/&gt;
     /** override default pre highlight */&lt;br/&gt;
     public static final String HIGHLIGHT_SIMPLE_PRE = &quot;hl.simple.pre&quot;;&lt;br/&gt;
     /** override default post highlight */&lt;br/&gt;
     public static final String HIGHLIGHT_SIMPLE_POST = &quot;hl.simple.post&quot;;&lt;/p&gt;


&lt;p&gt;This can be used as follwed&lt;br/&gt;
    SolrClient client = new SolrClientImpl( new URL(&quot;http://localhost:8080/solr/&quot;) );&lt;br/&gt;
    // required&lt;br/&gt;
    query.addHighlightField(&quot;title&quot;);&lt;br/&gt;
    query.addHighlightField(&quot;content&quot;);&lt;br/&gt;
    // following is optional&lt;br/&gt;
    query.setHighlightFragSize(100);&lt;br/&gt;
    query.setHighlightSnippets(3);&lt;br/&gt;
    query.setHighlightSurroundingTags(&quot;&amp;lt;i&amp;gt;&quot;,&quot;&amp;lt;/i&amp;gt;&quot;);&lt;/p&gt;


&lt;p&gt;I think that is all. If I forgot something, post it here. One remark. The setHighlightSurroundingTags method can only take simple tags,&lt;br/&gt;
no tags containing quotes or such.&lt;/p&gt;

&lt;p&gt;Greetz.&lt;/p&gt;</comment>
                            <comment id="12487196" author="truncatei" created="Fri, 6 Apr 2007 09:55:13 +0100"  >&lt;p&gt;org.apache.solr.client.impl.ResultsParser.java&lt;br/&gt;
org.apache.solr.client.QueryFacet.java (a copy of FieldFacet)&lt;br/&gt;
org.apache.solr.client.QueryResults.java&lt;br/&gt;
org.apache.solr.client.SolrQuery.java&lt;/p&gt;

&lt;p&gt;I changed these four files, add some functions for facet query.&lt;br/&gt;
Add a facet query is similar as field query.&lt;br/&gt;
Existing methods, new methods:&lt;br/&gt;
  SolrQuery.addFacetField()        SolrQuery.addFacetQuery&lt;br/&gt;
  QueryResults.getFacets()         QueryResults.getQueryFacets()&lt;br/&gt;
  QueryResults.getLimitingFacets   QueryResults.getLimitingFacetsForQueryFacet()&lt;/p&gt;


&lt;p&gt;Some code here..&lt;br/&gt;
  SolrQuery query = new SolrQuery();&lt;br/&gt;
  // ...&lt;br/&gt;
  query.addFacetQuery(&quot;cat:music card&quot;);&lt;br/&gt;
  query.addFacetQuery(&quot;video&quot;);&lt;/p&gt;

&lt;p&gt;  SolrClient client = ..&lt;br/&gt;
  // ...&lt;br/&gt;
  QueryResults results = client.query( query );&lt;/p&gt;

&lt;p&gt;  for (QueryFacet qf : results.getQueryFacets()) {&lt;br/&gt;
      System.out.println(&quot;query facet: &quot;+qf.getName() +&quot; &quot;+qf.getValueCount());&lt;br/&gt;
          for (org.apache.solr.client.QueryFacet.Count c :  qf.getValues() ) &lt;/p&gt;
{
          System.out.println(&quot;  &quot;+c.getName()+&quot;: &quot;+c.getCount());
      }
&lt;p&gt;  }&lt;/p&gt;

</comment>
                            <comment id="12488702" author="orrego" created="Fri, 13 Apr 2007 17:00:45 +0100"  >&lt;p&gt;I am using the client library nad have no issues with adding docs to solr. But when i want to make a simple test query i keep getting this error:&lt;/p&gt;

&lt;p&gt;org.apache.solr.client.exception.SolrClientException: unknown type: status&lt;/p&gt;

&lt;p&gt;Solr returns and xml with a statis tag in the header wich the client does not know how to handle?&lt;/p&gt;

&lt;p&gt;am i right? is this the case?&lt;/p&gt;</comment>
                            <comment id="12490117" author="willjohnson3" created="Thu, 19 Apr 2007 18:17:22 +0100"  >&lt;p&gt;is there an updated package or anyone working on such a thing at the moment?  the solr-client.zip at the top of the thread works like a charm but seems to be very outdated and the bits on the svn://solrstuff.org site have some rather serious bugs.  &lt;/p&gt;

&lt;p&gt;i&apos;m happy to do all the leg work of packaging things, fixing bugs, submitting a patch, etc but i wanted to make sure i&apos;m not about to walk right behind someone else.  also, if anyone has any ideas for the best starting point i&apos;m happy to take suggestions.  &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12490121" author="ryantxu" created="Thu, 19 Apr 2007 18:40:51 +0100"  >&lt;p&gt;For now, I&apos;d still recommend using solr-client.zip&lt;/p&gt;

&lt;p&gt;The code on solrstuff.org is in the middle of a big overhaul (hopefully stable by the end of this week) &amp;#8211; but it will rely on some changes to solr that are not likely to make it into solr-1.2.    &lt;/p&gt;

&lt;p&gt;I&apos;ll post another message here when that settles down.&lt;/p&gt;

&lt;p&gt;thanks&lt;br/&gt;
ryan&lt;/p&gt;
</comment>
                            <comment id="12492608" author="ryantxu" created="Mon, 30 Apr 2007 00:54:29 +0100"  >&lt;p&gt;For anyone interested, I&apos;ve finished a major overhaul of the client at:&lt;br/&gt;
  &lt;a href=&quot;http://solrstuff.org/svn/solrj/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj/&lt;/a&gt;&lt;br/&gt;
It is a dramatically different architecture then before.  Essentially it reads each response into a NamedList and each response type knows what the contents mean.&lt;/p&gt;

&lt;p&gt;After solr1.2, I&apos;ll work on getting something like this into the official apache distribution.&lt;/p&gt;

&lt;p&gt;This client source duplicates many classes that will eventually be extracted into an independent solr-utils.jar (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-135&quot; title=&quot;Restructure / Refactor codebase for shared libraries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-135&quot;&gt;&lt;del&gt;SOLR-135&lt;/del&gt;&lt;/a&gt;).  Everything that is not in &quot;client&quot;&lt;br/&gt;
&lt;a href=&quot;http://solrstuff.org/svn/solrj/src/org/apache/solr/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj/src/org/apache/solr/&lt;/a&gt; will be in this .jar&lt;/p&gt;

&lt;p&gt;I am using this in production code &amp;#8211; but i don&apos;t suggest that it is production ready just yet.  &lt;/p&gt;
</comment>
                            <comment id="12492700" author="willjohnson3" created="Mon, 30 Apr 2007 17:12:03 +0100"  >&lt;p&gt;the trunk version at &lt;a href=&quot;http://solrstuff.org/svn/solrj/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj/&lt;/a&gt;  seems to be missing a dependency and a copy of SolrParams.  ant returns....&lt;/p&gt;

&lt;p&gt;compile:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 40 source files to C:\data\workspace\solrj\bin&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\data\workspace\solrj\src\org\apache\solr\client\solrj\impl\XMLResponseParser.java:10: package javax.xml.stream does not exist&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import javax.xml.stream.XMLInputFactory;&lt;/p&gt;

&lt;p&gt;....&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\data\workspace\solrj\src\org\apache\solr\client\solrj\query\SolrQuery.java:10: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class SolrParams&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: package org.apache.solr.util&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import org.apache.solr.util.SolrParams;&lt;/p&gt;</comment>
                            <comment id="12492716" author="ryantxu" created="Mon, 30 Apr 2007 17:47:58 +0100"  >&lt;p&gt;aaah, It was compiling with java 6.&lt;/p&gt;

&lt;p&gt;I just added stax-api-1.0.jar and cleaned up some imports, it should run on java 5 now.&lt;/p&gt;</comment>
                            <comment id="12492902" author="willjohnson3" created="Tue, 1 May 2007 17:17:58 +0100"  >&lt;p&gt;the new api&apos;s work great, thanks!  what&apos;s the plan for this going forward?  id&apos; like to start doing some work on this as it&apos;s rather critical to my current project and an are i&apos;ve dealt with a lot in the past.  assuming it&apos;s not getting dumped into org.apache.* land any time soon are you accepting patches to this code?  if so i have some modifications to the api&apos;s that i think will make them easier to use (such as a method to set FacetParams on SolrQuery) and i&apos;ll even flush out the SolrServerTest for fun.  &lt;/p&gt;

&lt;p&gt;also, i noticed that all the methods on SolrServer throw undeclared SolrExceptions which extends RuntimeException when things so south.  should those throw some other sort of non-ignorable exception like a new SolrServerException?  while it made coding/compiling easier to leave out all the usually required try&apos;s and catches it made running/debugging much less enjoyable.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12493006" author="ryantxu" created="Wed, 2 May 2007 04:57:04 +0100"  >&lt;p&gt;great!  Any feedback/help would be wonderful.&lt;/p&gt;

&lt;p&gt;I hope it is not &lt;b&gt;too&lt;/b&gt; long before this can enter solr trunk, but it will first need two solr1.3 additions &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-193&quot; title=&quot;General SolrDocument interface to manage field values.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-193&quot;&gt;&lt;del&gt;SOLR-193&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-135&quot; title=&quot;Restructure / Refactor codebase for shared libraries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-135&quot;&gt;&lt;del&gt;SOLR-135&lt;/del&gt;&lt;/a&gt;, until then I can apply any patches necessary.&lt;/p&gt;

&lt;p&gt;Re RuntimeException vs SolrServerException, I&apos;m not sure the best choice.  Earlier versions had a client exception and server exception, but in practice those got lumped together (in my case) anyway.  I ended up just using SolrException because it is there.&lt;/p&gt;</comment>
                            <comment id="12499730" author="ben.incani" created="Tue, 29 May 2007 09:56:25 +0100"  >&lt;p&gt;The SolrClientImpl does not implement the following optional attributes for &quot;add&quot; as documented in &lt;a href=&quot;http://wiki.apache.org/solr/UpdateXmlMessages&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/UpdateXmlMessages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  allowDups = &quot;true&quot; | &quot;false&quot; &#8212; default is &quot;false&quot; &lt;br/&gt;
  overwritePending = &quot;true&quot; | &quot;false&quot; &#8212; default is negation of allowDups &lt;br/&gt;
  overwriteCommitted = &quot;true&quot;|&quot;false&quot; &#8212; default is negation of allowDups &lt;/p&gt;

&lt;p&gt;Attached is patch for SolrClientImpl.java which implements allowDups.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;SolrClientImpl.java.patch ***&lt;br/&gt;
48a49,55&lt;br/&gt;
&amp;gt; 	&lt;br/&gt;
&amp;gt; 	/**&lt;br/&gt;
&amp;gt; 	 * Optional attributes for &quot;add&quot;&lt;br/&gt;
&amp;gt; 	 */&lt;br/&gt;
&amp;gt; 	protected boolean allowDups;&lt;br/&gt;
&amp;gt; 	protected boolean overwritePending;    // TODO: not implemented&lt;br/&gt;
&amp;gt; 	protected boolean overwriteCommitted;  // TODO: not implemented&lt;br/&gt;
86a94,97&lt;br/&gt;
&amp;gt; 	public SolrClientImpl(URL baseURL) throws Exception 
{
&amp;gt; 	   this(baseURL, false);
&amp;gt;     }
&lt;p&gt;&amp;gt; &lt;br/&gt;
91a103&lt;br/&gt;
&amp;gt; 	 * @param allowDups allow duplicates to be added to the index&lt;br/&gt;
95c107&lt;br/&gt;
&amp;lt; 	public SolrClientImpl(URL baseURL) throws Exception &lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt; 	public SolrClientImpl(URL baseURL, boolean allowDups) throws Exception &lt;br/&gt;
103c115&lt;br/&gt;
&amp;lt; 		&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;         this.allowDups = allowDups;&lt;br/&gt;
243c255,260&lt;br/&gt;
&amp;lt; 				writer.write(&quot;&amp;lt;add&amp;gt;&quot;);&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt; 			    StringBuffer strAdd = new StringBuffer(&quot;&amp;lt;add &quot;);&lt;br/&gt;
&amp;gt; 			    if (allowDups == true) &lt;/p&gt;
{
&amp;gt; 			         strAdd.append(&quot;allowDups=\&quot;true\&quot;&quot;);
&amp;gt; 			    }
&lt;p&gt;&amp;gt; 			    strAdd.append(&quot;&amp;gt;&quot;);&lt;br/&gt;
&amp;gt; 				writer.write(strAdd.toString());&lt;/p&gt;&lt;/li&gt;
			&lt;li&gt;SolrClientImpl.java.patch ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12499831" author="ryantxu" created="Tue, 29 May 2007 17:14:26 +0100"  >&lt;p&gt;Hi Ben-&lt;/p&gt;

&lt;p&gt;Thanks for the patch.  Will Johnson added the options to the java client on:&lt;br/&gt;
&lt;a href=&quot;http://solrstuff.org/svn/solrj/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This implementation is now quite stable (thanks to lots of help from Will!) and I hope will be integrated into solr trunk shortly after 1.2 (this week?!)&lt;/p&gt;

&lt;p&gt;About the   allowDups/overwritePending/overwriteCommited options... what part of them do you use?  In &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-60&quot; title=&quot;Remove overwritePending, overwriteCommitted flags?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-60&quot;&gt;&lt;del&gt;SOLR-60&lt;/del&gt;&lt;/a&gt;, there is talk of replacing the three options with a (simpler) overwrite=true/false &amp;#8211; maybe we should change the client api to:&lt;/p&gt;

&lt;p&gt;  UpdateResponse add( SolrDocument doc, boolean overwrite ) throws SolrServerException;&lt;/p&gt;

&lt;p&gt;In anticipation of this change?&lt;/p&gt;</comment>
                            <comment id="12502470" author="waltersbox" created="Thu, 7 Jun 2007 19:49:12 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;I&amp;#39;m new to solrj, so everything I&amp;#39;m writing can be useless&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;While trying to execute range query, using this query:&lt;br/&gt;
Text:Hello +Date:&lt;span class=&quot;error&quot;&gt;&amp;#91;1895011 TO 18971128&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;jdk 1.6/netbeans 5.5/solr1.2/solrj revision 125&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I kept getting IllegalArgumentException:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
Caused by: java.lang.IllegalArgumentException: Invalid uri &apos;http://localhost:8983/solr/select?q=Text:Hello+%2BDate:[1895011+TO+18971128]&amp;amp;fl=ID,Date,score&amp;amp;rows=800&amp;amp;wt=xml&amp;amp;version=2.2&apos;: Invalid query&lt;br/&gt;
        at org.apache.commons.httpclient.HttpMethodBase.&amp;lt;init&amp;gt;(HttpMethodBase.java:222)&lt;br/&gt;
        at org.apache.commons.httpclient.methods.GetMethod.&amp;lt;init&amp;gt;(GetMethod.java:89)&lt;br/&gt;
        at org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.request(CommonsHttpSolrServer.java:108)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
It seems related to un-escaped &apos;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39; and &amp;#39;&amp;#93;&lt;/span&gt;&apos;.&lt;/p&gt;

&lt;p&gt;the solution was to patch StrUtils.java, in order to encode square brackets. &lt;br/&gt;
If it is of any use, I&apos;m attaching the patch&lt;br/&gt;
&amp;#8211; Walter&lt;/p&gt;

&lt;p&gt;====&lt;br/&gt;
StrUtils.java.patch&lt;/p&gt;

&lt;p&gt;204,207d203&lt;br/&gt;
&amp;lt;           case &apos;[&apos;: dest.append(&quot;%5B&quot;); break; // to allow range query, 20070706 (w)&lt;br/&gt;
&amp;lt;           case &apos;]&apos;: dest.append(&quot;%5D&quot;); break;&lt;br/&gt;
&amp;lt;           case &apos;&lt;/p&gt;
{&apos;: dest.append(&quot;%7B&quot;); break;
&amp;lt;           case &apos;}
&lt;p&gt;&apos;: dest.append(&quot;%7D&quot;); break;&lt;/p&gt;</comment>
                            <comment id="12502489" author="ryantxu" created="Thu, 7 Jun 2007 20:31:28 +0100"  >&lt;p&gt;Hi Walter-&lt;/p&gt;

&lt;p&gt;I just updated &lt;a href=&quot;http://solrstuff.org/svn/solrj/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://solrstuff.org/svn/solrj/&lt;/a&gt;  to use:&lt;/p&gt;

&lt;p&gt;  URLEncoder.encode( val, &quot;UTF-8&quot; )&lt;/p&gt;

&lt;p&gt;rather then:&lt;/p&gt;

&lt;p&gt;  StrUtils.partialURLEncodeVal( val )&lt;/p&gt;

&lt;p&gt;Give it a try and let me know if you have problems...   (i have done date range queries successfully with resin/jetty, but netbeans must be different!)&lt;/p&gt;</comment>
                            <comment id="12502852" author="yseeley@gmail.com" created="Fri, 8 Jun 2007 16:53:15 +0100"  >&lt;p&gt;FYI partialURLEncodeVal was meant for readable, yet unambiguous logging... hence a minimum of escaping is done (but enough to easily paste into a browser and let it do the rest of the escaping when you sumbit).&lt;/p&gt;</comment>
                            <comment id="12502872" author="waltersbox" created="Fri, 8 Jun 2007 17:31:36 +0100"  >&lt;p&gt;Latest rev works perfectly thanks. &lt;br/&gt;
I&apos;ve been making some time test with this client (only searching), and overall results show high times: this maybe due to my minimal knowledge on solr, but solr seems fast, is data-receiving/parsing on client that seems slow. Even when solr report 0ms (due to cache it I presume) it still take 200ms to get results (QueryResponse .getElapsedTime()). I&apos;m using this code: &lt;/p&gt;

&lt;p&gt;SolrQuery query = new SolrQuery(queryString);&lt;br/&gt;
CommonsHttpSolrServer server = new CommonsHttpSolrServer(&quot;http://localhost:8983/solr/&quot;);&lt;br/&gt;
QueryResponse response = server.query(query);&lt;br/&gt;
SolrDocumentList list = response.getResults();&lt;/p&gt;

&lt;p&gt;The slowdown seems to be in client.executeMethod(method) (CommonsHttpSolrServer) Any way to speed up (assuming I&apos;m not totally wrong on how to use this client...)? Reusing same http connection for multiple queries? Playing with MultiThreadedHttpConnectionManager helped a bit, but doesn&apos;t seems the solution&lt;/p&gt;</comment>
                            <comment id="12502885" author="ryantxu" created="Fri, 8 Jun 2007 18:09:15 +0100"  >&lt;p&gt;I don&apos;t know if you are on solr-dev, Yonik noted that the QTime does not include the time to write the response, only the query time.  To get an accurate number for how long the whole query takes, check your app server logs&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Re%3A-A-simple-Java-client-for-updating-and-searching-tf3890950.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re%3A-A-simple-Java-client-for-updating-and-searching-tf3890950.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get a quick response from solr, try rows=0 or a 404 path.  (Of course, the speed will depend on you network connection speed between client-server)&lt;/p&gt;</comment>
                            <comment id="12504912" author="ryantxu" created="Thu, 14 Jun 2007 21:52:26 +0100"  >
&lt;p&gt;I&apos;m integrating &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt; with trunk now...&lt;/p&gt;

&lt;p&gt;The basic stuff is no problem.  I&apos;m struggling with the best way to:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;included shared libraries (commons-io, etc)&lt;/li&gt;
	&lt;li&gt;structure build.xml&lt;/li&gt;
	&lt;li&gt;add tests that launch jetty&lt;/li&gt;
	&lt;li&gt;package solrj (and dependencies)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think the best approach is to commit my best effort and then have you &lt;br/&gt;
all review/fix/modify.  Building a useful patch is unrealistic.&lt;/p&gt;

&lt;p&gt;ryan&lt;/p&gt;
</comment>
                            <comment id="12505304" author="myoung" created="Fri, 15 Jun 2007 17:55:36 +0100"  >&lt;p&gt;We are planning to replace our custom Lucene implementation with Solr in the next release of Liferay. This Java client would be extremely useful to us and we would like to see it in the next stable release. When do you anticipate this, or at least an alpha version?&lt;/p&gt;</comment>
                            <comment id="12505313" author="ryantxu" created="Fri, 15 Jun 2007 18:12:05 +0100"  >&lt;p&gt;solr 1.2 was released ~1 week ago so the next official stable release is at least a few months out.&lt;/p&gt;

&lt;p&gt;The solrj client is quite stable (I won&apos;t say that too strongly until more people are using it) and will be included in solr nightly builds.  While I don&apos;t recommend using the solr server nightly builds, the client should be ok.&lt;/p&gt;</comment>
                            <comment id="12505314" author="ryantxu" created="Fri, 15 Jun 2007 18:13:08 +0100"  >&lt;p&gt;Added to trunk...  any new problems should get their own issue.&lt;/p&gt;</comment>
                            <comment id="12579129" author="hossman" created="Sun, 16 Mar 2008 03:23:51 +0000"  >&lt;p&gt;This bug was modified as part of a bulk update using the criteria...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Marked &quot;Resolved&quot; and &quot;Fixed&quot;&lt;/li&gt;
	&lt;li&gt;Had no &quot;Fix Version&quot; versions&lt;/li&gt;
	&lt;li&gt;Was listed in the CHANGES.txt for 1.3 as of today 2008-03-15&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The Fix Version for all 29 issues found was set to 1.3, email notification was suppressed to prevent excessive email.&lt;/p&gt;

&lt;p&gt;For a list of all the issues modified, search jira comments for this (hopefully) unique string: batch20070315hossman1&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12346048">SOLR-30</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12358921">SOLR-86</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12361831">SOLR-135</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12335004" name="DocumentManagerClient.java" size="11948" author="vengroff" created="Mon, 5 Jun 2006 03:05:18 +0100"/>
                            <attachment id="12334955" name="DocumentManagerClient.java" size="12278" author="vengroff" created="Sat, 3 Jun 2006 00:58:02 +0100"/>
                            <attachment id="12334934" name="SolrClientException.java" size="474" author="vengroff" created="Fri, 2 Jun 2006 14:15:39 +0100"/>
                            <attachment id="12335003" name="SolrServerException.java" size="1229" author="vengroff" created="Mon, 5 Jun 2006 03:04:49 +0100"/>
                            <attachment id="12337074" name="solr-client-java-2.zip.zip" size="5922" author="vengroff" created="Tue, 18 Jul 2006 06:19:42 +0100"/>
                            <attachment id="12335180" name="solr-client-java.zip" size="5913" author="vengroff" created="Thu, 8 Jun 2006 10:05:53 +0100"/>
                            <attachment id="12338768" name="solr-client-sources.jar" size="13352" author="vengroff" created="Mon, 14 Aug 2006 01:56:48 +0100"/>
                            <attachment id="12348567" name="solr-client.zip" size="138879" author="ryantxu" created="Tue, 9 Jan 2007 18:47:55 +0000"/>
                            <attachment id="12348445" name="solr-client.zip" size="133457" author="ryantxu" created="Sun, 7 Jan 2007 07:31:02 +0000"/>
                            <attachment id="12347949" name="solr-client.zip" size="567103" author="ryantxu" created="Wed, 27 Dec 2006 18:48:40 +0000"/>
                            <attachment id="12355066" name="solrclient_addqueryfacet.zip" size="7510" author="truncatei" created="Fri, 6 Apr 2007 09:55:13 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Jun 2006 16:17:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7557</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxtvr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21160</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>