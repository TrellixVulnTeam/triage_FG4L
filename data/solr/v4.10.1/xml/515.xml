<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:22:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-515/SOLR-515.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-515] SimilarityFactory patch: facilitate parameterizable Similarity implementations</title>
                <link>https://issues.apache.org/jira/browse/SOLR-515</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Solr currently allows a pluggable Lucene Similarity to be specified as:&lt;/p&gt;

&lt;p&gt;    &amp;lt;similarity class=&quot;org.apache.lucene.search.DefaultSimilarity&quot;/&amp;gt; &lt;/p&gt;

&lt;p&gt;This patch does not change this syntax at all, but detects whether a Similarity or a SimilarityFactory is specified.  The new SimilarityFactory class passes a NamedList from the config file into a getSimilarity(NamedList) method.&lt;/p&gt;

&lt;p&gt;Yes, I used an interface, damn it!   Let the battles continue.   I&apos;ve spoken with my code on the issue.  But sure, I&apos;ll acquiesce on the topic and turn it into an abstract class if I must - stupid programming languages!  object-oriented programming, not interface or abstract oriented programming &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  All I ask is ya show me a good case where this interface won&apos;t suit your needs, and I&apos;ll reply that instead of thinking the problem is the interface, consider it is how the interface is used - it&apos;s implicitly designed to be simply that, an interface.  You want a different way to configure, don&apos;t like NamedLists for some reason maybe?, we change IndexSchema Similarity construction smarts, perhaps creating another interface.  Same diff, sort of.&lt;/p&gt;

&lt;p&gt;I&apos;m proud of the unit test, no XPath in sight.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12392620">SOLR-515</key>
            <summary>SimilarityFactory patch: facilitate parameterizable Similarity implementations</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ehatcher">Erik Hatcher</assignee>
                                    <reporter username="ehatcher">Erik Hatcher</reporter>
                        <labels>
                    </labels>
                <created>Sat, 29 Mar 2008 06:13:58 +0000</created>
                <updated>Fri, 10 May 2013 11:40:41 +0100</updated>
                            <resolved>Fri, 30 May 2008 02:30:20 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12583281" author="ehatcher" created="Sat, 29 Mar 2008 07:24:06 +0000"  >&lt;p&gt;And yeah, if you don&apos;t like NamedLists.... SolrParams is more pleasant to work with and just sounds more appropriate.&lt;/p&gt;

&lt;p&gt;This patch obsoletes the earlier one by switching the SimilarityFactory interface to use SolrParams instead.&lt;/p&gt;</comment>
                            <comment id="12583282" author="ehatcher" created="Sat, 29 Mar 2008 07:26:35 +0000"  >&lt;p&gt;A paste from the unit test.  A SimilarityFactory is used in this manner:&lt;/p&gt;

&lt;p&gt; &amp;lt;similarity class=&quot;org.apache.solr.schema.CustomSimilarityFactory&quot;&amp;gt;&lt;br/&gt;
   &amp;lt;str name=&quot;echo&quot;&amp;gt;is there an echo?&amp;lt;/str&amp;gt;&lt;br/&gt;
 &amp;lt;/similarity&amp;gt;&lt;/p&gt;

&lt;p&gt;This calls CustomSimilarityFactory#getSimilarity(SolrParams) to construct the Similarity implementation used.&lt;/p&gt;</comment>
                            <comment id="12583286" author="ehatcher" created="Sat, 29 Mar 2008 08:09:13 +0000"  >&lt;p&gt;Comment on the latest patch - I had a revelation/awakening about abstract versus interface.  abstract it is.  for a couple of reasons, it&apos;s handy to have the SimilarityFactory be able to tell you how it was configured, and just plain ol&apos; OO-ness of object =data+behavior.  A shame Java has to make a distinction, but whatever.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12583391" author="hossman" created="Sun, 30 Mar 2008 03:24:38 +0100"  >&lt;p&gt;1) it would be nice to make this use one of the existing PluginLoader APIs (MapPluginLoader/MapInitializedPlugin or NamedListPluginLoader/NamedListInitializedPlugin since we&apos;ve been talking about trying to standardize on them ... i don&apos;t think we have any types of Plugin&apos;s at the moment that use SolrParams.&lt;/p&gt;

&lt;p&gt;2) existing IndexSchema.init code will throuw ClassCast immediatly if someone attempts to use a class that isn&apos;t really a Similarity (because it attempts cast right away) ... reading your patch, i think this error will be defered until first use &amp;#8211; which might be a red herring for people, better to test it ASAP.&lt;/p&gt;

&lt;p&gt;3) i was going to suggest skipping the factory and going with something like...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class SolrSimilarity &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Similarity {
     &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void init(NamedList);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...but then it occurred to me that with a factory pattern we can give custom Similarities the opportunity to precompute stats about the index before their use...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class SimilarityFactory {
  &lt;span class=&quot;code-comment&quot;&gt;// init code here
&lt;/span&gt;  /** Get an uninformed Similarity instance */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; Similarity getSimilarity();
  /** Get a Similiarity instance &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; use by an IndexWriter updating a known IndexSchema */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Similarity getWriterSimilarity(IndexSchema schema) { &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getSimilarity(); }
  /** Get a Similiarity instance &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; use by an SolrIndexSearcher */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Similarity getSearchSimilarity(SolrIndexSearcher searcher) { &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getSimilarity(); }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...with IndexSchema.getSimilarity() being deprecated, but still functional by calling factory.getSimilarity()&lt;/p&gt;

&lt;p&gt;An API like that, and a lot more interesting similarity implementations become possible.&lt;/p&gt;</comment>
                            <comment id="12583436" author="ehatcher" created="Sun, 30 Mar 2008 12:17:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;1) it would be nice to make this use one of the existing PluginLoader APIs (MapPluginLoader/MapInitializedPlugin or NamedListPluginLoader/NamedListInitializedPlugin since we&apos;ve been talking about trying to standardize on them ... i don&apos;t think we have any types of Plugin&apos;s at the moment that use SolrParams.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I looked at the plugin stuff, but it seemed that it wasn&apos;t appropriate for a single implementation like this, but rather something like response writers that have multiple implementations that can be picked up dynamically.  Wouldn&apos;t going with the plugin architecture make your proposed SimilarityFactory unnecessary?  You could have a similarity registered as default, one as &quot;writer&quot;, and one as &quot;search&quot;.   Right?   Or am I missing something?   &lt;/p&gt;</comment>
                            <comment id="12583465" author="hossman" created="Sun, 30 Mar 2008 18:19:21 +0100"  >&lt;blockquote&gt;&lt;p&gt;I looked at the plugin stuff, but it seemed that it wasn&apos;t appropriate for a single implementation like this&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmmm... I may be misremembering what the Loaders currently provide.  Either way: I&apos;d prefer that new types of plugins implement one of the *InitializedPlugin interfaces for uniformity moving forward.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Wouldn&apos;t going with the plugin architecture make your proposed SimilarityFactory unnecessary? You could have a similarity registered as default, one as &quot;writer&quot;, and one as &quot;search&quot;. Right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not suggesting just having 2 Similarities per SolrCore, i&apos;m suggesting that a SimilarityFactory be asked to provide a Similarity to use each time a new IndexWriter or a new SolrIndexSearcher is constructed.  if the factory wants to use maintain and use 1 or 2 Similarity instances for everything it can, or each call to getSearchSimilarity could compute some stats on every field in the index and return a new custom instance based on the data.&lt;/p&gt;</comment>
                            <comment id="12590020" author="gsingers" created="Thu, 17 Apr 2008 14:05:29 +0100"  >&lt;p&gt;I&apos;d suggest we seriously start thinking about Spring and stop recreating yet another Web Framework!  All these workarounds to make Solr some pseudo IOC container make my head hurt.  All this initialization stuff has been solved so nicely in Spring that we could gut out all of this complicated stuff and just focus on creating a less complicated Solr with more search capabilities and less in the way of initialization capabilities.  I honestly can&apos;t keep my head straight anymore between Loaders, CoreAware, InitializedPlugin, inform(), init() etc.  &lt;/p&gt;</comment>
                            <comment id="12590023" author="gsingers" created="Thu, 17 Apr 2008 14:14:00 +0100"  >&lt;p&gt;change to minor&lt;/p&gt;</comment>
                            <comment id="12599934" author="ehatcher" created="Tue, 27 May 2008 01:09:18 +0100"  >&lt;p&gt;Ok, here&apos;s a patch that uses NamedListInitializedPlugin.  I don&apos;t see the advantage to this over the previous patch though, other than NamedListInitializedPlugin requires a name=&quot;...&quot; attribute which is non-sensical in this context since there is only ever one SimilarityFactory per IndexSchema.&lt;/p&gt;

&lt;p&gt;I&apos;d like to commit either this variant or the previous one soon, definitely before 1.3.  &lt;/p&gt;

&lt;p&gt;Comments?&lt;/p&gt;</comment>
                            <comment id="12600764" author="ehatcher" created="Thu, 29 May 2008 13:59:35 +0100"  >&lt;p&gt;I&apos;m -1 on the latest patch, and will commit the previous patch unless there are objections.  I see no advantage to using NamedListInitializedPlugin.  We&apos;ll iterate from there after it&apos;s committed if need be &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12600992" author="ehatcher" created="Fri, 30 May 2008 02:30:20 +0100"  >&lt;p&gt;Ok, putting a stake in the ground on this one and committed the previous patch (using SolrParams instead of the NamedListInsanity).   From here we can add Hoss&apos; tricks of index and search-time Similarity&apos;s etc.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12382808" name="similarity_factory.patch" size="31548" author="ehatcher" created="Tue, 27 May 2008 01:09:18 +0100"/>
                            <attachment id="12378850" name="similarity_factory.patch" size="7554" author="ehatcher" created="Sat, 29 Mar 2008 08:05:54 +0000"/>
                            <attachment id="12378849" name="similarity_factory.patch" size="6097" author="ehatcher" created="Sat, 29 Mar 2008 07:24:06 +0000"/>
                            <attachment id="12378842" name="similarity_factory.patch" size="5737" author="ehatcher" created="Sat, 29 Mar 2008 06:23:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 30 Mar 2008 02:24:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7089</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxqv3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20671</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>