<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:18:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-418/SOLR-418.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-418] Editorial Query Boosting Component</title>
                <link>https://issues.apache.org/jira/browse/SOLR-418</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;For a given query string, a human editor can say what documents should be important.  This is related to a lucene discussion:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Forced-Top-Document-tf4682070.html#a13408965&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Forced-Top-Document-tf4682070.html#a13408965&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ideally, the position could be determined explicitly by the editor - otherwise increasing the boost is probably sufficient.&lt;/p&gt;

&lt;p&gt;This patch uses the Search Component framework to inject custom document boosting into the standard SearchHandler.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12383035">SOLR-418</key>
            <summary>Editorial Query Boosting Component</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryantxu">Ryan McKinley</assignee>
                                    <reporter username="ryantxu">Ryan McKinley</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Nov 2007 02:04:44 +0000</created>
                <updated>Fri, 10 May 2013 11:40:04 +0100</updated>
                            <resolved>Fri, 18 Jan 2008 05:33:39 +0000</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                    <component>search</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12545939" author="ryantxu" created="Tue, 27 Nov 2007 17:45:38 +0000"  >&lt;p&gt;Here is a first draft that includes recent changes to &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-281&quot; title=&quot;Search Components (plugins)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-281&quot;&gt;&lt;del&gt;SOLR-281&lt;/del&gt;&lt;/a&gt;.  This is incomplete and is posted to get early feedback and advice.&lt;/p&gt;

&lt;p&gt;This component loads a file and builds a map of queries to special documents.  The format is:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;boost&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query text=&lt;span class=&quot;code-quote&quot;&gt;&quot;XXXX&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; priority=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query text=&lt;span class=&quot;code-quote&quot;&gt;&quot;YYYY&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; priority=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt; priority=&lt;span class=&quot;code-quote&quot;&gt;&quot;3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query text=&lt;span class=&quot;code-quote&quot;&gt;&quot;ZZZZ&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; priority=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt; priority=&lt;span class=&quot;code-quote&quot;&gt;&quot;3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;3&quot;&lt;/span&gt; priority=&lt;span class=&quot;code-quote&quot;&gt;&quot;5&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/boost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;for the query &quot;YYYY&quot;, document 1 should be in position 1, document 2 in position 3.&lt;br/&gt;
I considered a .csv style format: &lt;br/&gt;
 id,priority,phrase&lt;br/&gt;
or&lt;br/&gt;
 phrase,&lt;span class=&quot;error&quot;&gt;&amp;#91;id,priority&amp;#93;&lt;/span&gt;+&lt;br/&gt;
but I think the XML equivalent will be easier to edit/maintain.&lt;/p&gt;

&lt;p&gt;The search handler is configured with:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;searchComponent name=&lt;span class=&quot;code-quote&quot;&gt;&quot;boost&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.solr.handler.component.QueryBoostingComponent&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;analyzer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;string&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;boosts&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;boost.xml&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/searchComponent&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;requestHandler name=&lt;span class=&quot;code-quote&quot;&gt;&quot;/boost&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;solr.SearchHandler&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;arr name=&lt;span class=&quot;code-quote&quot;&gt;&quot;last-components&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str&amp;gt;&lt;/span&gt;boost&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/arr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/requestHandler&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &amp;lt;str name=&quot;analyzer&quot;&amp;gt;string&amp;lt;/str&amp;gt; bit chooses a fieldType (from schema.xml) and uses that to normalize input strings.  This lets us reuse existing lowercase/trim/pattern/etc filters.&lt;/p&gt;

&lt;p&gt;For sorting, I think the best approach is to use a custom sort when sorting by score.  (This isn&apos;t implemented yet)&lt;/p&gt;

&lt;p&gt;Currently for a matching query, this converts the query using:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// Build a query to match the forced documents:
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// (id:1 id:2 id:3 id:4 id:5)^0
&lt;/span&gt;      BooleanQuery boosted = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BooleanQuery( &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; );
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;( Booster b : booster ) {
        TermQuery tq = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TermQuery( &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Term( idField, b.id ) );
        boosted.add( tq, BooleanClause.Occur.SHOULD );
      }
      boosted.setBoost( 0 ); &lt;span class=&quot;code-comment&quot;&gt;// don&apos;t affect the score
&lt;/span&gt;      
      &lt;span class=&quot;code-comment&quot;&gt;// Change the query to insert forced documents
&lt;/span&gt;      BooleanQuery newq = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BooleanQuery( &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; );
      newq.add( query, BooleanClause.Occur.SHOULD );
      newq.add( boosted, BooleanClause.Occur.SHOULD );
      builder.setQuery( newq );
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For debugging, check:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/boost?q=ZZZZ&amp;amp;debugQuery=true&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/boost?q=ZZZZ&amp;amp;debugQuery=true&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Any feedback would be great!&lt;/p&gt;

</comment>
                            <comment id="12546787" author="ryantxu" created="Thu, 29 Nov 2007 16:33:58 +0000"  >&lt;p&gt;Here is an updated patch that implements sorting.  Rather then try to mix boosted and normal results, this uses a custom sort to put the boosted results at the top.  The boost.xml format is now:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query text=&lt;span class=&quot;code-quote&quot;&gt;&quot;ZZZZ&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the query &quot;ZZZZ&quot; documents 1,2,3 will be the first docs returned followed by anything normally matching &quot;ZZZZ&quot;&lt;/p&gt;

&lt;p&gt;If the query specifies a sort, it will be respected.  Only SCORE sorts are modified to boost &lt;br/&gt;
the configured documents.&lt;/p&gt;</comment>
                            <comment id="12547633" author="otis" created="Sun, 2 Dec 2007 15:09:30 +0000"  >&lt;p&gt;It seems like even this last bit would be great to make configurable:&lt;/p&gt;

&lt;p&gt;&quot;If the query specifies a sort, it will be respected. Only SCORE sorts are modified to boost the configured documents.&quot;&lt;/p&gt;

&lt;p&gt;In other words, make it possible to force docs in boost.xml to show up in appropriate positions regardless of the sort type.&lt;/p&gt;

&lt;p&gt;Also, perhaps references to &apos;boost(s)&apos; should now be renamed, so there is no confusion?  Isn&apos;t the &quot;industry standard&quot; for this type of stuff  &quot;one box&quot;?&lt;/p&gt;</comment>
                            <comment id="12548049" author="ryantxu" created="Mon, 3 Dec 2007 23:32:14 +0000"  >&lt;p&gt;I agree with changing the name from &quot;boosts&quot; to something else...  what is &quot;one box&quot;? (Google points me to their new search appliance &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;re always putting the &apos;boosted&apos; docs first...  I&apos;m not &lt;b&gt;against&lt;/b&gt; making this configurable, but is seems wrong.&lt;/p&gt;

&lt;p&gt;If you want to force the sort to have the boosted docs first, isn&apos;t that:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;lst name=&lt;span class=&quot;code-quote&quot;&gt;&quot;invariants&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;str name=&lt;span class=&quot;code-quote&quot;&gt;&quot;sort&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;score desc&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/str&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/lst&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is there a real use case to have &apos;sort=date desc&apos; put the boosted docs first?&lt;/p&gt;</comment>
                            <comment id="12548054" author="yseeley@gmail.com" created="Mon, 3 Dec 2007 23:47:37 +0000"  >&lt;p&gt;It seems like the user should be in control of if these docs are added &amp;amp; sorted first, regardless of what the regular sort is.&lt;/p&gt;</comment>
                            <comment id="12548065" author="klaasm" created="Tue, 4 Dec 2007 00:05:48 +0000"  >&lt;p&gt;I think this makes a lot of sense, though I wonder if it might make sense to uniquify queries based on more than the query string.  Certainly the results for a given query would depend greatly on the match-affecting parameters, f.i., fq= of dismax.  This seems part of the &quot;intrinsic query&quot; to me.  Sort does too, but I don&apos;t use it much so I&apos;m not sure if my intuition is to be trusted there.&lt;/p&gt;</comment>
                            <comment id="12548337" author="ryantxu" created="Tue, 4 Dec 2007 18:32:36 +0000"  >&lt;p&gt;To be clear, this respects filter queries.  For:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/boost?q=ZZZZ&amp;amp;debugQuery=true&amp;amp;fq=id:2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/boost?q=ZZZZ&amp;amp;debugQuery=true&amp;amp;fq=id:2&lt;/a&gt;&lt;br/&gt;
only id:2 is returned even though 1&amp;amp;3 are boosted.&lt;/p&gt;

&lt;p&gt;I suppose we could do something to make the intrinsic query include other fields.  Perhaps&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;boost&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;param name=&lt;span class=&quot;code-quote&quot;&gt;&quot;q&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;string&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;param name=&lt;span class=&quot;code-quote&quot;&gt;&quot;fq&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;another&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;docs&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/docs&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/boost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query params=&lt;span class=&quot;code-quote&quot;&gt;&quot;q=string&amp;amp;fq=another&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;          
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;                    
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;but&lt;/b&gt; I think this gets more complicated then necessary.  For the cases I can think of where you would want different docs boosted, you could just register a different handler with different boosted docs / invariants.  This kind of functionality only really makes sense with dismax style user queries rather then standard lucene query syntax.  That is &quot;dog&quot; rather then &quot;name:dog^3 content:dog^1&quot;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;re terminology.  Maybe using the word &quot;boost&quot; will get too confusing.  Perhaps &quot;elevate&quot;, &quot;promote&quot;, &quot;force top documents&quot;?  &lt;/p&gt;

&lt;p&gt;rather then the &apos;QueryBoostingComponent&apos;, this could be the DocumentElevationComponent&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;elevate&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query phrase=&lt;span class=&quot;code-quote&quot;&gt;&quot;XXXX&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query text=&lt;span class=&quot;code-quote&quot;&gt;&quot;YYYY&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/elevate&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The fastsearch glossary has a few terms that may be relevant?&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Absolute boosting&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;Absolute boosting enables a document to be consistently displayed at a given position in the result set when a user searches with a specific query.  It also prevents individual documents from being displayed when a user searches with a specific query.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Under boosting, they have:&lt;/p&gt;
&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;Boosting may be applied in two ways:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Query independent (document boosting). This is used to boost high quality pages for all queries that match the document&lt;/li&gt;
	&lt;li&gt;Query dependant (query boosting). In this case specific documents may be boosted for given queries&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Their &quot;Absolute boosting&quot; description makes me wonder if we should add a flag to &quot;burry&quot; or &quot;hide&quot; a document for a given query.  maybe:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt; hide=&lt;span class=&quot;code-quote&quot;&gt;&quot;true&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12548339" author="yseeley@gmail.com" created="Tue, 4 Dec 2007 18:33:36 +0000"  >&lt;p&gt;Is there a way to specify that the file is in the index directory (so it can be replicated out like the rest of the index?)&lt;/p&gt;</comment>
                            <comment id="12548347" author="ryantxu" created="Tue, 4 Dec 2007 18:49:53 +0000"  >&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; Is there a way to specify that the file is in the index directory (so it can be replicated out like the rest of the index?)&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;Do we do that anywhere else?  Is there / should there be a standard way to do this?  I remember you discussing this elsewhere, but I don&apos;t know where.  external value sources?&lt;/p&gt;

&lt;p&gt;If you put config files in the index directory, how do you handle the empty new index case?  &lt;/p&gt;

&lt;p&gt;You get a FileNotFoundException if you have&lt;br/&gt;
 /data/index/boosts.xml without an index in that directory&lt;/p&gt;</comment>
                            <comment id="12548505" author="hossman" created="Wed, 5 Dec 2007 01:58:13 +0000"  >&lt;p&gt;&amp;gt; Is there a way to specify that the file is in the index directory (so it can be replicated &lt;br/&gt;
&amp;gt; out like the rest of the index?)&lt;/p&gt;

&lt;p&gt;that definitely seems like a separate issue that we should attempt to solve on the whole for all type of config files down the road ... it also assumes that this component will reread the file on every newSearcher (i haven&apos;t read the patch, but i&apos;m assuming it doesn&apos;t)&lt;/p&gt;</comment>
                            <comment id="12549332" author="ryantxu" created="Fri, 7 Dec 2007 08:20:39 +0000"  >&lt;p&gt;updated to work with trunk.  added &apos;forceBoosting=&quot;true&quot; argument to force boosting regardless of the requested sort.&lt;/p&gt;

&lt;p&gt;Unless we figure out a way to do absolute positionaing, I think this component should be renamed &apos;DocumentElevationComponent&apos;&lt;/p&gt;</comment>
                            <comment id="12549538" author="ryantxu" created="Fri, 7 Dec 2007 20:00:09 +0000"  >&lt;p&gt;I would like to commit most of this patch under &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-281&quot; title=&quot;Search Components (plugins)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-281&quot;&gt;&lt;del&gt;SOLR-281&lt;/del&gt;&lt;/a&gt;.  I will leave out the QueryBoostingComponent stuff and just commit the changes to the component framework that make it possible to configure.&lt;/p&gt;</comment>
                            <comment id="12549677" author="ryantxu" created="Sat, 8 Dec 2007 09:04:05 +0000"  >&lt;p&gt;Updated patch for trunk.  This also&lt;br/&gt;
1. renames the component &apos;QueryElevationComponent&apos; and uses the term &apos;elevate&apos; rather then &apos;boost&apos;&lt;/p&gt;

&lt;p&gt;2. Implements &apos;exclude&apos; function&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;query text=&lt;span class=&quot;code-quote&quot;&gt;&quot;ipod&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;doc id=&lt;span class=&quot;code-quote&quot;&gt;&quot;MA147LL/A&quot;&lt;/span&gt; exclude=&lt;span class=&quot;code-quote&quot;&gt;&quot;true&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12553506" author="ryantxu" created="Wed, 19 Dec 2007 21:39:31 +0000"  >&lt;p&gt;Here is an updated patch that allows you to put the configuration in the data directory and have it reload for each IndexReader.&lt;/p&gt;

&lt;p&gt;Assuming the component is initalized with:&lt;br/&gt;
&amp;lt;str name=&quot;config-file&quot;&amp;gt;elevate.xml&amp;lt;/str&amp;gt;&lt;/p&gt;

&lt;p&gt;If elevate.xml exists within the conf directory it will be loaded once at startup.  If it exists within the &apos;data&apos; directory, it will be reloaded after &amp;lt;commit/&amp;gt;&lt;/p&gt;

&lt;p&gt;Check &lt;a href=&quot;http://wiki.apache.org/solr/QueryElevationComponent&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/QueryElevationComponent&lt;/a&gt; for tentative docs.&lt;/p&gt;

&lt;p&gt;This also refactored the &apos;&apos;&apos;getLatestFile&apos;&apos; logic out of o.a.s.search.function.FileFloatSource and put it in a new class: o.a.s.util.VersionedFile&lt;/p&gt;</comment>
                            <comment id="12553526" author="ryantxu" created="Wed, 19 Dec 2007 22:47:07 +0000"  >&lt;p&gt;Updated to accept a runtime query param &quot;enableElevation&quot; &amp;#8211; this can disable elevation.&lt;/p&gt;</comment>
                            <comment id="12554212" author="koji" created="Mon, 24 Dec 2007 02:44:13 +0000"  >&lt;p&gt;I&apos;m interested in this feature and have few comments:&lt;/p&gt;

&lt;p&gt;1. I was bit confused &quot;analyzer&quot; in solrconfig.xml. I thought &quot;fieldType&quot; would be straightforward to me.&lt;br/&gt;
2. Pardon me if I&apos;m wrong, but does elevationCache need to be synchronized in getElevationMap() as it is called from prepare()?&lt;/p&gt;</comment>
                            <comment id="12554640" author="ryantxu" created="Fri, 28 Dec 2007 02:16:25 +0000"  >&lt;p&gt;Thanks Koji &amp;#8211; here is an updated patch&lt;/p&gt;

&lt;p&gt;#1 - I change, &quot;analyzer&quot; to &quot;queryFieldType&quot; &amp;#8211; this is the fieldType used to analyze the incoming query.&lt;/p&gt;

&lt;p&gt;#2 - I changed it to call &lt;tt&gt;synchronized( elevationCache )&lt;/tt&gt; when it checks a non-null entry.  It does not need to be synchronized with a null key because in this case, the cache is only built on startup.&lt;/p&gt;

&lt;p&gt;To be safe, we could just use:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;IndexReader,Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, ElevationObj&amp;gt;&amp;gt; elevationCache = 
    Collections.synchronizedMap( &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; WeakHashMap&amp;lt;IndexReader, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,ElevationObj&amp;gt;&amp;gt;() );
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but I&apos;m not sure which is better.&lt;/p&gt;</comment>
                            <comment id="12560199" author="yseeley@gmail.com" created="Fri, 18 Jan 2008 02:22:57 +0000"  >&lt;p&gt;Looks good Ryan!&lt;br/&gt;
I reviewed, and changed a few minor things (new patch attached)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fixed a concurrency bug (access of map outside of sync can lead to concurrent modification exception or other errors, even if that key/value pair will never change)&lt;/li&gt;
	&lt;li&gt;changed the example example.xml a little, and switched the /elevate handler to load lazily&lt;/li&gt;
	&lt;li&gt;updated code/configs to reflect SearchHandler move&lt;/li&gt;
	&lt;li&gt;fixed (pre-existing) bugs in code moved to VersionedFile (multiple opens of same file)&lt;/li&gt;
	&lt;li&gt;dropped the seemingly  unrelated changes in SolrServlet (part of another patch?)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12560228" author="ryantxu" created="Fri, 18 Jan 2008 05:35:46 +0000"  >&lt;p&gt;Thanks for looking at this - and fixing it up&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;dropped the seemingly unrelated changes in SolrServlet (part of another patch?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;not sure how that got in there.... it was part of an issue I had with resin loading servlets before filters and &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-350&quot; title=&quot;Manage Multiple SolrCores&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-350&quot;&gt;&lt;del&gt;SOLR-350&lt;/del&gt;&lt;/a&gt; initialization.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12372788">SOLR-281</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12373465" name="SOLR-418-QueryBoosting.patch" size="42223" author="yseeley@gmail.com" created="Fri, 18 Jan 2008 02:22:57 +0000"/>
                            <attachment id="12372281" name="SOLR-418-QueryBoosting.patch" size="43247" author="ryantxu" created="Fri, 28 Dec 2007 02:16:25 +0000"/>
                            <attachment id="12371990" name="SOLR-418-QueryBoosting.patch" size="41671" author="ryantxu" created="Wed, 19 Dec 2007 22:47:07 +0000"/>
                            <attachment id="12371987" name="SOLR-418-QueryBoosting.patch" size="41209" author="ryantxu" created="Wed, 19 Dec 2007 21:39:31 +0000"/>
                            <attachment id="12371284" name="SOLR-418-QueryBoosting.patch" size="29047" author="ryantxu" created="Sat, 8 Dec 2007 09:04:05 +0000"/>
                            <attachment id="12371208" name="SOLR-418-QueryBoosting.patch" size="53048" author="ryantxu" created="Fri, 7 Dec 2007 08:20:39 +0000"/>
                            <attachment id="12370553" name="SOLR-418-QueryBoosting.patch" size="54561" author="ryantxu" created="Thu, 29 Nov 2007 16:33:57 +0000"/>
                            <attachment id="12370327" name="SOLR-418-QueryBoosting.patch" size="47998" author="ryantxu" created="Tue, 27 Nov 2007 17:45:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 2 Dec 2007 15:09:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7180</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxrgf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20767</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>