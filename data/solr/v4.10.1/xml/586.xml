<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:18:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-586/SOLR-586.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-586] Maven - Solr Artifact Publishing</title>
                <link>https://issues.apache.org/jira/browse/SOLR-586</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;I know there is an issue open (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-19&quot; title=&quot;pom.xml to support maven2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-19&quot;&gt;&lt;del&gt;SOLR-19&lt;/del&gt;&lt;/a&gt;) for getting a solr build going under Maven.  This issue differs from that in that it does not concern the build process of the solr project, but rather simple dependency management for maven projects that depend on the solr artifacts.  I&apos;ve outlined a way to easily incorporate solrj + dependencies into your own maven projects, in hopes that others doing this find it useful.  &lt;/p&gt;

&lt;p&gt;This issue&apos;s purpose is twofold:&lt;br/&gt;
1) Let others know the process.&lt;br/&gt;
2) Open the idea of whether this can be streamlined/incorporated into the standard build in some manner.&lt;/p&gt;

&lt;p&gt;Depending on Solrj in a Maven Project&lt;br/&gt;
1) Build a 1.3 snapshot.&lt;br/&gt;
  1.1) Check out the code from &lt;a href=&quot;http://svn.apache.org/repos/asf/lucene/solr/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/lucene/solr/&lt;/a&gt;&lt;br/&gt;
  1.2) Build using &quot;ant dist&quot; &lt;br/&gt;
2) Install the artifacts into your maven repo, using the included pom files.&lt;br/&gt;
  2.1) Move to your dist/apache-solr-1.3-dev/dist directory.&lt;br/&gt;
  2.2) Copy the attached pom files into this directory.&lt;br/&gt;
  2.3) Install solr-common into your repo.&lt;br/&gt;
    ex) mvn install:install-file -Dfile=apache-solr-common-1.3-dev.jar -DpomFile=solr-common.pom.xml&lt;br/&gt;
  2.4) Install solrj into your repo.&lt;br/&gt;
    ex) mvn install:install-file -Dfile=apache-solr-solrj-1.3-dev.jar -DpomFile=solrj.pom.xml&lt;br/&gt;
3) Use Solrj in your existing Maven projects by including it as a dependency in your own pom.xml&lt;br/&gt;
        &amp;lt;dependency&amp;gt;&lt;br/&gt;
            &amp;lt;groupId&amp;gt;org.apache.lucene.solr&amp;lt;/groupId&amp;gt;&lt;br/&gt;
            &amp;lt;artifactId&amp;gt;solrj&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
            &amp;lt;version&amp;gt;1.3-SNAPSHOT&amp;lt;/version&amp;gt;&lt;br/&gt;
        &amp;lt;/dependency&amp;gt;&lt;/p&gt;

&lt;p&gt;So given the above process, it seems like it would be relatively simple to standardize this process by:&lt;br/&gt;
1) Including the solr-common and solrj pom files w/ the dist.  &lt;br/&gt;
2) Automating the periodic installation of the artifacts to a central repo, such as the ibiblio repo.  &lt;/p&gt;

&lt;p&gt;If those steps were performed, then creating a (maven) project based on solrj would be super simple: just #3 from above.  Since most custom developments are probably for the clients, it seems like simplifying this would be a nice step to take. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12397087">SOLR-586</key>
            <summary>Maven - Solr Artifact Publishing</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="s.crissman">Spencer Crissman</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 May 2008 16:59:23 +0100</created>
                <updated>Fri, 10 May 2013 11:40:23 +0100</updated>
                            <resolved>Thu, 21 Aug 2008 16:27:28 +0100</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>clients - java</component>
                    <component>contrib - DataImportHandler</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="12601493" author="hossman" created="Sun, 1 Jun 2008 21:02:42 +0100"  >&lt;blockquote&gt;
&lt;p&gt;So given the above process, it seems like it would be relatively simple to standardize this process by:&lt;br/&gt;
1) Including the solr-common and solrj pom files w/ the dist.&lt;br/&gt;
2) Automating the periodic installation of the artifacts to a central repo, such as the ibiblio repo.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t use Maven, but i&apos;m +1 to the idea.&lt;/p&gt;

&lt;p&gt;FWIW: this is the same basic approach lucene-java took ... most committers were hesitant to rip out the ant build files they were use to in order to use maven to build with, but changes were made to at least generate poms and help automate publishing jars and POMs to the Apache maven repository (which is mirrored by ibiblio)&lt;/p&gt;</comment>
                            <comment id="12620124" author="craigmcc" created="Wed, 6 Aug 2008 04:48:48 +0100"  >&lt;p&gt;A third POM to install the Data Import Handler jar file as a separate artifact.  This will become obsolete if/when DIH is included in the Solr Common jar.&lt;/p&gt;</comment>
                            <comment id="12620125" author="craigmcc" created="Wed, 6 Aug 2008 04:51:01 +0100"  >&lt;p&gt;A shell script to install all three (including the new DIH jar file) Solr jar files into a Maven 2 repository.  See comments at the beginning of the script for setup and execution instructions.&lt;/p&gt;</comment>
                            <comment id="12620126" author="craigmcc" created="Wed, 6 Aug 2008 04:53:10 +0100"  >&lt;p&gt;Thanks for the work on this!  As I had a need for the same thing (use SolrJ in a Maven based project), it was a happy moment to see someone else had done the basic work for me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  To pay back favor for favor, I&apos;ve added a third POM for the DataImportHandler jar (only needed until DIH is included in the common jar), and a shell script (solr2mvn.sh) that will install all three artifacts for you.  See the comments at the beginning of the script for setup and execution instructions.&lt;/p&gt;
</comment>
                            <comment id="12620213" author="happygiraffe" created="Wed, 6 Aug 2008 12:05:35 +0100"  >&lt;p&gt;This looks fantastic &#8212; it would be really useful for us, we&apos;re doing it by hand at present.&lt;/p&gt;

&lt;p&gt;I do have one request though: how hard would it be to attach a source jar as well?  The addition to the POM is fairly simple.  Most of our projects have this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-source-plugin&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;attach-sources&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I find that this makes maven artifacts a &lt;em&gt;load&lt;/em&gt; more useful.&lt;/p&gt;

&lt;p&gt;Ah, I see the POM isn&apos;t actually being used in and of itself. It&apos;s just there to list the dependencies.  I&apos;d need to amend &lt;tt&gt;build.xml&lt;/tt&gt; to produce source jars as well.  Oh well.  I&apos;ll try and see how much effort that will be.&lt;/p&gt;</comment>
                            <comment id="12620316" author="craigmcc" created="Wed, 6 Aug 2008 17:52:17 +0100"  >&lt;blockquote&gt;&lt;p&gt;I do have one request though: how hard would it be to attach a source jar as well?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree that sources jars would be helpful ... and javadoc jars as well, for that matter.  As you noted, the poms are not currently being used to build Solr &amp;#8211; they are just used for the packaging.  I&apos;ll take a crack at updating the install script, once the Solr build process produces sources and javadoc jars in addition to the current binary jars.&lt;/p&gt;</comment>
                            <comment id="12620492" author="craigmcc" created="Thu, 7 Aug 2008 02:51:10 +0100"  >&lt;p&gt;Additional POM for the server part of Apache Solr.&lt;/p&gt;</comment>
                            <comment id="12620493" author="craigmcc" created="Thu, 7 Aug 2008 02:51:43 +0100"  >&lt;p&gt;Updated script that copies the server POM and JAR files as well.&lt;/p&gt;</comment>
                            <comment id="12621166" author="shalinmangar" created="Sat, 9 Aug 2008 19:11:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;A third POM to install the Data Import Handler jar file as a separate artifact. This will become obsolete if/when DIH is included in the Solr Common jar.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;DIH is a contrib project which means it will always be a separate artifact.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I agree that sources jars would be helpful ... and javadoc jars as well, for that matter&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree that source and javadoc jars will be useful. Javadocs are already generated separately for solrj and DIH but not as jars. The solr-commons and solr core javadocs are combined together currently. We will need modifications to build files to generate javadoc and source jars for each of the artifacts separately.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ll take a crack at updating the install script, once the Solr build process produces sources and javadoc jars in addition to the current binary jars.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it would be better to integrate maven deploy with the ant builds similar to how Lucene does it.&lt;/p&gt;

&lt;p&gt;I&apos;m going to start making the changes. Hope to post a patch soon.&lt;/p&gt;</comment>
                            <comment id="12621174" author="craigmcc" created="Sat, 9 Aug 2008 20:43:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m going to start making the changes. Hope to post a patch soon.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool.  Two things I noticed that we should pay attention to:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The solr-server POM I posted should also declare dependencies on the Lucene&lt;br/&gt;
  2.4-DEV jars that it uses (which also implies you need to have installed those&lt;br/&gt;
  locally by running &quot;ant generate-maven-artifacts&quot; in the Lucene source tree).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Given we need to do that, it would be nice to add a similar build target into the&lt;br/&gt;
  Solr build.xml file, so the prototypes get things like the right version numbers.&lt;br/&gt;
  This will also require the same prerequesite that the Lucene build does, that&lt;br/&gt;
  you have installed the Ant Maven Tasks jar into your Ant environment.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Does SolrJ also require a Lucene dependency if you use it in the &quot;embedded server&quot; style?&lt;/p&gt;</comment>
                            <comment id="12621186" author="shalinmangar" created="Sat, 9 Aug 2008 21:47:08 +0100"  >&lt;blockquote&gt;&lt;p&gt;The solr-server POM I posted should also declare dependencies on the Lucene 2.4-DEV jars that it uses (which also implies you need to have installed those locally by running &quot;ant generate-maven-artifacts&quot; in the Lucene source tree).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m not sure how we will manage the dependency of lucene jars. It would be wrong to declare a dependency on lucene snapshot jars since Solr has a particular revision of the trunk checked in. We should probably hold on to the solr-server for now and focus on SolrJ (without embedded) and DIH working. The DIH artifact should only depend on solr-commons because this jar will only be used for extending DIH API.&lt;/p&gt;</comment>
                            <comment id="12621208" author="craigmcc" created="Sun, 10 Aug 2008 04:20:00 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure how we will manage the dependency of lucene jars. It would be wrong to declare a dependency on lucene snapshot jars since Solr has a particular revision of the trunk checked in.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The typical Maven approach to this would be to make each of the specific Lucene jars Solr depends on (the ones checked in to the &quot;lib&quot; directory) into &lt;b&gt;Solr&lt;/b&gt; artifacts (groupId of org.apache.lucene.solr), with version number that correspond to the Solr version they are a part of.  That way, there&apos;s absolutely no interference with Lucene&apos;s own Maven artifacts, and no dependence on Lucene SNAPSHOT versions which can change underneath us.&lt;/p&gt;</comment>
                            <comment id="12621673" author="craigmcc" created="Tue, 12 Aug 2008 03:15:11 +0100"  >&lt;p&gt;Heres a substantially updated version of the earlier attachments, based in large part on the approach the Lucene folks took (creds to them for doing the grunt work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  To use it:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Install the Maven Ant Tasks in a place accessible to your Ant&lt;br/&gt;
  (see &amp;lt;&lt;a href=&quot;http://maven.apache.org/ant-tasks.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/ant-tasks.html&lt;/a&gt;&amp;gt; for more info).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Download and unzip the patch into the top level directory of&lt;br/&gt;
  your Solr source tree from SVN.  This will create a &quot;maven&quot;&lt;br/&gt;
  subdirectory with the new files.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Execute &quot;ant clean dist&quot; to create the usual Solr artifacts.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Change directory to &quot;maven&quot;, then execute &quot;ant -f build-maven.xml&quot;&lt;br/&gt;
  to create the Maven artifacts and install them on your local repository.&lt;br/&gt;
  This includes the Lucene variants checked in to the &quot;lib&quot; directory,&lt;br/&gt;
  but done in a way that won&apos;t interfere with Lucene&apos;s own artifacts&lt;br/&gt;
  when 2.4 goes final.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Shalin, you&apos;re welcome to use whatever of this makes sense &amp;#8211; but this functionality scratched my own personal itch quite nicely (Maven based app that needed Solrj in embedded mode).&lt;/p&gt;
</comment>
                            <comment id="12621674" author="craigmcc" created="Tue, 12 Aug 2008 03:20:16 +0100"  >&lt;p&gt;Hmm ... JIRA doesn&apos;t make it at all obvious that the previous comment refers to the attachment named &amp;lt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-586&quot; title=&quot;Maven - Solr Artifact Publishing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-586&quot;&gt;&lt;del&gt;SOLR-586&lt;/del&gt;&lt;/a&gt;-20080811-craigmcc.zip&amp;gt; even though they were uploaded together ... so this should clarify things.&lt;/p&gt;</comment>
                            <comment id="12621757" author="shalinmangar" created="Tue, 12 Aug 2008 11:17:39 +0100"  >&lt;p&gt;This is awesome! Thanks!&lt;/p&gt;

&lt;p&gt;I&apos;m integrating it with the existing builds so that there would be no need for a maven folder.&lt;/p&gt;
</comment>
                            <comment id="12621788" author="shalinmangar" created="Tue, 12 Aug 2008 13:11:34 +0100"  >&lt;p&gt;This patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-586&quot; title=&quot;Maven - Solr Artifact Publishing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-586&quot;&gt;&lt;del&gt;SOLR-586&lt;/del&gt;&lt;/a&gt;.patch) integrates all of Craig&apos;s POM files and build targets into the Solr build.xml and directory structure. Solr uses a particular revision of commons-csv for which I&apos;ve created a POM just like Craig did for the lucene jars. The group name for all artifacts is changed to org.apache.solr.&lt;/p&gt;

&lt;p&gt;Another thing I noticed was that we are using a dev-snapshot of stax. Any particular reason for this? Should we move to a stable version? 1.2.0 is the latest stable version I can find on the central maven repository.&lt;/p&gt;</comment>
                            <comment id="12621821" author="ryantxu" created="Tue, 12 Aug 2008 14:57:17 +0100"  >&lt;blockquote&gt;&lt;p&gt;Another thing I noticed was that we are using a dev-snapshot of stax. Any particular reason for this? Should we move to a stable version? 1.2.0 is the latest stable version I can find on the central maven repository.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes, if possible, we should try to avoid dev builds.  However, we should switch the .jar in an independent issue&lt;/p&gt;</comment>
                            <comment id="12621920" author="shalinmangar" created="Tue, 12 Aug 2008 19:34:20 +0100"  >&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Reverted back to org.apache.lucene.solr as the group name due to Maven central repository&apos;s restriction on having groupId same as the controlled domain name.&lt;/li&gt;
	&lt;li&gt;Added target dist-src which packages source code for each artifact&lt;/li&gt;
	&lt;li&gt;Added target dist-javadoc which packages javadoc for each artifact&lt;/li&gt;
	&lt;li&gt;Renamed the main solr jar to apache-solr-server-$
{version}
&lt;p&gt;.jar for consistency with other jars&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;generate-maven-artifact target also adds source and javadocs for each artifact&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If we want to publish nightly maven snapshots, then after executing the main nightly target, we must execute the following on hudson:&lt;br/&gt;
{{&lt;/p&gt;
{ant clean generate-maven-artifacts}
&lt;p&gt;}}&lt;/p&gt;

&lt;p&gt;It will be OK to put a dependency on generate-maven-artifacts in the nightly target. Ofcourse, first we need to setup a build.property file on hudson which gives the URL to maven repo, username and private key. Someone who is familar with how Lucene did this and has karma on hudson will need to take this up now. &lt;/p&gt;

&lt;p&gt;When the artifacts are published, the following should be added to your pom.xml to use solrj&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.lucene.solr&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;solr-solrj&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3-SNAPSHOT&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To use the EmbeddedSolrServer, a dependency to solr-server must also be added:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.lucene.solr&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;solr-core&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3-SNAPSHOT&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ve not added a dependency on solr-server for SolrJ because it is only needed for EmbeddedSolrServer but not if you only use CommonsHttpSolrServer.&lt;/p&gt;

&lt;p&gt;This is ready to be committed now.&lt;/p&gt;</comment>
                            <comment id="12621950" author="craigmcc" created="Tue, 12 Aug 2008 21:07:25 +0100"  >&lt;p&gt;The patch fails to apply cleanly for me ... the changes to &quot;contrib/dataimporthandler/build.xml&quot; fail at lines 51 and 61.  Did something change in this file in parallel to your creating the patch?  (I&apos;m at r685285).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ve not added a dependency on solr-server for SolrJ because it is only needed for EmbeddedSolrServer but not if you only use CommonsHttpSolrServer.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1.&lt;/p&gt;</comment>
                            <comment id="12622077" author="shalinmangar" created="Wed, 13 Aug 2008 04:03:28 +0100"  >&lt;p&gt;Can you update to the latest trunk and try again?&lt;/p&gt;

&lt;p&gt;It applies cleanly on the trunk.&lt;/p&gt;</comment>
                            <comment id="12622093" author="craigmcc" created="Wed, 13 Aug 2008 05:36:37 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can you update to the latest trunk and try again?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Bad News:  Even with a fresh checkout of the source, the patch fails to apply.&lt;/p&gt;

&lt;p&gt;Good News:  This looks like a botch in the patch file itself; there&apos;s a missing &quot;-&quot; to delete the previous line 53 of the old &quot;contrib/dataimporthandler/build.xml&quot;.  OK, let&apos;s fix it manually and try the build.&lt;/p&gt;

&lt;p&gt;Bad News:  &quot;ant clean generate-maven-artifacts&quot; fails.  This time it&apos;s because the patched version of the top-level build.xml is expecting the POM templates to be in either &quot;lib&quot; or the top level directories for contrib stuff, where they are actually all in the top level directory.  Let&apos;s fix that as well.&lt;/p&gt;

&lt;p&gt;Best News:  Everything works.&lt;/p&gt;

&lt;p&gt;I suspect that the second patch file doesn&apos;t necessarily reflect all the most recent changes.  My recommendation is to go ahead and commit the patch as it actually exists in Shalin&apos;s tree, and then clean up anything that might still be missed up.  We shouldn&apos;t disrupt anything if the nightly build script hasn&apos;t been changed yet.  I can commit to check any newly committed change first thing tomorrow (Pacific time).&lt;/p&gt;</comment>
                            <comment id="12622097" author="shalinmangar" created="Wed, 13 Aug 2008 06:02:30 +0100"  >&lt;p&gt;Are you sure you are using the latest &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-586&quot; title=&quot;Maven - Solr Artifact Publishing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-586&quot;&gt;&lt;del&gt;SOLR-586&lt;/del&gt;&lt;/a&gt;.patch ? I just tried it on a clean checkout and it works well.&lt;/p&gt;</comment>
                            <comment id="12622099" author="shalinmangar" created="Wed, 13 Aug 2008 06:09:26 +0100"  >&lt;p&gt;Ok, my bad. It doesn&apos;t work. I should stop using IDEs to create/apply patches. I&apos;ll post a new one shortly.&lt;/p&gt;</comment>
                            <comment id="12622100" author="shalinmangar" created="Wed, 13 Aug 2008 06:16:12 +0100"  >&lt;p&gt;This one should be correct. Sorry for all the confusion I caused.&lt;/p&gt;</comment>
                            <comment id="12622121" author="craigmcc" created="Wed, 13 Aug 2008 08:00:09 +0100"  >&lt;p&gt;I still have the same problems as reported earlier (patch doesn&apos;t apply, build.xml changes reflect &quot;lib/xxx&quot; paths for the templates), so it still fails for me.  However, I still recommend that we go ahead and apply the actual commits, and clean up any problems later.&lt;/p&gt;</comment>
                            <comment id="12622122" author="shalinmangar" created="Wed, 13 Aug 2008 08:03:16 +0100"  >&lt;p&gt;Try adding -p0. I have the same problem if I don&apos;t use -p0 in the patch command.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;patch -p0 &amp;lt; &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-586&quot; title=&quot;Maven - Solr Artifact Publishing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-586&quot;&gt;&lt;del&gt;SOLR-586&lt;/del&gt;&lt;/a&gt;.patch&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="12622156" author="shalinmangar" created="Wed, 13 Aug 2008 11:11:12 +0100"  >&lt;p&gt;Committed revision 685497.&lt;/p&gt;

&lt;p&gt;Thanks Spencer and Craig!&lt;/p&gt;

&lt;p&gt;I&apos;ll keep this issue open for a day or two in case any problems show up with the builds or until we can make the necessary changes on hudson.&lt;/p&gt;</comment>
                            <comment id="12622207" author="ryantxu" created="Wed, 13 Aug 2008 14:14:09 +0100"  >&lt;p&gt;Is this expected?  Or do we each need to download and install the maven ant task?&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;bicho:s3 ryan$ ant generate-maven-artifacts
Buildfile: build.xml

maven.ant.tasks-check:

BUILD FAILED
/Users/ryan/Documents/workspace/APACHE/s3/common-build.xml:334:
##################################################################
Maven ant tasks not found.
Please make sure the maven-ant-tasks jar is in ANT_HOME/lib, or made
available to Ant using other mechanisms like -lib or CLASSPATH.
##################################################################
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12622210" author="shalinmangar" created="Wed, 13 Aug 2008 14:22:53 +0100"  >&lt;p&gt;Yes, this is expected. You must have the maven-ant-tasks jar in your classpath to use the maven-specific ant targets.&lt;/p&gt;

&lt;p&gt;We must publish jars ourselves (through hudson for snapshots and through a one-time script for the release). Once that is done, these steps will not be needed for any user who wants to use the artifacts in his maven project.&lt;/p&gt;</comment>
                            <comment id="12622215" author="shalinmangar" created="Wed, 13 Aug 2008 14:46:00 +0100"  >&lt;p&gt;One important point to note is that along with Solr artifacts, we will also publish un-released pieces of code (Lucene 2.4-dev and commons-csv snapshots) as maven artifacts. Though they will be under Solr&apos;s groupId, but they will still be available for people to use through the central repository.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if that is OK with Apache&apos;s release policies.&lt;/p&gt;</comment>
                            <comment id="12622278" author="craigmcc" created="Wed, 13 Aug 2008 17:59:19 +0100"  >&lt;blockquote&gt;&lt;p&gt;Committed revision 685497.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This worked for me.  Thanks!&lt;/p&gt;

&lt;p&gt;bp. One important point to note is that along with Solr artifacts, we will also publish un-released pieces of code (Lucene 2.4-dev and commons-csv snapshots) as maven artifacts. Though they will be under Solr&apos;s groupId, but they will still be available for people to use through the central repository.&lt;/p&gt;

&lt;p&gt;Well, technically releasing Solr 1.3 &lt;b&gt;will&lt;/b&gt; release these artifacts (they&apos;ll be branded as part of Solr version 1.3, not Lucene 2.4-dev, in the repository).  In this particular case, it&apos;s even the same PMC, so presumably the Lucene Java folks will be in agreement with this if the vote passes.  If that wasn&apos;t the case, the normal license compatibility rules would apply.&lt;/p&gt;</comment>
                            <comment id="12622332" author="ryantxu" created="Wed, 13 Aug 2008 20:46:14 +0100"  >&lt;p&gt;minor changes:&lt;/p&gt;

&lt;p&gt;1. change the inceptionYear from 2000 -&amp;gt; 2006 (when solr donated to Apache)&lt;br/&gt;
2. removed &quot;Embedded&quot; from the core description.  &lt;/p&gt;</comment>
                            <comment id="12622449" author="shalinmangar" created="Thu, 14 Aug 2008 07:01:49 +0100"  >&lt;p&gt;Committed revision 685781.&lt;/p&gt;

&lt;p&gt;Thanks Ryan!&lt;/p&gt;</comment>
                            <comment id="12622660" author="ryantxu" created="Thu, 14 Aug 2008 20:50:24 +0100"  >&lt;p&gt;I&apos;m running into a funny issue.&lt;/p&gt;

&lt;p&gt;$ ant clean&lt;br/&gt;
$ ant generate-maven-artifacts&lt;/p&gt;

&lt;p&gt;everything works great&lt;/p&gt;

&lt;p&gt;now run: ant generate-maven-artifacts again.  The second time, I get:&lt;/p&gt;
&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;BUILD FAILED&lt;br/&gt;
/Users/ryan/Documents/workspace/APACHE/s3/build.xml:645: A tar file cannot include itself&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;not really a big deal, but figured I&apos;d point it out...&lt;/p&gt;</comment>
                            <comment id="12622665" author="shalinmangar" created="Thu, 14 Aug 2008 21:02:41 +0100"  >&lt;p&gt;Nothing to do with generate-maven-artifacts target. Run ant package twice and the same thing happens. Simply deleting the tar/zip before package runs will fix this. I shall make the change in the package target.&lt;/p&gt;</comment>
                            <comment id="12622679" author="ryantxu" created="Thu, 14 Aug 2008 21:43:57 +0100"  >&lt;p&gt;the included pom is missing a reference to commons-fileupload.  This is needed in the core and embedded solrj&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: client/java/solrj/solr-solrj-pom.xml.template
===================================================================
--- client/java/solrj/solr-solrj-pom.xml.template	(revision 686022)
+++ client/java/solrj/solr-solrj-pom.xml.template	(working copy)
@@ -66,6 +66,11 @@
       &amp;lt;artifactId&amp;gt;commons-logging&amp;lt;/artifactId&amp;gt;
       &amp;lt;version&amp;gt;1.0.4&amp;lt;/version&amp;gt;
     &amp;lt;/dependency&amp;gt;
+    &amp;lt;dependency&amp;gt;
+      &amp;lt;groupId&amp;gt;commons-fileupload&amp;lt;/groupId&amp;gt;
+      &amp;lt;artifactId&amp;gt;commons-fileupload&amp;lt;/artifactId&amp;gt;
+      &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;
+    &amp;lt;/dependency&amp;gt;
 
     &amp;lt;!-- Stax --&amp;gt;
     &amp;lt;dependency&amp;gt;

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12622688" author="shalinmangar" created="Thu, 14 Aug 2008 21:54:17 +0100"  >&lt;p&gt;Committed revision 686039.&lt;/p&gt;

&lt;p&gt;Sorry, my bad. Thanks Ryan!&lt;/p&gt;</comment>
                            <comment id="12623773" author="gsingers" created="Tue, 19 Aug 2008 21:00:57 +0100"  >&lt;p&gt;Just an FYI, I had the Maven 2.0.7 Ant tasks and got:&lt;/p&gt;

&lt;p&gt;generate-maven-artifacts:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir: ../solr-clean/build/maven&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir: .../solr-clean/dist/maven&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;copy&amp;#93;&lt;/span&gt; Copying 1 file to .../solr-clean/build/maven/src/maven&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;artifact:install-provider&amp;#93;&lt;/span&gt; Installing provider: org.apache.maven.wagon:wagon-ssh:jar:1.0-beta-2:runtime&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;br/&gt;
.../solr-clean/build.xml:695: The following error occurred while executing this line:&lt;br/&gt;
....solr-clean/common-build.xml:252: artifact:deploy doesn&apos;t support the &quot;uniqueVersion&quot; attribute&lt;/p&gt;

&lt;p&gt;Upgrading them to 2.0.9 and it works.&lt;/p&gt;</comment>
                            <comment id="12623778" author="gsingers" created="Tue, 19 Aug 2008 21:08:37 +0100"  >&lt;p&gt;Can we close this?&lt;/p&gt;</comment>
                            <comment id="12623780" author="shalinmangar" created="Tue, 19 Aug 2008 21:14:42 +0100"  >&lt;p&gt;The uniqueVersion=&quot;false&quot; forces maven to use the same version each time overwriting the artifacts. No need to create a separate snapshot artifact each time &amp;#8211; it will just clog the repository.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can we close this? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ve kept it open just to make sure we remember to start publishing snapshot artifacts before 1.3 and of course released artifact when 1.3 goes out. Some one with enough karma should take a look at lucene&apos;s way of doing this and make the changes on hudson.&lt;/p&gt;</comment>
                            <comment id="12623800" author="gsingers" created="Tue, 19 Aug 2008 21:50:09 +0100"  >&lt;p&gt;I&apos;ll see through the Hudson stuff to take care of the publishing aspects.&lt;/p&gt;</comment>
                            <comment id="12623814" author="gsingers" created="Tue, 19 Aug 2008 22:19:37 +0100"  >&lt;p&gt;I changed the group id to be org.apache.solr per Maven&apos;s recommendation at &lt;a href=&quot;http://maven.apache.org/pom.html#Maven_Coordinates&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/pom.html#Maven_Coordinates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Committed revision 687158.&lt;/p&gt;</comment>
                            <comment id="12623985" author="gsingers" created="Wed, 20 Aug 2008 14:27:45 +0100"  >&lt;p&gt;Have a look at: &lt;a href=&quot;http://people.apache.org/maven-snapshot-repository/org/apache/solr/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/maven-snapshot-repository/org/apache/solr/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll update the wiki w/ details, too, but here&apos;s the gist:&lt;/p&gt;

&lt;p&gt;Hudson builds the artifacts via the generate-maven-artifacts.  A cron job runs on my account on Hudson (just like for Lucene) and copies the artifacts to the snapshot repo on p.a.o.&lt;/p&gt;

&lt;p&gt;Then, the only thing that remains is publishing the artifacts to the official Maven repo on the release.  I will update the release instructions to do this, per the Lucene Java instructions.&lt;/p&gt;</comment>
                            <comment id="12623994" author="shalinmangar" created="Wed, 20 Aug 2008 14:47:11 +0100"  >&lt;p&gt;Wow, this is great! Thanks Grant!&lt;/p&gt;</comment>
                            <comment id="12623997" author="gsingers" created="Wed, 20 Aug 2008 15:00:40 +0100"  >&lt;p&gt;OK, I think we are in pretty good shape.  I updated the Wiki under the committers section, published an initial nightly build.  &lt;/p&gt;

&lt;p&gt;Spencer, et. al. please check it out and let me know if we can close this.  Obviously, we can&apos;t publish the officially released artifacts until after 1.3, so if there is an error there, we will have to reopen the issue.&lt;/p&gt;</comment>
                            <comment id="12624397" author="gsingers" created="Thu, 21 Aug 2008 16:27:28 +0100"  >&lt;p&gt;Maven artifacts are now being published per the link above.  Official release artifacts will be published at that time.&lt;/p&gt;</comment>
                            <comment id="12912262" author="dsmiley" created="Sun, 19 Sep 2010 18:38:43 +0100"  >&lt;p&gt;This hasn&apos;t worked for quite some time.  Should we re-open this or open a new issue?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12343680">SOLR-19</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12388015" name="SOLR-586-20080811-craigmcc.zip" size="13566" author="craigmcc" created="Tue, 12 Aug 2008 03:15:10 +0100"/>
                            <attachment id="12388177" name="SOLR-586-nits.patch" size="852" author="ryantxu" created="Wed, 13 Aug 2008 20:46:14 +0100"/>
                            <attachment id="12388104" name="SOLR-586.patch" size="45093" author="shalinmangar" created="Wed, 13 Aug 2008 06:16:12 +0100"/>
                            <attachment id="12388075" name="SOLR-586.patch" size="45093" author="shalinmangar" created="Tue, 12 Aug 2008 19:34:20 +0100"/>
                            <attachment id="12388043" name="SOLR-586.patch" size="42389" author="shalinmangar" created="Tue, 12 Aug 2008 13:11:34 +0100"/>
                            <attachment id="12383028" name="solr-common.pom.xml" size="1566" author="s.crissman" created="Thu, 29 May 2008 17:01:09 +0100"/>
                            <attachment id="12387611" name="solr-dih.pom.xml" size="1704" author="craigmcc" created="Wed, 6 Aug 2008 04:48:48 +0100"/>
                            <attachment id="12387696" name="solr-server.pom.xml" size="2854" author="craigmcc" created="Thu, 7 Aug 2008 02:51:10 +0100"/>
                            <attachment id="12387697" name="solr2mvn.sh" size="1224" author="craigmcc" created="Thu, 7 Aug 2008 02:51:43 +0100"/>
                            <attachment id="12383027" name="solrj.pom.xml" size="2836" author="s.crissman" created="Thu, 29 May 2008 17:00:37 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 1 Jun 2008 20:02:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7022</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxqfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20602</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>