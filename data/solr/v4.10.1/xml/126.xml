<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:21:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-126/SOLR-126.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-126] Auto-commit documents after time interval</title>
                <link>https://issues.apache.org/jira/browse/SOLR-126</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;If an index is getting updated from multiple sources and needs to add documents reasonably quickly, there should be a good solr side mechanism to help prevent the client from spawning multiple overlapping &amp;lt;commit/&amp;gt; commands.&lt;/p&gt;

&lt;p&gt;My specific use case is sending each document to solr every time hibernate saves an object (see &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-20&quot; title=&quot;A simple Java client for updating and searching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-20&quot;&gt;&lt;del&gt;SOLR-20&lt;/del&gt;&lt;/a&gt;).  This happens from multiple machines simultaneously.  I&apos;d like solr to make sure the documents are committed within a second.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12361530">SOLR-126</key>
            <summary>Auto-commit documents after time interval</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ryantxu">Ryan McKinley</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Jan 2007 03:17:59 +0000</created>
                <updated>Fri, 10 May 2013 11:39:50 +0100</updated>
                            <resolved>Fri, 9 Feb 2007 01:21:48 +0000</resolved>
                                                    <fixVersion>1.2</fixVersion>
                                    <component>update</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12468482" author="ryantxu" created="Tue, 30 Jan 2007 03:34:49 +0000"  >&lt;p&gt;I&apos;m not sure the best design for this problem, as a quick way to get something working NOW without modifying UpdateHandler, I made a custom UpdateHandler (extended from XmlUpdateRequestHandler) that starts a timer and executes &amp;lt;commit/&amp;gt; after a configured time.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- - - - -&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The auto-commit logic should probably be in the UpdateHandler along with the exiting CommitTracker.  The existing CommitTracker lets you specify a number of documents it should keep before indexing.  &lt;/p&gt;

&lt;p&gt;For a time limit, I &lt;b&gt;think&lt;/b&gt; we need to run a thread - I know that is bad for webapps, but I&apos;m not sure there is any other option.  In this example, I used:&lt;/p&gt;

&lt;p&gt;final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);&lt;/p&gt;

&lt;p&gt;then:&lt;/p&gt;

&lt;p&gt;scheduler.schedule( this, interval, TimeUnit.MILLISECONDS );&lt;/p&gt;

&lt;p&gt;Is this a reasonable approach?  Is there any other threading/timing mechanism to consider?&lt;br/&gt;
Should this be applied directly to the UpdateHandler and configured along with &lt;/p&gt;

&lt;p&gt; &amp;lt;autoCommit&amp;gt; &lt;br/&gt;
   &amp;lt;maxDocs&amp;gt;10000&amp;lt;/maxDocs&amp;gt;&lt;br/&gt;
   &amp;lt;maxTime&amp;gt;10000&amp;lt;/maxTime&amp;gt; &amp;lt;!-- milliseconds --&amp;gt;&lt;br/&gt;
 &amp;lt;/autoCommit&amp;gt;&lt;/p&gt;

&lt;p&gt;or should it be a custom request handler (as implemented in this attachment)?&lt;/p&gt;

</comment>
                            <comment id="12468485" author="klaasm" created="Tue, 30 Jan 2007 03:49:49 +0000"  >&lt;p&gt;A few high-level comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;commitTer/commitTing.  It seems pedantic to gripe about spelling, but making it right really helps in finding things at a later date.&lt;/li&gt;
	&lt;li&gt;&quot;autoCommitAfter&quot; doesn&apos;t particularly document the semantics, which are &quot;autocommit interval upper bound&quot;.  The reason that this is important is that we&apos;ll want to implement &quot;autocommit interval lower bound&quot; at some point (and/or &quot;autocommit after idle time&quot;).&lt;/li&gt;
	&lt;li&gt;I think this would fit pretty easily into the existing committracker (just gut the time-based things that are already there).   Unless there is any reason why this should be limited to a custom handler?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12468493" author="ryantxu" created="Tue, 30 Jan 2007 04:15:44 +0000"  >&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; A few high-level comments:&lt;br/&gt;
&amp;gt;  - commitTer/commitTing.  It seems pedantic to gripe about spelling,...&lt;/p&gt;

&lt;p&gt;yes, thanks.  I&apos;m notoriously bad anywhere spellcheck can&apos;t help (and often where it does!)  Please fix or point out anything, it does make it much easier to find in the future.&lt;/p&gt;

&lt;p&gt;&amp;gt;  - &quot;autoCommitAfter&quot; doesn&apos;t particularly document the semantics,...&lt;/p&gt;

&lt;p&gt;perhaps:&lt;/p&gt;

&lt;p&gt; &amp;lt;autoCommit&amp;gt;&lt;br/&gt;
   &amp;lt;maxDocs&amp;gt;10000&amp;lt;/maxDocs&amp;gt;&lt;br/&gt;
   &amp;lt;maxTime&amp;gt;10000&amp;lt;/maxTime&amp;gt; &lt;br/&gt;
  &amp;lt;!--&lt;br/&gt;
   In the future we may add:&lt;br/&gt;
   &amp;lt;minTime&amp;gt;10000&amp;lt;/minTime&amp;gt; &lt;br/&gt;
   &amp;lt;idleTime&amp;gt;10000&amp;lt;/idleTime&amp;gt; &lt;br/&gt;
  --&amp;gt;&lt;br/&gt;
 &amp;lt;/autoCommit&amp;gt;&lt;/p&gt;


&lt;p&gt;&amp;gt; &amp;gt; Unless there is any reason why this should be limited to a custom handler?&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;Yes, it should probably go in the UpdateHandler&lt;/p&gt;


</comment>
                            <comment id="12468497" author="yseeley@gmail.com" created="Tue, 30 Jan 2007 04:40:35 +0000"  >&lt;p&gt;Thanks for tackling this Ryan, this is much needed functionality (planned since inception but never coded!)&lt;br/&gt;
This should definitely go into the existing committracker/updatehandler.&lt;/p&gt;

&lt;p&gt;Timer/TimerTask for the timers?  Haven&apos;t used them myself... are they appropriate?&lt;/p&gt;

&lt;p&gt;Some future issues (i.e. a different JIRA issue)... one setting may make perfect sense when doing incremental updates, to enforce a minimum &quot;freshness&quot; and take the burden of commit off of the clients.  When building an index from scratch, you want to do it as quickly as possible, and not do commits all the time (or even expose a partial index to searches).&lt;br/&gt;
Perhaps something like &amp;amp;autocommit=false in the update params?&lt;br/&gt;
It might even be nice to be able to change the mergeFactor for a complete index build vs incremental updates.&lt;/p&gt;

</comment>
                            <comment id="12468499" author="ryantxu" created="Tue, 30 Jan 2007 04:53:38 +0000"  >&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; Timer/TimerTask for the timers?  Haven&apos;t used them myself... are they appropriate?&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;I&apos;m no expert on this, but it looks like Java5 added:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ScheduledExecutorService.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ScheduledExecutorService.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;it does everything Timer/TimerTask did - I&apos;m not sure (and can&apos;t seem to find) if the difference is just syntax or something more profound.&lt;/p&gt;




</comment>
                            <comment id="12468505" author="yseeley@gmail.com" created="Tue, 30 Jan 2007 05:47:46 +0000"  >&lt;p&gt;Another future idea along the lines of &amp;amp;autocommit=true/false, is supporting clients with different timeliness needs.&lt;br/&gt;
For example, a client could send an update request, telling solr that a commit should be done within 5 minutes.&lt;br/&gt;
&amp;amp;maxwait=300 or something like that.&lt;/p&gt;
</comment>
                            <comment id="12468507" author="yseeley@gmail.com" created="Tue, 30 Jan 2007 05:51:32 +0000"  >&lt;p&gt;ScheduledExecutorService: Yeah, I&apos;d start with that by default... the Java5 concurrency stuff is much better in general.&lt;/p&gt;</comment>
                            <comment id="12468561" author="ryantxu" created="Tue, 30 Jan 2007 10:37:41 +0000"  >&lt;p&gt;I just posted AutoCommit.patch &lt;/p&gt;

&lt;p&gt;This patch modifies DirectUpdateHandler2.CommentTracker to automatically commit a after a certain period.  As written, It should never start multiple commits at the same time.&lt;/p&gt;

&lt;p&gt;I think this is ready to go.  &lt;/p&gt;</comment>
                            <comment id="12469187" author="klaasm" created="Wed, 31 Jan 2007 20:36:13 +0000"  >&lt;p&gt;Ryan: looking good!  A few comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;You notify the tracker that the document is added before actually adding the document.  This is okay-&lt;del&gt;commit() cannot run until addDoc() is complete&lt;/del&gt;-but it does mean that the autocommit maxTime is measured from the start of the document being added until after it has been processed.  I&apos;m not sure it matters in practice.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;similarly, didCommit() is invoked before the searcher is warmed.  Autocommits will never occur simulatneously (as you note; due to synchronization of run()), but they could be invoked continually if warming takes a long time.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If 250ms is a small enough time to not care about, does it make sense to force the user to specify the time in milliseconds?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;These are all relatively minor things--if no one else has any thoughts this can probably be committed soon.  &lt;/p&gt;</comment>
                            <comment id="12469204" author="ryantxu" created="Wed, 31 Jan 2007 21:33:52 +0000"  >&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt;  - You notify the tracker that the document is added before actually adding the document.  This is okay-&lt;del&gt;commit() cannot run until addDoc() is complete&lt;/del&gt;-but it does mean that the autocommit maxTime is measured from the start of the document being added until after it has been processed.  I&apos;m not sure it matters in practice.&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;I&apos;m looking at it from the client perspective.  The timer should start as soon as close to the request time as possible.&lt;/p&gt;


&lt;p&gt;&amp;gt; - similarly, didCommit() is invoked before the searcher is warmed.  Autocommits will never occur simulatneously (as you note; due to synchronization of run()), but they could be invoked continually if warming takes a long time.&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;I just left at were it was in the existing code.  I think it makes sense  because the searcher has the proper data at that point - a second commit wont change the results.&lt;/p&gt;

&lt;p&gt;Also, it will not start a new autocommit until the first has warmed the searcher anyway:&lt;/p&gt;

&lt;p&gt;  CommitUpdateCommand command = new CommitUpdateCommand( false );&lt;br/&gt;
  command.waitFlush = true;&lt;br/&gt;
  command.waitSearcher = true; &lt;/p&gt;


&lt;p&gt;&amp;gt;  - If 250ms is a small enough time to not care about, does it make sense to force the user to specify the time in milliseconds?&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;This is trying to avoid is the case where 100 documents are added at the same time with maxDocs=10.  We don&apos;t want to commit 10 times, so it waits 1/4 sec. (could be shorter or longer in my opinion)&lt;/p&gt;

&lt;p&gt;If anyone is worried about the timing, they should use maxTime, not maxDocs&lt;/p&gt;
</comment>
                            <comment id="12469559" author="klaasm" created="Thu, 1 Feb 2007 19:42:06 +0000"  >&lt;p&gt;Committed in r502328.  Thanks!&lt;/p&gt;

&lt;p&gt;Ryan, the last comment of mine was about the units of time that &amp;lt;maxTime&amp;gt; was specified in--the old version had the time specified in seconds and the parameter name was &amp;lt;maxSec&amp;gt;.  I committed it the way it stands in the patch; if anyone has a strong opinion, this can be changed before being closed.&lt;/p&gt;</comment>
                            <comment id="12469663" author="ryantxu" created="Fri, 2 Feb 2007 04:55:39 +0000"  >
&lt;p&gt;It looks like the test solrconfi.xml got commited with some mangled xml comments:&lt;/p&gt;

&lt;p&gt; &amp;lt;!-- autocommit pending docs if certain criteria are met &lt;br/&gt;
    &amp;lt;autoCommit&amp;gt; &lt;br/&gt;
      &amp;lt;maxDocs&amp;gt;10000&amp;lt;/maxDocs&amp;gt;&lt;br/&gt;
      &amp;lt;maxTime&amp;gt;3600000&amp;lt;/maxTime&amp;gt; &amp;lt;!-- one hour in milliseconds --&amp;gt;  &lt;br/&gt;
    &amp;lt;/autoCommit&amp;gt;&lt;br/&gt;
    --&amp;gt;&lt;/p&gt;

&lt;p&gt;so it fails the tests&lt;/p&gt;

&lt;p&gt;it needs to be:&lt;/p&gt;

&lt;p&gt; &amp;lt;!-- autocommit pending docs if certain criteria are met --&amp;gt;&lt;br/&gt;
    &amp;lt;autoCommit&amp;gt; &lt;br/&gt;
      &amp;lt;maxDocs&amp;gt;10000&amp;lt;/maxDocs&amp;gt;&lt;br/&gt;
      &amp;lt;maxTime&amp;gt;3600000&amp;lt;/maxTime&amp;gt; &amp;lt;!-- one hour in milliseconds --&amp;gt;  &lt;br/&gt;
    &amp;lt;/autoCommit&amp;gt;&lt;/p&gt;

&lt;p&gt;thanks!&lt;br/&gt;
ryan&lt;/p&gt;

</comment>
                            <comment id="12471550" author="klaasm" created="Fri, 9 Feb 2007 01:21:10 +0000"  >&lt;p&gt;extra patch committed in r505114&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12349894" name="AutoCommit.patch" size="14166" author="ryantxu" created="Tue, 30 Jan 2007 10:31:27 +0000"/>
                            <attachment id="12349871" name="AutocommitingUpdateRequestHandler.patch" size="14510" author="ryantxu" created="Tue, 30 Jan 2007 03:18:48 +0000"/>
                            <attachment id="12350400" name="SOLR-126-ClosePending.patch" size="612" author="ryantxu" created="Tue, 6 Feb 2007 03:28:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Jan 2007 03:49:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7457</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxt8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21056</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>