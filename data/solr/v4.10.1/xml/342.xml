<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:14:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-342/SOLR-342.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-342] Add support for Lucene&apos;s new Indexing and merge features (excluding Document/Field/Token reuse)</title>
                <link>https://issues.apache.org/jira/browse/SOLR-342</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-843&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt; adds support for new indexing capabilities using the setRAMBufferSizeMB() method that should significantly speed up indexing for many applications.  To fix this, we will need trunk version of Lucene (or wait for the next official release of Lucene)&lt;/p&gt;

&lt;p&gt;Side effect of this is that Lucene&apos;s new, faster StandardTokenizer will also be incorporated.  &lt;/p&gt;

&lt;p&gt;Also need to think about how we want to incorporate the new merge scheduling functionality (new default in Lucene is to do merges in a background thread)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12376448">SOLR-342</key>
            <summary>Add support for Lucene&apos;s new Indexing and merge features (excluding Document/Field/Token reuse)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2007 21:52:05 +0100</created>
                <updated>Wed, 5 Mar 2008 20:23:07 +0000</updated>
                            <resolved>Wed, 5 Mar 2008 20:23:07 +0000</resolved>
                                                                    <component>update</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12531353" author="gsingers" created="Sun, 30 Sep 2007 17:58:41 +0100"  >&lt;p&gt;I think we should wait a bit more on this, as there still are a fair number of issues related to these changes in Lucene that need to be ironed out.&lt;/p&gt;</comment>
                            <comment id="12531588" author="klaasm" created="Mon, 1 Oct 2007 19:19:50 +0100"  >&lt;p&gt;We could probably just wait for lucene 2.3 to be released before releasing 1.3.  I wouldn&apos;t be averse to pre-integrating the changes, though.&lt;/p&gt;</comment>
                            <comment id="12531591" author="gsingers" created="Mon, 1 Oct 2007 19:28:09 +0100"  >&lt;p&gt;yep, I agree with pre-integrating, just from watching the Lucene discussions going on lately, I think it is worth letting a few more things be worked out before using a nightly build.&lt;/p&gt;</comment>
                            <comment id="12536817" author="gsingers" created="Mon, 22 Oct 2007 21:14:47 +0100"  >&lt;p&gt;Updated to cover the broader scope of changes that effect upgrading to Lucene trunk.&lt;/p&gt;

&lt;p&gt;Plan to implement:&lt;br/&gt;
Add &amp;lt;ramBufferSizeMB&amp;gt; tag to specify the number of megabytes to give Lucene.  Setting this value will override all other related settings (maxBufferedDocs, etc.) related to IndexWriter configuration&lt;/p&gt;

&lt;p&gt;Add &amp;lt;mergeScheduler&amp;gt; tag that can have two values:  concurrent or serial.   Or would it be better to take in a classname?  Doing the latter would mean we would have to have a no-arg constructor, right?&lt;/p&gt;

&lt;p&gt;Add &amp;lt;mergePolicy&amp;gt; tag that defines the merge policy that can have two values: byteSize or docCount.  Or would it be better to take a classname? &lt;/p&gt;

&lt;p&gt;NOTE: I am not proposing to handle the new reusable Document/Field/Token mechanism in Lucene, which should also be considered.&lt;/p&gt;

</comment>
                            <comment id="12537169" author="yseeley@gmail.com" created="Wed, 24 Oct 2007 00:25:07 +0100"  >&lt;p&gt;Perhaps for now mergePolicy should be aligned with the buffering limit (ram or docs)?&lt;br/&gt;
If/when we do add &amp;lt;mergePolicy&amp;gt; it seems like it should be a class name.&lt;/p&gt;</comment>
                            <comment id="12537617" author="gsingers" created="Thu, 25 Oct 2007 15:39:58 +0100"  >&lt;p&gt;OK, this would imply it is set to LogByteSizeMergePolicy when setting &amp;lt;ramBufferSizeMB&amp;gt; and LogDocMergePolicy when setting &amp;lt;maxBufferedDocs&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12537731" author="gsingers" created="Thu, 25 Oct 2007 22:19:37 +0100"  >&lt;p&gt;First crack at implementing this.  All tests pass on OS X except SolrJ&apos;s SolrExceptionTest, but for some reason that is failing on a clean version, too, so I am convinced it is not due to anything I did.&lt;/p&gt;

&lt;p&gt;My personal benchmarking of just the Lucene side of things (see indexing.alg in Lucene contrib/benchmark) show pretty significant performance gains.  This is also anecdotally confirmed by my basic testing in Solr.&lt;/p&gt;

&lt;p&gt;I set the default to be 16MB, per Mike McCandless defaults in Lucene, but this is probably too low given the server nature of Solr where a lot more memory is likely to be available.&lt;/p&gt;

&lt;p&gt;There are 4 new configuration possibilities:&lt;br/&gt;
&amp;lt;ramBufferSizeMB&amp;gt; -  When set, &amp;lt;maxBufferedDocs&amp;gt; is set to DISABLE_AUTO_FLUSH.  Default is the maxBufferedDocs way, but this could be changed to be the other way around (and probably should be)&lt;br/&gt;
&amp;lt;mergePolicy&amp;gt; - Set the MergePolicy, default is the new Lucene LogByteSizeMergePolicy.  Old Lucene policy is LogDocMergePolicy.  LogByteSizeMergePolicy by default.&lt;br/&gt;
&amp;lt;mergeScheduler&amp;gt; - Set the way merges are performed.  New way is ConcurrentMergeScheduler which runs the merges in separate background threads.  Old way was SerialMergeScheduler. Concurrent by default.&lt;br/&gt;
&amp;lt;luceneAutoCommit&amp;gt;  - Specify whether Lucene IndexWriter should autoCommit flushes.  false is the best for performance.  Still need to develop recommendations for when to change this.  Named it this way to avoid confusion with Solr&apos;s version.  false by default.&lt;/p&gt;

&lt;p&gt;Patch is inside the tar file, as well as a bundling of the Lucene jars (not technically the latest, but only a couple days old)&lt;/p&gt;</comment>
                            <comment id="12537738" author="yseeley@gmail.com" created="Thu, 25 Oct 2007 22:30:31 +0100"  >&lt;p&gt;&amp;gt; Default is the maxBufferedDocs way, but this could be changed to be the other way around (and probably should be)&lt;/p&gt;

&lt;p&gt;+1&lt;br/&gt;
ramBufferSizeMB is now the default in Lucene AFAIK.&lt;br/&gt;
I think perhaps 32MB might be a good default.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;luceneAutoCommit &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; Still need to develop recommendations for when to change this.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For Solr, you never would want to use it.  trying to catch a glimpse of new segments as they are flushed leads to an inconsistent view of the index since docs haven&apos;t been deleted yet.&lt;/p&gt;

&lt;p&gt;We do need to document recommended solrconfig.xml changes in CHANGES.txt (at the top in the migration section we normally have) for people to get these performance gains with existing configs.&lt;/p&gt;</comment>
                            <comment id="12537924" author="gsingers" created="Fri, 26 Oct 2007 12:13:22 +0100"  >&lt;blockquote&gt;
&lt;p&gt;+1&lt;br/&gt;
ramBufferSizeMB is now the default in Lucene AFAIK.&lt;br/&gt;
I think perhaps 32MB might be a good default.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The other thing is, Lucene actually supports setting both, and flushes based on whichever one is hit first.  Is this worth supporting?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For Solr, you never would want to use it. trying to catch a glimpse of new segments as they are flushed leads to an inconsistent view of the index since docs haven&apos;t been deleted yet.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should we even expose this, then?  It seems like we should just make it false.&lt;/p&gt;

&lt;p&gt;I will write up more in the changes.&lt;/p&gt;</comment>
                            <comment id="12537992" author="yseeley@gmail.com" created="Fri, 26 Oct 2007 16:43:59 +0100"  >&lt;p&gt;&amp;gt; The other thing is, Lucene actually supports setting both, and flushes based on whichever one is hit first. Is this worth supporting?&lt;/p&gt;

&lt;p&gt;Since it takes no extra work in Solr, I guess we should just allow it.&lt;/p&gt;

&lt;p&gt;&amp;gt; Should we even expose this &lt;span class=&quot;error&quot;&gt;&amp;#91;lucene autocommit&amp;#93;&lt;/span&gt;, then? It seems like we should just make it false.&lt;/p&gt;

&lt;p&gt;I think so... some people use Solr in some quite advanced ways.&lt;/p&gt;
</comment>
                            <comment id="12538023" author="gsingers" created="Fri, 26 Oct 2007 18:10:13 +0100"  >&lt;p&gt;Changes:&lt;/p&gt;

&lt;p&gt;1. Updated changes.txt with recommendations on settings.&lt;/p&gt;

&lt;p&gt;2. Changed SolrIndexWriter from last patch to allow for setting both maxBufferedDocs and ramBufferSizeMB.&lt;/p&gt;

&lt;p&gt;3. Updated the various sample solrconfig.xml to have a default of 32 MB for ramBufferSizeMB.  Commented out maxBufferedDocs, but did not deprecate it.&lt;/p&gt;

&lt;p&gt;4. Added a note to the various solrconfig.xml explaining what Lucene does if BOTH ramBufferSizeMB and maxBufferedDocs is set.&lt;/p&gt;

&lt;p&gt;The Lucene libraries are bundled with the previous patch, but are still needed.&lt;/p&gt;</comment>
                            <comment id="12547854" author="willjohnson3" created="Mon, 3 Dec 2007 14:26:04 +0000"  >&lt;p&gt;just a comment to say that we added this patch and saw rather signifigant improvements, on the order of 10-25% for different index tests.&lt;/p&gt;</comment>
                            <comment id="12547918" author="gsingers" created="Mon, 3 Dec 2007 17:48:26 +0000"  >&lt;p&gt;Dumb little script to copy over the required Lucene jars from a built Lucene directory.  Takes in two parameters, the location of Lucene Home and the version to copy over.  Requires Lucene to be built.&lt;/p&gt;

&lt;p&gt;Belongs in the lib directory.&lt;/p&gt;

&lt;p&gt;For example,&lt;br/&gt;
./copyLucene.sh &amp;lt;path to Lucene&amp;gt; 2.3-dev&lt;/p&gt;</comment>
                            <comment id="12547925" author="willjohnson3" created="Mon, 3 Dec 2007 18:16:30 +0000"  >&lt;p&gt;is there any update on getting this patch committed?  we needed to be able to set some of the buffer sizes so the script wouldn&apos;t help.  have other people experienced tourbles with 2.3 and/or this patch that i should be wary of?&lt;/p&gt;</comment>
                            <comment id="12547927" author="gsingers" created="Mon, 3 Dec 2007 18:24:51 +0000"  >&lt;p&gt;In my mind, there are still some issues w/ 2.3 dev that are being worked on.   Personally, I think we should wait until 2.3 is released, but it would be good for people to get some running-time with this patch, if they can, before then, as that will help work out any issues remaining in 2.3.&lt;/p&gt;</comment>
                            <comment id="12555132" author="gsingers" created="Mon, 31 Dec 2007 19:47:31 +0000"  >&lt;p&gt;Looks like Lucene 2.3 is shaping up to be released fairly soon (~2 weeks) and that many of the indexing/thread-safety concerns have been worked out.  Might as well wait for the official release at this point, although I have been using 2.3-dev for a fairly long time at this point.&lt;/p&gt;</comment>
                            <comment id="12555777" author="yseeley@gmail.com" created="Fri, 4 Jan 2008 03:20:07 +0000"  >&lt;p&gt;I don&apos;t think it&apos;s necessary to wait for the official lucene 2.3 release, esp since there is still a lot of solr work to be done (tokenizer upgrades to use char[], reusable tokenizers, reusable analyzers?, etc).  We could upgrade to the latest snapshot when someone is willing to tackle those issues.&lt;/p&gt;</comment>
                            <comment id="12565025" author="gsingers" created="Sat, 2 Feb 2008 03:32:59 +0000"  >&lt;p&gt;Updated to work against trunk.&lt;/p&gt;

&lt;p&gt;As always, let me know if there is anything I can do to help get this committed.&lt;/p&gt;</comment>
                            <comment id="12565128" author="koji" created="Sun, 3 Feb 2008 00:06:12 +0000"  >&lt;p&gt;Now mergeFactor can be effective as long as mergePolicy is an instance of LogMergePolicy.&lt;br/&gt;
How about&lt;/p&gt;

&lt;p&gt;&amp;lt;mergePolicy mergeFactor=&quot;10&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&amp;lt;mergePolicy&amp;gt;&lt;br/&gt;
  &amp;lt;mergeFactor&amp;gt;10&amp;lt;/mergeFactor&amp;gt;&lt;br/&gt;
&amp;lt;/mergePolicy&amp;gt;&lt;/p&gt;

&lt;p&gt;instead of&lt;/p&gt;

&lt;p&gt;&amp;lt;indexDefaults&amp;gt;&lt;br/&gt;
  &amp;lt;mergeFactor&amp;gt;10&amp;lt;/mergeFactor&amp;gt;&lt;br/&gt;
&amp;lt;/indexDefaults&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12566643" author="gsingers" created="Thu, 7 Feb 2008 15:46:52 +0000"  >&lt;p&gt;I did some benchmarking of the autocommit functionality in Lucene (as opposed to in Solr, which is different).  Currently, in Lucene autocommit is true by default, meaning that every time there is a flush, it is also committed.  Solr adds its own layer on top of this with its commit semantics.  There is a noticeable difference in memory used and speed in Lucene performance between autocommit = false and autocommit = true.  &lt;/p&gt;

&lt;p&gt;Some rough numbers using the autocommit.alg in Lucene&apos;s benchmark contrib (from trunk):  &lt;br/&gt;
 Operation       round ac ram   runCnt   recsPerRun        rec/s  elapsedSec    avgUsedMem    avgTotalMem&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; MAddDocs_200000     0rue2.00        1       200000        400.1      499.90    61,322,608     68,780,032&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; MAddDocs_200000 -   1lse2.00 -  -   1 -  -  200000 -  -   499.9 -  - 400.08 -  49,373,632 -   75,018,240&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; MAddDocs_200000     2rue2.00        1       200000        383.7      521.27    70,716,096     75,018,240&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; MAddDocs_200000 -   3lse2.00 -  -   1 -  -  200000 -  -   552.7 -  - 361.89 -  68,069,464 -   75,018,240&lt;/p&gt;

&lt;p&gt;The first row has autocommit = true, second is false, and then alternating.  The key value is the rec/s, which is:&lt;br/&gt;
1. ac = true 400.1&lt;br/&gt;
2. ac = false 499.9&lt;br/&gt;
3. ac = true 383.7&lt;br/&gt;
4. ac = false 552.7&lt;/p&gt;

&lt;p&gt;Notice also the diff in avgUsedMem.  Adding this functionality may, perhaps, be more important to Solr&apos;s performance than the flush by RAM capability.&lt;/p&gt;</comment>
                            <comment id="12566648" author="gsingers" created="Thu, 7 Feb 2008 15:53:37 +0000"  >&lt;p&gt;Update of patch to account for the fact that mergeFactor is only for Log based merges.  I left it as the &amp;lt;mergeFactor&amp;gt; tag, but put in an instanceof clause in the init method of the SolrIndexWriter to check to see if the mergeFactor is settable.&lt;/p&gt;</comment>
                            <comment id="12567099" author="willjohnson3" created="Fri, 8 Feb 2008 17:10:50 +0000"  >&lt;p&gt;I think we&apos;re running into a very serious issue with trunk + this patch.  either the document summaries are not matched or the overall matching is &apos;wrong&apos;.  i did find this in the lucene jira: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-994&quot; title=&quot;Change defaults in IndexWriter to maximize &amp;quot;out of the box&amp;quot; performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-994&quot;&gt;&lt;del&gt;LUCENE-994&lt;/del&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&quot;Note that these changes will break users of ParallelReader because the&lt;br/&gt;
parallel indices will no longer have matching docIDs. Such users need&lt;br/&gt;
to switch IndexWriter back to flushing by doc count, and switch the&lt;br/&gt;
MergePolicy back to LogDocMergePolicy. It&apos;s likely also necessary to&lt;br/&gt;
switch the MergeScheduler back to SerialMergeScheduler to ensure&lt;br/&gt;
deterministic docID assignment.&quot;&lt;/p&gt;

&lt;p&gt;we&apos;re seeing rather consistent bad results but only after 20-30k documents and multiple commits and wondering if anyone else is seeing anything.  i&apos;ve verified that the results are bad even though luke which would seem to remove the search side of hte solr equation.   the basic test case is to search for title:foo and get back documents that only have title:bar.  we&apos;re going to start on a unit test but give the document counts and the corpus we&apos;re testing against it may be a while so i thought i&apos;d ask to see if anyone had any hints.&lt;/p&gt;

&lt;p&gt;removing this patch seems to remove the issue so i doesn&apos;t appear to be a lucene problem&lt;/p&gt;
</comment>
                            <comment id="12567111" author="yseeley@gmail.com" created="Fri, 8 Feb 2008 17:20:51 +0000"  >&lt;p&gt;Yikes!  Thanks for the report Will.  It certainly sounds like a Lucene issue to me (esp because removal of this patch fixes things... that means it only happens under certain lucene settings).  Could you perhaps try the very latest Lucene trunk (there were some seemingly unrelated fixes recently).&lt;/p&gt;</comment>
                            <comment id="12567140" author="yseeley@gmail.com" created="Fri, 8 Feb 2008 18:06:36 +0000"  >&lt;p&gt;Will, are you using term vectors anywhere, or any customizations to Solr (at the lucene level)?&lt;br/&gt;
When you say &quot;document summaries are not matched&quot;, you you mean that the incorrect documents are matched, or that the correct documents are matched but just highlighting is wrong?&lt;/p&gt;</comment>
                            <comment id="12567147" author="willjohnson3" created="Fri, 8 Feb 2008 18:25:31 +0000"  >&lt;p&gt;patched solr + lucene trunk is stil broken.  if anyone has any pointers for ways to coax this problem to happen before we get 20-30k large docs in the system let me know and we can start working on a unit test, otherwise it&apos;s going to take a while to reproduce anything.&lt;/p&gt;</comment>
                            <comment id="12567152" author="yseeley@gmail.com" created="Fri, 8 Feb 2008 18:34:32 +0000"  >&lt;p&gt;Thanks Will.  My guess at this point is a merging bug in Lucene, so you might be able to reproduce by forcing more merges.  Make mergeFacor=2 and lower how many docs it takes to do a merge (set maxBufferedDocs to 2, or set ramBufferSizeMB to 1).&lt;/p&gt;</comment>
                            <comment id="12567187" author="gsingers" created="Fri, 8 Feb 2008 20:23:58 +0000"  >&lt;p&gt;Can you share your settings? (solrconfig.xml), or at least the relevant sections.  &lt;/p&gt;</comment>
                            <comment id="12567198" author="willjohnson3" created="Fri, 8 Feb 2008 20:46:50 +0000"  >&lt;p&gt;we have: &lt;/p&gt;

&lt;p&gt;&amp;lt;mergeFactor&amp;gt;10&amp;lt;/mergeFactor&amp;gt; &lt;br/&gt;
&amp;lt;ramBufferSizeMB&amp;gt;64&amp;lt;/ramBufferSizeMB&amp;gt; &lt;br/&gt;
&amp;lt;maxMergeDocs&amp;gt;2147483647&amp;lt;/maxMergeDocs&amp;gt; &lt;/p&gt;

&lt;p&gt;and i&apos;m working on a unit test but just adding a few terms per doc doesnt seem to trigger it, at least not &apos;quickly.&apos;&lt;/p&gt;</comment>
                            <comment id="12567207" author="gsingers" created="Fri, 8 Feb 2008 21:20:19 +0000"  >&lt;p&gt;You mentioned ParallelReader, are you using that, or any other patches?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;problem to happen before we get 20-30k large docs&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;what is &quot;large&quot; in your terms?  &lt;/p&gt;</comment>
                            <comment id="12567218" author="willjohnson3" created="Fri, 8 Feb 2008 21:49:41 +0000"  >&lt;p&gt;we&apos;re not using parallel reader but we are using direct core access instead of going over http.  as for doc size, we&apos;re indexing wikipedia but creating anumber of extra fields.  they are only large in comparison to any of the &apos;large volume&apos; tests i&apos;ve seen in most of the solr and lucene tests.  &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12567221" author="gsingers" created="Fri, 8 Feb 2008 22:01:24 +0000"  >&lt;p&gt;Direct core meaning embedded, right?  It&apos;s interesting, b/c I have done a fair amount of Lucene 2.3 testing w/ Wikipedia (nothing like a free, fairly large dataset)&lt;/p&gt;

&lt;p&gt;Can you reproduce the problem using Lucene directly? (have a look at contrib/benchmark for a way to get Lucene/Wikipedia up and running quickly)&lt;/p&gt;

&lt;p&gt;Also, are there any associated exceptions anywhere in the chain?  Or is it just that your index is bad?  Are you starting from a clean index or updating an existing one?&lt;/p&gt;</comment>
                            <comment id="12567235" author="willjohnson3" created="Fri, 8 Feb 2008 22:48:53 +0000"  >&lt;p&gt;we&apos;re using SolrCore in terms of:&lt;/p&gt;

&lt;p&gt;core = new SolrCore(&quot;foo&quot;, dataDir, solrConfig, solrSchema);&lt;br/&gt;
UpdateHandler handler = core.getUpdateHandler();&lt;br/&gt;
updateHandler.addDoc(command);&lt;/p&gt;

&lt;p&gt;which is a bit more low level than normal however when we flipped back to solr trunk + lucene 2.3 everything was fine so it leads me to belive that we are ok in that respect.&lt;/p&gt;

&lt;p&gt;i was going to try and reproduce with lucene directly also but that too is a bit outside the scope of what i have time for at the moment.  &lt;/p&gt;

&lt;p&gt;and we&apos;re not getting any exceptions, just bad search results.&lt;/p&gt;</comment>
                            <comment id="12567504" author="gsingers" created="Mon, 11 Feb 2008 02:15:43 +0000"  >&lt;p&gt;Also, are you doing multi-threaded indexing or are you indexing while searching?&lt;/p&gt;</comment>
                            <comment id="12567508" author="willjohnson3" created="Mon, 11 Feb 2008 03:08:56 +0000"  >&lt;p&gt;we are doing multi-threaded indexing and searching while indexing however the &apos;bad&apos; results come back after the indexing run is finished and the index itself is static.&lt;/p&gt;</comment>
                            <comment id="12567809" author="yseeley@gmail.com" created="Mon, 11 Feb 2008 20:37:56 +0000"  >&lt;p&gt;OK, I&apos;ve managed to reproduce this in a straight lucene testcase.&lt;br/&gt;
I&apos;m doing further verification and will open up a Lucene bug shortly.&lt;/p&gt;</comment>
                            <comment id="12568938" author="gsingers" created="Thu, 14 Feb 2008 14:12:30 +0000"  >&lt;p&gt;Sounds like we will have a Lucene 2.3.1 release in the next week or so with the fixes in place.  Will, in the meantime, when &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1177&quot; title=&quot;IW.optimize() can do too many merges at the very end&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-1177&quot;&gt;&lt;del&gt;LUCENE-1177&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1173&quot; title=&quot;index corruption autoCommit=false&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-1173&quot;&gt;&lt;del&gt;LUCENE-1173&lt;/del&gt;&lt;/a&gt; get committed,maybe you could try either building the LUCENE 2.3 branch or trying out with the Lucene nightly build to see if it solves your issue and let us know.&lt;/p&gt;</comment>
                            <comment id="12569408" author="willjohnson3" created="Fri, 15 Feb 2008 20:52:45 +0000"  >&lt;p&gt;i switched to the lucene 2.3 branch, updated (and confirmed that yonik&apos;s 1 line change was in place), reran the tests and still saw the same problem.  if i missed something please let me know.&lt;/p&gt;</comment>
                            <comment id="12569525" author="mikemccand" created="Sat, 16 Feb 2008 11:17:06 +0000"  >&lt;p&gt;Will, did you create a new index in your test?&lt;/p&gt;

&lt;p&gt;Also make sure you are using this URL to checkout the 2.3 branch sources:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/java/branches/lucene_2_3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/lucene/java/branches/lucene_2_3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should see 7 issues listed in the CHANGES.txt under &quot;Bug fixes&quot;?&lt;/p&gt;</comment>
                            <comment id="12569845" author="mikemccand" created="Mon, 18 Feb 2008 10:49:44 +0000"  >&lt;p&gt;Will, one more thing to try is to on assertions for org.apache.lucene.*; this may catch an issue sooner.&lt;/p&gt;</comment>
                            <comment id="12569948" author="yseeley@gmail.com" created="Mon, 18 Feb 2008 17:01:52 +0000"  >&lt;p&gt;Will, you should be able to verify the lucene version with this link:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/admin/registry.jsp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/admin/registry.jsp&lt;/a&gt;&lt;br/&gt;
It should be different from this:&lt;br/&gt;
	Lucene Specification Version: 2.3.0&lt;br/&gt;
	Lucene Implementation Version: 2.3.0 613715 - buschmi - 2008-01-21 01:30:48&lt;/p&gt;</comment>
                            <comment id="12570319" author="willjohnson3" created="Tue, 19 Feb 2008 17:23:14 +0000"  >&lt;p&gt;the new solr with the new lucene did the trick.  i was made the mistake of using the 2.3 tag instead of the branch before which was why i still saw the problem.&lt;/p&gt;</comment>
                            <comment id="12570327" author="mikemccand" created="Tue, 19 Feb 2008 17:37:45 +0000"  >&lt;p&gt;Super, I&apos;m glad to hear that!&lt;/p&gt;</comment>
                            <comment id="12574502" author="gsingers" created="Mon, 3 Mar 2008 13:48:01 +0000"  >&lt;p&gt;I&apos;m going to upgrade to 2.3.1 and then double check this and commit, unless I hear any objections in the next day or two.&lt;/p&gt;</comment>
                            <comment id="12574506" author="gsingers" created="Mon, 3 Mar 2008 13:58:20 +0000"  >&lt;p&gt;oops, we are already on 2.3.1, so then I will just commit in a day or two.&lt;/p&gt;</comment>
                            <comment id="12575488" author="gsingers" created="Wed, 5 Mar 2008 20:23:07 +0000"  >&lt;p&gt;Committed revision 634016.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12388384">LUCENE-1173</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12388096">LUCENE-1168</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12388394">LUCENE-1175</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12388446">LUCENE-1176</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12388452">LUCENE-1177</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12381559">SOLR-403</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12365595">LUCENE-843</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12374981" name="SOLR-342.patch" size="22721" author="gsingers" created="Thu, 7 Feb 2008 15:53:36 +0000"/>
                            <attachment id="12374594" name="SOLR-342.patch" size="22567" author="gsingers" created="Sat, 2 Feb 2008 03:32:59 +0000"/>
                            <attachment id="12368495" name="SOLR-342.patch" size="33404" author="gsingers" created="Fri, 26 Oct 2007 18:10:12 +0100"/>
                            <attachment id="12368415" name="SOLR-342.tar.gz" size="800084" author="gsingers" created="Thu, 25 Oct 2007 22:19:37 +0100"/>
                            <attachment id="12370858" name="copyLucene.sh" size="1216" author="gsingers" created="Mon, 3 Dec 2007 17:48:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Oct 2007 18:19:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7251</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxrx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20842</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>