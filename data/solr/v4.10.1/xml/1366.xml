<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:20:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1366/SOLR-1366.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1366] UnsupportedOperationException may be thrown when using custom IndexReader</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1366</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;If a custom IndexReaderFactory is specifiedd in solrconfig.xml, and IndexReader-s that it produces don&apos;t support IndexReader.directory() (such as is the case with ParallelReader or MultiReader) then an uncaught UnsupportedOperationException is thrown.&lt;/p&gt;

&lt;p&gt;This call is used only to retrieve the full path of the directory for informational purpose, so it shouldn&apos;t lead to a crash. Instead we could supply other available information about the reader (e.g. from its toString() method).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433319">SOLR-1366</key>
            <summary>UnsupportedOperationException may be thrown when using custom IndexReader</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="ab">Andrzej Bialecki </reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 Aug 2009 11:34:43 +0100</created>
                <updated>Tue, 10 Nov 2009 15:50:37 +0000</updated>
                            <resolved>Tue, 22 Sep 2009 20:52:08 +0100</resolved>
                                    <version>1.4</version>
                                    <fixVersion>1.4</fixVersion>
                                    <component>replication (java)</component>
                    <component>search</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12744450" author="ab" created="Tue, 18 Aug 2009 11:35:46 +0100"  >&lt;p&gt;Patch that catches the exception and supplies IndexReader.toString() instead.&lt;/p&gt;</comment>
                            <comment id="12744542" author="markrmiller@gmail.com" created="Tue, 18 Aug 2009 16:12:17 +0100"  >

&lt;blockquote&gt;&lt;p&gt;This call is used only to retrieve the full path of the directory for informational purpose, so it shouldn&apos;t lead to a crash. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The replication handler uses it a lot (assuming its a file) - I almost feel we should add some javadoc about how using non FSDirectory based IndexReaders is supported. I&apos;m not even fully sure myself.&lt;/p&gt;

&lt;p&gt;Also, are we positive it behaves here correctly in SolrCore ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      File indexDirFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(getIndexDir()).getCanonicalFile();
      File newIndexDirFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(newIndexDir).getCanonicalFile();
      
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (newestSearcher != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; solrConfig.reopenReaders
          &amp;amp;&amp;amp; indexDirFile.equals(newIndexDirFile)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12744993" author="ab" created="Wed, 19 Aug 2009 11:55:38 +0100"  >&lt;p&gt;Indeed, that complicates the matter ... It looks like using a non-file based IndexReader breaks replication. This is not a regression from 1.3, but the functionality to specify custom IndexReaders will be available in 1.4, so it should be clearly stated in docs that it prevents replication from working properly, until we rectify this issue.&lt;/p&gt;</comment>
                            <comment id="12744996" author="ab" created="Wed, 19 Aug 2009 12:00:48 +0100"  >&lt;p&gt;.. I haven&apos;t looked into it yet, but perhaps this could be solved by extending the replication handler to support multiple dirs, and for those IndexReader that don&apos;t support directory() try asking for getSubReaders() and use their directory() ...&lt;/p&gt;</comment>
                            <comment id="12745042" author="shalinmangar" created="Wed, 19 Aug 2009 14:05:34 +0100"  >&lt;p&gt;Yeah, ReplicationHandler assumes a file based IndexReader. We can document this clearly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;.. I haven&apos;t looked into it yet, but perhaps this could be solved by extending the replication handler to support multiple dirs, and for those IndexReader that don&apos;t support directory() try asking for getSubReaders() and use their directory() ... &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes but that becomes complicated very fast. You&apos;d need to know the correct directory to which a newly downloaded file has to be written on the slave. You&apos;d also need to re-open readers selectively and you&apos;d need to change their directories (for cases where an existing file is to be deleted/replaced).&lt;/p&gt;

&lt;p&gt;We anyway need to take a look at replication again after 1.4 with a focus on Lucene&apos;s NRT capabilities.&lt;/p&gt;</comment>
                            <comment id="12753289" author="ab" created="Wed, 9 Sep 2009 22:59:33 +0100"  >&lt;p&gt;FYI, for now I solved this by extending my IndexReader to support this call and return the original directory that lists all index files plus a few resources that I care about. However, this is just glossing over the deeper problem - replication handler shouldn&apos;t assume the directory is file-based.&lt;/p&gt;</comment>
                            <comment id="12753704" author="gsingers" created="Thu, 10 Sep 2009 17:54:20 +0100"  >&lt;p&gt;So, it seems for 1.4 we could fix this problem, add the documentation, and then open a new issue to deal with the replication problem in 1.5?&lt;/p&gt;</comment>
                            <comment id="12753711" author="yseeley@gmail.com" created="Thu, 10 Sep 2009 18:14:17 +0100"  >&lt;blockquote&gt;&lt;p&gt;So, it seems for 1.4 we could fix this problem&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What&apos;s the fix/workaround though?  Solr currently assumes a disk resident index, and the patch here makes up a directory... that doesn&apos;t seem like a good idea.  It also seems too late in the release cycle to try and abstract away from a disk index... potentially complex and invasive.&lt;/p&gt;</comment>
                            <comment id="12753761" author="ab" created="Thu, 10 Sep 2009 19:39:16 +0100"  >&lt;p&gt;I didn&apos;t make myself clear .. I fixed this for my application, where I control the implementation of IndexReader, but I wouldn&apos;t recommend this fix for general use. So this was just FYI.&lt;/p&gt;</comment>
                            <comment id="12756634" author="hossman" created="Thu, 17 Sep 2009 18:25:35 +0100"  >&lt;p&gt;The core issue here seems to stem from incompatible assumptions between various pieces of code in Solr, and the new IndexReaderFactory functionality introduced in 1.4 by &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-243&quot; title=&quot;Create a hook to allow custom code to create custom IndexReaders&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-243&quot;&gt;&lt;del&gt;SOLR-243&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If we don&apos;t have a silver bullet for solving all the discrepancies before 1.4, then the safest approach seems to be making sure the documentation (and example configs) for IndexReaderFactory have big flashing red &quot;Experimental!&quot; disclaimers on them warning that using an IndexReaderFactory prevents certain other features from working (list all the ones we know about) and that the API for IndexReaderFactory may change at anytime w/o warning or be removed from future release if the problems can&apos;t be resolved.&lt;/p&gt;

&lt;p&gt;I&apos;m tempted to suggest we remove &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-243&quot; title=&quot;Create a hook to allow custom code to create custom IndexReaders&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-243&quot;&gt;&lt;del&gt;SOLR-243&lt;/del&gt;&lt;/a&gt; altogether, but there are &lt;em&gt;some&lt;/em&gt; use cases of it that can work well for people, so it would be a shame to gut it completely.&lt;/p&gt;</comment>
                            <comment id="12756652" author="ab" created="Thu, 17 Sep 2009 18:42:08 +0100"  >&lt;p&gt;+1 for adding a big red flag. My application depends on this functionality, and it&apos;s working well once I overrode a bunch of additional methods in IndexReader that deal with Directory, IndexCommit, index version, etc.&lt;/p&gt;

&lt;p&gt;(A few details on this, and why my solution is not applicable in general case: I&apos;m using ParallelReader, and the other indexes that I add are throwaways, i.e. I recreate them on each index refresh from external shared resources. So I basically short-circuited those methods that deal with directory and commits so that they return information from the main index. This way the file-based replication works as before for the main index).&lt;/p&gt;</comment>
                            <comment id="12758245" author="shalinmangar" created="Tue, 22 Sep 2009 14:37:20 +0100"  >&lt;p&gt;How about this?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
** Experimental Feature **
Please note - Using a custom IndexReaderFactory may prevent certain other features
from working. The API to IndexReaderFactory may change without warning or may even
be removed from &lt;span class=&quot;code-keyword&quot;&gt;future&lt;/span&gt; releases &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the problems cannot be resolved.

** Features that may not work with custom IndexReaderFactory **
The ReplicationHandler assumes a disk-resident index. Using a custom
IndexReader implementation may cause incompatibility between ReplicationHandler and
may cause replication to not work correctly. See SOLR-1366 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; details.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12758381" author="ab" created="Tue, 22 Sep 2009 20:20:51 +0100"  >&lt;p&gt;Looks good to me, +1.&lt;/p&gt;</comment>
                            <comment id="12758395" author="shalinmangar" created="Tue, 22 Sep 2009 20:52:08 +0100"  >&lt;p&gt;Committed revision 817801.&lt;/p&gt;

&lt;p&gt;Thanks everybody!&lt;/p&gt;</comment>
                            <comment id="12775485" author="gsingers" created="Tue, 10 Nov 2009 15:50:37 +0000"  >&lt;p&gt;Bulk close Solr 1.4 issues&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12369810">SOLR-243</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12420272" name="SOLR-1366.patch" size="1140" author="shalinmangar" created="Tue, 22 Sep 2009 14:37:20 +0100"/>
                            <attachment id="12416859" name="searcher.patch" size="899" author="ab" created="Tue, 18 Aug 2009 11:35:46 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Aug 2009 15:12:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6285</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxlp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19834</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>