<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:25:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-240/SOLR-240.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-240] java.io.IOException: Lock obtain timed out: SimpleFSLock</title>
                <link>https://issues.apache.org/jira/browse/SOLR-240</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;when running the soon to be attached sample application against solr it will eventually die.  this same error has happened on both windows and rh4 linux.  the app is just submitting docs with an id in batches of 10, performing a commit then repeating over and over again.&lt;/p&gt;
</description>
                <environment>&lt;p&gt;windows xp&lt;/p&gt;</environment>
        <key id="12369428">SOLR-240</key>
            <summary>java.io.IOException: Lock obtain timed out: SimpleFSLock</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hossman">Hoss Man</assignee>
                                    <reporter username="willjohnson3">Will Johnson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 May 2007 20:44:17 +0100</created>
                <updated>Fri, 10 May 2013 11:41:07 +0100</updated>
                            <resolved>Fri, 13 Jul 2007 19:49:10 +0100</resolved>
                                    <version>1.2</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>update</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12496106" author="yseeley@gmail.com" created="Tue, 15 May 2007 21:02:50 +0100"  >&lt;p&gt;Thanks Will, I&apos;ll try and reproduce this.&lt;/p&gt;</comment>
                            <comment id="12496111" author="willjohnson3" created="Tue, 15 May 2007 21:11:16 +0100"  >&lt;p&gt;I found this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Lucene-Nightly/javadoc/or&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Lucene-Nightly/javadoc/or&lt;/a&gt;&lt;br/&gt;
g/apache/lucene/store/NativeFSLockFactory.html&lt;/p&gt;

&lt;p&gt;And so I made the attached patch which seems to run at least 100x longer&lt;br/&gt;
than without.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;





</comment>
                            <comment id="12496115" author="hossman" created="Tue, 15 May 2007 21:26:21 +0100"  >&lt;p&gt;the idea of using different lock implementations has come up in the past, &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/switch-to-native-locks-by-default--tf2967095.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/switch-to-native-locks-by-default--tf2967095.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;one reason not to hardcode native locks was because not all file systems support it &amp;#8211; so we left in the usage of SimpleFSLock because it&apos;s the most generally reusable.&lt;/p&gt;

&lt;p&gt;rather then change from one hardcoded lock type to another hardcoded lock type, we should support a config option for making the choice ... perhaps even adding a SolrLockFactory that defines an init(NamedList) method and creating simple SOlr sucbclasses of all the core Lucene LockFactor Imples so it&apos;s easy for people to write their own if they want (and we don&apos;t just have &quot;if (lockType.equlas(&quot;simple&quot;))...&quot; type config parsing.&lt;/p&gt;</comment>
                            <comment id="12496140" author="willjohnson3" created="Tue, 15 May 2007 22:24:01 +0100"  >&lt;p&gt;the attached patch adds a param to SolrIndexConfig called useNativeLocks.  the default is false which will keeps with the existing design using SimpleFSLockFactory.  if people think we should allow fully pluggable locking mechanisms i&apos;m game but i wasn&apos;t quite sure how to tackle that problem.  &lt;/p&gt;

&lt;p&gt;as for testing, i wasn&apos;t quite sure how to run tests to ensure that the locks were working beyond some basic println&apos;s (which passed).  if anyone has good ideas i&apos;m all ears.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12499354" author="yseeley@gmail.com" created="Sat, 26 May 2007 21:43:07 +0100"  >&lt;p&gt;I&apos;m running ThrashIndex against two solr/resin instances on a RHEL4 box, one using the servlet, another using the new dispatch filter.  I haven&apos;t seen any exceptions for either yet...&lt;/p&gt;</comment>
                            <comment id="12499843" author="willjohnson3" created="Tue, 29 May 2007 17:42:41 +0100"  >&lt;p&gt;i get the stacktrace below with the latest from head with useNativeLocks turned off (from my patch).  this took about 2 minutes to reproduce on my windows laptop.&lt;/p&gt;

&lt;p&gt;one thing i thought of is that local antivirus scanning / backup software which we run here may be getting in the way.  i know many other search engines / high performance databases out there have issues with antivirus software because it causes similar locking issues.  i&apos;m disabling as much of the IT &apos;malware&apos; as possible and seeing better results even with default locking however i had everything running when i had good results with the native locking enabled so it still seems to be a good idea to use the patch (or something similar).&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;SEVERE: org.apache.lucene.store.LockObtainFailedException: Lock obtain timed out: SimpleFSLock@solr\data\index\lucene-e7&lt;br/&gt;
b822c61c394dd5f449aaf5e5717356-write.lock&lt;br/&gt;
        at org.apache.lucene.store.Lock.obtain(Lock.java:70)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.init(IndexWriter.java:579)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.&amp;lt;init&amp;gt;(IndexWriter.java:391)&lt;br/&gt;
        at org.apache.solr.update.SolrIndexWriter.&amp;lt;init&amp;gt;(SolrIndexWriter.java:81)&lt;br/&gt;
        at org.apache.solr.update.UpdateHandler.createMainIndexWriter(UpdateHandler.java:120)&lt;br/&gt;
        at org.apache.solr.update.DirectUpdateHandler2.openWriter(DirectUpdateHandler2.java:181)&lt;br/&gt;
        at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:259)&lt;br/&gt;
        at org.apache.solr.handler.XmlUpdateRequestHandler.update(XmlUpdateRequestHandler.java:166)&lt;br/&gt;
        at org.apache.solr.handler.XmlUpdateRequestHandler.handleRequestBody(XmlUpdateRequestHandler.java:84)&lt;br/&gt;
        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:79)&lt;br/&gt;
        at org.apache.solr.core.SolrCore.execute(SolrCore.java:658)&lt;br/&gt;
        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:198)&lt;br/&gt;
        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:166)&lt;br/&gt;
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)&lt;br/&gt;
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)&lt;br/&gt;
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)&lt;br/&gt;
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)&lt;br/&gt;
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)&lt;br/&gt;
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)&lt;br/&gt;
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)&lt;br/&gt;
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)&lt;br/&gt;
        at org.mortbay.jetty.Server.handle(Server.java:285)&lt;br/&gt;
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)&lt;br/&gt;
        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:835)&lt;br/&gt;
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:641)&lt;br/&gt;
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)&lt;br/&gt;
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)&lt;br/&gt;
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:368)&lt;br/&gt;
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)&lt;/p&gt;</comment>
                            <comment id="12506472" author="lneves" created="Wed, 20 Jun 2007 10:41:27 +0100"  >&lt;p&gt;Hi,&lt;br/&gt;
I&apos;m also experiencing this problem. Every 4 hours or so the server starts spewing this stacktrace when updating the index.&lt;/p&gt;

&lt;p&gt;My environment is:&lt;/p&gt;

&lt;p&gt;Resin 3.0.23 / Solr 1.2 / JDK6u1&lt;br/&gt;
$ cat /proc/version&lt;br/&gt;
Linux version 2.6.16-1-686-smp (Debian 2.6.16-10) (waldi@debian.org) (gcc version 4.0.4 20060422 (prerelease) (Debian 4.0.3-2)) #2 SMP Tue Apr 25 20:45:37 UTC 2006&lt;/p&gt;

&lt;p&gt;The IndexWriter2.patch seems to fix the problem, the server has now been running for 48h without problems.&lt;/p&gt;</comment>
                            <comment id="12506973" author="yseeley@gmail.com" created="Thu, 21 Jun 2007 18:55:35 +0100"  >&lt;p&gt;&amp;gt; And so I made the attached patch which seems to run at least 100x longer than without.&lt;/p&gt;

&lt;p&gt;Does this mean you still had occasional issues with native locking?&lt;/p&gt;

&lt;p&gt;Does anyone ever see exceptions relating to removal of the lockfile (presumably that&apos;s why it can&apos;t be aquired by the new IndexWriter instance?)&lt;/p&gt;

&lt;p&gt;It&apos;s worrying that it&apos;s also reproducable on Linux... (although the oldest Solr collections have been running in CNET for 2 years now, and I&apos;ve never seen this happen).   What I &lt;b&gt;have&lt;/b&gt; seen is that exact exception when the server died, restarted, and then couldn&apos;t grab the write lock.... normally due to not a big enough heap causing excessive GC and leading resin&apos;s wrapper to restart the container.&lt;/p&gt;</comment>
                            <comment id="12506983" author="willjohnson3" created="Thu, 21 Jun 2007 19:28:27 +0100"  >&lt;p&gt;longer &amp;gt;&amp;gt;than without.&lt;/p&gt;


&lt;p&gt;No, after I applied the patch I have never seen a lockup. &lt;/p&gt;

&lt;p&gt;oldest Solr collections have been running in CNET for 2 years now, and&lt;br/&gt;
I&apos;ve never seen this happen).   What I &lt;b&gt;have&lt;/b&gt; seen is that exact&lt;br/&gt;
exception when the server died, restarted, and then couldn&apos;t grab the&lt;br/&gt;
write lock.... normally due to not a big enough heap causing excessive&lt;br/&gt;
GC and leading resin&apos;s wrapper to restart the container.&lt;/p&gt;

&lt;p&gt;Another reason to use native locking.  From the lucene native fs lock&lt;br/&gt;
javadocs:  &quot;Furthermore, if the JVM crashes, the OS will free any held&lt;br/&gt;
locks, whereas SimpleFSLockFactory will keep the locks held, requiring&lt;br/&gt;
manual removal before re-running Lucene.&quot;  &lt;/p&gt;

&lt;p&gt;My hunch (and that&apos;s all it is) is that people seeing/not seeing the&lt;br/&gt;
issue may come down to usage patterns.  My project is heavily focused on&lt;br/&gt;
low indexing latency so we&apos;re doing huge numbers of&lt;br/&gt;
add/deletes/commits/searches in very fast succession and from multiple&lt;br/&gt;
clients.  A more batch oriented update usage pattern may not see the&lt;br/&gt;
issue.&lt;/p&gt;

&lt;p&gt;The patch because as is, it doesn&apos;t change any api or cause any change&lt;br/&gt;
of existing functionality whatsoever unless you use the new option in&lt;br/&gt;
solrconfig.  I would argue that using native locking should be the&lt;br/&gt;
default though.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;will&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12512319" author="hossman" created="Fri, 13 Jul 2007 01:47:12 +0100"  >&lt;p&gt;This is a variation on Will&apos;s IndexWriter2.patch that replaces the &quot;useNativeLocks&quot; boolean config option with a string config option allowing people to pick any of the 4 built in Lucene lock factories.&lt;/p&gt;

&lt;p&gt;(i&apos;d been meaning to try and write a &quot;LockFactoryFactory&quot; to allow people to specify any arbitrary LockFactory impl as a plugin, but it seemed like overkill &amp;#8211; having Will&apos;s useNativeLocks option didn&apos;t preclude adding something like that later, but recent comments reminded me that for the majority of SOlr users, the &quot;NoLockFactory&quot; would actually be perfectly fine since Solr only ever opens one IndexWriter at a time)&lt;/p&gt;

&lt;p&gt;so this patch provides a little bit more flexibility then the previous one, without going whole-hog to a FactoryFactory/plugin model.&lt;/p&gt;

&lt;p&gt;It should be noted that I left the hardcoded default in the code in to be SimpleFSLockFactory but i set the &quot;example&quot; default to be NoLockFactory with a comment that that should be find for any Solr user not modifying the index externally to Solr.&lt;/p&gt;

&lt;p&gt;comments?&lt;/p&gt;</comment>
                            <comment id="12512330" author="yseeley@gmail.com" created="Fri, 13 Jul 2007 02:22:55 +0100"  >&lt;p&gt;&amp;gt; i set the &quot;example&quot; default to be NoLockFactory &lt;/p&gt;

&lt;p&gt;How about SingleInstanceLockFactory to aid in catching concurrency bugs?&lt;/p&gt;</comment>
                            <comment id="12512332" author="yseeley@gmail.com" created="Fri, 13 Jul 2007 02:30:45 +0100"  >&lt;p&gt;&amp;gt; SingleInstanceLockFactory &lt;br/&gt;
or even better, a subclass or other implementation: SingleInstanceWarnLockFactory or SingleInstanceCoordinatedLockFactory that log a failure if obtain() is called for a lock that is already locked.&lt;/p&gt;</comment>
                            <comment id="12512552" author="hossman" created="Fri, 13 Jul 2007 18:52:33 +0100"  >&lt;p&gt;good point about recommending &apos;single&apos; in the event of concurrency bugs.&lt;/p&gt;

&lt;p&gt;i&apos;ve never really looked at the internals of the LockFactories so i&apos;m going to punt on the subclass idea for now (i like it i just don&apos;t have time to do it) but we can always redefine &quot;single&quot; later.  (i&apos;ll open another bug if we&apos;re okay with committing this new patch as is)&lt;/p&gt;

&lt;p&gt;revised patch just changes the wording and suggested value in solrconfig.xml&lt;/p&gt;


&lt;p&gt;objections?&lt;/p&gt;</comment>
                            <comment id="12512554" author="yseeley@gmail.com" created="Fri, 13 Jul 2007 18:58:39 +0100"  >&lt;p&gt;No objections... a hang (in the event of bugs) will suffice for now.&lt;/p&gt;</comment>
                            <comment id="12512579" author="hossman" created="Fri, 13 Jul 2007 19:49:10 +0100"  >&lt;p&gt;Committed revision 556099.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12373789">SOLR-300</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12357418" name="ASF.LICENSE.NOT.GRANTED--IndexWriter.patch" size="1376" author="willjohnson3" created="Tue, 15 May 2007 21:11:17 +0100"/>
                            <attachment id="12361797" name="IndexWriter2.patch" size="5460" author="hossman" created="Fri, 13 Jul 2007 18:52:33 +0100"/>
                            <attachment id="12361731" name="IndexWriter2.patch" size="5394" author="hossman" created="Fri, 13 Jul 2007 01:47:12 +0100"/>
                            <attachment id="12357424" name="IndexWriter2.patch" size="3701" author="willjohnson3" created="Tue, 15 May 2007 22:24:01 +0100"/>
                            <attachment id="12357416" name="ThrashIndex.java" size="1930" author="willjohnson3" created="Tue, 15 May 2007 20:46:32 +0100"/>
                            <attachment id="12357417" name="stacktrace.txt" size="2200" author="willjohnson3" created="Tue, 15 May 2007 20:46:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 May 2007 20:02:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7349</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxsjr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20944</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>