<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:25:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-844/SOLR-844.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-844] A SolrServer impl to front-end multiple urls</title>
                <link>https://issues.apache.org/jira/browse/SOLR-844</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Currently a &lt;tt&gt;CommonsHttpSolrServer&lt;/tt&gt; can talk to only one server. This demands that the user have a LoadBalancer or do the roundrobin on their own. We must have a &lt;tt&gt;LBHttpSolrServer&lt;/tt&gt; which must automatically do a Loadbalancing between multiple hosts. This can be backed by the &lt;tt&gt;CommonsHttpSolrServer&lt;/tt&gt;&lt;/p&gt;



&lt;p&gt;This can have the following other features&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Automatic failover&lt;/li&gt;
	&lt;li&gt;Optionally take in  a file /url containing the the urls of servers so that the server list can be automatically updated  by periodically loading the config&lt;/li&gt;
	&lt;li&gt;Support for adding removing servers during runtime&lt;/li&gt;
	&lt;li&gt;Pluggable Loadbalancing mechanism. (round-robin, weighted round-robin, random etc)&lt;/li&gt;
	&lt;li&gt;Pluggable Failover mechanisms&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12408113">SOLR-844</key>
            <summary>A SolrServer impl to front-end multiple urls</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="noble.paul">Noble Paul</reporter>
                        <labels>
                    </labels>
                <created>Sun, 9 Nov 2008 18:42:34 +0000</created>
                <updated>Wed, 23 Sep 2009 21:27:31 +0100</updated>
                            <resolved>Fri, 20 Mar 2009 09:11:18 +0000</resolved>
                                    <version>1.3</version>
                                    <fixVersion>1.4</fixVersion>
                                    <component>clients - java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12646143" author="iholsman" created="Mon, 10 Nov 2008 01:52:26 +0000"  >&lt;p&gt;your opening a can of worms in this one Noble.&lt;/p&gt;

&lt;p&gt;Firstly there are about a thousand ways you can handle load balancing already out there on the backend side (both hardware and software). you can achieve what you want today by using the apache webserver and mod_proxy_balancer - &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_proxy_balancer.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://httpd.apache.org/docs/2.2/mod/mod_proxy_balancer.html&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Secondly doing it on the client side means you will need to track ALL the clients who use your service. I don&apos;t think the URL config thing won&apos;t work well in practice.&lt;/p&gt;

&lt;p&gt;Thirdly load balancing isn&apos;t easy. I&apos;ve had the joy of debugging load balancing errors and outages, and wouldn&apos;t want to have to go through that again&lt;/p&gt;</comment>
                            <comment id="12646165" author="noble.paul" created="Mon, 10 Nov 2008 04:07:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Firstly there are about a thousand ways you can handle load balancing already out there on the backend side (both hardware and software)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes , But each extra layer introduces its own overhead. (in latency , hardware and maintenance). Moreover we are introducing a single point of failure.&lt;/p&gt;


&lt;p&gt;This is similar to a MySql driver providing a feature to connect to multiple servers (maters/slaves) . it does round-robin at the driver side and provide automatic failover. &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-replication-connection.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-replication-connection.html&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Secondly doing it on the client side means you will need to track ALL the clients who use your service&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let us discuss how best this can be handled. This is just an extension of what we already have , (a thin wrapper). &lt;/p&gt;</comment>
                            <comment id="12646362" author="otis" created="Mon, 10 Nov 2008 21:03:44 +0000"  >&lt;p&gt;I had a similar reaction as Ian.&lt;br/&gt;
If we decide we really need this, I wonder if it can be made a contrib instead of living in the core.&lt;/p&gt;</comment>
                            <comment id="12646463" author="noble.paul" created="Tue, 11 Nov 2008 04:06:59 +0000"  >&lt;p&gt;no probs.&lt;br/&gt;
I&apos;m sure that we do not use that internally , but there may be users who would find it useful. (one man&apos;s meat is another man&apos;s poison)&lt;/p&gt;

&lt;p&gt;Another use case is distributed search. Do we really want to have an extra hop (Loadbalancer) for a shard to communicate to other shards? That is a few dozen requests per client request . How many LoadBalancers would we need to handle such load?&lt;/p&gt;

&lt;p&gt;Is it big enough to merit a contrib package for itself?. Maybe. &lt;/p&gt;


</comment>
                            <comment id="12651742" author="noble.paul" created="Sat, 29 Nov 2008 18:51:11 +0000"  >&lt;p&gt;A simple round-robin based implementtaion. Keeps two lists of servers live and dead. If a request to a server fails it is added to the list of dead servers.&lt;/p&gt;

&lt;p&gt;Periodically (once in a minute) the dead servers are pinged to find if they are up again. The ping is done in a thread which makes a normal request. A thread checks only one server&lt;/p&gt;

&lt;p&gt;Needs another ConfigLBHttpSolrServer which can be driven from a config file (local/http)&lt;/p&gt;</comment>
                            <comment id="12651785" author="noble.paul" created="Sun, 30 Nov 2008 04:51:35 +0000"  >&lt;p&gt;there were a few bugs&lt;/p&gt;</comment>
                            <comment id="12660656" author="lancenorskog" created="Mon, 5 Jan 2009 01:40:27 +0000"  >&lt;p&gt;Concur with dubious reaction. However, what you mention about multiple hops is a valid point.&lt;/p&gt;

&lt;p&gt;The distributed searcher could have an option that returns the shard set. A Solr client library could run the distributed search/merge and return that to its calling app.  A similar list of active &quot;all-in-one&quot; servers could also be handed back to this mythical client library. &lt;/p&gt;

&lt;p&gt;Anyway, here&apos;s a use case for load balancing: we wanted to take a server out of the load balancer, rewarm its caches, then put it back in the balancer.&lt;/p&gt;</comment>
                            <comment id="12660661" author="noble.paul" created="Mon, 5 Jan 2009 04:03:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;The distributed searcher could have an option that returns the shard set. A Solr client library could run the distributed search/merge and return that to its calling app.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do you mean to say that the client library must handle the distributed search? &lt;br/&gt;
That may not be a good idea.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Anyway, here&apos;s a use case for load balancing...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is it a point against this or for this?&lt;/p&gt;</comment>
                            <comment id="12664828" author="noble.paul" created="Sat, 17 Jan 2009 12:44:35 +0000"  >&lt;p&gt;with a test case and a few fixes&lt;/p&gt;</comment>
                            <comment id="12666255" author="shalinmangar" created="Thu, 22 Jan 2009 19:19:17 +0000"  >&lt;p&gt;Guys, are there any objections in committing this to trunk? If not, I&apos;d like to go over the patch and commit it in a few days. I don&apos;t think this needs to go to a separate contrib since it is such a small piece of code and doesn&apos;t have any extra dependencies.&lt;/p&gt;</comment>
                            <comment id="12666296" author="otis" created="Thu, 22 Jan 2009 21:12:29 +0000"  >&lt;p&gt;I&apos;m not sure there is a clear consensus about this functionality being a good thing (also 0 votes).  Perhaps we can get more people&apos;s opinions?&lt;/p&gt;</comment>
                            <comment id="12666409" author="shalinmangar" created="Fri, 23 Jan 2009 03:45:53 +0000"  >&lt;p&gt;Walter Underwood on solr-dev:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This would be useful if there was search-specific balancing, like always send the same query back to the same server. That can make your cache far more effective.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is an interesting thought. Right now Solrj does not have the means to construct the Query/Filter objects which are used as the key for the Solr caches. Let us try to figure out if/how it can be implemented.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure there is a clear consensus about this functionality being a good thing (also 0 votes). Perhaps we can get more people&apos;s opinions?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes Otis. That is exactly what I wanted to do with my comment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I guess most people think that this is a solved problem and I agree. Solr has always required users to have load balancers and I guess our users have come to accept it. But if you look at the new distributed systems being developed (Katta/Bailey/CouchDB/Voldemort, etc.), almost none of them assume an external load balancer or fail over system in their design. If they do, external systems are made optional (Voldemort). Right now we force people to use and maintain an external system if they have a Solr master/slave architecture. Apache and mod_proxy_balancer are great but have a higher latency than hardware based load balancers and these are not cheap.&lt;/p&gt;

&lt;p&gt;The current patch is very simple. However, better ways to handle configuration and load balancing can be added. I think this can be a good starting point for the Solr 2.0 proposals. Unfortunately, very few of us have time to implement all of the proposals in a big bang way. But if we focus on one issue at a time, we will get somewhere close sooner. This might not be the code which ends up in Solr 2.0 but I think it can provide a good transition path.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12666413" author="noble.paul" created="Fri, 23 Jan 2009 04:23:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure there is a clear consensus about this functionality being a good thing&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not a Solr functionality. This is an external feature. Solr is agnostic about it.&lt;/p&gt;

&lt;p&gt;Most of our users use Solr with an external LoadBalancer. It does not mean that that is the best solution always. They do it because that is the only way .We are trying to offer a choice. &lt;/p&gt;


&lt;p&gt;A very good comparison would be memcached client . It does load balancing at the client side . I have copied some ideas from there too. I have already mentioned the example of mysql.&lt;/p&gt;

&lt;p&gt;The problems with the existing solutions is that there is no automatic failover. This implementation has it. &lt;/p&gt;



</comment>
                            <comment id="12666416" author="markrmiller@gmail.com" created="Fri, 23 Jan 2009 04:41:20 +0000"  >&lt;p&gt;I think your missing Otis&apos; point Noble. He is not dismissing this patch on its technical or useful merits. Hes pointing out that a couple of people have voiced skepticism and no one has voted for the issue. When thats the case, its not normal to put the issue in without more discussion. Which is what is happening, but I don&apos;t think your arguments alone should get the code committed. Rather, after you have expressed your arguments, we wait for votes, or more input. A couple people seem like they like the idea as well, but that info has just started coming, so lets let it play out a little before committing.&lt;/p&gt;

&lt;p&gt;My opinion:&lt;/p&gt;

&lt;p&gt;My initial thought was negative as well, for the obvious reasons. However, its such a simple thing (at least for this basic support), improves efficiency a bit, and could be a lot easier for a solr user to setup than a load balancer they don&apos;t know. I think I am a +1 myself.&lt;/p&gt;

&lt;p&gt;On the patch: I havn&apos;t spent a lot of time looking at it, but I think its best practice to only access shared variables within the lock. For instance, you access isEmpty on a shared variable, then get the lock and access the shared variable. I realize you want to save the lock cost, but if you need the lock, you shouldn&apos;t do that.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mark&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12666417" author="noble.paul" created="Fri, 23 Jan 2009 04:51:54 +0000"  >&lt;p&gt;Hi Mark, thanks&lt;/p&gt;

&lt;p&gt;I am in no hurry in getting this committed. I am just trying to raise opinions from other committers/users. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For instance, you access isEmpty on a shared variable, then get the lock and access the shared variable&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The Object in question is a threadsafe object (CopyOnWriteArrayList) so I believe it should not hurt. &lt;/p&gt;
</comment>
                            <comment id="12666536" author="markrmiller@gmail.com" created="Fri, 23 Jan 2009 13:03:38 +0000"  >&lt;p&gt;I am not convinced its right though. If you are using that lock pretty much everywhere anyway, why use a thread safe list? Something doesnt quite jive with me - I&apos;ll let others take a look and decide though.  I see that locking is done both with the lock and in one place the synchronize keyword. I think something is off myself. I havn&apos;t spent a lot of time, so perhaps it works, but I think a more standard treatment would be better for code maintainability. &lt;/p&gt;</comment>
                            <comment id="12666865" author="noble.paul" created="Sat, 24 Jan 2009 09:30:53 +0000"  >&lt;p&gt;some bugs were fixed (missing lock.unLock())&lt;/p&gt;</comment>
                            <comment id="12666866" author="noble.paul" created="Sat, 24 Jan 2009 09:36:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;If you are using that lock pretty much everywhere anyway, why use a thread safe list?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The lock is used to ensure that only one thread does a check for isAlive at any given point in time. So all the variables which are modified during that is threadsafe.&lt;/p&gt;</comment>
                            <comment id="12668152" author="shalinmangar" created="Wed, 28 Jan 2009 20:38:38 +0000"  >&lt;p&gt;Mark, did you get a chance to look at the new patch?&lt;/p&gt;

&lt;p&gt;Overall, I&apos;d like to see some more reactions on the idea/patch. I think it is a good idea and ground work for more advanced functionalities.&lt;/p&gt;</comment>
                            <comment id="12668155" author="markrmiller@gmail.com" created="Wed, 28 Jan 2009 20:52:51 +0000"  >&lt;p&gt;I&apos;d like to look at it closer, but I havn&apos;t had a chance yet.&lt;/p&gt;

&lt;p&gt;One quick fix needed:     if (size &amp;lt; 1) new SolrServerException(&quot;No more SolrServers alive&quot;);&lt;/p&gt;

&lt;p&gt;Missing the return in front of new.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mark&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12668338" author="noble.paul" created="Thu, 29 Jan 2009 04:42:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;One quick fix needed: if (size &amp;lt; 1) new SolrServerException(&quot;No more SolrServers alive&quot;);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;oops. nice catch . It should have been &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SolrServerException(&lt;span class=&quot;code-quote&quot;&gt;&quot;No more SolrServers alive&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12669808" author="hossman" created="Tue, 3 Feb 2009 00:25:02 +0000"  >&lt;p&gt;i haven&apos;t reviewed the technical merits of hte patch, but on the subject of the &lt;b&gt;idea&lt;/b&gt;...&lt;/p&gt;

&lt;p&gt;In general i agree with ian/otis: functionality like this could very easily be abused/missued by novice users who may not realize that more robust solutions may be out there and can be just as easy to setup.  That said: any code that does what it&apos;s documentation says it does is going to be use to someone.  &lt;/p&gt;

&lt;p&gt;my concern with the patch as written is that it doesn&apos;t have any documentation explaining what it does, or what the caveats are to useing it (ie: how it behaves in failure cases, what approach it takes to blanacing load, etc...) so it won&apos;t be clear to people when/if it fits their use cases.&lt;/p&gt;

&lt;p&gt;The &quot;Hits&quot; class in Lucene-Java is a great example of code whose existence tended to do more harm then good &amp;#8211; it was a simple API that was easy to use, but the implementation had a lot of &quot;gotchas&quot; that were hidden behind a black box and were too complicated to document cleanly for novice users; many people who used it ran into performance problems or problemswith closed IndexSearchers and came away with a bad impression of Lucene.  ... we just need to make sure we don&apos;t make more mistakes like that with convinienceclasses and &quot;simple&quot; APIs for hard problems.&lt;/p&gt;

&lt;p&gt;If the behavior of this class can be documented in a straight forward way (spelling out both success and failure cases) as well as when it &lt;b&gt;doesn&apos;t&lt;/b&gt; make sense to use it, then i see no reason not to commit.  (I&apos;m assuming of course that the code actually works)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;However....&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m curious as to whether or not anyone has done any research into existing java libraries that implement http load balancing.  (I assume someone somewhere has implemented a generic wrapper/plugin for HttpCLient that does this already ... it&apos;s just a question of if it&apos;s OpenSource with a freindly liscence for us to link against)&lt;/p&gt;

</comment>
                            <comment id="12669863" author="noble.paul" created="Tue, 3 Feb 2009 03:42:41 +0000"  >&lt;p&gt;Hoss. Thanks  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If the behavior of this class can be documented in a straight forward way (spelling out both success and failure cases)...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A wiki page is added here: &lt;a href=&quot;http://wiki.apache.org/solr/LBHttpSolrServer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/LBHttpSolrServer&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="12670042" author="otis" created="Tue, 3 Feb 2009 18:17:02 +0000"  >&lt;p&gt;Good comment from Wunder&apos;s made on the ML:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This would be useful if there was search-specific balancing,&lt;br/&gt;
like always send the same query back to the same server. That&lt;br/&gt;
can make your cache far more effective.&lt;/p&gt;

&lt;p&gt;wunder&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="12670140" author="hossman" created="Tue, 3 Feb 2009 22:11:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;A wiki page is added here: &lt;a href=&quot;http://wiki.apache.org/solr/LBHttpSolrServer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/solr/LBHttpSolrServer&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually i was referring to a need for javadoc comments in the class since there are none in the current patch. &lt;/p&gt;

&lt;p&gt;the wiki and/or static pages like hte tutorial make sense for features all users need to be aware of, but when we&apos;re talking about solrj code that java apps will explicitly compile against there isreally no substitute for good package, class, and method level javadocs.&lt;/p&gt;</comment>
                            <comment id="12671051" author="noble.paul" created="Fri, 6 Feb 2009 08:35:27 +0000"  >&lt;p&gt;Same patch with javadocs&lt;/p&gt;</comment>
                            <comment id="12674498" author="shalinmangar" created="Wed, 18 Feb 2009 07:14:42 +0000"  >&lt;p&gt;Hoss, did you get a chance to see the latest patch?&lt;/p&gt;</comment>
                            <comment id="12675864" author="shalinmangar" created="Mon, 23 Feb 2009 12:03:54 +0000"  >&lt;p&gt;So what&apos;s the verdict on this one? Seems like most concerns were taken care of. Anything else we should do to get this committed?&lt;/p&gt;</comment>
                            <comment id="12676136" author="hossman" created="Tue, 24 Feb 2009 00:03:49 +0000"  >&lt;p&gt;I still think the javadocs should be beefed up a bit... at a minimum the info from &quot;When to use this ?&quot;, &quot;How does the Load Balancing happen ?&quot;, and &quot;How does it know if a server has come back up ?&quot; sections of the wiki page Noble made should be in the class level javadocs ... some of the &quot;How does it know...&quot; info made it into the javadocs for setAliveCheckInterval, but considering how important that method is there should be a ref to it in the class docs &amp;#8211; and there &lt;b&gt;definitely&lt;/b&gt; needs to be some explicit mention of the &quot;The ping is done not in a separate thread, it is done in a thread which made a normal request.&quot; fact, i would &lt;b&gt;never&lt;/b&gt; have guessed that looking at the public docs in the class.&lt;/p&gt;

&lt;p&gt;And as I mentioned before: if there are concerns that this class will be misused (and it certainly seems like there are) then it really needs to contain javadocs explaining when it &lt;b&gt;doesn&apos;t&lt;/b&gt; make sense to use it and some alternative suggestions (if nothing else, a link to wikipedia: &lt;a href=&quot;http://en.wikipedia.org/wiki/Load_balancing_(computing)&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Load_balancing_(computing)&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12678004" author="noble.paul" created="Mon, 2 Mar 2009 15:04:53 +0000"  >&lt;p&gt;#implementation changed to do the pings in a separate thread. This keeps the code simple&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;javadocs added&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="12682947" author="shalinmangar" created="Wed, 18 Mar 2009 07:45:38 +0000"  >&lt;p&gt;Changes&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Javadoc updated to say about load balancing strategy, which failures mark a server to be a failure, how do they come back up and other alternatives to this class&lt;/li&gt;
	&lt;li&gt;Changed locking &amp;#8211; all places where the two lists are modified are placed inside a lock, the reads are not locked&lt;/li&gt;
	&lt;li&gt;It uses the exception thrown by CommonsHttpSolrServer to detect when to mark server as dead&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="12683809" author="shalinmangar" created="Fri, 20 Mar 2009 09:11:18 +0000"  >&lt;p&gt;Committed revision 756381.&lt;/p&gt;

&lt;p&gt;Thanks to everybody who contributed!&lt;/p&gt;</comment>
                            <comment id="12683966" author="shalinmangar" created="Fri, 20 Mar 2009 17:50:06 +0000"  >&lt;p&gt;LBHttpSolrServer had the wrong import of SolrException which was causing compile failures when running tests through ant build file.&lt;/p&gt;

&lt;p&gt;Committed revision 756682.&lt;/p&gt;</comment>
                            <comment id="12700003" author="noble.paul" created="Fri, 17 Apr 2009 05:59:51 +0100"  >&lt;p&gt;a bug fix as reported by a user &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://markmail.org/thread/bvysveoibqcndj4n&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://markmail.org/thread/bvysveoibqcndj4n&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12700109" author="shalinmangar" created="Fri, 17 Apr 2009 11:05:15 +0100"  >&lt;p&gt;Committed revision 765912.&lt;/p&gt;</comment>
                            <comment id="12758841" author="milkdud" created="Wed, 23 Sep 2009 20:18:16 +0100"  >&lt;p&gt;There seems to be an issue here with the check interval.  The documentation and even the default value assume that the check interval is measured in milliseconds, when in fact the code below has the TimeUnit as seconds.&lt;/p&gt;

&lt;p&gt;getAliveCheckRunner(new WeakReference&amp;lt;LBHttpSolrServer&amp;gt;(this)), this.interval, this.interval, TimeUnit.SECONDS);&lt;/p&gt;

&lt;p&gt;So basically right now the check interval is 60,000 seconds...yikes.&lt;/p&gt;</comment>
                            <comment id="12758864" author="yseeley@gmail.com" created="Wed, 23 Sep 2009 21:27:31 +0100"  >&lt;p&gt;Thanks Jason, I just committed a fix for this that changed it to milliseconds.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12405725" name="SOLR-844.patch" size="2551" author="noble.paul" created="Fri, 17 Apr 2009 05:59:51 +0100"/>
                            <attachment id="12402457" name="SOLR-844.patch" size="19716" author="shalinmangar" created="Wed, 18 Mar 2009 07:45:38 +0000"/>
                            <attachment id="12401244" name="SOLR-844.patch" size="16889" author="noble.paul" created="Mon, 2 Mar 2009 15:04:53 +0000"/>
                            <attachment id="12399628" name="SOLR-844.patch" size="15964" author="noble.paul" created="Fri, 6 Feb 2009 08:35:27 +0000"/>
                            <attachment id="12398637" name="SOLR-844.patch" size="13611" author="noble.paul" created="Sat, 24 Jan 2009 09:30:53 +0000"/>
                            <attachment id="12398141" name="SOLR-844.patch" size="13761" author="noble.paul" created="Sat, 17 Jan 2009 12:44:35 +0000"/>
                            <attachment id="12394939" name="SOLR-844.patch" size="7148" author="noble.paul" created="Sun, 30 Nov 2008 04:51:35 +0000"/>
                            <attachment id="12394934" name="SOLR-844.patch" size="7080" author="noble.paul" created="Sat, 29 Nov 2008 18:51:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 Nov 2008 01:52:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6783</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxov3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20347</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>