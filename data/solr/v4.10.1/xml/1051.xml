<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:24:36 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1051/SOLR-1051.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1051] Support the merge of multiple indexes</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1051</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;This is to support the merge of multiple indexes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12416329">SOLR-1051</key>
            <summary>Support the merge of multiple indexes</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shalinmangar">Shalin Shekhar Mangar</assignee>
                                    <reporter username="ningli">Ning Li</reporter>
                        <labels>
                    </labels>
                <created>Fri, 6 Mar 2009 19:47:51 +0000</created>
                <updated>Tue, 10 Nov 2009 15:51:58 +0000</updated>
                            <resolved>Tue, 4 Aug 2009 14:11:23 +0100</resolved>
                                                    <fixVersion>1.4</fixVersion>
                                    <component>update</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12681144" author="ningli" created="Thu, 12 Mar 2009 02:17:20 +0000"  >&lt;p&gt;&quot;AddIndexes&quot; is exposed as a CoreAdmin command, as Shalin suggested.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;As a CoreAdmin command, should &quot;addIndexes&quot; go through the update processor chain? If so, should it be exposed as an update command?&lt;/li&gt;
	&lt;li&gt;Should &quot;commit&quot; be called at the end of &quot;addIndexes? Note that &quot;commit&quot; is not a CoreAdmin command.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12681727" author="ningli" created="Fri, 13 Mar 2009 14:20:25 +0000"  >&lt;p&gt;Any comments? In the current patch, addIndexes goes to the update handler directly so not through the update processor chain, and commit is not called at the end.&lt;/p&gt;</comment>
                            <comment id="12681807" author="yseeley@gmail.com" created="Fri, 13 Mar 2009 15:17:25 +0000"  >&lt;p&gt;The update processor has primarily been for documents not whole indexes.... still, if an update processor were keeping track of changes to the index, or what documents were in the index, then a merge event like this could be important.&lt;/p&gt;

&lt;p&gt;I think perhaps &quot;merge&quot; might be a better name than &quot;add&quot; though, since we may want to allow a core to have multiple lucene indexes in the future?&lt;/p&gt;</comment>
                            <comment id="12681816" author="ningli" created="Fri, 13 Mar 2009 16:07:02 +0000"  >&lt;p&gt;Having &quot;add/mergeIndexes&quot; go through the update processor chain makes sense. But I&apos;ll keep it a CoreAdmin command since non-admin users probably shouldn&apos;t issue the command.&lt;/p&gt;

&lt;p&gt;I thought the difference between &quot;merge&quot; and &quot;add&quot; is that, e.g. given indexA and indexB, merge(indexA, indexB) vs. indexA.add(indexB). A new searcher on indexA will see indexB in case of &quot;add&quot;, and won&apos;t in case of &quot;merge&quot;. But if you think indexA.merge(indexB) is fine, I can rename it.&lt;/p&gt;</comment>
                            <comment id="12694669" author="ningli" created="Wed, 1 Apr 2009 19:25:49 +0100"  >&lt;p&gt;Finally get back to this. Here is the new patch.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Rename &quot;addIndexes&quot; to &quot;mergeIndexes&quot;.&lt;/li&gt;
	&lt;li&gt;&quot;MergeIndexes&quot; now goes through the update process chain.&lt;br/&gt;
Comments are welcome.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12699885" author="otis" created="Thu, 16 Apr 2009 22:37:52 +0100"  >&lt;p&gt;Shouldn&apos;t we have:&lt;br/&gt;
indexC = merge(A, B), leaving A and B unmodifie&lt;/p&gt;

&lt;p&gt;Isn&apos;t that the most flexible approach?&lt;/p&gt;</comment>
                            <comment id="12699923" author="yseeley@gmail.com" created="Fri, 17 Apr 2009 00:25:38 +0100"  >&lt;blockquote&gt;&lt;p&gt;indexC = merge(A, B), leaving A and B unmodified&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you just want to add one index to another though, this would be more expensive as both indexes would need to be copied.&lt;/p&gt;</comment>
                            <comment id="12699955" author="ningli" created="Fri, 17 Apr 2009 02:25:14 +0100"  >&lt;blockquote&gt;&lt;p&gt;indexC = merge(A, B), leaving A and B unmodified&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the comments! With the current approach, you can achieve this by creating an empty index C then merging A and B into C, no?&lt;/p&gt;</comment>
                            <comment id="12713045" author="shalinmangar" created="Tue, 26 May 2009 16:05:52 +0100"  >&lt;p&gt;Patch updated to trunk. The CoreAdminHandler refactoring in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1106&quot; title=&quot;Pluggable CoreAdminHandler  (Action ) architecture that allows for custom handler access to CoreContainer / request-response &quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1106&quot;&gt;&lt;del&gt;SOLR-1106&lt;/del&gt;&lt;/a&gt; had broken this.&lt;/p&gt;

&lt;p&gt;The javadocs of IW.addIndexesNoOptimize say that an IW should not be opened on the source indexes. I guess the use-case behind this feature takes care of this? If opening an IW on the source indexes can lead to corruption of the target index, is there any way to avoid it?&lt;/p&gt;

&lt;p&gt;I think this patch is ready for commit.  We&apos;d need to record the above warning on the wiki when we add details about this command. If there are no objections, I&apos;ll commit in a day or two.&lt;/p&gt;</comment>
                            <comment id="12713860" author="shalinmangar" created="Thu, 28 May 2009 05:16:58 +0100"  >&lt;p&gt;Committed revision 779423.&lt;/p&gt;

&lt;p&gt;Thanks Ning!&lt;/p&gt;</comment>
                            <comment id="12714942" author="koji" created="Mon, 1 Jun 2009 01:08:50 +0100"  >&lt;p&gt;I got NPE when trying to MERGEINDEXES:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8983/solr/admin/cores?action=MERGEINDEXES&amp;amp;core=core0&amp;amp;indexDirs=indexname&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8983/solr/admin/cores?action=MERGEINDEXES&amp;amp;core=core0&amp;amp;indexDirs=indexname&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.solr.update.processor.RunUpdateProcessor.&amp;lt;init&amp;gt;(RunUpdateProcessorFactory.java:55)&lt;br/&gt;
	at org.apache.solr.update.processor.RunUpdateProcessorFactory.getInstance(RunUpdateProcessorFactory.java:43)&lt;br/&gt;
	at org.apache.solr.update.processor.UpdateRequestProcessorChain.createProcessor(UpdateRequestProcessorChain.java:55)&lt;br/&gt;
	at org.apache.solr.handler.admin.CoreAdminHandler.handleMergeAction(CoreAdminHandler.java:191)&lt;br/&gt;
	at org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(CoreAdminHandler.java:151)&lt;br/&gt;
	at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:131)&lt;br/&gt;
	at org.apache.solr.servlet.SolrDispatchFilter.handleAdminRequest(SolrDispatchFilter.java:301)&lt;br/&gt;
	at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:174)&lt;br/&gt;
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)&lt;br/&gt;
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)&lt;br/&gt;
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)&lt;br/&gt;
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)&lt;br/&gt;
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)&lt;br/&gt;
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)&lt;br/&gt;
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)&lt;br/&gt;
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)&lt;br/&gt;
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)&lt;br/&gt;
	at org.mortbay.jetty.Server.handle(Server.java:285)&lt;br/&gt;
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)&lt;br/&gt;
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:821)&lt;br/&gt;
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)&lt;br/&gt;
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)&lt;br/&gt;
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)&lt;br/&gt;
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)&lt;br/&gt;
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)&lt;/p&gt;

&lt;p&gt;Solr was started by:&lt;/p&gt;

&lt;p&gt;$ cd example&lt;br/&gt;
$ java -Dsolr.solr.home=./multicore -jar start.jar&lt;/p&gt;

&lt;p&gt;The cause of NPE is RunUpdateProcessor trys to get UpdateHandler via SolrCore, but core is null in req:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RunUpdateProcessor(SolrQueryRequest req, UpdateRequestProcessor next) {
    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;( next );
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.req = req;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateHandler = req.getCore().getUpdateHandler();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12715030" author="shalinmangar" created="Mon, 1 Jun 2009 09:51:57 +0100"  >&lt;p&gt;Since &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1121&quot; title=&quot;CoreAdminhandler should not need a core&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1121&quot;&gt;&lt;del&gt;SOLR-1121&lt;/del&gt;&lt;/a&gt;, core admin commands do not get a core. So calling an UpdateProcessor through a core admin command cannot work.&lt;/p&gt;</comment>
                            <comment id="12715031" author="shalinmangar" created="Mon, 1 Jun 2009 10:18:41 +0100"  >&lt;p&gt;The test case passed because it was using an EmbeddedSolrServer which creates SolrQueryRequest objects with the current core. The logic in SolrDispatchFilter has been changed to not create a special AdminCore.&lt;/p&gt;

&lt;p&gt;I&apos;m wondering if it makes sense to have the UpdateProcessor hooks at all. Even in the previous scheme, the first core was designated as the admin core. Therefore, keeping track of merges through an update processor would require one to setup his update processor on the first core defined in solr.xml.&lt;/p&gt;

&lt;p&gt;How about we remove the UpdateProcessor hooks for merge command? Thoughts?&lt;/p&gt;</comment>
                            <comment id="12715600" author="ningli" created="Tue, 2 Jun 2009 18:37:05 +0100"  >&lt;p&gt;In the current approach, mergeIndexes is an admin command and the target core should be online. I haven&apos;t looked into the SolrDispatchFilter logic change, but it seems with this change, the following are the two valid options:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;mergeIndexes is an update command and the target core should be online&lt;/li&gt;
	&lt;li&gt;mergeIndexes is an admin command and the target core should be offline&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The first option is close to what we have now. I like it a bit more because you keep track of the merge by going through UpdateProcessor. But you seem to prefer the second option?&lt;/p&gt;</comment>
                            <comment id="12716167" author="noble.paul" created="Thu, 4 Jun 2009 07:07:51 +0100"  >&lt;p&gt;A few suggestions:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;There should be a provision to merge one core w/ another. According to me  the most common usecase would be to create a core , add docs to that , and then just merge it into the main core which is serving requests. This way, the user will not need to touch the filesystem of directly.&lt;/li&gt;
	&lt;li&gt;The indexDirs parameter should not be comma separated values. http request can accept multiple values for same parameter&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12716173" author="shalinmangar" created="Thu, 4 Jun 2009 07:30:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;I like it a bit more because you keep track of the merge by going through UpdateProcessor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see your point. I&apos;ll give a patch which passes the target core into the request.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;There should be a provision to merge one core w/ another. According to me the most common usecase would be to create a core , add docs to that , and then just merge it into the main core which is serving requests. This way, the user will not need to touch the filesystem of directly.&lt;/li&gt;
	&lt;li&gt;The indexDirs parameter should not be comma separated values. http request can accept multiple values for same parameter&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Agree on both. I&apos;ll commit the fix and #2 first since the feature in trunk is broken. Then we can work on adding #1 which requires more changes.&lt;/p&gt;</comment>
                            <comment id="12716185" author="shalinmangar" created="Thu, 4 Jun 2009 08:29:24 +0100"  >&lt;ol&gt;
	&lt;li&gt;Fix for NPE: Wrap the SolrQueryRequest proving the target core&lt;/li&gt;
	&lt;li&gt;Change comma separated params to multiple params&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I&apos;ll commit this shortly.&lt;/p&gt;</comment>
                            <comment id="12716205" author="shalinmangar" created="Thu, 4 Jun 2009 10:08:15 +0100"  >&lt;p&gt;Committed revision 781688.&lt;/p&gt;</comment>
                            <comment id="12738663" author="gsingers" created="Tue, 4 Aug 2009 00:03:46 +0100"  >&lt;p&gt;Can this be closed?&lt;/p&gt;</comment>
                            <comment id="12738948" author="shalinmangar" created="Tue, 4 Aug 2009 13:33:27 +0100"  >&lt;p&gt;Merging cores is the part which is left. I think it needs more thought/discussion before it can be implemented. I&apos;ll close this one and open another issue for 1.5 about merging cores.&lt;/p&gt;</comment>
                            <comment id="12738963" author="shalinmangar" created="Tue, 4 Aug 2009 14:11:23 +0100"  >&lt;p&gt;I&apos;ve opened &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1331&quot; title=&quot;Support merging multiple cores&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1331&quot;&gt;&lt;del&gt;SOLR-1331&lt;/del&gt;&lt;/a&gt; for the missing piece.&lt;/p&gt;</comment>
                            <comment id="12775680" author="gsingers" created="Tue, 10 Nov 2009 15:51:58 +0000"  >&lt;p&gt;Bulk close for Solr 1.4&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12415966">SOLR-1045</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12432153">SOLR-1331</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12409858" name="SOLR-1051.patch" size="4287" author="shalinmangar" created="Thu, 4 Jun 2009 08:29:24 +0100"/>
                            <attachment id="12409044" name="SOLR-1051.patch" size="22018" author="shalinmangar" created="Tue, 26 May 2009 16:05:52 +0100"/>
                            <attachment id="12404362" name="SOLR-1051.patch" size="20511" author="ningli" created="Wed, 1 Apr 2009 19:25:49 +0100"/>
                            <attachment id="12402006" name="SOLR-1051.patch" size="17845" author="ningli" created="Thu, 12 Mar 2009 02:11:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Mar 2009 15:17:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6584</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxnl3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20140</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>