<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:22:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SOLR-1357/SOLR-1357.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[SOLR-1357] SolrInputDocument cannot process dynamic fields</title>
                <link>https://issues.apache.org/jira/browse/SOLR-1357</link>
                <project id="12310230" key="SOLR">Solr</project>
                    <description>&lt;p&gt;Adding data via &lt;tt&gt;SolrInputDocument&lt;/tt&gt; is normally done by calling the &lt;tt&gt;addField&lt;/tt&gt; method with a field name, field value and an optional boost.  In case of dynamic fields, if field names are known upfront, then caller of this method just passes in the right name and it automatically works.&lt;/p&gt;

&lt;p&gt;This does not go well with users who use &lt;tt&gt;@interface Field&lt;/tt&gt; annotations for automatic binding. &lt;br/&gt;
As of &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1129&quot; title=&quot;SolrJ cannot bind dynamic fields to beans&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1129&quot;&gt;&lt;del&gt;SOLR-1129&lt;/del&gt;&lt;/a&gt;, users can annotate &lt;tt&gt;Map&amp;lt;String, String&amp;gt; propertyName&lt;/tt&gt; with &lt;tt&gt;@Field (&quot;field_*&quot;)&lt;/tt&gt; kind of annotations to bind dynamic field data to. &lt;tt&gt;SolrInputDocument&lt;/tt&gt; should exhibit the same behavior.  The field &lt;tt&gt;value&lt;/tt&gt; currently supported are - primitive, array, collection or an instance of Iterable. It can also take &lt;tt&gt;Map&lt;/tt&gt; as values. If the field, for which &lt;tt&gt;addField&lt;/tt&gt; method is called, is of dynamicField type (which can be derived from the field name), then the keys of the &lt;tt&gt;Map&lt;/tt&gt;, passed as value, should be used to &quot;compose&quot; the correct field name.&lt;/p&gt;

&lt;p&gt;This should be supported&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;//This code sample should populate the dynamic fields &lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Nokia&quot;&lt;/span&gt; and &lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Samsung&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MyBean{
  @Field(&quot;brands_*)
  Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; brands;
  
  ...
}
Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; brands= &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;();
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Nokia&quot;&lt;/span&gt;, 1000);
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Samsung&quot;&lt;/span&gt;, 100);

MyBean myBean = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyBean();
myBean.setBrands(brands);
solrServer.addBean(myBean);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can think of supporting this too ...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;//This code sample should populate the dynamic fields &lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Nokia&quot;&lt;/span&gt; and &lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Samsung&quot;&lt;/span&gt;
&lt;/span&gt;Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; brands= &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;();
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Nokia&quot;&lt;/span&gt;, 1000);
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Samsung&quot;&lt;/span&gt;, 100);

SolrInputDocument doc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SolrInputDocument();
doc.addField(&lt;span class=&quot;code-quote&quot;&gt;&quot;brands_*&quot;&lt;/span&gt;, brands);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12432765">SOLR-1357</key>
            <summary>SolrInputDocument cannot process dynamic fields</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="noble.paul">Noble Paul</assignee>
                                    <reporter username="avlesh">Avlesh Singh</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Aug 2009 12:29:12 +0100</created>
                <updated>Wed, 30 Mar 2011 16:45:34 +0100</updated>
                            <resolved>Wed, 2 Dec 2009 11:59:11 +0000</resolved>
                                                    <fixVersion>1.5</fixVersion>
                    <fixVersion>3.1</fixVersion>
                    <fixVersion>4.0-ALPHA</fixVersion>
                                    <component>clients - java</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12741854" author="noble.paul" created="Tue, 11 Aug 2009 14:20:01 +0100"  >&lt;p&gt;for the bean&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MyBean{
  @Field(&quot;brands_*)
  Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; brands;
  
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;the following should not work&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Nokia&quot;&lt;/span&gt;, 1000);
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Samsung&quot;&lt;/span&gt;, 100);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but this should work&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Nokia&quot;&lt;/span&gt;, 1000);
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Samsung&quot;&lt;/span&gt;, 100);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;we may not need to support it is SolrInputDocument&lt;/p&gt;</comment>
                            <comment id="12741910" author="avlesh" created="Tue, 11 Aug 2009 16:25:45 +0100"  >&lt;p&gt;Well, I don&apos;t see a reason behind the proposed behavior (brand_nokia versus nokia), Noble. And why do you think &lt;tt&gt;SolrInputDocument&lt;/tt&gt; should not facilitate this?&lt;/p&gt;</comment>
                            <comment id="12741915" author="avlesh" created="Tue, 11 Aug 2009 16:34:44 +0100"  >&lt;p&gt;My point is that when a user has already annotated the field as &quot;brand_*&quot;, appending them to keys of the Map is counter intuitive. This also goes against the behavior in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1129&quot; title=&quot;SolrJ cannot bind dynamic fields to beans&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1129&quot;&gt;&lt;del&gt;SOLR-1129&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
As far as supporting the behavior in &lt;tt&gt;SolrInputDocument&lt;/tt&gt; goes, unless there is some low level API restriction, I would say we should support it.&lt;/p&gt;</comment>
                            <comment id="12742220" author="noble.paul" created="Wed, 12 Aug 2009 06:13:06 +0100"  >&lt;blockquote&gt;&lt;p&gt;My point is that when a user has already annotated the field as &quot;brand_*&quot;, appending them to keys of the Map is counter intuitive.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;IMHO It would be more clear if the fields are created in the same name as the user input. appending it to the wild card part is not so obvious. &lt;/p&gt;

&lt;p&gt;This is how serialization/deserialization works.&lt;/p&gt;

&lt;p&gt;When I fetch an instance of MyBean ,it  contains the keys as &quot;brands_Nokia&quot; and brands_Samsung&quot; . When I store it back why should I chop off the &quot;brands_&quot; part. I should be able to put back in the same Object into Solr w/o modifying it&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And why do you think SolrInputDocument should not facilitate this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not against the idea itself. I just meant that it is beyond the scope of this issue. Moreover, SolrInputDocument does not have a problem in achieving this requirement .&lt;/p&gt;</comment>
                            <comment id="12780512" author="gibbus" created="Fri, 20 Nov 2009 10:56:38 +0000"  >&lt;p&gt;I have not been able to set dynamic fields via annotations in SolrJ 1.4.&lt;br/&gt;
I have modified the following loop in  &lt;tt&gt;org.apache.solr.client.solrj.beans.DocumentObjectBinder.toSolrInputDocument()&lt;/tt&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;DocumentObjectBinder.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (DocField field : fields) {
      doc.setField( field.name, field.get( obj ), 1.0f );
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Becomes&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (DocField field : fields) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (field.dynamicFieldNamePatternMatcher != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; field.get(obj) != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; field.isContainedInMap) {
            Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; mapValue = (HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt;) field.get(obj);

            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; e : mapValue.entrySet()) {
                  doc.setField(e.getKey(), e.getValue(), 1.0f);
            }
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            doc.setField(field.name, field.get(obj), 1.0f);
      }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This modification allows the following :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MyBean{
  @Field(&quot;brands_*)
  Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; brands;
  
  ...
}


Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; brands= &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;();
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Nokia&quot;&lt;/span&gt;, 1000);
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Samsung&quot;&lt;/span&gt;, 100);

MyBean myBean = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyBean();
myBean.setBrands(brands);
solrServer.addBean(myBean);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, I have not been able to find the correct process to submit this patch to SolrJ repository for official review. &lt;br/&gt;
Would you so kind as to inform me of the necessary steps to include this patch (or another to the same effect) in future revisions of SolrJ ?&lt;/p&gt;</comment>
                            <comment id="12782925" author="lgrote" created="Thu, 26 Nov 2009 16:14:17 +0000"  >&lt;p&gt;Hello,&lt;br/&gt;
I think the way Avlesh suggested is more intuitive. At least I tried exactly that and wondered why it did not work.&lt;/p&gt;

&lt;p&gt;This is what I think would be the best:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// a Field like &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;:
&lt;/span&gt;@Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;*_brands&quot;&lt;/span&gt;)
Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; brands;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you should add data like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Nokia&quot;&lt;/span&gt;, 1000);
brands.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;Samsung&quot;&lt;/span&gt;, 100);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and get the data out like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bean.getBrands().get(&lt;span class=&quot;code-quote&quot;&gt;&quot;Nokia&quot;&lt;/span&gt;);
bean.getBrands().get(&lt;span class=&quot;code-quote&quot;&gt;&quot;Samsung&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I used the idear of Jean and enhanced it to work like shown above.&lt;br/&gt;
I attached a patch for this, maybe someone can have a look. It is not well tested.&lt;/p&gt;

&lt;p&gt;I have never upload a Patch or something before. so if i&apos;m doing something wrong, or do not follow the rules or anything.&lt;br/&gt;
Please tell me.&lt;/p&gt;

&lt;p&gt;Regards, Lars&lt;/p&gt;</comment>
                            <comment id="12784121" author="noble.paul" created="Tue, 1 Dec 2009 08:47:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think the way Avlesh suggested is more intuitive. At least I tried exactly that and wondered why it did not work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What i feel is that it is not consistent. The problem is that the same bean canot be added to Solr w/ the same annotation. That is not a very good design&lt;/p&gt;</comment>
                            <comment id="12784129" author="lgrote" created="Tue, 1 Dec 2009 09:23:09 +0000"  >&lt;p&gt;Hello Noble,&lt;br/&gt;
I&apos;m sorry to bother you, but I don&apos;t understand the problem.&lt;/p&gt;

&lt;p&gt;Can you please explain what you mean by the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The problem is that the same bean canot be added to Solr w/ the same annotation. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe I&apos;m missing something, but at the moment I don&apos;t know what. Is it possible that you give a code example of the &apos;bad&apos; design? So that I can fix the patch.&lt;/p&gt;

&lt;p&gt;Regards, Lars&lt;/p&gt;</comment>
                            <comment id="12784150" author="noble.paul" created="Tue, 1 Dec 2009 09:59:53 +0000"  >&lt;p&gt;assume that the data that is fetched works as follows&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bean.getBrands().get(&lt;span class=&quot;code-quote&quot;&gt;&quot;Nokia&quot;&lt;/span&gt;);
bean.getBrands().get(&lt;span class=&quot;code-quote&quot;&gt;&quot;Samsung&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So if I do a an add w/ the same bean as follows&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
solrServer.add(bean);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;it adds the document with names as &quot;Nokia&quot; and &quot;Samsung&quot; instead of &quot;Nokia_Brands&quot; and &quot;Samsung_Brands&quot; . Atleast that is the implementation now.&lt;/p&gt;</comment>
                            <comment id="12784163" author="lgrote" created="Tue, 1 Dec 2009 10:39:20 +0000"  >&lt;p&gt;Thanks for the claification!&lt;br/&gt;
Indeed that would be VERY bad design. But it is not what I intended to do. This would be the behavior if I had copied the loop of Jean. In the Patch the loop has a modification.&lt;/p&gt;

&lt;p&gt;Have look at the inner loop. I think this should solve the problem.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;DocumentObjectBinder.java Line 91 to 102&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (DocField field : fields) {
		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (field.dynamicFieldNamePatternMatcher != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
				&amp;amp;&amp;amp; field.get(obj) != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; field.isContainedInMap) {
			Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; mapValue = (HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt;) field
					.get(obj);

			&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; e : mapValue.entrySet()) {
				doc.setField(field.name.replaceFirst(&lt;span class=&quot;code-quote&quot;&gt;&quot;\\*&quot;&lt;/span&gt;, e.getKey()), e.getValue(), 1.0f);
			}
		} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
			doc.setField(field.name, field.get(obj), 1.0f);
		}
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think I&apos;ll create a patch for the testcase too, then we can see the behavior more clearly. &lt;/p&gt;

&lt;p&gt;What do you think about the snippet above? Do I miss something?&lt;br/&gt;
Regards ,Lars&lt;/p&gt;</comment>
                            <comment id="12784183" author="noble.paul" created="Tue, 1 Dec 2009 11:32:23 +0000"  >&lt;p&gt;Please clarify what the behavior is  going to be? &lt;/p&gt;</comment>
                            <comment id="12784188" author="lgrote" created="Tue, 1 Dec 2009 11:53:06 +0000"  >&lt;p&gt;First of all, you are right there is someting wrong with the implementation.&lt;/p&gt;

&lt;p&gt;The behavior should be the following&lt;/p&gt;

&lt;p&gt;The Bean should act like schon above. Add Brands, get Brands ... The SolrInputDocument should store the values with the full name i.e. &quot;nokia_brands&quot;, that&apos;s why I&apos;m replacing the &quot;*&quot; with the key. The idear was that you can access the value like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bean.getBrands(&apos;Nokia&apos;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
solrDocument.getFieldValue(&lt;span class=&quot;code-quote&quot;&gt;&quot;brands_Nokia&quot;&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Anyway, I just started writting a unittest: Create Item -&amp;gt; SolrInputDocument -&amp;gt; SolrDocument -&amp;gt; retriev with getBean -&amp;gt;  SolrInputDocument -&amp;gt; SolrDocument -&amp;gt; retriev with getBean &lt;/p&gt;

&lt;p&gt;And if I have a Field like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;supplier_simple_*&quot;&lt;/span&gt;)
Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; supplier_simple;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;everything is fine and green. But if I try the same with a Filed like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;supplier_*&quot;&lt;/span&gt;)
Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt; supplier;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I does not work, and at the moment I don&apos;t know why. So you are right, I&apos;m having a closer look at this in the next few days, and hopefully I&apos;ll come back with a patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Regards Lars&lt;/p&gt;


</comment>
                            <comment id="12784191" author="shalinmangar" created="Tue, 1 Dec 2009 11:58:39 +0000"  >&lt;p&gt;Solr does not need to add any intelligence here. Lets keep it a dumb and simple system, put the correct field name and get the correct field name. The behavior should be to put brands_Nokia and get back brands_Nokia for a dynamic field brands_*. The same thing is done for non-solrj clients and the solr responses.&lt;/p&gt;</comment>
                            <comment id="12784192" author="noble.paul" created="Tue, 1 Dec 2009 12:02:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;put the correct field name and get the correct field name&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12784196" author="lgrote" created="Tue, 1 Dec 2009 12:19:06 +0000"  >&lt;p&gt;2 to 1 you win!&lt;/p&gt;

&lt;p&gt;I&apos;ll implement that and update the unittest in the next few days.&lt;br/&gt;
Regards, Lars&lt;/p&gt;</comment>
                            <comment id="12784222" author="gibbus" created="Tue, 1 Dec 2009 13:17:23 +0000"  >&lt;p&gt;ok, Thank you very much.&lt;/p&gt;</comment>
                            <comment id="12784449" author="lgrote" created="Tue, 1 Dec 2009 21:42:01 +0000"  >&lt;p&gt;Hey Noble,&lt;br/&gt;
I have a question ... again.&lt;/p&gt;

&lt;p&gt;The question is somehow related to the the issue &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1129&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;SOLR-1129&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I copied the loop of Jean, and started implementing the unit test and came across a problem.&lt;br/&gt;
The code below is copied from the existing unittest.&lt;/p&gt;

&lt;p&gt;Assume you have two fields annotated like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;TestDocumentObjectBinder .java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;supplier_*&quot;&lt;/span&gt;)
Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt; supplier;

@Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;supplier_*&quot;&lt;/span&gt;)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setAllSuppliers(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] allSuppliers){
     &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.allSuppliers = allSuppliers;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my opinion the second field should be ignored when the bean is converted to the SolrImportDocument (it is not ignored in the current implementation). Otherwise you get in trouble when you try to get the bean out and try to put it back in.&lt;br/&gt;
So I would ignore all fields that are annotated as a dynamic field, an are not of the type Map when converting a Bean to a SolrInputDocument. &lt;br/&gt;
When converting a SolrDocument to a Bean, it should be like it is now (not ignored, the field &quot;allSuppliers&quot; is injected with all Suppliers).&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

&lt;p&gt;Regards, Lars&lt;/p&gt;</comment>
                            <comment id="12784608" author="noble.paul" created="Wed, 2 Dec 2009 03:32:21 +0000"  >&lt;p&gt;The second one is not ignored. In fact this is not a robust OR mapping tool. if the user makes mistakes he is likely to get wrong data. This is intended to be a simple helper utility for users of POJOs. &lt;/p&gt;</comment>
                            <comment id="12784758" author="lgrote" created="Wed, 2 Dec 2009 10:42:10 +0000"  >&lt;p&gt;So here is the patch. Maybe you can have a look at the testcase and the comment there, line 140. Just to make sure that this is the desired behavior.&lt;br/&gt;
Regards, Lars&lt;/p&gt;</comment>
                            <comment id="12784784" author="noble.paul" created="Wed, 2 Dec 2009 11:59:10 +0000"  >&lt;p&gt;committed r886127&lt;br/&gt;
Thanks Lars&lt;/p&gt;</comment>
                            <comment id="12872681" author="hossman" created="Fri, 28 May 2010 00:02:09 +0100"  >
&lt;p&gt;Correcting Fix Version based on CHANGES.txt, see this thread for more details...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13013117" author="gsingers" created="Wed, 30 Mar 2011 16:45:34 +0100"  >&lt;p&gt;Bulk close for 3.1.0 release&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12426651" name="SOLR-1357.patch" size="5242" author="lgrote" created="Wed, 2 Dec 2009 10:42:10 +0000"/>
                            <attachment id="12426228" name="SOLR-1357.patch" size="3524" author="lgrote" created="Thu, 26 Nov 2009 16:16:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Aug 2009 13:20:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6294</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxxlqv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19842</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>