<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:34:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-317/TIKA-317.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-317] Service provider -based Tika configuration</title>
                <link>https://issues.apache.org/jira/browse/TIKA-317</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;I&apos;d like to simplify Tika configuration and make it easier to customize by pushing the information in tika-config.xml to Parser annotations and Java SPI service files.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12440083">TIKA-317</key>
            <summary>Service provider -based Tika configuration</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Sat, 7 Nov 2009 00:58:12 +0000</created>
                <updated>Thu, 18 Feb 2010 16:14:37 +0000</updated>
                            <resolved>Thu, 18 Feb 2010 16:14:37 +0000</resolved>
                                                    <fixVersion>0.7</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12774521" author="chrismattmann" created="Sat, 7 Nov 2009 01:04:19 +0000"  >&lt;p&gt;Hey Jukka: could you explain how this will be simpler? I, personally, like the tika-config.xml file. Details, please &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12774534" author="bmargulies" created="Sat, 7 Nov 2009 01:54:34 +0000"  >&lt;p&gt;I&apos;m with Jukka. I needed to replace one processor. Having to copy and modify the xml file, and then forever maintain my mutant version as new Tika releases change the rest of the contents that I don&apos;t want to change, is not a good prospect. &lt;/p&gt;</comment>
                            <comment id="12774542" author="jukkaz" created="Sat, 7 Nov 2009 03:39:12 +0000"  >&lt;p&gt;As Benson mentioned, a pretty typical deployment scenario is one where you want to extend Tika with a few custom Parser classes. Currently you&apos;d either need to maintain a custom version of the full configuration file, or do some CompositeParser magic to inject your custom parsers at runtime. Neither option is ideal.&lt;/p&gt;

&lt;p&gt;Another concern of mine is that the current configuration mechanism disconnects the list of supported media types from the parser implementation class. It would be better if that list was maintained in the same Java source file instead of in the XML configuration.&lt;/p&gt;

&lt;p&gt;Thinking further, there&apos;s some interest in making Tika easy to use in more dynamic environments like an OSGi container where new parser components may be added to or removed from the system at any time. A static configuration file does not work that well in such situations.&lt;/p&gt;

&lt;p&gt;So my idea is to move the list of media types supported by a Parser class to a class annotation (or perhaps a getSupportedTypes() method that would work better with composite parsers) and replace the tika-config.xml file with a META-INF/services/org.apache.tika.parser.Parser file that simply lists all the Parser implementations within that jar file.&lt;/p&gt;</comment>
                            <comment id="12774543" author="chrismattmann" created="Sat, 7 Nov 2009 03:46:31 +0000"  >&lt;p&gt;Thanks for the more detail Jukka, but I fail to see how co-locating metadata with code (as in the case of JDK annotations) is any better of a mechanism that separating out such configuration into an XML file, Also, what is the difference between having the information in the tika-config.xml file versus locating (some of) that information int a META-INF/services/o.a.tika.parser.Parser file? I guess I just need to understand more b/c I&apos;m missing something?&lt;/p&gt;
</comment>
                            <comment id="12774546" author="jukkaz" created="Sat, 7 Nov 2009 04:10:21 +0000"  >&lt;p&gt;Re: co-locating metadata with code; Doing so makes it easier to support multiple different configuration mechanisms (default Tika config, programmatic configuration, OSGi services, IoC containers, etc.) as you don&apos;t need to duplicate the media type lists for each different way of configuring things.&lt;/p&gt;

&lt;p&gt;Re: tika-config.xml vs. META-INF/services/...; The service provider mechanism &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; makes it easy to add custom parser implementations without having to maintain a separate copy of the full Tika configuration file. You could for example create a my-custom-parsers.jar file with a META-INF/services/o.a.tika.parser.Parser file that lists only your custom parser classes. When you add that jar to the classpath, Tika would then automatically pick up those parsers in addition to the standard parser classes from the tika-parsers jar.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/guide/jar/jar.html#Service&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/guide/jar/jar.html#Service&lt;/a&gt; Provider&lt;/p&gt;</comment>
                            <comment id="12774558" author="jukkaz" created="Sat, 7 Nov 2009 04:58:47 +0000"  >&lt;p&gt;Postponing to after 0.5&lt;/p&gt;</comment>
                            <comment id="12834768" author="jukkaz" created="Wed, 17 Feb 2010 14:08:38 +0000"  >&lt;p&gt;The attached patch introduces the following new Parser method:&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Returns the set of media types supported by this parser when used&lt;/li&gt;
	&lt;li&gt;with the given parse context.&lt;br/&gt;
     *&lt;/li&gt;
	&lt;li&gt;@since Apache Tika 0.7&lt;/li&gt;
	&lt;li&gt;@param context parse context&lt;/li&gt;
	&lt;li&gt;@return immutable set of media types&lt;br/&gt;
     */&lt;br/&gt;
    Set&amp;lt;MediaType&amp;gt; getSupportedTypes(ParseContext context);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;An explicit method is better than static annotations since it allows the parsers to better adapt to situations where optional functionality like certain parser libraries are not available. This approach also works for things like parser compositions and decorations.&lt;/p&gt;

&lt;p&gt;The patch modifies the configuration mechanism so that the getSupportedTypes() method is used whenever a &amp;lt;parser/&amp;gt; entry without embedded &amp;lt;mime/&amp;gt; elements is encountered. This should maintain reasonable backwards compatibility with existing config files until Tika 1.0.&lt;/p&gt;</comment>
                            <comment id="12835263" author="jukkaz" created="Thu, 18 Feb 2010 16:10:43 +0000"  >&lt;p&gt;Updated issue topic from &quot;Annotation-based ...&quot; to &quot;Service provider -based ...&quot;. This matches better the approach I&apos;ve implemented.&lt;/p&gt;</comment>
                            <comment id="12835266" author="jukkaz" created="Thu, 18 Feb 2010 16:14:37 +0000"  >&lt;p&gt;I committed the proposed patch (revision 911195) and followed up with a change that makes the default Tika configuration use the Java service provider mechanism to find all available Parser classes (revision 911225).&lt;/p&gt;

&lt;p&gt;With this change you&apos;ll no longer need to maintain a custom copy of tika-config.xml if you want to extend Tika with your own parser classes. Instead you can just list your parser classes in a META-INF/services/org.apache.tika.parser.Parser file inside the jar that contains your extensions.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12436102" name="TIKA-317.patch" size="60826" author="jukkaz" created="Wed, 17 Feb 2010 14:08:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 7 Nov 2009 01:04:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4543</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx4j3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17053</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>