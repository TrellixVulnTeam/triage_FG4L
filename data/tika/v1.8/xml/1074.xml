<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:36:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1074/TIKA-1074.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1074] Extraction should continue if an exception is hit visiting an embedded document</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1074</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Spinoff from &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1072&quot; title=&quot;AIOOBE when handling embedded document in .doc file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1072&quot;&gt;&lt;del&gt;TIKA-1072&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In that issue, a problematic document (still not sure if document is corrupt, or possible POI bug) caused an exception when visiting the embedded documents.&lt;/p&gt;

&lt;p&gt;If I change Tika to suppress that exception, the rest of the document extracts fine.&lt;/p&gt;

&lt;p&gt;So somehow I think we should be more robust here, and maybe log the exception, or save/record the exception(s) somewhere so after parsing the app could decide what to do about them ...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12630649">TIKA-1074</key>
            <summary>Extraction should continue if an exception is hit visiting an embedded document</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikemccand">Michael McCandless</assignee>
                                    <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Feb 2013 14:53:40 +0000</created>
                <updated>Sat, 23 Feb 2013 16:51:56 +0000</updated>
                            <resolved>Thu, 21 Feb 2013 21:38:54 +0000</resolved>
                                                    <fixVersion>1.4</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13571288" author="mikemccand" created="Tue, 5 Feb 2013 13:29:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1079&quot; title=&quot;Word document hits AIOOBE in SummaryExtractor.parseSummaries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1079&quot;&gt;&lt;del&gt;TIKA-1079&lt;/del&gt;&lt;/a&gt; is another example where if we recorded/logged an exc and moved on we could have parsed the rest of the document ...&lt;/p&gt;</comment>
                            <comment id="13575148" author="mikemccand" created="Sat, 9 Feb 2013 12:09:34 +0000"  >&lt;p&gt;Patch, just logging a warning and continuing, if we hit the exceptions in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1072&quot; title=&quot;AIOOBE when handling embedded document in .doc file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1072&quot;&gt;&lt;del&gt;TIKA-1072&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1078&quot; title=&quot;TikaCLI: invalid characters in embedded document name causes FNFE when trying to save&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1078&quot;&gt;&lt;del&gt;TIKA-1078&lt;/del&gt;&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1079&quot; title=&quot;Word document hits AIOOBE in SummaryExtractor.parseSummaries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1079&quot;&gt;&lt;del&gt;TIKA-1079&lt;/del&gt;&lt;/a&gt;.  I think it&apos;s ready.&lt;/p&gt;</comment>
                            <comment id="13582408" author="thetaphi" created="Wed, 20 Feb 2013 18:41:51 +0000"  >&lt;p&gt;Hi, catching Throwable is bad practice, it should better be Exception only. But don&#196;t forget to restore interrupt status when catching InterruptedException!&lt;/p&gt;</comment>
                            <comment id="13582481" author="mikemccand" created="Wed, 20 Feb 2013 19:56:48 +0000"  >&lt;p&gt;Thanks Uwe, I&apos;ll change to catching Exception not Throwable, and restoring the interrupt bit for InterruptedException.&lt;/p&gt;</comment>
                            <comment id="13582488" author="mikemccand" created="Wed, 20 Feb 2013 20:04:37 +0000"  >&lt;p&gt;Patch, catching Exception not Throwable, and restoring the interrupt bit if the exc was InterruptedException.&lt;/p&gt;</comment>
                            <comment id="13584034" author="jukkaz" created="Fri, 22 Feb 2013 07:06:52 +0000"  >&lt;p&gt;If we get an InterruptedException, then we shouldn&apos;t just log it and continue. I&apos;d wrap it to a TikaException and re-throw.&lt;/p&gt;

&lt;p&gt;Also instead of:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
  ...
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; SomeException) {
      ...
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;a better pattern might be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SomeException e) {
  ...
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13584176" author="mikemccand" created="Fri, 22 Feb 2013 10:47:11 +0000"  >&lt;p&gt;Thanks Jukka.&lt;/p&gt;

&lt;p&gt;InterruptedException is never thrown in these places today, so I can&apos;t add the separate catch clause (compiler is angry).&lt;/p&gt;

&lt;p&gt;So, the instanceof check for IE is in case in the future we do handle interrupts in these places ... we could just remove it and add it back in the future if we add IE (seems risky).&lt;/p&gt;

&lt;p&gt;Or I can change that code to throw TikaException instead on interrupt (and restore the interrupt bit), except in the TikaCLI case, EmbeddedDocumentExtractor.parseEmbedded doesn&apos;t throw TikaException today (the other two places already do).  But it&apos;s a little weird throw TikaExc in response to an interrupt (ie, code above will be trying to catch an IE) ... I think it&apos;s cleaner to set the interrupt bit and let the next place that waits see the interrupt bit and throw IE?&lt;/p&gt;</comment>
                            <comment id="13584194" author="rgauss" created="Fri, 22 Feb 2013 11:08:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;But it&apos;s a little weird throw TikaExc in response to an interrupt (ie, code above will be trying to catch an IE) ... I think it&apos;s cleaner to set the interrupt bit and let the next place that waits see the interrupt bit and throw IE?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s what I found in my investigation for &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-775&quot; title=&quot;Embed Capabilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-775&quot;&gt;&lt;del&gt;TIKA-775&lt;/del&gt;&lt;/a&gt; / &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1059&quot; title=&quot;Better Handling of InterruptedException in ExternalParser and ExternalEmbedder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1059&quot;&gt;TIKA-1059&lt;/a&gt; as well.&lt;/p&gt;</comment>
                            <comment id="13584229" author="jukkaz" created="Fri, 22 Feb 2013 12:44:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;InterruptedException is never thrown in these places today, so I can&apos;t add the separate catch clause (compiler is angry).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s a checked exception, so if it isn&apos;t declared to be thrown by POI, it shouldn&apos;t get thrown here (even though the VM doesn&apos;t strictly prohibit that). So in that case the extra check shouldn&apos;t even be needed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think it&apos;s cleaner to set the interrupt bit and let the next place that waits see the interrupt bit and throw IE?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t really like this approach. We&apos;re essentially saying: &quot;Yes, you asked me to stop what I&apos;m doing, but instead I&apos;ll just finish up what I was doing and ask the next guy to stop.&quot; Instead, when receiving an IE I&apos;d prefer Tika to stop immediately, either by letting the IE bubble up or (where necessary) by throwing a TikaException that wraps the IE.&lt;/p&gt;</comment>
                            <comment id="13584249" author="mikemccand" created="Fri, 22 Feb 2013 13:24:34 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;InterruptedException is never thrown in these places today, so I can&apos;t add the separate catch clause (compiler is angry).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s a checked exception, so if it isn&apos;t declared to be thrown by POI, it shouldn&apos;t get thrown here (even though the VM doesn&apos;t strictly prohibit that).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Exactly: I&apos;m trying to future proof.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So in that case the extra check shouldn&apos;t even be needed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wait, do you mean I should remove the handling entirely (not bother future proofing)?&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I think it&apos;s cleaner to set the interrupt bit and let the next place that waits see the interrupt bit and throw IE?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t really like this approach. We&apos;re essentially saying: &quot;Yes, you asked me to stop what I&apos;m doing, but instead I&apos;ll just finish up what I was doing and ask the next guy to stop.&quot; Instead, when receiving an IE I&apos;d prefer Tika to stop immediately, either by letting the IE bubble up or (where necessary) by throwing a TikaException that wraps the IE.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, maybe we can throw TikaException today (&lt;b&gt;and&lt;/b&gt; set the interrupt&lt;br/&gt;
bit), and then in the future (if/when these places really do throw&lt;br/&gt;
IE), we can change this to throwing a IE instead of TikaException.  I&lt;br/&gt;
can put that as a TODO.&lt;/p&gt;</comment>
                            <comment id="13584294" author="jukkaz" created="Fri, 22 Feb 2013 14:13:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;Wait, do you mean I should remove the handling entirely (not bother future proofing)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If POI decides to declare IE (or just generic Exception) as thrown by their API, it&apos;ll break binary compatibility, and thus in any case we&apos;ll need to adjust our code. So adding future proofing code here doesn&apos;t win us anything, it just complicates the codebase for no gain.&lt;/p&gt;</comment>
                            <comment id="13584362" author="mikemccand" created="Fri, 22 Feb 2013 15:44:17 +0000"  >&lt;p&gt;OK I&apos;ll remove the future proofing.&lt;/p&gt;</comment>
                            <comment id="13584754" author="lfcnassif" created="Fri, 22 Feb 2013 22:08:30 +0000"  >&lt;p&gt;I do not like this improvement. Currently I am setting ParseContext with a custom AutoDetectParser that, when an exception is hit, e.g. visiting an embedded, catches the exception, logs it AND extracts raw/binary strings from the problematic doc (or embedded). My app needs to extract text even from corrupt documents. With this &quot;improvement&quot; I will not know the problematic embedded when it is the best time to do something with it. I prefer to receive the exception when it is thrown and work around myself.&lt;/p&gt;</comment>
                            <comment id="13585082" author="mikemccand" created="Sat, 23 Feb 2013 10:34:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;My app needs to extract text even from corrupt documents.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s exactly the intent here as well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Currently I am setting ParseContext with a custom AutoDetectParser that, when an exception is hit, e.g. visiting an embedded, catches the exception, logs it AND extracts raw/binary strings from the problematic doc (or embedded)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wait, the exceptions that this change now catches &amp;amp; logs is in the&lt;br/&gt;
decoding an OLE10 embedded entry (into its byte[] data), not in&lt;br/&gt;
actually parsing of the resulting byte[] data.  If the exception is&lt;br/&gt;
hit later when we recurse into parseEmbedded, the exception is still&lt;br/&gt;
thrown as before, so your custom AutoDetectParser will still&lt;br/&gt;
see/handle the exception.&lt;/p&gt;

&lt;p&gt;But I think this is separately a good idea (an AutoDetectParser&lt;br/&gt;
logging &amp;amp; continuing by default): is this something you could possibly&lt;br/&gt;
contribute...?&lt;/p&gt;

&lt;p&gt;Do you have an example corrupted document?  We could test before/after&lt;br/&gt;
this change and see.&lt;/p&gt;</comment>
                            <comment id="13585165" author="lfcnassif" created="Sat, 23 Feb 2013 16:51:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Wait, the exceptions that this change now catches &amp;amp; logs is in the decoding an OLE10 embedded entry (into its byte[] data), not in actually parsing of the resulting byte[] data. If the exception is hit later when we recurse into parseEmbedded, the exception is still thrown as before, so your custom AutoDetectParser will still see/handle the exception.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hum you are right, I will still see exceptions from embedded docs. And this will improve parsing of the container.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But I think this is separately a good idea (an AutoDetectParser logging &amp;amp; continuing by default): is this something you could possibly contribute...?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would like to, but I do not think my code has good quality. I think the meaning of &quot;continuing&quot; is application specific. My app has a Raw/Binary StringParser that uses heuristics to extract mixed ISO-8859-1, UTF-8 and UTF-16 strings from unknown files. It is the fallBackParser and it is also called when some exception is thrown by a corrupted doc. I could upload both, but they need a lot of enhacements. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you have an example corrupted document? We could test before/after this change and see.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not of the kind you have, but now i see the parsing will be better after this change.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12570175" name="TIKA-1074.patch" size="3087" author="mikemccand" created="Wed, 20 Feb 2013 20:04:37 +0000"/>
                            <attachment id="12568704" name="TIKA-1074.patch" size="9794" author="mikemccand" created="Sat, 9 Feb 2013 12:09:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Feb 2013 18:41:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>311145</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzbjpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>311492</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>