<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:33:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-683/TIKA-683.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-683] RTF Parser issues with non european characters</title>
                <link>https://issues.apache.org/jira/browse/TIKA-683</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;As reported on user@ in &quot;non-West European languages support&quot;:&lt;br/&gt;
  &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/tika-user/201107.mbox/%3COF0C0A3275.DA7810E9-ONC22578CC.0051EEDE-C22578CC.0052548B@il.ibm.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/tika-user/201107.mbox/%3COF0C0A3275.DA7810E9-ONC22578CC.0051EEDE-C22578CC.0052548B@il.ibm.com%3E&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The RTF Parser seems to be doubling up some non-european characters&lt;/p&gt;</description>
                <environment></environment>
        <key id="12514223">TIKA-683</key>
            <summary>RTF Parser issues with non european characters</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikemccand">Michael McCandless</assignee>
                                    <reporter username="gagravarr">Nick Burch</reporter>
                        <labels>
                    </labels>
                <created>Fri, 15 Jul 2011 15:22:34 +0100</created>
                <updated>Thu, 20 Oct 2011 13:34:14 +0100</updated>
                            <resolved>Thu, 15 Sep 2011 17:43:04 +0100</resolved>
                                    <version>0.9</version>
                                    <fixVersion>0.10</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13066015" author="gagravarr" created="Fri, 15 Jul 2011 16:35:53 +0100"  >&lt;p&gt;Add test file. Based on Jp_euc-jp_rtf1.rtf from &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/tika-user/201106.mbox/%3COF03CF5CF6.40C9789F-ONC22578BC.0035A24F-C22578BC.0036C220@il.ibm.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/tika-user/201106.mbox/%3COF03CF5CF6.40C9789F-ONC22578BC.0035A24F-C22578BC.0036C220@il.ibm.com%3E&lt;/a&gt; but with images removed to keep the size sane&lt;/p&gt;</comment>
                            <comment id="13066026" author="gagravarr" created="Fri, 15 Jul 2011 16:48:56 +0100"  >&lt;p&gt;I couldn&apos;t use the test as-is, as it contains raw japanese characters in an unknown encoding (rather than \uxxxx escape sequences), and the sample file was too large&lt;/p&gt;

&lt;p&gt;I&apos;ve re-saved the sample file without the images, and tested with that. That does extract exactly as expected - no doubling up occurs. I&apos;ve added a unit test for this in r1147200.&lt;/p&gt;

&lt;p&gt;Are you able to get a small RTF file that does shows the problem, along with a suitable unit test similar to the testJapaneseText() method in RTFParser?&lt;/p&gt;</comment>
                            <comment id="13080485" author="cristian.vat" created="Sun, 7 Aug 2011 00:11:14 +0100"  >&lt;p&gt;Test file for \ucN control word character doubling&lt;/p&gt;</comment>
                            <comment id="13080488" author="cristian.vat" created="Sun, 7 Aug 2011 00:27:03 +0100"  >&lt;p&gt;I managed to take the original file and slim it down to (possibly) the smallest test case. See &quot;testUnicodeUCNControlWordCharacterDoubling.rtf, 566 bytes.&lt;/p&gt;

&lt;p&gt;Test file contains only one character ( \u5E74 ). Checked with latest Tika SVN and it is doubled.&lt;/p&gt;

&lt;p&gt;The character is defined both as a RTF Unicode escape ( \uXXXX ) and as two RTF charset/font-specific byte escapes ( \&apos;xx ).&lt;br/&gt;
The file is correct since it does specify a unicode skip but that is not taken into account.&lt;/p&gt;

&lt;p&gt;Checked only with RTFEditorKit and that parses fine.&lt;br/&gt;
This is most likely caused by the changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-422&quot; title=&quot;Wrong charset conversion in some RTF documents.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-422&quot;&gt;&lt;del&gt;TIKA-422&lt;/del&gt;&lt;/a&gt; which don&apos;t take into account \ucN control word and thus show both versions of the character.&lt;br/&gt;
I&apos;ll try to look over the code and see what can be done.&lt;/p&gt;

&lt;p&gt;Note on issue name: Current name isn&apos;t very accurate. The doubling could also occur with european characters, it all depends on how the rtf generator chooses to encode some characters. A better one would be: &quot;RTFParser doubling characters in some RTF files&quot;.&lt;/p&gt;</comment>
                            <comment id="13080570" author="cristian.vat" created="Sun, 7 Aug 2011 12:48:46 +0100"  >&lt;p&gt;Patch with reduced test file and new test for character doubling in RTFParserTest&lt;/p&gt;</comment>
                            <comment id="13085021" author="mikemccand" created="Mon, 15 Aug 2011 11:55:22 +0100"  >
&lt;p&gt;NOTE: I know very little about RTF!  So please forgive/correct any&lt;br/&gt;
confusions below:&lt;/p&gt;

&lt;p&gt;It looks like we need a stack to record the \ucN control chars we&apos;ve&lt;br/&gt;
encountered, at each depth, and we must then skip N ansi chars after&lt;br/&gt;
each \uXXXX we see?  (Similarly to how we track the charset with&lt;br/&gt;
charsetQueue now).&lt;/p&gt;

&lt;p&gt;Ie, on seeing \uXXXX (possibly followed by trailing space, which does&lt;br/&gt;
not count in the skip count), we parse and keep that XXXX unicode&lt;br/&gt;
character, re-emitting the \uXXXX in our output data, but then we&lt;br/&gt;
remove the following N ansi chars.&lt;/p&gt;

&lt;p&gt;Some other things I noticed in RTFParser.java; I&apos;m not sure if they&lt;br/&gt;
are really a problem in pratice:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I&apos;m worried about how we replace \cell with \u0020\cell &amp;#8211;&lt;br/&gt;
    depending on the last \ucN control word, this could mean we&lt;br/&gt;
    incorrectly skip some number of ansi chars?  Changing to&lt;br/&gt;
    
{\u20}
&lt;p&gt;\cell would be safer since on group end the pending skip&lt;br/&gt;
    chars are reset to 0.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;But then I also wonder if all the additional groups we are&lt;br/&gt;
    creating (because we surround each \uXXXX with { }) are somehow&lt;br/&gt;
    costly, eg if it causes RTFEditorKit to use more RAM / be slower /&lt;br/&gt;
    something.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When we look for the \ansicpgNNNN control word, I noticed we then&lt;br/&gt;
    look up the NNNN in the FONTSET_MAP &amp;#8211; is that wrong?  EG when I&lt;br/&gt;
    look at the possible values for NNNN (at&lt;br/&gt;
    &lt;a href=&quot;http://latex2rtf.sourceforge.net/rtfspec_6.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://latex2rtf.sourceforge.net/rtfspec_6.html&lt;/a&gt;) I see a bunch of&lt;br/&gt;
    numbers that aren&apos;t in the FONTSET_MAP.  We also use FONTSET_MAP&lt;br/&gt;
    for \fcharsetNNN but the values for that control word look&lt;br/&gt;
    correct.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;We don&apos;t seem to handle the opening charset in the RTF header (ie,&lt;br/&gt;
    \ansi, \mac, \pc, \pca)?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13086265" author="mikemccand" created="Wed, 17 Aug 2011 13:29:27 +0100"  >&lt;p&gt;I was curious/nervous whether the RTFParser (and RTF format itself) properly handled non-BMP unicode characters, so with Robert Muir&apos;s help I created a basic test case (attached) and indeed at least for these Gothic characters in particular non-BMP is handled fine: the test passes.&lt;/p&gt;

&lt;p&gt;It turns out (apparently) each \uXXX is a UTF16 code unit, not a unicode code point.&lt;/p&gt;</comment>
                            <comment id="13086380" author="chrismattmann" created="Wed, 17 Aug 2011 16:21:32 +0100"  >&lt;p&gt;Guys, I see there is a patch from Cristian (looks like the code update) and one from Mike (the test case). Are we seeing that this resolves the issue? If so, I can commit it, with the test case update from Mike (+Robert), and the sample files, but wanted to check first. I have some free cycles, but by no means am a UTF expert, nor a non-european character expert. I&apos;m just willing to help get these committed, and then let you experts tell me whether it works or not &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13086384" author="mikemccand" created="Wed, 17 Aug 2011 16:27:55 +0100"  >&lt;p&gt;Thanks Chris!&lt;/p&gt;

&lt;p&gt;Actually both Christian&apos;s patch and mine are test cases.&lt;/p&gt;

&lt;p&gt;Christian&apos;s test case fails (showing this issue); we don&apos;t yet have a patch to fix this issue (but we know what&apos;s wrong &amp;#8211; we have to handle the \ucN control codes).&lt;/p&gt;

&lt;p&gt;My test case (&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-683&quot; title=&quot;RTF Parser issues with non european characters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-683&quot;&gt;&lt;del&gt;TIKA-683&lt;/del&gt;&lt;/a&gt;-unicode-testcase.patch) passes and can be committed right away &amp;#8211; it&apos;s testing another aspect of RTF+Unicode which (happily) seems to be working correctly.&lt;/p&gt;

&lt;p&gt;I also attached a new test case, passing, on &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-422&quot; title=&quot;Wrong charset conversion in some RTF documents.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-422&quot;&gt;&lt;del&gt;TIKA-422&lt;/del&gt;&lt;/a&gt;, so if you could commit that one also that&apos;d be great!&lt;/p&gt;</comment>
                            <comment id="13086410" author="chrismattmann" created="Wed, 17 Aug 2011 16:53:39 +0100"  >&lt;p&gt;Thanks Mike, I went ahead and committed your patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-422&quot; title=&quot;Wrong charset conversion in some RTF documents.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-422&quot;&gt;&lt;del&gt;TIKA-422&lt;/del&gt;&lt;/a&gt; (r1158779) and your unit test patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-683&quot; title=&quot;RTF Parser issues with non european characters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-683&quot;&gt;&lt;del&gt;TIKA-683&lt;/del&gt;&lt;/a&gt; in r1158785.&lt;/p&gt;</comment>
                            <comment id="13086418" author="mikemccand" created="Wed, 17 Aug 2011 17:00:18 +0100"  >&lt;p&gt;Super, thanks Chris!&lt;/p&gt;</comment>
                            <comment id="13087367" author="cristian.vat" created="Thu, 18 Aug 2011 23:54:09 +0100"  >&lt;p&gt;Thanks Mike for looking into the issues. I also know very little about RTF &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Yes, the skipping is basically skip N ansi chars.&lt;br/&gt;
Actually the JDK RTFEditorKit/Reader already does this and does it well as far as I could see.&lt;/p&gt;

&lt;p&gt;There are also other flaws with the current filtering we do. For example binary data sequences skipping is not handled correctly...&lt;/p&gt;

&lt;p&gt;I went through all the classes in/used-by RTFEditorKit and it appears that it handles most things correctly except the &quot;\&apos;xx&quot; escape where it uses a default translation table not taking into account the current font charset.&lt;br/&gt;
Right now I&apos;m trying to figure out if I can add that behavior by subclassing RTFEditorKit/RTFReader. That I think would be the best solution to this issue and other related ones. It would also avoid temporary files and improve performance maybe.&lt;/p&gt;

&lt;p&gt;Just in case it can&apos;t be done with subclassing, anybody know what the licensing restrictions on the JDK classes is? (mainly RTFEditorKit, RTFReader ). It may be do-able with modifying them a little...&lt;/p&gt;</comment>
                            <comment id="13087610" author="jukkaz" created="Fri, 19 Aug 2011 09:37:39 +0100"  >&lt;p&gt;&amp;gt; Just in case it can&apos;t be done with subclassing, anybody know what the licensing&lt;br/&gt;
&amp;gt; restrictions on the JDK classes is? (mainly RTFEditorKit, RTFReader ).&lt;/p&gt;

&lt;p&gt;They should be available under GPLv2 from the OpenJDK project.&lt;/p&gt;

&lt;p&gt;And it actually looks like Apache Harmony added an initial ALv2-licensed RTF parser&lt;br/&gt;
in &lt;a href=&quot;https://issues.apache.org/jira/browse/HARMONY-5903&quot; title=&quot;[classlib][rtf] RTF parser initial implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HARMONY-5903&quot;&gt;&lt;del&gt;HARMONY-5903&lt;/del&gt;&lt;/a&gt;. I haven&apos;t tried that code yet.&lt;/p&gt;</comment>
                            <comment id="13087694" author="mikemccand" created="Fri, 19 Aug 2011 14:07:55 +0100"  >&lt;blockquote&gt;&lt;p&gt;Right now I&apos;m trying to figure out if I can add that behavior by subclassing RTFEditorKit/RTFReader. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ooh that sounds interesting!  Does it have enough hooks so a subclass&lt;br/&gt;
can &quot;tag along&quot; to know what font is in-use and then intercept the&lt;br/&gt;
\&apos;XX hex escapes?&lt;/p&gt;

&lt;p&gt;Poaching either Harmony&apos;s parser or maybe OpenOffice&apos;s (C, but we&lt;br/&gt;
could port the parts we poach to Java) seems like a good way to go?&lt;/p&gt;

&lt;p&gt;Either that or we make our own simple tokenizer?  The RTF spec looks&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;relatively&amp;#93;&lt;/span&gt; simple enough, and Tika only needs to get the text out&lt;br/&gt;
(at least for today?), so we need not do heavy parsing of all&lt;br/&gt;
formatting / document structure.  A simple tokenizer that just decoded&lt;br/&gt;
the control words we care about (charset, font default, charset,&lt;br/&gt;
table) should work well and be robust to parser bugs / small errors in&lt;br/&gt;
the doc.&lt;/p&gt;

&lt;p&gt;I&apos;m also worried about the test coverage of the our RTF&lt;br/&gt;
parsing... would be nice to find (or somehow randomly generate) some&lt;br/&gt;
biggish collection of RTF + &quot;expected text&quot; test cases.  Maybe we can&lt;br/&gt;
poach tests from OpenOffice....&lt;/p&gt;

&lt;p&gt;I noticed some tests allow for / expect extra whitespace to be&lt;br/&gt;
inserted in the returned text, but that makes me nervous... I think&lt;br/&gt;
(ideally) Tika shouldn&apos;t insert extra whitespace if we can help it.&lt;br/&gt;
Though, some cases likely need it, eg text from adjacent table cells.&lt;/p&gt;</comment>
                            <comment id="13089071" author="mikemccand" created="Mon, 22 Aug 2011 23:12:35 +0100"  >&lt;p&gt;New patch attached, including the last (pretty-print) patch, plus I noticed that the OOXML Word parser also split up adjacent bold character runs so I fixed that and added 2 docx files for testing.&lt;/p&gt;</comment>
                            <comment id="13089072" author="mikemccand" created="Mon, 22 Aug 2011 23:13:56 +0100"  >&lt;p&gt;Sorry, wrong issue &amp;#8211; that last patch was meant for &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-692&quot; title=&quot;TikaCLI -x or -h on a Word doc sometimes adds newline after &amp;lt;/b&amp;gt; tag&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-692&quot;&gt;&lt;del&gt;TIKA-692&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13092320" author="mikemccand" created="Sat, 27 Aug 2011 17:19:53 +0100"  >&lt;p&gt;I&apos;m now testing the approach of just making our own simple RTF tokenizer, that handles those control words relevant to the text that we need... I&apos;ll post a patch once I have something sort of working.&lt;/p&gt;</comment>
                            <comment id="13095542" author="mikemccand" created="Thu, 1 Sep 2011 20:10:52 +0100"  >&lt;p&gt;Attached patch, with a first cut at using a simple (shallow) tokenizer&lt;br/&gt;
to interpret the specific RTF control words that determine what text&lt;br/&gt;
is rendered.  I built this using the 1.9.1 RTF specification:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;amp;id=10725&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;amp;id=10725&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s still rough (many nocommits) but I think it&apos;s close.  All tests&lt;br/&gt;
pass, including a few new RTF test cases I&apos;ve added.&lt;/p&gt;

&lt;p&gt;I just created a custom tokenizer (the allowed RTF tokens are very&lt;br/&gt;
simple) and shallow parser.  I think later we can/should cutover to a&lt;br/&gt;
&quot;real&quot; tokenizer/parser (eg JFlex)...&lt;/p&gt;

&lt;p&gt;The new parser does a better job at extracting some doc structure; the&lt;br/&gt;
current parser just makes a single paragraph, but the new one makes a&lt;br/&gt;
paragraph whenever the doc said there was one.  But it doesn&apos;t give&lt;br/&gt;
structure for tables, lists (it does extract their text).&lt;/p&gt;

&lt;p&gt;It finds text that the old parser missed, eg footnotes, hyperlink,&lt;br/&gt;
header/footer, text inside a picture, and &lt;span class=&quot;error&quot;&gt;&amp;#91;generally&amp;#93;&lt;/span&gt; does not add&lt;br/&gt;
extra whitespace (the old one sometimes breaks a word by inserting a&lt;br/&gt;
space).  Finally the new parser fixes the unicode character doubling&lt;br/&gt;
(this issue)...&lt;/p&gt;

&lt;p&gt;One thing I still have to fix is that it can output mis-matched tags&lt;br/&gt;
for i/b styles (spookily nothing failed; maybe we should add simple&lt;br/&gt;
validation (under asserts) eg to XHTMLContentHandler?).&lt;/p&gt;</comment>
                            <comment id="13095644" author="thetaphi" created="Thu, 1 Sep 2011 23:21:37 +0100"  >&lt;p&gt;XML SAX Handling does not validate the element names, like opening and closing elements are the same. And the serializer in most cases only outputs the elements it get reported, some of those serializers will go crazy &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The reason for this is, because SAX is in general seldom used to generate xml documents, its more XML parsers that report elements they found in an XML document. And those parsers do the validating before, so theoretically, your parser must do this. For speed reasons there are no checks in serializers. You can enforce checks by piping the whole stuff through javax.xml.validator API, but this would also check a schema, which does not really exists for XHTML.&lt;/p&gt;</comment>
                            <comment id="13095904" author="jukkaz" created="Fri, 2 Sep 2011 11:57:20 +0100"  >&lt;p&gt;+1, I&apos;m eager to see us drop the javax.swing dependency with something we can directly fix and improve.&lt;/p&gt;

&lt;p&gt;The org.apache.tika.sax.SaveContentHandler class already does some sanitization of SAX events, so that might be a good place to also check that tags are correctly nested. Though as Uwe said, ideally the generator of the SAX events would already take care of producing valid output.&lt;/p&gt;

&lt;p&gt;PS. I&apos;d rather use a separate .java file for the ExtractRTFText class than have it as a static inner class inside RTFParser. We can keep it package-private if we don&apos;t want to expose it directly to downstream clients.&lt;/p&gt;</comment>
                            <comment id="13095978" author="mikemccand" created="Fri, 2 Sep 2011 14:39:06 +0100"  >&lt;p&gt;Thanks Jukka!  That&apos;s a good idea to move the ExtractRTFText class out; I&apos;ll do that.&lt;/p&gt;

&lt;p&gt;I&apos;ll mull how to assert the sax start/end elements are valid...&lt;/p&gt;</comment>
                            <comment id="13102838" author="mikemccand" created="Mon, 12 Sep 2011 18:40:35 +0100"  >&lt;p&gt;New patch; I think it&apos;s ready!  Changes from last patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Factored out separate source files for the TextExtract, GroupState&lt;br/&gt;
    classes&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added a few more RTF test cases&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added optional loading of ICU4J&apos;s Charset impl, if available; I&lt;br/&gt;
    did this in CharsetUtils.forName&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed dup test cases from TestParsers (they were already&lt;br/&gt;
    previously copied to RTFParserTest)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Cleaned up confusing interleaved bytes/chars buffering in the&lt;br/&gt;
    parser&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added balanced tag asserts to SafeContentHandler; this helped me&lt;br/&gt;
    fix the RTFParser, however, other parsers seem to trip the assert&lt;br/&gt;
    (do not produce balanced start/end elements).  I didn&apos;t dig into&lt;br/&gt;
    this, and commented out the asserts; I&apos;ll open a separate issue to&lt;br/&gt;
    pursue that.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13105362" author="chrismattmann" created="Thu, 15 Sep 2011 14:42:15 +0100"  >&lt;p&gt;Hey Mike, +1 to commit, go for it!&lt;/p&gt;</comment>
                            <comment id="13105413" author="mikemccand" created="Thu, 15 Sep 2011 16:06:57 +0100"  >&lt;p&gt;Thanks Chris, I&apos;ll commit today!&lt;/p&gt;</comment>
                            <comment id="13105482" author="mikemccand" created="Thu, 15 Sep 2011 17:43:04 +0100"  >&lt;p&gt;I&apos;ll open a follow-on issue for the mis-matched XHTML events from some parsers....&lt;/p&gt;</comment>
                            <comment id="13105499" author="mikemccand" created="Thu, 15 Sep 2011 18:02:00 +0100"  >&lt;p&gt;I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-715&quot; title=&quot;Some parsers produce non-well-formed XHTML SAX events&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-715&quot;&gt;TIKA-715&lt;/a&gt; for the mis-matched XHTML events.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12490640" name="TIKA-683-unicode-testcase.patch" size="1611" author="mikemccand" created="Wed, 17 Aug 2011 13:29:27 +0100"/>
                            <attachment id="12494077" name="TIKA-683.patch" size="220573" author="mikemccand" created="Mon, 12 Sep 2011 18:40:35 +0100"/>
                            <attachment id="12492653" name="TIKA-683.patch" size="129364" author="mikemccand" created="Thu, 1 Sep 2011 20:10:52 +0100"/>
                            <attachment id="12491275" name="TIKA-683.patch" size="16857" author="mikemccand" created="Mon, 22 Aug 2011 23:12:35 +0100"/>
                            <attachment id="12489624" name="TIKA-683.patch" size="1928" author="cristian.vat" created="Sun, 7 Aug 2011 12:48:46 +0100"/>
                            <attachment id="12486630" name="testRTFJapanese.rtf" size="24956" author="gagravarr" created="Fri, 15 Jul 2011 16:35:53 +0100"/>
                            <attachment id="12489601" name="testUnicodeUCNControlWordCharacterDoubling.rtf" size="566" author="cristian.vat" created="Sun, 7 Aug 2011 00:11:14 +0100"/>
                            <attachment id="12491276" name="testWORD_bold_character_runs.docx" size="10407" author="mikemccand" created="Mon, 22 Aug 2011 23:12:35 +0100"/>
                            <attachment id="12491277" name="testWORD_bold_character_runs2.docx" size="10406" author="mikemccand" created="Mon, 22 Aug 2011 23:12:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 6 Aug 2011 23:11:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3859</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx2a7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>