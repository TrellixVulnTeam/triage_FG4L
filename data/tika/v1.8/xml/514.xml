<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:31:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-514/TIKA-514.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-514] Provide constructor for AutoDetectParser that has explicit list of supported parsers</title>
                <link>https://issues.apache.org/jira/browse/TIKA-514</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;To reduce the size of the Tika dependency chain, it&apos;s useful to exclude the supporting jars for types that don&apos;t need to process (e.g. Microsoft docs, PDFs, etc). This can easily remove 20MB of 3rd party jars.&lt;/p&gt;

&lt;p&gt;With 0.8-SNAPSHOT, the TikaConfig(Classpath) constructor now finds and instantiates all Parser-based classes found on the classpath. Which can trigger errors when 3rd party jars are missing.&lt;/p&gt;

&lt;p&gt;One solution, as proposed by Jukka, is to provide an alternative constructor for AutoDetectParser which includes the list of supported parsers, and avoids creating the default TikaConfig.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12474092">TIKA-514</key>
            <summary>Provide constructor for AutoDetectParser that has explicit list of supported parsers</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kkrugler">Ken Krugler</assignee>
                                    <reporter username="kkrugler">Ken Krugler</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Sep 2010 17:42:00 +0100</created>
                <updated>Tue, 14 Sep 2010 17:59:03 +0100</updated>
                            <resolved>Tue, 14 Sep 2010 17:59:03 +0100</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.8</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12909317" author="kkrugler" created="Tue, 14 Sep 2010 17:43:13 +0100"  >&lt;p&gt;As Jukka noted, the CompositeParser class could be cleaned up, now that parsers self-describe their supported types.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;BTW, the need to pass a MediaType-&amp;gt;Parser map to&lt;br/&gt;
CompositeParser.setParsers() is a remnant of the time when we didn&apos;t&lt;br/&gt;
have the Parser.getSupportedTypes() method. Nowadays it would probably&lt;br/&gt;
be better to simply pass a collection of parsers and use&lt;br/&gt;
getSupportedTypes() calls for dispatch during CompositeParser.parse().&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="12909322" author="kkrugler" created="Tue, 14 Sep 2010 17:45:25 +0100"  >&lt;p&gt;Another suggestion was to catch exceptions thrown in the TikaConfig constructor, while instantiating parsers.&lt;/p&gt;

&lt;p&gt;But in the past this hadn&apos;t generated much excitement from people developing custom parsers, as it would mask errors until later.&lt;/p&gt;

&lt;p&gt;Nick suggested an alternative:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My thinking on exceptions during creating the parser are:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ClassNotFound for parser class - throw the exception, as the user has&lt;br/&gt;
 specified a parser that isn&apos;t there&lt;/li&gt;
	&lt;li&gt;Any other ClassNotFound - warning, as this means that a dependency is&lt;br/&gt;
 missing, but that may be what the user wanted&lt;/li&gt;
	&lt;li&gt;Any other problem - throw the exception, as there is a fault with the&lt;br/&gt;
 parser, and there&apos;s a fair chance that this is a customer parser&lt;br/&gt;
 that has broken. (The standard tika parsers shouldn&apos;t do this!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&apos;d added one comment:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you use this approach, then you&apos;d also want to do this special handling for the NoSuchMethodError, as that was getting thrown by Tika 0.7-SNAPSHOT when POI support was excluded.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="12909324" author="kkrugler" created="Tue, 14 Sep 2010 17:47:40 +0100"  >&lt;p&gt;Just to capture all of the permutations, I&apos;d proposed another solution, which was to add a new TikaConfig() constructor that took a list of target Parser classes (plus the classloader), thus avoiding the instantiation of unsupported parsers that happened to be found on the classpath.&lt;/p&gt;

&lt;p&gt;This would also require a new TikaConfig.setDefaultConfig() static method, and the TikaConfig class would need to be immutable (for safety).&lt;/p&gt;</comment>
                            <comment id="12909329" author="kkrugler" created="Tue, 14 Sep 2010 17:59:03 +0100"  >&lt;p&gt;Committed: &lt;a href=&quot;http://svn.apache.org/viewvc/?rev=996984&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/?rev=996984&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12454553" name="TIKA-514.patch" size="6858" author="kkrugler" created="Tue, 14 Sep 2010 17:56:23 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4347</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx3bj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16857</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>