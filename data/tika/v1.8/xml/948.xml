<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:30:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-948/TIKA-948.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-948] Embedded PDF extracted incorrectly as MS Works file from Word 97-2003 doc</title>
                <link>https://issues.apache.org/jira/browse/TIKA-948</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;This is just like &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-704&quot; title=&quot;PDF and Outlook docs embedded in MS Word documents not parsed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-704&quot;&gt;&lt;del&gt;TIKA-704&lt;/del&gt;&lt;/a&gt;, except that issue was for an OOXML Word&lt;br/&gt;
doc but this is for the older Word 97-2003 format.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12597369">TIKA-948</key>
            <summary>Embedded PDF extracted incorrectly as MS Works file from Word 97-2003 doc</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikemccand">Michael McCandless</assignee>
                                    <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Jul 2012 00:31:58 +0100</created>
                <updated>Thu, 9 Aug 2012 18:42:15 +0100</updated>
                            <resolved>Thu, 9 Aug 2012 18:42:15 +0100</resolved>
                                                    <fixVersion>1.2</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13406172" author="mikemccand" created="Wed, 4 Jul 2012 00:38:40 +0100"  >&lt;p&gt;Here&apos;s a trivial test document + test case showing the issue; if you run TikaCLI&lt;br/&gt;
-z on this you&apos;ll get an embedded file extracted as _1402837031.wps,&lt;br/&gt;
but that really should be a PDF.&lt;/p&gt;

&lt;p&gt;I traced this down a bit, into AbstractPOIFSExtractor, where it calls&lt;br/&gt;
POIFSDocumentType.detectType(dir) and that (incorrectly) returns WPS.&lt;/p&gt;

&lt;p&gt;I think the logic in POIFSContainerDetector.detect (which guesses the&lt;br/&gt;
embedded file&apos;s type by looking at the directory listing of the&lt;br/&gt;
document node) is too simplistic?  We may need to peek into the&lt;br/&gt;
\0001CompObj contents to get the true document type (I can see, using&lt;br/&gt;
POI&apos;s POIFSViewer that this seems to identify the MediaType of the&lt;br/&gt;
file, and processStarDrawOrImpress already does so...).&lt;/p&gt;

&lt;p&gt;But I don&apos;t know the format of the bytes in \0001CompObj.&lt;/p&gt;

&lt;p&gt;Or maybe alternatively ... we can pull the CONTENTS bytes and&lt;br/&gt;
auto-detect on that.  Basically we somehow need to determine if it&apos;s&lt;br/&gt;
another office format (and do what we now do) else pull the CONTENTS&lt;br/&gt;
bytes and recurse on only that.&lt;/p&gt;</comment>
                            <comment id="13407243" author="mikemccand" created="Thu, 5 Jul 2012 17:23:03 +0100"  >&lt;p&gt;Patch... I think it&apos;s ready.&lt;/p&gt;

&lt;p&gt;I fixed POIFSContainerDetector to also look for PDF, by loading the&lt;br/&gt;
CompObj bytes if present (I refactored the Star Impress/Draw code that&lt;br/&gt;
was already doing so), and fixed AbstractPOIFSExtractor to handle&lt;br/&gt;
non-office embedded documents (well, only PDF for now).&lt;/p&gt;

&lt;p&gt;It would good to fix all other non-office document types&lt;br/&gt;
that may be embedded ... but I think we can do that in future issue(s).&lt;/p&gt;</comment>
                            <comment id="13408142" author="gagravarr" created="Fri, 6 Jul 2012 17:43:21 +0100"  >&lt;p&gt;Should we not just pass the bytes to a Detector if we have a CompObj but nothing else looks promising?&lt;/p&gt;</comment>
                            <comment id="13408180" author="alexott" created="Fri, 6 Jul 2012 18:48:32 +0100"  >&lt;p&gt;Maybe you also reuse information from prop stream nearby of CompObj?&lt;/p&gt;

&lt;p&gt;P.S. Format of CompObj is described in MS&apos;s documentation, as I remember, there are 2 flavors of them, with different offsets of actual data&lt;/p&gt;</comment>
                            <comment id="13408300" author="gagravarr" created="Fri, 6 Jul 2012 21:42:09 +0100"  >&lt;p&gt;I&apos;ve had a go at fixing this in r1358404, using a slightly different method. Michael&apos;s suggested fix didn&apos;t seem to scale well to additional formats, and would&apos;ve been a bit confusing for the extractors.&lt;/p&gt;

&lt;p&gt;Instead, I&apos;ve updated POIFSContainerDetector to report that a CompObj that isn&apos;t a known &quot;native CompObj&quot; has been found (older Works file, some older Star files etc are all natively stored). This is reported in a similar way to the OLE10Native stuff, which was slightly tweaked. I&apos;ve then updated the AbstarctPOIFSExtractor to then pull the data out of the CompObj structure. Tika-App -z is then able to correctly extract the pdf out.&lt;/p&gt;

&lt;p&gt;One remaining issue is with file extensions, a little bit more work is needed to do that cleanly I think&lt;/p&gt;</comment>
                            <comment id="13408436" author="gagravarr" created="Sat, 7 Jul 2012 00:13:56 +0100"  >&lt;p&gt;I think r1358467 should fix the file extension problem in a general way for all (known) file formats. The only thing is we don&apos;t currently make use of things like &quot;Adobe Acrobat&quot; in the CompObj to short-cut the detection, it&apos;s done in a general way for all formats known or unknown. Not sure if we need to fix this or not though&lt;/p&gt;</comment>
                            <comment id="13409002" author="mikemccand" created="Sun, 8 Jul 2012 19:08:38 +0100"  >&lt;p&gt;Thanks for taking this Nick!  Can you add a CHANGES entry for it?&lt;/p&gt;

&lt;p&gt;It seems odd not using the explicitly declared file type inside the CompObj and running detection on the byte[] CONTENTS instead, but it is definitely better than my original patch since it can handle all formats we can detect (not just PDF), so +1.  We can separately (later) decode CompObj if that ever seems necessary...&lt;/p&gt;

&lt;p&gt;Also: do we have any test data for that Quill96 (that I almost broke!)?  Would be nice to have test coverage for it...&lt;/p&gt;</comment>
                            <comment id="13409024" author="gagravarr" created="Sun, 8 Jul 2012 19:57:53 +0100"  >&lt;p&gt;If someone feels keen, we could add CompObj decoding. When that&apos;s there, we could try to extract helpful data (such as file type) out. However, it doesn&apos;t look like it stores the file type as such, just the application the data should be passed to, which might well not be specific enough&lt;/p&gt;

&lt;p&gt;The Quill96 thing comes from an old works file, from an old bug report somewhere. IIRC we didn&apos;t get a sample file to go with it, but it might be good for someone to work out which mailing list discussion / old issue it&apos;s associated with to check...&lt;/p&gt;</comment>
                            <comment id="13409094" author="mikemccand" created="Sun, 8 Jul 2012 23:48:47 +0100"  >&lt;blockquote&gt;&lt;p&gt;However, it doesn&apos;t look like it stores the file type as such, just the application the data should be passed to, which might well not be specific enough&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, that&apos;s a good point...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The Quill96 thing comes from an old works file, from an old bug report somewhere. IIRC we didn&apos;t get a sample file to go with it, but it might be good for someone to work out which mailing list discussion / old issue it&apos;s associated with to check...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh in fact it looks like we do have test coverage for this (TestContainerAwareDetector.testDetectOLE2), so all is good.&lt;/p&gt;</comment>
                            <comment id="13432017" author="mikemccand" created="Thu, 9 Aug 2012 18:42:15 +0100"  >&lt;p&gt;I think Nick&apos;s commits fixed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12535011" name="EmbeddedPDF.doc" size="1491456" author="mikemccand" created="Wed, 4 Jul 2012 00:38:39 +0100"/>
                            <attachment id="12535216" name="TIKA-948.patch" size="14736" author="mikemccand" created="Thu, 5 Jul 2012 17:23:03 +0100"/>
                            <attachment id="12535012" name="TIKA-948.patch" size="1980" author="mikemccand" created="Wed, 4 Jul 2012 00:38:39 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Jul 2012 16:43:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>243062</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx0nb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16424</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>