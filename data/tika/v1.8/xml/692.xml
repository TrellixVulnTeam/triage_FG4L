<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:33:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-692/TIKA-692.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-692] TikaCLI -x or -h on a Word doc sometimes adds newline after &lt;/b&gt; tag</title>
                <link>https://issues.apache.org/jira/browse/TIKA-692</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>
&lt;p&gt;[Note: spinoff from the tika-dev thread &quot;Issue in text extraction in&lt;br/&gt;
Solr / Tika&quot; on Aug 19 2011, by nirnaydewan]&lt;/p&gt;

&lt;p&gt;When parsing a Word doc where some contiguous text is bolded, due to&lt;br/&gt;
differences in how the user had bolded different parts of the text&lt;br/&gt;
with Word, TikaCLI -x or -h will sometimes generate output like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&amp;lt;p&amp;gt;F&amp;lt;b&amp;gt;oob&amp;lt;/b&amp;gt;a&amp;lt;b&amp;gt;r&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and other times like this (extra newline &amp;amp; 2 adjacent bold sections):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&amp;lt;p&amp;gt;F&amp;lt;b&amp;gt;oo&amp;lt;/b&amp;gt;
&amp;lt;b&amp;gt;b&amp;lt;/b&amp;gt;a&amp;lt;b&amp;gt;r&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The extra newline in the second example causes browsers (I tried&lt;br/&gt;
Firefox, Safari, Chrome), JTidy and Tika itself to (incorrectly)&lt;br/&gt;
insert a space when rending/extracting text, breaking up the word.&lt;/p&gt;

&lt;p&gt;While this might be technically correct/OK (ie, XML white space rules&lt;br/&gt;
might allow for non-significant space after the &amp;lt;/b&amp;gt; within a &amp;lt;p&amp;gt;&lt;br/&gt;
should be ignored), I think we should still fix Tika to not insert&lt;br/&gt;
newlines, if we can.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12519503">TIKA-692</key>
            <summary>TikaCLI -x or -h on a Word doc sometimes adds newline after &lt;/b&gt; tag</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 20 Aug 2011 16:37:33 +0100</created>
                <updated>Thu, 20 Oct 2011 13:34:13 +0100</updated>
                            <resolved>Sat, 17 Sep 2011 10:23:19 +0100</resolved>
                                                    <fixVersion>0.10</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13088204" author="mikemccand" created="Sat, 20 Aug 2011 16:51:17 +0100"  >&lt;p&gt;Attached patch &amp;amp; 2 (binary) Word docs, adding 2 tests cases showing&lt;br/&gt;
the problem (plus some small refactoring in WordParserTest).&lt;/p&gt;</comment>
                            <comment id="13088210" author="mikemccand" created="Sat, 20 Aug 2011 17:14:33 +0100"  >&lt;p&gt;OK, I found the source of the issue: the XML/XHTML transform handler&lt;br/&gt;
(pulled from SAXTransformerFactory) is inserting this newline, but&lt;br/&gt;
(apparently) it only does so if you close a tag and immediately&lt;br/&gt;
re-open the same tag.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure why it does that... but I was able to work around it, in&lt;br/&gt;
WordExtractor, by only closing the b (or s or i) tag if the next&lt;br/&gt;
character run didn&apos;t also have that tag (or, if closing was required&lt;br/&gt;
due to nesting).&lt;/p&gt;

&lt;p&gt;Ie, it basically coalesces two adjacent character runs&lt;br/&gt;
&amp;lt;b&amp;gt;text1&amp;lt;/b&amp;gt;&amp;lt;b&amp;gt;text2&amp;lt;/b&amp;gt; into a single &amp;lt;b&amp;gt;text1text2&amp;lt;/b&amp;gt;.&lt;/p&gt;

&lt;p&gt;With this change the new tests (and all tests) pass, and I no longer see an extra space inserted&lt;br/&gt;
when viewing the X/HTML output in browsers.&lt;/p&gt;</comment>
                            <comment id="13088213" author="thetaphi" created="Sat, 20 Aug 2011 17:24:29 +0100"  >&lt;p&gt;If this SAXTransformerFactory should disable the INDENT property (using setProperty), then this should be fine. I assume TikaCLI does enable this for some reason.&lt;/p&gt;</comment>
                            <comment id="13088215" author="jukkaz" created="Sat, 20 Aug 2011 17:28:12 +0100"  >&lt;p&gt;The extra whitespace is indeed coming from Tika CLI trying to indent the output it produces. The attached patch disables output indentation. I think that&apos;s a better solution than trying to work around the issue in the Word or other parser classes.&lt;/p&gt;</comment>
                            <comment id="13088216" author="thetaphi" created="Sat, 20 Aug 2011 17:37:33 +0100"  >&lt;p&gt;Jukka, thats the correct way. But in general there is already another issue open to produce browser-like HTML, where I added the serializer we use here at PANGAEA for our XHTML output.&lt;/p&gt;</comment>
                            <comment id="13088222" author="thetaphi" created="Sat, 20 Aug 2011 17:57:20 +0100"  >&lt;p&gt;I just point again to this one: &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-651&quot; title=&quot;Unescaped attribute value generated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-651&quot;&gt;&lt;del&gt;TIKA-651&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a serializer there that also does not f*ck up empty elements like &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; vs. &amp;lt;br/&amp;gt;. Maybe we should not wait for serializer.jar to contain it and simply shipt it with TIKA. Indenting could be added easily, too.&lt;/p&gt;</comment>
                            <comment id="13088226" author="mikemccand" created="Sat, 20 Aug 2011 18:15:37 +0100"  >&lt;p&gt;I think turning off TikaCLI&apos;s indenting (pretty-printing) is not great&lt;br/&gt;
&amp;#8211; human readability of the output of TikaCLI is really useful for&lt;br/&gt;
ad-hoc debugging?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe we should not wait for serializer.jar to contain it and simply shipt it with TIKA. Indenting could be added easily, too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That seems like a good solution?  Then we can have pretty-printing on&lt;br/&gt;
again, without workarounds in the parsers...&lt;/p&gt;</comment>
                            <comment id="13088231" author="mikemccand" created="Sat, 20 Aug 2011 18:25:02 +0100"  >&lt;p&gt;Another options is to leave indent off by default in TikaCLI, but we add an&lt;br/&gt;
new CL option (-prettyPrint?) so users can turn it on, with a big&lt;br/&gt;
warning noting that the resulting output can be &quot;buggy&quot; (eg not&lt;br/&gt;
rendered properly in a browser, breaking up style&apos;d words, etc.).&lt;/p&gt;</comment>
                            <comment id="13088241" author="jukkaz" created="Sat, 20 Aug 2011 19:25:10 +0100"  >&lt;p&gt;The &amp;lt;body&amp;gt; content emitted by many parsers is already designed to be reasonably readable, so the only thing that gets badly mixed without automatic indenting is the &amp;lt;head&amp;gt; section and all the metadata contained in it.  The attached 0002 patch modifies the XHTMLContentHandler class to add extra whitespace within the &amp;lt;head&amp;gt; section to make the output more readable.&lt;/p&gt;</comment>
                            <comment id="13088360" author="mikemccand" created="Sun, 21 Aug 2011 14:20:39 +0100"  >&lt;blockquote&gt;&lt;p&gt;The &amp;lt;body&amp;gt; content emitted by many parsers is already designed to be reasonably readable, so the only thing that gets badly mixed without automatic indenting is the &amp;lt;head&amp;gt; section and all the metadata contained in it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean because the other (non-Word) parsers generally embed&lt;br/&gt;
newlines / whitespace in their output&apos;d text, themselves?  EG, when I&lt;br/&gt;
tested a random PDF I have I can see added newlines and the body text&lt;br/&gt;
is very readable as is.&lt;/p&gt;

&lt;p&gt;But the Word parsers don&apos;t seem to do this...&lt;/p&gt;

&lt;p&gt;And I don&apos;t think we should rely on/expect/require the parsers to be&lt;br/&gt;
pretty-printing their body text output?  Ie, the PDFParser&apos;s output is&lt;br/&gt;
readable because it does very little actual markup &amp;#8211; big chunks of&lt;br/&gt;
pre-formatted (with inserted whitespace) text between &amp;lt;p&amp;gt;..&amp;lt;/p&amp;gt; tags,&lt;br/&gt;
while the Word parsers seem to do the opposite (relatively large&lt;br/&gt;
amounts of markup).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The attached 0002 patch modifies the XHTMLContentHandler class to add extra whitespace within the &amp;lt;head&amp;gt; section to make the output more readable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm... I don&apos;t think we should be injecting ad-hoc newlines ourselves&lt;br/&gt;
here?  In general I think Tika should do as little whitespace&lt;br/&gt;
manipulation as possible (I&apos;m still not sure why/where the RTFParser&lt;br/&gt;
is adding whitespace)?&lt;/p&gt;

&lt;p&gt;I think it&apos;s important that TikaCLI&apos;s output be human readable &amp;#8211; this&lt;br/&gt;
is a very useful ad-hoc debugging tool.&lt;/p&gt;

&lt;p&gt;I hope we can find some way to use the serializer on &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-651&quot; title=&quot;Unescaped attribute value generated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-651&quot;&gt;&lt;del&gt;TIKA-651&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13088361" author="jukkaz" created="Sun, 21 Aug 2011 14:37:16 +0100"  >&lt;p&gt;I committed all the patches, thus resolving this as fixed. Michael&apos;s style tag normalization mechanism should help clean up complicated markup in Word documents and the disabled output indenting in Tika CLI will prevent similar whitespace issues from popping up with other document formats or other types of markup within Word documents.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You mean because the other (non-Word) parsers generally embed newlines / whitespace in their output&apos;d text, themselves?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. The general idea behind that is that even the plain text output should reasonably well reflect the semantic structure of the input document. Thus we add things like extra lines between paragraphs or tabs between table cells. The nice side-effect is that the output usually becomes also quite human-readable. Quite a bit of this logic is inside the XHTMLContentHandler class, so it&apos;s already shared by many parsers, and we could well extend it with things like automatic word-wrapping, etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hmm... I don&apos;t think we should be injecting ad-hoc newlines ourselves here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why not? I don&apos;t see any downsides to extra whitespace within &amp;lt;head&amp;gt; as it&apos;s by definition ignored by automated processing tools.&lt;/p&gt;</comment>
                            <comment id="13088372" author="mikemccand" created="Sun, 21 Aug 2011 15:20:44 +0100"  >
&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;You mean because the other (non-Word) parsers generally embed newlines / whitespace in their output&apos;d text, themselves?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. The general idea behind that is that even the plain text output should reasonably well reflect the semantic structure of the input document. Thus we add things like extra lines between paragraphs or tabs between table cells. The nice side-effect is that the output usually becomes also quite human-readable. Quite a bit of this logic is inside the XHTMLContentHandler class, so it&apos;s already shared by many parsers, and we could well extend it with things like automatic word-wrapping, etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I think that makes sense... thanks for the explanation!  I do love&lt;br/&gt;
the readability of the plain text output when I filter eg a PDF...&lt;/p&gt;

&lt;p&gt;In fact in the original user thread (that lead to opening this), I&lt;br/&gt;
believe the user was bothered because the filtered text for the Word&lt;br/&gt;
doc did not reflect the wrapping that Word does when it renders.&lt;/p&gt;

&lt;p&gt;So maybe we can somehow figure out how to have the Word parser(s) do&lt;br/&gt;
this... though this is likely a (complex) render-time only thing for&lt;br/&gt;
Word.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Hmm... I don&apos;t think we should be injecting ad-hoc newlines ourselves here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why not? I don&apos;t see any downsides to extra whitespace within &amp;lt;head&amp;gt; as it&apos;s by definition ignored by automated processing tools.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well generally it makes me nervous if Tika introduces changes over the&lt;br/&gt;
original content?  Ie, I think Tika should strive to be as&lt;br/&gt;
&quot;pass-through&quot; as is reasonably possible... just pure plumbing.&lt;/p&gt;

&lt;p&gt;Still, I agree that in the head section whitespace will never be&lt;br/&gt;
considered part of the content, so it should be OK here.  Plus we are&lt;br/&gt;
basically creating that head section ourselves, from the extracted&lt;br/&gt;
metadata.&lt;/p&gt;

&lt;p&gt;Separately, I&apos;d still like to add a -prettyPrint option to TikaCLI (to&lt;br/&gt;
optionally turn INDENT back on, only applying when -x or -h is used,&lt;br/&gt;
defaulting to off): I think this is very useful for ad-hoc debugging,&lt;br/&gt;
where a user/dev wants to quickly see the XML/XHTML structure that&lt;br/&gt;
Tika derived from the content.  I&apos;m happy to cons up the patch for&lt;br/&gt;
this...&lt;/p&gt;</comment>
                            <comment id="13088375" author="jukkaz" created="Sun, 21 Aug 2011 15:29:16 +0100"  >&lt;blockquote&gt;
&lt;p&gt;-prettyPrint option&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds OK to me (though I&apos;d name the option --pretty-print for consistency with other options).&lt;/p&gt;</comment>
                            <comment id="13088380" author="mikemccand" created="Sun, 21 Aug 2011 15:53:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;though I&apos;d name the option --pretty-print for consistency with other options&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh right.  OK I attached the patch.&lt;/p&gt;

&lt;p&gt;In the process I found that there&apos;s a &lt;del&gt;p (&lt;/del&gt;-port) that&apos;s checked for but never actually used nor listed in the usage line &amp;#8211; should we remove that (it doesn&apos;t &quot;work&quot;, it you cannot actually set the port with it).&lt;/p&gt;</comment>
                            <comment id="13090135" author="mikemccand" created="Wed, 24 Aug 2011 11:40:23 +0100"  >&lt;p&gt;New patch attached, including the last (pretty-print) patch, plus I noticed that the OOXML Word parser also split up adjacent bold character runs so I fixed that and added 2 docx files for testing.&lt;/p&gt;</comment>
                            <comment id="13090136" author="mikemccand" created="Wed, 24 Aug 2011 11:41:03 +0100"  >&lt;p&gt;Reopening for the --pretty-print addition, plus fixing OOXML Word docs to also coalesce adjacent char-runs that have the same style.&lt;/p&gt;</comment>
                            <comment id="13107066" author="jukkaz" created="Sat, 17 Sep 2011 10:23:19 +0100"  >&lt;p&gt;I committed Michael&apos;s patch in revision 1171929, so I guess we can resolve this as fixed now.&lt;/p&gt;</comment>
                            <comment id="13107102" author="mikemccand" created="Sat, 17 Sep 2011 13:12:40 +0100"  >&lt;p&gt;Thanks Jukka!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12491057" name="0001-TIKA-692-TikaCLI-x-or-h-on-a-Word-doc-sometimes-adds.patch" size="1266" author="jukkaz" created="Sat, 20 Aug 2011 17:28:12 +0100"/>
                            <attachment id="12491065" name="0002-TIKA-692-TikaCLI-x-or-h-on-a-Word-doc-sometimes-adds.patch" size="2216" author="jukkaz" created="Sat, 20 Aug 2011 19:25:10 +0100"/>
                            <attachment id="12491097" name="TIKA-692-pretty-print.patch" size="5325" author="mikemccand" created="Sun, 21 Aug 2011 15:53:12 +0100"/>
                            <attachment id="12491461" name="TIKA-692.patch" size="16857" author="mikemccand" created="Wed, 24 Aug 2011 11:40:23 +0100"/>
                            <attachment id="12491056" name="TIKA-692.patch" size="10515" author="mikemccand" created="Sat, 20 Aug 2011 17:14:33 +0100"/>
                            <attachment id="12491053" name="TIKA-692.patch" size="7407" author="mikemccand" created="Sat, 20 Aug 2011 16:51:17 +0100"/>
                            <attachment id="12491462" name="testWORD_bold_character_runs.doc" size="22016" author="mikemccand" created="Wed, 24 Aug 2011 11:40:23 +0100"/>
                            <attachment id="12491054" name="testWORD_bold_character_runs.doc" size="22016" author="mikemccand" created="Sat, 20 Aug 2011 16:51:17 +0100"/>
                            <attachment id="12491055" name="testWORD_bold_character_runs2.doc" size="22016" author="mikemccand" created="Sat, 20 Aug 2011 16:51:17 +0100"/>
                            <attachment id="12491463" name="testWORD_bold_character_runs2.docx" size="10406" author="mikemccand" created="Wed, 24 Aug 2011 11:40:23 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Aug 2011 16:24:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx287:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16680</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>