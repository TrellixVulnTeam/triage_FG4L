<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:31:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-623/TIKA-623.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-623] Add support for Outlook PST</title>
                <link>https://issues.apache.org/jira/browse/TIKA-623</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;As you might know, Outlook stores its mails and other stuff in a single PST file. There&apos;s a relatively new Java library called java-libpst for reading Outlook PST files. It is licensed under the LGPL and available over here: &lt;a href=&quot;http://code.google.com/p/java-libpst/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/java-libpst/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have tested the library on Outlook 2000 and Outlook 2003, with good results. It would be great if the library could be integrated into Tika.&lt;/p&gt;

&lt;p&gt;Best regards&lt;br/&gt;
Tran Nam Quang&lt;/p&gt;</description>
                <environment></environment>
        <key id="12502760">TIKA-623</key>
            <summary>Add support for Outlook PST</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="qforce">Tran Nam Quang</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Mar 2011 22:36:07 +0100</created>
                <updated>Sat, 10 Jan 2015 13:53:39 +0000</updated>
                            <resolved>Fri, 4 Apr 2014 10:24:28 +0100</resolved>
                                                    <fixVersion>1.6</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13012730" author="gagravarr" created="Tue, 29 Mar 2011 22:53:08 +0100"  >&lt;p&gt;If it&apos;s LGPL then we can&apos;t include it in Tika as standard&lt;/p&gt;

&lt;p&gt;However, it is possible to have the parser dynamically loaded if a user chooses to download the parser + dependent files (if the license works for them)&lt;/p&gt;

&lt;p&gt;If you&apos;re interested in pst support, then I&apos;d suggest you try to knock up a basic parser using libpst. If you do get it working, please list it on the wiki:&lt;br/&gt;
   &lt;a href=&quot;http://wiki.apache.org/tika/3rd%20party%20parser%20plugins&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/tika/3rd%20party%20parser%20plugins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need help with developing the plugin, please ask on the dev list. You might also be interested in looking at the relatively small patch that was all that was required to enable JTNEF (GPL) to be used as a Tika plugin:&lt;br/&gt;
   &lt;a href=&quot;https://github.com/jukka/jtnef/commit/a9a51982165101c0bdda4cb5266d7f8958c271ef&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jukka/jtnef/commit/a9a51982165101c0bdda4cb5266d7f8958c271ef&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13012744" author="qforce" created="Tue, 29 Mar 2011 23:13:43 +0100"  >&lt;p&gt;What licenses would permit inclusion in Tika, other than the Apache License 2.0? I could ask the author to change the library&apos;s license or to switch to dual-licensing...&lt;/p&gt;

&lt;p&gt;The basic parser is already listed as an example on the front page of the java-libpst website, by the way.&lt;/p&gt;</comment>
                            <comment id="13012746" author="thetaphi" created="Tue, 29 Mar 2011 23:15:34 +0100"  >&lt;p&gt;From looking at the code of this library, it looks that it needs some improvements/fixes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It catches all exceptions and instead of simply wrap&apos;n&apos;rethrow or declare the checked exceptions in the methods, it prints the stack trace to System.out. Also messages are printed to System.out.&lt;/li&gt;
	&lt;li&gt;The RTF compression decoder uses new String(byte[]) without charset -&amp;gt; locale dependent! Other places do this, too. This is broken, as the file format should define the charset.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13012756" author="gagravarr" created="Tue, 29 Mar 2011 23:41:09 +0100"  >&lt;p&gt;Details on the licenses that are allowed to be used are at: &lt;a href=&quot;http://www.apache.org/legal/resolved.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/legal/resolved.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From looking at their homepage, writing a tika parser shouldn&apos;t be too hard - you&apos;d likely want to crib off one of the other container based parsers to see how to have each part processed for you by the appropriate tika parsers.&lt;/p&gt;</comment>
                            <comment id="13013645" author="qforce" created="Wed, 30 Mar 2011 21:59:23 +0100"  >&lt;p&gt;I contacted the library author, he agreed to dual-licensing the library as LGPL/Apache. This means java-libpst can be included by default in Tika, right?&lt;/p&gt;

&lt;p&gt;As for the Tika parser, I won&apos;t be able to implement that before Saturday or Sunday (assuming I&apos;m still supposed to).&lt;/p&gt;</comment>
                            <comment id="13013657" author="gagravarr" created="Wed, 30 Mar 2011 22:16:17 +0100"  >&lt;p&gt;The re-license is great news! There are two steps needed then:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Get a version of libpst into Maven Central (so we can include it as a dependency)&lt;/li&gt;
	&lt;li&gt;Write a Parser which uses libpst, likely one that does all the metadata bits and delegates to other parsers for the message body + attachments&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the former, see something like &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-407&quot; title=&quot;Push NetCDF4 lib dependency to Maven Central and Update Tika POM&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-407&quot;&gt;&lt;del&gt;TIKA-407&lt;/del&gt;&lt;/a&gt; for a guide. For the latter, I&apos;d suggest cribbing off something like PackageParser and the Outlook Parser&lt;/p&gt;</comment>
                            <comment id="13013673" author="qforce" created="Wed, 30 Mar 2011 22:35:19 +0100"  >&lt;p&gt;I have zero experience with Maven, so I don&apos;t think I&apos;m the right person to take care of the Maven upload.&lt;/p&gt;

&lt;p&gt;I might be able to handle the Parser, although it&apos;ll probably have to wait until the library author makes a new relicensed release available.&lt;/p&gt;</comment>
                            <comment id="13013891" author="rjohnson.id.au" created="Thu, 31 Mar 2011 10:17:10 +0100"  >&lt;p&gt;Hi Guys,&lt;/p&gt;

&lt;p&gt;I&apos;m the original author.  I&apos;ve cleared the license change with the other contributor, and will try to get a release out that reflects this over the next few days.&lt;/p&gt;

&lt;p&gt;Also, as Uwe has pointed out, there are some clean-ups that really should be made to the project.  I am a little time limited, however I will attempt to address these are they are brought to my attention.&lt;/p&gt;

&lt;p&gt;Thanks for considering this project for inclusion.&lt;/p&gt;

&lt;p&gt;Kind Regards,&lt;/p&gt;

&lt;p&gt;Richard&lt;/p&gt;</comment>
                            <comment id="13013905" author="gagravarr" created="Thu, 31 Mar 2011 11:14:41 +0100"  >&lt;p&gt;Could one of our Maven gurus (Jukka? Chris?) maybe help out Richard with getting the new release into Maven Central when it&apos;s out?&lt;/p&gt;

&lt;p&gt;Looking at the codebase, I can see quite a few places where there&apos;s code to do things that Apache POI also does. (RTF LZW, reading MAPI properties, MAPI constants, Little Endian etc). Longer term, it&apos;s probably worth Richard joining the POI dev list so we can see when libpst can use POI, and what POI could use from libpst. That&apos;s not needed for the initial Tika plugin though!&lt;/p&gt;</comment>
                            <comment id="13013939" author="kkrugler" created="Thu, 31 Mar 2011 13:04:49 +0100"  >&lt;p&gt;I&apos;ve got comments on &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-462&quot; title=&quot;Add Boilerpipe 1.0.4 to Maven central and remove java.net repository from parser pom&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-462&quot;&gt;&lt;del&gt;TIKA-462&lt;/del&gt;&lt;/a&gt; that talk about what I did to get Boilerpipe into Maven Central, via Sonatype. &lt;/p&gt;</comment>
                            <comment id="13015043" author="rjohnson.id.au" created="Sat, 2 Apr 2011 17:12:35 +0100"  >&lt;p&gt;Hey Guys,&lt;/p&gt;

&lt;p&gt;I&apos;ve just uploaded a new version with some cleanups, bug fixes and most importantly a new License.&lt;/p&gt;

&lt;p&gt;Kind Regards,&lt;/p&gt;

&lt;p&gt;Richard&lt;/p&gt;</comment>
                            <comment id="13015045" author="gagravarr" created="Sat, 2 Apr 2011 17:20:13 +0100"  >&lt;p&gt;Great news Richard. &lt;/p&gt;

&lt;p&gt;Are you happy to start the process of getting the new release into Maven Central? The process should be largely the same as Ken did with &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-462&quot; title=&quot;Add Boilerpipe 1.0.4 to Maven central and remove java.net repository from parser pom&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-462&quot;&gt;&lt;del&gt;TIKA-462&lt;/del&gt;&lt;/a&gt;, and Sonatype seem to have a very handy walkthrough of the process at &lt;a href=&quot;https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13015046" author="qforce" created="Sat, 2 Apr 2011 17:28:56 +0100"  >&lt;p&gt;Cool! I&apos;ll start writing the Tika parser as soon as I can. Could take a couple of days though.&lt;/p&gt;

&lt;p&gt;Richard, I have one question regarding the API: PSTMessage has two methods, getDescriptorNodeId() and getInternetMessageId(). Both return identifiers, apparently. My question is: Which one is an unique identifier that will never, ever change? Cause I wouldn&apos;t want the Tika parser to extract identifiers that are &quot;internal-only&quot; and not unique.&lt;/p&gt;

&lt;p&gt;Btw, maybe it&apos;s a good idea to also clarify this in the Javadoc.&lt;/p&gt;</comment>
                            <comment id="13015152" author="qforce" created="Sun, 3 Apr 2011 15:22:09 +0100"  >&lt;p&gt;I started work on the Tika parser, but got stuck with the following problem: In order to access the Outlook PST file, I need to create a PSTFile instance. Now, the PSTFile constructor requires either a File or a String argument that points at the PST file. The constructor then takes either of these arguments to create a RandomAccessFile internally. However, Tika&apos;s Parser interface gives me an InputStream. What do I do?&lt;/p&gt;</comment>
                            <comment id="13015158" author="gagravarr" created="Sun, 3 Apr 2011 16:05:32 +0100"  >&lt;p&gt;Tran - wrap it in a TikaInputStream, which handles converting between Files and InputStreams as required by the underlying libraries.&lt;/p&gt;</comment>
                            <comment id="13015160" author="rjohnson.id.au" created="Sun, 3 Apr 2011 16:30:54 +0100"  >&lt;p&gt;getDescriptorNodeId() is most likely the one you want for a unique identifier.  They are for internal use, however they are guaranteed unique per PST file and are unchanging (incrementally allocated and not reused).&lt;/p&gt;

&lt;p&gt;Internet Message Ids are the ones from rfc2822, and therefore not all PST objects (such as unsent emails) have them.&lt;/p&gt;

&lt;p&gt;I&apos;ll get this updated in the javadocs.&lt;/p&gt;</comment>
                            <comment id="13015164" author="rjohnson.id.au" created="Sun, 3 Apr 2011 16:59:14 +0100"  >&lt;p&gt;I&apos;ll start working on getting the library into Maven Central, thanks for those links Nick.&lt;/p&gt;</comment>
                            <comment id="13015171" author="qforce" created="Sun, 3 Apr 2011 17:35:23 +0100"  >&lt;p&gt;The PST file is basically a folder tree with emails and other stuff in it. Is there some sort of specification out there that tells me how to map this tree to specific XHTML elements?&lt;/p&gt;

&lt;p&gt;More specifically, what XML tags should I use to separate the emails from one another? And should the output be just a linear stream of emails, or should the tree structure be included in the output as well?&lt;/p&gt;</comment>
                            <comment id="13017631" author="qforce" created="Fri, 8 Apr 2011 21:35:24 +0100"  >&lt;p&gt;Okay, I finished the basic PST Tika parser. Emphasis is on &quot;basic&quot;. A lot of lines in the parser are marked as TODO, especially the metadata and content handling, simply because I had no idea what to do. Hope somebody will clean this up.&lt;/p&gt;</comment>
                            <comment id="13120648" author="kerzner@shmsoft.com" created="Wed, 5 Oct 2011 03:14:37 +0100"  >&lt;p&gt;Hi, everybody,&lt;/p&gt;

&lt;p&gt;I have forked Richard Johnson&apos;s java-libpst project here on GitHub &lt;a href=&quot;https://github.com/markkerzner/JavaLibpst&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/markkerzner/JavaLibpst&lt;/a&gt;. My reasons for doing this are as follows:&lt;/p&gt;

&lt;p&gt;1. I need java-libpst parsing capabilities for my FreeEed project &lt;a href=&quot;https://github.com/markkerzner/FreeEed&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/markkerzner/FreeEed&lt;/a&gt;&lt;br/&gt;
2. I want it in Maven, for FreeEed&apos;s purposes, and later on I would be happy to see it included in Tika, which also needs it in Maven;&lt;br/&gt;
3. I want it in active development, and Richard told me that he has less time for it than before.&lt;br/&gt;
4. By no means do I want to take the glory or the project away from Richard, but it is one of the keys for FreeEed&apos;s adoption in Windows.&lt;/p&gt;

&lt;p&gt;I am in touch with Richard on all that, but I want the community feedback. Should I continue? Should I bring it into some Maven repository? I have been working with Carl Byington and know his libpst somewhat, so that additional qualification should help. Therefore, please, how am I to proceed?&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;
</comment>
                            <comment id="13160838" author="ab" created="Thu, 1 Dec 2011 11:46:52 +0000"  >&lt;p&gt;Mark, visiting the github link to the project results in 404 Not Found... Are you still working on this? PST support would be surely a nice addition to Tika, so to answer your question, yes please continue &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; It doesn&apos;t have to be ideal, but as soon as it&apos;s in Maven then it&apos;s more likely that the Tika parser glue that Tran created can be fleshed out and added.&lt;/p&gt;</comment>
                            <comment id="13160907" author="mikemccand" created="Thu, 1 Dec 2011 13:33:17 +0000"  >&lt;p&gt;Is there some way to proceed here without requiring libpst be&lt;br/&gt;
mavenized?  Ie, is that really a blocker?  Are we unable to add a&lt;br/&gt;
simple JAR into Tika, here, and then open a follow-on issue for&lt;br/&gt;
mavenizing libpst?&lt;/p&gt;

&lt;p&gt;If it is a blocker.... can one of the maven gurus please step in and&lt;br/&gt;
help?&lt;/p&gt;

&lt;p&gt;I don&apos;t think we should push &quot;mavenizing&quot; responsibilities onto&lt;br/&gt;
contributors if we can possibly help it... it&apos;s already wonderful&lt;br/&gt;
enough that Richard created libpst, relicensed it so we could&lt;br/&gt;
incorporate it, fixed bugs, that Tran created an initial Tika parser,&lt;br/&gt;
that Mark is pushing things forward.&lt;/p&gt;</comment>
                            <comment id="13160919" author="jukkaz" created="Thu, 1 Dec 2011 13:57:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is there some way to proceed here without requiring libpst be mavenized?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Certainly. The only thing we&apos;d need is to have the library available as a dependency on the central repository (otherwise we can&apos;t push out a Tika release with such a dependency). This requires no changes to the upstream library, just some extra metadata and appropriate -sources and -javadoc jars to accompany to the upload. See &lt;a href=&quot;https://docs.sonatype.org/display/Repository/Uploading+3rd-party+Artifacts+to+The+Central+Repository&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.sonatype.org/display/Repository/Uploading+3rd-party+Artifacts+to+The+Central+Repository&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;Anyone can volunteer to take care of this. See for example &lt;a href=&quot;https://groups.google.com/d/topic/tagsoup-friends/vIUe_jSR5YQ/discussion&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://groups.google.com/d/topic/tagsoup-friends/vIUe_jSR5YQ/discussion&lt;/a&gt; for a thread where I volunteered and did this for a recent release of the TagSoup library.&lt;/p&gt;</comment>
                            <comment id="13688262" author="garydgregory" created="Wed, 19 Jun 2013 19:21:02 +0100"  >&lt;p&gt;Did anyone ever push java-libpst to Maven Central? Searching for &apos;java-libpst&apos; yields 0 results.&lt;/p&gt;</comment>
                            <comment id="13905488" author="jimbo8" created="Wed, 19 Feb 2014 14:33:06 +0000"  >&lt;p&gt;I also would like to see this capability added.&lt;/p&gt;</comment>
                            <comment id="13920692" author="thaichat04" created="Wed, 5 Mar 2014 09:29:35 +0000"  >&lt;p&gt;java-libpst-0.7 has been uploaded to oss sonatype nexus: &lt;a href=&quot;https://issues.sonatype.org/browse/OSSRH-8965&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.sonatype.org/browse/OSSRH-8965&lt;/a&gt;&lt;br/&gt;
If there&apos;s no objection, I&apos;ll refactory attached parser and provide output as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;html xmlns=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.w3.org/1999/xhtml&quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&amp;lt;head&amp;gt;
&amp;lt;meta name=&lt;span class=&quot;code-quote&quot;&gt;&quot;Content-Length&quot;&lt;/span&gt; content=&lt;span class=&quot;code-quote&quot;&gt;&quot;271360&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;meta name=&lt;span class=&quot;code-quote&quot;&gt;&quot;isValid&quot;&lt;/span&gt; content=&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;meta name=&lt;span class=&quot;code-quote&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; content=&lt;span class=&quot;code-quote&quot;&gt;&quot;application/vnd.ms-outlook&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
	&amp;lt;div class=&lt;span class=&quot;code-quote&quot;&gt;&quot;email-folder&quot;&lt;/span&gt;&amp;gt;
		&amp;lt;h1&amp;gt;D&#233;but du fichier de donn&#233;es Outlook&amp;lt;/h1&amp;gt;
		&amp;lt;div class=&lt;span class=&quot;code-quote&quot;&gt;&quot;email-entry&quot;&lt;/span&gt;&amp;gt;
			&amp;lt;h1&amp;gt;&amp;amp;lt;530D9CAC.5080901@gmail.com&amp;amp;gt;&amp;lt;/h1&amp;gt;
			&amp;lt;meta subject=&lt;span class=&quot;code-quote&quot;&gt;&quot;Re: Feature Generators&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;meta internetMessageId=&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;amp;lt;530D9CAC.5080901@gmail.com&amp;amp;gt;&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;meta descriptorNodeId=&lt;span class=&quot;code-quote&quot;&gt;&quot;2097188&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;meta lastModificationTime=&lt;span class=&quot;code-quote&quot;&gt;&quot;1393418263291&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;meta senderName=&lt;span class=&quot;code-quote&quot;&gt;&quot;J&#246;rn Kottmann&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;meta senderEmailAddress=&lt;span class=&quot;code-quote&quot;&gt;&quot;kottmann@gmail.com&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;meta recipients=&lt;span class=&quot;code-quote&quot;&gt;&quot;No recipients table!&quot;&lt;/span&gt; /&amp;gt;
			&amp;lt;p&amp;gt;mail content&amp;lt;/p&amp;gt;
		&amp;lt;/div&amp;gt;
		&amp;lt;div class=&lt;span class=&quot;code-quote&quot;&gt;&quot;email-folder&quot;&lt;/span&gt;&amp;gt;
			&amp;lt;h1&amp;gt;&#201;l&#233;ments supprim&#233;s&amp;lt;/h1&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div class=&lt;span class=&quot;code-quote&quot;&gt;&quot;email-folder&quot;&lt;/span&gt;&amp;gt;
		&amp;lt;h1&amp;gt;Racine (pour la recherche)&amp;lt;/h1&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div class=&lt;span class=&quot;code-quote&quot;&gt;&quot;email-folder&quot;&lt;/span&gt;&amp;gt;
		&amp;lt;h1&amp;gt;SPAM Search Folder 2&amp;lt;/h1&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13920716" author="thaichat04" created="Wed, 5 Mar 2014 10:16:06 +0000"  >&lt;p&gt;Commit on r1574411&lt;/p&gt;</comment>
                            <comment id="13922890" author="lfcnassif" created="Thu, 6 Mar 2014 19:02:08 +0000"  >&lt;p&gt;Good job. I think a possible improvement would be to generate a html for each email, containing its metadata and content, and call the embeddedExtractor to process the generated html, instead of printing all emails directly to xhtmlContentHandler.  So, in addition to attachments, emails could also be extracted from PST files if that is the goal of the application. What do you think?&lt;/p&gt;</comment>
                            <comment id="13922921" author="tallison@mitre.org" created="Thu, 6 Mar 2014 19:18:21 +0000"  >&lt;p&gt;Agreed.  Is there any way to reuse OutlookParser or to refactor so that we&apos;re using the same lib for an email, whether .pst or .msg.  There are lots of lessons learned embedded in the OutlookParser.  I&apos;ll be happy to chip in as I can.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thaichat04&quot; class=&quot;user-hover&quot; rel=&quot;thaichat04&quot;&gt;Hong-Thai Nguyen&lt;/a&gt;, thank you for getting this rolling!&lt;/p&gt;</comment>
                            <comment id="13923703" author="thaichat04" created="Fri, 7 Mar 2014 09:09:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lfcnassif&quot; class=&quot;user-hover&quot; rel=&quot;lfcnassif&quot;&gt;Luis Filipe Nassif&lt;/a&gt;, binary attached is handled with embeddedExtractor. BTW, I agree that we can split each mail to a separate unit.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tallison%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tallison@apache.org&quot;&gt;Tim Allison&lt;/a&gt;, we couldn&apos;t fix .pst and .msg (msg is already handled as part of OfficeParser), and feel free to finish properly this issue as you can &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13947265" author="lfcnassif" created="Tue, 25 Mar 2014 22:24:46 +0000"  >&lt;p&gt;A possible improvement could be recursing down to attached messages (if present) and parsing them and their attachments through PSTAttachment.getEmbeddedPSTMessage(). Setting a relationship id between messages and attachments would be very nice too.&lt;/p&gt;</comment>
                            <comment id="13959800" author="thaichat04" created="Fri, 4 Apr 2014 10:24:28 +0100"  >&lt;p&gt;Improvement: extract each mail as attachment document. Recursion down to folders, subfolders and also attachments inside mail.&lt;br/&gt;
Committed at r1584574&lt;/p&gt;</comment>
                            <comment id="14271079" author="ranapache" created="Fri, 9 Jan 2015 14:44:19 +0000"  >&lt;p&gt; Can someone please give a complete working example of how to parse outlook mails, I want to integrate solr with tika and search outlook PST files&lt;/p&gt;</comment>
                            <comment id="14271534" author="lfcnassif" created="Fri, 9 Jan 2015 17:00:11 +0000"  >&lt;p&gt;Maybe the PSTParserTest can help: &lt;a href=&quot;http://svn.apache.org/repos/asf/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/mbox/OutlookPSTParserTest.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/mbox/OutlookPSTParserTest.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ParsingEmbeddedDocumentExtractor simply appends the contents of all mails together, so I think the hits will point to the PST file. You could override the parseEmbedded(...) method to extract individual mails and process (index) them separately, but I do not know how to do this with solr.&lt;/p&gt;</comment>
                            <comment id="14271773" author="tallison@mitre.org" created="Fri, 9 Jan 2015 19:46:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lfcnassif&quot; class=&quot;user-hover&quot; rel=&quot;lfcnassif&quot;&gt;Luis Filipe Nassif&lt;/a&gt;&apos;s is the cleanest way to handle only going down one level, i.e. process each .msg file individually.&lt;/p&gt;

&lt;p&gt;You could use Tika app&apos;s -z | --extract feature to extract all attachments before ingesting into Solr...that would be a preprocessing step before running Solr&apos;s DIH.  One problem with that approach is that embedded docs within an .msg file will be extracted into separate files...&lt;/p&gt;

&lt;p&gt;Another option if you wanted to work on this programmatically would be to send via ParseContext a custom EmbeddedDocumentExtractor or a ParserDecorator.  You&apos;d have to be careful to ensure that it only goes down one level.  The default behavior would be to run that extractor/decorator against all embedded documents individually including attachments to .msg files, which you may or may not want.&lt;/p&gt;

&lt;p&gt;Take a look at FileEmbeddedDocumentExtractor &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java?revision=1633499&amp;amp;view=markup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; or MyEmbeddedDocumentExtractor &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java?revision=1633499&amp;amp;view=markup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14272297" author="lfcnassif" created="Sat, 10 Jan 2015 03:01:48 +0000"  >&lt;p&gt;I think currently OutlookPSTParser does not extract .msg files, as they do not exist inside pst, mails are broken in several pieces. Looking at the source, it seems to extract/process raw text mail bodies and attachments, even if you set up the parsing to recurse down only one level.&lt;/p&gt;

&lt;p&gt;And to get the relationship between a mail and its attachs, I think you will need to monitor the handler output currently. I think the parser could be improved to set a parent mail id into the metadata of its attachs and vice versa to make easier to recover the relationships.&lt;/p&gt;</comment>
                            <comment id="14272497" author="tallison@mitre.org" created="Sat, 10 Jan 2015 13:37:23 +0000"  >&lt;p&gt;Gah! Of course. Sorry and thank you. Should we modify the PSTParser so that it can take an EmbeddedParserDecorator? Separate parser that would grab the mail object from ParseContext instead of handling the inputstream?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12475835" name="OutlookPSTParser.java" size="4092" author="qforce" created="Fri, 8 Apr 2011 21:36:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Mar 2011 21:53:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4242</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx2nj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16749</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>