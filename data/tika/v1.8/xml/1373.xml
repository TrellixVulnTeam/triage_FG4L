<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:30:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1373/TIKA-1373.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1373] AutoDetectParser extracts no text when SourceCodeParser is selected</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1373</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;When using the AutoDetectParser in java code, and the SourceCodeParser is selected (i.e. java files), the handler gets no text:&lt;/p&gt;

&lt;p&gt;I have this test program:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; data = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HelloWorld {}&quot;&lt;/span&gt;;
    ByteArrayInputStream bais = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(data.getBytes());
    Parser autoDetectParser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AutoDetectParser();
    BodyContentHandler bch = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BodyContentHandler(50);
    ParseContext parseContext = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseContext();
    Metadata metadata = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Metadata();
    metadata.set(Metadata.CONTENT_TYPE, &lt;span class=&quot;code-quote&quot;&gt;&quot;text/x-java-source&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       autoDetectParser.parse(bais, bch, metadata, parseContext);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
       e.printStackTrace();
    }
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Text extracted: &quot;&lt;/span&gt;+bch.toString())
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It returns (using the SourceCodeParser): &lt;/p&gt;
    &lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; &amp;gt; Text extracted: &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But when I use this code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; data = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HelloWorld {}&quot;&lt;/span&gt;;
    ByteArrayInputStream bais = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(data.getBytes());
    Parser autoDetectParser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AutoDetectParser();
    BodyContentHandler bch = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BodyContentHandler(50);
    ParseContext parseContext = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseContext();
    Metadata metadata = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Metadata();
    metadata.set(Metadata.CONTENT_TYPE, &lt;span class=&quot;code-quote&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {  autoDetectParser.parse(bais, bch, metadata, parseContext);  } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {  e.printStackTrace();  }
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Text extracted: &quot;&lt;/span&gt;+bch.toString())
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;





&lt;p&gt;The Text Parser is used and I get:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; &amp;gt; Text extracted: &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HelloWorld {} &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;I have also tested this command: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; java -jar tika-app-1.5.jar -t D:\text.java
  (no text)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12728971">TIKA-1373</key>
            <summary>AutoDetectParser extracts no text when SourceCodeParser is selected</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="aaguilar">Andr&#233;s Aguilar-Uma&#241;a</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Jul 2014 22:09:27 +0100</created>
                <updated>Tue, 29 Jul 2014 18:24:55 +0100</updated>
                            <resolved>Thu, 24 Jul 2014 10:51:02 +0100</resolved>
                                    <version>1.5</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14071643" author="thaichat04" created="Wed, 23 Jul 2014 13:05:49 +0100"  >&lt;p&gt;Can you format your description with &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{code}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; annotation and if I understand well the output of 1st section is empty ?&lt;/p&gt;</comment>
                            <comment id="14071697" author="gagravarr" created="Wed, 23 Jul 2014 14:19:10 +0100"  >&lt;p&gt;I&apos;ve just tried it with svn trunk, and I think I see the issue there. The problem looks to be that we&apos;re getting back html when we ask for text&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;$ tika --text tika-core/src/main/java/org/apache/tika/Tika.java | head
&amp;lt;!DOCTYPE html PUBLIC &lt;span class=&quot;code-quote&quot;&gt;&quot;-&lt;span class=&quot;code-comment&quot;&gt;//W3C//DTD XHTML 1.0 Transitional//EN&quot;&lt;/span&gt;
&lt;/span&gt;                      &lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&amp;lt;html xmlns=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.w3.org/1999/xhtml&quot;&lt;/span&gt; xml:lang=&lt;span class=&quot;code-quote&quot;&gt;&quot;en&quot;&lt;/span&gt; lang=&lt;span class=&quot;code-quote&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&lt;span class=&quot;code-quote&quot;&gt;&quot;content-type&quot;&lt;/span&gt; content=&lt;span class=&quot;code-quote&quot;&gt;&quot;text/html; charset=ISO-8859-1&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;meta name=&lt;span class=&quot;code-quote&quot;&gt;&quot;generator&quot;&lt;/span&gt; content=&lt;span class=&quot;code-quote&quot;&gt;&quot;JHighlight v1.0 (http:&lt;span class=&quot;code-comment&quot;&gt;//jhighlight.dev.java.net)&quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;    &amp;lt;title&amp;gt;Tika.java&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&lt;span class=&quot;code-quote&quot;&gt;&quot;Help&quot;&lt;/span&gt; href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//jhighlight.dev.java.net&quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;    &amp;lt;style type=&lt;span class=&quot;code-quote&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;
.java_type {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that I&apos;ve asked for Text, but got HTML!&lt;/p&gt;</comment>
                            <comment id="14071713" author="thaichat04" created="Wed, 23 Jul 2014 14:40:36 +0100"  >&lt;p&gt;Yes, I saw the trouble when implementing this parser. How can we get that we are asking for text instead of HTML ? Can Handler is instanceOf BodyContentHandler is enough ?&lt;/p&gt;</comment>
                            <comment id="14071744" author="gagravarr" created="Wed, 23 Jul 2014 15:00:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;Yes, I saw the trouble when implementing this parser. How can we get that we are asking for text instead of HTML?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It isn&apos;t up to the parser. The parser should be outputting its html as sax events to the handler. Text-only extraction happens downstream&lt;/p&gt;

&lt;p&gt;It would seem that at the moment, the parser&apos;s generated html isn&apos;t being correctly turned into / passed into sax events on the content handler&lt;/p&gt;</comment>
                            <comment id="14071942" author="tpalsulich" created="Wed, 23 Jul 2014 17:50:11 +0100"  >&lt;p&gt;The only SAX event in SourceCodeParser is &lt;tt&gt;xhtml.element(&quot;p&quot;, codeAsHtml);&lt;/tt&gt;. codeAsHtml is formatted by jhighlight, a syntax highlighter. So, it  &lt;em&gt;looks&lt;/em&gt; like the --text isn&apos;t returning the text, but it&apos;s just that the text content is html.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure how we can turn the jhighlight html tags into SAX events. Tika HtmlParser? Something like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        XHTMLContentHandler xhtml = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; XHTMLContentHandler(handler, metadata);
        Renderer renderer = getRenderer(type.toString());
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; content = out.toString();
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; codeAsHtml = renderer.highlight(name, content, charset.name(), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        HtmlParser htmlParser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HtmlParser();
        htmlParser.parse(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(content.getBytes()), xhtml, metadata, context);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14073042" author="thaichat04" created="Thu, 24 Jul 2014 10:43:26 +0100"  >&lt;p&gt;HtmlParser skips tags generated by JHighlight. I found a solution by using directly TagSoup Parser. Commit in r1613051.&lt;br/&gt;
As I mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1224&quot; title=&quot;Adding Source code (Java, Groovy, C) parser&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1224&quot;&gt;&lt;del&gt;TIKA-1224&lt;/del&gt;&lt;/a&gt;, this parser is quick &amp;amp; dirty approach to parser source code file. Again, the &lt;em&gt;right&lt;/em&gt; one parser is must have dedicate parser by language and parse deeply elements and build events on-the-fly.&lt;/p&gt;</comment>
                            <comment id="14073052" author="hudson" created="Thu, 24 Jul 2014 11:03:43 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #112 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/112/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/112/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1373&quot; title=&quot;AutoDetectParser extracts no text when SourceCodeParser is selected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1373&quot;&gt;&lt;del&gt;TIKA-1373&lt;/del&gt;&lt;/a&gt; - Send html content to SAX events by using TagSoup (thaichat04: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1613051&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1613051&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/code/SourceCodeParser.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/code/SourceCodeParserTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14073077" author="hudson" created="Thu, 24 Jul 2014 11:49:19 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #114 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/114/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/114/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1373&quot; title=&quot;AutoDetectParser extracts no text when SourceCodeParser is selected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1373&quot;&gt;&lt;del&gt;TIKA-1373&lt;/del&gt;&lt;/a&gt; - Send html content to SAX events by using TagSoup (thaichat04: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1613051&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1613051&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/code/SourceCodeParser.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/code/SourceCodeParserTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14073557" author="tpalsulich" created="Thu, 24 Jul 2014 20:33:06 +0100"  >&lt;blockquote&gt;&lt;p&gt;HtmlParser skips tags generated by JHighlight.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is there a particular reason?&lt;/p&gt;</comment>
                            <comment id="14077873" author="aaguilar" created="Tue, 29 Jul 2014 16:56:52 +0100"  >&lt;p&gt;In what version is this going to be released?&lt;/p&gt;</comment>
                            <comment id="14077885" author="thaichat04" created="Tue, 29 Jul 2014 17:03:25 +0100"  >&lt;p&gt;Normally it&apos;s on next  official 1.6 release, but you can try with this candidate release: &lt;a href=&quot;http://people.apache.org/~mattmann/apache-tika-1.6/rc1/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~mattmann/apache-tika-1.6/rc1/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14078028" author="aaguilar" created="Tue, 29 Jul 2014 18:24:55 +0100"  >&lt;p&gt;Great! thank you!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jul 2014 12:05:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>407045</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzrwhj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>407063</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>