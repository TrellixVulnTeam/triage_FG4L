<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:33:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1311/TIKA-1311.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1311] Centralize JSON handling of Metadata</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1311</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;When json was initially added to TIKA CLI (&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-213&quot; title=&quot;JSON output from Tika CLI&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-213&quot;&gt;&lt;del&gt;TIKA-213&lt;/del&gt;&lt;/a&gt;), there was a recommendation to centralize JSON handling of Metadata, potentially putting it in core.  On a recent bug fix (&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1291&quot; title=&quot;Invalid JSON output on CLI&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1291&quot;&gt;&lt;del&gt;TIKA-1291&lt;/del&gt;&lt;/a&gt;), the same recommendation was repeated especially noting that we now handle JSON/Metadata differently in CLI and server.&lt;/p&gt;

&lt;p&gt;Let&apos;s centralize JSON handling in core and use GSON.  We should add a serializer and a deserializer so that users don&apos;t have to reinvent that wheel.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12717052">TIKA-1311</key>
            <summary>Centralize JSON handling of Metadata</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tallison@mitre.org">Tim Allison</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 May 2014 15:39:42 +0100</created>
                <updated>Tue, 21 Oct 2014 14:09:31 +0100</updated>
                            <resolved>Thu, 5 Jun 2014 02:48:54 +0100</resolved>
                                                    <fixVersion>1.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14011149" author="tallison@mitre.org" created="Wed, 28 May 2014 15:40:37 +0100"  >&lt;p&gt;Is core the right place for the serializer/deserializer?  &lt;/p&gt;

&lt;p&gt;What package: org.apache.tika.io.json?&lt;/p&gt;</comment>
                            <comment id="14011287" author="gagravarr" created="Wed, 28 May 2014 17:39:07 +0100"  >&lt;p&gt;If we put it into core, we&apos;d need to add another dependency (to GSON) which isn&apos;t ideal, so we might want to run the plan past the dev list first to see what people think (core tends to try to have a very minimal set of deps, unlike the other modules)&lt;/p&gt;

&lt;p&gt;Package wise, org.apache.tika.metadata.json is what I&apos;d lean towards, otherwise utils.json&lt;/p&gt;</comment>
                            <comment id="14015422" author="tallison@mitre.org" created="Mon, 2 Jun 2014 15:25:51 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gagravarr&quot; class=&quot;user-hover&quot; rel=&quot;gagravarr&quot;&gt;Nick Burch&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgauss&quot; class=&quot;user-hover&quot; rel=&quot;rgauss&quot;&gt;Ray Gauss II&lt;/a&gt;, if you have a chance to review this, I&apos;d greatly appreciate it.  I&apos;d like to make sure I&apos;m setting a reasonable foundation and haven&apos;t done anything too bone-headed, especially in the poms.  &lt;/p&gt;

&lt;p&gt;Feedback from others is welcome, too, of course!&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="14015501" author="gagravarr" created="Mon, 2 Jun 2014 17:12:21 +0100"  >&lt;p&gt;I&apos;ve had a quick look, and at first glance it looks good&lt;/p&gt;

&lt;p&gt;Few minor things:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;A few places look like they need a bit more javadoc completing, eg JsonMetadataSerializer&lt;/li&gt;
	&lt;li&gt;A couple of places look to have odd idents, eg the new pom&lt;/li&gt;
	&lt;li&gt;JsonMetadataTest could probably use expanding a little bit more, to cover some more cases and check more details&lt;/li&gt;
	&lt;li&gt;There&apos;s some notes about thread safety in comments, should we either address that, or push the warning up to the javadocs?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also, we&apos;ll need to update the &quot;Getting Started&quot; page to list the serialisation module in the artifacts section for 1.6, and possibly also make sure it&apos;s up-to-date generally!&lt;/p&gt;</comment>
                            <comment id="14015560" author="chrismattmann" created="Mon, 2 Jun 2014 17:59:21 +0100"  >&lt;p&gt;Hey Tim this would be a perfect candidate to throw up on &lt;a href=&quot;http://reviews.apache.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://reviews.apache.org/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14015689" author="sergey_beryozkin" created="Mon, 2 Jun 2014 19:19:59 +0100"  >&lt;p&gt;Hi&lt;/p&gt;

&lt;p&gt;One possible option is to use JAX-RS MessageBodyReader (MBR) and MessageBodyWriter (MBW) providers, they deal with reading/writing the data. For example, one can register a GSON MBR/MBW, etc&lt;/p&gt;

&lt;p&gt;Cheers, Sergey&lt;/p&gt;</comment>
                            <comment id="14017655" author="tallison@mitre.org" created="Wed, 4 Jun 2014 13:38:41 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gagravarr&quot; class=&quot;user-hover&quot; rel=&quot;gagravarr&quot;&gt;Nick Burch&lt;/a&gt;, thank you, as always, for your thoughtful review!  I&apos;ll make updates and commit soon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sergey_beryozkin&quot; class=&quot;user-hover&quot; rel=&quot;sergey_beryozkin&quot;&gt;Sergey Beryozkin&lt;/a&gt;, I appreciate all advice on JAX-RS.  I&apos;m still trying to figure out how best to leverage the framework without reinventing the wheel. I googled some examples of GSON MBW, and I think we&apos;re effectively doing that now with the existing JSONMessageBodyWriter.  I modified that very slightly:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void writeTo(Metadata metadata, &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; type, Type genericType, Annotation[] annotations,
      MediaType mediaType, MultivaluedMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; httpHeaders, OutputStream entityStream) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException,
      WebApplicationException {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            Writer writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OutputStreamWriter(entityStream, &lt;span class=&quot;code-quote&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);
            JsonMetadata.toJson(metadata, writer);
            writer.flush();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (TikaException e) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(e);
        }
        entityStream.flush();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1) Is there a more efficient way of doing this?&lt;br/&gt;
2) We don&apos;t currently have an MBR, it seems fairly straightforward to me for clients to do something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Response response = WebClient.create(endPoint + META_PATH).type(&lt;span class=&quot;code-quote&quot;&gt;&quot;application/msword&quot;&lt;/span&gt;)
        .accept(MediaType.APPLICATION_JSON).post(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.getSystemResourceAsStream(TikaResourceTest.TEST_DOC));
    Reader reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InputStreamReader((InputStream) response.getEntity());
    Metadata metadata = JsonMetadata.fromJson(reader);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...so, if we added an MBR, would it take less code than that or would it make it easier in the JAX-RS framework for others who actually know what they&apos;re doing? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14017687" author="sergey_beryozkin" created="Wed, 4 Jun 2014 14:29:22 +0100"  >&lt;p&gt;Hi, yes, adding MBR would lead to a simpler client code:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Response response = WebClient.create(endPoint + META_PATH).type(&lt;span class=&quot;code-quote&quot;&gt;&quot;application/msword&quot;&lt;/span&gt;)
        .accept(MediaType.APPLICATION_JSON).post(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.getSystemResourceAsStream(TikaResourceTest.TEST_DOC));
    Metadata metadata = response.readEntity(Metadata.class);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Metadata metadata = WebClient.create(endPoint + META_PATH).type(&lt;span class=&quot;code-quote&quot;&gt;&quot;application/msword&quot;&lt;/span&gt;)
                                                       .accept(MediaType.APPLICATION_JSON)
                                                       .post(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.getSystemResourceAsStream(TikaResourceTest.TEST_DOC),
                                                                Metadata.class);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;JAX-RS 2.0 Client API can also be used...&lt;/p&gt;

&lt;p&gt;Cheers, Sergey&lt;/p&gt;


</comment>
                            <comment id="14017963" author="chrismattmann" created="Wed, 4 Jun 2014 19:20:53 +0100"  >&lt;p&gt;Tim, patch looks good. I reviewed the part about silently skipping null vals. I agree with this. Nick&apos;s comment about more javadoc, agree with it too. check out reviewboard &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; +1 from me.&lt;/p&gt;</comment>
                            <comment id="14018407" author="tallison@mitre.org" created="Thu, 5 Jun 2014 02:48:54 +0100"  >&lt;p&gt;Nick, Sergey and Chris, thank you, all, for your feedback.  Sergey, I didn&apos;t add an MBR on this issue, but I plan to in the future.&lt;/p&gt;

&lt;p&gt;r1600554&lt;/p&gt;</comment>
                            <comment id="14018421" author="hudson" created="Thu, 5 Jun 2014 03:27:50 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #19 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/19/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/19/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1311&quot; title=&quot;Centralize JSON handling of Metadata&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1311&quot;&gt;&lt;del&gt;TIKA-1311&lt;/del&gt;&lt;/a&gt; centralize serialization (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1600554&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1600554&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/src/site/apt/gettingstarted.apt&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-app/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization/JsonMetadata.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization/JsonMetadataDeserializer.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization/JsonMetadataSerializer.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika/metadata&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika/metadata/serialization&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika/metadata/serialization/JsonMetadataTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-server/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-server/src/main/java/org/apache/tika/server/JSONMessageBodyWriter.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-server/src/test/java/org/apache/tika/server/MetadataEPTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14018432" author="hudson" created="Thu, 5 Jun 2014 03:51:29 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #19 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/19/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/19/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1311&quot; title=&quot;Centralize JSON handling of Metadata&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1311&quot;&gt;&lt;del&gt;TIKA-1311&lt;/del&gt;&lt;/a&gt; centralize serialization (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1600554&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1600554&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/src/site/apt/gettingstarted.apt&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-app/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization/JsonMetadata.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization/JsonMetadataDeserializer.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/main/java/org/apache/tika/metadata/serialization/JsonMetadataSerializer.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika/metadata&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika/metadata/serialization&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-serialization/src/test/java/org/apache/tika/metadata/serialization/JsonMetadataTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-server/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-server/src/main/java/org/apache/tika/server/JSONMessageBodyWriter.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-server/src/test/java/org/apache/tika/server/MetadataEPTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14178360" author="hudson" created="Tue, 21 Oct 2014 13:53:58 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #275 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/275/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/275/&lt;/a&gt;)&lt;br/&gt;
clean up from &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1311&quot; title=&quot;Centralize JSON handling of Metadata&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1311&quot;&gt;&lt;del&gt;TIKA-1311&lt;/del&gt;&lt;/a&gt; (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1633357&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1633357&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-app/src/main/java/org/apache/tika/io&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14178373" author="hudson" created="Tue, 21 Oct 2014 14:09:31 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #254 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/254/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/254/&lt;/a&gt;)&lt;br/&gt;
clean up from &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1311&quot; title=&quot;Centralize JSON handling of Metadata&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1311&quot;&gt;&lt;del&gt;TIKA-1311&lt;/del&gt;&lt;/a&gt; (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1633357&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1633357&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-app/src/main/java/org/apache/tika/io&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12647911" name="TIKA-1311.patch" size="22750" author="tallison@mitre.org" created="Mon, 2 Jun 2014 15:25:51 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 May 2014 16:39:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>395260</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzpwq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>395391</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>