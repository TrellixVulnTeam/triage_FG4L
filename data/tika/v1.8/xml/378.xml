<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:30:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-378/TIKA-378.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-378] TikaConfig should notify users if it cannot initialize some parser</title>
                <link>https://issues.apache.org/jira/browse/TIKA-378</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;It would be nice if TikaConfig would somehow signal that it cannot load parser classes. Currently it just silently ignores all throwables.&lt;/p&gt;

&lt;p&gt;I would be ok with about any kind of signaling (even just wrapping and rethrowing the exception). If we wan&apos;t to maintain back compat in functionality we could indroduce a new config option into the configuration file or a method in TikaConfig class that would enable rethrowing exceptions on parser initializations.&lt;/p&gt;

&lt;p&gt;What do others think?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12456318">TIKA-378</key>
            <summary>TikaConfig should notify users if it cannot initialize some parser</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="siren">Sami Siren</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Feb 2010 12:03:06 +0000</created>
                <updated>Thu, 18 Feb 2010 16:06:59 +0000</updated>
                            <resolved>Thu, 18 Feb 2010 16:06:59 +0000</resolved>
                                    <version>0.6</version>
                                    <fixVersion>0.7</fixVersion>
                                    <component>config</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12834464" author="kkrugler" created="Tue, 16 Feb 2010 20:55:30 +0000"  >&lt;p&gt;Would it be sufficient to add a method that forces initialization of all known parsers?&lt;/p&gt;

&lt;p&gt;Or is this a runtime situation, where you want an exception thrown when either an explicit Tika parser can&apos;t load the required implementation jar, or the Autodetect parser hits the same situation?&lt;/p&gt;</comment>
                            <comment id="12834681" author="siren" created="Wed, 17 Feb 2010 08:10:59 +0000"  >&lt;p&gt;Basically my situation is such that I am extending tika with external parsers. When deploying, initialization of parsers may fail for many reasons, for example you might have problems with loading native libraries, class not found etc. Currently you are totally in the dark what it comes to quessing what is the problem, you only see that your parser is not there. I am basically seeking a way to tell the user (via logging or something else) that there was problems initializing the parsers you have configured and here&apos;s the cause of the problems (eg an exception).&lt;/p&gt;</comment>
                            <comment id="12834783" author="jukkaz" created="Wed, 17 Feb 2010 14:44:49 +0000"  >&lt;p&gt;How about if we introduced a protected TikaConfig method like handleParserLoadFailure(String parserClassName, Throwable throwable) that does nothing by default but that you could override to add whatever logging or other error handling?&lt;/p&gt;

&lt;p&gt;The rationale for silently ignoring such errors is the fairly common scenario where just a subset of the required parser libraries is in the classpath but you still want to use the default Tika configuration without adjusting it to match the available libraries.&lt;/p&gt;</comment>
                            <comment id="12835260" author="jukkaz" created="Thu, 18 Feb 2010 16:06:58 +0000"  >&lt;p&gt;After thinking about this more I decided to remove (see revision 911457) the empty catch of Throwables introduced for &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-217&quot; title=&quot;TikaConfig fails when a parser can&amp;#39;t be loaded due to an Error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-217&quot;&gt;&lt;del&gt;TIKA-217&lt;/del&gt;&lt;/a&gt;. Now the configuration parser will throw TikaExceptions whenever it encounters configuration errors.&lt;/p&gt;

&lt;p&gt;As mentioned, the main cause for potential exceptions so far has been an incomplete classpath caused by a deployment choosing (quite correctly) not to include parser libraries for formats that aren&apos;t needed. To avoid such errors I modified the parser classes in tika-parsers to be loadable even when the underlying parser library is not available. After this change any exceptions from TikaConfig are far more likely to be caused by real configuration problems.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 16 Feb 2010 20:55:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4482</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx45j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16992</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>