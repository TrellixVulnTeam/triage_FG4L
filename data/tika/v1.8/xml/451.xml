<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:39:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-451/TIKA-451.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-451] Inconsistent date format for Metadata.CREATION_DATE and Metadata.LAST_MODIFIED</title>
                <link>https://issues.apache.org/jira/browse/TIKA-451</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Currently, the PDF Parser does   calendar.getTime().toString()   which means dates end up in your local timezone, and are hard to parse&lt;/p&gt;

&lt;p&gt;The Open Document parsers output in iso 8601 format, which avoids these two problems&lt;/p&gt;

&lt;p&gt;The poi ole2 based parsers also output in date.toString() format, with the same timezone/parsing problems&lt;/p&gt;

&lt;p&gt;We should probably select one format, and update the parsers to all output in it&lt;/p&gt;</description>
                <environment></environment>
        <key id="12468242">TIKA-451</key>
            <summary>Inconsistent date format for Metadata.CREATION_DATE and Metadata.LAST_MODIFIED</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gagravarr">Nick Burch</assignee>
                                    <reporter username="gagravarr">Nick Burch</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Jun 2010 12:40:59 +0100</created>
                <updated>Mon, 6 Sep 2010 18:54:19 +0100</updated>
                            <resolved>Mon, 6 Sep 2010 18:54:19 +0100</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.8</fixVersion>
                                    <component>metadata</component>
                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12883947" author="chrismattmann" created="Wed, 30 Jun 2010 15:58:17 +0100"  >&lt;p&gt;+1 for ISO8601. It&apos;s cross database, cross platform and lexographically sortable. &lt;/p&gt;</comment>
                            <comment id="12884339" author="gagravarr" created="Thu, 1 Jul 2010 17:21:43 +0100"  >&lt;p&gt;If we make the change, it could impact users, but I think not too much&lt;/p&gt;

&lt;p&gt;Currently, there are a number of different date formats that crop up in the date field. This means that anyone who cares about the format is already having to try multiple date patterns to parse it. So, they shouldn&apos;t be affected by a change to a pre-existing format.&lt;/p&gt;

&lt;p&gt;The only people I can see being affected are people who only ever use one of the date.toString() parsers, and no others, and who assume that format on all dates. Hopefully that&apos;s a rare enough use case that we don&apos;t need to worry about when making this change?&lt;/p&gt;</comment>
                            <comment id="12884407" author="chrismattmann" created="Thu, 1 Jul 2010 21:33:38 +0100"  >&lt;p&gt;Hi Nick,&lt;/p&gt;

&lt;p&gt;We might impact users, but pre-1.0 and pre any documented expectation of return met Date formats, I think that this change is acceptable. &lt;/p&gt;

&lt;p&gt;ISO 8601 seems to be a good standard to comply to and I think the time is ripe to do it...&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12884415" author="gagravarr" created="Thu, 1 Jul 2010 21:45:49 +0100"  >&lt;p&gt;OK, makes sense to me&lt;/p&gt;

&lt;p&gt;As we have several parsers which currently have a Date object (or a Calendar one that can yield a Date), we probably want to put the Date -&amp;gt; ISO 8601 string conversion in one place to save duplication. I think adding lots of overloaded methods to the Metadata object might make things a little ugly (eg set+add with String+Property, possibly for both Date and Calendar....)&lt;/p&gt;

&lt;p&gt;One option I see is a single overloaded set(Property,Date), since we shouldn&apos;t need to handle multiple Dates so don&apos;t need an add. This would involve switching a couple of the Metadata keys from String to Property though (but I don&apos;t think this should affect many users, if any)&lt;/p&gt;

&lt;p&gt;The other option is to add a static helper method, probably on Metadata but it needn&apos;t have to be, of something like &quot;public static String formatDate(Date d)&quot; and &quot;public static String formatDate(Calendar c)&quot;, then keep the rest of the Metadata object as-is, and require the parsers to use the helper to do date -&amp;gt; string before storing the string.&lt;/p&gt;

&lt;p&gt;Since we do have set(Property,int), I&apos;d probably lean towards the former option. What does everyone else think?&lt;/p&gt;

&lt;p&gt;Nick&lt;/p&gt;</comment>
                            <comment id="12885604" author="jukkaz" created="Tue, 6 Jul 2010 18:07:13 +0100"  >&lt;p&gt;See page 11 of &lt;a href=&quot;http://www.adobe.com/devnet/xmp/pdfs/XMPSpecificationPart2.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.adobe.com/devnet/xmp/pdfs/XMPSpecificationPart2.pdf&lt;/a&gt; for the ISO 8601 subset used by XMP. I think that matches our needs pretty well.&lt;/p&gt;

&lt;p&gt;One of my forward-looking ideas behind introducing the Property class was to use it for these kinds of type-safe value conversions. We could add Property.setDate(Metadata, Date) and Property.getDate(Metadata) methods that could also take advantage of the static value type information included in the Property constants. For example an integer property constant could throw an exception (or use some predefined conversion rule) when you attempt to get its value as a date. For added compile-time type-safety we could even add explicit DateProperty, IntegerProperty, etc. subclasses for specific kinds of metadata properties.&lt;/p&gt;</comment>
                            <comment id="12885614" author="chrismattmann" created="Tue, 6 Jul 2010 18:40:02 +0100"  >&lt;p&gt;+1 to Jukka&apos;s suggestion...&lt;/p&gt;</comment>
                            <comment id="12885671" author="gagravarr" created="Tue, 6 Jul 2010 21:20:59 +0100"  >&lt;p&gt;All makes sense to me. I&apos;ll hopefully get around to making the changes to the Metadata object in the next couple of days, and once that&apos;s in rolling out the required changes to the parsers that don&apos;t currently output suitable dates.&lt;/p&gt;</comment>
                            <comment id="12886009" author="gagravarr" created="Wed, 7 Jul 2010 18:56:46 +0100"  >&lt;p&gt;Anyone have a strong opinion on what to do in this case:&lt;br/&gt;
   metadata.set(Metadata.CREATION_DATE, &quot;Last Thursday&quot;); // Set a date property as a raw string &lt;br/&gt;
   metadata.getDate(Metadata.CREATION_DATE); // Bang!&lt;/p&gt;

&lt;p&gt;I&apos;d lean towards throwing an illegal argument exception, but I guess we could maybe return null, or maybe create a new PropertyTypeViolationException (or better named!) and throw that?&lt;/p&gt;</comment>
                            <comment id="12886016" author="chrismattmann" created="Wed, 7 Jul 2010 19:13:32 +0100"  >&lt;p&gt;+1 to throwing a new PropertyTypeException, for now. Another option would be to call it PropertyValidationException, to signify that we may (later) include the ability to attach custom validators to a met object but that might be a bit too heavyweight!&lt;/p&gt;</comment>
                            <comment id="12886116" author="gagravarr" created="Wed, 7 Jul 2010 23:21:19 +0100"  >&lt;p&gt;Well, there are two validation steps. Firstly, for integers, we have a pair of asserts that check when you do set(property,int) that the property is both simple and int based. Those could certainly be replaced with test + throw PropertyTypeException. (We&apos;ll want the same for getDate(property) for non date property definitions)&lt;/p&gt;

&lt;p&gt;Then there&apos;s the get when the string value is of the wrong type (eg should be date but isn&apos;t in the right format). That could be PropertyValidationException or similar. Or we could make them both the same exception for now?&lt;/p&gt;</comment>
                            <comment id="12886119" author="jukkaz" created="Wed, 7 Jul 2010 23:25:37 +0100"  >&lt;p&gt;I would only do property type checks in type-specific setters like setDate() or setInteger(). I&apos;d allow the generic set() method with a string argument to always succeed. This avoids breaking the parsing of a document even if some of its metadata fields are malformed against our expectations.&lt;/p&gt;

&lt;p&gt;Similarly I&apos;d avoid throwing any exceptions from metadata getters. A malformed metadata value should probably be handled as if it was missing by the type-specific getters, and returned as-is by the generic get() method.&lt;/p&gt;</comment>
                            <comment id="12886123" author="gagravarr" created="Wed, 7 Jul 2010 23:28:15 +0100"  >&lt;p&gt;I&apos;m +1 to Jukka&apos;s idea&lt;/p&gt;</comment>
                            <comment id="12886193" author="chrismattmann" created="Thu, 8 Jul 2010 03:00:33 +0100"  >&lt;p&gt;Agreed, +1 from me too here...&lt;/p&gt;</comment>
                            <comment id="12888590" author="gagravarr" created="Wed, 14 Jul 2010 23:48:28 +0100"  >&lt;p&gt;I&apos;ve made the suggested enhancement to make Metadata.CREATION_DATE and Metadata.LAST_MODIFIED Date properties, with appropriate setters, getters and invalid logic. Committed in r964235. Now I just need to update the parsers to make use of this.&lt;/p&gt;</comment>
                            <comment id="12894877" author="solsson" created="Tue, 3 Aug 2010 13:35:26 +0100"  >&lt;p&gt;Jpeg parser (TiffExtractor.handleCommonImageTags and JpegParserTest) has the same issue.&lt;/p&gt;

&lt;p&gt;The test asserts for a date format that is not iso. The field&apos;s (DublinCore.DATE) javadoc says ISO 8601 so the test is clearly wrong. There is a &quot;TODO Make me a Date Property&quot; on it. I have code for parsing Metadata Extractor&apos;s date to ISO so I could fix this, but what field should we use? This issue discusses MSOffice.CREATION_DATE but I think DublinCore makes more sense for images. However Tika will be easier to use if there is only one creation date field.&lt;/p&gt;</comment>
                            <comment id="12898794" author="solsson" created="Mon, 16 Aug 2010 06:19:42 +0100"  >&lt;p&gt;Converted DublinCore.DATE to Property.internalDate in &lt;a href=&quot;http://github.com/solsson/tika/commit/2d637712053a758e7a6d5940c1a635615913056e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/solsson/tika/commit/2d637712053a758e7a6d5940c1a635615913056e&lt;/a&gt;&lt;br/&gt;
This affects parsers DcXML, Mbox, ooxml and image.&lt;/p&gt;

&lt;p&gt;This patch makes use of refactoring I did to get better access to the Metadata Extractor API, for example to getDate(tagType). I&apos;ll post these changes as a new ticket shortly.&lt;/p&gt;</comment>
                            <comment id="12899303" author="solsson" created="Tue, 17 Aug 2010 07:32:22 +0100"  >&lt;p&gt;Had to make a fix for the mbox format: &lt;a href=&quot;http://github.com/solsson/tika/commit/0b3eaa9f2dd927a14823fb519a168659ed4fa1c1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/solsson/tika/commit/0b3eaa9f2dd927a14823fb519a168659ed4fa1c1&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12905931" author="gagravarr" created="Fri, 3 Sep 2010 16:04:55 +0100"  >&lt;p&gt;I&apos;ve applied Staffan&apos;s patch as part of the larger changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-482&quot; title=&quot;Refactor image and jpeg parsers for access to MetadataExtractor API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-482&quot;&gt;&lt;del&gt;TIKA-482&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12906554" author="gagravarr" created="Mon, 6 Sep 2010 18:54:19 +0100"  >&lt;p&gt;I think all the key metadata keys are now defined as Date Properties, and all the main parsers are updated, so I believe this one is now resolved.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Jun 2010 14:58:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx3pj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16920</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>