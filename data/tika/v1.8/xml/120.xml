<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:33:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-120/TIKA-120.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-120] Add support for retrieving ID3 tags from MP3 files</title>
                <link>https://issues.apache.org/jira/browse/TIKA-120</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;It would be nice if Tika could retrieve ID3 tags from MP3 files.&lt;/p&gt;

&lt;p&gt;There are a number of libraries that could be used:&lt;br/&gt;
MyID3 (Apache License) &lt;a href=&quot;http://www.fightingquaker.com/myid3/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.fightingquaker.com/myid3/&lt;/a&gt;&lt;br/&gt;
jd3Lib (LGPL) &lt;a href=&quot;http://sourceforge.net/projects/jd3lib/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://sourceforge.net/projects/jd3lib/&lt;/a&gt;&lt;br/&gt;
javamusictag (LGPL) &lt;a href=&quot;http://javamusictag.sourceforge.net/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://javamusictag.sourceforge.net/&lt;/a&gt;&lt;br/&gt;
jaudiotagger (LGPL) &lt;a href=&quot;https://jaudiotagger.dev.java.net/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jaudiotagger.dev.java.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There might be others (with more Apache-friendly licenses).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12387802">TIKA-120</key>
            <summary>Add support for retrieving ID3 tags from MP3 files</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="litrik">Litrik De Roy</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Feb 2008 17:59:29 +0000</created>
                <updated>Fri, 22 May 2009 23:05:28 +0100</updated>
                            <resolved>Sun, 14 Sep 2008 13:10:38 +0100</resolved>
                                                    <fixVersion>0.2</fixVersion>
                                    <component>general</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12569709" author="jukkaz" created="Sun, 17 Feb 2008 15:26:02 +0000"  >&lt;p&gt;Agreed on the need for an MP3 parser. LGPL licensing is a bit troublesome for us, so MyID3 looks most promising of the libraries you listed. Perhaps we could get it uploaded to the central Maven repository for easier integration with the Tika build.&lt;/p&gt;</comment>
                            <comment id="12629585" author="davemeikle" created="Tue, 9 Sep 2008 20:49:47 +0100"  >&lt;p&gt;I have some C code that does ID3 tag parsing that I wrote some time ago. I could covert to Java and include this in TIKA if we want?&lt;/p&gt;

&lt;p&gt;Otherwise, if we get MyID3 uploaded I will code this up.&lt;/p&gt;</comment>
                            <comment id="12630042" author="davemeikle" created="Thu, 11 Sep 2008 01:07:33 +0100"  >&lt;p&gt;Patch to for discussion plus sample MP3 file with ID3v1 Tags for test-resources.&lt;/p&gt;</comment>
                            <comment id="12630102" author="davemeikle" created="Thu, 11 Sep 2008 07:05:54 +0100"  >&lt;p&gt;Incorrect copy of patch uploaded previously, correct copy uploaded now.&lt;/p&gt;</comment>
                            <comment id="12630745" author="jukkaz" created="Sat, 13 Sep 2008 09:45:35 +0100"  >&lt;p&gt;Looks great, thanks for the effort!&lt;/p&gt;

&lt;p&gt;Minor issues:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The stream.skip(stream.available() - 128) call may not do what you expect it to do (both skip and available are not very reliable). Are you trying to get the last 128 bytes of the stream?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;You&apos;ll want to use something like xhtml.element(&quot;p&quot;, tag.getArtist()) when generating the output. The first argument should be a valid XHTML element name.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12630747" author="davemeikle" created="Sat, 13 Sep 2008 09:58:28 +0100"  >&lt;ul&gt;
	&lt;li&gt;The stream.skip(stream.available() - 128) call may not do what you expect it to do (both skip and available are not very reliable). Are you trying to get the last 128 bytes of the stream?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Yes that is what I am trying to do.  Should I adopt the approach used in the AutoDetectParser.getPrefix() method?&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;You&apos;ll want to use something like xhtml.element(&quot;p&quot;, tag.getArtist()) when generating the output. The first argument should be a valid XHTML element name.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;OK, will update this.&lt;/p&gt;</comment>
                            <comment id="12630748" author="jukkaz" created="Sat, 13 Sep 2008 10:19:56 +0100"  >&lt;p&gt;&amp;gt; Should I adopt the approach used in the AutoDetectParser.getPrefix() method?&lt;/p&gt;

&lt;p&gt;Something like that would be good, though note that getting the suffix of a stream is a bit different from getting the prefix. Here&apos;s a quick (untested) draft:&lt;/p&gt;

&lt;p&gt;    private byte[] getSuffix(InputStream stream, int length) throws IOException {&lt;br/&gt;
        byte[] buffer = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;2 * length&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        int bytesInBuffer = 0;&lt;/p&gt;

&lt;p&gt;        int n = stream.read(buffer);&lt;br/&gt;
        while (n != -1) {&lt;br/&gt;
            bytesInBuffer += n;&lt;br/&gt;
            if (bytesInBuffer = buffer.length) &lt;/p&gt;
{
                System.arraycopy(buffer, bytesInBuffer - length, buffer, 0, length);
                bytesInBuffer = length; 
            }
&lt;p&gt;            n = stream.read(buffer, bytesInBuffer, buffer.length - bytesInBuffer);&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;        if (bytesInBuffer &amp;lt; length) &lt;/p&gt;
{
            length = bytesInBuffer;
        }

&lt;p&gt;        byte[] result = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;length&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        System.arraycopy(buffer, bytesInBuffer - length, result, 0, length);&lt;br/&gt;
        return result;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;Also, note that unlike in AutoDetectParser you don&apos;t need mark support or buffering this parser class.&lt;/p&gt;</comment>
                            <comment id="12630749" author="davemeikle" created="Sat, 13 Sep 2008 10:33:59 +0100"  >&lt;p&gt;Update to the original patch based on Jukka&apos;s comments.&lt;/p&gt;

&lt;p&gt;I was in the middle of coding it up but the draft method works a treat - not sure if we should refactor getPrefix() and getSuffix() into a utility class?&lt;/p&gt;</comment>
                            <comment id="12630757" author="jukkaz" created="Sat, 13 Sep 2008 11:50:47 +0100"  >&lt;p&gt;Looks good.&lt;/p&gt;

&lt;p&gt;Is the character encoding of the tags specified somewhere? We probably shouldn&apos;t just rely on the platform default encoding.&lt;/p&gt;

&lt;p&gt;BTW, do you know if MP3 files have a magic header that we could use for auto-detection?&lt;/p&gt;</comment>
                            <comment id="12630760" author="davemeikle" created="Sat, 13 Sep 2008 12:21:49 +0100"  >&lt;p&gt;The encoding should be ISO-8859-1 on ID3v1 tags if I remember correctly, but I cannot find the formal specification with this.&lt;/p&gt;

&lt;p&gt;The first 12 bytes should be set to 1 if I remember correctly.&lt;/p&gt;</comment>
                            <comment id="12630880" author="jukkaz" created="Sun, 14 Sep 2008 13:10:38 +0100"  >&lt;p&gt;Patch applied in revision 695159.&lt;/p&gt;

&lt;p&gt;I also followed up with some enhancements and extensions like explicitly using ISO-8859-1, adding Winamp genre extensions, supporting ID3v1.1 track additions, and adding some magic header patterns. Plus I added a more specific test case.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12390050" name="TIKA-120-II.diff" size="14733" author="davemeikle" created="Sat, 13 Sep 2008 10:33:59 +0100"/>
                            <attachment id="12389905" name="TIKA-120.diff" size="13683" author="davemeikle" created="Thu, 11 Sep 2008 07:05:54 +0100"/>
                            <attachment id="12389882" name="testMP3.zip" size="38417" author="davemeikle" created="Thu, 11 Sep 2008 01:07:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 17 Feb 2008 15:26:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4742</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx5qv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17250</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>