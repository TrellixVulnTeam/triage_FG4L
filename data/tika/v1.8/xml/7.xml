<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:31:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-7/TIKA-7.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-7] Lius Lite remove all lucene dependencies from Lius  and use Nutch office parsers</title>
                <link>https://issues.apache.org/jira/browse/TIKA-7</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Hi,&lt;br/&gt;
This is a work in progress of Lius. The release remove all Lucene dependencies and use Nutch Office parsers because they are based on Apache POI.&lt;br/&gt;
Lius Lite offer 4 ways  for content extraction :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Document fulltext extraction&lt;/li&gt;
	&lt;li&gt;XPath extraction&lt;/li&gt;
	&lt;li&gt;Regex extraction&lt;/li&gt;
	&lt;li&gt;Document metadata extraction (not implemented for all parsers)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Lius Lite use an XML config file to configure the parsers and the information to extract.  Please see config.xml in the config folder&lt;br/&gt;
See also Junit tests.&lt;br/&gt;
Here is an example  of XML parsing :&lt;br/&gt;
1- XML Config&lt;br/&gt;
		&amp;lt;parser name=&quot;text-xml&quot; class=&quot;liuslite.parser.xml.XMLParser&quot;&amp;gt;			&lt;br/&gt;
				&amp;lt;namespace&amp;gt;&lt;a href=&quot;http://purl.org/dc/elements/1.1/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://purl.org/dc/elements/1.1/&lt;/a&gt;&amp;lt;/namespace&amp;gt;&lt;br/&gt;
				&amp;lt;mime&amp;gt;application/xml&amp;lt;/mime&amp;gt;&lt;br/&gt;
				&amp;lt;extract&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;title&quot; xpathSelect=&quot;//dc:title&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;subject&quot; xpathSelect=&quot;//dc:subject&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;creator&quot; xpathSelect=&quot;//dc:creator&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;description&quot; xpathSelect=&quot;//dc:description&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;publisher&quot; xpathSelect=&quot;//dc:publisher&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;contributor&quot; xpathSelect=&quot;//dc:contributor&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;type&quot; xpathSelect=&quot;//dc:type&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;format&quot; xpathSelect=&quot;//dc:format&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;identifier&quot; xpathSelect=&quot;//dc:identifier&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;language&quot; xpathSelect=&quot;//dc:language&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;rights&quot; xpathSelect=&quot;//dc:rights&quot;/&amp;gt;&lt;br/&gt;
					&amp;lt;content name=&quot;outLinks&quot;&amp;gt;&lt;br/&gt;
						&amp;lt;regexSelect&amp;gt;&lt;br/&gt;
							&amp;lt;![CDATA[&lt;br/&gt;
								(&lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z0-9+.-&amp;#93;&lt;/span&gt;&lt;/p&gt;
{1,120}
&lt;p&gt;:&lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z0-9/&amp;#93;&lt;/span&gt;((&lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z0-9$_.+!*,;/?:@&amp;amp;~=-&amp;#93;&lt;/span&gt;)|%&lt;span class=&quot;error&quot;&gt;&amp;#91;A-Fa-f0-9&amp;#93;&lt;/span&gt;&lt;/p&gt;
{2}
&lt;p&gt;)&lt;/p&gt;
{1,333}
&lt;p&gt;(#(&lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z0-9&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z0-9$_.+!*,;/?:@&amp;amp;~=%-&amp;#93;&lt;/span&gt;&lt;/p&gt;
{0,1000}
&lt;p&gt;))?)&lt;br/&gt;
							]]&amp;gt;&lt;br/&gt;
						&amp;lt;/regexSelect&amp;gt;&lt;br/&gt;
					&amp;lt;/content&amp;gt;&lt;br/&gt;
				&amp;lt;/extract&amp;gt;			&lt;br/&gt;
		&amp;lt;/parser&amp;gt;&lt;/p&gt;

&lt;p&gt;2- XML Document&lt;br/&gt;
&amp;lt;oaidc:dc xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:oaidc=&quot;http://www.openarchives.org/OAI/2.0/oai_dc/&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;dc:title&amp;gt;Archim&#232;de et Lius&amp;lt;/dc:title&amp;gt;&lt;br/&gt;
	&amp;lt;dc:creator&amp;gt;Rida Benjelloun&amp;lt;/dc:creator&amp;gt;&lt;br/&gt;
	&amp;lt;dc:subject&amp;gt;Java&amp;lt;/dc:subject&amp;gt;&lt;br/&gt;
	&amp;lt;dc:subject&amp;gt;XML&amp;lt;/dc:subject&amp;gt;&lt;br/&gt;
	&amp;lt;dc:subject&amp;gt;XSLT&amp;lt;/dc:subject&amp;gt;&lt;br/&gt;
	&amp;lt;dc:subject&amp;gt;JDOM&amp;lt;/dc:subject&amp;gt;&lt;br/&gt;
	&amp;lt;dc:subject&amp;gt;Indexation&amp;lt;/dc:subject&amp;gt;&lt;br/&gt;
	&amp;lt;dc:description&amp;gt;Framework d&apos;indexation des documents XML, HTML, PDF etc.. &amp;lt;/dc:description&amp;gt;&lt;br/&gt;
	&amp;lt;dc:publisher&amp;gt;Doculibre&amp;lt;/dc:publisher&amp;gt;&lt;br/&gt;
	&amp;lt;dc:identifier&amp;gt;&lt;a href=&quot;http://www.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org&lt;/a&gt;&amp;lt;/dc:identifier&amp;gt;&lt;br/&gt;
	&amp;lt;dc:date&amp;gt;2000-12&amp;lt;/dc:date&amp;gt;&lt;br/&gt;
	&amp;lt;dc:type&amp;gt;test&amp;lt;/dc:type&amp;gt;&lt;br/&gt;
	&amp;lt;dc:format&amp;gt;application/msword&amp;lt;/dc:format&amp;gt;&lt;br/&gt;
	&amp;lt;dc:language&amp;gt;Fr&amp;lt;/dc:language&amp;gt;&lt;br/&gt;
	&amp;lt;dc:rights&amp;gt;Non restreint&amp;lt;/dc:rights&amp;gt;	&lt;br/&gt;
&amp;lt;/oaidc:dc&amp;gt;&lt;/p&gt;

&lt;p&gt;3- Java Code &lt;/p&gt;

&lt;p&gt;LiusConfig lc = LiusConfig.getInstance(configPathString);&lt;br/&gt;
LiusLogger.setLoggerConfigFile(log4jPathString);&lt;/p&gt;

&lt;p&gt;File testFile = new File(&quot;test.xml&quot;);&lt;br/&gt;
try &lt;/p&gt;
{
	Parser  parser = ParserFactory.getParser(testFile, lc);
        String fullText = parser.getContentStr();
        
        Content title = parser.getContent(&quot;title&quot;);
        String titleStr = title.getValue();
        
        Content subject = parser.getContent(&quot;subject&quot;);
        String[] subjects = subject.getValues();

        etc ...

        Or : 
        List&amp;lt;Content&amp;gt; contents = parser.getContents();
        
     }
&lt;p&gt; catch (MimeInfoException e) &lt;/p&gt;
{
	 e.printStackTrace();
     }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
	e.printStackTrace();
     }
&lt;p&gt; catch (LiusException e) &lt;/p&gt;
{
	e.printStackTrace();
      }


&lt;p&gt;best regards&lt;br/&gt;
Rida Benjelloun&lt;/p&gt;


</description>
                <environment>&lt;p&gt;Java 1.5&lt;/p&gt;</environment>
        <key id="12371329">TIKA-7</key>
            <summary>Lius Lite remove all lucene dependencies from Lius  and use Nutch office parsers</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="rbenjelloun">Rida Benjelloun</reporter>
                        <labels>
                    </labels>
                <created>Sun, 10 Jun 2007 06:23:52 +0100</created>
                <updated>Fri, 22 May 2009 23:06:07 +0100</updated>
                            <resolved>Fri, 17 Aug 2007 20:13:37 +0100</resolved>
                                                    <fixVersion>0.1-incubating</fixVersion>
                                    <component>general</component>
                        <due>Sun, 10 Jun 2007 07:00:00 +0000</due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12503154" author="rbenjelloun" created="Sun, 10 Jun 2007 06:29:12 +0100"  >&lt;p&gt;Lius Lite Source Code&lt;/p&gt;</comment>
                            <comment id="12504153" author="jukkaz" created="Wed, 13 Jun 2007 09:00:11 +0100"  >&lt;p&gt;Looks good! Some comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Could you move the code to the org.apache.tika.* namespace?&lt;/li&gt;
	&lt;li&gt;I don&apos;t think we need binaries at this point, so you could just upload the sources.&lt;/li&gt;
	&lt;li&gt;Do you have a (ant,maven,etc.) build script for the code? I guess we should integrate the build with the current Maven 2 setup in Tika.&lt;/li&gt;
	&lt;li&gt;(personal wish) Would it be possible to use spaces for indentation?&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12504159" author="jukkaz" created="Wed, 13 Jun 2007 09:15:27 +0100"  >&lt;p&gt;I took the sources (and associated config and test files) from liuslite.zip and placed them inside the svn trunk following the standard Maven 2 layout. See the attached liuslite.patch file for the result.&lt;/p&gt;

&lt;p&gt;Summary of changes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I replaced all tabs with four spaces each.&lt;/li&gt;
	&lt;li&gt;I placed liusLite/src/junit to src/test/java/org/apache/tika and mapped liuslite.junit to org.apache.tika&lt;/li&gt;
	&lt;li&gt;I placed the other liusLite/src subfolders to src/main/java/org/apache/tika and mapped liuslite.* to org.apache.tika.*&lt;/li&gt;
	&lt;li&gt;I placed liusLite/config to src/main/resources&lt;/li&gt;
	&lt;li&gt;I placed liusLite/testFiles to src/test/resources&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Finally I used &quot;svn add&quot; to mark the new files for version control and used &quot;svn diff&quot; from trunk to create the attached patch file.&lt;/p&gt;

&lt;p&gt;Note that the patch is not ready for inclusion, as it doesn&apos;t change pom.xml to include all the required dependencies. It should still help illustrate what I think the codebase should look like.&lt;/p&gt;</comment>
                            <comment id="12504246" author="chrismattmann" created="Wed, 13 Jun 2007 15:06:01 +0100"  >&lt;p&gt;Jukka,&lt;/p&gt;

&lt;p&gt; Thanks for spearheading the lead on this. I think it&apos;s important to note that patches to Tika should follow this type of standard layed out, e.g., use the org.apache.tika namespace, make sure that unit tests are placed in the right place, that resources are as well, etc. I am on travel right now, but I will take a look at this patch as soon as I get back to Los Angeles.&lt;/p&gt;

&lt;p&gt; One question I have is, have we standardized on the following issues (I know they were discussed at ApacheCon at the BoF, as I&apos;ve seen conversation on the dev list regarding it, however, I wasn&apos; there &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ):&lt;/p&gt;

&lt;p&gt;1. standardization of Parser interface?&lt;br/&gt;
2. control flow of Tika parsers (e.g., similar to Bertrand&apos;s email &lt;a href=&quot;http://www.nabble.com/-RT--Tika-framework-usage-scenario-tf3913308.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/-RT--Tika-framework-usage-scenario-tf3913308.html&lt;/a&gt;)&lt;br/&gt;
3. major features that we want for 0.1 release&lt;/p&gt;

&lt;p&gt; I think that these questions need to be answered before we move forward with more code development. I realize that I&apos;ve been out of the loop for a bit of time, however, I&apos;m starting to have some time now to get back into the loop &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; So, let&apos;s discuss. Here are my propositions for issues 1-3 above:&lt;/p&gt;

&lt;p&gt;1. I like Bertrand&apos;s idea of a pipeline-based Tika framework. I think that the &quot;ContentFilter&quot; that he proposes is essentially this Parser interface that we are talking about. Immediate questions that come to mind are:&lt;br/&gt;
  a. Could the ContentFilter be run in single filter mode, e.g., from the command line? I think that a use case for Tika should be that all parsers are executable in some fashion (even if only for testing) from the command line. The parsed content should be returned as some form of a Metadata object, in which the user can inspect the parsed information. Perhaps other information should be returned as well, but that&apos;s what I thought off of the top of my head.&lt;br/&gt;
  b. Would this pipeline model still support the use cases for Nutch, and other initial projects that we were targeting as customers of Tika? Nutch&apos;s parse plugins are currently more single content parsing plugins, however, I think they could still be handled by this pipeline framework. I just want to get everyone else&apos;s opinion on it?&lt;/p&gt;

&lt;p&gt;2. See my questions in #1 above&lt;br/&gt;
3. I think that we should plan to have the following features in the 0.1 release of Tika:&lt;br/&gt;
   a. Basic parsing capability, +1 for using pipelining, but we need to standardize the interfaces for those/talk about architecture&lt;br/&gt;
   b. Content Type identification (e.g., MimeType identification)&lt;br/&gt;
   c. Basic metadata extraction capabilities&lt;br/&gt;
   d. Limited set of known parsing of content types, e.g., HTML, and PDF&lt;/p&gt;


&lt;p&gt;What does everyone else think?&lt;/p&gt;</comment>
                            <comment id="12504254" author="jukkaz" created="Wed, 13 Jun 2007 15:21:27 +0100"  >&lt;p&gt;Let&apos;s move to the mailing list to discuss your points, as most of them are quite generic and not directly related to the code in here.&lt;/p&gt;

&lt;p&gt;&amp;gt; I think that these questions need to be answered before we move forward with more code development.&lt;/p&gt;

&lt;p&gt;I disagree. I would prefer to have some concrete code in SVN, and I think the stuff from Rida is a good starting point. Often it is much easier to discuss design issues if you have concrete code that you can point to as an example. I also much prefer an evolving codebase over a waterfall model where we first design the &quot;perfect&quot; architecture and only then start implementing it.&lt;/p&gt;</comment>
                            <comment id="12504261" author="bdelacretaz" created="Wed, 13 Jun 2007 15:36:00 +0100"  >&lt;p&gt;I agree with Juka that it&apos;s better to have some working code in SVN as soon as possible.&lt;/p&gt;

&lt;p&gt;That code might get completely rewritten along the way, but it will give us something concrete to play with and to exchange ideas.&lt;/p&gt;</comment>
                            <comment id="12520646" author="jukkaz" created="Fri, 17 Aug 2007 20:13:37 +0100"  >&lt;p&gt;Committed the liuslite.patch in revision 567100 and added the missing POM dependencies in revision 567106.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12359357" name="liusLite.zip" size="6749310" author="rbenjelloun" created="Sun, 10 Jun 2007 06:29:11 +0100"/>
                            <attachment id="12359576" name="liuslite.patch" size="181913" author="jukkaz" created="Wed, 13 Jun 2007 09:15:27 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 13 Jun 2007 08:00:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4855</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx6fz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17363</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>