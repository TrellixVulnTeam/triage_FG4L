<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:29:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-93/TIKA-93.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-93] OCR support</title>
                <link>https://issues.apache.org/jira/browse/TIKA-93</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;I don&apos;t know of any decent open source pure Java OCR libraries, but there are command line OCR tools like Tesseract (&lt;a href=&quot;http://code.google.com/p/tesseract-ocr/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/tesseract-ocr/&lt;/a&gt;) that could be invoked by Tika to extract text content (where available) from image files.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382308">TIKA-93</key>
            <summary>OCR support</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="chrismattmann">Chris A. Mattmann</assignee>
                                    <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                            <label>memex</label>
                    </labels>
                <created>Mon, 12 Nov 2007 02:06:21 +0000</created>
                <updated>Mon, 6 Apr 2015 18:05:16 +0100</updated>
                            <resolved>Fri, 19 Sep 2014 15:20:26 +0100</resolved>
                                                    <fixVersion>1.7</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>12</votes>
                                    <watches>32</watches>
                                                                <comments>
                            <comment id="12651448" author="jukkaz" created="Fri, 28 Nov 2008 01:39:21 +0000"  >&lt;p&gt;OCRopus (&lt;a href=&quot;http://code.google.com/p/ocropus/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/ocropus/&lt;/a&gt;) seems like a nice tool for this. It&apos;s a command like tool so we&apos;d need to use something like the ExternalParser class to use it, but the annotated HTML output it generates is already very close to what Tika uses, so the integration should be easy.&lt;/p&gt;</comment>
                            <comment id="12744429" author="jotzet" created="Tue, 18 Aug 2009 10:02:36 +0100"  >&lt;p&gt;are there any updates regarding this issue?&lt;/p&gt;</comment>
                            <comment id="12746586" author="jukkaz" created="Sun, 23 Aug 2009 11:51:13 +0100"  >&lt;p&gt;&amp;gt; are there any updates regarding this issue?&lt;/p&gt;

&lt;p&gt;Not really. I&apos;ve done some simple tests with ExternalParser invoking Tesseract and OCRopus, but neither is really suited for simple OOTB integration.&lt;/p&gt;

&lt;p&gt;I also tried the commercial Asprise OCR SDK (&lt;a href=&quot;http://asprise.com/product/ocr/index.php?lang=java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://asprise.com/product/ocr/index.php?lang=java&lt;/a&gt;) which was much easier to set up and get reasonable results from, but obviously it&apos;s something that we can&apos;t use in an Apache project.&lt;/p&gt;

&lt;p&gt;If someone wants to help with this, the first step would be to come up with reasonably simple steps to get a liberally licensed OCR engine like OCRopus installed and configured so that you can invoke it using a simple command line like &quot;ocr image.gif&quot; and get the extracted text on the standard output. It should work for at least a few simple test cases. Note that this work should be contributed back to the upstream project.&lt;/p&gt;

&lt;p&gt;Once we have something like that, we can move forward with integrating it to Tika.&lt;/p&gt;</comment>
                            <comment id="13016417" author="mlissner" created="Wed, 6 Apr 2011 17:09:34 +0100"  >&lt;p&gt;It&apos;s been a while since this bug has been visited. I have an upstream issue on my project that requires OCR, and it would be great if we could get this moving again. I don&apos;t have the resources to develop my own OCR system, so it would be amazing if somebody got it into Tika.&lt;/p&gt;</comment>
                            <comment id="13016789" author="gagravarr" created="Thu, 7 Apr 2011 10:59:08 +0100"  >&lt;p&gt;There&apos;s been a bit more work on the External Parser support (see &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-634&quot; title=&quot;Command Line Parser for Metadata Extraction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-634&quot;&gt;TIKA-634&lt;/a&gt;), which may make the calling more flexible.&lt;/p&gt;

&lt;p&gt;The main missing step at the moment is getting a single command line program we can run to do the OCR, as Jukka said likely using Tesseract or OCRopus. &lt;/p&gt;</comment>
                            <comment id="13125745" author="estahn" created="Wed, 12 Oct 2011 12:55:49 +0100"  >&lt;p&gt;You could use &lt;a href=&quot;http://documentcloud.github.com/docsplit/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;docsplit&lt;/a&gt; which is a wrapper around Tesseract and other tools but has probably a simpler API.&lt;/p&gt;</comment>
                            <comment id="13491996" author="chenpei" created="Wed, 7 Nov 2012 00:51:22 +0000"  >&lt;p&gt;Have you seen JavaOCR (pure java ocr and BSD licensed): &lt;a href=&quot;http://sourceforge.net/projects/javaocr/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://sourceforge.net/projects/javaocr/&lt;/a&gt;&lt;br/&gt;
I have not tried it out myself yet (looks like 1.0 was just released about 1 week ago).&lt;br/&gt;
I think a pure java implementation may be easier than forking another process (exec cpp) or introduce jni dependencies.&lt;br/&gt;
If interested, I could give it a whirl the next chance I get...&lt;/p&gt;</comment>
                            <comment id="13492336" author="jukkaz" created="Wed, 7 Nov 2012 13:31:38 +0000"  >&lt;p&gt;JavaOCR looks interesting, and it looks like it&apos;s also available on the central Maven repository.&lt;/p&gt;</comment>
                            <comment id="13543882" author="redguy666" created="Fri, 4 Jan 2013 13:45:01 +0000"  >&lt;p&gt;anything new in this topic? someone tried that JavaOCR library with success? Does anybody has working tika+ocr configuration?&lt;/p&gt;</comment>
                            <comment id="13553107" author="chenpei" created="Mon, 14 Jan 2013 20:56:59 +0000"  >&lt;p&gt;I tried their javaocr-20100605 release with just ascii scanned digits and it seems to worked as advertised.  It was fairly easy to use/setup- However, I noticed that their latest release have a lot of work geared towards android development.  I didn&apos;t get a chance to try integrating it with Tika yet however.&lt;br/&gt;
Are there any preferences on how it should flow in the context of Tika?&lt;/p&gt;</comment>
                            <comment id="13856214" author="surfie" created="Tue, 24 Dec 2013 07:48:32 +0000"  >&lt;p&gt;this feature is really useful and helpful.&lt;/p&gt;</comment>
                            <comment id="13894779" author="gsingers" created="Fri, 7 Feb 2014 18:00:00 +0000"  >&lt;p&gt;I&apos;m noodling around with producing a patch for this and have a few questions for the group:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Where in Tika do people usually put these kind of &quot;downstream&quot; tasks?  Presumably we would need to work with the mime type detection process to know that the input is something that is binary and potentially OCR-able.  I would imagine we would want something that inserts between Detection and Parsing.  I&apos;d also suggest we make it pluggable, so that we can support other OCR solutions.&lt;/li&gt;
	&lt;li&gt;Is anyone aware of anything in PDFBox that allows you to know if a document is an Image based PDF?&lt;/li&gt;
&lt;/ol&gt;



</comment>
                            <comment id="13895054" author="gsingers" created="Fri, 7 Feb 2014 21:19:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is anyone aware of anything in PDFBox that allows you to know if a document is an Image based PDF&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I figured this one out using the ExtractImages class included in PDFBox.&lt;/p&gt;</comment>
                            <comment id="13895057" author="chrismattmann" created="Fri, 7 Feb 2014 21:22:45 +0000"  >&lt;p&gt;Good work on #2 Grant. As for #1, you could take several paths like you mentioned:&lt;/p&gt;

&lt;p&gt;1. Build an OCR parser, and then intercept (using MIME detection/MAGIC and/or precedence; or by writing a custom Detector) the detection step to map your OCR parser to PDF files. &lt;/p&gt;

&lt;p&gt;2. Declare your Parser&apos;s support via its static SUPPORTED_TYPES for PDF related OCR.&lt;/p&gt;

&lt;p&gt;Happy to iterate with you on this.&lt;/p&gt;</comment>
                            <comment id="13895080" author="gsingers" created="Fri, 7 Feb 2014 21:37:26 +0000"  >&lt;p&gt;I thought about the Parser approach, but it doesn&apos;t really feel like a Parser.  That is, many different things may be images or have embedded images (PDFs, actual images like JPG, etc., embedded images in Word/PPT docs), so I want to take the MIME type and feed it, optionally to the OCR engine which extracts the images and produces one more items of text, which will give me back something I can then pass along to the Parser.&lt;/p&gt;

&lt;p&gt;So, for instance, in the case of a PPT with embedded images, you would:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Detect PPT&lt;/li&gt;
	&lt;li&gt;Extract/OCR Images&lt;/li&gt;
	&lt;li&gt;Feed to PPT/POI Parser&lt;/li&gt;
	&lt;li&gt;Obtain glory&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;In a generic sense, what is somewhat needed is a pipeline approach.  That being said, I&apos;ve already got one of those, I just want the library abstraction that Tika gives me to plug and play my OCR tool and get text out of it.&lt;/p&gt;

&lt;p&gt;An alternative would be that Parsers for MIME Types that allow for the content to be an image can optionally take in an OCR Engine and as they do their parsing, they look for images.&lt;/p&gt;

&lt;p&gt;BTW, for JavaOCR, the main issue seems to be getting training data for the image parsing.   Tesseract, on the other hand, has a rich set of models out of the box, but is written in C++ (although it has Java wrappers).&lt;/p&gt;</comment>
                            <comment id="13895083" author="chrismattmann" created="Fri, 7 Feb 2014 21:41:53 +0000"  >&lt;p&gt;Thanks Grant, obtaining glory is win. &lt;br/&gt;
Still sounds like a Parser to me though, but I&apos;ll be interested to see if you whip out some patches and what they would look like. The nice thing about Parsers is that they spit out XHTML and you can then transform it with ContentHandlers, which is where the real pipeline in Tika capabilities are. So moving into Parser ville gets you a pipeline effect downstream at least.&lt;/p&gt;</comment>
                            <comment id="13895205" author="gsingers" created="Fri, 7 Feb 2014 23:01:33 +0000"  >&lt;p&gt;Chris, are Parsers composable?  If it is a Parser, how do I make it work w/ all the different MIME types that have images?  (It&apos;s been a while since I&apos;ve contributed to Tika, so please bare with me).  Wouldn&apos;t we have one off code that essentially hacks in OCR to the various different parsers?  I&apos;m thinking there must be some way to normalize/simplify it.  I&apos;ll take a poke through the Parsers at a deeper level.  Maybe a Parser takes in an OCR Engine, which is an implementation of something like Tesseract or JavaOCR.&lt;/p&gt;</comment>
                            <comment id="13895212" author="chrismattmann" created="Fri, 7 Feb 2014 23:06:34 +0000"  >&lt;p&gt;Grant no problem at all and happy to bear with ya. It&apos;s been a while since I delved deep into the code myself &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
Parsers are composable, there is a CompositeParser here:&lt;br/&gt;
&lt;a href=&quot;http://tika.apache.org/1.4/api/org/apache/tika/parser/CompositeParser.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tika.apache.org/1.4/api/org/apache/tika/parser/CompositeParser.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So yeah you could have a OCRBaseParser extends CompositeParser and then calls super with the List&amp;lt;Parser&amp;gt; of parsers to call along with a specific MIMEregistry, etc.) And yep one could be Tesseract or JavaOCR, etc.&lt;/p&gt;</comment>
                            <comment id="13895241" author="gsingers" created="Fri, 7 Feb 2014 23:22:32 +0000"  >&lt;p&gt;Food for thought:&lt;/p&gt;

&lt;p&gt;We introduce OCRParser that extends Parser (and we&apos;d likely have a base class too)&lt;br/&gt;
In the Context, we set the instance, just like we do w/ the Parser.class:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;context.set(Parser.class, parser);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;i.e.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;context.set(OCRParser.class, ocrParser);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, we can, over time, add to the various parsers the ability, when detecting Image info, to apply the OCRParser in the context of the current parser.  So, for instance, the PDFParser, when detecting an Image could optionally extract text from the images.  The other benefit, here, of course, is that the OCRParser implementation will work independently on anything that is an Image.&lt;/p&gt;</comment>
                            <comment id="13895276" author="gsingers" created="Sat, 8 Feb 2014 00:00:28 +0000"  >&lt;p&gt;Well, Tesseract is out, at least as far as using Tess4j goes, as it has LGPL and BCL dependencies.  Ugh, especially since Tesseract itself is ASL.   And here Tesseract looks so promising, at least in my initial tests (compared to JavaOCR, which requires a bunch of training work up front)&lt;/p&gt;</comment>
                            <comment id="13895500" author="surfie" created="Sat, 8 Feb 2014 09:59:49 +0000"  >&lt;p&gt;BTW, does this feature support .TIFF format? we have a lot of files scanned into the computer as TIFF format.&lt;/p&gt;</comment>
                            <comment id="13895514" author="gsingers" created="Sat, 8 Feb 2014 11:13:23 +0000"  >&lt;p&gt;It can, via some ancient JavaIO stuff, which, in some cases, has some weird dependencies.  Still working this out, but the way this is shaping up is that it is all going to have to be very pluggable to avoid any of these cases.  If anyone is up for lobbying the Tess4J team to remove GPL/LGPL/viral dependencies, we&apos;d be in much better shape.&lt;/p&gt;</comment>
                            <comment id="13895630" author="gsingers" created="Sat, 8 Feb 2014 17:05:15 +0000"  >&lt;p&gt;Here is a &lt;em&gt;very&lt;/em&gt; early stage patch that creates a JavaOCR parser.  It is not integrated into any of the other parsers, yet.&lt;/p&gt;

&lt;p&gt;I also added Jacoco code coverage to the Parent POM so that we can now generate coverage reports.  For example:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;mvn verify  (from the top level)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Or, after running mvn test&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;mvn jacoco:check&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Once done, check the target/site/jacoco directory to see the reports.&lt;/p&gt;

&lt;p&gt;Not sure on Tika workflow for JIRA, but if someone wants to Assign this Issue to me, I&apos;ll take it the next few steps. &lt;/p&gt;</comment>
                            <comment id="13895689" author="gsingers" created="Sat, 8 Feb 2014 19:07:11 +0000"  >&lt;p&gt;Tests for the JavaOCRParser.  Next step is to start integrating into various other parsers.&lt;/p&gt;</comment>
                            <comment id="13895698" author="chrismattmann" created="Sat, 8 Feb 2014 19:25:06 +0000"  >&lt;p&gt;Hey Grant, patch is looking good! I will need to download it and test it out, but this is just based on a cursory inspection.&lt;br/&gt;
Some comments:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;what is the dependency on jacoco in tika-parent? That stuff seems orthogonal to the patch.&lt;/li&gt;
	&lt;li&gt;maybe think about providing the training directory as part of the ParseContext (maybe a property like o.a.tika.parser.ocr.trainingDataDirPath?)&lt;/li&gt;
	&lt;li&gt;dependency on custom external Maven repo &amp;#8211; myGrid &amp;#8211; any way to get the jar from the Central repo somewhere? we have made an effort in Tika to remove any specific deps on external repositories, see: &lt;a href=&quot;http://blog.sonatype.com/2010/03/why-external-repos-are-being-phased-out-of-central/#.UvaEN0JdWxU&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.sonatype.com/2010/03/why-external-repos-are-being-phased-out-of-central/#.UvaEN0JdWxU&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Looking great. Maybe we can get some of this in 1.6 even with the deps on the external repo but we need to get rid of those before releasing. I will try this out in a few hours! I&apos;m excited b/c I may even be able to use this for the homework assignments in my CS572 class on Search Engines where we look at FBI Vault PDF files! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;a href=&quot;http://www-scf.usc.edu/~csci572/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www-scf.usc.edu/~csci572/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13895715" author="gsingers" created="Sat, 8 Feb 2014 20:11:07 +0000"  >&lt;p&gt;This shows what I am thinking for integration with PDFParser.  Not sure if it fits with what others have in mind when it comes to how the OCRParser gets integrated.&lt;/p&gt;</comment>
                            <comment id="13895718" author="gsingers" created="Sat, 8 Feb 2014 20:16:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;what is the dependency on jacoco in tika-parent? That stuff seems orthogonal to the patch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I put that in so that I can measure whether I am testing sufficiently.  I can separate it out to a different patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;dependency on custom external Maven repo &#8211; myGrid &#8211; any way to get the jar from the Central repo somewhere? we have made an effort in Tika to remove any specific deps on external repositories&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could make that one optional.  All it does is add support for TIFF and a few other file formats that aren&apos;t part of the standard ImageIO.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;in my CS572 class on Search Engines where we look at FBI Vault PDF files!  &lt;a href=&quot;http://www-scf.usc.edu/~csci572/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www-scf.usc.edu/~csci572/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I read your abstract for your talk and checked out the Vault and thought it would be cool, too.  The main issue is that JavaOCR needs to be trained in order to work with that data set.  Tesseract, on the other hand, works for it, but alas, needs to be implemented as an OCRParser.  Since Tess4J has some bad deps, the only way I could see to do this is to exec the process or go write my own JNI integration for Tesseract.  The latter isn&apos;t likely to happen.  The former feels less than desirable, but would work.&lt;/p&gt;</comment>
                            <comment id="13895886" author="gsingers" created="Sun, 9 Feb 2014 12:20:02 +0000"  >&lt;p&gt;FYI: &lt;a href=&quot;http://roncemer.com/software-development/java-ocr/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://roncemer.com/software-development/java-ocr/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13895887" author="gsingers" created="Sun, 9 Feb 2014 12:30:34 +0000"  >&lt;p&gt;Not sure I am happy w/ the changes here yet, esp. the changes to the PDFParserConfig.  Probably need a more generic way of knowing whether we turn on/off OCR parsing.  I suppose that should go on the ParserContext, but it wasn&apos;t obvious to me how one should set boolean flags there.  Will poke around more.&lt;/p&gt;</comment>
                            <comment id="13895897" author="gagravarr" created="Sun, 9 Feb 2014 13:26:42 +0000"  >&lt;p&gt;Generally speaking, when a parser finds embedded resources, it calls out to the Parser on the context to have it processed. You could therefore set your OCR Parser there, and it&apos;d be called for all kinds of embedded resources. It can then OCR any suitable images it finds, and pass on everything else to another parser (eg DefaultParser) to have the non-OCR-able embedded parts handled (if required)&lt;/p&gt;

&lt;p&gt;To handle OCRing of top level content, eg images, you&apos;d need to register your OCR parser as the parser for those types, in place of (or possibly even wrapping) the default parser.&lt;/p&gt;</comment>
                            <comment id="13895898" author="gsingers" created="Sun, 9 Feb 2014 13:46:26 +0000"  >&lt;p&gt;Not sure if this is progress or not...  &lt;/p&gt;

&lt;p&gt;The testOCR.* files need to go in the parsers/src/test/resources/test-documents directory.&lt;/p&gt;

&lt;p&gt;Things that changed:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Moved config to ParseContext instead of one off implementation in PDFParserConfig.&lt;/li&gt;
	&lt;li&gt;Used the existing ParseContext for passing in the OCRParser instead of separate handling&lt;/li&gt;
	&lt;li&gt;Added some more test files.  Will upload them.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Things I could use help on:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Trying to get this integrated into the Office stuff.  I see the DELEGATING_PARSER capabilities for embedded extraction, but not quite sure about how to best leverage that.  See JavaOCRParserTest.testOCR for some attempts at setting up the test&lt;/li&gt;
	&lt;li&gt;Overall, my biggest lack of understanding is around how to configure this stuff.  As I see it, we need to be able to set 2 things:
	&lt;ol&gt;
		&lt;li&gt;The OCRParser or Delegatingparser.  I&apos;m not sure how embedded contexts are used in practice.  Note, some of the OCRParser implementations will require configuration/training before they can be used.&lt;/li&gt;
		&lt;li&gt;Whether or not to actually use the OCRParser (a boolean flag), as OCR is expensive and not everyone will want it for every doc, etc.&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13896339" author="tboehme" created="Mon, 10 Feb 2014 09:08:37 +0000"  >&lt;p&gt;I would like to give some comments on detecting/handling of image based PDFs because the proposed solution will only work with a subset of these kind of documents. First one could classify the image based PDF into 3 classes:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;image only (one image per page)&lt;/li&gt;
	&lt;li&gt;image with text overlay/underlay already produced by an OCR process&lt;/li&gt;
	&lt;li&gt;multiple images per page (instead of one full page image there are images per word/line/paragraph)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Thus from only testing for a page size image one does not known if we nevertheless have parseable text or if we have a class 3 document (in case of e.g. journals we might even have a full page background image). For an automatic classification one would need to first try to parse text in the standard way for a view pages. One should not expect image-only PDFs to contain no text - in some cases header/footer/page numbers are added as text whereas other content is only an image. An heuristic threshold are 60-80 characters per page below which we can assume to have an image PDF.&lt;br/&gt;
If a PDF is assumed to be an image PDF the pages should be &apos;printed&apos; into an image (in order to also handle class 3 documents and to keep mixed data (image + text)) and this image should be processed by OCR.&lt;/p&gt;

&lt;p&gt;Best,&lt;br/&gt;
Timo&lt;/p&gt;</comment>
                            <comment id="13896483" author="lfcnassif" created="Mon, 10 Feb 2014 13:19:15 +0000"  >&lt;p&gt;I have tried Tess4J a few months ago. The main problem was JVM crashes with some kinds of images, probably related with native code execution. So I changed to the Tesseract exec approach, that obviously did not cause JVM crashes. But the OCRing of a few images never terminates and some timeout control was necessary, like for other existing Tika parsers.&lt;/p&gt;</comment>
                            <comment id="13896506" author="gsingers" created="Mon, 10 Feb 2014 13:43:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;changed to the Tesseract exec approach&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you add it as a patch?  I was going to add it this week, but if you already have it, then it would save me some time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tboehme&quot; class=&quot;user-hover&quot; rel=&quot;tboehme&quot;&gt;Timo Boehme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All good insight.  I am not an OCR/Doc expert, so if you could update my patch w/ either comments on where this stuff should go or actual help on it, that would be awesome.  I would really love to see OCR support get in soon.&lt;/p&gt;</comment>
                            <comment id="13901483" author="lfcnassif" created="Fri, 14 Feb 2014 14:45:01 +0000"  >&lt;p&gt;Grant,&lt;/p&gt;

&lt;p&gt;Unfortunately I am currently busy to do a patch and my code is a bit application specific. For example, it saves the extracted text in an output folder to be displayed later to the user without the need to rerun OCR. But I can upload it if you think that will help.&lt;/p&gt;</comment>
                            <comment id="13903121" author="surfie" created="Mon, 17 Feb 2014 10:07:45 +0000"  >&lt;p&gt;will this great feature be released in revision 1.5?&lt;/p&gt;</comment>
                            <comment id="13903202" author="gsingers" created="Mon, 17 Feb 2014 12:50:22 +0000"  >&lt;p&gt;Frank, no, 1.5 is due out soon (already?) and this isn&apos;t close to being ready yet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lfcnassif&quot; class=&quot;user-hover&quot; rel=&quot;lfcnassif&quot;&gt;Luis Filipe Nassif&lt;/a&gt;: patches welcome!&lt;/p&gt;</comment>
                            <comment id="13904478" author="chrismattmann" created="Tue, 18 Feb 2014 19:45:09 +0000"  >&lt;p&gt;It&apos;s an awesome feature and we&apos;ll work our best to include it in 1.6.&lt;/p&gt;</comment>
                            <comment id="13908877" author="lfcnassif" created="Fri, 21 Feb 2014 22:11:21 +0000"  >&lt;p&gt;Another approach would be to include images and pdf into supportedTypes of OCRParser and call their respective parsers within the OCRParser, instead of modifying the code of existing parsers. &lt;/p&gt;

&lt;p&gt;About enabling and configuring the OCRParser, it could be included in tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser and could be passed a OCRConfig object via parseContext. If not passed, OCRParser could simply call the existing image or pdf parser.&lt;/p&gt;

&lt;p&gt;I agree with Timo that it would be better to print pdf to images rather than iterate over its objects, not for all pdfs but for those with few chars. A CharCountContentHandler could be used with PDFParser to test this.&lt;/p&gt;

&lt;p&gt;Finally, Tesseract already includes support for tif files.&lt;/p&gt;</comment>
                            <comment id="13909779" author="lfcnassif" created="Sun, 23 Feb 2014 14:28:52 +0000"  >&lt;p&gt;Patch with first version of a tesseract-ocr based OCRParser, with simple timeout control.&lt;/p&gt;</comment>
                            <comment id="13909780" author="lfcnassif" created="Sun, 23 Feb 2014 14:38:15 +0000"  >&lt;p&gt;We could populate metadata using existing image parsers. If ocr is not enabled, this parser could only populate image metadata. So we could list this parser in services/org.apache.tika.parser.Parser list without changing default image parsing.&lt;/p&gt;</comment>
                            <comment id="13909906" author="lfcnassif" created="Sun, 23 Feb 2014 21:25:10 +0000"  >&lt;p&gt;Better timeout control using FutureTask&lt;/p&gt;</comment>
                            <comment id="13937415" author="lfcnassif" created="Mon, 17 Mar 2014 02:30:03 +0000"  >&lt;p&gt;Did someone take a look at TesseractOCRParser.patch? I will be happy to improve it.&lt;/p&gt;</comment>
                            <comment id="13937431" author="chrismattmann" created="Mon, 17 Mar 2014 03:48:44 +0000"  >&lt;p&gt;It&apos;s looking good Luis! This seems to be a good case though for using Tika&apos;s External parser package:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tika.apache.org/1.5/api/org/apache/tika/parser/external/package-summary.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tika.apache.org/1.5/api/org/apache/tika/parser/external/package-summary.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I noticed that we are creating processes inside of the patch and it would be good maybe to simply make it leverage ExternalParser?&lt;br/&gt;
I&apos;m happy to work through an update to the patch to do that. Give me a day or so.&lt;/p&gt;</comment>
                            <comment id="13937753" author="lfcnassif" created="Mon, 17 Mar 2014 12:43:29 +0000"  >&lt;p&gt;Hi Chris,&lt;/p&gt;

&lt;p&gt;I noticed ExternalParser before. It would be very good to leverage it to start the OCR process, but Tesseract appends &quot;.txt&quot; to output filename and needs the environment variable TESSDATA_PREFIX to be setted up. Maybe updating ExternalParser to support an output filename suffix may be needed? And I tried to extend Grant&apos;s work, implementing OCRParser interface, so TesseractParser could also be used for images embedded into PDFs. Could that be done by leveraging ExternalParser?&lt;/p&gt;</comment>
                            <comment id="13937852" author="chrismattmann" created="Mon, 17 Mar 2014 14:23:05 +0000"  >&lt;p&gt;Hi Luis, yep those are some good ideas and we may need to extend ExternalParser here to provide those capabilities you&apos;re talking about. I&apos;ll see about extending it b/c I think it&apos;s the better way to go. Give me a day or so and I&apos;ll hopefully have something.&lt;/p&gt;</comment>
                            <comment id="13950218" author="anurag indu" created="Fri, 28 Mar 2014 00:43:55 +0000"  >&lt;p&gt;Hello All, I tried to use tesseract to extract all the images from the pdf and convert them to their text values. I am using a windows 8 laptop with i5, 8GB Ram and it takes 15 mins to process a single pdf. Could someone point to me to the issue with the code (added below). Where can i improve the performance. I am not using threading here.&lt;br/&gt;
List&amp;lt;?&amp;gt; pages = document.getDocumentCatalog().getAllPages();&lt;br/&gt;
		Iterator&amp;lt;?&amp;gt; iter = pages.iterator();&lt;br/&gt;
		StringBuilder text = new StringBuilder();&lt;br/&gt;
		while (iter.hasNext()) {&lt;br/&gt;
			PDPage page = (PDPage) iter.next();&lt;br/&gt;
			PDResources resources = page.getResources();&lt;br/&gt;
			Map&amp;lt;String, PDXObjectImage&amp;gt; pageImages = resources.getImages();&lt;br/&gt;
			if (pageImages != null) {&lt;br/&gt;
				Iterator&amp;lt;String&amp;gt; imageIter = pageImages.keySet().iterator();&lt;br/&gt;
				while (imageIter.hasNext()) {&lt;br/&gt;
					String key = (String) imageIter.next();&lt;br/&gt;
					PDXObjectImage image = (PDXObjectImage) pageImages.get(key);&lt;br/&gt;
					image.write2file(key);&lt;br/&gt;
					Runtime rt = Runtime.getRuntime();&lt;br/&gt;
					String command = &quot;\&quot;&quot;+ tessPath +&quot;\&quot; \&quot;&quot;&lt;br/&gt;
							+ key + &quot;.tiff\&quot; out&quot;;&lt;br/&gt;
					Process pr = rt.exec(command);&lt;br/&gt;
					try &lt;/p&gt;
{
						result = pr.waitFor();
					}
&lt;p&gt; catch (InterruptedException e) &lt;/p&gt;
{
						e.printStackTrace();
					}
&lt;p&gt;					if (result == 0) &lt;/p&gt;
{
						String x = readFile(&quot;out.txt&quot;, Charset.defaultCharset());
						text.append(x);
					}

&lt;p&gt;					new File(key + &quot;.tiff&quot;).delete();&lt;br/&gt;
					new File(&quot;out.txt&quot;).delete();&lt;br/&gt;
				}&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;/p&gt;</comment>
                            <comment id="13950487" author="tboehme" created="Fri, 28 Mar 2014 08:27:04 +0000"  >&lt;p&gt;Hi Anurag, which PDF are you referring to? Without knowing the size, page count and structure of the pages it is hard to say what is going wrong. For instance it could be as I already wrote in my last comment that the pages contain a large number of images (e.g. one per word or chunk) instead of a single one per page. Try to print the PDF to images (one per page) and run this through Tesseract.&lt;/p&gt;</comment>
                            <comment id="14011535" author="tpalsulich" created="Wed, 28 May 2014 21:28:52 +0100"  >&lt;p&gt;Are there any updates with this? I&apos;m interested in getting OCR working. Are you building Tessaract from source, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lfcnassif&quot; class=&quot;user-hover&quot; rel=&quot;lfcnassif&quot;&gt;Luis Filipe Nassif&lt;/a&gt;? &lt;/p&gt;</comment>
                            <comment id="14011804" author="chrismattmann" created="Thu, 29 May 2014 00:23:12 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tpalsulich&quot; class=&quot;user-hover&quot; rel=&quot;tpalsulich&quot;&gt;Tyler Palsulich&lt;/a&gt; haven&apos;t worked on this in a while but it&apos;s awesome and I&apos;d love to get it in the sources. I would try and build Tessarct from source, and try the latest patch and let me know what you see?&lt;/p&gt;</comment>
                            <comment id="14012011" author="lfcnassif" created="Thu, 29 May 2014 04:11:05 +0100"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tpalsulich&quot; class=&quot;user-hover&quot; rel=&quot;tpalsulich&quot;&gt;Tyler Palsulich&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;If you want to try the TesseractOCRParser.patch, you can simply install Tesseract. I implemented the OCRParser interface created by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gsingers&quot; class=&quot;user-hover&quot; rel=&quot;gsingers&quot;&gt;Grant Ingersoll&lt;/a&gt; in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93&quot; title=&quot;OCR support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-93&quot;&gt;&lt;del&gt;TIKA-93&lt;/del&gt;&lt;/a&gt;.patch, but it is not mandatory. You can skip the &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93&quot; title=&quot;OCR support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-93&quot;&gt;&lt;del&gt;TIKA-93&lt;/del&gt;&lt;/a&gt;.patch simply changing the TesseractOCRParser class to extend AbstractParser instead of implementing OCRParser. To enable the new parser, you must list it in  tika-parsers/src/main/resources/META-INF/services/org.apache.tika.parser.Parser and set a TesseractOCRConfig in the parseContext:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
TesseractOCRConfig config = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TesseractOCRConfig();
&lt;span class=&quot;code-comment&quot;&gt;//Needed &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; tesseract is not on system PATH
&lt;/span&gt;config.setTesseractPath(tesseractFolder);
parseContext.set(TesseractOCRConfig.class, config);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So it will be enabled and automatically run on images, including embedded ones.&lt;/p&gt;</comment>
                            <comment id="14012452" author="tpalsulich" created="Thu, 29 May 2014 16:36:22 +0100"  >&lt;p&gt;Thanks for the help! I applied the patch. But, there are two copies of each class in the patch. Is that intentional? I just deleted one of the copies. I installed Tesseract and added the TesseractOCRParser to the META-INF file, but OCR isn&apos;t running on the example PDF. Should I be using an AutoDetectParser? I put my parse-only test below (I put testOCR.pdf in test-documents/ocr/ since it was messing with PDFParserTest.)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testPDFOCR() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        Parser parser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AutoDetectParser();
        BodyContentHandler handler = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BodyContentHandler();
        Metadata metadata = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Metadata();

        TesseractOCRConfig config = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TesseractOCRConfig();   &lt;span class=&quot;code-comment&quot;&gt;// Have Tesseract on my PATH.
&lt;/span&gt;        ParseContext parseContext = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseContext();
        parseContext.set(TesseractOCRConfig.class, config);

        InputStream stream = TesseractOCRTest.class.getResourceAsStream(
                &lt;span class=&quot;code-quote&quot;&gt;&quot;/test-documents/ocr/testOCR.pdf&quot;&lt;/span&gt;);

        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            parser.parse(stream, handler, metadata, parseContext);
        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
            stream.close();
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14012525" author="lfcnassif" created="Thu, 29 May 2014 17:56:20 +0100"  >&lt;p&gt;It was not intentional, the patch should have only one copy of each class, I will fix it, thank you. You can use an AutoDetectParser to automatically process the PDF. But you must tell Tika what parser it have to use to process embedded files (eg images). If you want to only run OCR on embedded images:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
parseContext.set(Parser.class, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TesseractOCRParser());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you want to process any kind of embedded file:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
parseContext.set(Parser.class, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AutoDetectParser());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But by default, trunk currently does not extract images from PDF files, see &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1294&quot; title=&quot;Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1294&quot;&gt;&lt;del&gt;TIKA-1294&lt;/del&gt;&lt;/a&gt;. Try to turn it on with this code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
PDFParserConfig pdfConfig = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PDFParserConfig();
pdfConfig.setExtractInlineImages(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
parseContext.set(PDFParserConfig.class, pdfConfig);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Let me know if this helps.&lt;/p&gt;</comment>
                            <comment id="14012641" author="tpalsulich" created="Thu, 29 May 2014 19:07:59 +0100"  >&lt;p&gt;Awesome! I attached another patch which includes TesseractOCRParser.patch with unit tests for the parser (PDF, PPTX, and DOCX files with embedded images with text). We could use more tests for images with no next, blurry text, and so on. But, I don&apos;t know how good Tesseract is.&lt;/p&gt;

&lt;p&gt;Steps to apply this patch: install Tesseract [1], apply the patch, move the test files into tika-parsers/src/test/resources/test-documents/ocr. Run the tests with &lt;tt&gt;mvn test -Dtest=org.apache.tika.parser.ocr.TesseractOCRTest -DfailIfNoTests=false&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;What needs to happen from here? How should we include Tesseract in the sources? How should we handle timeouts (give the user a warning that OCR can be slow/timed out)?&lt;/p&gt;

&lt;p&gt;[1] - &lt;a href=&quot;https://code.google.com/p/tesseract-ocr/wiki/ReadMe&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://code.google.com/p/tesseract-ocr/wiki/ReadMe&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14012810" author="lfcnassif" created="Thu, 29 May 2014 21:06:57 +0100"  >&lt;p&gt;Thank you very much &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tpalsulich&quot; class=&quot;user-hover&quot; rel=&quot;tpalsulich&quot;&gt;Tyler Palsulich&lt;/a&gt; for including unit tests! We could also include tests for normal images (not embedded).&lt;/p&gt;

&lt;p&gt;There is a simple timeout control that throws a TikaException with specific message if it happens. The idea to force setting a TesseractOCRConfig object in parseContext to run OCR is to not affect users that do not want OCR, exactly because it could take seconds, even minutes. So TesseractOCRParser can be included in Tika Parser list by default with no problem. We also could include a warning about OCR slowness in the class description.&lt;/p&gt;

&lt;p&gt;I have no idea how to include Tesseract in the sources. Maybe Tika commiters can help with this?&lt;/p&gt;</comment>
                            <comment id="14025853" author="tpalsulich" created="Mon, 9 Jun 2014 23:22:34 +0100"  >&lt;p&gt;Minor updates to the patch: Moved the OCRParser to tika-parsers (unless others think it should be in tika-core?), moved the files from test-documents/ocr to just test-documents.&lt;br/&gt;
In PDFParserTest, I added testOCR.pdf to the list of known metadataDiff, since the PDF version is different for the NonSeq and Seq PDFBox parsers.&lt;/p&gt;

&lt;p&gt;In tika-server TikaMimeTypesTest, I changed testGetJSON() &amp;#8211; will someone look at this part? Something seems weird about it.&lt;/p&gt;

&lt;p&gt;There still needs to be a check for if Tesseract is installed, and where. I looked a bit at the ExternalParser code &amp;#8211; it seems useful, but I&apos;m not sure how to combine TesseractOCRParser and ExternalParser. Can someone else chime in? At this point, I don&apos;t think we need more than a call to ExternalParser.check(). But, I could be wrong.&lt;/p&gt;

&lt;p&gt;In my opinion, we should just require that Tesseract be on the user&apos;s path. It&apos;s an uncommon program. So, if a user installs it, it will probably be &lt;b&gt;for&lt;/b&gt; Tika OCR. So, it&apos;s not a big deal for them to put it on their path.&lt;/p&gt;

&lt;p&gt;I put up a review: &lt;a href=&quot;https://reviews.apache.org/r/22402/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/22402/&lt;/a&gt;. I don&apos;t think this is ready yet, but I&apos;d like to get it moving.&lt;/p&gt;</comment>
                            <comment id="14027139" author="lfcnassif" created="Tue, 10 Jun 2014 23:28:30 +0100"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tpalsulich&quot; class=&quot;user-hover&quot; rel=&quot;tpalsulich&quot;&gt;Tyler Palsulich&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I think the option to configure tesseract path is very useful. For example, I can distribute tesseract binaries together with my  app and do not need to change environment variables on the end user os.&lt;/p&gt;</comment>
                            <comment id="14033459" author="chrismattmann" created="Tue, 17 Jun 2014 06:52:44 +0100"  >&lt;p&gt;Thanks Tyler I will look at the review board now!&lt;/p&gt;</comment>
                            <comment id="14093987" author="yonyonson" created="Tue, 12 Aug 2014 12:42:46 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chrismattmann&quot; class=&quot;user-hover&quot; rel=&quot;chrismattmann&quot;&gt;Chris A. Mattmann&lt;/a&gt;, do you know when we can expect this OCR parser to appear in Tika&apos;s SVN repo?&lt;/p&gt;</comment>
                            <comment id="14094868" author="tpalsulich" created="Wed, 13 Aug 2014 00:14:47 +0100"  >&lt;p&gt;OCR via Tesseract should be in trunk within a week. Have you tested out this patch?&lt;/p&gt;</comment>
                            <comment id="14097236" author="yonyonson" created="Thu, 14 Aug 2014 18:19:36 +0100"  >&lt;p&gt;Yes, I am trying it out now. Will write here as soon as I&apos;d get results.&lt;/p&gt;</comment>
                            <comment id="14097575" author="tpalsulich" created="Thu, 14 Aug 2014 21:21:29 +0100"  >&lt;p&gt;Awesome. Thank you, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yonyonson&quot; class=&quot;user-hover&quot; rel=&quot;yonyonson&quot;&gt;Petr Vas&lt;/a&gt;! Let me know if you have any issues.&lt;/p&gt;</comment>
                            <comment id="14102124" author="yonyonson" created="Tue, 19 Aug 2014 12:16:17 +0100"  >&lt;p&gt;Ok. I have managed to get TesseractOCRParser working through tika-server with custom tika-config.xml.&lt;/p&gt;

&lt;p&gt;The only thing that I have had to change in code was initialization of TesseractOCRConfig in parse method (line 114 in TesseractOCRParser.java). Instead of returning after getting null config from ParseContext it initializes with new TesseractOCRConfig(). Line 114 in TesseractOCRParser.java looks like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    		config = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TesseractOCRConfig();&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This made one of the test fail (testPPTXThumbnail in OOXMLParserTest) therefore this code must not be sent merged further in main, but if fits pertectly for my personal aims.&lt;/p&gt;

&lt;p&gt;I have also managed to make use of both PDFBox and TesseractOCRParser parsers for PDFs by disabling magic detection and binding PDFs that are to be OCRed to a specific MIME type (application/pdf-ocr). I can share my tika-config.xml in case this is of interest. I can see that there is work being done on making seamless integration between PDFBox and Tesseract as a part of GSoC 2014 ( &lt;a href=&quot;https://issues.apache.org/jira/browse/PDFBOX-1912&quot; title=&quot;Optical Character Recognition (OCR)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PDFBOX-1912&quot;&gt;PDFBOX-1912&lt;/a&gt; ), but it is not over and it is not clear whether it would be ever over.&lt;/p&gt;

&lt;p&gt;In general I am wondering about how can I define ParseContext in tika-server, so that I can skip hacking code and make tesseract configurable outside of source code? Any ideas/pointers here?&lt;/p&gt;</comment>
                            <comment id="14102175" author="rgauss" created="Tue, 19 Aug 2014 13:52:07 +0100"  >&lt;p&gt;Can you create a config object and pass that in the &lt;tt&gt;ParseContext&lt;/tt&gt;, similar to what &lt;a href=&quot;https://svn.apache.org/repos/asf/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;PDFParser&lt;/tt&gt;&lt;/a&gt; does with a &lt;a href=&quot;https://svn.apache.org/repos/asf/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;PDFParserConfig&lt;/tt&gt;&lt;/a&gt; entry?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;//config from context, or &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not set via context
&lt;/span&gt;PDFParserConfig localConfig = context.get(PDFParserConfig.class, defaultConfig);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14102181" author="yonyonson" created="Tue, 19 Aug 2014 14:03:05 +0100"  >&lt;p&gt;That is basically what I am doing. Here is an original (Tyler&apos;s) version of code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    	TesseractOCRConfig config = context.get(TesseractOCRConfig.class);
    	&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(config == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
    		&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We just return from parse method here if we can&apos;t get config. I have replaced this with default config initialization that is already built up by the contructor of the TesseractOCRConfig class:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    	TesseractOCRConfig config = context.get(TesseractOCRConfig.class);
    	&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(config == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
    		config = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TesseractOCRConfig();&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14102193" author="rgauss" created="Tue, 19 Aug 2014 14:12:35 +0100"  >&lt;p&gt;Apologies, jumped in late and only glanced at the comment thread.&lt;/p&gt;</comment>
                            <comment id="14103563" author="yonyonson" created="Wed, 20 Aug 2014 08:35:33 +0100"  >&lt;p&gt;No problem )&lt;/p&gt;</comment>
                            <comment id="14106087" author="tpalsulich" created="Thu, 21 Aug 2014 23:41:28 +0100"  >&lt;p&gt;Kevin Slote:&lt;br/&gt;
&amp;gt; Is Tesseract in the trunk?  If so where can I find it?  Also, Petr, would&lt;br/&gt;
&amp;gt; you mind posting your tika-config.xml?&lt;/p&gt;

&lt;p&gt;No, Tesseract is not in trunk. See how to apply the patch at &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;: &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93?focusedCommentId=14012641&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14012641&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/TIKA-93?focusedCommentId=14012641&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14012641&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14106592" author="yonyonson" created="Fri, 22 Aug 2014 08:33:47 +0100"  >&lt;p&gt;Sure, here is config.&lt;br/&gt;
Source code that I am currently using cn be found here: &lt;a href=&quot;https://github.com/datanav/tika/tree/ocr-tika-server&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/datanav/tika/tree/ocr-tika-server&lt;/a&gt; (forked version of Apache&apos;s repo with custom branch)&lt;/p&gt;</comment>
                            <comment id="14132881" author="tpalsulich" created="Sat, 13 Sep 2014 19:47:57 +0100"  >&lt;p&gt;I&apos;ve started working on this again. It works well when Tesseract is installed and configured properly, but how should we handle when it&apos;s not installed? My thinking was changing `TesseractOCRParser` to extend `ExternalParser` and add a call to `ExternalParser.check()` before anything in `TesseractOCRParser.doOCR()`. Then, if `tesseract` fails the check, `throw new TikaException(&quot;Tesseract is unavailable&quot;)`.&lt;/p&gt;

&lt;p&gt;I&apos;m having two problems with this solution. One, `TikaException`s are also thrown if OCR times out. So, the exceptions could be more granular. Two, even if we throw a `TikaException` from `TesseractOCRParser.parse()` (possibly bubbled up from a `doOCR()` call), the exception is caught (somewhere) before reaching the top call from a unit test... So, we can&apos;t check we should actually fail the test or not.&lt;/p&gt;

&lt;p&gt;Any thoughts on this? The main blocker right now is unit tests &amp;#8211; they pass when Tesseract is installed, fail when it isn&apos;t. How should we handle that?&lt;/p&gt;

&lt;p&gt;Edit: Another idea from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chrismattmann&quot; class=&quot;user-hover&quot; rel=&quot;chrismattmann&quot;&gt;Chris A. Mattmann&lt;/a&gt;: We could do the external check in the unit test. So, if `tesseract` is not on the path, we pass the test. Otherwise, let it continue as normal. This would work. Any other ideas/input?&lt;/p&gt;</comment>
                            <comment id="14133962" author="lfcnassif" created="Mon, 15 Sep 2014 15:44:19 +0100"  >&lt;p&gt;Another not related idea is to call the supported ImageParser inside TesseractOCRParser so it could extract image metadata too. With this we can list TesseractOCRParser in the default service provider parser list by default and the image tests will pass. OCR could be disabled by default and be enabled through ocrParserConfig.&lt;/p&gt;</comment>
                            <comment id="14134596" author="tpalsulich" created="Mon, 15 Sep 2014 23:24:08 +0100"  >&lt;p&gt;Updated patch which passes all tests whether Tesseract is installed or not. I updated the review board, too. See &lt;a href=&quot;https://reviews.apache.org/r/22402/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/22402/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, whoops, I hit a hotkey to assign the issue to me.&lt;/p&gt;</comment>
                            <comment id="14134822" author="rgauss" created="Tue, 16 Sep 2014 02:49:35 +0100"  >&lt;p&gt;You could use &lt;a href=&quot;http://stackoverflow.com/questions/1689242/conditionally-ignoring-tests-in-junit-4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;org.junit.Assume&lt;/tt&gt;&lt;/a&gt; so the tests will be skipped rather than reported as passing.&lt;/p&gt;

&lt;p&gt;Perhaps we should consider the Maven Failsafe Plugin as well?&lt;/p&gt;</comment>
                            <comment id="14139597" author="tpalsulich" created="Thu, 18 Sep 2014 23:05:07 +0100"  >&lt;p&gt;Thank you for the input! I attached a new patch (v4) which uses `junit.Assume` to ignore the tests if Tesseract is not installed and cleans up some of the Exception throwing. &lt;/p&gt;</comment>
                            <comment id="14140060" author="chrismattmann" created="Fri, 19 Sep 2014 07:15:45 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tpalsulich&quot; class=&quot;user-hover&quot; rel=&quot;tpalsulich&quot;&gt;Tyler Palsulich&lt;/a&gt; tested on my machine with brew install tesseract. Works great! Reviewed patch too ship it!&lt;/p&gt;</comment>
                            <comment id="14140635" author="tpalsulich" created="Fri, 19 Sep 2014 15:20:26 +0100"  >&lt;p&gt;Added in r1626226. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lfcnassif&quot; class=&quot;user-hover&quot; rel=&quot;lfcnassif&quot;&gt;Luis Filipe Nassif&lt;/a&gt; and everyone!&lt;/p&gt;</comment>
                            <comment id="14140649" author="gsingers" created="Fri, 19 Sep 2014 15:34:29 +0100"  >&lt;p&gt;Very cool!  Thanks for following through on this!&lt;/p&gt;</comment>
                            <comment id="14140679" author="hudson" created="Fri, 19 Sep 2014 15:50:12 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #216 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/216/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/216/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93&quot; title=&quot;OCR support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-93&quot;&gt;&lt;del&gt;TIKA-93&lt;/del&gt;&lt;/a&gt;, create a new Tesseract OCR Parser. (tpalsulich: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626226&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626226&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/ocr&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/ocr&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/ocr/TesseractOCRTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/resources/test-documents/testOCR.docx&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/resources/test-documents/testOCR.pdf&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/resources/test-documents/testOCR.pptx&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14140702" author="hudson" created="Fri, 19 Sep 2014 16:05:46 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #194 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/194/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/194/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93&quot; title=&quot;OCR support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-93&quot;&gt;&lt;del&gt;TIKA-93&lt;/del&gt;&lt;/a&gt;, create a new Tesseract OCR Parser. (tpalsulich: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626226&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626226&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/ocr&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/ocr&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/ocr/TesseractOCRTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/resources/test-documents/testOCR.docx&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/resources/test-documents/testOCR.pdf&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/resources/test-documents/testOCR.pptx&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14141616" author="hudson" created="Sat, 20 Sep 2014 01:42:22 +0100"  >&lt;p&gt;FAILURE: Integrated in tika-trunk-jdk1.7 #220 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/220/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/220/&lt;/a&gt;)&lt;br/&gt;
Fix Tika Mime Type post &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93&quot; title=&quot;OCR support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-93&quot;&gt;&lt;del&gt;TIKA-93&lt;/del&gt;&lt;/a&gt;. (mattmann: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626374&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626374&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-server/src/test/java/org/apache/tika/server/TikaMimeTypesTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14141631" author="hudson" created="Sat, 20 Sep 2014 01:59:19 +0100"  >&lt;p&gt;FAILURE: Integrated in tika-trunk-jdk1.6 #198 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/198/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/198/&lt;/a&gt;)&lt;br/&gt;
Fix Tika Mime Type post &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-93&quot; title=&quot;OCR support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-93&quot;&gt;&lt;del&gt;TIKA-93&lt;/del&gt;&lt;/a&gt;. (mattmann: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626374&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1626374&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-server/src/test/java/org/apache/tika/server/TikaMimeTypesTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14162565" author="twigbranch" created="Tue, 7 Oct 2014 22:26:11 +0100"  >&lt;p&gt;Just installed tesseract, maven2, and tika on osx 10.9.  It looks like the TesseractOCR parser was installed (3 tests were run, taking about 4 seconds).  When I run &quot;java -jar tika-app/target/tika-app-1.7-SNAPSHOT.jar&quot; on a test PDF (scanned) the metadata is parsed, but there&apos;s no body text.  The pdf is only parsed by the following:&lt;br/&gt;
&amp;lt;meta name=&quot;X-Parsed-By&quot; content=&quot;org.apache.tika.parser.DefaultParser&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;meta name=&quot;X-Parsed-By&quot; content=&quot;org.apache.tika.parser.pdf.PDFParser&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;Do I need to do something in particular to invoke the tesseract ocr parser?&lt;/p&gt;</comment>
                            <comment id="14162577" author="tpalsulich" created="Tue, 7 Oct 2014 22:32:31 +0100"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=twigbranch&quot; class=&quot;user-hover&quot; rel=&quot;twigbranch&quot;&gt;Stef Ald&lt;/a&gt;. OCR is not currently run on embedded images by default. You can see an example (in Java) of enabling OCR on embedded images in the TesseractOCRTest. So, tika-app currently will only run OCR on direct image files. Have you tried that?&lt;/p&gt;</comment>
                            <comment id="14162627" author="twigbranch" created="Tue, 7 Oct 2014 22:54:48 +0100"  >&lt;p&gt;OK, Thanks. Works for me with tika-app on JPG and PNG (not on TIFF). &lt;/p&gt;</comment>
                            <comment id="14168926" author="chrismattmann" created="Mon, 13 Oct 2014 04:32:31 +0100"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=twigbranch&quot; class=&quot;user-hover&quot; rel=&quot;twigbranch&quot;&gt;Stef Ald&lt;/a&gt; thanks for the comment, please see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.apache.org/tika/TikaOCR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://wiki.apache.org/tika/TikaOCR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you sure you have installed Tesseract with TIFF support? The wiki page above has some instructions for Mac and brew to get Tesseract with libTIFF.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12503081">TIKA-630</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12768065">SOLR-6991</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12769145">TIKA-1526</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12663614" name="Petr_tika-config.xml" size="1261" author="yonyonson" created="Fri, 22 Aug 2014 08:33:47 +0100"/>
                            <attachment id="12627864" name="TIKA-93.patch" size="41414" author="gsingers" created="Sun, 9 Feb 2014 13:46:26 +0000"/>
                            <attachment id="12627831" name="TIKA-93.patch" size="38510" author="gsingers" created="Sat, 8 Feb 2014 20:11:07 +0000"/>
                            <attachment id="12627827" name="TIKA-93.patch" size="28257" author="gsingers" created="Sat, 8 Feb 2014 19:07:11 +0000"/>
                            <attachment id="12627823" name="TIKA-93.patch" size="21916" author="gsingers" created="Sat, 8 Feb 2014 17:05:15 +0000"/>
                            <attachment id="12630583" name="TesseractOCRParser.patch" size="25326" author="lfcnassif" created="Sun, 23 Feb 2014 21:25:10 +0000"/>
                            <attachment id="12630561" name="TesseractOCRParser.patch" size="26526" author="lfcnassif" created="Sun, 23 Feb 2014 14:28:52 +0000"/>
                            <attachment id="12647407" name="TesseractOCR_Tyler.patch" size="16935" author="tpalsulich" created="Thu, 29 May 2014 19:07:59 +0100"/>
                            <attachment id="12649473" name="TesseractOCR_Tyler_v2.patch" size="18377" author="tpalsulich" created="Mon, 9 Jun 2014 23:22:34 +0100"/>
                            <attachment id="12668885" name="TesseractOCR_Tyler_v3.patch" size="20593" author="tpalsulich" created="Mon, 15 Sep 2014 23:24:08 +0100"/>
                            <attachment id="12669825" name="TesseractOCR_Tyler_v4.patch" size="20109" author="tpalsulich" created="Thu, 18 Sep 2014 23:05:07 +0100"/>
                            <attachment id="12627865" name="testOCR.docx" size="62041" author="gsingers" created="Sun, 9 Feb 2014 13:46:26 +0000"/>
                            <attachment id="12627866" name="testOCR.pdf" size="41936" author="gsingers" created="Sun, 9 Feb 2014 13:46:26 +0000"/>
                            <attachment id="12627867" name="testOCR.pptx" size="78550" author="gsingers" created="Sun, 9 Feb 2014 13:46:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Aug 2009 09:02:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4769</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx5wv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17277</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>