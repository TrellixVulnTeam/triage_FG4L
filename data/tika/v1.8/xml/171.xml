<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:32:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-171/TIKA-171.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-171] New ContentHandler for plain text output that has no problem with missing white space after XHTML block tags</title>
                <link>https://issues.apache.org/jira/browse/TIKA-171</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;One problem with mapping document content to plain text is incorrect whitespace handling:&lt;br/&gt;
The normal way to parse documents to plain text is to instantiate a parser and pass the SAX events from the parser to a BodyContentHandler(TextContentHandler(Writer)). This appends all output to a writer (see example on web site).&lt;/p&gt;

&lt;p&gt;This works good for thumb parsers that just create a single &amp;lt;p&amp;gt;&amp;gt; tag in XHTML output whith all content of the document in it (including newlines).&lt;/p&gt;

&lt;p&gt;As soon, as a more inteligent parser is used (e.g. HTML Parser) that creates multiple nodes and a feature-rich XHTML document, the problems begin. The TextContentHandler just strips all tags away and only characters() events are forwarded to the Writer. When the original document (e.g. a HTML document) does not contain additional whitespace and linefeeds (e.g. it is correct and possible to create a XHTML document with all content in one text line, but consisting of several paragraphs. In this case &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt; events between paragraphs are stripped and there is no whitespace anymore between the two paragraphs.&lt;/p&gt;

&lt;p&gt;My patch contains a new XHTMLToTextContentHandler, that checks the elements and inserts whitespace to the output depending on the XHTML tag type. HTML block tags like &amp;lt;p/&amp;gt; get a newline at the end, but HTML inline tags do not add whitespace. This mapping is done by a simple Set&amp;lt;String&amp;gt; of tag names extracted from the XHTML 1.0 spec. To make it even better, tables are printed out with white space and tabs between cells.&lt;/p&gt;

&lt;p&gt;With this patch, I am able to correctly index a lot of document with Lucene.&lt;/p&gt;

&lt;p&gt;The patch also changes some tests to correctly check for the &apos;\n&apos; at the end of plain text streams (which are included because of the single &amp;lt;p&amp;gt;-paragraph around plain text).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12408571">TIKA-171</key>
            <summary>New ContentHandler for plain text output that has no problem with missing white space after XHTML block tags</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Sat, 15 Nov 2008 17:06:59 +0000</created>
                <updated>Thu, 8 Aug 2013 11:34:29 +0100</updated>
                            <resolved>Wed, 3 Dec 2008 00:37:48 +0000</resolved>
                                    <version>0.2</version>
                                    <fixVersion>0.2</fixVersion>
                                    <component>general</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12647878" author="thetaphi" created="Sat, 15 Nov 2008 17:08:00 +0000"  >&lt;p&gt;Patch with the new ContentHandler and modified tests.&lt;/p&gt;</comment>
                            <comment id="12651443" author="jukkaz" created="Fri, 28 Nov 2008 01:04:36 +0000"  >&lt;p&gt;Good idea!&lt;/p&gt;

&lt;p&gt;Patch committed in revision 721317. Note that I changed the indenting to use spaces instead of tabs to match the normal practice in Tika.&lt;/p&gt;

&lt;p&gt;Your code also doesn&apos;t comply with the Sun Java coding conventions we follow (most notably the if statements should always use braces)&lt;br/&gt;
but for now I left the code as-is to avoid conflicts in case you already made some local changes.&lt;/p&gt;

&lt;p&gt;We already do something similar in a number of the parsers that explicitly output extra whitespace like newlines and tabs at suitable places to make the test output look better. This generic approach is IMHO better, and so we should remove such per-parser code.&lt;/p&gt;

&lt;p&gt;Instead of having XHTMLToTextContentHandler pass through only character events, how about if it passed all SAX events and simply inserted extra ignorableWhitespace events where appropriate? This would make the different features more orthogonal and thus easier to combine in new ways. The current functionality could still be achieved by combining the class with TextContentHandler or WriteOutContentHandler.&lt;/p&gt;

&lt;p&gt;Some other potential improvements:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Emit a double newline at the end of block elements (but only a single newline after &amp;lt;/tr&amp;gt; or &amp;lt;br/&amp;gt;) to produce an empty line to separate paragraphs in text output. This makes the output easier for manual inspection and might even help some post-processors (that for some reason don&apos;t know how to use XHTML) to better detect structure in the text output.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Detect if the incoming XHTML document already has such extra whitespace and either (partially) replace it with the emitted whitespace or keep it and avoid emitting extra whitespace.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Avoid emitting extra whitespace for empty elements. This way we can keep the nicely symmetric property that an empty input stream results in an empty text output stream.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Anyway, these are all minor tweaks and we probably shouldn&apos;t spend too much effort tweaking the output. The main purpose of the text output is just to be indexable so even the current implementation is perfectly OK. Nice text rendering is only a secondary concern.&lt;/p&gt;</comment>
                            <comment id="12651501" author="thetaphi" created="Fri, 28 Nov 2008 08:55:28 +0000"  >&lt;p&gt;Thanks for accepting the patch. Next time, I will try to add extra { } even for single-statement then&apos;s. Normally, as soon as I start a new line, I do this, but simple, one-statement-if&apos;s are in my eyes more readable.&lt;/p&gt;

&lt;p&gt;I am sorry for emitting tabs, but I am the notepad++-user and for my other projects, the tabs are enabled. I hope I find a way to quickly change this setting.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Instead of having XHTMLToTextContentHandler pass through only character events, how about if it passed all SAX events and simply inserted extra ignorableWhitespace events where appropriate? This would make the different features more orthogonal and thus easier to combine in new ways. The current functionality could still be achieved by combining the class with TextContentHandler or WriteOutContentHandler. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a good idea. Using this approach we could also directly include this code in XHTMLContentHandler and drop XHTMLToTextContentHandler. If BodyContentHandler forwards ignoreable whitespaces then WriteOutContentHandler could use it. The ignoreable whitespace is then generated automatically by all parsers (if they use XHTMLContentHandler for outputting, but I think they do it).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* Emit a double newline at the end of block elements (but only a single newline after &amp;lt;/tr&amp;gt; or &amp;lt;br/&amp;gt;) to produce an empty line to separate paragraphs in text output. This makes the output easier for manual inspection and might even help some post-processors (that for some reason don&apos;t know how to use XHTML) to better detect structure in the text output. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This can be done easily. I think, just do it!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* Detect if the incoming XHTML document already has such extra whitespace and either (partially) replace it with the emitted whitespace or keep it and avoid emitting extra whitespace. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If all parsers would emit thiswhitespace as ignoreable whitespace and we use the approach noted before, this would be automatically correct.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* Avoid emitting extra whitespace for empty elements. This way we can keep the nicely symmetric property that an empty input stream results in an empty text output stream. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We need a simple flag that is set to true, whenever a non-empty characters event is emitted. On each start element we reset it to false. This approach would remove simple and empty tags. In end element we would make the block-tag checker also dependent on this flag. The problems are tags inside tags without text around. So the flag must be stacked to have a flag for each element depth (use a BitSet for it like in my other patch? LinkedList is to heavy for booleans). I think about some code, maybe I am to complicated! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Nevertheless, I wanted to keep the handler as simple as possible (there is even to much logic for tables in it). To make the text indexable, just declaring all such elements as block and emitting &apos;\n&apos; would be enough. For nice output, the current approach has one more problem:&lt;/p&gt;

&lt;p&gt;HTML tables with block tags in it (e.g. &amp;lt;td&amp;gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&amp;lt;/td&amp;gt;) would produce &quot;\n\t&quot;. In principle this should also be handled. For my other patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-172&quot; title=&quot;New Open Document Parser that emmits structured XHTML content.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-172&quot;&gt;&lt;del&gt;TIKA-172&lt;/del&gt;&lt;/a&gt;), this is the case, as all OpenDocument tables contain paragraphs.&lt;/p&gt;</comment>
                            <comment id="12652627" author="jukkaz" created="Wed, 3 Dec 2008 00:37:48 +0000"  >&lt;p&gt;Since we are going to re-roll the 0.2 release from the current trunk, I think it makes sense to resolve this issue as fixed for 0.2 in the current state and perhaps create new issues for the proposed improvements.&lt;/p&gt;

&lt;p&gt;Resolving as Fixed for 0.2.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12652243">TIKA-1134</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12408577">TIKA-172</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12393989" name="TIKA-171.patch" size="6374" author="thetaphi" created="Sat, 15 Nov 2008 17:07:57 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Nov 2008 01:04:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4690</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx5fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17199</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>