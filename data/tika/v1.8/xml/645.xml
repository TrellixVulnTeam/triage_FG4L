<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:29:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-645/TIKA-645.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-645] Parsers can&apos;t get at an underlying TikaInputStream to get the file if they wanted one</title>
                <link>https://issues.apache.org/jira/browse/TIKA-645</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Spotted this with the office parser, but it should be general. The user creates a TikaInputStream, and passes that off to the parser framework. The Parser that is called may wish to spot that the input is a File backed TikaInputStream, and take a shortcut to use the file instead of the InputStream.&lt;/p&gt;

&lt;p&gt;However, what the parser gets is a TaggedInputStream wrapping a CountingInputStream wrapping the original TikaInputStream. As such, it can&apos;t get at the file.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12504902">TIKA-645</key>
            <summary>Parsers can&apos;t get at an underlying TikaInputStream to get the file if they wanted one</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="gagravarr">Nick Burch</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Apr 2011 17:03:18 +0100</created>
                <updated>Thu, 20 Oct 2011 13:34:22 +0100</updated>
                            <resolved>Thu, 19 May 2011 15:01:45 +0100</resolved>
                                    <version>0.9</version>
                                    <fixVersion>0.10</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13022803" author="gagravarr" created="Thu, 21 Apr 2011 17:04:16 +0100"  >&lt;p&gt;One solution that springs to mind is to place the hasFile and getFile methods onto an interface. TikaInputStream, TaggedInputStream and CountingInputStream could then all implement this. That way, if the underlying stream is a TikaInputStream, the parser can still find out and grab the file. If it isn&apos;t, then nothing changes.&lt;/p&gt;</comment>
                            <comment id="13025203" author="jukkaz" created="Tue, 26 Apr 2011 13:56:24 +0100"  >&lt;p&gt;The InputStream passed to the parse() method is still TikaInputStream, isn&apos;t it? The parser should then already have access to the underlying file, even if it at some point wants to use wrappers with the given stream.&lt;/p&gt;</comment>
                            <comment id="13025536" author="gagravarr" created="Wed, 27 Apr 2011 01:49:27 +0100"  >&lt;p&gt;Nope, when the parser is called from the CLI it gets a TaggedInputStream (wrapping a CountingInputStream wrapping a TikaInputStream)&lt;/p&gt;</comment>
                            <comment id="13034983" author="jukkaz" created="Tue, 17 May 2011 20:07:31 +0100"  >&lt;p&gt;In revision 1104472 I made TikaInputStream extend TaggedInputStream which allows us to avoid one of these levels of wrapping (and also makes it possible to separate exceptions from the original stream from those caused by temporary file handling, etc.).&lt;/p&gt;

&lt;p&gt;I&apos;ll look at what we can do about the CountingInputStream wrapper.&lt;/p&gt;</comment>
                            <comment id="13035594" author="jukkaz" created="Wed, 18 May 2011 20:15:30 +0100"  >&lt;p&gt;And in revision 1124385 I modified SecureContentHandler to use TikaInputStream instead of CountingInputStream, which avoids the other stream wrapper.&lt;/p&gt;

&lt;p&gt;Now a TikaInputStream given to AutoDetectParser will get passed as-is all the way down to the concrete Parser implementation, so I&apos;m resolving this as fixed.&lt;/p&gt;

&lt;p&gt;Note that this fix required a minor backwards-compatibility break in the SecureContentHandler class, but this shouldn&apos;t be a big issue since I don&apos;t think the class is widely used outside AutoDetectParser.&lt;/p&gt;</comment>
                            <comment id="13036137" author="gagravarr" created="Thu, 19 May 2011 13:10:47 +0100"  >&lt;p&gt;I&apos;ve just gone to test this with a 5mb excel file. With 0.9, anything smaller than &quot;-Xms21m -Xmx21m&quot; gives an out of memory&lt;/p&gt;

&lt;p&gt;With the latest trunk, something else breaks though:&lt;/p&gt;

&lt;p&gt;java -Xms21m -Xmx21m -jar ~/java/apache-tika/tika-app/target/tika-app-1.0-SNAPSHOT.jar --metadata ex45698-22488.xls&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.tika.exception.TikaException: Zip bomb detected!&lt;br/&gt;
	at org.apache.tika.sax.SecureContentHandler.throwIfCauseOf(SecureContentHandler.java:128)&lt;br/&gt;
	at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:132)&lt;br/&gt;
	at org.apache.tika.cli.TikaCLI$OutputType.process(TikaCLI.java:126)&lt;br/&gt;
	at org.apache.tika.cli.TikaCLI.process(TikaCLI.java:340)&lt;br/&gt;
	at org.apache.tika.cli.TikaCLI.main(TikaCLI.java:97)&lt;br/&gt;
Caused by: org.apache.tika.sax.SecureContentHandler$SecureSAXException: Suspected zip bomb: 0 input bytes produced 1000020 output characters&lt;br/&gt;
	at org.apache.tika.sax.SecureContentHandler.advance(SecureContentHandler.java:144)&lt;/p&gt;

&lt;p&gt;Looks like something else needs to be updated too?&lt;/p&gt;</comment>
                            <comment id="13036141" author="jukkaz" created="Thu, 19 May 2011 13:14:38 +0100"  >&lt;p&gt;Hmm, yes. I&apos;ll look into this.&lt;/p&gt;</comment>
                            <comment id="13036192" author="jukkaz" created="Thu, 19 May 2011 15:01:45 +0100"  >&lt;p&gt;The problem was that when the parser was using TikaInputStream.getFile(), no bytes were recorded as being read from the stream and the SecureContentHandler couldn&apos;t figure out where the all the output is coming from.&lt;/p&gt;

&lt;p&gt;In revision 1124788 I changed the logic a bit so that when the stream is based on a file, the SecureContentHandler class looks at the total size of the input file instead of the number of bytes read from the input stream.&lt;/p&gt;</comment>
                            <comment id="13036214" author="gagravarr" created="Thu, 19 May 2011 15:22:47 +0100"  >&lt;p&gt;Thanks. With this change in, tika-app from svn trunk can parse the same 5mb excel file with &quot;-Xms15m -Xmx15m&quot;, so the use of NPOIFS and access to the file has saved us a bit over the size of the office file in memory, which is good news!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12504763">TIKA-643</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 Apr 2011 12:56:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3897</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx2in:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16727</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>