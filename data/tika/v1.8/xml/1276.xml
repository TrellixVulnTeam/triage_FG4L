<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:30:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1276/TIKA-1276.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1276] Missing embedded dependencies in tika-bundle</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1276</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;While updating from tika 1.2 to 1.5 I that the `org.apache.tika:tika-bundle:1.5` module has some missing dependences.&lt;/p&gt;

&lt;p&gt;1. `com.uwyn:jhighlight:1.0` is not embedded&lt;/p&gt;

&lt;p&gt;Because of that installing the bundle results in the following exception&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [103]: Unable to resolve 103.0: missing requirement [103.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=com.uwyn.jhighlight.renderer))
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [103]: Unable to resolve 103.0: missing requirement [103.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=com.uwyn.jhighlight.renderer)
	at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3962)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2025)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1279)
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2. `org.ow2.asm:asm:4.1` is not embedded because `org.apache.tika:tika-core:1.5` uses `org.ow2.asm-debug-all:asm:4.1` and therefore the `Embed-Dependency` directive `asm` does not match any dependency. &lt;/p&gt;

&lt;p&gt;Because of that one do get the following exception (after fixing (1))&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [96]: Unable to resolve 96.0: missing requirement [96.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (&amp;amp;(osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=org.objectweb.asm)(version&amp;gt;=4.1.0)(!(version&amp;gt;=5.0.0))))
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [96]: Unable to resolve 96.0: missing requirement [96.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (&amp;amp;(osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=org.objectweb.asm)(version&amp;gt;=4.1.0)(!(version&amp;gt;=5.0.0)))
	at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3962)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2025)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1279)
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are two possibilities to fix this (a) change the `Embed-Dependency` to `asm-debug-all` or adding a dependency to `org.ow2.asm:asm:4.1` to the tika-bundle pom file.&lt;/p&gt;

&lt;p&gt;3. `edu.ucar:netcdf:4.2-min` is not embedded&lt;/p&gt;

&lt;p&gt;Because of that one does get the following exception (after fixing (1) and (2))&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [96]: Unable to resolve 96.0: missing requirement [96.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=ucar.ma2))
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle [96]: Unable to resolve 96.0: missing requirement [96.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=ucar.ma2)
	at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3962)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2025)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1279)
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4. The `com.adobe.xmp:xmpcore:5.1.2` dependency is required at runtime&lt;/p&gt;

&lt;p&gt;After fixing the above issues the tika-bundle was started successfully. However when extracting EXIG metadata from a jpeg image I got the following exception.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.NoClassDefFoundError: com/adobe/xmp/XMPException
	at com.drew.imaging.jpeg.JpegMetadataReader.extractMetadataFromJpegSegmentReader(JpegMetadataReader.java:112)
	at com.drew.imaging.jpeg.JpegMetadataReader.readMetadata(JpegMetadataReader.java:71)
	at org.apache.tika.parser.image.ImageMetadataExtractor.parseJpeg(ImageMetadataExtractor.java:91)
	at org.apache.tika.parser.jpeg.JpegParser.parse(JpegParser.java:56)
	[..]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Embedding xmpcore in the tika-bundle solved this issue.&lt;/p&gt;


&lt;p&gt;NOTES:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The Apache Stanbol integration tests only covers PDF, JPEG, DOCX. So there might be additional issues with other not tested parsers.&lt;/li&gt;
	&lt;li&gt;I was updating Tika from version 1.2 to 1.5. This means that all versions &amp;gt; 1.2 might also be affected by this.&lt;/li&gt;
	&lt;li&gt;The following dependencies embedded by the tika-bundle are in fact OSGI bundles and would not be needed to be embedded: commons-compress, xz, commons-codec, commons-io&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>&lt;p&gt;OSGI, Apache Felix via Apache Sling Launcher&lt;/p&gt;</environment>
        <key id="12709944">TIKA-1276</key>
            <summary>Missing embedded dependencies in tika-bundle</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="4" iconUrl="https://issues.apache.org/jira/images/icons/statuses/reopened.png" description="This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.">Reopened</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rwesten">Rupert Westenthaler</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Apr 2014 07:16:42 +0100</created>
                <updated>Thu, 2 Apr 2015 02:48:23 +0100</updated>
                                            <version>1.5</version>
                                    <fixVersion>1.9</fixVersion>
                                    <component>packaging</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13977889" author="rwesten" created="Wed, 23 Apr 2014 07:25:48 +0100"  >&lt;p&gt;To workaround the reported issues I created an own bundle for Tika 1.5 &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;. This bundle does not embed commons-compress, xz, commons-codec, commons-io as those are anyway required by other Apache Stanbol modules and therefore guaranteed to be around in the OSGI environment. Not sure if Tika would like to embed those to avoid dependencies to other bundles.&lt;/p&gt;

&lt;p&gt;If you like me to create a patch for 1.5 or 1.6-SNAPSHOT just leave a short comment.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://svn.apache.org/repos/asf/stanbol/branches/release-0.12/commons/tikabundle/pom.xml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/stanbol/branches/release-0.12/commons/tikabundle/pom.xml&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13978076" author="gagravarr" created="Wed, 23 Apr 2014 12:16:15 +0100"  >&lt;p&gt;The control over what goes into the bundle is in the pom file - any chance you could work up a patch to the tika-bundle pom which includes these missing jars?&lt;/p&gt;

&lt;p&gt;In terms of testing, I wonder if it would be worth writing a unit test that asks the Tika Core service loader for a list of all the parser classes defined, then checks each one in turn to ensure it was correctly loaded and registered, and getSupportedTypes can be called. That wouldn&apos;t ensure that the parsers worked (that would need test files), but at least it would cover the case where parsers don&apos;t get loaded as they have unsatisfied dependencies&lt;/p&gt;</comment>
                            <comment id="13978176" author="rwesten" created="Wed, 23 Apr 2014 14:19:53 +0100"  >&lt;p&gt;Added a patch for the trunk (1.6-SNAPSHOT)&lt;/p&gt;

&lt;p&gt;With the 1.6-SNAPSHOT version I had do make some additional adaptions:&lt;/p&gt;

&lt;p&gt;1. embed `java-libpst`: looks like as this was added after the 1.5 release&lt;/p&gt;

&lt;p&gt;2. exclude the import of `org.junit` because of the following exception&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.stanbol.enhancer.engines.xmpextractor [238]: Unable to resolve 238.0: missing requirement [238.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=org.apache.tika.parser.image.xmp) [caused by: Unable to resolve 130.0: missing requirement [130.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=org.junit)])
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.stanbol.enhancer.engines.xmpextractor [238]: Unable to resolve 238.0: missing requirement [238.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=org.apache.tika.parser.image.xmp) [caused by: Unable to resolve 130.0: missing requirement [130.0] osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;; (osgi.wiring.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;=org.junit)]
	at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3962)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2025)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1279)
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is unexpected to have a runtime dependency on `org.junit.*`. Someone more familiar with the code should have a look at this. If fixed the `!org.junit,` should be deleted from `Import-Package` &lt;/p&gt;

&lt;p&gt;3. `commons-io` is no longer a dependency of `toka-parsers` so I removed it from the list of embedded modules.&lt;/p&gt;</comment>
                            <comment id="13979687" author="thaichat04" created="Thu, 24 Apr 2014 14:19:12 +0100"  >&lt;p&gt;Thank &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rwesten&quot; class=&quot;user-hover&quot; rel=&quot;rwesten&quot;&gt;Rupert Westenthaler&lt;/a&gt;, added your patch at r1589717&lt;/p&gt;</comment>
                            <comment id="13979693" author="gagravarr" created="Thu, 24 Apr 2014 14:21:58 +0100"  >&lt;p&gt;Re-opening, as we don&apos;t yet have any unit tests for this problem&lt;/p&gt;</comment>
                            <comment id="13982863" author="rwesten" created="Mon, 28 Apr 2014 10:12:58 +0100"  >&lt;p&gt;Hi all&lt;/p&gt;

&lt;p&gt;Added a 2nd patch that&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;(re-)enables unit tests for the Tika OSGI bundle&lt;/li&gt;
	&lt;li&gt;updated the Bundle Activator in tika-parsers to register a Detector and Parser that is similar as those returned by Tika#getDetector() and Tika#getParser()&lt;/li&gt;
	&lt;li&gt;the tests now check both (1) usage of the Tika class AND (2) usage of the Detector and Parser registered as OSGI services by the Bundle Activator&lt;/li&gt;
	&lt;li&gt;updated the tests to use the latest versions of pax exam (3.5) and felix (4.4)&lt;/li&gt;
	&lt;li&gt;this does not add additional tests for different media types. Those should bee added to the BundleIT#testParser&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This patch does not include the first one. It is based on a trunk version with the first patch already applied.&lt;/p&gt;
</comment>
                            <comment id="13982874" author="sergey_beryozkin" created="Mon, 28 Apr 2014 10:46:06 +0100"  >&lt;p&gt;Hi Rupert&lt;/p&gt;

&lt;p&gt;I wonder should we take a completely different approach and avoid embedding at all which is not very OSGI friendly ?&lt;br/&gt;
May be not for 1.6 but for some major release like Tika 2.0...&lt;/p&gt;

&lt;p&gt;Sergey&lt;/p&gt;</comment>
                            <comment id="13982973" author="olegt" created="Mon, 28 Apr 2014 13:52:13 +0100"  >&lt;p&gt;Environment: Win 7 x64; OSGi engine: Apache Felix &lt;br/&gt;
without patch got org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle &lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;: Unable to resolve 7.0: missing requirement &lt;span class=&quot;error&quot;&gt;&amp;#91;7.0&amp;#93;&lt;/span&gt; osgi.wiring.package; (osgi.wiring.package=javax.servlet)&lt;br/&gt;
Note: 7 here is a tika-bundle-1.6-SNAPSHOT.jar&lt;br/&gt;
with the patch:&lt;br/&gt;
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle &lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;: Unable to resolve 8.0: missing requirement &lt;span class=&quot;error&quot;&gt;&amp;#91;8.0&amp;#93;&lt;/span&gt; osgi.wiring.package; (osgi.wiring.package=javax.servlet)&lt;br/&gt;
Note: 8 here is a patched tika-bundle-1.6-SNAPSHOT.jar.&lt;/p&gt;

&lt;p&gt;I.e in both cases cannot start.&lt;/p&gt;

&lt;p&gt;Seems to be the same.&lt;/p&gt;</comment>
                            <comment id="13982995" author="rwesten" created="Mon, 28 Apr 2014 14:08:04 +0100"  >&lt;p&gt;Embedding dependencies is bad if those are also used by other bundles. The biggest dependencies of Tika are all dependencies of parsers (e.g. poi, pdf box ...). Most Tika users will not need those in other bundles. So having them embedded in tika-bundle is not a overhead.&lt;/p&gt;

&lt;p&gt;Tika does embed some dependencies that are OSGI Bundles&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;commons-compress and also it dependency xz is a bundle&lt;/li&gt;
	&lt;li&gt;commons-codec&lt;/li&gt;
	&lt;li&gt;apache-mime4j-core and apache-mime4j-dom&lt;/li&gt;
	&lt;li&gt;xmlbeans-2.3.0: There are bundle versions available by org.apache.servicemix.bundles:org.apache.servicemix.bundles.xmlbeans - starting from version 2.4.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Those could be easily removed from the bundle.&lt;/p&gt;
</comment>
                            <comment id="13983011" author="rwesten" created="Mon, 28 Apr 2014 14:36:00 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=olegt&quot; class=&quot;user-hover&quot; rel=&quot;olegt&quot;&gt;Oleg Tikhonov&lt;/a&gt; I was getting the same error so I added a configuration to import this package from the environment (see the SYS_PKG constant in BundleIT). You getting the error indicates that your environment can not provide such packages.&lt;/p&gt;

&lt;p&gt;Thinking again about it: There is no good reason why Tika should depend on those packages. Adding &lt;/p&gt;

&lt;p&gt;              javax.servlet;resolution:=optional,&lt;br/&gt;
              javax.servlet.http;resolution:=optional,&lt;/p&gt;

&lt;p&gt;instructions to the &quot;Import-Package&quot; does also fix this issue and is much more elegant as it will allow to use the tika bundle also in environments without a servlet engine.&lt;/p&gt;

&lt;p&gt;I will provide an update patch&lt;/p&gt;</comment>
                            <comment id="13983014" author="rwesten" created="Mon, 28 Apr 2014 14:43:21 +0100"  >&lt;p&gt;Attached a revised patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt;_20140428_2_rwesten.diff) that makes the `javax.servlet` API an optional dependency&lt;/p&gt;</comment>
                            <comment id="13983069" author="sergey_beryozkin" created="Mon, 28 Apr 2014 15:59:57 +0100"  >&lt;p&gt;Rupert, IMHO having individual parsers registered as OSGI services and Tika BundleActivator tracking such services would be much more interesting from the modularity and dynamism point of view. If Tika OSGI-fication were to be taken seriously then I&apos;d advocate this approach for the next major release. Having a uber-bundle is not that interesting IMHO unless the only goal is make sure Tika can be loaded in OSGI&lt;/p&gt;

&lt;p&gt;Cheers, Sergey&lt;/p&gt;</comment>
                            <comment id="13984067" author="olegt" created="Tue, 29 Apr 2014 07:23:51 +0100"  >&lt;p&gt;Used a patch &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt;_20140428_2_rwesten.diff&lt;br/&gt;
Now it complains on the org.apache.commons.logging.&lt;br/&gt;
Here is a question - what do we want? The Tika bundle will start as independent bundle/service provider or a customer have to build some app and put all dependencies?&lt;br/&gt;
Another option, probably we have to package all dependencies in the bundle and require that these dependencies also be bundles ...&lt;/p&gt;</comment>
                            <comment id="13984240" author="rwesten" created="Tue, 29 Apr 2014 13:26:35 +0100"  >
&lt;p&gt;&amp;gt; Now it complains on the org.apache.commons.logging.&lt;/p&gt;

&lt;p&gt;No Idea why I do not get the same errors. I am using &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00)
Java version: 1.7.0_45, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: &quot;mac os x&quot;, version: &quot;10.9.2&quot;, arch: &quot;x86_64&quot;, family: &quot;mac&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;`common-logging` is a indirect dependency of `org.apache.pdfbox:pdfbox` and it is needed - so defining this import as optional is not an option. Embedding logging related jars seams like a bad idea as those are typically provided by the logging framework used in the OSGI environment. &lt;/p&gt;

&lt;p&gt;Therefore `&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt;_20140428_3_rwesten.diff` ensures that commons-logging is added as bundle to the pax exam environment during the tests. For this I had to&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;add `commons-logging:commons-logging:1.1.3` as a test scope dependency (used 1.1.3 as 1.1.1 is not a bundle)&lt;/li&gt;
	&lt;li&gt;add commons-logging to the `test-bundles.xml` and set the scope of the dependencySet to test&lt;/li&gt;
	&lt;li&gt;add commons-logging to the pax exam options in BundleIT&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Hopefully this fixes this issue. Its hard for me to validate as I am not affected by this.&lt;/p&gt;</comment>
                            <comment id="13984251" author="rwesten" created="Tue, 29 Apr 2014 13:42:02 +0100"  >&lt;p&gt;Personally I am happy with having Tika running within an OSGI environment. AFAIK Tika uses the Java ServiceLoader for locating different parsers. ServiceLoader can only locate services within the same bundle. So the fact that the ClassLoader of the tika-bundle is parsed to the TikaConfig by the Activator is the reason why the current solution works.&lt;/p&gt;

&lt;p&gt;As soon as one would like to have different parsers in different bundles one would need to also provide an alternative implementation to the DefaultParser for OSGI. Implementing a CompositeParser that tracks available parsers via the OSGI service registry would for sure be the way to go. &lt;/p&gt;

&lt;p&gt;To register single parsers as OSGI service one would only need to add @Component and @Service annotations. As this are not runtime annotation this would not even add any runtime dependencies.&lt;/p&gt;

&lt;p&gt;Implementing it that way would even allow to dynamically add/remove parsers at runtime. Components with a dependency to the CompositeParser could even keep using their service object. &lt;/p&gt;</comment>
                            <comment id="13984393" author="olegt" created="Tue, 29 Apr 2014 16:16:48 +0100"  >&lt;p&gt;Applied the patch ... Could compile and build all Tika project, a bundle created. Till now OK. However if I install it on Felix, it cannot start complaining on logging.&lt;br/&gt;
org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.tika.bundle &lt;span class=&quot;error&quot;&gt;&amp;#91;12&amp;#93;&lt;/span&gt;: Unable to resolve 12.0: missing requirement &lt;span class=&quot;error&quot;&gt;&amp;#91;12.0&amp;#93;&lt;/span&gt; osgi.wiring.package; (osgi.wiring.package=org.apache.commons.logging)&lt;/p&gt;

&lt;p&gt;I suppose that we want to run it as a standalone Tika service(s) provider, if so we should find the way to resolve all dependencies and make it running. &lt;br/&gt;
If our goal just to build a bundle that will be used by other applications based on top of OSGi then it works.&lt;/p&gt;</comment>
                            <comment id="13984580" author="rwesten" created="Tue, 29 Apr 2014 18:53:38 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=olegt&quot; class=&quot;user-hover&quot; rel=&quot;olegt&quot;&gt;Oleg Tikhonov&lt;/a&gt; for sure we could also embed commons logging, but I am not sure if this is a good Idea. The main reason is that if an environment does already provide logging (e.g. Apache Karaf provides commons-logging as part of &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;; Apache Sling Logging also provides commons logging &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;).&lt;/p&gt;

&lt;p&gt;If Tika embeds a private version of commons-logging I am not sure if the logs messages will make it in the log files. If Tika is not concerned about logging from pdfbox this might still the way to go.&lt;/p&gt;

&lt;p&gt;Users getting such a BundleException should normally know that they need to provide commons-logging as an additional bundle (e.g. &lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; or &lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; if they use slf4j)&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://felix.apache.org/site/43-logging-system.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://felix.apache.org/site/43-logging-system.html&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://sling.apache.org/documentation/development/logging.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://sling.apache.org/documentation/development/logging.html&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://search.maven.org/#artifactdetails&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search.maven.org/#artifactdetails&lt;/a&gt;|commons-logging|commons-logging|1.1.3|jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://search.maven.org/#artifactdetails&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search.maven.org/#artifactdetails&lt;/a&gt;|org.slf4j|jcl-over-slf4j|1.6.6|jar&lt;/p&gt;</comment>
                            <comment id="13984630" author="oleg@apache.org" created="Tue, 29 Apr 2014 19:33:15 +0100"  >&lt;p&gt;Rupert,&lt;br/&gt;
Acceptable and valuable points, indeed.&lt;br/&gt;
Let see what people say.&lt;br/&gt;
From my point of view, your patch looks good.&lt;br/&gt;
Well done!&lt;/p&gt;





&lt;p&gt;On Tue, Apr 29, 2014 at 8:54 PM, Rupert Westenthaler (JIRA) &amp;lt;jira@apache.org&lt;/p&gt;
</comment>
                            <comment id="14025252" author="hudson" created="Mon, 9 Jun 2014 16:00:40 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #33 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/33/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/33/&lt;/a&gt;)&lt;br/&gt;
Start trying to get the Tika OSGi tests to run, by splitting them out by area, explicitly using an OSGi test running, and beginning to check that in-bundle and non-bundle have the same parsers and detectors. Many tests disabled though as broken... &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt; (nick: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601398&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601398&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-bundle/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-bundle/src/test/java/org/apache/tika/bundle/BundleIT.java&lt;br/&gt;
To support OSGi testing, allow for a test class to find out what class names ServiceLoader.loadStaticServiceProviders will try, helps &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt; (nick: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601395&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601395&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/config/ServiceLoader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14025263" author="hudson" created="Mon, 9 Jun 2014 16:11:10 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #33 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/33/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/33/&lt;/a&gt;)&lt;br/&gt;
Start trying to get the Tika OSGi tests to run, by splitting them out by area, explicitly using an OSGi test running, and beginning to check that in-bundle and non-bundle have the same parsers and detectors. Many tests disabled though as broken... &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt; (nick: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601398&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601398&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-bundle/pom.xml&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-bundle/src/test/java/org/apache/tika/bundle/BundleIT.java&lt;br/&gt;
To support OSGi testing, allow for a test class to find out what class names ServiceLoader.loadStaticServiceProviders will try, helps &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1276&quot; title=&quot;Missing embedded dependencies in tika-bundle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1276&quot;&gt;TIKA-1276&lt;/a&gt; (nick: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601395&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1601395&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/config/ServiceLoader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14183944" author="chrismattmann" created="Sat, 25 Oct 2014 05:49:35 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;push to 1.8&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14370809" author="shaie" created="Fri, 20 Mar 2015 06:02:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;`com.uwyn:jhighlight:1.0` is not embedded&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just FYI, jhighlight-1.0.jar contains some LGPL-only classes:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;com.uwyn.jhighlight.highlighter.
  CppHighlighter.java
  GroovyHighlighter.java
  JavaHighlighter.java
  XmlHighlighter.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I confirmed this by downloading the sources from Maven (&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=com/uwyn/jhighlight/1.0/jhighlight-1.0-sources.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search.maven.org/remotecontent?filepath=com/uwyn/jhighlight/1.0/jhighlight-1.0-sources.jar&lt;/a&gt;), and also found this SVN repo: &lt;a href=&quot;http://svn.rifers.org/jhighlight/tags/release-1.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.rifers.org/jhighlight/tags/release-1.0&lt;/a&gt; (though not sure it&apos;s the official one). The project&apos;s website seems to not exist anymore (&lt;a href=&quot;https://jhighlight.dev.java.net/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jhighlight.dev.java.net/&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I came across this issue over at Lucene/Solr (which includes this .jar as a runtime dependency for Tika), but I&apos;m not sure if it&apos;s OK for TIKA to use/rely/distribute LGPL code?&lt;/p&gt;

&lt;p&gt;Anyway, FYI.&lt;/p&gt;</comment>
                            <comment id="14370914" author="rwesten" created="Fri, 20 Mar 2015 07:47:25 +0000"  >&lt;p&gt;The pom of jhighlight &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; states two licenses LGPL v2.1. and CDDL 1.0. Meaning that while the lib as a whole is distributed under CDDL 1.0 (compatible with the ASL). Only some source files do only mention LGPL in their header information.&lt;/p&gt;

&lt;p&gt;Not sure what this means. Also on LEGAL &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; I was not able to find related information.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://search.maven.org/#artifactdetails&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search.maven.org/#artifactdetails&lt;/a&gt;|com.uwyn|jhighlight|1.0|jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/LEGAL&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/LEGAL&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14371170" author="shaie" created="Fri, 20 Mar 2015 11:38:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1581&quot; title=&quot;jhighlight license concerns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1581&quot;&gt;&lt;del&gt;TIKA-1581&lt;/del&gt;&lt;/a&gt; was opened to address this issue, so we should continue discussing there.&lt;/p&gt;</comment>
                            <comment id="14371890" author="tpalsulich" created="Fri, 20 Mar 2015 19:14:23 +0000"  >&lt;p&gt;Is there anything else keeping this issue open? From the above, I don&apos;t think so. Please correct me if I&apos;m wrong.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12673214">STANBOL-1171</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12641471" name="TIKA-1276_20140423_rwesten.diff" size="1469" author="rwesten" created="Wed, 23 Apr 2014 14:19:53 +0100"/>
                            <attachment id="12642241" name="TIKA-1276_20140428_2_rwesten.diff" size="8774" author="rwesten" created="Mon, 28 Apr 2014 14:43:21 +0100"/>
                            <attachment id="12642445" name="TIKA-1276_20140428_3_rwesten.diff" size="10072" author="rwesten" created="Tue, 29 Apr 2014 13:26:35 +0100"/>
                            <attachment id="12642217" name="TIKA-1276_20140428_rwesten.diff" size="8757" author="rwesten" created="Mon, 28 Apr 2014 10:12:58 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Apr 2014 11:16:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388266</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzoqk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388521</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>