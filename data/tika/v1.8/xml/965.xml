<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:35:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-965/TIKA-965.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-965] Text Detection Fails on Mostly Non-ASCII UTF-8 Files</title>
                <link>https://issues.apache.org/jira/browse/TIKA-965</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;If a file contains relatively few ASCII characters and more 8 bit UTF-8 characters the TextDetector and TextStatistics classes fail to detect it as text.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12600826">TIKA-965</key>
            <summary>Text Detection Fails on Mostly Non-ASCII UTF-8 Files</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rgauss">Ray Gauss II</assignee>
                                    <reporter username="rgauss">Ray Gauss II</reporter>
                        <labels>
                    </labels>
                <created>Tue, 31 Jul 2012 12:48:48 +0100</created>
                <updated>Wed, 1 Aug 2012 14:46:44 +0100</updated>
                            <resolved>Wed, 1 Aug 2012 14:46:44 +0100</resolved>
                                    <version>1.2</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>general</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13425784" author="gagravarr" created="Tue, 31 Jul 2012 15:07:46 +0100"  >&lt;p&gt;Do you have a sample file that shows this problem? And is it more than just a few bytes long? (The detection algorithms need a decent stretch of text to work properly)&lt;/p&gt;</comment>
                            <comment id="13425790" author="rgauss" created="Tue, 31 Jul 2012 15:14:59 +0100"  >&lt;p&gt;I do have a test file and it&apos;s more than a few bytes long.&lt;/p&gt;

&lt;p&gt;The problem arrises when there&apos;s no UTF-8 BOM and the parsers doesn&apos;t have access to the file name as a hint.&lt;/p&gt;

&lt;p&gt;I&apos;m looking into a solution that will call some UTF-8 validation if the TextDetector doesn&apos;t see enough ASCII.  It appears the universalchardet library is also looking for a BOM on initial investigation.&lt;/p&gt;

&lt;p&gt;I&apos;ll look into this further.&lt;/p&gt;</comment>
                            <comment id="13425797" author="jukkaz" created="Tue, 31 Jul 2012 15:26:09 +0100"  >&lt;p&gt;In the &lt;tt&gt;TextDetector&lt;/tt&gt; we could also look for the characteristic UTF-8 multi-byte sequences, as they should be easy to spot and pretty reliable as indicators of UTF-8 encoded text.&lt;/p&gt;</comment>
                            <comment id="13425981" author="rgauss" created="Tue, 31 Jul 2012 19:15:49 +0100"  >&lt;p&gt;That&apos;s the solution I was looking into and I wanted to duplicate as little code as possible.&lt;/p&gt;

&lt;p&gt;Let me preface the rest of this by saying I don&apos;t know a whole lot about this character encoding and detection or bundling stuff.&lt;/p&gt;

&lt;p&gt;Here&apos;s the outline of what seems to be a working solution:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Move &lt;tt&gt;org.apache.tika.parsers.txt.Charset*&lt;/tt&gt; to tika-core&lt;/li&gt;
	&lt;li&gt;Add a list of valid charsets (only UTF-8 at the moment) and minimum confidence level (80 at the moment) to &lt;tt&gt;TextDetector&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;If &lt;tt&gt;TextDetector&lt;/tt&gt; comes up with &lt;tt&gt;isMostlyASCII=false&lt;/tt&gt; fire up a &lt;tt&gt;CharsetDetector&lt;/tt&gt; and check the match against valid charsets and minimum confidence above&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The only problem I&apos;m running into with this approach is that to maintain backwards compatibility &lt;tt&gt;Charset*&lt;/tt&gt; must reside in the same &lt;tt&gt;org.apache.tika.parser.txt&lt;/tt&gt; package and tika-bundle throws a fit about that, coincidentally related to &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-966&quot; title=&quot;org.apache.tika.Tika missing from tika-bundle-1.2.jar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-966&quot;&gt;&lt;del&gt;TIKA-966&lt;/del&gt;&lt;/a&gt;.  For testing purposes I turned off export of &lt;tt&gt;org.apache.tika.parser.txt&lt;/tt&gt; in tika-bundle but I&apos;m sure that&apos;s not the solution we want.&lt;/p&gt;

&lt;p&gt;What do you all think of this approach, and if it is reasonable, what&apos;s the best way to handle the &lt;tt&gt;org.apache.tika.parser.txt&lt;/tt&gt; conflict in tika-bundle?&lt;/p&gt;</comment>
                            <comment id="13426490" author="jukkaz" created="Wed, 1 Aug 2012 11:12:15 +0100"  >&lt;p&gt;I&apos;m not too big a fan of the &lt;tt&gt;Charset&lt;/tt&gt; classes in &lt;tt&gt;o.a.t.parser.txt&lt;/tt&gt;. We borrowed them from ICU4J, and though they cover a lot of exotic corner cases, they&apos;re pretty slow and cumbersome to use with the vast majority of text out there.&lt;/p&gt;

&lt;p&gt;An alternative that should work fairly well is to leverage the existing &lt;tt&gt;TextStatistics&lt;/tt&gt; class in &lt;tt&gt;tika-core&lt;/tt&gt; for a quick check of whether there are as many UTF-8 continuation bytes in the text as there should be. Something like the following might be a good approximation:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; looksLikeUTF8() {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; control = count(0, 0x20);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; utf8 = count(0x20, 0x80);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; safe = countSafeControl();

    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; expectedContinuation = 0;
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;[] leading = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;[] {
            count(0xc0, 0xe0), count(0xe0, 0xf0), count(0xf0, 0xf8) };
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; leading.length; i++) {
        utf8 += leading[i];
        expectedContinuation += (i + 1) * leading[i];
    }

    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; continuation = count(0x80, 0xc0);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; utf8 &amp;gt; 0
            &amp;amp;&amp;amp; continuation &amp;lt;= expectedContinuation
            &amp;amp;&amp;amp; continuation &amp;gt;= expectedContinuation - 3
            &amp;amp;&amp;amp; count(0xf8, 0x100) == 0
            &amp;amp;&amp;amp; (control - safe) * 100 &amp;lt; utf8 * 2;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13426525" author="rgauss" created="Wed, 1 Aug 2012 12:12:32 +0100"  >&lt;p&gt;Are we likely to run into similar issues with other encodings besides UTF-8?&lt;/p&gt;</comment>
                            <comment id="13426530" author="jukkaz" created="Wed, 1 Aug 2012 12:30:16 +0100"  >&lt;p&gt;The attached patch implements the above idea. It seems to work fine with the UTF-8 demo in &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt&lt;/a&gt;, though I don&apos;t know if we can include that file in Tika as a test case. Old texts from China, Middle-East or other non-Latin areas of the world might be a good source of copyright-free test data.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Are we likely to run into similar issues with other encodings besides UTF-8?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Probably, though I think the best way to deal with them is case-by-case based on concrete issues people face. AFAICT there&apos;s no generic solution to this problem.&lt;/p&gt;</comment>
                            <comment id="13426541" author="rgauss" created="Wed, 1 Aug 2012 12:53:46 +0100"  >&lt;p&gt;I have a test file that I&apos;ve gotten permission to include: &lt;a href=&quot;http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD/root/projects/repository/source/test-resources/quick/quick.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD/root/projects/repository/source/test-resources/quick/quick.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other encodings/charsets is part of what I was trying to address with the &lt;tt&gt;Charset&lt;/tt&gt; solution.  If we add more &lt;tt&gt;CharsetRecognizer&lt;/tt&gt; implementations we can easily plug those in to the &lt;tt&gt;TextDector&lt;/tt&gt; by adding them to &lt;tt&gt;VALID_TEXT_CHARSETS&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;The charset detection only kicks in if magic detection has failed and &lt;tt&gt;TextDetector&lt;/tt&gt; comes up with &lt;tt&gt;isMostlyASCII=false&lt;/tt&gt;, which should only be rare cases, so I don&apos;t think we need to be too concerned with performance.&lt;/p&gt;

&lt;p&gt;Here&apos;s what the relevant section in &lt;tt&gt;TextDetector&lt;/tt&gt; ends up looking like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (stats.isMostlyAscii()) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MediaType.TEXT_PLAIN;
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;code-comment&quot;&gt;// Try detecting a valid text charset
&lt;/span&gt;    input.reset();
    CharsetDetector charsetDetector = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CharsetDetector();
    charsetDetector.setText(input);
    CharsetMatch match = charsetDetector.detect();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (match != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; match.getConfidence() &amp;gt;= MINIMUM_CHARSET_MATCH_CONFIDENCE &amp;amp;&amp;amp; 
            VALID_TEXT_CHARSETS.contains(match.getName())) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MediaType.TEXT_PLAIN;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MediaType.OCTET_STREAM;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It seems simple enough, but I&apos;m happy to pursue whatever solution people want.&lt;/p&gt;</comment>
                            <comment id="13426550" author="jukkaz" created="Wed, 1 Aug 2012 13:14:27 +0100"  >&lt;p&gt;I see where you&apos;re going, but it&apos;s a really tricky path. I tried doing something like that earlier on, but I found no easy way to keep down the number of false positives.&lt;/p&gt;

&lt;p&gt;The ICU4J classes are written with the assumption that the data you&apos;re working on is always text and they just figure out which character encoding is most likely. They fail to take into account the possibility of the document being in some unknown binary format.&lt;/p&gt;

&lt;p&gt;That&apos;s why we currently run the full ICU4J encoding detection (using the &lt;tt&gt;o.a.t.parser.txt.Icu4jEncodingDetector&lt;/tt&gt; and &lt;tt&gt;o.a.t.detect.AutoDetectReader&lt;/tt&gt; classes, see &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-322&quot; title=&quot;Improve encoding detection speed and accuracy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-322&quot;&gt;&lt;del&gt;TIKA-322&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-471&quot; title=&quot;Avoid Charset name bottleneck when multiple threads are using HtmlParser&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-471&quot;&gt;&lt;del&gt;TIKA-471&lt;/del&gt;&lt;/a&gt;) only once we already know by other means that we&apos;re dealing with textual data.&lt;/p&gt;</comment>
                            <comment id="13426618" author="rgauss" created="Wed, 1 Aug 2012 14:46:44 +0100"  >&lt;p&gt;Fair enough.&lt;/p&gt;

&lt;p&gt;I&apos;ve incorporated your solution in r1367991.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12538773" name="0001-TIKA-965-Text-Detection-Fails-on-Mostly-Non-ASCII-UT.patch" size="2742" author="jukkaz" created="Wed, 1 Aug 2012 12:30:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 31 Jul 2012 14:07:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242307</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxwi9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13446</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>