<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:33:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-521/TIKA-521.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-521] OutOfMemoryError Parsing XSLX File</title>
                <link>https://issues.apache.org/jira/browse/TIKA-521</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;I have several XSLX files I&apos;m trying to parse with Tika that are failing with an OutOfMemoryError even when using  a large heap size.  For instance the attached 1.26MB excel file fails using a 512MB heap.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12475508">TIKA-521</key>
            <summary>OutOfMemoryError Parsing XSLX File</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gagravarr">Nick Burch</assignee>
                                    <reporter username="jrduncans">Stephen Duncan Jr</reporter>
                        <labels>
                    </labels>
                <created>Thu, 30 Sep 2010 16:26:00 +0100</created>
                <updated>Thu, 20 Oct 2011 13:34:09 +0100</updated>
                            <resolved>Mon, 14 Mar 2011 14:27:34 +0000</resolved>
                                    <version>0.7</version>
                    <version>0.8</version>
                                    <fixVersion>0.10</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12916517" author="jrduncans" created="Thu, 30 Sep 2010 16:30:21 +0100"  >&lt;p&gt;Using the POI API directly, and using their event-based model, I was able to to parse the file using less than 20MB of heap space (less than 64MB of heap size allocated).  Can Tika be modified to use the event based API when extracting text?  Here&apos;s sample code used:&lt;/p&gt;

&lt;p&gt;final String filePath = &quot;C:\\Users\\stephen.duncan\\tmp&lt;br class=&quot;atl-forced-newline&quot; /&gt;memory-test.xlsx&quot;;&lt;br/&gt;
XSSFEventBasedExcelExtractor extractor = new XSSFEventBasedExcelExtractor(filePath);&lt;/p&gt;

&lt;p&gt;String text = extractor.getText();&lt;br/&gt;
System.out.println(text);&lt;/p&gt;</comment>
                            <comment id="12916518" author="gagravarr" created="Thu, 30 Sep 2010 16:30:43 +0100"  >&lt;p&gt;Excel files really really munch memory. XLSX is worse than XLS, as the xml processing into objects takes lots of memory.&lt;/p&gt;

&lt;p&gt;Some files are worse than others, depends on the kinds of things in them. I&apos;d suggest you just up your heap size.&lt;/p&gt;</comment>
                            <comment id="12916534" author="jrduncans" created="Thu, 30 Sep 2010 17:15:43 +0100"  >&lt;p&gt;I have 7MB files that can&apos;t be handled when giving 2GB of RAM, it required 3GB to process.  I&apos;m looking at likely needing to run on 32-bit Java, so increasing the heap size that high is not really an option.  Besides, at the growth rate I see, a 20MB file might require 10GB of heap.  That simply doesn&apos;t scale for reasonable file sizes.  Meanwhile, the same 7MB file can be parsed using the alternate API using 128MB for the heap size.  That should allow any reasonable file to be processed assuming a reasonable 1GB heap size.&lt;/p&gt;</comment>
                            <comment id="12917819" author="ssmeets" created="Tue, 5 Oct 2010 00:43:03 +0100"  >&lt;p&gt;I&apos;m facing the same issue. Increasing the heapssize to the maximum will cover for a certain amount of xlsx files, but there are still a lot of files causing an OutOfMemoryError (&amp;gt; 10 Mb XLS files). The XSSFEventBasedExcelExtractor indeed processes these files as we would like to. What would be the draw back of using XSSFEventBasedExcelExtractor?&lt;/p&gt;</comment>
                            <comment id="12917900" author="gagravarr" created="Tue, 5 Oct 2010 09:44:35 +0100"  >&lt;p&gt;It would need someone to work up a patch. We can&apos;t simply use XSSFEventBasedExcelExtractor, as that produces limited plain text, but we want to generate HTML + include headers, footers, links, comments etc&lt;/p&gt;

&lt;p&gt;So, we&apos;d need code that was similar to XSSFEventBasedExcelExtractor, but which also did the additional work to include the extra parts we currently have&lt;/p&gt;</comment>
                            <comment id="12918047" author="ssmeets" created="Tue, 5 Oct 2010 17:16:27 +0100"  >&lt;p&gt;Ok, I&apos;ll see if I can create a patch for this.&lt;/p&gt;</comment>
                            <comment id="12918932" author="maxim.valyanskiy" created="Thu, 7 Oct 2010 15:53:03 +0100"  >&lt;p&gt;If a plain text is enough for you, you can apply patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-511&quot; title=&quot;NPE when POI is configured to prefer event extractors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-511&quot;&gt;&lt;del&gt;TIKA-511&lt;/del&gt;&lt;/a&gt; and call ExtractorFactory.setAllThreadsPreferEventExtractors(true) before running Tika &lt;/p&gt;</comment>
                            <comment id="12920032" author="ssmeets" created="Tue, 12 Oct 2010 01:00:01 +0100"  >&lt;p&gt;Attached a proposed patch for bigger XLS files. It has been tested with a XSL spreadsheet of 70Mb with a heapsize of 1024Mb. It should be able to handle bigger files, since it is using SAX parsing. However, using a smaller heapsize for the test file restulted in a OutOfMemoryError, when extracting the different parts of the XLS document.&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
	at java.util.Arrays.copyOf(Arrays.java:2786)&lt;br/&gt;
	at java.io.ByteArrayOutputStream.toByteArray(ByteArrayOutputStream.java:133)&lt;br/&gt;
	at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry.&amp;lt;init&amp;gt;(ZipInputStreamZipEntrySource.java:118)&lt;br/&gt;
	at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.&amp;lt;init&amp;gt;(ZipInputStreamZipEntrySource.java:55)&lt;br/&gt;
	at org.apache.poi.openxml4j.opc.ZipPackage.&amp;lt;init&amp;gt;(ZipPackage.java:82)&lt;br/&gt;
	at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:220)&lt;br/&gt;
	at org.apache.poi.extractor.ExtractorFactory.createExtractor(ExtractorFactory.java:154)&lt;br/&gt;
	at org.apache.tika.parser.microsoft.ooxml.OOXMLExtractorFactory.parse(OOXMLExtractorFactory.java:68)&lt;br/&gt;
	at org.apache.tika.parser.microsoft.ooxml.OOXMLParser.parse(OOXMLParser.java:67)&lt;br/&gt;
	at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:163)&lt;br/&gt;
	at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:146)&lt;br/&gt;
	at com.ravn.test.tika.XLSTester.parse(XLSTester.java:47)&lt;br/&gt;
	at com.ravn.test.TikaTester.main(TikaTester.java:39)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)&lt;/p&gt;

&lt;p&gt;The proposed patch is an attempt to generate the same information about a XSL document as the XSSFExcelExtractorDecorator parser does. There are still some issues to look into, which are commented with TODO. Some advice on these matters would be welcome. Could someone check if the proposed patch is acceptable, so I&apos;ll try to implement the TODO things plus write some testcases? Maybe this can then be the default parser&lt;/p&gt;

&lt;p&gt;I also changed/created certain parts in POI in order to get the patch working. See &lt;a href=&quot;https://issues.apache.org/bugzilla/show_bug.cgi?id=50076&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/bugzilla/show_bug.cgi?id=50076&lt;/a&gt; for the proposed changes for POI.&lt;/p&gt;</comment>
                            <comment id="12920033" author="ssmeets" created="Tue, 12 Oct 2010 01:00:39 +0100"  >&lt;p&gt;Proposed patch&lt;/p&gt;</comment>
                            <comment id="12929417" author="chrismattmann" created="Mon, 8 Nov 2010 00:39:17 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;classify&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12934486" author="gagravarr" created="Mon, 22 Nov 2010 15:24:09 +0000"  >&lt;p&gt;The attached patch TikaExcelEventBasedExtraction.diff works against the latest POI Trunk, and switches the Tika .xlsx extraction to using event based parsing.&lt;/p&gt;

&lt;p&gt;However, it isn&apos;t quite finished - the sheet protected/not protected information needed by the metadata extraction isn&apos;t yet supported. This will need to be added in before we could commit this patch (which will also need a new POI release too)&lt;/p&gt;</comment>
                            <comment id="12934821" author="gagravarr" created="Tue, 23 Nov 2010 12:38:20 +0000"  >&lt;p&gt;Updated TikaExcelEventBasedExtraction.diff which does allow all tests to pass&lt;/p&gt;

&lt;p&gt;This can be applied once there&apos;s a newer POI out to depend against&lt;/p&gt;</comment>
                            <comment id="12934824" author="gagravarr" created="Tue, 23 Nov 2010 13:06:23 +0000"  >&lt;p&gt;Updated TikaExcelEventBasedExtraction.diff which allows you to build against the latest POI snapshot (assuming you manually installed the POI jars locally)&lt;/p&gt;</comment>
                            <comment id="13002143" author="gagravarr" created="Thu, 3 Mar 2011 19:05:55 +0000"  >&lt;p&gt;POI 3.8 beta 1 is being voted on at the moment. Once it has been released, I&apos;ll upgrade the dependency in Tika and apply the patch to switch Tika to using event based XSSF parsing.&lt;/p&gt;</comment>
                            <comment id="13006427" author="gagravarr" created="Mon, 14 Mar 2011 14:27:34 +0000"  >&lt;p&gt;POI dependency bumped and patch applied in r1081392.&lt;/p&gt;</comment>
                            <comment id="13008360" author="samraj" created="Fri, 18 Mar 2011 07:24:55 +0000"  >&lt;p&gt;Hi Nick,&lt;/p&gt;

&lt;p&gt; POI 3.8 beta 1 released . can u pls update tika 0.9 with that. Also pdf box 1.5 released.&lt;/p&gt;

&lt;p&gt;We are also facing xlsx extraction &amp;gt;2MB.My whole system get hanged if i tried to extract the data..&lt;/p&gt;</comment>
                            <comment id="13008384" author="gagravarr" created="Fri, 18 Mar 2011 09:57:14 +0000"  >&lt;p&gt;Tika has been updated, in r1081392. Until the next formal release, you&apos;ll need to build from svn / grab a nightly build if you want to try out the new changes.&lt;/p&gt;</comment>
                            <comment id="13039045" author="samraj" created="Wed, 25 May 2011 10:26:04 +0100"  >&lt;p&gt;Issue occured with tika 1.0&lt;/p&gt;</comment>
                            <comment id="13039046" author="samraj" created="Wed, 25 May 2011 10:26:39 +0100"  >&lt;p&gt;i have tried with tika 1.0 and i got error while parsing the same document. here i attached the error screenshot&lt;/p&gt;</comment>
                            <comment id="13039609" author="maxim.valyanskiy" created="Thu, 26 May 2011 10:35:18 +0100"  >&lt;p&gt;Tika from trunk with POI from trunk parses this test file with -Xmx64M. &lt;/p&gt;

&lt;p&gt;Please post stack trace for OOM that you have&lt;/p&gt;</comment>
                            <comment id="13039620" author="maxim.valyanskiy" created="Thu, 26 May 2011 11:04:03 +0100"  >&lt;p&gt;Sorry, I missed screenshot with stack trace. &lt;/p&gt;

&lt;p&gt;Here is what I found: in you case, memory is wasted in BoilerpipeContentHandler. This class is used in Tika GUI and in Tika CLI with &quot;-T&quot; switch. Tika command line application works fine with HTML or plain text (-t) output&lt;/p&gt;</comment>
                            <comment id="13039719" author="kkrugler" created="Thu, 26 May 2011 15:23:48 +0100"  >&lt;p&gt;Tika CLI uses BoilerpipeContentHandler in regular (don&apos;t include markup) mode. Here the content handler is essentially dispatching to the Boilerpipe package, so any memory issues would be in that 3rd party code base.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12480388" name="Out of memory issue in 1.0.jpg" size="234042" author="samraj" created="Wed, 25 May 2011 10:26:39 +0100"/>
                            <attachment id="12480387" name="Out of memory issue in 1.0.jpg" size="234042" author="samraj" created="Wed, 25 May 2011 10:26:04 +0100"/>
                            <attachment id="12460261" name="TikaExcelEventBasedExtraction.diff" size="21208" author="gagravarr" created="Tue, 23 Nov 2010 13:06:23 +0000"/>
                            <attachment id="12456016" name="memory-test.xlsx" size="1331801" author="jrduncans" created="Thu, 30 Sep 2010 16:27:03 +0100"/>
                            <attachment id="12456913" name="tika-diff.txt" size="1993" author="ssmeets" created="Tue, 12 Oct 2010 01:00:39 +0100"/>
                            <attachment id="12456912" name="tika-new-files.tar.bz2" size="4655" author="ssmeets" created="Tue, 12 Oct 2010 01:00:39 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 30 Sep 2010 15:30:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4340</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx39z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>