<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:38:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-391/TIKA-391.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-391] Intermittent errors detecting xls files</title>
                <link>https://issues.apache.org/jira/browse/TIKA-391</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>
&lt;p&gt;I am doing some testing of Tika 0.6 and noticed some odd results for the testEXCEL.xls file included in the test suite. &lt;/p&gt;

&lt;p&gt;100 calls to the following code:&lt;/p&gt;

&lt;p&gt;            is = new BufferedInputStream(new FileInputStream(filename));&lt;/p&gt;

&lt;p&gt;            Metadata metadata = new Metadata();&lt;br/&gt;
            metadata.set(Metadata.RESOURCE_NAME_KEY, filename);&lt;/p&gt;

&lt;p&gt;            String type = tika.detect(is, metadata);&lt;/p&gt;

&lt;p&gt;Results in different matches as application/msword or application/vnd.ms-excel seemingly at random.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12460075">TIKA-391</key>
            <summary>Intermittent errors detecting xls files</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="chrismattmann">Chris A. Mattmann</assignee>
                                    <reporter username="tylersimon">Simon Tyler</reporter>
                        <labels>
                    </labels>
                <created>Wed, 24 Mar 2010 09:26:00 +0000</created>
                <updated>Mon, 25 Oct 2010 10:24:58 +0100</updated>
                            <resolved>Thu, 29 Jul 2010 18:04:15 +0100</resolved>
                                    <version>0.6</version>
                                    <fixVersion>0.8</fixVersion>
                                    <component>mime</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12849118" author="tylersimon" created="Wed, 24 Mar 2010 09:26:23 +0000"  >
&lt;p&gt;I have had a further look at the nature of the failure to detect the type of&lt;br/&gt;
the particular file and still feel it is a bug.&lt;/p&gt;

&lt;p&gt;This is an excel (.xls) spreadsheet and I give the detector the correct&lt;br/&gt;
filename and correct content content type for it. The detector still fails&lt;br/&gt;
to identify it correctly sometimes.&lt;/p&gt;

&lt;p&gt;I had a look at the code and the reason is now clear to me and is easily&lt;br/&gt;
fixed.&lt;/p&gt;

&lt;p&gt;The getMimeType method searches for a magic match and stops at the first&lt;br/&gt;
hit. The search is ordered (based on priority, size and clause). This&lt;br/&gt;
particular file matches two detectors (word and excel) which compare&lt;br/&gt;
identically - this means the order of them in the SortedSet is undefined,&lt;br/&gt;
this is the cause of the problem.&lt;/p&gt;

&lt;p&gt;A fix is for getMimeType to return the complete set of matches rather than a&lt;br/&gt;
single match and then to use the filename and content-type hints on each&lt;br/&gt;
match returning the first that matches either. I have modified the code to&lt;br/&gt;
do this and it solves the problem. The hint matching could be improved&lt;br/&gt;
further if necessary so that it picks the best match from the set based on&lt;br/&gt;
both hints rather than just stopping at the first.&lt;/p&gt;

&lt;p&gt;Simon&lt;/p&gt;</comment>
                            <comment id="12849122" author="tylersimon" created="Wed, 24 Mar 2010 09:29:51 +0000"  >
&lt;p&gt;Attached is an updated version of MimeTypes.java based on the 0.6 code base. This is tested and solves the problem. The resource name and content type hints now pick a match from the returned list.&lt;/p&gt;

&lt;p&gt;The only changes are the addition of the getMimeTypes method and it&apos;s usage in the detect method.&lt;/p&gt;

&lt;p&gt;A fuller fix for this issue should probably address all the other forms of getMimeType. We could also consider what happens if the two hints hit different magic matches. &lt;/p&gt;

&lt;p&gt;Simon&lt;/p&gt;</comment>
                            <comment id="12850334" author="tylersimon" created="Fri, 26 Mar 2010 20:21:56 +0000"  >
&lt;p&gt;Having just done some Tika performance testing I should say this fix slows Tika down somewhat (50% slower). &lt;/p&gt;

&lt;p&gt;This is because the fix causes Tika to look through all magic mime matches to get the set of matches rather than stopping at the first.&lt;/p&gt;

&lt;p&gt;I did try using the priority as a stop i.e. return all matches of equal highest priority but this does not solve the problem of not using the hints correctly.&lt;/p&gt;

&lt;p&gt;An optimum fix would be to move the usage of the hints into the getMimeType method and returning the first magic mime magic that also matches the hints. In case of no hint matches you would need to remember the first match.&lt;/p&gt;

&lt;p&gt;Simon&lt;/p&gt;</comment>
                            <comment id="12850847" author="tylersimon" created="Mon, 29 Mar 2010 10:08:40 +0100"  >
&lt;p&gt;Attached is an updated fix which does not slow down the detection.&lt;/p&gt;

&lt;p&gt;It simply moves the hint checking into getMimeType.&lt;/p&gt;

&lt;p&gt;Simon&lt;/p&gt;</comment>
                            <comment id="12870127" author="chrismattmann" created="Fri, 21 May 2010 20:40:54 +0100"  >&lt;p&gt;Hi Simon:&lt;/p&gt;

&lt;p&gt;OK I read through the thread on this &amp;#8211; your patch is a bit outdated against the current MimeTypes.java in the current trunk. Also, I think a better way to achieve what you&apos;d like to do without breaking back compat with getMimeType(byte []) is to simply add a new method (or alternatively create a new Detector) that combines the functionality of hinting, and that of magic detection, which is essentially what you implemented.&lt;/p&gt;

&lt;p&gt;Beyond that, we should put together a unit test to demonstrate the behavior you&apos;re seeing (100x calls to tika.detect returns diff results on the same XLS file).&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12870136" author="chrismattmann" created="Fri, 21 May 2010 21:01:39 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;set fix version&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12875526" author="cbamford" created="Fri, 4 Jun 2010 09:35:05 +0100"  >&lt;p&gt;Hi Chris&lt;/p&gt;

&lt;p&gt;I was wondering what the exact status of this fix is?  I work with Simon but he has now gone on holiday, so I am following up in his absence.  I would like to use the Tika version containing this fix (if it exists).  The confusion arises in my mind because the 0.8 release page shows a date of 27th May, but the item (&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-391&quot; title=&quot;Intermittent errors detecting xls files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-391&quot;&gt;&lt;del&gt;TIKA-391&lt;/del&gt;&lt;/a&gt;) says &quot;UNRESOLVED&quot;.&lt;br/&gt;
Could you please clarify?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Chris Bamford&lt;/p&gt;</comment>
                            <comment id="12875528" author="jukkaz" created="Fri, 4 Jun 2010 09:42:28 +0100"  >&lt;p&gt;Tika 0.8 has not yet been released. I removed the incorrect release date from our Jira settings.&lt;/p&gt;</comment>
                            <comment id="12875625" author="chrismattmann" created="Fri, 4 Jun 2010 16:11:26 +0100"  >&lt;p&gt;Hi Chris:&lt;/p&gt;

&lt;p&gt;Check out my earlier comment &amp;#8211; I had a comment regarding a better approach to doing this IMO. Plus, we need to add unit tests. Can you prepare an updated patch for me to review?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                            <comment id="12875629" author="gagravarr" created="Fri, 4 Jun 2010 16:22:00 +0100"  >&lt;p&gt;At any point in the OLE2 document tree, there should only ever be one document, so you should be able to detect it with 100% reliability&lt;/p&gt;

&lt;p&gt;To know what kind of OLE2 document you have, you do need to open it up at the POIFS level, and look at the top level directory entries. Look for each name in turn until you find one you know about, then you&apos;ll know what the document is. For embeded documents, where the embeded files end up depends on the containing document, but ExtractorFactory in POI should give you a good idea about how to handle it for most of the formats&lt;/p&gt;

&lt;p&gt;For an OOXML document (eg .xlsx, .docx), you need to look at the top level zip file entries. You should again only have one kind of document at any point in the tree, so you just need to look at the names until you spot one you know about. Embeded documents are in theory fairly simple with OOXML, as they seem to be stored as-is in the /embeddings/ subdirectory, but POI really needs a few more example files before we can write comprehensive unit tests for this.&lt;/p&gt;</comment>
                            <comment id="12876185" author="cbamford" created="Mon, 7 Jun 2010 10:16:30 +0100"  >&lt;p&gt;Hi Chris&lt;/p&gt;

&lt;p&gt;&amp;gt; Can you prepare an updated patch for me to review? &lt;br/&gt;
Possibly, but it might have to wait for Simon&apos;s return in a couple of weeks as I may not get time.&lt;/p&gt;

&lt;p&gt;Kind regards&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chris&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12878579" author="ricardjp" created="Mon, 14 Jun 2010 14:50:29 +0100"  >&lt;p&gt;I had a similar problem when using the detector with a Microsoft Word document (.doc). Using the detector multiple times on the same file returns different results. Sometimes it is  application/msword and sometimes application/x-tika-msoffice.&lt;/p&gt;

&lt;p&gt;The problem lies in the compareTo() method of the class Magic. The compareTo() method is broken and therefore the order of Magic instances in the SortedSet of the class MimeTypes is also broken which leads to inconsistent mime type detection.&lt;/p&gt;

&lt;p&gt;The comparison algorithm is using the toString() method of a Magic in the case that the priority and the size are the same. Actually the toString() of a Magic returns something like &quot;50/org.apache.tika.detect.MagicDetector@732b3d53&quot;. Since the toString() of MagicDetector in this case is not redefined, the comparison of Magic returns random results. Instead of relying on the toString() in the compareTo() of a Magic, using the type (getType()) of a Magic would ensure more consistent results.&lt;/p&gt;

&lt;p&gt;Jean-Philippe&lt;/p&gt;</comment>
                            <comment id="12893700" author="gagravarr" created="Thu, 29 Jul 2010 18:02:39 +0100"  >&lt;p&gt;I&apos;ve done some work on this, committed in r980508.&lt;/p&gt;

&lt;p&gt;As part of this, I&apos;ve got the compareTo to be more intelligent, largely along the lines you suggested. I&apos;ve also ensured that the magic and magicdetector both have the right mimetype on them, which helps with the sorting and avoids confusion when debugging!&lt;/p&gt;

&lt;p&gt;I&apos;ve added a test that shows that you can detect a test excel file repeatedly without getting the wrong answer. However, for reliable OLE2 document detection, you should use the new ContainerAwareDetector, since mime magic detection won&apos;t always work on OLE2 documents as we can&apos;t be sure where in the file the magic bits will be.&lt;/p&gt;</comment>
                            <comment id="12893895" author="chrismattmann" created="Fri, 30 Jul 2010 02:31:23 +0100"  >&lt;p&gt;Nick, awesome work, per usual!&lt;/p&gt;</comment>
                            <comment id="12924474" author="peetzer" created="Mon, 25 Oct 2010 08:05:33 +0100"  >&lt;p&gt;Note: in version 0.8 when not passing Metadata.RESOURCE_NAME_KEY as argument a ms word document is detected as application/x-tika-msoffice instead of application/msword&lt;/p&gt;</comment>
                            <comment id="12924507" author="gagravarr" created="Mon, 25 Oct 2010 10:24:58 +0100"  >&lt;p&gt;application/x-tika-msoffice is to be expected in many cases when using the mime magic detector on an OLE2 file with no filename specified. You just can&apos;t reliably detect which kind of OLE2 based file format it is from the first few kb.&lt;/p&gt;

&lt;p&gt;You should really use the ContainerAwareDetector if you don&apos;t know the filename, as it is able to open the OLE2 container and figure out the type from the contents.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12440050" name="MimeTypes.java" size="21077" author="tylersimon" created="Mon, 29 Mar 2010 10:08:40 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 May 2010 19:40:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4469</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx42n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16979</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>