<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:32:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-651/TIKA-651.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-651] Unescaped attribute value generated</title>
                <link>https://issues.apache.org/jira/browse/TIKA-651</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;I&apos;ve converted a word document that contains hyperlinks with a complex query component. The &amp;amp; character is not escaped and mozilla complains about that when I write out the XHTML via a content handler that I wrote.&lt;/p&gt;

&lt;p&gt;It&apos;s not clear to me whether or not my contenthandler should assume attributes are properly escaped or not.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12505867">TIKA-651</key>
            <summary>Unescaped attribute value generated</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="spamdaemon">Raimund Merkert</reporter>
                        <labels>
                    </labels>
                <created>Sun, 1 May 2011 07:01:13 +0100</created>
                <updated>Sat, 14 Mar 2015 03:12:37 +0000</updated>
                            <resolved>Sat, 14 Mar 2015 03:12:37 +0000</resolved>
                                    <version>0.9</version>
                                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13027437" author="gagravarr" created="Sun, 1 May 2011 08:41:53 +0100"  >&lt;p&gt;Isn&apos;t it up to the ContentHandler to do any escaping that&apos;s required? See &lt;a href=&quot;http://permalink.gmane.org/gmane.comp.apache.tika.user/590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://permalink.gmane.org/gmane.comp.apache.tika.user/590&lt;/a&gt; for the last time this came up&lt;/p&gt;</comment>
                            <comment id="13027441" author="thetaphi" created="Sun, 1 May 2011 09:44:48 +0100"  >&lt;p&gt;Yes, as per SAX spec, the characters() event gets unescaped text (also startElement()&apos;s attributes). So the code inside the content handler that writes out the text must escape it.&lt;/p&gt;

&lt;p&gt;If someone is interested, I have an xhtml conform content handler (that also makes HTML4-compatible XHTML, normal serializers just produce XML &lt;b&gt;or&lt;/b&gt; HTML4), that is based off XALAN/XERCES serializer.jar, but adds some filtering, so the outputted XHTML has correct block tags, has space before &quot;/&amp;gt;&quot;, and e.g. always separates start/end tag of some elements like &amp;lt;script&amp;gt;&amp;lt;/script&amp;gt; even if they are empty (because only attributes set). It also makes style/script always use CDATA with a faked comment to make this even compatible with HTML4, where SCRIPT/STYLE is defined to be CDATA by default (adding fake comments).&lt;/p&gt;

&lt;p&gt;You only need to add a proper DOCTYPE currently (its not added to this handler for our internal purposes, because we also serialize fragments usig that class, so it omits doctypes).&lt;/p&gt;

&lt;p&gt;I attached this document handler, maybe it is of some use for somebody. It needs serializer.jar from XERCES/XALAN to compile and work.&lt;/p&gt;

&lt;p&gt;This is currently as far as I know the only XHTML serializer that produces XHTML that is in generall needed to make XHTML documents behave correctly even with browsers that only support HTML4. It passes both HTML4 and XHTML1 validators (of course the element data needs to be correct).&lt;/p&gt;</comment>
                            <comment id="13027443" author="thetaphi" created="Sun, 1 May 2011 10:24:58 +0100"  >&lt;p&gt;One addition: This content handler can also be perfectly used to make XSL Transformations outputting XHTML that is compatible according to above information:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Transformer trans = ...; Source src = ...; Writer out = ...;
trans.transform(src, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SAXResult(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; XHTMLContentHandler(out)));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In general this class may be best placed in XERCES/XALAN&apos;s serializers, but as XML spec dont need a separate output type of XHTML, I assume the apache XML project would not accept this for their serializers (I have not yet tried, as my relation to those projects is not very close). Maybe I give it a try.&lt;/p&gt;

&lt;p&gt;Maybe you could add this class in the utils of TIKA (as TIKA is based on XHTML)?&lt;/p&gt;</comment>
                            <comment id="13027464" author="chrismattmann" created="Sun, 1 May 2011 16:11:11 +0100"  >&lt;p&gt;Thanks Uwe!&lt;/p&gt;</comment>
                            <comment id="13027476" author="spamdaemon" created="Sun, 1 May 2011 18:24:29 +0100"  >&lt;p&gt;I agree (and it&apos;s actually quite obvious).&lt;br/&gt;
 As far as I&apos;m concerned, the issue is resolved. It would be nice to have a full XHTML content handler, because that&apos;s why I wrote mine.&lt;/p&gt;</comment>
                            <comment id="13027482" author="thetaphi" created="Sun, 1 May 2011 18:40:59 +0100"  >&lt;p&gt;This is why I added the one I use quite everywhere for producing XHTML. Maybe we can add it to either serializer.jar (via Apache XML) or TIKA.&lt;/p&gt;</comment>
                            <comment id="13027485" author="spamdaemon" created="Sun, 1 May 2011 19:36:21 +0100"  >&lt;p&gt;Great, works nicely. &lt;/p&gt;

&lt;p&gt;I added some code to work around an issue with the img tag and now validates correctly with &lt;a href=&quot;http://validator.w3.org/check&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://validator.w3.org/check&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 
		ContentHandler serializer = new XHTMLSerializer(new OutputStreamWriter(
				xmlResult)) {

			{
				super.setDoctype(
						&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;,
						&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;);
			}

			@Override
			public void startElement(String namespaceURI, String localName,
					String name, Attributes atts) throws SAXException {
				super.startElement(namespaceURI, localName, name, atts);
				if (&quot;img&quot;.equals(localName)
						&amp;amp;&amp;amp; &quot;http://www.w3.org/1999/xhtml&quot;.equals(namespaceURI)) {
					if (atts.getValue(&quot;alt&quot;) == null) {
						addAttribute(&quot;alt&quot;, &quot;&quot;);
					}
				}
			}
		};
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; </comment>
                            <comment id="13027637" author="jukkaz" created="Mon, 2 May 2011 13:47:01 +0100"  >&lt;p&gt;Sounds like this would be a better match for Xerces/Xalan instead of Tika, especially since it has a dependency on them. Resolve as Won&apos;t Fix?&lt;/p&gt;</comment>
                            <comment id="13028208" author="thetaphi" created="Tue, 3 May 2011 14:12:34 +0100"  >&lt;p&gt;I have no preference. I just provide the code here for anybody interested. But indeed, it would be fine to have a XHTML serializer in Apache XML&apos;s serializer.jar&lt;/p&gt;</comment>
                            <comment id="13034937" author="jukkaz" created="Tue, 17 May 2011 19:20:20 +0100"  >&lt;p&gt;Resolving as Won&apos;t Fix as there&apos;s no obvious place where this would fit well inside Tika.&lt;/p&gt;

&lt;p&gt;We can leave the code here for people to find and use, or if someone has the energy it can be pushed to Xerces/Xalan or perhaps somewhere in Apache Commons (there&apos;s a dormant Commons XML sandbox at &lt;a href=&quot;http://svn.apache.org/repos/asf/commons/sandbox/xml/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/commons/sandbox/xml/&lt;/a&gt; that I started in 2009 for things like this).&lt;/p&gt;</comment>
                            <comment id="13088244" author="jukkaz" created="Sat, 20 Aug 2011 19:27:20 +0100"  >&lt;p&gt;Reopening based on discussion in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-692&quot; title=&quot;TikaCLI -x or -h on a Word doc sometimes adds newline after &amp;lt;/b&amp;gt; tag&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-692&quot;&gt;&lt;del&gt;TIKA-692&lt;/del&gt;&lt;/a&gt;. Could there be a way to implement this without the dependency on Xerces? For example as a decorator for standard ContentHandler.&lt;/p&gt;</comment>
                            <comment id="13088246" author="thetaphi" created="Sat, 20 Aug 2011 19:57:55 +0100"  >&lt;p&gt;...or XALAN &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s hard to implement without that dependency, as you would need to implement a full XML serializer without that dep. The trick here is to reuse XALAN/XERCES &lt;b&gt;XML&lt;/b&gt; serializer for XHTML, but modify it a bit to produce XHTML that is also valid HTML4.&lt;/p&gt;</comment>
                            <comment id="13090134" author="mikemccand" created="Wed, 24 Aug 2011 11:36:57 +0100"  >&lt;p&gt;Is it so bad to add a dependency on Xerce&apos;s/Xalan&apos;s serializer.jar?&lt;br/&gt;
It&apos;s smallish (~272 KB).&lt;/p&gt;

&lt;p&gt;If that&apos;s OK then I can add indenting to the current patch here, and&lt;br/&gt;
we can fix TikaCLI to use this for bug-free XHTML serialization.  If&lt;br/&gt;
we take that approach then I think we should undo the other commits on&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-692&quot; title=&quot;TikaCLI -x or -h on a Word doc sometimes adds newline after &amp;lt;/b&amp;gt; tag&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-692&quot;&gt;&lt;del&gt;TIKA-692&lt;/del&gt;&lt;/a&gt;, except for the added test cases., since we need not futz&lt;br/&gt;
with the document&apos;s style formatting, add whitespace, turn off&lt;br/&gt;
pretty-printing in TikaCLI, etc.?&lt;/p&gt;</comment>
                            <comment id="13090159" author="jukkaz" created="Wed, 24 Aug 2011 13:14:25 +0100"  >&lt;blockquote&gt;&lt;p&gt;Is it so bad to add a dependency on Xerce&apos;s/Xalan&apos;s serializer.jar?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. I&apos;ve had numerous battles with XML processing gone haywire in systems that have accidentally pulled in a wrong versions of the XML processing libraries.&lt;/p&gt;

&lt;p&gt;BTW, serializing SAX events to XML, XHTML or HTML4 streams shouldn&apos;t be that difficult to implement directly. We could even copy relevant parts of the code from Xalan.&lt;/p&gt;</comment>
                            <comment id="13090169" author="mikemccand" created="Wed, 24 Aug 2011 13:30:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;Yes. I&apos;ve had numerous battles with XML processing gone haywire in systems that have accidentally pulled in a wrong versions of the XML processing libraries.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, that sounds bad &amp;#8211; let&apos;s not add the dependency.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;BTW, serializing SAX events to XML, XHTML or HTML4 streams shouldn&apos;t be that difficult to implement directly. We could even copy relevant parts of the code from Xalan.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That (poaching/cherry-picking what we need from Xalan) sounds like a reasonable approach here...&lt;/p&gt;</comment>
                            <comment id="14342499" author="tpalsulich" created="Sun, 1 Mar 2015 22:18:15 +0000"  >&lt;p&gt;Is there any update on XML processing libraries that we use? Do we still want to change up our dependencies? If not, I&apos;ll close this this week.&lt;/p&gt;</comment>
                            <comment id="14361555" author="tpalsulich" created="Sat, 14 Mar 2015 03:12:37 +0000"  >&lt;p&gt;Marking as fixed per the above comment. And, it&apos;s been a week and a half with no objection.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12477899" name="XHTMLSerializer.java" size="3231" author="thetaphi" created="Sun, 1 May 2011 09:44:48 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 1 May 2011 07:41:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3891</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx2hb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16721</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>