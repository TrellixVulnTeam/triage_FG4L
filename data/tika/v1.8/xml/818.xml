<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:27:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-818/TIKA-818.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-818] Allow PDFBox to be used with RandomAccessFile vs RandomAccessBuffer to allow for a memory vs performance tradeoff</title>
                <link>https://issues.apache.org/jira/browse/TIKA-818</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;After upgrading to Tika 0.10, began having OOM errors processing large amounts of PDFs in parallel. The heap dump indicated that all the memory was getting used up by PDFBox RandomAccessBuffers. After digging around, it looks like PDFBox now defaults to using RAM vs temporary files for PDF extraction. This can be overridden to use RandomAccessFiless. &lt;/p&gt;

&lt;p&gt;I propose that Tika controls file vs buffer based on the inputstream type received. If the TikaInputStream is a file, RandomAccessFile should be used and for other stream types, RandomAccessBuffer can be used. &lt;/p&gt;

&lt;p&gt;I believe the code to control this is here:&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/tika/blob/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/tika/blob/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At ~line 87:&lt;br/&gt;
PDDocument pdfDocument =&lt;br/&gt;
            PDDocument.load(new CloseShieldInputStream(stream), true);&lt;/p&gt;

&lt;p&gt;Not sure if this is the best approach and am curious if there are other ideas on how to control this and keep the interface clean. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12535734">TIKA-818</key>
            <summary>Allow PDFBox to be used with RandomAccessFile vs RandomAccessBuffer to allow for a memory vs performance tradeoff</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ppearcy">Paul Pearcy</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Dec 2011 18:24:00 +0000</created>
                <updated>Fri, 10 Feb 2012 14:21:12 +0000</updated>
                            <resolved>Fri, 10 Feb 2012 14:21:12 +0000</resolved>
                                    <version>0.10</version>
                    <version>1.0</version>
                                    <fixVersion>1.1</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="86400">24h</timeoriginalestimate>
                            <timeestimate seconds="86400">24h</timeestimate>
                                        <comments>
                            <comment id="13173000" author="gagravarr" created="Tue, 20 Dec 2011 07:41:44 +0000"  >&lt;p&gt;I&apos;ve just gone to make the change, and discovered that even if I pass a File object to PDDocument, it turns that into a FileInputStream and handles it as a stream&lt;/p&gt;

&lt;p&gt;It looks from first glance like the random access files are just used for temp storage, but I&apos;m not sure. It&apos;s probably best to ask on the PDFBox list how to do the lowest memory parsing when you start with a file. Once we know the answer to that, we can make the change to pass PDFBox a file if we have it&lt;/p&gt;</comment>
                            <comment id="13190895" author="ppearcy" created="Mon, 23 Jan 2012 06:30:58 +0000"  >&lt;p&gt;Hey Nick, &lt;br/&gt;
  Thanks a ton for taking a look! Apologies for the delay in response. &lt;/p&gt;

&lt;p&gt;The key trigger for PDFBox to use in-memory vs temporary file is the RandomAccess passed to the load method:&lt;br/&gt;
&lt;a href=&quot;http://www.jarvana.com/jarvana/view/org/apache/pdfbox/pdfbox/1.6.0/pdfbox-1.6.0-javadoc.jar!/org/apache/pdfbox/pdmodel/PDDocument.html#load(java.io.InputStream&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jarvana.com/jarvana/view/org/apache/pdfbox/pdfbox/1.6.0/pdfbox-1.6.0-javadoc.jar!/org/apache/pdfbox/pdmodel/PDDocument.html#load(java.io.InputStream&lt;/a&gt;, org.apache.pdfbox.io.RandomAccess, boolean)&lt;/p&gt;

&lt;p&gt;Here is a sample I&apos;ve been hacking around with:&lt;br/&gt;
&lt;a href=&quot;https://gist.github.com/1661161&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/1661161&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code probably isn&apos;t the best way to set things up for a couple of reasons:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It&apos;d be nice to allow callers to pick memory or file buffers. Not sure what the correct approach would be to keep Tika interface clean.&lt;/li&gt;
	&lt;li&gt;I think TikaInputStream has its own temporary file resource management that should probably be used. Haven&apos;t figured that out yet.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks and Best Regards,&lt;br/&gt;
Paul&lt;/p&gt;</comment>
                            <comment id="13190965" author="gagravarr" created="Mon, 23 Jan 2012 10:00:20 +0000"  >&lt;p&gt;Tika does already handle its own temporary files, via org.apache.tika.io.TemporaryResources, it should be fairly straightforward to use that for the temporary files for your case too&lt;/p&gt;

&lt;p&gt;In terms of picking, I&apos;d potentially suggest that if the TikaInputStream has a file then use file based resources, but if it&apos;s stream based only then continue with the current behaviour&lt;/p&gt;</comment>
                            <comment id="13191943" author="ppearcy" created="Tue, 24 Jan 2012 06:36:50 +0000"  >&lt;p&gt;Here is a patch based off the trunk. Please let me know your thoughts. Thanks!&lt;/p&gt;</comment>
                            <comment id="13191974" author="ppearcy" created="Tue, 24 Jan 2012 07:31:01 +0000"  >&lt;p&gt;Here&apos;s a version that should pass all tests. Please ignore the first one. &lt;/p&gt;</comment>
                            <comment id="13192072" author="gagravarr" created="Tue, 24 Jan 2012 11:08:54 +0000"  >&lt;p&gt;Are you sure the scratchFile should be the real file itself, rather than a temp file? The javadoc says &quot;scratchFile - A location to store temp PDFBox data for this document.&quot; which makes me think it maybe shouldn&apos;t be the same one&lt;/p&gt;

&lt;p&gt;Also, for the TikaInputStream check, can we not just use hasFile(), rather than adding a new method?&lt;/p&gt;</comment>
                            <comment id="13201105" author="ppearcy" created="Mon, 6 Feb 2012 07:25:16 +0000"  >&lt;p&gt;Thanks Nick!&lt;/p&gt;

&lt;p&gt;I thought you created temp resources through TikaInputStream getFile, but that was way off base &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Attaching another shot, let me know your thoughts. Would be nice to get to the TikaInputStream TemporaryResource directly for the temp file, but not sure the cleanest way to do so. &lt;/p&gt;</comment>
                            <comment id="13205473" author="gagravarr" created="Fri, 10 Feb 2012 14:21:02 +0000"  >&lt;p&gt;Temp files created through TemporaryResources are already added for closing, so we can simplify your patch a little bit&lt;/p&gt;

&lt;p&gt;Slightly modified version applied in r1242786, thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12513407" name="PDFParser.java.patch" size="2810" author="ppearcy" created="Mon, 6 Feb 2012 07:26:13 +0000"/>
                            <attachment id="12511639" name="choose_inmemory_vs_temp_file_pdf.patch" size="2927" author="ppearcy" created="Tue, 24 Jan 2012 06:36:50 +0000"/>
                            <attachment id="12511643" name="choose_inmemory_vs_temp_file_pdf_passes_tests.patch" size="3080" author="ppearcy" created="Tue, 24 Jan 2012 07:31:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Dec 2011 07:41:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>221418</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx1g7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16554</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>