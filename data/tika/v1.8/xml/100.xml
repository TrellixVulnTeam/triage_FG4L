<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:28:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-100/TIKA-100.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-100] Structured PDF parsing</title>
                <link>https://issues.apache.org/jira/browse/TIKA-100</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;The PDF parser currently extracts and outputs document content as a single string. PDFBox could be used to support structuring at least down to page and paragraph (not sure how accurate) level.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382386">TIKA-100</key>
            <summary>Structured PDF parsing</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Nov 2007 22:04:50 +0000</created>
                <updated>Sun, 1 Mar 2015 06:31:07 +0000</updated>
                            <resolved>Sun, 1 Mar 2015 06:31:07 +0000</resolved>
                                                                    <component>parser</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="12902897" author="grigory" created="Thu, 26 Aug 2010 16:29:27 +0100"  >&lt;p&gt;This issue seems to be partially fixed. PDF2XHTML generates &amp;lt;div&amp;gt;&amp;lt;p&amp;gt; and &amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; to start and end each page. &lt;/p&gt;

&lt;p&gt;Another issue that is part of this is ordering of pdf content. PDF2XHTML extends PDFBox PDFTextStripper to extract text. By default (for performance reasons) &apos;sortByPosition&apos; mode is turned off for PDFTextStripper. &lt;/p&gt;

&lt;p&gt;I propose to introduce metadata property (input) that would turn it on if desired. I am not sure about conventions on how such metadata properties are defined (if any) though. The setting of the mode would take place in the PDF2XHTML constructor:&lt;/p&gt;

&lt;p&gt;private PDF2XHTML(ContentHandler handler, Metadata metadata)&lt;br/&gt;
            throws IOException {&lt;/p&gt;

&lt;p&gt;        if (metadata.get(&quot;SortByPosition&quot;).equalsIgnoreCase(&quot;true&quot;)) &lt;/p&gt;
{
                setSortByPosition(true);
        }

&lt;p&gt;        ....&lt;/p&gt;</comment>
                            <comment id="13045184" author="grigory" created="Mon, 6 Jun 2011 23:35:18 +0100"  >&lt;p&gt;The issue with &apos;sortByPosition&apos; is addressed by &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-612&quot; title=&quot;Specify PDFBox options via ParseContext &quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-612&quot;&gt;&lt;del&gt;TIKA-612&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13096863" author="malik.hemani" created="Sun, 4 Sep 2011 13:18:44 +0100"  >&lt;p&gt;Since PDFTextStripper can extract at page level, here is one possible solution that can let Tika extract text for a single page or a range of pages (excuse the formatting lost in translation):&lt;/p&gt;

&lt;p&gt;1. Add a new method to Parser interface:&lt;br/&gt;
    void parse(&lt;br/&gt;
            InputStream stream, ContentHandler handler,&lt;br/&gt;
            Metadata metadata, ParseContext context, int startPage, int endPage)&lt;br/&gt;
            throws IOException, SAXException, TikaException;&lt;/p&gt;

&lt;p&gt;2. Implement the method PDFParser class:&lt;br/&gt;
    public void parse(&lt;br/&gt;
            InputStream stream, ContentHandler handler,&lt;br/&gt;
            Metadata metadata, ParseContext context, int startPage, int endPage)&lt;br/&gt;
            throws IOException, SAXException, TikaException {&lt;br/&gt;
        PDDocument pdfDocument = PDDocument.load(stream, true);&lt;br/&gt;
        try {&lt;br/&gt;
            if (pdfDocument.isEncrypted()) {&lt;br/&gt;
                try {&lt;br/&gt;
                    String password = metadata.get(PASSWORD);&lt;br/&gt;
                    if (password == null) &lt;/p&gt;
{
                        password = &quot;&quot;;
                    }
&lt;p&gt;                    pdfDocument.decrypt(password);&lt;br/&gt;
                } catch (Exception e) &lt;/p&gt;
{
                    // Ignore
                }
&lt;p&gt;            }&lt;br/&gt;
            metadata.set(Metadata.CONTENT_TYPE, &quot;application/pdf&quot;);&lt;br/&gt;
            extractMetadata(pdfDocument, metadata);&lt;br/&gt;
            PDF2XHTML.process(pdfDocument, handler, metadata, startPage, endPage);&lt;br/&gt;
        } finally &lt;/p&gt;
{
            pdfDocument.close();
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;3. Add a new method in PDF2XHTML class:&lt;br/&gt;
    public static void process(&lt;br/&gt;
        PDDocument document, ContentHandler handler, Metadata metadata, int startPage, int endPage)&lt;br/&gt;
            throws SAXException, TikaException {&lt;br/&gt;
        try {&lt;br/&gt;
            // Extract text using a dummy Writer as we override the&lt;br/&gt;
            // key methods to output to the given content handler.&lt;br/&gt;
            PDF2XHTML pdf2XHTML = new PDF2XHTML(handler, metadata);&lt;/p&gt;

&lt;p&gt;            // Set start and end page&lt;br/&gt;
            if (startPage &amp;gt; 0) &lt;/p&gt;
{
            	pdf2XHTML.setStartPage(startPage);
	    }

&lt;p&gt;	    if (endPage &amp;gt; 0) &lt;/p&gt;
{
            	pdf2XHTML.setEndPage(endPage);
	    }

&lt;p&gt;            pdf2XHTML.writeText(document, new Writer() {&lt;br/&gt;
                @Override&lt;br/&gt;
                public void write(char[] cbuf, int off, int len) {&lt;br/&gt;
                }&lt;br/&gt;
                @Override&lt;br/&gt;
                public void flush() {&lt;br/&gt;
                }&lt;br/&gt;
                @Override&lt;br/&gt;
                public void close() {&lt;br/&gt;
                }&lt;br/&gt;
            });&lt;br/&gt;
        } catch (IOException e) {&lt;br/&gt;
            if (e.getCause() instanceof SAXException) &lt;/p&gt;
{
                throw (SAXException) e.getCause();
            }
&lt;p&gt; else &lt;/p&gt;
{
                throw new TikaException(&quot;Unable to extract PDF content&quot;, e);
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;4. Example of a call to extract page 2 of a PDF:&lt;br/&gt;
                ...&lt;br/&gt;
                int startPage = 2;&lt;br/&gt;
                int endPage = 2;&lt;br/&gt;
		PDFParser parser = new PDFParser();&lt;br/&gt;
		parser.parse(input, textHandler, metadata, new ParseContext(), startPage, endPage);&lt;/p&gt;
</comment>
                            <comment id="13590425" author="davidvdd" created="Fri, 1 Mar 2013 11:04:59 +0000"  >&lt;p&gt;At the moment I&apos;m using pdfbox  to upload my data to solr(seachengine). Since it doesn&apos;t support page extraction.&lt;/p&gt;

&lt;p&gt;I&apos;m pretty sure if tika(Solr uses tika if you use the extracthandler) gets this. They might change solr so it can return page hits for pdf&apos;s.&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 26 Aug 2010 15:29:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4762</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx5vb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17270</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>