<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:38:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-154/TIKA-154.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-154] Better detection of plain text versus binary formats with a text header</title>
                <link>https://issues.apache.org/jira/browse/TIKA-154</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Antoni Mylka noted on the mailing list:&lt;/p&gt;

&lt;p&gt;    Many binary formats begin with magic byte sequences composed of ASCII characters, e.g.&lt;br/&gt;
    zipfiles begin with PK&lt;br/&gt;
    pdfs begin with %PDF-&lt;br/&gt;
    chms help files begin with ITSF&lt;br/&gt;
    etc.&lt;/p&gt;

&lt;p&gt;Tika should do a better job of detecting such cases.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12401581">TIKA-154</key>
            <summary>Better detection of plain text versus binary formats with a text header</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Aug 2008 08:57:17 +0100</created>
                <updated>Fri, 22 May 2009 23:04:55 +0100</updated>
                            <resolved>Sat, 17 Jan 2009 01:16:23 +0000</resolved>
                                                    <fixVersion>0.3</fixVersion>
                                    <component>mime</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12661997" author="arusin" created="Thu, 8 Jan 2009 15:19:04 +0000"  >&lt;p&gt;I implemented a simple, maybe a bit naive, but working checking mechanism for text files:&lt;/p&gt;

&lt;p&gt;	public boolean isProperFile(File file, String mimeTypeName) throws IOException {&lt;/p&gt;

&lt;p&gt;		//we check only text types here&lt;br/&gt;
		if (!mimeTypeName.startsWith(&quot;text&quot;))&lt;br/&gt;
			return true;&lt;/p&gt;

&lt;p&gt;		Perl5Util util = new Perl5Util();&lt;br/&gt;
		byte[] data = getFileSample(file);&lt;/p&gt;

&lt;p&gt;		if (data == null)&lt;br/&gt;
			//empty file, can assume as text&lt;br/&gt;
			return true;&lt;/p&gt;

&lt;p&gt;		String s = new String(data, &quot;UTF-8&quot;);&lt;br/&gt;
		if (!util.match(&quot;/[^&lt;span class=&quot;error&quot;&gt;&amp;#91;:ascii:&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;:space:&amp;#93;&lt;/span&gt;]/&quot;, s)) &lt;/p&gt;
{
			return true;
		}

&lt;p&gt;		return false;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;	protected byte[] getFileSample(File file) throws IOException,&lt;br/&gt;
			IOException {&lt;br/&gt;
		byte[] data = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;SAMPLE_SIZE&amp;#93;&lt;/span&gt;;&lt;br/&gt;
		FileInputStream fs = null;&lt;br/&gt;
		try &lt;/p&gt;
{
			fs = new FileInputStream(file);
			int read = fs.read(data);
						
			if (read &amp;lt; 0)
				return null;
			
			data = Arrays.copyOfRange(data, 0, read);
		}
&lt;p&gt; finally &lt;/p&gt;
{
			if (fs != null)
				fs.close();	
		}
&lt;p&gt;		return data;&lt;br/&gt;
	}&lt;/p&gt;</comment>
                            <comment id="12664764" author="jukkaz" created="Sat, 17 Jan 2009 01:16:23 +0000"  >&lt;p&gt;In revision 735193 I implemented the plain text detection mechanism described in section 4 of the content type sniffing draft &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; I mentioned earlier on the mailing list.&lt;/p&gt;

&lt;p&gt;This seems to work pretty fine, and finally allows us to detect plain text documents with no file name or type hints. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Resolving as Fixed.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://webblaze.cs.berkeley.edu/2009/mime-sniff/mime-sniff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://webblaze.cs.berkeley.edu/2009/mime-sniff/mime-sniff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12664767" author="jukkaz" created="Sat, 17 Jan 2009 01:20:46 +0000"  >&lt;p&gt;Re: Andrzej. The implementation I committed is based on a similar idea than the one you suggest. It looks at the first few bytes of the document and treats the document as text if no non-printable control characters are found.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 Jan 2009 15:19:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4707</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx5jb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17216</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>