<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:29:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1198/TIKA-1198.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1198] Consider optionally utilizing CXF JAX-RS Attachment support</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1198</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;CXF offers a fairly extensive support for multiparts:&lt;br/&gt;
&lt;a href=&quot;http://cxf.apache.org/docs/jax-rs-multiparts.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cxf.apache.org/docs/jax-rs-multiparts.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perhaps some of that can help with the server offering more options to do with uploading/downloading files&lt;/p&gt;</description>
                <environment></environment>
        <key id="12679649">TIKA-1198</key>
            <summary>Consider optionally utilizing CXF JAX-RS Attachment support</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sergey_beryozkin">Sergey Beryozkin</assignee>
                                    <reporter username="sergey_beryozkin">Sergey Beryozkin</reporter>
                        <labels>
                    </labels>
                <created>Sun, 17 Nov 2013 21:06:57 +0000</created>
                <updated>Tue, 25 Mar 2014 16:21:48 +0000</updated>
                            <resolved>Wed, 29 Jan 2014 17:51:24 +0000</resolved>
                                                    <fixVersion>1.5</fixVersion>
                                    <component>server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13840240" author="sergey_beryozkin" created="Thu, 5 Dec 2013 16:32:14 +0000"  >&lt;p&gt;I&apos;ve added an initial support for multiparts:&lt;br/&gt;
r1548195&lt;/p&gt;

&lt;p&gt;This is CXF specific, but CXF specific code is kept to the very minimum. IMHO CXF is very good in the way it treats multiparts, but I&apos;ve no problems at all with the team replacing that with something more portable; &lt;/p&gt;

&lt;p&gt;Note In TikaResource, I&apos;ve removed calls to TikaInpputStream.getFile(), which seems to be adding to the extra processing time, all the tests pass, that can be added back if needed&lt;/p&gt;</comment>
                            <comment id="13840244" author="sergey_beryozkin" created="Thu, 5 Dec 2013 16:35:04 +0000"  >&lt;p&gt;Single part multiparts are supported, easy to support the ones with many parts or with a proper multipart form data payload with multiple files, but I&apos;m not sure it makes sense for TikaResource&lt;/p&gt;</comment>
                            <comment id="13858301" author="davemeikle" created="Sun, 29 Dec 2013 10:22:40 +0000"  >&lt;p&gt;Sergey  - this change appears to be breaking the current guidance on our Wiki about the commands to use when calling Tika Server (i.e. curl -T or curl -X PUT - d).  It is also confusing when it is enabled on some and not all resources.&lt;/p&gt;

&lt;p&gt;I noticed this when running some test scripts I have on the latest build, so was wondering - is there a way to retain this compatibility?&lt;/p&gt;

</comment>
                            <comment id="13858388" author="sergey_beryozkin" created="Sun, 29 Dec 2013 18:20:19 +0000"  >&lt;p&gt;Can you clarify please how the change has affected it ? Thanks &lt;/p&gt;
</comment>
                            <comment id="13859434" author="davemeikle" created="Tue, 31 Dec 2013 10:55:42 +0000"  >&lt;p&gt;One example would be running the following command based on guidance from our wiki:&lt;br/&gt;
curl -T test.txt &lt;a href=&quot;http://localhost:9998/tika&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:9998/tika&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whilst this works with tika-server from 1.4, in the current 1.5-SNAPSHOT it returns no response to the client and raises the following exception from the tika-server:&lt;/p&gt;

&lt;p&gt;Dec 31, 2013 10:48:03 AM org.apache.cxf.jaxrs.utils.JAXRSUtils readFromMessageBody&lt;br/&gt;
WARNING: No message body reader has been found for request class Attachment, ContentType : application/octet-stream.&lt;br/&gt;
Dec 31, 2013 10:48:03 AM org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse&lt;br/&gt;
WARNING: javax.ws.rs.WebApplicationException&lt;br/&gt;
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1253)&lt;br/&gt;
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:782)&lt;br/&gt;
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:741)&lt;br/&gt;
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:254)&lt;br/&gt;
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:90)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)&lt;br/&gt;
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)&lt;br/&gt;
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:355)&lt;br/&gt;
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:319)&lt;br/&gt;
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)&lt;br/&gt;
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1088)&lt;br/&gt;
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1024)&lt;br/&gt;
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)&lt;br/&gt;
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)&lt;br/&gt;
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)&lt;br/&gt;
	at org.eclipse.jetty.server.Server.handle(Server.java:370)&lt;br/&gt;
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)&lt;br/&gt;
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)&lt;br/&gt;
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)&lt;br/&gt;
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:651)&lt;br/&gt;
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)&lt;br/&gt;
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)&lt;br/&gt;
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)&lt;br/&gt;
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)&lt;br/&gt;
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)&lt;br/&gt;
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:722)&lt;/p&gt;
</comment>
                            <comment id="13875723" author="jcarnus" created="Sat, 18 Jan 2014 18:59:42 +0000"  >&lt;p&gt;I agree, the old command produce the same error with the snapshot, the new curl command is:&lt;br/&gt;
curl -X PUT --form upload=@file http....&lt;/p&gt;

&lt;p&gt;It&apos;s working with that.&lt;/p&gt;</comment>
                            <comment id="13875956" author="sergey_beryozkin" created="Sun, 19 Jan 2014 18:18:38 +0000"  >&lt;p&gt;Dave, I&apos;ve missed your comment with the exception trace, sorry about it.&lt;/p&gt;

&lt;p&gt;After seeing a comment from Jeremy I&apos;ve tested the JAX-RS server and I can confirm all works as expected.&lt;/p&gt;

&lt;p&gt;Note, &quot;curl -T somefile targetURI&quot; does not set Content-Type which explains the exception you are seeing. TikaServer has two resource methods accepting PUT payloads on the same path, one - specifically the multipart/form-data ones and another - all other types of payloads, and it uses a wildcard to match all possible types.  Thus a method with a more specific JAX-RS Consumes value (multipart/form-data) is chosen when no Content-Type is available: the error actually mentions an octet-stream - this is due to the fact that the spec says that if no CT is available then use application/octet-stream when trying to read the stream - after the method selection has been completed. &lt;/p&gt;

&lt;p&gt;Two fixes are possible:&lt;/p&gt;

&lt;p&gt;1. Use -H curl parameter, for example, I&apos;ve started a server (using a newly added -Pserver profile) and posted a pom.xml to it, adding &apos;-H &quot;Content-Type: text/xml&quot;&apos; and all worked fine. So the actual &apos;fix&apos; is to update the docs and recommend to set up Content-Type when no multiparts are used.&lt;/p&gt;

&lt;p&gt;2. Have a TikaServer resource method accepting multiparts listen on a unique path, say on &quot;http://localhost:9998/tika/form&quot;&lt;/p&gt;

&lt;p&gt;Option 2 is less &apos;disruptive&apos; but option 1 is marginally cleaner IMHO as the clients PUT-ing something into the server are expected to set Content-Type.&lt;/p&gt;

&lt;p&gt;I&apos;m fine with implementing Option 2 though too - perhaps it can be done anyway but users should be encouraged to set content types anyway - this can optimize the parsing, aka, avoid doing the detection at the parser level and optionally use a Content-Type  &lt;/p&gt;

&lt;p&gt;So, will we add a &quot;/form&quot; to a multipart/form-data accepting resource method or keep things as is ?&lt;/p&gt;

&lt;p&gt;Cheers, Sergey&lt;/p&gt;
</comment>
                            <comment id="13876386" author="sergey_beryozkin" created="Mon, 20 Jan 2014 12:03:13 +0000"  >&lt;p&gt;I&apos;m treating the fact that Content-Type (if not available in the request) is defaulted to application/octet-stream &lt;b&gt;after&lt;/b&gt; the method selection is done as a JAX-RS 2.0 spec text bug and seeking some clarifications before deciding how to treat it. Basically, if the defaulting was done &lt;b&gt;before&lt;/b&gt; the method selection then adding a new method specifically accepting multiparts would have no effect on the existing tests using &quot;curl -T&quot; with no Content-Type set. &lt;/p&gt;

&lt;p&gt;We do not have to wait though for this spec issue be sorted out before Tika 1.5 gets released. Adding a &quot;/form&quot; to the multipart/form-data accepting method would make it work as expected without the existing tests being affected&lt;/p&gt;</comment>
                            <comment id="13876920" author="davemeikle" created="Mon, 20 Jan 2014 22:23:03 +0000"  >&lt;p&gt;Hi Sergey - Thanks for taking a look at this.  I agree encouraging users to set Content Types helps optimise processing but in my head just changing how things works between minor releases in a feature like this is like breaking binary compatibility on the code API.&lt;/p&gt;

&lt;p&gt;I think adding &quot;/form&quot; would be a good short term fix that would provide the feature whilst retaining compatibility with older guidance on the Wiki.  This would allow a prep of Tika 1.5 RC too.  I am thinking we should also pre-empt a future change by starting to update the guidance around Content Types.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Dave&lt;/p&gt;
</comment>
                            <comment id="13877382" author="sergey_beryozkin" created="Tue, 21 Jan 2014 10:56:40 +0000"  >&lt;p&gt;Hi Dave, yes, I agree, &lt;br/&gt;
All methods accepting multipart/form-data now have &quot;/form&quot; Path qualifiers&lt;br/&gt;
Please try the snapshots/trunk&lt;/p&gt;

&lt;p&gt;Cheers, Sergey  &lt;/p&gt;</comment>
                            <comment id="13877646" author="sergey_beryozkin" created="Tue, 21 Jan 2014 17:42:16 +0000"  >&lt;p&gt;We&apos;ve got an early agreement that it makes sense to sort out the issue of defaulting Content-Type to application/octet-stream earlier than is currently suggested. I can fix it in CXF right now but that will get it a bit &apos;exposed&apos; to TCK test restrictions if JAX-RS 2.1 won&apos;t actually get it fixed. As such I think we can indeed settle on supporting a unique path for multipart/form-data payloads to support the cases where the client does not provide a content-type&lt;/p&gt;

&lt;p&gt;Cheers, Sergey&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 29 Dec 2013 10:22:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359009</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzjqdj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359299</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>