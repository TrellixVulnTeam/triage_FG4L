<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:32:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-866/TIKA-866.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-866] Invalid configuration file causes OutOfMemoryException</title>
                <link>https://issues.apache.org/jira/browse/TIKA-866</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;I tried to override a built-in parser according to the method described in issue &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-527&quot; title=&quot;Allow override mapping mime&amp;lt;--&amp;gt;parsers through config&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-527&quot;&gt;&lt;del&gt;TIKA-527&lt;/del&gt;&lt;/a&gt;. During testing this approach I used an incomplete configuration file (as far as I learned from a discussion on the mailing list also mimetypes and a detector should be specified):&lt;/p&gt;

&lt;p&gt;$ cat tika-config.xml&lt;br/&gt;
&amp;lt;properties&amp;gt;&lt;br/&gt;
&amp;lt;parsers&amp;gt;&lt;br/&gt;
&amp;lt;parser class=&quot;org.apache.tika.parser.DefaultParser&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;/parsers&amp;gt;&lt;br/&gt;
&amp;lt;/properties&amp;gt;&lt;/p&gt;

&lt;p&gt;Using this configuration file causes an OutOfMemoryException:&lt;/p&gt;

&lt;p&gt;$ java -Dtika.config=tika-config.xml -jar tika-app-1.0.jar --list-parsers&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: GC overhead limit exceeded&lt;br/&gt;
        at java.util.Arrays.copyOfRange(Arrays.java:3209)&lt;br/&gt;
        at java.lang.String.&amp;lt;init&amp;gt;(String.java:216)&lt;br/&gt;
        at java.lang.StringBuilder.toString(StringBuilder.java:430)&lt;br/&gt;
        at org.apache.tika.mime.MediaType.toString(MediaType.java:237)&lt;br/&gt;
        at org.apache.tika.detect.MagicDetector.&amp;lt;init&amp;gt;(MagicDetector.java:142)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesReader.readMatch(MimeTypesReader.java:254)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesReader.readMatches(MimeTypesReader.java:202)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesReader.readMagic(MimeTypesReader.java:186)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesReader.readMimeType(MimeTypesReader.java:152)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesReader.read(MimeTypesReader.java:124)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesReader.read(MimeTypesReader.java:107)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesFactory.create(MimeTypesFactory.java:63)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesFactory.create(MimeTypesFactory.java:91)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypesFactory.create(MimeTypesFactory.java:147)&lt;br/&gt;
        at org.apache.tika.mime.MimeTypes.getDefaultMimeTypes(MimeTypes.java:455)&lt;br/&gt;
        at org.apache.tika.config.TikaConfig.typesFromDomElement(TikaConfig.java:273)&lt;br/&gt;
        at org.apache.tika.config.TikaConfig.&amp;lt;init&amp;gt;(TikaConfig.java:161)&lt;br/&gt;
        at org.apache.tika.config.TikaConfig.getDefaultConfig(TikaConfig.java:237)&lt;br/&gt;
        at org.apache.tika.mime.MediaTypeRegistry.getDefaultRegistry(MediaTypeRegistry.java:42)&lt;br/&gt;
        at org.apache.tika.parser.DefaultParser.&amp;lt;init&amp;gt;(DefaultParser.java:52)&lt;br/&gt;
        at sun.reflect.GeneratedConstructorAccessor4.newInstance(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)&lt;br/&gt;
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)&lt;br/&gt;
        at java.lang.Class.newInstance0(Class.java:355)&lt;br/&gt;
        at java.lang.Class.newInstance(Class.java:308)&lt;br/&gt;
        at org.apache.tika.config.TikaConfig.parserFromDomElement(TikaConfig.java:288)&lt;br/&gt;
        at org.apache.tika.config.TikaConfig.&amp;lt;init&amp;gt;(TikaConfig.java:162)&lt;br/&gt;
        at org.apache.tika.config.TikaConfig.getDefaultConfig(TikaConfig.java:237)&lt;br/&gt;
        at org.apache.tika.mime.MediaTypeRegistry.getDefaultRegistry(MediaTypeRegistry.java:42)&lt;br/&gt;
        at org.apache.tika.parser.DefaultParser.&amp;lt;init&amp;gt;(DefaultParser.java:52)&lt;br/&gt;
        at sun.reflect.GeneratedConstructorAccessor4.newInstance(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27) &lt;/p&gt;

&lt;p&gt;Expected behavior: If the configuration file is not valid, and appropriate exception should be produced.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12543045">TIKA-866</key>
            <summary>Invalid configuration file causes OutOfMemoryException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="smuehlst">Stephan M&#252;hlstrasser</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Feb 2012 12:37:26 +0000</created>
                <updated>Fri, 17 Feb 2012 18:30:34 +0000</updated>
                            <resolved>Fri, 17 Feb 2012 13:42:33 +0000</resolved>
                                    <version>1.0</version>
                                    <fixVersion>1.1</fixVersion>
                                    <component>config</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13210211" author="smuehlst" created="Fri, 17 Feb 2012 12:40:20 +0000"  >&lt;p&gt;Unit test to reproduce the problem.&lt;/p&gt;</comment>
                            <comment id="13210219" author="gagravarr" created="Fri, 17 Feb 2012 12:45:47 +0000"  >&lt;p&gt;If the Tika Config file is missing elements (eg only has a parsers definition), then we have two choices:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Use the objects that TikaConfig.getDefaultConfig() would have done for the missing ones&lt;/li&gt;
	&lt;li&gt;Throw a helpful exception&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m leaning towards the former, as that makes it easier for us to expand the config file without breaking things for existing users. Can anyone see a problem with that idea?&lt;/p&gt;</comment>
                            <comment id="13210254" author="jukkaz" created="Fri, 17 Feb 2012 13:25:54 +0000"  >&lt;p&gt;The problem here aren&apos;t the missing mimetypes and detector entries but rather the fact that you&apos;re specifying the composite DefaultParser class in a &amp;lt;parser&amp;gt; element. When a DefaultParser instance is created, it tries to load the &lt;b&gt;default&lt;/b&gt; configuration, which in this case leads to the infinite loop. The &amp;lt;parser&amp;gt; elements are designed only to list the actual format-specific Parser implementations, that composite parsers like DefaultParser or AutoDetectParser can then use as lower-level components.&lt;/p&gt;</comment>
                            <comment id="13210261" author="jukkaz" created="Fri, 17 Feb 2012 13:42:33 +0000"  >&lt;p&gt;Fixed in revision 1245445 by adding an explicit check against composite parsers in &amp;lt;parser&amp;gt; entries.&lt;/p&gt;</comment>
                            <comment id="13210429" author="jukkaz" created="Fri, 17 Feb 2012 18:30:34 +0000"  >&lt;p&gt;Actually, scrap the above rationale. The DefaultParser is OK for inclusion in a configuration file (that&apos;s actually what it was designed for, see &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-527&quot; title=&quot;Allow override mapping mime&amp;lt;--&amp;gt;parsers through config&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-527&quot;&gt;&lt;del&gt;TIKA-527&lt;/del&gt;&lt;/a&gt;), it&apos;s just AutoDetectParser that wouldn&apos;t work well with that mechanism. The infinite loop triggered by DefaultParser was rather a result of an unnecessary getDefaultConfig() call in MediaTypeRegistry.getDefaultRegistry().&lt;/p&gt;

&lt;p&gt;I replaced that call and restored the ability to use DefaultParser in configuration in revision 1245692. And as discussed above, I also improved the config code use the default parser or detector loading mechanism when no explicit &amp;lt;parser&amp;gt; or &amp;lt;detector&amp;gt; entries are present in a configuration file. A missing mimetypes entry was already being handled by loading the default settings, which was the original cause of the OOM as explained above.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12514977" name="ConfigFile.java" size="1130" author="smuehlst" created="Fri, 17 Feb 2012 12:40:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 17 Feb 2012 12:45:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>228331</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx15j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>