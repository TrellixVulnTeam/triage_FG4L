<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:30:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-930/TIKA-930.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-930] Consolidation of Some Tika Core Properties</title>
                <link>https://issues.apache.org/jira/browse/TIKA-930</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>
&lt;p&gt;There are a few properties in TikaCoreProperties which overlap and I think we should minimize ambiguity by consolidating them into a single composite property with the clearest name, the most general specification referenced as its primary property, and the others and deprecated strings as its secondaries.&lt;/p&gt;

&lt;p&gt;Here&apos;s the proposed pseudo-code for the changes:&lt;/p&gt;

&lt;p&gt;Remove TikaCoreProperties.SUBJECT&lt;br/&gt;
TikaCoreProperties.KEYWORDS &amp;lt;- DublinCore.SUBJECT, &lt;/p&gt;
{ Office.KEYWORDS, MSOffice.KEYWORDS, Metadata.SUBJECT }

&lt;p&gt;Remove TikaCoreProperties.DATE&lt;br/&gt;
TikaCoreProperties.CREATION_DATE &amp;lt;- DublinCore.DATE, &lt;/p&gt;
{ Office.CREATION_DATE, MSOffice.CREATION_DATE, Metadata.DATE }

&lt;p&gt;Remove TikaCoreProperties.MODIFIED&lt;br/&gt;
TikaCoreProperties.SAVE_DATE &amp;lt;- DublinCore.MODIFIED, &lt;/p&gt;
{ Office.SAVE_DATE, MSOffice.LAST_SAVED, Metadata.MODIFIED, &quot;Last-Modified&quot; }


&lt;p&gt;and an example of the Java changes:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;TikaCoreProperties.java &lt;b&gt;Before&lt;/b&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * @see DublinCore#SUBJECT
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Property SUBJECT = Property.composite(DublinCore.SUBJECT, 
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Property[] { Property.internalText(Metadata.SUBJECT) });
      
    /**
     * @see Office#KEYWORDS
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Property KEYWORDS = Property.composite(Office.KEYWORDS,
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Property[] { Property.internalTextBag(MSOffice.KEYWORDS) });
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;would become&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;TikaCoreProperties.java &lt;b&gt;After&lt;/b&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * @see DublinCore#SUBJECT
     * @see Office#KEYWORDS
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Property KEYWORDS = Property.composite(DublinCore.SUBJECT,
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Property[] { 
    		    Office.KEYWORDS, 
    		    Property.internalTextBag(MSOffice.KEYWORDS),
    		    Property.internalText(Metadata.SUBJECT)
    		});
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Since this would require a bit of refactoring for parsers that use the properties being removed I thought it best to get some feedback before working up a full patch.&lt;/p&gt;

&lt;p&gt;Does this seem like a reasonable approach?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12556792">TIKA-930</key>
            <summary>Consolidation of Some Tika Core Properties</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rgauss">Ray Gauss II</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 May 2012 02:56:10 +0100</created>
                <updated>Thu, 2 May 2013 03:29:54 +0100</updated>
                            <resolved>Tue, 3 Jul 2012 04:24:01 +0100</resolved>
                                    <version>1.2</version>
                                    <fixVersion>1.2</fixVersion>
                                    <component>metadata</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13281073" author="jehrlich" created="Tue, 22 May 2012 17:19:57 +0100"  >&lt;p&gt;Consolidation is a good idea.&lt;br/&gt;
As a general comment up front, the DublinCore interface contains properties from the newer &#8220;Terms&#8221; namespace (&lt;a href=&quot;http://dublincore.org/documents/dcmi-terms/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dublincore.org/documents/dcmi-terms/&lt;/a&gt;). Please note that this newer version of DC has not been standardized, yet. So the general question is, if the DC interface should use those properties. They are interesting, because the new namespace introduces refinements of older properties (like &#8220;created&#8221; and &#8220;modified&#8221; instead of &#8220;date&#8221;). But such refinements are also available in already standardized namespaces like XMP. &lt;/p&gt;

&lt;p&gt;Here a list of recommendations for the core properties:&lt;/p&gt;

&lt;p&gt;Creator:&lt;br/&gt;
Remove Author because this is already covered by Creator.&lt;br/&gt;
Creator is the Author, there is no need to have two properties for this. And DublinCore.Creator should be an ordered Array (as defined in the IPTC spec ) instead of a simple text field.&lt;br/&gt;
TikaCoreProperties.CREATOR &amp;lt;- DublinCore.CREATOR, &lt;/p&gt;
{ Metadata.CREATOR, Office.AUTHOR, MSOffice.AUTHOR}

&lt;p&gt;If Creator becomes an array, INITIAL_AUTHOR or LAST_AUTHOR are not necessarily needed anymore.&lt;/p&gt;

&lt;p&gt;Creation date:&lt;br/&gt;
The original DublinCore.Date is not a specific point in time. That&#8217;s why it has never been used for a creation date in any application. And that&#8217;s why the DC organization has set up a newer namespace (see above) which introduces new date properties. &lt;br/&gt;
But as this newer namespace is not really used yet, I propose the following:&lt;br/&gt;
TikaCoreProperties.CREATION_DATE &amp;lt;- XMP.CREATE_DATE, &lt;/p&gt;
{ DublinCore.CREATED, Office.CREATION_DATE, MSOffice.CREATION_DATE, DublinCore.DATE, Metadata.DATE }

&lt;p&gt;Modification date:&lt;br/&gt;
I would keep TikaCoreProperties.MODIFIED because so far &#8220;modified&#8221; has been the vocabulary being used for &#8220;date the asset has been last saved&#8221;. Here again the DC property is a newer, not standardized one. Removal of SAVE_DATE is good.&lt;br/&gt;
TikaCoreProperties.MODIFIED &amp;lt;-  XMP.MODIFY_DATE, &lt;/p&gt;
{ Office.SAVE_DATE, MSOffice.LAST_SAVED, DublinCore.MODIFIED ,Metadata.MODIFIED, &quot;Last-Modified&quot; }

&lt;p&gt;CreatorTool:&lt;br/&gt;
Add CreatorTool which is the application that created the asset. It&#8217;s different to &#8220;Creator&#8221;.&lt;br/&gt;
TikaCoreProperties.CREATOR_TOOL &amp;lt;- XMP.CREATOR_TOOL&lt;br/&gt;
I have provided the XMP Namespace in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-908&quot; title=&quot;Adding XMP specification part one namespaces and properties&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-908&quot;&gt;&lt;del&gt;TIKA-908&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rating:&lt;br/&gt;
A rating property is being used in almost all applications today, so this should be added:&lt;br/&gt;
TikaCoreProperties.RATING &amp;lt;- XMP.RATING&lt;/p&gt;

&lt;p&gt;Metadata date:&lt;br/&gt;
A lot of applications want to know if only the metadata has been changed but not the content, e.g. a movie application does not need to render the movie new if only the title has been changed. I recommend to add this property.&lt;br/&gt;
TikaCoreProperties. METADATA_DATE &amp;lt;- XMP. METADATA_DATE&lt;/p&gt;

&lt;p&gt;Geo coordinates:&lt;br/&gt;
Almost all camera devices today use the EXIF namespace to capture geo location information. I would recommend to use the EXIF properties as primary ones and the W3C ones as secondary ones. And rename the Geographic interface to something like W3CGeographic.&lt;br/&gt;
TikaCoreProperties.LATITUDE &amp;lt;- EXIF.GPS_LATITUDE, &lt;/p&gt;
{W3CGeographic.LATITUDE}
&lt;p&gt;The same for Longitude and Altitude.&lt;/p&gt;

&lt;p&gt;Copyright:&lt;br/&gt;
In the future all needed core copyright properties should be added, but as this issue is about consolidating existing properties, this can be tracked in a follow up issue.&lt;/p&gt;</comment>
                            <comment id="13284794" author="rgauss" created="Tue, 29 May 2012 14:15:39 +0100"  >&lt;p&gt;I&apos;m not sure what our policy is on using standards that aren&apos;t yet ratified, but I&apos;m in favor of using the most generic standard out there.&lt;/p&gt;

&lt;p&gt;For all of these, the composite&apos;s secondary properties array is really just a means of providing backwards compatibility.  Individual parsers can set multiple metadata properties with the same value if they desire.&lt;/p&gt;

&lt;p&gt;Individual property comments:&lt;/p&gt;

&lt;p&gt;Creator/Author:&lt;br/&gt;
DublinCore seems to be a bit vague here, but I believe most users treat DublinCore.CREATOR as the creator of the file.  Author is the creator of the intellectual property that the file represents.  IPTC.CREATOR, which references DublinCore.CREATOR, does further define it as the IP creator.  I think something that describes the IP creator should stay in TikaCoreProperties, distinct from the file creator, but naming it AUTHOR isn&apos;t as general as something like INTELLECTUAL_PROPERTY_CREATOR would be.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure INITIAL_AUTHOR and LAST_AUTHOR need to be included in TikaCoreProperties though.  Those seem like something individual parsers should set.&lt;/p&gt;

&lt;p&gt;Creation date:&lt;br/&gt;
If we go with the newer DC namespace then DublinCore.CREATED should be the primary for TikaCoreProperties.CREATION_DATE.  Individual parsers can also set XMP.CREATE_DATE if they want and it doesn&apos;t need to be included here.&lt;/p&gt;

&lt;p&gt;Modification date:&lt;br/&gt;
I was just trying to consolidate naming convention, if everyone thinks &apos;modified&apos; is more standard vocabulary that&apos;s fine, but then TikaCoreProperties.CREATION_DATE should be TikaCoreProperties.CREATED. Individual parsers can also set XMP.MODIFY_DATE if they want and it doesn&apos;t need to be included here.&lt;/p&gt;

&lt;p&gt;Creator tool:&lt;br/&gt;
Sounds reasonable, and likely a common need.&lt;/p&gt;

&lt;p&gt;Rating:&lt;br/&gt;
Sounds like a common need, though the externalReal and -1 or &lt;span class=&quot;error&quot;&gt;&amp;#91;0..5&amp;#93;&lt;/span&gt; definition of ratings in XMP.RATING may not be generic enough for inclusion here.  I&apos;d be interested to hear others&apos; thoughts on this.&lt;/p&gt;

&lt;p&gt;Metadata date:&lt;br/&gt;
Sounds reasonable, and likely a common need.&lt;/p&gt;

&lt;p&gt;Geo coordinates:&lt;br/&gt;
W3C are the most generic and make sense for all file types.  Individual parsers can also set EXIF properties.  Renaming Geographic to W3CGeographic may make sense.&lt;/p&gt;

&lt;p&gt;Copyright:&lt;br/&gt;
Agreed.&lt;/p&gt;</comment>
                            <comment id="13284925" author="jehrlich" created="Tue, 29 May 2012 17:52:12 +0100"  >&lt;p&gt;Some answers to Ray&apos;s comments:&lt;/p&gt;

&lt;p&gt;Creator:&lt;br/&gt;
The DublinCore creator is usually considered the creator of the intellectual property, not the creator of the file. That is what the &quot;creator tool&quot; property is for. So we should stick with the &quot;creator&quot; property and don&apos;t use &quot;author&quot; or any other additional key.&lt;/p&gt;

&lt;p&gt;Rating:&lt;br/&gt;
I think we should better not use anything more generic here. The generic approaches taken in the past are the reason why we have this huge mess of incompatible applications today. There is a strong reason why the Metadata Working Group has introduced this definition as it is. A lot of important applications understand and use this definition today. And didn&apos;t we say we wanted to use only something which is clearly defined?&lt;/p&gt;

&lt;p&gt;Geographic:&lt;br/&gt;
Have you found any files or file types which are actually using the W3C approach to store geolocation data? All I have seen until today are using Exif to store it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="13284968" author="rgauss" created="Tue, 29 May 2012 18:53:11 +0100"  >&lt;p&gt;Creator:&lt;br/&gt;
&quot;The DublinCore creator is usually considered the creator of the intellectual property, not the creator of the file&quot;&lt;/p&gt;

&lt;p&gt;If we&apos;re talking about developers that deal with metadata frequently or librarians, taxonomists, etc. then I&apos;d agree, but the average developer may not.  I don&apos;t have any data to back that up but I don&apos;t think we can assume everyone knows DublinCore.CREATOR should be used as the IP creator and as such we should have separate properties since knowing who created a file can be quite useful.&lt;/p&gt;

&lt;p&gt;Rating:&lt;br/&gt;
I don&apos;t have a strong opinion here, but we should elicit conversation on it from the group.  This should probably be a separate issue.&lt;/p&gt;

&lt;p&gt;Geographic:&lt;br/&gt;
We&apos;re not really concerned with how the geo data is stored in the file, just how we want to present the metadata key and value to users, as generically as possible.  This page seems to list several other formats that might conceivably be used with Tika: &lt;a href=&quot;http://en.wikipedia.org/wiki/Geotagging&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Geotagging&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13404869" author="gagravarr" created="Mon, 2 Jul 2012 01:03:46 +0100"  >&lt;p&gt;In terms of dcmi, we tend to take a pragmatic view on metadata standards. If it&apos;s good enough to be useful, and it won&apos;t confuse, use it! Try to keep things simple though, so don&apos;t include a whole standard just for the sake of it... But if it provides value then go for it&lt;/p&gt;</comment>
                            <comment id="13404953" author="jehrlich" created="Mon, 2 Jul 2012 10:12:05 +0100"  >&lt;p&gt;Hi Ray and Nick,&lt;/p&gt;

&lt;p&gt;It is very important to also &quot;educate&quot; average developers to use the standards in the proper way. As I wrote for the Rating field: It is imperative to stick with standards otherwise you risk sacrificing interoperability, which is one of the most important features for metadata.&lt;br/&gt;
And regarding the Creator field: With IPTC and PLUS there exist very strong and well known standards to depict who created what part of an asset. And I strongly recommend to stick with at least one of them instead of coming up with an own proprietary creator scheme which no one knows about.&lt;br/&gt;
It&apos;s nice to be able to be pragmatic, but not using standards for metadata today causes a lot of headache in the future.&lt;/p&gt;

&lt;p&gt;Regarding Geo data: I&apos;m ok with using the W3C properties for the core properties.&lt;/p&gt;</comment>
                            <comment id="13405580" author="rgauss" created="Tue, 3 Jul 2012 04:24:01 +0100"  >&lt;p&gt;Fixed in r1356560.&lt;/p&gt;

&lt;p&gt;This ended up being a fairly large commit.  Feel free to revert or re-open this issue if I&apos;ve messed something up.&lt;/p&gt;

&lt;p&gt;I&apos;ve included the commit message here as it describes the majority of the changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added the Dublin Core Terms namespace and prefix&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed DublinCore.CREATOR to multi-valued property&lt;/li&gt;
	&lt;li&gt;Consolidated TikaCoreProperties.AUTHOR to TikaCoreProperties.CREATOR&lt;/li&gt;
	&lt;li&gt;Removed TikaCoreProperties.LAST_AUTHOR and added TikaCoreProperties.MODIFIER&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added DublinCore.CREATED&lt;/li&gt;
	&lt;li&gt;Consolidated TikaCoreProperties.DATE and TikaCoreProperties.CREATION_DATE to TikaCoreProperties.CREATED&lt;/li&gt;
	&lt;li&gt;Consolidated TikaCoreProperties.SAVE_DATE to TikaCoreProperties.MODIFIED&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated DublinCore.MODIFIED to correct terms namespace&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added OpenOfficeXMLCore.SUBJECT&lt;/li&gt;
	&lt;li&gt;Consolidated TikaCoreProperties.SUBJECT to TikaCoreProperties.KEYWORDS&lt;/li&gt;
	&lt;li&gt;Added several temporary transition properties to TikaCoreProperties to ease migrating previous use of &apos;subject&apos; to more specific properties and maintain backwards compatibility&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;For most mail-related parsers/handlers, transition subject to dc:title&lt;/li&gt;
	&lt;li&gt;For most office-related parsers/handlers, transition subject to OO cp:subject&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added TikaCoreProperties.CREATOR_TOOL&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added TikaCoreProperties.METADATA_DATE&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added TikaCoreProperties.RATING&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed XMP to use common namespace delimiter&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added Open Office word processing namespace and prefix to OfficeOpenXMLExtended&lt;/li&gt;
	&lt;li&gt;Added OfficeOpenXMLExtended.COMMENTS&lt;/li&gt;
	&lt;li&gt;Added TikaCoreProperties.COMMENTS which is a composite of OfficeOpenXMLExtended.COMMENTS, ClimateForecast.COMMENT and MSOffice.COMMENTS&lt;/li&gt;
	&lt;li&gt;Deprecated MSOffice.Comments&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed OpenDocumentMetaParser to accommodate TikaCoreProperties since the XML it processes treats dc:date and dc:subject differently than DcXMLParser&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change nextMetadata in TextExtractor to a Property rather than String key&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed DcXmlParser to use namespace already defined in DublinCore&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated parsers to reflect TikaCoreProperties changes&lt;/li&gt;
	&lt;li&gt;Updated tika-xmp to reflect TikaCoreProperties changes&lt;/li&gt;
	&lt;li&gt;Registered dcterms namespace in XMPMetadataTest&lt;/li&gt;
	&lt;li&gt;Updated tests to reflect new changes and added some tests for backwards compatibility&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12600703">TIKA-962</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12600707">TIKA-963</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12596695">TIKA-947</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 22 May 2012 16:19:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>243079</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx0rb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16442</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>