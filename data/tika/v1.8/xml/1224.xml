<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:32:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1224/TIKA-1224.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1224] Adding Source code (Java, Groovy, C) parser</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1224</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;We can parser some source code file formats:&lt;br/&gt;
text/x-java-source&lt;br/&gt;
text/x-groovy&lt;br/&gt;
text/x-c&lt;/p&gt;


&lt;p&gt;for HTML rendering from code, we can use jhightlight: &lt;a href=&quot;http://www.ohloh.net/p/jhighlight&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.ohloh.net/p/jhighlight&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12689783">TIKA-1224</key>
            <summary>Adding Source code (Java, Groovy, C) parser</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="thaichat04">Hong-Thai Nguyen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Jan 2014 09:17:53 +0000</created>
                <updated>Thu, 24 Apr 2014 12:59:00 +0100</updated>
                            <resolved>Mon, 3 Feb 2014 14:04:40 +0000</resolved>
                                    <version>1.5</version>
                                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13876821" author="kkrugler" created="Mon, 20 Jan 2014 20:15:09 +0000"  >&lt;p&gt;For many languages, parsing needs to be fuzzy (e.g. for C code, without knowing the values for conditional compilation, it&apos;s impossible to accurately parse many source files). One quick &amp;amp; dirty approach is to use syntax highlighters, though the deeper question is what exactly to extract as the text - i.e. what would Tika return that&apos;s different from the (original) text?&lt;/p&gt;</comment>
                            <comment id="13877343" author="thaichat04" created="Tue, 21 Jan 2014 09:01:02 +0000"  >&lt;p&gt;I agree that parsing deeply each language is not simple. This work (already done) is just providing HTML format of source languages and some metadata possible (as author, version ...) extracting from javadoc comment and probably interesting others as LoC. When we need more detailed result on a language, we must implement a dedicated parser.&lt;br/&gt;
This parser is useful in search application.&lt;/p&gt;</comment>
                            <comment id="13889491" author="thaichat04" created="Mon, 3 Feb 2014 14:05:44 +0000"  >&lt;p&gt;Commited on 1563902&lt;/p&gt;</comment>
                            <comment id="13890560" author="markus17" created="Tue, 4 Feb 2014 10:55:38 +0000"  >&lt;p&gt;A patch seems to be missing here.&lt;/p&gt;</comment>
                            <comment id="13975502" author="ben.12" created="Mon, 21 Apr 2014 10:46:31 +0100"  >&lt;p&gt;I&apos;m disappointed because it does not work !&lt;/p&gt;

&lt;p&gt;For examples:&lt;/p&gt;

&lt;p&gt;&amp;gt; java -jar tika-app-1.5.jar -t Test.java&lt;br/&gt;
Output is empty&lt;/p&gt;

&lt;p&gt;&amp;gt; java -jar tika-app-1.5.jar -h Test.java&lt;br/&gt;
Output is stange&lt;/p&gt;

&lt;p&gt;&amp;gt; java -jar tika-app-1.5.jar -T Test.java&lt;br/&gt;
Output is what I expect for -h ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&amp;lt;!DOCTYPE html PUBLIC &lt;span class=&quot;code-quote&quot;&gt;&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;&lt;/span&gt;
     &lt;span class=&quot;code-quote&quot;&gt;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&lt;/span&gt;&amp;gt; &amp;lt;html xmlns=&quot;htt
p://www.w3.org/1999/xhtml&lt;span class=&quot;code-quote&quot;&gt;&quot; xml:lang=&quot;&lt;/span&gt;en&lt;span class=&quot;code-quote&quot;&gt;&quot; lang=&quot;&lt;/span&gt;en&quot;&amp;gt; &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;     &amp;lt;meta http-equiv=
&lt;span class=&quot;code-quote&quot;&gt;&quot;content-type&quot;&lt;/span&gt; content=&lt;span class=&quot;code-quote&quot;&gt;&quot;text/html; charset=ISO-8859-1&quot;&lt;/span&gt; /&amp;gt;     &amp;lt;meta name=&quot;genera
tor&lt;span class=&quot;code-quote&quot;&gt;&quot; content=&quot;&lt;/span&gt;JHighlight v1.0 (http://jhighlight.dev.java.net)&quot; /&amp;gt;     &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Te
st.java&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;     &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;link rel=&lt;span class=&quot;code-quote&quot;&gt;&quot;Help&quot;&lt;/span&gt; href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http://jhighlight.dev.java.net&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;style type=&lt;span class=&quot;code-quote&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; .java_type { color: rgb(0,44,221); } .java_keyword { c
olor: rgb(0,0,0); font-weight: bold; } .java_javadoc_comment { color: rgb(147,14
7,147); background-color: rgb(247,247,247); font-style: italic; } .java_comment
{ color: rgb(147,147,147); background-color: rgb(247,247,247); } .java_operator
{ color: rgb(0,124,31); } .java_plain { color: rgb(0,0,0); } .java_literal { col
or: rgb(188,0,0); } code { color: rgb(0,0,0); font-family: monospace; font-size:
 12px; white-space: nowrap; } .java_javadoc_tag { color: rgb(147,147,147); backg
round-color: rgb(247,247,247); font-style: italic; font-weight: bold; } .java_se
parator { color: rgb(0,33,255); } h1 { font-family: sans-serif; font-size: 16pt;
 font-weight: bold; color: rgb(0,0,0); background: rgb(210,210,210); border: sol
id 1px black; padding: 5px; text-align: center; }     &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt; &amp;lt;h
1&amp;gt;Test.java&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;code&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&lt;span class=&quot;code-quote&quot;&gt;&quot;java_javadoc_comment&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;/**&amp;amp;nbsp;*&amp;amp;nbsp;Class&amp;amp;n
bsp;Test.&amp;amp;nbsp;*&amp;amp;nbsp;*&amp;amp;nbsp;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&lt;span class=&quot;code-quote&quot;&gt;&quot;java_javadoc_tag&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;@author&amp;lt;/span
&amp;gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&lt;span class=&quot;code-quote&quot;&gt;&quot;java_javadoc_comment&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;ben.12&amp;amp;nbsp;*/&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&amp;lt;span class=&quot;java
_keyword&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;gt;public&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&quot;&lt;/span&gt;java_plain&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&amp;lt;span class=&quot;&lt;/span&gt;java_k
eyword&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;gt;class&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&quot;&lt;/span&gt;java_plain&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&amp;lt;span class=&quot;&lt;/span&gt;java_type
&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;gt;Test&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&quot;&lt;/span&gt;java_plain&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&quot;&lt;/span&gt;java_separator&quot;&amp;gt;&lt;/span&gt;
{&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&lt;span class=&quot;code-quote&quot;&gt;&quot;java_plain&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;span class=&lt;span class=&quot;code-quote&quot;&gt;&quot;java_comment&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;/
/&amp;amp;nbsp;Class&amp;amp;nbsp;Test}&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;br /&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But all is in only one line, indentation is lost and file name appears at beginning.&lt;br/&gt;
Author is not in head meta tags.&lt;br/&gt;
The last &quot;}&quot; is highlighted as a comment.&lt;/p&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
My input java file:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Test.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt; Test.
 *
 * @author ben.12
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Test {
	&lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt; Test
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13975519" author="gagravarr" created="Mon, 21 Apr 2014 11:48:30 +0100"  >&lt;p&gt;Benoit - Does Tika correctly detect your files? The right parser won&apos;t kick in if Tika is confused about the mime type&lt;/p&gt;</comment>
                            <comment id="13979379" author="ben.12" created="Thu, 24 Apr 2014 08:09:42 +0100"  >&lt;p&gt;In debug, Tika uses org.apache.tika.SourceCodeParser with &quot;x-java-source&quot; mime-type. It removes all end of lines (why?, mistake? readLine() doesn&apos;t return \n or/and \r), then gives the result to JHightlight. JHightlight result (entire html) is used as argument of characters() method of ContentHandler.&lt;/p&gt;

&lt;p&gt;I just start with Tika, but I don&apos;t think that is good.&lt;/p&gt;</comment>
                            <comment id="13979614" author="thaichat04" created="Thu, 24 Apr 2014 12:59:00 +0100"  >&lt;p&gt;Thank &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ben.12&quot; class=&quot;user-hover&quot; rel=&quot;ben.12&quot;&gt;Benoit Moreau&lt;/a&gt; for feedback.&lt;br/&gt;
For line return problem at output, I created a new issue: &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1279&quot; title=&quot;Missing return lines at output of SourceCodeParser&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1279&quot;&gt;&lt;del&gt;TIKA-1279&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
For -t option in TikaCLI, It&apos;s ambiguous on mimetype of java file. It&apos;s could be text/plain (in this case, TxtParser will be used to return original text as is), x-java-source (SourceCodeParser will be used).&lt;/p&gt;

&lt;p&gt;For -h option, output is normally something:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Author: Hong-Thai.Nguyen
Content-Encoding: windows-1252
Content-Length: 4899
Content-Type: text/x-java-source
LoC: 133
creator: Hong-Thai.Nguyen
dc:creator: Hong-Thai.Nguyen
meta:author: Hong-Thai.Nguyen
resourceName: SourceCodeParser.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the creator is from &apos;author&apos; annotation in javadoc.&lt;/p&gt;

&lt;p&gt;This parser is quite generic (quick and dirty as mentioned by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kkrugler&quot; class=&quot;user-hover&quot; rel=&quot;kkrugler&quot;&gt;Ken Krugler&lt;/a&gt;) and simplistic. We can make a more dedicate Java source parser and extract more metadata (member, attributes...). If you interest this kind of parser, please create new issue and eventually an investigation on this work is warmly welcome.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Jan 2014 20:15:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>368750</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzleof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>369054</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>