<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:31:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-701/TIKA-701.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-701] Fix problems with TemporaryFiles</title>
                <link>https://issues.apache.org/jira/browse/TIKA-701</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;As discussed on dev@, there are still some design issues with the TemporaryFiles class that we introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-567&quot; title=&quot;Temporary file leak in TikaInputStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-567&quot;&gt;&lt;del&gt;TIKA-567&lt;/del&gt;&lt;/a&gt;. They should be solved in time for Tika 1.0.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12520918">TIKA-701</key>
            <summary>Fix problems with TemporaryFiles</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jukkaz">Jukka Zitting</assignee>
                                    <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 Aug 2011 14:02:17 +0100</created>
                <updated>Thu, 20 Oct 2011 13:34:12 +0100</updated>
                            <resolved>Thu, 1 Sep 2011 16:31:00 +0100</resolved>
                                    <version>0.9</version>
                                    <fixVersion>0.10</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13095352" author="jukkaz" created="Thu, 1 Sep 2011 16:31:00 +0100"  >&lt;p&gt;Fixed in a series of recent commits.&lt;/p&gt;

&lt;p&gt;To summarize, I added a more generic TemporaryResources class for tracking all Closeable resources associated with a TikaInputStream. I also fixed a lot of cases where Tika- and other streams were not properly closed when no longer needed.&lt;/p&gt;</comment>
                            <comment id="13095363" author="mikemccand" created="Thu, 1 Sep 2011 16:52:31 +0100"  >&lt;p&gt;These changes look great!&lt;/p&gt;

&lt;p&gt;I like that TIS no longer closes the IS when the full file is read only when a mark wasn&apos;t set, nor do we close the old stream in getFile() (only when the TR is later closed).&lt;/p&gt;

&lt;p&gt;I noticed one thing, that I&apos;m not sure is a problem, but looks spooky: TikaInputStream.get can optionally take an incoming TemporaryResources; inside that method we have this logic:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;        if (stream instanceof TikaInputStream) {
            return (TikaInputStream) stream;
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My worry is: what if the incoming TemporaryResources differs from the stream&apos;s?  I added an assert and it sometimes does differ (at least a couple tests tripped it).  Will this cause problems...?  Ie the returned TIS is not tracked under the provided TR as the caller would expect?&lt;/p&gt;</comment>
                            <comment id="13095371" author="jukkaz" created="Thu, 1 Sep 2011 17:08:47 +0100"  >&lt;p&gt;The idea behind that logic is that if the stream we were given is already a TikaInputStream, then someone higher up in the call chain is already responsible&lt;br/&gt;
for properly closing it and thus releasing all associated resources. In that case&lt;br/&gt;
we can simply ignore the given TemporaryResources instance (the dispose() or close()&lt;br/&gt;
call will simply be a no-op with no resources to release), and return the given&lt;br/&gt;
stream as-is. Any resources associated with the stream will get released when the&lt;br/&gt;
original creator of the TikaInputStream instance eventually closes the stream.&lt;/p&gt;</comment>
                            <comment id="13095422" author="pjakubik" created="Thu, 1 Sep 2011 18:02:09 +0100"  >&lt;p&gt;This is a very important fix. Will it be released soon? If it is going to be&lt;br/&gt;
a while before 1.0, is there a chance for a 0.9.1 for getting this fix out&lt;br/&gt;
in a released Tika?&lt;/p&gt;

</comment>
                            <comment id="13095878" author="mikemccand" created="Fri, 2 Sep 2011 10:14:10 +0100"  >&lt;blockquote&gt;&lt;p&gt;The idea behind that logic is that if the stream we were given is already a TikaInputStream, then someone higher up in the call chain is already responsible for properly closing it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, so in this case it&apos;s fine if the returned TIS wasn&apos;t folded under the caller&apos;s TR instance, since the higher-up callee will close it.  Good!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 1 Sep 2011 15:52:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3841</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx267:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16671</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>