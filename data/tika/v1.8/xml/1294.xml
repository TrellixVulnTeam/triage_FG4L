<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:39:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1294/TIKA-1294.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1294] Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1294</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1268&quot; title=&quot;Extract images from PDF documents&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1268&quot;&gt;&lt;del&gt;TIKA-1268&lt;/del&gt;&lt;/a&gt; added the capability to extract embedded images as regular embedded resources...a great feature!&lt;/p&gt;

&lt;p&gt;However, for some use cases, it might not be desirable to extract those types of embedded resources.  I see two ways of allowing the client to choose whether or not to extract those images:&lt;/p&gt;

&lt;p&gt;1) set a value in the metadata for the extracted images that identifies them as embedded PDXObjectImages vs regular image attachments.  The client can then choose not to process embedded resources with a given metadata value.&lt;/p&gt;

&lt;p&gt;2) allow the client to set a parameter in the PDFConfig object.&lt;/p&gt;

&lt;p&gt;My initial proposal is to go with option 2, and I&apos;ll attach a patch shortly.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12713662">TIKA-1294</key>
            <summary>Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tallison@mitre.org">Tim Allison</assignee>
                                    <reporter username="tallison@mitre.org">Tim Allison</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 May 2014 17:38:17 +0100</created>
                <updated>Mon, 15 Sep 2014 13:50:46 +0100</updated>
                            <resolved>Tue, 27 May 2014 20:38:11 +0100</resolved>
                                                    <fixVersion>1.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13995226" author="tallison@mitre.org" created="Mon, 12 May 2014 17:39:30 +0100"  >&lt;p&gt;All feedback welcome.&lt;/p&gt;</comment>
                            <comment id="13995474" author="rgauss" created="Mon, 12 May 2014 20:01:08 +0100"  >&lt;p&gt;We ran into this exact issue recently and there is another method to achieve the same result without changing Tika code.&lt;/p&gt;

&lt;p&gt;In &lt;tt&gt;ParsingEmbeddedDocumentExtractor.shouldParseEmbedded&lt;/tt&gt; the &lt;tt&gt;ParseContext&lt;/tt&gt; is checked for a &lt;tt&gt;DocumentSelector&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;Since that extractor seems to be the only place that type is checked for (perhaps &lt;tt&gt;EmbeddedDocumentSelector&lt;/tt&gt; would be a more appropriate name?) you can create one that suits your needs and set it as the document selector value in the &lt;tt&gt;ParseContext&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;In our case we created a simple &lt;tt&gt;MediaTypeDisablingDocumentSelector&lt;/tt&gt; that holds a list of &lt;tt&gt;disabledMediaTypes&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://svn.apache.org/repos/asf/tika/trunk/tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;TikaGUI&lt;/tt&gt;&lt;/a&gt; and its &lt;tt&gt;ImageDocumentSelector&lt;/tt&gt; as a general example of document selector use.&lt;/p&gt;</comment>
                            <comment id="13995491" author="tallison@mitre.org" created="Mon, 12 May 2014 20:13:35 +0100"  >&lt;p&gt;Great. Just to make sure that I understand correctly...I think I was going to head this route at one point via subclassing EmbeddedResourceHandler.  Can your MediaTypeDisablingDocumentSelector tell the difference between a jpeg that was attached to a PDF (basic attachment) and one that was derived from a PDXObjectImage?&lt;/p&gt;</comment>
                            <comment id="13995960" author="rgauss" created="Tue, 13 May 2014 03:28:15 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can your MediaTypeDisablingDocumentSelector tell the difference between a jpeg that was attached to a PDF (basic attachment) and one that was derived from a PDXObjectImage?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If by basic attachment you mean those defined in &lt;tt&gt;PDEmbeddedFilesNameTreeNode&lt;/tt&gt;, then not exactly.&lt;/p&gt;

&lt;p&gt;Both &lt;tt&gt;PDF2XHTML.extractImages&lt;/tt&gt; and &lt;tt&gt;PDF2XHTML.extractEmbeddedDocuments&lt;/tt&gt; end up using the same &lt;tt&gt;getEmbeddedDocumentExtractor&lt;/tt&gt; (a &lt;tt&gt;ParsingEmbeddedDocumentExtractor&lt;/tt&gt; by default) and use the same &lt;tt&gt;DocumentSelector&lt;/tt&gt; in the calls to &lt;tt&gt;extractor.shouldParseEmbedded(metadata)&lt;/tt&gt;, but neither sets any special metadata keys indicating &apos;attached&apos; vs &apos;embedded&apos; so document selectors aren&apos;t able to explicitly distinguish.&lt;/p&gt;

&lt;p&gt;However, the &lt;tt&gt;PDXObjectImage&lt;/tt&gt; resources &lt;b&gt;only&lt;/b&gt; get the media type set in the metadata object while the &lt;tt&gt;PDEmbeddedFilesNameTreeNode&lt;/tt&gt; resources get media type, name, and length set, so you could potentially check for their presence to distinguish.&lt;/p&gt;</comment>
                            <comment id="13997127" author="tallison@mitre.org" created="Wed, 14 May 2014 01:52:16 +0100"  >&lt;p&gt;Ah, ok, that makes sense.  My subclassed parser would have to figure out if the parent file was a PDF and then apply this logic...I wouldn&apos;t want to apply the rule of &quot;don&apos;t extract attachment if the metadata object only contains media type&quot; across all file types.  Parent file type is not normally passed in to the embedded document extractor via metadata?&lt;/p&gt;

&lt;p&gt;Perhaps instead of a boolean, we should set an enum to allow the user to control processing:&lt;br/&gt;
PDXObjectImage&lt;br/&gt;
EmbeddedFile&lt;br/&gt;
PDXObjectImage and EmbeddedFile&lt;/p&gt;

&lt;p&gt;This would allow a client to pick the current default, my use case, and the use case where you just want to extract the images that are used to render the pdf.&lt;/p&gt;

&lt;p&gt;On a related note, I think I just came across a nasty memory leak when extracting PDXObjectImages.  I have a 6 page/1.2MB PDF with 102 JPEGs.  It looks like the pdf generator created a separate image for every row in a table.  Recursive text comes out with no problem in Tika 1.5 with -Xmx200m, but I need 500m to get recursive text or extract attachments with trunk.&lt;/p&gt;

&lt;p&gt;I can&apos;t share this pdf, but I&apos;ll try to create a synthetic Apache-friendly doc for testing.  Initial testing suggests the leak may be in a javax component...Tika is not to blame.  More work remains.&lt;/p&gt;
</comment>
                            <comment id="13997500" author="rgauss" created="Wed, 14 May 2014 13:30:41 +0100"  >&lt;p&gt;I saw similar problematic resource consumption as well, which was the reason for figuring out how to disable this stuff &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Perhaps a generic indication of why this embedded object is being parsed would be useful to have in the metadata object passed to the &lt;tt&gt;EmbeddedDocumentExtractor&lt;/tt&gt;, something like an &lt;tt&gt;EmbeddedObjectContext&lt;/tt&gt; enum with &lt;tt&gt;INLINE&lt;/tt&gt; and &lt;tt&gt;ATTACHMENT&lt;/tt&gt; options, which the &lt;tt&gt;EmbeddedDocumentExtractor&lt;/tt&gt; (and in most cases that means the &lt;tt&gt;DocumentSelector&lt;/tt&gt;) could use to determine whether to parse on a per-object basis? &lt;/p&gt;</comment>
                            <comment id="13997641" author="tallison@mitre.org" created="Wed, 14 May 2014 16:25:37 +0100"  >&lt;p&gt;Ha.  Glad to hear that the issue I&apos;m seeing isn&apos;t just on my docs. I&apos;ve ruled out the other image types, the issue seems to only happen with jpegs. I created a dummy doc with a bunch of jpegs that doesn&apos;t trigger the issue.  When I look at the structure via PDFBox&apos;s PDFDebugger, the only difference that I see is that there is a Mask:Stream node in the problematic document and no mask node in my dummy doc.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rpialum&quot; class=&quot;user-hover&quot; rel=&quot;rpialum&quot;&gt;Jeremy Anderson&lt;/a&gt;, have you seen this issue...do you know if PDFBOX 2.0 will fix it?&lt;/p&gt;

&lt;p&gt;Y, that&apos;s what I was trying to describe in option 1 above...clearly not clearly enough.  I like your proposed terms.  I&apos;d want to add THUMBNAIL for those cases where there is an image file that represents an attachment that is actually there as happens with at least docx and rtf (but see &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1283&quot; title=&quot;Add &amp;quot;thumbnail&amp;quot; as possible metadata item to TikaCoreProperties&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1283&quot;&gt;&lt;del&gt;TIKA-1283&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13997801" author="tallison@mitre.org" created="Wed, 14 May 2014 18:36:28 +0100"  >&lt;p&gt;&lt;a href=&quot;https://github.com/kryton/flaming-sailor/blob/master/src/main/java/com/zilbo/flamingSailor/TE/PDFParser.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/kryton/flaming-sailor/blob/master/src/main/java/com/zilbo/flamingSailor/TE/PDFParser.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code below this comment looks just like ours&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; /*         The following code is REALLY raw.         initial testing seemed to show memory leaks, and was REALLY slow....*/&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14002647" author="tallison@mitre.org" created="Tue, 20 May 2014 01:39:56 +0100"  >&lt;p&gt;As very preliminary work towards &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1302&quot; title=&quot;Let&amp;#39;s run Tika against a large batch of docs nightly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1302&quot;&gt;TIKA-1302&lt;/a&gt;, I ran Tika 1.5 and 1.6-trunk against 500 randomly selected PDFs from &lt;a href=&quot;http://digitalcorpora.org/corpora/files&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;govdocs1 &lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;I calculated the following per-file times in milliseconds to extract all embedded documents and all embedded metadata.&lt;/p&gt;




&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Measure&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Tika 1.5&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Tika 1.6-SNAPSHOT&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;median&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;122.0&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;177.5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;mean&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;362.3&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1345.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;stdev&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;746.4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5237.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;




&lt;p&gt;These summary statistics suggest to me that 1.6 may be slower, but that there are some monster files that are probably skewing the numbers.&lt;br/&gt;
  Review of the data confirms this.&lt;br/&gt;
 There are slightly more than 20 files with &amp;gt; 100 attachments in 1.6 and 0 or 1 in 1.5, and there are slightly more than 100 files with &amp;gt; 10 attachments in 1.6 but only 0 or 1 in Tika 1.5. &lt;br/&gt;
The worst offender: [ 905020 | &lt;a href=&quot;http://digitalcorpora.org/corp/nps/files/govdocs1/905/905020.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://digitalcorpora.org/corp/nps/files/govdocs1/905/905020.pdf&lt;/a&gt; ] has 4041 attachments and 1.6 million metadata elements with Tika 1.6, but 0 attachments with Tika 1.5.&lt;/p&gt;

&lt;p&gt;The above is based on a small sample from mostly American gov&apos;t PDFs.  Your mileage may vary.&lt;/p&gt;</comment>
                            <comment id="14005457" author="tallison@mitre.org" created="Thu, 22 May 2014 01:25:14 +0100"  >&lt;p&gt;Found an example of the mask:stream in this file &lt;a href=&quot;http://digitalcorpora.org/corp/nps/files/govdocs1/239/239665.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;jvm killer &lt;/a&gt;.  Tika 1.5 app.jar -t with -Xmx32m works fine with this file, but 1.6 gets an OOM with -Xmx1g.  &lt;/p&gt;</comment>
                            <comment id="14007717" author="tallison@mitre.org" created="Fri, 23 May 2014 22:19:00 +0100"  >&lt;p&gt;I investigated a bit more and sent a question to pdfbox users list.  It looks like the memory consumption profile is far better in PDFBox 2.0 (constant 130m), but I was getting errors when I tried to view the exported files.  With PDFBox 2.0, I found that govdocs 239665 (mentioned above as jvm killer) had 2,750 embedded images (2.6 GB) when they were fully extracted.&lt;/p&gt;

&lt;p&gt;Given the OOM issues with PDFBox 1.8.5 on some files, I&apos;d prefer to set the default behavior to not extract PDXObjectImages.  I figure if I found this problem in my small personal test set and in the first 500 govdocs test, this may be a fairly common issue.&lt;/p&gt;

&lt;p&gt;Users who just want text and/or metadata will face a decent sized increase in OOM Exceptions if we leave this on as default. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jukkaz&quot; class=&quot;user-hover&quot; rel=&quot;jukkaz&quot;&gt;Jukka Zitting&lt;/a&gt;, I won&apos;t turn off the feature you added, though, without your consent! &lt;/p&gt;

&lt;p&gt;I&apos;d also prefer to allow users to turn this on/off via config file so that non-dev folks who are using Tika don&apos;t have to add their own DocumentSelector.&lt;/p&gt;

&lt;p&gt;Patch is attached. I&apos;ve added a parameter in PDFParserConfig &lt;em&gt;and&lt;/em&gt; I&apos;ve added some metadata that will allow consumers who want to use a DocumentSelector to tell what type of embedded object they&apos;re looking at.&lt;/p&gt;

&lt;p&gt;Any and all feedback is welcome.  I&apos;m not held to the decisions I made in this patch.&lt;/p&gt;

</comment>
                            <comment id="14009666" author="jukkaz" created="Tue, 27 May 2014 14:35:04 +0100"  >&lt;p&gt;+1 to making this configurable and off by default.&lt;/p&gt;</comment>
                            <comment id="14010179" author="tallison@mitre.org" created="Tue, 27 May 2014 20:38:11 +0100"  >&lt;p&gt;Thank you, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jukkaz&quot; class=&quot;user-hover&quot; rel=&quot;jukkaz&quot;&gt;Jukka Zitting&lt;/a&gt;.  Fixed in r1597856.  &lt;/p&gt;

&lt;p&gt;I also added a parameter to extract unique images only...if every page uses an image with the same cos id, extract only the first one.&lt;/p&gt;

&lt;p&gt;In govdocs1 239665, there are roughly 2700 images, but only 56 unique images.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgauss&quot; class=&quot;user-hover&quot; rel=&quot;rgauss&quot;&gt;Ray Gauss II&lt;/a&gt;, let me know if these mods work for you.&lt;/p&gt;</comment>
                            <comment id="14010531" author="hudson" created="Wed, 28 May 2014 01:04:43 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #5 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/5/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/5/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1294&quot; title=&quot;Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1294&quot;&gt;&lt;del&gt;TIKA-1294&lt;/del&gt;&lt;/a&gt; add ability to turn off image extraction from PDFs (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1597856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1597856&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/metadata/TikaMetadataKeys.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/resources/org/apache/tika/parser/pdf/PDFParser.properties&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/TikaTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14010583" author="hudson" created="Wed, 28 May 2014 01:33:40 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #5 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/5/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/5/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1294&quot; title=&quot;Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1294&quot;&gt;&lt;del&gt;TIKA-1294&lt;/del&gt;&lt;/a&gt; add ability to turn off image extraction from PDFs (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1597856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1597856&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/metadata/TikaMetadataKeys.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/resources/org/apache/tika/parser/pdf/PDFParser.properties&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/TikaTest.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14011883" author="tallison@mitre.org" created="Thu, 29 May 2014 01:30:06 +0100"  >&lt;p&gt;2.6gb above should be 170mb.  I was getting 2.6gb because of user error in custom code for extracting images with PDFBox trunk...Should have used PDFBox&apos;s ExtractImages.&lt;/p&gt;</comment>
                            <comment id="14012393" author="rgauss" created="Thu, 29 May 2014 15:22:19 +0100"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tallison%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tallison@apache.org&quot;&gt;Tim Allison&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;The changes look good, thanks!&lt;/p&gt;

&lt;p&gt;One minor point on conventions: I think enums are typically uppercase?&lt;/p&gt;</comment>
                            <comment id="14012403" author="tallison@mitre.org" created="Thu, 29 May 2014 15:40:05 +0100"  >&lt;p&gt;Doh! Thank you.  Mods in r1598305.&lt;/p&gt;</comment>
                            <comment id="14012467" author="hudson" created="Thu, 29 May 2014 16:51:53 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.7 #9 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.7/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.7/9/&lt;/a&gt;)&lt;br/&gt;
fix to &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1294&quot; title=&quot;Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1294&quot;&gt;&lt;del&gt;TIKA-1294&lt;/del&gt;&lt;/a&gt;, uppercase enum (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1598305&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1598305&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14012493" author="hudson" created="Thu, 29 May 2014 17:24:42 +0100"  >&lt;p&gt;SUCCESS: Integrated in tika-trunk-jdk1.6 #9 (See &lt;a href=&quot;https://builds.apache.org/job/tika-trunk-jdk1.6/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/tika-trunk-jdk1.6/9/&lt;/a&gt;)&lt;br/&gt;
fix to &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-1294&quot; title=&quot;Add ability to turn off extraction of PDXObjectImages (TIKA-1268) from PDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-1294&quot;&gt;&lt;del&gt;TIKA-1294&lt;/del&gt;&lt;/a&gt;, uppercase enum (tallison: &lt;a href=&quot;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1598305&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/tika/trunk/?view=rev&amp;amp;rev=1598305&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/tika/trunk/tika-core/src/main/java/org/apache/tika/metadata/TikaCoreProperties.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java&lt;/li&gt;
	&lt;li&gt;/tika/trunk/tika-parsers/src/test/java/org/apache/tika/parser/pdf/PDFParserTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12740886">TIKA-1414</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12717072">PDFBOX-2101</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12729459">TIKA-1375</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12644430" name="TIKA-1294.patch" size="8878" author="tallison@mitre.org" created="Mon, 12 May 2014 17:39:30 +0100"/>
                            <attachment id="12646608" name="TIKA-1294v1.patch" size="15557" author="tallison@mitre.org" created="Fri, 23 May 2014 22:19:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 May 2014 19:01:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391978</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzpd27:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>392179</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>