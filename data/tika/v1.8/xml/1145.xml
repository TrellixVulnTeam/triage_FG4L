<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:27:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-1145/TIKA-1145.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-1145] classloaders issue loading resources when extending Tika</title>
                <link>https://issues.apache.org/jira/browse/TIKA-1145</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;I noticed that ServiceLoader is using different classloader when loading &apos;services&apos; like Parsers, etc (java.net.FactoryURLClassLoader) than MimeTypesFactory (org.eclipse.jetty.webapp.WebAppClassLoader) when loading mime types definitions. As result - it works completely different:&lt;/p&gt;

&lt;p&gt;When jar with custom parser and custom-mimetypes.xml is added to solr.war - both resources are located and loaded (META-INF\services\org.apache.tika.parser.Parser and org\apache\tika\mime\custom-mimetypes.xml) and everything works fine.&lt;/p&gt;

&lt;p&gt;When jar with custom parser is in Solr core lib and configured in solrconfig.xml - only META-INF\services\org.apache.tika.parser.Parser is loaded, but custom-mimetypes.xml is ignored.&lt;/p&gt;

&lt;p&gt;MimeTypesFactory&#160;ignores custom classLoader provided in TikaConfig and always using only context provided one:&lt;br/&gt;
ClassLoader cl = MimeTypesReader.class.getClassLoader();&lt;/p&gt;</description>
                <environment>&lt;p&gt;Tika as part of standard Solr distribution&lt;/p&gt;</environment>
        <key id="12656049">TIKA-1145</key>
            <summary>classloaders issue loading resources when extending Tika</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="redguy666">Maciej Lizewski</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Jul 2013 16:40:16 +0100</created>
                <updated>Wed, 10 Jul 2013 11:27:23 +0100</updated>
                            <resolved>Wed, 10 Jul 2013 11:27:23 +0100</resolved>
                                    <version>1.3</version>
                                                    <component>config</component>
                    <component>mime</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13699107" author="gagravarr" created="Wed, 3 Jul 2013 16:58:54 +0100"  >&lt;p&gt;I&apos;m fairly sure anything with a classname starting org.eclipse.jetty will be something in your environment, and not part of Tika&lt;/p&gt;

&lt;p&gt;When you create a TikaConfig instance you can specify the classloader to use &amp;lt;&lt;a href=&quot;http://tika.apache.org/1.3/api/org/apache/tika/config/TikaConfig.html#TikaConfig%28java.lang.ClassLoader%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tika.apache.org/1.3/api/org/apache/tika/config/TikaConfig.html#TikaConfig%28java.lang.ClassLoader%29&lt;/a&gt;&amp;gt; - you can pass your own classloader in there if you want to have full control over what gets used&lt;/p&gt;</comment>
                            <comment id="13699405" author="redguy666" created="Wed, 3 Jul 2013 21:37:01 +0100"  >&lt;p&gt;I am not saying it is set by Tika itself. It comes from Jetty container which runs Solr.&lt;br/&gt;
The point is that Tika is not consistent in classloading approach: loading mime configuration resources uses environment provided classloader while ServiceLoader uses quite different classloader which I can&apos;t find out where it comes from...&lt;/p&gt;

&lt;p&gt;I think that both Loaders (Mime and Service) should use SAME classloader. And that is my point. Current approach causes really hard to track problems when Parsers configuration is loaded properly while custom mime configuration is not...&lt;/p&gt;</comment>
                            <comment id="13699503" author="gagravarr" created="Wed, 3 Jul 2013 23:01:46 +0100"  >&lt;p&gt;By default, both ServiceLoader and MimeTypesFactory will fetch the classloader from their respective classes, and use that to load their respective resources. So, as best as I can tell from looking quickly, both places are consistent...&lt;/p&gt;

&lt;p&gt;MimeTypesFactory does classloader.getResource(String) and classloader.getResources(String), ServiceLoader largely does classloader.getResources(String), so again I can&apos;t spot what&apos;s different there&lt;/p&gt;

&lt;p&gt;Are you sure that you&apos;re not setting a custom classloader somewhere?&lt;/p&gt;</comment>
                            <comment id="13699783" author="redguy666" created="Thu, 4 Jul 2013 06:45:11 +0100"  >&lt;p&gt;I dig in Solr code and there is classloader set up in TikaConfig. Later I will try to figure out which classloader is configured this way. But it does not change the main problem: why is MimeTypesFactory using different classloader than ServiceLoader? Even if I configure custom classloader in TikaConfig - those two classes should use same classloader, right?&lt;/p&gt;</comment>
                            <comment id="13699793" author="thetaphi" created="Thu, 4 Jul 2013 07:19:38 +0100"  >&lt;p&gt;I think the main problem is ServiceLoader&apos;s definition. It uses context class loader to load SPIs which is in my opinion a &quot;bug&quot; in the spec. In Lucene we had the same problems with our own ServiceLoader impl that uses the Abstract class&apos;/interface&apos;s classloader to loads its own implementations. See &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-4713&quot; title=&quot;SPI: Allow fallback to default ClassLoader if Thread#getContextClassLoader fails&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-4713&quot;&gt;&lt;del&gt;LUCENE-4713&lt;/del&gt;&lt;/a&gt; for more info, where Lucene uses SPI to load its codecs and analyzers.&lt;/p&gt;</comment>
                            <comment id="13699840" author="redguy666" created="Thu, 4 Jul 2013 09:02:13 +0100"  >&lt;p&gt;I would rather suggest opposite - ServiceLoader is properly using the classloader provided in TikaConfig (ServiceLoader is instantiated in TikaConfig::init() and classloader configured in TikaConfig is passed to ServiceLoader and stored in loader attribute). This part works as expected - uses provided classLoader.&lt;/p&gt;

&lt;p&gt;Problem is with MimeTypesFactory which ignores classLoader from TikaConfig and always is using:&lt;br/&gt;
ClassLoader cl = MimeTypesReader.class.getClassLoader();&lt;/p&gt;

&lt;p&gt;which is wrong in case user provided custom classLoader.&lt;/p&gt;</comment>
                            <comment id="13699881" author="gagravarr" created="Thu, 4 Jul 2013 10:29:40 +0100"  >&lt;p&gt;If a classloader has been given on the TikaConfig, then I think it should be used everywhere, so this does look like a bug with MimeTypesFactory&lt;/p&gt;

&lt;p&gt;Should be a fairly easy fix, but the unit test will be harder - guess we&apos;ll want a wrapper around the normal classloader that logs calls which we then check later?&lt;/p&gt;</comment>
                            <comment id="13699883" author="thetaphi" created="Thu, 4 Jul 2013 10:35:41 +0100"  >&lt;p&gt;OK, I misunderstood the original problem. If you pass the correct config&apos;s class loader everywhere where TIKA uses ServiceLoader or looks up resources otherwise, it should be fine.&lt;/p&gt;</comment>
                            <comment id="13699888" author="thetaphi" created="Thu, 4 Jul 2013 10:48:47 +0100"  >&lt;p&gt;It is still strange that you see this behaviour: If both the JAR files of DIH and TIKA&apos;s JAR files and also your custom parsers are in SolrCore&apos;s lib folder, they share all the same classloader (the SolrCore&apos;s ResourceLoader&apos;s Classloader).&lt;br/&gt;
Problems would only exist, if the TIKA and DIH classes are in the WAR file, but the custom parser is in the lib or conf dir of the Solr core. In that case the MimeTypesFactory is only loading the classes from its own class loader (which is the webapp&apos;s), not the Solr ResourceLoader.&lt;br/&gt;
In any case, MimeTypesFactory should use the configured classloader.&lt;/p&gt;</comment>
                            <comment id="13700018" author="redguy666" created="Thu, 4 Jul 2013 12:26:12 +0100"  >&lt;p&gt;it is exactly like you described - tika is embedded in WAR and only my custom parser is outside. I do not remember the reason but I guess that with tika outside WAR some other functions did not work, and we wanted parsers in Solr core directories for easier administration (adding/removing etc)&lt;/p&gt;

&lt;p&gt;But anyway like you said - it still &lt;b&gt;should&lt;/b&gt; work properly when proper classLoader is provided in TikaConfig &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13700315" author="gagravarr" created="Thu, 4 Jul 2013 20:12:03 +0100"  >&lt;p&gt;This is hopefully fixed in r1499844 (I&apos;ve also added a new unit test that checks the classloader is used where given)&lt;/p&gt;

&lt;p&gt;Could you please test, and mark the issue as resolved if this really fixes it for your setup?&lt;/p&gt;</comment>
                            <comment id="13704401" author="redguy666" created="Wed, 10 Jul 2013 11:27:23 +0100"  >&lt;p&gt;It seems now MimeTypesFactory is properly using same classloader as ServiceLoader.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 3 Jul 2013 15:58:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>336324</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzfutz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>336648</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>