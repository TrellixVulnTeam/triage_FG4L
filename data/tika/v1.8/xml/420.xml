<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:37:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-420/TIKA-420.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-420] [PATCH] Integration of boilerpipe: Boilerplate Removal and Fulltext Extraction from HTML pages</title>
                <link>https://issues.apache.org/jira/browse/TIKA-420</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;while Tika already provides a parser for HTML that extracts the plain text from it, the output generally contains all text portions, including the surplus &quot;clutter&quot; such as navigation menus, links to related pages etc. around the actual main content. This &quot;boilerplate text&quot; typically is not related to the main content and may deteriorate search precision.&lt;/p&gt;

&lt;p&gt;I think Tika should be able to automatically detect and remove the boilerplate text. I propose to use &quot;boilerpipe&quot; for this purpose, an Apache 2.0 licensed Java library written by me. Boilerpipe provides both generic and specific strategies for common tasks (for example: news article extraction) and may also be easily extended for individual problem settings.&lt;/p&gt;

&lt;p&gt;Extracting content is very fast (milliseconds), just needs the input document (no global or site-level information required) and is usually quite accurate. In fact, it outperformed the state-of-the-art approaches for several test collections.&lt;/p&gt;

&lt;p&gt;The algorithms used by the library are based on (and extending) some concepts of my paper &quot;Boilerplate Detection using Shallow Text Features&quot;, presented at WSDM 2010 &amp;#8211; The Third ACM International Conference on Web Search and Data Mining New York City, NY USA. (online at &lt;a href=&quot;http://www.l3s.de/~kohlschuetter/boilerplate/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.l3s.de/~kohlschuetter/boilerplate/&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;To use boilerpipe with Tika, I have developed a custom ContentHandler (BoilerpipeContentHandler; provided as a patch to tika-parsers) that can simply be passed to HtmlParser#parse. The BoilerpipeContentHandler can be configured in several ways, particularly which extraction strategy should be used and where the extracted content should go &amp;#8211; into Metadata or to a Writer).&lt;/p&gt;

&lt;p&gt;I also provide a patch to TikaCLI, such that you can use boilerpipe via Tika from the command line (use a capital &quot;-T&quot; flag instead of &quot;-t&quot; to extract the main content only).&lt;/p&gt;

&lt;p&gt;I must note that boilerplate removal is considered a research problem:&lt;/p&gt;

&lt;p&gt;While one can always find clever rules to extract the main content from particular web pages with 100% accuracy, applying it to random, previously unseen pages on the web is non-trivial.&lt;/p&gt;

&lt;p&gt;In my paper, I have shown that on the Web (i.e. independent of a particular site owner, page layout etc.), textual content can apparently be grouped into two classes, long text (i.e., a lot of subsequent words without markup &amp;#8211; most likely the actual content) and short text (i.e., a few words between two HTML tags, most likely navigational boilerplate text) respectively. Removing the words from the short text class alone already is a good strategy for cleaning boilerplate and using a combination of multiple shallow text features achieves an almost perfect accuracy. To a large extent the detection of boilerplate text does not require any inter-document knowledge (frequency of text blocks, common page layout etc.) nor any training at token level. The costs for detecting boilerplates are negligible, as it comes down simply to counting words.&lt;/p&gt;

&lt;p&gt;The algorithms provided in my paper seem to generally work well and especially for news article-like pages (for a Zipf-representative collection of English news pages crawled via Google News: 90-95% F1 on average, 95-98% F1 median), well ahead of the competition (78-89% avg. F1, 87-95% median F1).&lt;/p&gt;

&lt;p&gt;Patches are attached, questions welcome.&lt;/p&gt;

&lt;p&gt;Best,&lt;br/&gt;
Christian&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464024">TIKA-420</key>
            <summary>[PATCH] Integration of boilerpipe: Boilerplate Removal and Fulltext Extraction from HTML pages</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kkrugler">Ken Krugler</assignee>
                                    <reporter username="ck@newsclub.de">Christian Kohlsch&#252;tter</reporter>
                        <labels>
                            <label>Boilerplate_Removal</label>
                            <label>Fulltext_Extraction</label>
                            <label>Template_Detection</label>
                            <label>Text_Cleaning</label>
                            <label>boilerpipe</label>
                    </labels>
                <created>Fri, 7 May 2010 21:14:35 +0100</created>
                <updated>Mon, 12 Jul 2010 18:33:02 +0100</updated>
                            <resolved>Mon, 12 Jul 2010 18:33:02 +0100</resolved>
                                                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12865296" author="ck@newsclub.de" created="Fri, 7 May 2010 21:19:21 +0100"  >&lt;p&gt;Patch to tika-parsers:&lt;/p&gt;

&lt;p&gt;Provides BoilerpipeContentHandler &amp;#8211; Extracts the main content of an HTML document.&lt;br/&gt;
Adds new dependency to boilerpipe 1.0.4 (available from java.net or custom maven repo) &amp;#8211; boilerpipe is available under an Apache 2.0 license.&lt;/p&gt;

&lt;p&gt;Patch to tika-app:&lt;/p&gt;

&lt;p&gt;Adds &quot;-T&quot; option to TikaCLI to use boilerpipe&apos;s DefaultExtractor to get the main content of an HTML page.&lt;/p&gt;</comment>
                            <comment id="12865302" author="kkrugler" created="Fri, 7 May 2010 21:46:26 +0100"  >&lt;p&gt;Hi Christian,&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at the patch, and also post something to the Tika list to get input on the general concept, and the architectural approach you&apos;ve taken.&lt;/p&gt;

&lt;p&gt;Thanks for pushing this forward!&lt;/p&gt;

&lt;p&gt;&amp;#8211; Ken&lt;/p&gt;</comment>
                            <comment id="12866564" author="jukkaz" created="Wed, 12 May 2010 14:23:45 +0100"  >&lt;p&gt;Sounds great! Would it be possible to apply this feature in streaming mode, i.e. without having to read the entire document in memory before writing out anything? Also, it would be awesome if we could have BoilerpipeContentHandler emit structured XHTML SAX events instead of just plain text. Being able to preserve things like &amp;lt;p&amp;gt; and &amp;lt;a&amp;gt; tags in main content while dropping surrounding boilerplate would be really nice.&lt;/p&gt;

&lt;p&gt;PS. Could you take a look at making the boilerpipe releases available also on the central Maven repository? By policy we can&apos;t make a release that depends on custom repositories.&lt;/p&gt;</comment>
                            <comment id="12866567" author="kkrugler" created="Wed, 12 May 2010 14:42:33 +0100"  >&lt;p&gt;Hi Jukka - thanks for the input to Christian - makes sense.&lt;/p&gt;

&lt;p&gt;Re the central Maven repo issue. That&apos;s kind of painful (from my experience), since they&apos;ll do one-off pushes via filing an issue, but that doesn&apos;t work for anything under development. And for real deployment, you need a Maven repo set up that they rsync from, with all of the fun key setup. Last I checked, this wasn&apos;t doable for code hosted at Google, GitHub, etc. Do you know of any good options here?&lt;/p&gt;</comment>
                            <comment id="12866571" author="jukkaz" created="Wed, 12 May 2010 14:57:21 +0100"  >&lt;p&gt;See &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; (and TIKA- 407) for the rationale to avoid custom repositories. Sonatype provides pretty good repository hosting &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; that makes syncing to Maven central really easy.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.sonatype.com/people/2010/03/why-external-repos-are-being-phased-out-of-central/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.sonatype.com/people/2010/03/why-external-repos-are-being-phased-out-of-central/&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://nexus.sonatype.org/oss-repository-hosting.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://nexus.sonatype.org/oss-repository-hosting.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12866620" author="kkrugler" created="Wed, 12 May 2010 17:33:07 +0100"  >&lt;p&gt;Thanks for the Sonatype link - very useful. Just to be clear, I&apos;m a big fan of getting things into the Central Maven repo, but it&apos;s been very painful in the past.&lt;/p&gt;

&lt;p&gt;The docs at Sonatype don&apos;t talk about one other roadblock - any dependencies must also be found in the central repo. The link to Brian Fox&apos;s blog about this say that they&apos;ll be making it easier to add 3rd party jars, but I didn&apos;t see any details. I don&apos;t see any dependencies listed in the boilerpipe pom &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, but maybe Christian can confirm that he really doesn&apos;t depend on any 3rd party jars (FWIR, he was using NekoHTML as the default HTML parser).&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://download.java.net/maven/2/de/l3s/boilerpipe/boilerpipe/1.0.4/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/maven/2/de/l3s/boilerpipe/boilerpipe/1.0.4/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12867473" author="ck@newsclub.de" created="Fri, 14 May 2010 12:05:51 +0100"  >&lt;p&gt;Dependencies:&lt;br/&gt;
With the changes made in boilerpipe 1.0.4 there is no dependency on any third party jar (not even NekoHTML / Xerces as up to version 1.0.3). boilerpipe now likes TagSoup as well.&lt;/p&gt;

&lt;p&gt;Central maven repo:&lt;br/&gt;
I will try to get it in central. Even though I am not a big fan of central repositories, I think it is worthwile to put boilerpipe there. However, this probably means I have to completely mavenize boilerpipe, get a new GPG key for that purpose etc. This may take some time!&lt;/p&gt;

&lt;p&gt;In the meantime:&lt;br/&gt;
Could anyone please review my patch from a code perspective?&lt;/p&gt;

&lt;p&gt;Jukka, regarding your feature requirements:&lt;/p&gt;

&lt;p&gt;&amp;gt; Streaming mode, i.e. without having to read the entire document in memory before writing out anything?&lt;br/&gt;
The algorithm supports it; boilerpipe 1.0 currently doesn&apos;t. Maybe in 1.1.&lt;/p&gt;

&lt;p&gt;&amp;gt; Also, it would be awesome if we could have BoilerpipeContentHandler emit structured XHTML SAX events instead of just plain text. Being able to preserve things like &amp;lt;p&amp;gt; and &amp;lt;a&amp;gt; tags in main content while dropping surrounding boilerplate would be really nice.&lt;br/&gt;
Yes, this would also be possible (also, not with 1.0.4). Getting &amp;lt;a&amp;gt; tags is quite simple as boilerpipe already keeps track of them internally. &amp;lt;p&amp;gt;s are more difficult since you likely want to have them at sensible segment boundaries, not wherever a &amp;lt;p&amp;gt; tag was in the original document and also not where boilerpipe thought a text block boundary was.&lt;/p&gt;

&lt;p&gt;I have written a paper about densitometric text segmentation, available from here: &lt;a href=&quot;http://www.l3s.de/web/upload/documents/1/cikm549-kohlschuetter.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.l3s.de/web/upload/documents/1/cikm549-kohlschuetter.pdf&lt;/a&gt; (A Densitometric Approach to Web Page Segmentation, CIKM 2008)  It essentially also uses shallow text features, like boilerpipe, and can probably quite easily be added to the boilerpipe code at a later version. Maybe 2.0.&lt;/p&gt;

&lt;p&gt;Would these two features be a show stopper for the inclusion into Tika?&lt;/p&gt;
</comment>
                            <comment id="12867988" author="kkrugler" created="Sun, 16 May 2010 14:36:27 +0100"  >&lt;p&gt;Hi Christian,&lt;/p&gt;

&lt;p&gt;I took a look at the patch just now. I&apos;d still like to actually try it out with Bixo, replacing the previous integration we&apos;d done using the patches we&apos;d sent you, but here&apos;s some preliminary feedback:&lt;/p&gt;

&lt;p&gt;1. Minor issue - should use spaces instead of tabs.&lt;/p&gt;

&lt;p&gt;2.  Minor issue - file headers need copyrights.&lt;/p&gt;

&lt;p&gt;3. Major question - what&apos;s the appropriate way to return the cleaned up text. Currently it&apos;s either via a writer and/or as a string in the metadata. Jukka could answer this best, since it&apos;s related to the overall Tika architecture, but:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Putting this into metadata feels wrong.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Given there&apos;s support in Tika for a &quot;WriteOutContentHandler&quot;, I would suggest instead just having a BoilerPipeContentHandler(ContentHandler delegate) constructor, and in the endDocument() method generating startElement/characters/endElement calls for each text block, with &amp;lt;p&amp;gt; tags. I think this deferred generation of XHTML blocks would work, and would generate the most consistent data. Then somebody (like Bixo) could easily add this via the TeeContentHandler to generate an additional data stream, if so desired.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12867989" author="kkrugler" created="Sun, 16 May 2010 14:42:18 +0100"  >&lt;p&gt;Also, do you have a small set of HMTL documents that could be used to validate proper integration, for unit tests? I didn&apos;t see this in the Boilerpipe project &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;. Best would be some small HTML files, with expected text.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://code.google.com/p/boilerpipe&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/boilerpipe&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12871608" author="jukkaz" created="Wed, 26 May 2010 11:15:27 +0100"  >&lt;p&gt;Agreed with Ken about using XHTML SAX events instead of the Metadata object to pass out the cleaned up text. This makes it possible to cleanly inject structural annotations like &amp;lt;a/&amp;gt; elements in the text.&lt;/p&gt;</comment>
                            <comment id="12877047" author="ck@newsclub.de" created="Wed, 9 Jun 2010 12:31:07 +0100"  >&lt;p&gt;Lately I have been busy with other things, unfortunately.&lt;br/&gt;
Here is a short update, given the recent presentation of Safari Reader (based upon arc90&apos;s readability bookmarklet), which provides functionality similar to boilerpipe.&lt;/p&gt;

&lt;p&gt;Using the L3S-GN1 test document collection (622 news articles, crawled via GoogleNews; &lt;a href=&quot;http://www.l3s.de/~kohlschuetter/boilerplate/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.l3s.de/~kohlschuetter/boilerplate/&lt;/a&gt; ) I found out that Safari Reader in many cases it essentially fails to produce any content (there is no &quot;Reader&quot; button available for 238 of the 622 pages), yielding a very low average F1 score and a significantly lower median score than boilerpipe&apos;s DefaultExtractor or ArticleExtractor.&lt;/p&gt;

&lt;p&gt;I am currently reviewing the results from arc90&apos;s Readability code to see whether there are any fundamental differences between Apple&apos;s implementation and theirs.&lt;/p&gt;

&lt;p&gt;To summarize, I think boilerpipe is a very efficient, effective and especially stable tool (read: consistent over a broad variety of sources) for removing boilerplate / clutter, and ahead of the competition &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12887438" author="kkrugler" created="Mon, 12 Jul 2010 18:33:02 +0100"  >&lt;p&gt;SVN #963375&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12468958">TIKA-462</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12449140" name="TIKA-420.patch" size="10747" author="kkrugler" created="Sat, 10 Jul 2010 01:17:38 +0100"/>
                            <attachment id="12443995" name="tika-app.patch" size="3943" author="ck@newsclub.de" created="Fri, 7 May 2010 21:19:21 +0100"/>
                            <attachment id="12443994" name="tika-parsers.patch" size="6534" author="ck@newsclub.de" created="Fri, 7 May 2010 21:19:21 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 May 2010 20:46:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4441</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx3w7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16950</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>