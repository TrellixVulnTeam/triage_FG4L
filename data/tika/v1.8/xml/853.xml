<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:29:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/TIKA-853/TIKA-853.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[TIKA-853] java.io.IOException with TikaGUI and testMP4.m4a</title>
                <link>https://issues.apache.org/jira/browse/TIKA-853</link>
                <project id="12310631" key="TIKA">Tika</project>
                    <description>&lt;p&gt;Using a latest build: when attempting to drop the new testMP4.m4a file into the Tika GUI, a TikaException / IOException occurs:  &lt;br/&gt;
org.apache.tika.exception.TikaException: Failed to close temporary resources&lt;br/&gt;
	at org.apache.tika.io.TemporaryResources.dispose(TemporaryResources.java:152)&lt;br/&gt;
	at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:127)&lt;br/&gt;
	at org.apache.tika.gui.TikaGUI.handleStream(TikaGUI.java:320)&lt;br/&gt;
	at org.apache.tika.gui.TikaGUI.openFile(TikaGUI.java:279)&lt;br/&gt;
	at org.apache.tika.gui.ParsingTransferHandler.importFiles(ParsingTransferHandler.java:94)&lt;br/&gt;
	at org.apache.tika.gui.ParsingTransferHandler.importData(ParsingTransferHandler.java:77)&lt;br/&gt;
	at javax.swing.TransferHandler.importData(Unknown Source)&lt;br/&gt;
	at javax.swing.TransferHandler$DropHandler.drop(Unknown Source)&lt;br/&gt;
....&lt;br/&gt;
Caused by: java.io.IOException: Could not delete temporary file C:\Users\john\AppData\Local\Temp\apache-tika-693752014807275949.tmp&lt;br/&gt;
	at org.apache.tika.io.TemporaryResources$1.close(TemporaryResources.java:70)&lt;br/&gt;
	at org.apache.tika.io.TemporaryResources.close(TemporaryResources.java:121)&lt;br/&gt;
	at org.apache.tika.io.TemporaryResources.dispose(TemporaryResources.java:150)&lt;br/&gt;
	... 40 more&lt;/p&gt;

&lt;p&gt;I know that the parser for this file is new and its external source parser has some potential bugs, but this exception does not occur when using Tika CLI to detect / parse the test file.  &lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows 7&lt;/p&gt;</environment>
        <key id="12540318">TIKA-853</key>
            <summary>java.io.IOException with TikaGUI and testMP4.m4a</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jfm.apache">John Mastarone</reporter>
                        <labels>
                    </labels>
                <created>Mon, 30 Jan 2012 04:00:38 +0000</created>
                <updated>Sun, 13 May 2012 04:49:48 +0100</updated>
                            <resolved>Sun, 13 May 2012 04:49:46 +0100</resolved>
                                    <version>1.1</version>
                                    <fixVersion>1.2</fixVersion>
                                    <component>gui</component>
                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13196077" author="gagravarr" created="Mon, 30 Jan 2012 12:03:27 +0000"  >&lt;p&gt;Ah, we weren&apos;t closing the stream in all cases. This is hopefully fixed in r1237614, could you see if it&apos;s solved for you? (It&apos;s a windows only problem so I can&apos;t check)&lt;/p&gt;</comment>
                            <comment id="13196544" author="jfm.apache" created="Mon, 30 Jan 2012 23:41:08 +0000"  >&lt;p&gt;I updated and tried again; still no luck.  The CLI is still fine.  The exact stack trace was&lt;br/&gt;
Caused by: java.io.IOException: Could not delete temporary file C:\Users\john\AppData\Local\Temp\apache-tika-4583375592196413071.tmp&lt;br/&gt;
	at org.apache.tika.io.TemporaryResources$1.close(TemporaryResources.java:70)&lt;br/&gt;
	at org.apache.tika.io.TemporaryResources.close(TemporaryResources.java:121)&lt;br/&gt;
	at org.apache.tika.io.TikaInputStream.close(TikaInputStream.java:637)&lt;br/&gt;
	at org.apache.tika.parser.mp4.MP4Parser.parse(MP4Parser.java:123)&lt;br/&gt;
	at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)&lt;br/&gt;
	... 41 more&lt;/p&gt;</comment>
                            <comment id="13196841" author="gagravarr" created="Tue, 31 Jan 2012 11:30:23 +0000"  >&lt;p&gt;I&apos;ve looked at the code again, and I can&apos;t spot anything obviously wrong. I can&apos;t reproduce it either, as I&apos;m on Linux&lt;/p&gt;

&lt;p&gt;Are you able to use a debugger to track down what&apos;s holding the file open?&lt;/p&gt;</comment>
                            <comment id="13197564" author="jfm.apache" created="Wed, 1 Feb 2012 03:59:49 +0000"  >&lt;p&gt;I tried debugging but I couldn&apos;t see what was holding it open, unless I&apos;m missing something.  There were three items in the TemporaryResources class&apos;s resources linked-list, and the Closeable representing the temporary file was the last of the three in the list to be closed; the other two closed successfully.  I also tried looking on stackoverflow for answers, and as a result tried calling System.gc() and tried explicitly making sure the file was writable, but this didn&apos;t help.  Maybe it&apos;s just a problem with Windows, or maybe if I tried upgrading to JDK 7 the problem would vanish.  I can attempt the latter fairly soon and say if that helped.&lt;/p&gt;</comment>
                            <comment id="13197782" author="gagravarr" created="Wed, 1 Feb 2012 12:26:37 +0000"  >&lt;p&gt;It&apos;s a Windows thing, because Windows won&apos;t let you delete an open file, while other platforms are happy to&lt;/p&gt;

&lt;p&gt;I think the issue is that something is opening the file and not closing it. It&apos;ll be outside of the TemporaryResources though, which is what&apos;ll make it hard to track down (I&apos;ve read the code flow through several times and I can&apos;t spot it...)&lt;/p&gt;</comment>
                            <comment id="13198767" author="jukkaz" created="Thu, 2 Feb 2012 13:02:25 +0000"  >&lt;p&gt;Do you have a virus scanner running? I&apos;ve seen quite a few cases where a virus scanner or some other similar file scanning tool (desktop search, etc.) prevents files from being removed. If that&apos;s the case here, I guess it&apos;s best to open a separate issue for the problem.&lt;/p&gt;

&lt;p&gt;We might be able to work around that for example by detecting a case where a temporary file can&apos;t be removed for such a reason, and retrying the delete after a small delay or using File.deleteOnExit().&lt;/p&gt;</comment>
                            <comment id="13199422" author="jfm.apache" created="Fri, 3 Feb 2012 00:46:18 +0000"  >&lt;p&gt;I had added my temporary folder and tika project folder to my virus scanner&apos;s exclusion list; it didn&apos;t help.  Inside the Tika MP4Parser class&apos;s parse method, I added a catch block that would print out any exceptions caught.  I removed the two lines:&lt;br/&gt;
isoFile = new IsoFile(isoBufferWrapper);&lt;br/&gt;
isoFile.parse();&lt;br/&gt;
and still had my same exception.  I then removed the preceding line:&lt;br/&gt;
IsoBufferWrapper isoBufferWrapper =  new IsoBufferWrapperImpl( tstream.getFile());&lt;br/&gt;
and replaced it with just &quot;tstream.getFile();&quot;.  Then, when parsing, I no longer had my exception caused by tstream.close() in the finally block---I had another one later on in the method, related to the fact that I&apos;d removed those lines concerning the external parser classes.  At no time did I ever catch any exception from these external parser classes with my added catch block.  The IsoBufferWrapperImpl itself creates an internal RandomAccessFile, but it should close it at the end of its constructor, or else throw an exception that I should be seeing.  But anyway, without yet stepping through that external source code while debugging to see if something obvious is going wrong, just the act of creating that IsoBufferWrapperImpl prevents the temporary file from being deleted, I think.  I don&apos;t see any methods on the isoFile or the isoBufferWrapper objects that might help release something that needs to be released.  &lt;/p&gt;</comment>
                            <comment id="13199911" author="jfm.apache" created="Fri, 3 Feb 2012 18:09:20 +0000"  >&lt;p&gt;Within a day or two I plan on extending the IsoBufferWrapperImpl (if not get the external mp4parser&apos;s source code and modify / rebuild it myself), just to have a different constructor that calls getChannel() only once on the RandomAccessFile, and explicitly closes the resulting FileChannel at the end of the constructor.  If this solves it, I&apos;ll file a bug with the mp4parser project.&lt;/p&gt;</comment>
                            <comment id="13200555" author="jfm.apache" created="Sat, 4 Feb 2012 21:00:58 +0000"  >&lt;p&gt;I&apos;ve attached a potential patch for the MP4Parser class that prevents the occurrence of the IOException.  The things I speculated about in my previous two comments concerning the external parser were incorrect.  In the MP4Parser&apos;s parse method, I moved the closing of the TikaInputStream to the very end, and before that, I set a number of object references to null, and then call System.gc().  If I set one fewer object reference to null from the collection of those that I included, or if I don&apos;t garbage collect, my IOException remains.  &lt;/p&gt;</comment>
                            <comment id="13202238" author="gagravarr" created="Tue, 7 Feb 2012 11:20:36 +0000"  >&lt;p&gt;We don&apos;t want to have a System.gc call in production code!&lt;/p&gt;

&lt;p&gt;It sounds like there is some sort of implicit resource leak from the library, which is cleaned up by nulling and GCing. Are you able to replicate the problem with only calls to the MP4Parser (library) code? That could potentially be used in a bug report&lt;/p&gt;</comment>
                            <comment id="13210807" author="jfm.apache" created="Sat, 18 Feb 2012 04:49:40 +0000"  >&lt;p&gt;I think I have a better fix for this that does not involve the previous steps taken.  Inside Tika&apos;s MP4Parser parse method, I call tstream.getFile(), and assign the result to a File that is used to construct a FileInputStream.  I read the stream&apos;s bytes into an array, and pass this byte array as an argument to a constructor for the IsoBufferWrapperImpl.  Then after calling the IsoFile&apos;s parse method, tstream.close() does not fail. &lt;br/&gt;
I&apos;m not sure that using the current IsoBufferWrapperImpl constructor, which takes a File argument, would ever allow for the TikaInputStream to be closed while still inside the MP4Parser&apos;s parse method without producing the IOException in Windows, because this constructor creates MappedByteBuffers and FileChannels, and the Java API for MappedByteBuffer says &quot;A mapped byte buffer and the file mapping that it represents remain valid until the buffer itself is garbage-collected.&quot;  &lt;br/&gt;
Should I upload another patch?&lt;/p&gt;</comment>
                            <comment id="13211801" author="gagravarr" created="Mon, 20 Feb 2012 12:13:18 +0000"  >&lt;p&gt;If we do need to buffer it all into memory, then there are easier ways to do it than your suggestion - TikaInputStream + IOUtils should do it nicely.&lt;/p&gt;

&lt;p&gt;I&apos;ve just been reading up on the MappedByteBuffer cleaning problems - &amp;lt;&lt;a href=&quot;http://bugs.sun.com/view_bug.do?bug_id=4724038&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/view_bug.do?bug_id=4724038&lt;/a&gt;&amp;gt; - and it looks like there&apos;s no easy/clean solution to this one yet&lt;/p&gt;

&lt;p&gt;Because MP4 files can be very large (many gb large is common), I&apos;m not sure we want to be trying to buffer the whole file into memory just in case. &lt;/p&gt;

&lt;p&gt;Maybe we could try using some reflection to trigger the cleaner on the byte buffer, with careful checks to avoid problems if it isn&apos;t sun.nio.ch backed?&lt;/p&gt;</comment>
                            <comment id="13212344" author="jfm.apache" created="Tue, 21 Feb 2012 04:23:25 +0000"  >&lt;p&gt;I made my own version of the IsoBufferWrapperImpl in which the ByteBuffer array is public, and I tried using the sun.misc.Cleaner code from the bug page in your link on each element in the ByteBuffer array, and following it with a call to tstream.close() (which causes my IOException).  I tried putting this block right after the call to isoFile.parse(), and separately tried putting it at the end of the Tika MP4Parser&apos;s parse method; neither case prevented the exception from occurring.  So, maybe Jukka&apos;s suggestion of using deleteOnExit() is the easiest solution for the moment...&lt;/p&gt;</comment>
                            <comment id="13274160" author="jfm.apache" created="Sun, 13 May 2012 04:49:47 +0100"  >&lt;p&gt;With a latest snapshot build, I tried dropping the same testMP4.m4a file into the GUI, and received no exception.  It may be that the changes that occurred with &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-852&quot; title=&quot;Quicktime / MP4 Metadata Parser&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TIKA-852&quot;&gt;TIKA-852&lt;/a&gt; on 28/Apr/2012 caused the resolution of this issue, 853.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12513264" name="TIKA-853.patch" size="1870" author="jfm.apache" created="Sat, 4 Feb 2012 21:00:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 30 Jan 2012 12:03:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225731</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxx18f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16519</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>