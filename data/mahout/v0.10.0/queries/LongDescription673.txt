So, per earlier discussion on the list: for random matrix Omega in stochastic projection, let's use murmur hash to generate uniformly distributed elements in a closed interval (-1,+1] instead of using Random.nextGaussian(). 

I am not sure if there's really compelling mathematical reason to do this but maybe it's just faster and more inline with practice accepted in Mahout for all this. 

The murmur 64bit value is already in the code. I just need to figure the optimal way to convert it into a uniform distribution.

Github url for this issue tree: https://github.com/dlyubimov/mahout-commits/branches/MAHOUT-673, pull requests are welcome.