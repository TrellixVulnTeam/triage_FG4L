<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:27:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-226/MAHOUT-226.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-226] Velocity-based code generation support to support more primitive type collections</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-226</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;We want the complete set of hash maps on the primitive types. The code can be generated. So here&apos;s a code generator to do it, and, to show it off, the TypeTypeFunction.java family set up to be generated.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443830">MAHOUT-226</key>
            <summary>Velocity-based code generation support to support more primitive type collections</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bmargulies">Benson Margulies</assignee>
                                    <reporter username="bmargulies">Benson Margulies</reporter>
                        <labels>
                    </labels>
                <created>Sat, 19 Dec 2009 02:17:18 +0000</created>
                <updated>Sat, 21 May 2011 04:24:18 +0100</updated>
                            <resolved>Tue, 22 Dec 2009 14:56:01 +0000</resolved>
                                                    <fixVersion>0.3</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12792762" author="tdunning" created="Sat, 19 Dec 2009 02:42:29 +0000"  >&lt;p&gt;This bit looks a bit odd:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; public interface IntDoubleFunction {
 
   /**
    * Applies a function to two arguments.
    *
-   * @param first  first argument passed to the function.
-   * @param second second argument passed to the function.
+   * @param x the first argument passed to the function.
+   * @param y the second argument passed to the function.
    * @return the result of the function.
    */
-  double apply(int first, double second);
+    int apply(int x, double y);
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like the new code conflicts with some previous code.&lt;/p&gt;

&lt;p&gt;Shouldn&apos;t the generated code all be in a separate package.&lt;/p&gt;</comment>
                            <comment id="12792766" author="bmargulies" created="Sat, 19 Dec 2009 02:52:00 +0000"  >&lt;p&gt;In this case, my intent is to replace existing trivial interfaces with generated trivial interfaces.  However, what you are seeing is that I got it wrong in coding the template. Thanks for the catch.&lt;/p&gt;</comment>
                            <comment id="12792769" author="bmargulies" created="Sat, 19 Dec 2009 03:14:00 +0000"  >&lt;p&gt;I see what went wrong. I meant to templatize IntIntProcedure, and hit IntIntFunction instead.&lt;/p&gt;
</comment>
                            <comment id="12792839" author="bmargulies" created="Sat, 19 Dec 2009 13:19:28 +0000"  >&lt;p&gt;Updated version that leaves generated sources under target/ and doesn&apos;t intend to check them in.&lt;/p&gt;</comment>
                            <comment id="12792840" author="bmargulies" created="Sat, 19 Dec 2009 13:20:46 +0000"  >&lt;p&gt;OK, here we are again with the generation output left in target, and initial foray into generation redirected to the IntIntProcedure and cousins instead of IntIntFunction.&lt;/p&gt;</comment>
                            <comment id="12792847" author="drew.farris" created="Sat, 19 Dec 2009 14:49:34 +0000"  >&lt;p&gt;Patch applied cleanly. &lt;/p&gt;

&lt;p&gt;When building, mvn complained that the source level on the compiler was not set properly for the collections-codegen-plugin project, but adding a maven-complier-plugin configuration stanza to the pom resolved this problem. The parent pom (maven/pom.xml) should be fixed to add this so that the children are not required to, but I suspect that should be handled as a separate issue, so perhaps for now it could be added to the collections-codegen-plugin pom?&lt;/p&gt;

&lt;p&gt;Must the template and generated classes retain the cern copyright message?&lt;/p&gt;

&lt;p&gt;Would we want to generate things &lt;/p&gt;
{type}Object{class} and Object{type}
{class}
&lt;p&gt; (e.g: LongObjectProcedure or ObjectIntProcedure) using this approach as well?&lt;/p&gt;

&lt;p&gt;I really like the plugin approach. I wonder if we should name it something more generic so that it would be a natural location other mahout-specific maven goals could be realized in that submodule, e.g: mahout-maven-plugin with a goal of mahout:generate-collections-sources, for example to build the mahout .job file - but perhaps that&apos;s worth a separate discussion for the dev list, so I would also say this is ok the way it is.&lt;/p&gt;</comment>
                            <comment id="12792849" author="bmargulies" created="Sat, 19 Dec 2009 15:03:51 +0000"  >&lt;p&gt;Drew,&lt;/p&gt;

&lt;p&gt;I&apos;m going to make a patch to make some improvements to the parent POM, next.&lt;/p&gt;

&lt;p&gt;At CXF, we have one Maven module per plugin, but we group them in a subdirectory. However, I think that it is supposedly possible to have multiple mojo classes in a project, so your proposal to rename this one might work. On the other hand, the goal of keeping &apos;math&apos; relatively self-contained might argue for keeping this to itself, or even moving it and math to a subdirectory.&lt;/p&gt;</comment>
                            <comment id="12792850" author="bmargulies" created="Sat, 19 Dec 2009 15:06:37 +0000"  >&lt;p&gt;Oh, heck. I misread you to have actually checked it in, and I didn&apos;t answer all your questions.&lt;/p&gt;

&lt;p&gt;According to Legal, it is best to be conservative in retaining CERN copyrights unless we get a grant from CERN. Since I created that template by very light editing of the original, it&apos;s a derived work, and the rule applies.&lt;/p&gt;

&lt;p&gt;Yes, I will be generating the Object guys, but as that involves a larger transition to generics, I didn&apos;t go there yet.&lt;/p&gt;

&lt;p&gt;I&apos;ll add another patch file for the compiler plugin.&lt;/p&gt;</comment>
                            <comment id="12792851" author="drew.farris" created="Sat, 19 Dec 2009 15:19:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Oh, heck. I misread you to have actually checked it in, and I didn&apos;t answer all your questions. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I&apos;m not a committer, I just review things when I can &amp;#8211; I&apos;ll keep an eye out, I&apos;m stuck in a hotel trying to get a flight out this morning.&lt;/p&gt;</comment>
                            <comment id="12792854" author="bmargulies" created="Sat, 19 Dec 2009 15:36:51 +0000"  >&lt;p&gt;Standardize compiler plugin options. Use dependencyManagement for junit version.&lt;/p&gt;</comment>
                            <comment id="12792857" author="drew.farris" created="Sat, 19 Dec 2009 16:18:23 +0000"  >&lt;p&gt;compileroptions.patch looks good too. When it is all said it done it is probably worth wrapping it up into a single final patch.&lt;/p&gt;

&lt;p&gt;It appears you can use the @goal annotation to setup multiple goals per maven plugin project, but I haven&apos;t done it myself.&lt;/p&gt;

&lt;p&gt;see: &lt;a href=&quot;http://maven.apache.org/guides/plugin/guide-java-plugin-development.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/guides/plugin/guide-java-plugin-development.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12792861" author="bmargulies" created="Sat, 19 Dec 2009 16:40:02 +0000"  >&lt;p&gt;We&apos;ll see if some committer is willing to take it in two pieces. My tree is a little wonky and so I feel safer with the two patches as they are.&lt;/p&gt;</comment>
                            <comment id="12792867" author="tdunning" created="Sat, 19 Dec 2009 17:21:48 +0000"  >&lt;p&gt;I would still like to see these in a special package.  Right now, they sit in:&lt;/p&gt;

&lt;p&gt;+package org.apache.mahout.math.function;&lt;/p&gt;

&lt;p&gt;But there are already several colt-ish things in that directory.&lt;/p&gt;

&lt;p&gt;My worry is that the code that uses these pre-existing functions is untested and thus we are likely to not notice when something gets bunged by the code generator over-writing them.&lt;/p&gt;

&lt;p&gt;Would it be possible to use org.apache.mahout.math.generated?&lt;/p&gt;

&lt;p&gt;Or to relocate all former residents of math.function to math.function.old before generating the code?&lt;/p&gt;
</comment>
                            <comment id="12792880" author="bmargulies" created="Sat, 19 Dec 2009 18:23:28 +0000"  >&lt;p&gt;OK, time to turn up the persuasion device.&lt;/p&gt;

&lt;p&gt;The goal here is to extend the code from Colt, not to leave it as-is and build next to it.  If you really want to preserve the original colt code unscathed, you should ask me to go back and rework my first commit, since I added several new functions to the IntIntHashMap to provide functionality comparable to Trove.&lt;/p&gt;

&lt;p&gt;Note that, ignoring my mistake of last evening, this patch doesn&apos;t change any &apos;functions&apos;. So far, it&apos;s all interfaces. I don&apos;t really see any value in preserving an older copy of the very same interface (as examined at the .class level) under another package name.&lt;/p&gt;

&lt;p&gt;The first really interesting commit in this project would, according to my idea, remove the checked-in AbstractIntIntMap and OpenIntIntHashMap and replace them with templates, and thus get the complete set.&lt;/p&gt;

&lt;p&gt;That&apos;s why I started with unit tests for that stack of code, so that I could prove to everyone, including myself, that I don&apos;t bust the IntInt map when adding all the others via the template trick.&lt;/p&gt;

&lt;p&gt;SInce I can&apos;t imagine any way to unit test an interface, let alone an interface consisting of a single function that takes two parameters and returns a boolean, I didn&apos;t write specific a specific unit test for IntIntProcedure. But there are uses of that interface and implementations of it in the unit tests I wrote for the int-int map. So, I think I could claim with some justification that there are now tests that would catch bad things on these items. Not so for the &apos;Function&apos; thing that I mistakenly put in the initial patch, and which I have no intention of touching at all, ever, as part of the hash table extensions.&lt;/p&gt;

&lt;p&gt;The pattern I&apos;m proposing here is:&lt;/p&gt;

&lt;p&gt;1) create adequate unit tests&lt;br/&gt;
2) enhance&lt;br/&gt;
3) rinse, lather, repeat&lt;/p&gt;

&lt;p&gt;I&apos;m claiming that I&apos;ve got tests for the IntInt hash map, and so I can tackle it.&lt;/p&gt;

&lt;p&gt;Next will come the Object-* case, which will need tests before I change anything, and then the *-Object case.&lt;/p&gt;


</comment>
                            <comment id="12792970" author="srowen" created="Sun, 20 Dec 2009 07:36:37 +0000"  >&lt;p&gt;FWIW I am also for extending or modifying Colt as appropriate. There is no particular need to preserve its original state.&lt;/p&gt;

&lt;p&gt;We should have as a secondary goal keeping this Colt-derived module as general as makes sense for us, to maximize reusability on its own. But this change seems fine in that regard.&lt;/p&gt;</comment>
                            <comment id="12792971" author="tdunning" created="Sun, 20 Dec 2009 08:02:33 +0000"  >
&lt;p&gt;Benson,&lt;/p&gt;

&lt;p&gt;I am completely down with you modifying rather than building beside Colt.  I also understand the difficulty of testing interfaces.&lt;/p&gt;

&lt;p&gt;What I was suggesting was possible ways to avoid silent errors.  Putting generated code in one place and then removing references to the Colt code would be a path that would avoid some of the risk that I am seeing with the current approach.&lt;/p&gt;

&lt;p&gt;But, hey, you are doing the work.  That gives you the biggest vote.&lt;/p&gt;
</comment>
                            <comment id="12792987" author="bmargulies" created="Sun, 20 Dec 2009 11:48:02 +0000"  >&lt;p&gt;Ted,&lt;/p&gt;

&lt;p&gt;Here&apos;s an interesting thing. I do use your your technique &apos;internally&apos;, but, at least this time around, the scaffolding was removed before I got to the point posting a patch. I have considered moving all the &apos;to be replaced&apos; code to a separate directory which can be incorporated with the build-helper-plugin (or not) to allow comparing things.&lt;/p&gt;

&lt;p&gt;--benson&lt;/p&gt;</comment>
                            <comment id="12793632" author="srowen" created="Tue, 22 Dec 2009 14:56:01 +0000"  >&lt;p&gt;Committer, per Benson&lt;/p&gt;</comment>
                            <comment id="12793634" author="bmargulies" created="Tue, 22 Dec 2009 15:01:21 +0000"  >&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12428533" name="codegen.patch" size="21520" author="bmargulies" created="Sat, 19 Dec 2009 13:19:28 +0000"/>
                            <attachment id="12428534" name="compileroptions.patch" size="2083" author="bmargulies" created="Sat, 19 Dec 2009 15:36:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 19 Dec 2009 02:42:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9839</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy6fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23193</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>