<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:20:21 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-974/MAHOUT-974.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-974] org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob  use integer as userId and itemId</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-974</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob  uses integer as userId and itemId,but org.apache.mahout.cf.taste.hadoop.similarity.item.ItemSimilarityJob  and  org.apache.mahout.cf.taste.hadoop.item.RecommenderJob .use Long as userId and ItemId.&lt;/p&gt;

&lt;p&gt;It&apos;s best that ParallelALSFactorizationJob   also uses Long as userId and itemId ,so that same dataset can use all the recommendation arithrmetic&lt;/p&gt;</description>
                <environment></environment>
        <key id="12541577">MAHOUT-974</key>
            <summary>org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob  use integer as userId and itemId</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ssc">Sebastian Schelter</assignee>
                                    <reporter username="huiwenhan">Han Hui Wen </reporter>
                        <labels>
                            <label>CF,recommendation,als</label>
                    </labels>
                <created>Tue, 7 Feb 2012 07:41:24 +0000</created>
                <updated>Mon, 3 Feb 2014 08:06:07 +0000</updated>
                            <resolved>Sat, 8 Jun 2013 08:29:22 +0100</resolved>
                                    <version>0.8</version>
                                    <fixVersion>0.8</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                    <timeoriginalestimate seconds="7200">2h</timeoriginalestimate>
                            <timeestimate seconds="7200">2h</timeestimate>
                                        <comments>
                            <comment id="13202195" author="ssc" created="Tue, 7 Feb 2012 09:34:27 +0000"  >&lt;p&gt;You are right. The item ID indexing (from longs to ints) that already exists in org.apache.mahout.cf.taste.hadoop.preparation.PreparePreferenceMatrixJob should be built into ParallelALSFactorizationJob too.&lt;/p&gt;</comment>
                            <comment id="13215327" author="huiwenhan" created="Fri, 24 Feb 2012 02:51:27 +0000"  >&lt;p&gt;org.apache.mahout.cf.taste.hadoop.preparation.PreparePreferenceMatrixJob just indexed itemId ,but not index userId.it also  converts user preferences into a vector per user and builds the rating matrix.&lt;/p&gt;</comment>
                            <comment id="13627881" author="kanjilal" created="Wed, 10 Apr 2013 16:08:37 +0100"  >&lt;p&gt;Sebastien,&lt;br/&gt;
Is this something I can help with, I dont see a patch so am not sure where you are with the fix.&lt;br/&gt;
Let me know&lt;br/&gt;
Regards&lt;/p&gt;</comment>
                            <comment id="13627925" author="ssc" created="Wed, 10 Apr 2013 16:51:02 +0100"  >&lt;p&gt;I didn&apos;t do any work on it, but it could be a good starters project. You basically have to create a mapping for both user and item ids, which must also be used by related jobs like the RecommenderJob for ALS and the one that evaluates the error of a factorization.&lt;/p&gt;</comment>
                            <comment id="13630727" author="kanjilal" created="Sat, 13 Apr 2013 00:02:24 +0100"  >&lt;p&gt;I am reading through the PreparePreferenceMatrixJob and I was wondering if by mapping between longs to ints you&apos;re referring to the following lines of code:&lt;br/&gt;
    //convert items to an internal index&lt;br/&gt;
    Job itemIDIndex = prepareJob(getInputPath(), getOutputPath(ITEMID_INDEX), TextInputFormat.class,&lt;br/&gt;
            ItemIDIndexMapper.class, VarIntWritable.class, VarLongWritable.class, ItemIDIndexReducer.class,&lt;br/&gt;
            VarIntWritable.class, VarLongWritable.class, SequenceFileOutputFormat.class);&lt;br/&gt;
    itemIDIndex.setCombinerClass(ItemIDIndexReducer.class);&lt;br/&gt;
    boolean succeeded = itemIDIndex.waitForCompletion(true);&lt;br/&gt;
    if (!succeeded) &lt;/p&gt;
{
      return -1;
    }
&lt;p&gt;    //convert user preferences into a vector per user&lt;br/&gt;
    Job toUserVectors = prepareJob(getInputPath(),&lt;br/&gt;
                                   getOutputPath(USER_VECTORS),&lt;br/&gt;
                                   TextInputFormat.class,&lt;br/&gt;
                                   ToItemPrefsMapper.class,&lt;br/&gt;
                                   VarLongWritable.class,&lt;br/&gt;
                                   booleanData ? VarLongWritable.class : EntityPrefWritable.class,&lt;br/&gt;
                                   ToUserVectorsReducer.class,&lt;br/&gt;
                                   VarLongWritable.class,&lt;br/&gt;
                                   VectorWritable.class,&lt;br/&gt;
                                   SequenceFileOutputFormat.class);&lt;/p&gt;

&lt;p&gt;Pardon my ignorance as this is my first time looking at this code, I dont see any other parts of this class resembling a mapping.  Also Sebastian I&apos;m wondering whether the mapping itself needs to be present in mahout-core so that multiple jobs can leverage it.&lt;/p&gt;</comment>
                            <comment id="13654376" author="amartgon" created="Fri, 10 May 2013 12:10:07 +0100"  >&lt;p&gt;Hi Saikat,&lt;/p&gt;

&lt;p&gt;I think the mapping is done in ItemIDIndexMapper, which in turn calls TasteHadoopUtils.idToIndex&lt;/p&gt;</comment>
                            <comment id="13654553" author="kanjilal" created="Fri, 10 May 2013 16:44:35 +0100"  >&lt;p&gt;Thanks for the update, I&apos;ll look into this, I&apos;m guessing the fix needs to be made inside the TasteHadoopUtils class&lt;/p&gt;</comment>
                            <comment id="13672163" author="ssc" created="Sat, 1 Jun 2013 18:14:20 +0100"  >&lt;p&gt;Saikat, are you still on this?&lt;/p&gt;</comment>
                            <comment id="13672172" author="kanjilal" created="Sat, 1 Jun 2013 18:36:51 +0100"  >&lt;p&gt;Yes, although I could use some general guidance being a newbie on this codebase, I&apos;ve not had time to research this further, can you respond to my comments above?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13672327" author="ssc" created="Sun, 2 Jun 2013 07:54:35 +0100"  >&lt;p&gt;Saikat,&lt;/p&gt;

&lt;p&gt;In the preprocessing code of the ALS job (the first two mapreduces), you would need to hash the long ids to ints, ideally using the MultipleOutputs API so that we don&apos;t need additional jobs. The mapping needs to be stored together with the factorization and must be used in the PredictionJob which uses the factorization to predict interactions. It has to map back the ints to longs. &lt;/p&gt;</comment>
                            <comment id="13676722" author="kanjilal" created="Thu, 6 Jun 2013 06:47:03 +0100"  >&lt;p&gt;Sebastian,&lt;br/&gt;
Finally had a chance to dig into this further tonight, so in looking at the first two map-reduces I see the ItemRatingVectorsMapper class, 2 ideas here: 1) should we get rid of this class and just use the ItemIDIndexMapper class and try to make this class work for ALS 2) make ItemRatingVectorsMapper handle the mapping, unlike ItemIDIndexMapper this class doesnt really handle an index and deals with the rating matrix which itself would need to be modified.&lt;/p&gt;


&lt;p&gt;Any thoughts on simplest solution?  My vote would be 2 but I need to read through the code some more to get a deeper understanding.   Also please pardon if I&apos;m way off base on solutioning this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;), lot of code to read and understand&lt;/p&gt;</comment>
                            <comment id="13676816" author="ssc" created="Thu, 6 Jun 2013 08:55:03 +0100"  >&lt;p&gt;Hi Saikat,&lt;/p&gt;

&lt;p&gt;The first two jobs create two versions of the ratings matrix, one partitioned by items, the other partitioned by users. The most elegant solution for this issue would be to make these jobs write out the mapping of ints to long ids via an emulation of MultipleOutputs such as used in org.apache.mahout.math.hadoop.stochasticsvd.ABtJob&lt;/p&gt;

&lt;p&gt;I suggest we add an argument &quot;usesLongIDs&quot; to the job that the user can set to trigger the mapping.&lt;/p&gt;</comment>
                            <comment id="13677095" author="kanjilal" created="Thu, 6 Jun 2013 16:32:42 +0100"  >&lt;p&gt;Sebastien,&lt;br/&gt;
In looking at ABtJob I see MultipleOutputs commented out, I tried to do a search for this class and it doesnt exist, is this more of a concept than an actual class?&lt;/p&gt;</comment>
                            <comment id="13677975" author="ssc" created="Fri, 7 Jun 2013 13:05:33 +0100"  >&lt;p&gt;Saikat,&lt;/p&gt;

&lt;p&gt;I&apos;ve had a deeper look and I think I&apos;ll take this issue. It&apos;s an ugly thing and lots of small places in the code need to be updated... Nothing fancy for someone not deeply familiar with the codebase.&lt;/p&gt;

&lt;p&gt;If you still wanna work on the ALS code, we should discuss this on the mailinglist. I have a few ideas what could be added for upcoming releases.&lt;/p&gt;</comment>
                            <comment id="13677985" author="ssc" created="Fri, 7 Jun 2013 13:21:36 +0100"  >&lt;p&gt;Patch that adds the functionality. Tests don&apos;t work in parallel mode for some strange reason though, in single/IDE execution, everything works. Will probably look into this tonight or tomorrow.&lt;/p&gt;</comment>
                            <comment id="13678702" author="ssc" created="Sat, 8 Jun 2013 08:29:22 +0100"  >&lt;p&gt;test issue is fixed, problem was that two test classes used the same class with a static final variable. &lt;/p&gt;</comment>
                            <comment id="13678706" author="hudson" created="Sat, 8 Jun 2013 09:11:21 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #2056 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2056/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2056/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-974&quot; title=&quot;org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob  use integer as userId and itemId&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-974&quot;&gt;&lt;del&gt;MAHOUT-974&lt;/del&gt;&lt;/a&gt; org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob use integer as userId and itemId (Revision 1490930)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ssc : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/MutableRecommendedItem.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/FactorizationEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/PredictionMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/RecommenderJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJobTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/MathHelper.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12586704" name="MAHOUT-974.patch" size="34169" author="ssc" created="Fri, 7 Jun 2013 13:21:36 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2012 09:34:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>226864</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy1u7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22449</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>