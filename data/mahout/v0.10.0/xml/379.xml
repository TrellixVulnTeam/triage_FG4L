<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:18:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-379/MAHOUT-379.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-379] SequentialAccessSparseVector.equals does not agree with AbstractVector.equivalent</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-379</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;When a SequentialAccessSparseVector is serialized and deserialized using VectorWritable, the result vector and the original vector are equivalent, yet equals returns false.&lt;/p&gt;

&lt;p&gt;The following unit-test reproduces the problem:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Test
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testSequentialAccessSparseVectorEquals() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Vector v = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SequentialAccessSparseVector(1);
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; VectorWritable vectorWritable = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VectorWritable(v);
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; VectorWritable vectorWritable2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VectorWritable();
    writeAndRead(vectorWritable, vectorWritable2);
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Vector v2 = vectorWritable2.get();

    assertTrue(AbstractVector.equivalent(v, v2));
    assertEquals(v, v2); &lt;span class=&quot;code-comment&quot;&gt;// This line fails!
&lt;/span&gt;}

&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void writeAndRead(Writable toWrite, Writable toRead) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ByteArrayOutputStream baos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DataOutputStream dos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataOutputStream(baos);
    toWrite.write(dos);

    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ByteArrayInputStream bais = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(baos.toByteArray());
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DataInputStream dis = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataInputStream(bais);
    toRead.readFields(dis);
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem seems to be that the original vector name is null, while the new vector&apos;s name is an empty string. The same issue probably also happens with RandomAccessSparseVector.&lt;/p&gt;

&lt;p&gt;SequentialAccessSparseVectorWritable (line 40):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
dataOutput.writeUTF(getName() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &quot;&quot; : getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;RandomAccessSparseVectorWritable (line 42):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
dataOutput.writeUTF(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getName() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &quot;&quot; : &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The simplest fix is probably to change the default Vector&apos;s name from null to the empty string.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12462020">MAHOUT-379</key>
            <summary>SequentialAccessSparseVector.equals does not agree with AbstractVector.equivalent</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="dleshem">Danny Leshem</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Apr 2010 10:08:22 +0100</created>
                <updated>Sun, 31 Oct 2010 15:49:25 +0000</updated>
                            <resolved>Wed, 22 Sep 2010 08:23:26 +0100</resolved>
                                    <version>0.4</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12856812" author="srowen" created="Wed, 14 Apr 2010 10:25:55 +0100"  >&lt;p&gt;Yeah let&apos;s take some time to get this right. At the moment I see four notions of equivalence in Vector (which is down from five!), and this seems like one too many:&lt;/p&gt;

&lt;p&gt;==: of course&lt;br/&gt;
equals(): compares values, names, not implementation&lt;br/&gt;
equivalent(): compares values only&lt;br/&gt;
strictEquivalence(): compares values, names, implementation&lt;/p&gt;

&lt;p&gt;equals() ought to be strict-ish. Its current implementation is fine, though conventional wisdom is that it&apos;s better to only consider instances of the same class equals() in order to avoid transitivity problems. I think that&apos;s a valid concern here.&lt;/p&gt;

&lt;p&gt;Therefore I submit that equals() should be replaced with what strictEquivalence() does.&lt;/p&gt;

&lt;p&gt;(And then, of course, fix the underlying issue that was raised too!)&lt;/p&gt;</comment>
                            <comment id="12856835" author="gsingers" created="Wed, 14 Apr 2010 11:58:49 +0100"  >&lt;p&gt;I think we probably should have a discussion on the dev list, given we&apos;ve been over this one several times now.&lt;/p&gt;</comment>
                            <comment id="12857770" author="srowen" created="Fri, 16 Apr 2010 11:22:12 +0100"  >&lt;p&gt;This is a pre-patch, per discussion on the mailing list. Is this too much iterator rearrangement or does it clarify?&lt;/p&gt;</comment>
                            <comment id="12857778" author="dleshem" created="Fri, 16 Apr 2010 12:03:20 +0100"  >&lt;p&gt;Sean, your patch neither fixes the original issue raised, nor contains the unit-test that exposes it.&lt;/p&gt;</comment>
                            <comment id="12857779" author="srowen" created="Fri, 16 Apr 2010 12:06:18 +0100"  >&lt;p&gt;Yup, this is why I said &quot;pre-patch&quot;, in reference to a mailing list thread perhaps you didn&apos;t see. This proposes reshuffling the iterator/element stuff, which is marginally related, in the course of actually addressing the issue.&lt;/p&gt;</comment>
                            <comment id="12858127" author="srowen" created="Sat, 17 Apr 2010 13:29:06 +0100"  >&lt;p&gt;Here&apos;s another patch, which builds on the previous changes, which did not directly relate to this issue but go along with them.&lt;/p&gt;

&lt;p&gt;This patch does include the test case, and more, which passes.&lt;/p&gt;

&lt;p&gt;it resolves the issue by removing Vector names, and removing both equivalent() and strictEquivalence(). equals() now compares only values.&lt;/p&gt;

&lt;p&gt;Further, equals() and hashCode() are paired up in AbstractVector to do more to ensure they are consistent, and correct. We had, for instance, a transitivity problem with VectorView.equals(). Subclasses may specialize for performance; DenseVector still does this for instance and we can revisit this with care later.&lt;/p&gt;

&lt;p&gt;Good news is this patch net-net removes 170 lines of code, even with new unit tests.&lt;/p&gt;

&lt;p&gt;It builds on the previous patch&apos;s refactoring of iterator methods.&lt;/p&gt;

&lt;p&gt;It&apos;s a big patch so deserves some looking.&lt;/p&gt;</comment>
                            <comment id="12858128" author="srowen" created="Sat, 17 Apr 2010 13:30:12 +0100"  >&lt;p&gt;Hmm my second patch didn&apos;t attach&lt;/p&gt;</comment>
                            <comment id="12858153" author="robinanil" created="Sat, 17 Apr 2010 16:13:59 +0100"  >&lt;p&gt;If the id from the vector is removed, I believe it will affect all clustering algorithms. The final stage is generating the vector_id, cluster_id pair.  will have to verify if this doesn&apos;t affect that step&lt;/p&gt;</comment>
                            <comment id="12858471" author="srowen" created="Mon, 19 Apr 2010 13:31:14 +0100"  >&lt;p&gt;Another update to this huge patch. As promised, *Writable no longer extend Vector classes. NamedVector is in place.&lt;/p&gt;</comment>
                            <comment id="12858807" author="srowen" created="Tue, 20 Apr 2010 11:38:25 +0100"  >&lt;p&gt;I&apos;d like to commit this patch as it addresses a couple issues, but it&apos;s a big one. Deserves some looking if you have a moment. We can retroactively undo some elements later, but best to have a glance now.&lt;/p&gt;</comment>
                            <comment id="12883910" author="gsingers" created="Wed, 30 Jun 2010 14:06:13 +0100"  >&lt;p&gt;This fix broke the LuceneIterable functionality by removing the ability to label Lucene vectors.&lt;/p&gt;</comment>
                            <comment id="12883912" author="gsingers" created="Wed, 30 Jun 2010 14:10:36 +0100"  >&lt;p&gt;Here&apos;s an untested fix for this.&lt;/p&gt;</comment>
                            <comment id="12883937" author="srowen" created="Wed, 30 Jun 2010 15:28:55 +0100"  >&lt;p&gt;Yes that sounds about right, the intent is to use NamedVector instead.&lt;/p&gt;</comment>
                            <comment id="12894413" author="srowen" created="Sun, 1 Aug 2010 19:52:23 +0100"  >&lt;p&gt;Am I right this is re-resolved?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12442042" name="ASF.LICENSE.NOT.GRANTED--MAHOUT-379.patch" size="92848" author="srowen" created="Sat, 17 Apr 2010 13:30:12 +0100"/>
                            <attachment id="12441953" name="ASF.LICENSE.NOT.GRANTED--MAHOUT-379.patch" size="31127" author="srowen" created="Fri, 16 Apr 2010 11:22:12 +0100"/>
                            <attachment id="12448396" name="MAHOUT-379-lucene.patch" size="2154" author="gsingers" created="Wed, 30 Jun 2010 14:10:35 +0100"/>
                            <attachment id="12442177" name="MAHOUT-379.patch" size="140495" author="srowen" created="Mon, 19 Apr 2010 13:31:14 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Apr 2010 09:25:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9685</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5hb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23039</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>