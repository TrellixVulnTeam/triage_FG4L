<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:15:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1498/MAHOUT-1498.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1498] DistributedCache.setCacheFiles in DictionaryVectorizer overwrites jars pushed using oozie</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1498</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Hi, I get exception &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;&amp;lt;&amp;lt; Invocation of Main class completed &amp;lt;&amp;lt;&amp;lt;

Failing Oozie Launcher, Main class [org.apache.mahout.vectorizer.SparseVectorsFromSequenceFiles], main() threw exception, Job failed!
java.lang.IllegalStateException: Job failed!
at org.apache.mahout.vectorizer.DictionaryVectorizer.makePartialVectors(DictionaryVectorizer.java:329)
at org.apache.mahout.vectorizer.DictionaryVectorizer.createTermFrequencyVectors(DictionaryVectorizer.java:199)
at org.apache.mahout.vectorizer.SparseVectorsFromSequenceFiles.run(SparseVectorsFromSequenceFiles.java:271)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The root cause is:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Error: java.lang.ClassNotFoundException: org.apache.mahout.math.Vector
at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
at java.lang.&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.loadClass(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.java:306)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
at java.lang.&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.loadClass(&lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt;.java:247)
at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName0(Native Method)
at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:247
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like it happens because of &lt;br/&gt;
DictionaryVectorizer.makePartialVectors method.&lt;br/&gt;
It has code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
DistributedCache.setCacheFiles(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; URI[] {dictionaryFilePath.toUri()}, conf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which overrides jars pushed with job by oozie:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void More ...setCacheFiles(URI[] files, Configuration conf) {
         &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; sfiles = StringUtils.uriToString(files);
         conf.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;mapred.cache.files&quot;&lt;/span&gt;, sfiles);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;mahout-core-0.7-cdh4.4.0.jar&lt;/p&gt;</environment>
        <key id="12705544">MAHOUT-1498</key>
            <summary>DistributedCache.setCacheFiles in DictionaryVectorizer overwrites jars pushed using oozie</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ssc">Sebastian Schelter</assignee>
                                    <reporter username="serega_sheypak">Sergey</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Sun, 30 Mar 2014 16:02:18 +0100</created>
                <updated>Mon, 13 Apr 2015 11:19:51 +0100</updated>
                            <resolved>Sun, 18 May 2014 18:35:35 +0100</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.10.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13954737" author="serega_sheypak" created="Sun, 30 Mar 2014 17:27:19 +0100"  >&lt;p&gt;So I&apos;ve replaced all &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
DistributedCache.setCacheFiles(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; URI[] {dictionaryFilePath.toUri()}, conf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
DistributedCache.addCacheFile(dictionaryFilePath.toUri(), conf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now my jars are not thrown away from distirubted cache. These jars are used in subsequent MR job submission.&lt;br/&gt;
Also I&apos;ve modified several reducers. Reducers did expect to get single file in distCache. Here is an example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;//TFPartialVectorReducer
&lt;/span&gt;@Override
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void setup(Context context) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException {
        &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.setup(context);
        Configuration conf = context.getConfiguration();
        URI[] localFiles = DistributedCache.getCacheFiles(conf);
        Preconditions.checkArgument(localFiles != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; localFiles.length &amp;gt;= 1,
                &lt;span class=&quot;code-quote&quot;&gt;&quot;missing paths from the DistributedCache&quot;&lt;/span&gt;);

        dimension = conf.getInt(PartialVectorMerger.DIMENSION, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE);
        sequentialAccess = conf.getBoolean(PartialVectorMerger.SEQUENTIAL_ACCESS, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        namedVector = conf.getBoolean(PartialVectorMerger.NAMED_VECTOR, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        maxNGramSize = conf.getInt(DictionaryVectorizer.MAX_NGRAMS, maxNGramSize);

        &lt;span class=&quot;code-comment&quot;&gt;//Path dictionaryFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(localFiles[0].getPath());
&lt;/span&gt;        Path dictionaryFile = getPathToDictionaryFile(localFiles);
        &lt;span class=&quot;code-comment&quot;&gt;// key is word value is id
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Pair&amp;lt;Writable, IntWritable&amp;gt; record
                : &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SequenceFileIterable&amp;lt;Writable, IntWritable&amp;gt;(dictionaryFile, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, conf)) {
            dictionary.put(record.getFirst().toString(), record.getSecond().get());
        }
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Path getPathToDictionaryFile(URI[] localFiles){
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(URI distCacheFile : localFiles){
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;getPathToDictionaryFile ::: &quot;&lt;/span&gt; + (distCacheFile == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; : distCacheFile.toString()));
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(distCacheFile!=&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; distCacheFile.toString().contains(&lt;span class=&quot;code-quote&quot;&gt;&quot;dictionary.file&quot;&lt;/span&gt;)){
                &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;getPathToDictionaryFile ::: looks like [&quot;&lt;/span&gt;+distCacheFile+&lt;span class=&quot;code-quote&quot;&gt;&quot;] is a dictionary we need&quot;&lt;/span&gt;);
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(distCacheFile.getPath());
            }
        }
        URI lastUri = localFiles[localFiles.length-1];
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;getPathToDictionaryFile ::: didn&apos;t find dict file. Trying to &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the last one [&quot;&lt;/span&gt;+lastUri.toString()+&lt;span class=&quot;code-quote&quot;&gt;&quot;]&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(lastUri.getPath());
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m not sure is it good or bad, and now my oozie action runs without any problems. Here is a workflow action:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;action name=&lt;span class=&quot;code-quote&quot;&gt;&quot;run-mahout-item_info_catalog_category_id&quot;&lt;/span&gt;&amp;gt;
        &amp;lt;java&amp;gt;
            &amp;lt;job-tracker&amp;gt;${jobTracker}&amp;lt;/job-tracker&amp;gt;
            &amp;lt;name-node&amp;gt;${nameNode}&amp;lt;/name-node&amp;gt;
            &amp;lt;prepare&amp;gt;
                &amp;lt;delete path=&lt;span class=&quot;code-quote&quot;&gt;&quot;${nameNode}/staging/working/mahout/run-mahout-item_info_catalog_category_id/out&quot;&lt;/span&gt; /&amp;gt;
            &amp;lt;/prepare&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;property&amp;gt;
                    &amp;lt;name&amp;gt;mapred.queue.name&amp;lt;/name&amp;gt;
                    &amp;lt;value&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&amp;lt;/value&amp;gt;
                &amp;lt;/property&amp;gt;
            &amp;lt;/configuration&amp;gt;
            &amp;lt;main-class&amp;gt;org.apache.mahout.vectorizer.SparseVectorsFromSequenceFilesDirtyHack&amp;lt;/main-class&amp;gt;

            &amp;lt;arg&amp;gt;-Ddfs.blocksize=1m&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;--input&amp;lt;/arg&amp;gt;
            &amp;lt;arg&amp;gt;${nameNode}/staging/working/mahout/prepare-item_info_catalog_category_id/out&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;--output&amp;lt;/arg&amp;gt;
            &amp;lt;arg&amp;gt;${nameNode}/staging/working/mahout/run-mahout-item_info_catalog_category_id/out&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;-ow&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;-x&amp;lt;/arg&amp;gt;
            &amp;lt;arg&amp;gt;70&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;-ng&amp;lt;/arg&amp;gt;
            &amp;lt;arg&amp;gt;4&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;-n&amp;lt;/arg&amp;gt;
            &amp;lt;arg&amp;gt;2&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;-seq&amp;lt;/arg&amp;gt;

            &amp;lt;arg&amp;gt;-wt&amp;lt;/arg&amp;gt;
            &amp;lt;arg&amp;gt;TFIDF&amp;lt;/arg&amp;gt;
        &amp;lt;/java&amp;gt;
        &amp;lt;ok to=&lt;span class=&quot;code-quote&quot;&gt;&quot;mahout-join-node&quot;&lt;/span&gt;/&amp;gt;
        &amp;lt;error to=&lt;span class=&quot;code-quote&quot;&gt;&quot;kill&quot;&lt;/span&gt;/&amp;gt;
    &amp;lt;/action&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13967801" author="ssc" created="Sun, 13 Apr 2014 12:28:37 +0100"  >&lt;p&gt;Could you provide a patch for your changes?&lt;/p&gt;</comment>
                            <comment id="13975537" author="serega_sheypak" created="Mon, 21 Apr 2014 12:56:44 +0100"  >&lt;p&gt;Yes, it&apos;s possible&lt;/p&gt;

&lt;p&gt;1. &lt;a href=&quot;http://commons.apache.org/patches.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/patches.html&lt;/a&gt;&lt;br/&gt;
is it a valid guide?&lt;/p&gt;

&lt;p&gt;2. Which branch do I have to checkout for patching? Right now it&apos;s done &apos;quick-and-dirty&apos;. It can&apos;t be used a a patch...&lt;/p&gt;</comment>
                            <comment id="13982236" author="ssc" created="Sun, 27 Apr 2014 09:01:24 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=serega_sheypak&quot; class=&quot;user-hover&quot; rel=&quot;serega_sheypak&quot;&gt;Sergey&lt;/a&gt; Here is the info on how to contribute patch: &lt;a href=&quot;https://mahout.apache.org/developers/how-to-contribute.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mahout.apache.org/developers/how-to-contribute.html&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Please work off trunk&lt;/p&gt;</comment>
                            <comment id="14001014" author="ssc" created="Sun, 18 May 2014 07:21:07 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=serega_sheypak&quot; class=&quot;user-hover&quot; rel=&quot;serega_sheypak&quot;&gt;Sergey&lt;/a&gt; whats the status here?&lt;/p&gt;</comment>
                            <comment id="14001119" author="serega_sheypak" created="Sun, 18 May 2014 17:28:45 +0100"  >&lt;p&gt;PATCH&lt;/p&gt;</comment>
                            <comment id="14001120" author="serega_sheypak" created="Sun, 18 May 2014 17:29:54 +0100"  >&lt;p&gt;Hi, I&apos;ve added a separate class+test. I hope I did follow the guides.&lt;br/&gt;
Please see is it OK or I need to work more on it. Thanks.&lt;/p&gt;</comment>
                            <comment id="14001122" author="serega_sheypak" created="Sun, 18 May 2014 17:34:14 +0100"  >&lt;p&gt;From 4c95084229830b88f0bdec63b0967e5d6fceb58d Mon Sep 17 00:00:00 2001&lt;br/&gt;
From: seregasheypak &amp;lt;serega.sheypak@gmail.com&amp;gt;&lt;br/&gt;
Date: Sun, 18 May 2014 20:20:16 +0400&lt;br/&gt;
Subject: &lt;span class=&quot;error&quot;&gt;&amp;#91;PATCH&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1498&quot; title=&quot;DistributedCache.setCacheFiles in DictionaryVectorizer overwrites jars pushed using oozie&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1498&quot;&gt;&lt;del&gt;MAHOUT-1498&lt;/del&gt;&lt;/a&gt; Do not reset app jars stored in&lt;br/&gt;
 DistributedCache. Now you can run it as oozie Java action.&lt;br/&gt;
 Just bundle dependent jars in workflow/lib folder.&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;br/&gt;
 .../mahout/util/DistributedCacheFileLocator.java   |   47 ++++++++++++++++++++&lt;br/&gt;
 .../mahout/vectorizer/DictionaryVectorizer.java    |   21 ++++-----&lt;br/&gt;
 .../vectorizer/term/TFPartialVectorReducer.java    |   14 +++---&lt;br/&gt;
 .../mahout/vectorizer/tfidf/TFIDFConverter.java    |   11 +++--&lt;br/&gt;
 .../tfidf/TFIDFPartialVectorReducer.java           |    6 ++-&lt;br/&gt;
 .../util/DistributedCacheFileLocatorTest.java      |   38 ++++++++++++++++&lt;br/&gt;
 6 files changed, 109 insertions&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/add.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, 28 deletions&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/forbidden.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
 create mode 100644 mrlegacy/src/main/java/org/apache/mahout/util/DistributedCacheFileLocator.java&lt;br/&gt;
 create mode 100644 mrlegacy/src/test/java/org/apache/mahout/util/DistributedCacheFileLocatorTest.java&lt;/p&gt;

&lt;p&gt;diff --git a/mrlegacy/src/main/java/org/apache/mahout/util/DistributedCacheFileLocator.java b/mrlegacy/src/main/java/org/apache/mahout/util/DistributedCacheFileLocator.java&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..8a59908&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/mrlegacy/src/main/java/org/apache/mahout/util/DistributedCacheFileLocator.java&lt;br/&gt;
@@ -0,0 +1,47 @@&lt;br/&gt;
+/**&lt;br/&gt;
+ * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
+ * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
+ * this work for additional information regarding copyright ownership.&lt;br/&gt;
+ * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
+ * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
+ * the License.  You may obtain a copy of the License at&lt;br/&gt;
+ *&lt;br/&gt;
+ *     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+ *&lt;br/&gt;
+ * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+ * See the License for the specific language governing permissions and&lt;br/&gt;
+ * limitations under the License.&lt;br/&gt;
+ */&lt;br/&gt;
+&lt;br/&gt;
+package org.apache.mahout.util;&lt;br/&gt;
+&lt;br/&gt;
+import org.apache.hadoop.fs.Path;&lt;br/&gt;
+import org.slf4j.Logger;&lt;br/&gt;
+import org.slf4j.LoggerFactory;&lt;br/&gt;
+&lt;br/&gt;
+import java.net.URI;&lt;br/&gt;
+&lt;br/&gt;
+public class DistributedCacheFileLocator {&lt;br/&gt;
+&lt;br/&gt;
+    private static final Logger log = LoggerFactory.getLogger(DistributedCacheFileLocator.class);&lt;br/&gt;
+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Finds a file in Distributed cache&lt;br/&gt;
+     * @param aPartOfName is a substring in file name&lt;br/&gt;
+     * @param localFiles holds references to files stored in distributed cache&lt;br/&gt;
+     * @return Path instance to first matched file or null&lt;br/&gt;
+     * */&lt;br/&gt;
+    public Path findByContainsInName(String aPartOfName, URI[] localFiles){&lt;br/&gt;
+        for(URI distCacheFile : localFiles){&lt;br/&gt;
+            log.debug(&quot;find a file in distributed cache by part of name {}&quot;, aPartOfName);&lt;br/&gt;
+            if(distCacheFile!=null &amp;amp;&amp;amp; distCacheFile.toString().contains(aPartOfName)){&lt;br/&gt;
+                log.debug(&quot;found a file &lt;span class=&quot;error&quot;&gt;&amp;#91;{}&amp;#93;&lt;/span&gt; using a part of name&lt;span class=&quot;error&quot;&gt;&amp;#91;{}&amp;#93;&lt;/span&gt;&quot;, distCacheFile.toString(), aPartOfName);&lt;br/&gt;
+                return new Path(distCacheFile.getPath());&lt;br/&gt;
+            }&lt;br/&gt;
+        }&lt;br/&gt;
+        return null;&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java&lt;br/&gt;
index 99ef019..64e5a67 100644&lt;br/&gt;
&amp;#8212; a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java&lt;br/&gt;
+++ b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java&lt;br/&gt;
@@ -17,11 +17,6 @@&lt;/p&gt;

&lt;p&gt; package org.apache.mahout.vectorizer;&lt;/p&gt;

&lt;p&gt;-import java.io.IOException;&lt;br/&gt;
-import java.net.URI;&lt;br/&gt;
-import java.util.Collection;&lt;br/&gt;
-import java.util.List;&lt;br/&gt;
-&lt;br/&gt;
 import com.google.common.base.Preconditions;&lt;br/&gt;
 import com.google.common.collect.Lists;&lt;br/&gt;
 import com.google.common.io.Closeables;&lt;br/&gt;
@@ -29,11 +24,7 @@ import org.apache.hadoop.conf.Configuration;&lt;br/&gt;
 import org.apache.hadoop.filecache.DistributedCache;&lt;br/&gt;
 import org.apache.hadoop.fs.FileSystem;&lt;br/&gt;
 import org.apache.hadoop.fs.Path;&lt;br/&gt;
-import org.apache.hadoop.io.IntWritable;&lt;br/&gt;
-import org.apache.hadoop.io.LongWritable;&lt;br/&gt;
-import org.apache.hadoop.io.SequenceFile;&lt;br/&gt;
-import org.apache.hadoop.io.Text;&lt;br/&gt;
-import org.apache.hadoop.io.Writable;&lt;br/&gt;
+import org.apache.hadoop.io.*;&lt;br/&gt;
 import org.apache.hadoop.mapreduce.Job;&lt;br/&gt;
 import org.apache.hadoop.mapreduce.Mapper;&lt;br/&gt;
 import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;br/&gt;
@@ -59,6 +50,10 @@ import org.apache.mahout.vectorizer.term.TermCountReducer;&lt;br/&gt;
 import org.slf4j.Logger;&lt;br/&gt;
 import org.slf4j.LoggerFactory;&lt;/p&gt;

&lt;p&gt;+import java.io.IOException;&lt;br/&gt;
+import java.util.Collection;&lt;br/&gt;
+import java.util.List;&lt;br/&gt;
+&lt;br/&gt;
 /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This class converts a set of input documents in the sequence file format to vectors. The Sequence file&lt;/li&gt;
	&lt;li&gt;input should have a 
{@link Text}
&lt;p&gt; key containing the unique document identifier and a &lt;/p&gt;
{@link StringTuple}
&lt;p&gt;@@ -73,7 +68,7 @@ public final class DictionaryVectorizer extends AbstractJob implements Vectorize&lt;br/&gt;
   public static final String MAX_NGRAMS = &quot;max.ngrams&quot;;&lt;br/&gt;
   public static final int DEFAULT_MIN_SUPPORT = 2;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final String DICTIONARY_FILE = &quot;dictionary.file-&quot;;&lt;br/&gt;
+  public static final String DICTIONARY_FILE = &quot;dictionary.file-&quot;;&lt;br/&gt;
   private static final int MAX_CHUNKSIZE = 10000;&lt;br/&gt;
   private static final int MIN_CHUNKSIZE = 100;&lt;br/&gt;
   private static final String OUTPUT_FILES_PATTERN = &quot;part-*&quot;;&lt;br/&gt;
@@ -301,8 +296,8 @@ public final class DictionaryVectorizer extends AbstractJob implements Vectorize&lt;br/&gt;
     conf.setInt(PartialVectorMerger.DIMENSION, dimension);&lt;br/&gt;
     conf.setBoolean(PartialVectorMerger.SEQUENTIAL_ACCESS, sequentialAccess);&lt;br/&gt;
     conf.setBoolean(PartialVectorMerger.NAMED_VECTOR, namedVectors);&lt;/li&gt;
	&lt;li&gt;conf.setInt(MAX_NGRAMS, maxNGramSize);&lt;/li&gt;
	&lt;li&gt;DistributedCache.setCacheFiles(new URI[] 
{dictionaryFilePath.toUri()}, conf);&lt;br/&gt;
+    conf.setInt(MAX_NGRAMS, maxNGramSize);&lt;br/&gt;
+    DistributedCache.addCacheFile(dictionaryFilePath.toUri(), conf);&lt;br/&gt;
     &lt;br/&gt;
     Job job = new Job(conf);&lt;br/&gt;
     job.setJobName(&quot;DictionaryVectorizer::MakePartialVectors: input-folder: &quot; + input&lt;br/&gt;
diff --git a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/term/TFPartialVectorReducer.java b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/term/TFPartialVectorReducer.java&lt;br/&gt;
index 634b335..6b62a23 100644&lt;br/&gt;
&amp;#8212; a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/term/TFPartialVectorReducer.java&lt;br/&gt;
+++ b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/term/TFPartialVectorReducer.java&lt;br/&gt;
@@ -19,6 +19,7 @@ package org.apache.mahout.vectorizer.term;&lt;br/&gt;
 &lt;br/&gt;
 import com.google.common.io.Closeables;&lt;br/&gt;
 import org.apache.hadoop.conf.Configuration;&lt;br/&gt;
+import org.apache.hadoop.filecache.DistributedCache;&lt;br/&gt;
 import org.apache.hadoop.fs.Path;&lt;br/&gt;
 import org.apache.hadoop.io.IntWritable;&lt;br/&gt;
 import org.apache.hadoop.io.Text;&lt;br/&gt;
@@ -26,21 +27,18 @@ import org.apache.hadoop.io.Writable;&lt;br/&gt;
 import org.apache.hadoop.mapreduce.Reducer;&lt;br/&gt;
 import org.apache.lucene.analysis.shingle.ShingleFilter;&lt;br/&gt;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;&lt;br/&gt;
-import org.apache.mahout.common.HadoopUtil;&lt;br/&gt;
 import org.apache.mahout.common.Pair;&lt;br/&gt;
 import org.apache.mahout.common.StringTuple;&lt;br/&gt;
 import org.apache.mahout.common.iterator.sequencefile.SequenceFileIterable;&lt;br/&gt;
 import org.apache.mahout.common.lucene.IteratorTokenStream;&lt;br/&gt;
-import org.apache.mahout.math.NamedVector;&lt;br/&gt;
-import org.apache.mahout.math.RandomAccessSparseVector;&lt;br/&gt;
-import org.apache.mahout.math.SequentialAccessSparseVector;&lt;br/&gt;
-import org.apache.mahout.math.Vector;&lt;br/&gt;
-import org.apache.mahout.math.VectorWritable;&lt;br/&gt;
+import org.apache.mahout.math.*;&lt;br/&gt;
 import org.apache.mahout.math.map.OpenObjectIntHashMap;&lt;br/&gt;
+import org.apache.mahout.util.DistributedCacheFileLocator;&lt;br/&gt;
 import org.apache.mahout.vectorizer.DictionaryVectorizer;&lt;br/&gt;
 import org.apache.mahout.vectorizer.common.PartialVectorMerger;&lt;br/&gt;
 &lt;br/&gt;
 import java.io.IOException;&lt;br/&gt;
+import java.net.URI;&lt;br/&gt;
 import java.util.Iterator;&lt;br/&gt;
 &lt;br/&gt;
 /**&lt;br/&gt;
@@ -120,8 +118,8 @@ public class TFPartialVectorReducer extends Reducer&amp;lt;Text, StringTuple, Text, Vec&lt;br/&gt;
     namedVector = conf.getBoolean(PartialVectorMerger.NAMED_VECTOR, false);&lt;br/&gt;
     maxNGramSize = conf.getInt(DictionaryVectorizer.MAX_NGRAMS, maxNGramSize);&lt;br/&gt;
 &lt;br/&gt;
-    //&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1247&quot; title=&quot;cluster-reuters doesn&amp;#39;t work on Hadoop&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1247&quot;&gt;&lt;del&gt;MAHOUT-1247&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
-    Path dictionaryFile = HadoopUtil.getSingleCachedFile(conf);&lt;br/&gt;
+    URI[] localFiles = DistributedCache.getCacheFiles(conf);&lt;br/&gt;
+    Path dictionaryFile = new DistributedCacheFileLocator().findByContainsInName(DictionaryVectorizer.DICTIONARY_FILE, localFiles);&lt;br/&gt;
     // key is word value is id&lt;br/&gt;
     for (Pair&amp;lt;Writable, IntWritable&amp;gt; record&lt;br/&gt;
             : new SequenceFileIterable&amp;lt;Writable, IntWritable&amp;gt;(dictionaryFile, true, conf)) {&lt;br/&gt;
diff --git a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java&lt;br/&gt;
index db602dd..4586d77 100644&lt;br/&gt;
&amp;#8212; a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java&lt;br/&gt;
+++ b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java&lt;br/&gt;
@@ -17,10 +17,6 @@&lt;br/&gt;
 &lt;br/&gt;
 package org.apache.mahout.vectorizer.tfidf;&lt;br/&gt;
 &lt;br/&gt;
-import java.io.IOException;&lt;br/&gt;
-import java.net.URI;&lt;br/&gt;
-import java.util.List;&lt;br/&gt;
-&lt;br/&gt;
 import com.google.common.base.Preconditions;&lt;br/&gt;
 import com.google.common.collect.Lists;&lt;br/&gt;
 import com.google.common.io.Closeables;&lt;br/&gt;
@@ -47,6 +43,9 @@ import org.apache.mahout.vectorizer.common.PartialVectorMerger;&lt;br/&gt;
 import org.apache.mahout.vectorizer.term.TermDocumentCountMapper;&lt;br/&gt;
 import org.apache.mahout.vectorizer.term.TermDocumentCountReducer;&lt;br/&gt;
 &lt;br/&gt;
+import java.io.IOException;&lt;br/&gt;
+import java.util.List;&lt;br/&gt;
+&lt;br/&gt;
 /**&lt;br/&gt;
  * This class converts a set of input vectors with term frequencies to TfIdf vectors. The Sequence file input&lt;br/&gt;
  * should have a {@link org.apache.hadoop.io.WritableComparable} key containing and a&lt;br/&gt;
@@ -64,7 +63,7 @@ public final class TFIDFConverter {&lt;br/&gt;
   //public static final String TFIDF_OUTPUT_FOLDER = &quot;tfidf&quot;;&lt;br/&gt;
 &lt;br/&gt;
   private static final String DOCUMENT_VECTOR_OUTPUT_FOLDER = &quot;tfidf-vectors&quot;;&lt;br/&gt;
-  private static final String FREQUENCY_FILE = &quot;frequency.file-&quot;;&lt;br/&gt;
+  public static final String FREQUENCY_FILE = &quot;frequency.file-&quot;;&lt;br/&gt;
   private static final int MAX_CHUNKSIZE = 10000;&lt;br/&gt;
   private static final int MIN_CHUNKSIZE = 100;&lt;br/&gt;
   private static final String OUTPUT_FILES_PATTERN = &quot;part-*&quot;;&lt;br/&gt;
@@ -299,7 +298,7 @@ public final class TFIDFConverter {&lt;br/&gt;
     conf.setLong(MAX_DF, maxDF);&lt;br/&gt;
     conf.setBoolean(PartialVectorMerger.SEQUENTIAL_ACCESS, sequentialAccess);&lt;br/&gt;
     conf.setBoolean(PartialVectorMerger.NAMED_VECTOR, namedVector);&lt;br/&gt;
-    DistributedCache.setCacheFiles(new URI[] {dictionaryFilePath.toUri()}
&lt;p&gt;, conf);&lt;br/&gt;
+    DistributedCache.addCacheFile(dictionaryFilePath.toUri(), conf);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     Job job = new Job(conf);&lt;br/&gt;
     job.setJobName(&quot;: MakePartialVectors: input-folder: &quot; + input + &quot;, dictionary-file: &quot;&lt;br/&gt;
diff --git a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFPartialVectorReducer.java b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFPartialVectorReducer.java&lt;br/&gt;
index ebb4d2b..1be630e 100644&lt;br/&gt;
&amp;#8212; a/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFPartialVectorReducer.java&lt;br/&gt;
+++ b/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFPartialVectorReducer.java&lt;br/&gt;
@@ -18,9 +18,11 @@&lt;br/&gt;
 package org.apache.mahout.vectorizer.tfidf;&lt;/p&gt;

&lt;p&gt; import java.io.IOException;&lt;br/&gt;
+import java.net.URI;&lt;br/&gt;
 import java.util.Iterator;&lt;/p&gt;

&lt;p&gt; import org.apache.hadoop.conf.Configuration;&lt;br/&gt;
+import org.apache.hadoop.filecache.DistributedCache;&lt;br/&gt;
 import org.apache.hadoop.fs.Path;&lt;br/&gt;
 import org.apache.hadoop.io.IntWritable;&lt;br/&gt;
 import org.apache.hadoop.io.LongWritable;&lt;br/&gt;
@@ -35,6 +37,7 @@ import org.apache.mahout.math.SequentialAccessSparseVector;&lt;br/&gt;
 import org.apache.mahout.math.Vector;&lt;br/&gt;
 import org.apache.mahout.math.VectorWritable;&lt;br/&gt;
 import org.apache.mahout.math.map.OpenIntLongHashMap;&lt;br/&gt;
+import org.apache.mahout.util.DistributedCacheFileLocator;&lt;br/&gt;
 import org.apache.mahout.vectorizer.TFIDF;&lt;br/&gt;
 import org.apache.mahout.vectorizer.common.PartialVectorMerger;&lt;/p&gt;

&lt;p&gt;@@ -106,7 +109,8 @@ public class TFIDFPartialVectorReducer extends&lt;br/&gt;
     sequentialAccess = conf.getBoolean(PartialVectorMerger.SEQUENTIAL_ACCESS, false);&lt;br/&gt;
     namedVector = conf.getBoolean(PartialVectorMerger.NAMED_VECTOR, false);&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Path dictionaryFile = HadoopUtil.getSingleCachedFile(conf);&lt;br/&gt;
+    URI[] localFiles = DistributedCache.getCacheFiles(conf);&lt;br/&gt;
+    Path dictionaryFile = new DistributedCacheFileLocator().findByContainsInName(TFIDFConverter.FREQUENCY_FILE, localFiles);&lt;br/&gt;
     // key is feature, value is the document frequency&lt;br/&gt;
     for (Pair&amp;lt;IntWritable,LongWritable&amp;gt; record &lt;br/&gt;
          : new SequenceFileIterable&amp;lt;IntWritable,LongWritable&amp;gt;(dictionaryFile, true, conf)) {&lt;br/&gt;
diff --git a/mrlegacy/src/test/java/org/apache/mahout/util/DistributedCacheFileLocatorTest.java b/mrlegacy/src/test/java/org/apache/mahout/util/DistributedCacheFileLocatorTest.java&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..d9cd7d1
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/mrlegacy/src/test/java/org/apache/mahout/util/DistributedCacheFileLocatorTest.java&lt;br/&gt;
@@ -0,0 +1,38 @@&lt;br/&gt;
+package org.apache.mahout.util;&lt;br/&gt;
+&lt;br/&gt;
+import org.apache.hadoop.fs.Path;&lt;br/&gt;
+import org.junit.Test;&lt;br/&gt;
+&lt;br/&gt;
+import java.io.File;&lt;br/&gt;
+import java.net.URI;&lt;br/&gt;
+&lt;br/&gt;
+/**&lt;br/&gt;
+ * User: sergey.sheypak&lt;br/&gt;
+ * Date: 18.05.14&lt;br/&gt;
+ * Time: 16:50&lt;br/&gt;
+ */&lt;br/&gt;
+public class DistributedCacheFileLocatorTest extends org.junit.Assert {&lt;br/&gt;
+&lt;br/&gt;
+    public static final File FILE_I_WANT_TO_FIND = new File(&quot;file/i_want_to_find.txt&quot;);&lt;br/&gt;
+&lt;br/&gt;
+    @Test&lt;br/&gt;
+    public void testFindNothing()
{
+        Path nullPath = aSut().findByContainsInName(&quot;there is no such file&quot;, distributedCacheFiles());
+        assertNull(nullPath);
+    }
&lt;p&gt;+&lt;br/&gt;
+    @Test&lt;br/&gt;
+    public void testFindFile()&lt;/p&gt;
{
+        Path path = aSut().findByContainsInName(&quot;want_to_find&quot;, distributedCacheFiles());
+        assertNotNull(path);
+        assertEquals(FILE_I_WANT_TO_FIND.getName(), path.getName());
+    }
&lt;p&gt;+&lt;br/&gt;
+    private DistributedCacheFileLocator aSut()&lt;/p&gt;
{
+        return new DistributedCacheFileLocator();
+    }
&lt;p&gt;+&lt;br/&gt;
+    private URI[] distributedCacheFiles()&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+        return new URI[]{new File(&quot;/first/file&quot;).toURI(), new File(&quot;/second/file&quot;).toURI(), FILE_I_WANT_TO_FIND.toURI()};+    }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+}&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;&lt;br/&gt;
1.7.10.4&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14001141" author="ssc" created="Sun, 18 May 2014 18:35:35 +0100"  >&lt;p&gt;committed with a few cosmetic changes, thank you for the contribution!&lt;/p&gt;</comment>
                            <comment id="14001434" author="serega_sheypak" created="Mon, 19 May 2014 08:03:23 +0100"  >&lt;p&gt;Great, nice to hear it.&lt;br/&gt;
Looks like I have the  similar problem here. It appears during execution as oozie java action. I would inverstigate it and create separate ticket if I find the root cause of problem. ClusterClassificationDriver is much more difficult to read than previously patched modules. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
at org.apache.mahout.clustering.classify.ClusterClassificationDriver.classifyClusterMR(ClusterClassificationDriver.java:276)
	at org.apache.mahout.clustering.classify.ClusterClassificationDriver.run(ClusterClassificationDriver.java:135)
	at org.apache.mahout.clustering.canopy.CanopyDriver.clusterData(CanopyDriver.java:372)
	at org.apache.mahout.clustering.canopy.CanopyDriver.run(CanopyDriver.java:158)
	at org.apache.mahout.clustering.canopy.CanopyDriver.run(CanopyDriver.java:117)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)
	at org.apache.mahout.clustering.canopy.CanopyDriver.main(CanopyDriver.java:64)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14003334" author="hudson" created="Tue, 20 May 2014 15:13:29 +0100"  >&lt;p&gt;FAILURE: Integrated in Mahout-Quality #2610 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2610/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2610/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1498&quot; title=&quot;DistributedCache.setCacheFiles in DictionaryVectorizer overwrites jars pushed using oozie&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1498&quot;&gt;&lt;del&gt;MAHOUT-1498&lt;/del&gt;&lt;/a&gt; DistributedCache.setCacheFiles in DictionaryVectorizer overwrites jars pushed using oozie (ssc: rev 1595643)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/mrlegacy/src/main/java/org/apache/mahout/common/HadoopUtil.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/mrlegacy/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/mrlegacy/src/main/java/org/apache/mahout/vectorizer/term/TFPartialVectorReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/mrlegacy/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFPartialVectorReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/mrlegacy/src/test/java/org/apache/mahout/common/DistributedCacheFileLocationTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12645467" name="MAHOUT-1498.patch" size="14109" author="serega_sheypak" created="Sun, 18 May 2014 17:28:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 13 Apr 2014 11:28:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>383873</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hznzk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>384141</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>