<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:20:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-294/MAHOUT-294.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-294] Uniform API behavior for Jobs</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-294</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Update &amp;#8211; This issue is at this point open to track the mission to standardize, at least, on using one version of Hadoop&apos;s API. At the moment, it means using the .mapreduce.* classes instead of .mapred.* classes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12456393">MAHOUT-294</key>
            <summary>Uniform API behavior for Jobs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="robinanil">Robin Anil</reporter>
                        <labels>
                    </labels>
                <created>Tue, 16 Feb 2010 08:44:15 +0000</created>
                <updated>Tue, 31 Mar 2015 23:49:12 +0100</updated>
                            <resolved>Tue, 13 Sep 2011 10:07:40 +0100</resolved>
                                    <version>0.4</version>
                    <version>0.5</version>
                                    <fixVersion>0.6</fixVersion>
                                    <component>Classification</component>
                    <component>Clustering</component>
                    <component>Collaborative Filtering</component>
                    <component>Integration</component>
                    <component>Math</component>
                        <due>Fri, 29 Jul 2011 00:00:00 +0000</due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12836274" author="jake.mannix" created="Sat, 20 Feb 2010 22:30:35 +0000"  >&lt;p&gt;Have you checked out my patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-301&quot; title=&quot;Improve command-line shell script by allowing default properties files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-301&quot;&gt;&lt;del&gt;MAHOUT-301&lt;/del&gt;&lt;/a&gt; - it&apos;s related, but not exactly the same - it&apos;s the external external api, which will be even cleaner once this issue gets some progress.&lt;/p&gt;</comment>
                            <comment id="12868734" author="jeastman" created="Tue, 18 May 2010 17:56:36 +0100"  >&lt;p&gt;I&apos;ve cleaned up the clustering driver command processing by refactoring all of the options into the DefaultOptionCreator and standardizing option names, descriptions, required/optional and default values. I also updated all of the clustering .props files for &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-301&quot; title=&quot;Improve command-line shell script by allowing default properties files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-301&quot;&gt;&lt;del&gt;MAHOUT-301&lt;/del&gt;&lt;/a&gt; to include sections on required and optional parameters and default values. All .props files contain comments that can be activated by users editing the files.&lt;/p&gt;</comment>
                            <comment id="12868753" author="jeastman" created="Tue, 18 May 2010 18:27:56 +0100"  >&lt;p&gt;Removing this from clustering project as all drivers now have consistent options&lt;/p&gt;</comment>
                            <comment id="12870347" author="robinanil" created="Sun, 23 May 2010 02:30:19 +0100"  >&lt;p&gt;Adding clustering back. Saw some bugs&lt;/p&gt;

&lt;p&gt;KMeans put the -k parameter as required=true. So It was overwriting centroids even when not specified, instead of reading it&lt;br/&gt;
LDA: Topic smoothing was changed to default of -1 (it should be 50/numTopics)&lt;/p&gt;</comment>
                            <comment id="12888439" author="jeastman" created="Wed, 14 Jul 2010 18:08:35 +0100"  >&lt;p&gt;The bug reported above has been fixed (topicSmoothing was doing the right thing in the driver) and I&apos;ve been looking at reparenting the clustering drivers to AbstractJob. The primary benefits I can see are the consolidation of input and output command options and the parseArguments() method which is useful for most - but not all - map/reduce job configuration steps. The class requires an instance run(String[]) method (Tool requires it actually) and this will require some refactoring of the clustering drivers since they all have a static runJob() method that accepts Java arguments and is called by main(). Also, using addOption() will require backing out recent changes in DefaultOptionsCreator or at least refactoring that too.&lt;/p&gt;

&lt;p&gt;It is interesting that the Tool interface comment uses both Configuration (hadoop 0.20.2) and JobConf (deprecated).&lt;/p&gt;

&lt;p&gt;Anyway, I&apos;m not sure this warrants all the effort. I&apos;m game but need a little more encouragement/benefits.&lt;/p&gt;</comment>
                            <comment id="12888442" author="tdunning" created="Wed, 14 Jul 2010 18:26:23 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Anyway, I&apos;m not sure this warrants all the effort. I&apos;m game but need a little more encouragement/benefits.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here is some generic encouragement.&lt;/p&gt;

&lt;p&gt;Right now, the only integration strategy we have for the machine learning side of the house is command line based.  Getting that to be consistent is really important for user understanding.  As such, what you are doing is almost more helpful than any single new algorithm.&lt;/p&gt;

&lt;p&gt;(does that help?)&lt;/p&gt;</comment>
                            <comment id="12888543" author="drew.farris" created="Wed, 14 Jul 2010 22:13:40 +0100"  >&lt;blockquote&gt;&lt;p&gt;Anyway, I&apos;m not sure this warrants all the effort. I&apos;m game but need a little more encouragement/benefits&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here&apos;s more. Also, more use cases for AbstractJob will help us work out the nits. When I was last working on it, I noticed that there was some frission between DefaultOptionsCreator and addOption(), I&apos;m very much interested to hear your thoughts on the subject Jeff.&lt;/p&gt;</comment>
                            <comment id="12888561" author="jeastman" created="Wed, 14 Jul 2010 22:52:08 +0100"  >&lt;p&gt;I&apos;ve seen the light and attached is a patch that goes most of the way towards being a good child of AbstractJob. It refactors the command parsing out of main() into run() and also refactors the guts out of static runJob() into non-static job() which does all the heavy lifting. Job() is also called from run() so the whole thing hangs together pretty well and none of the runJob clients were impacted.&lt;/p&gt;

&lt;p&gt;On the DefaultOptionsCreator, I did some constant extraction and inlined any methods that were called only by one other driver. The remaining options are shared and i used addOption(DefaultOptionsCreator.blahOption().create()) rather than exploding them to use the expanded addOption(...). I found a precedent for this in CollocDriver and it seemed like a lot of busy work to refactor all the usages of DefaultOptionsCreator so I did not do that.&lt;/p&gt;

&lt;p&gt;I also did not use AbstractJob.prepareJob() but left the individual conf and job initializations in place since they are working. There was also precedent for this. Clustering has several job steps (e.g. runClustering)  which do not use reducers and prepareJob doesn&apos;t work for them.&lt;/p&gt;

&lt;p&gt;In terms of feedback on the AbstractJob design, I find the need to create two constants unwieldy as in:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; NUM_CLUSTERS_OPTION = &lt;span class=&quot;code-quote&quot;&gt;&quot;numClusters&quot;&lt;/span&gt;;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; NUM_CLUSTERS_OPTION_KEY = &lt;span class=&quot;code-quote&quot;&gt;&quot;--&quot;&lt;/span&gt; + NUM_CLUSTERS_OPTION;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;since the options argument map is keyed by &quot;--&quot; prepended to the option&apos;s long name. My preference would be to omit that but I see the code is using Option.preferredName() which is not subject to modification.&lt;/p&gt;

&lt;p&gt;All the unit tests run but they don&apos;t really test the command line processing. The clustering tests use runJob() with java arguments instead. I admit to being a bit on the lazy side in terms of some possible refactoring but think this is pretty close to the target. &lt;/p&gt;</comment>
                            <comment id="12888602" author="jeastman" created="Thu, 15 Jul 2010 00:11:59 +0100"  >&lt;p&gt;Revised patch that fixes some problems uncovered by included unit tests that exercise some of the run() parsing functionality. Examples still need work to conform.&lt;/p&gt;</comment>
                            <comment id="12888877" author="jeastman" created="Thu, 15 Jul 2010 19:17:29 +0100"  >&lt;p&gt;r964507 committed major refactoring of the clustering application drivers and jobs to extend AbstractJob. Use of DefaultOptionCreator has standardized all shared command-line arguments. Revised unit tests excercise the driver run() method for each application. I&apos;m going to go out on a limb and declare that clustering is now consistent with this issue and am dropping it from the affected components list.&lt;/p&gt;</comment>
                            <comment id="12888882" author="hudson" created="Thu, 15 Jul 2010 19:29:39 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #137 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/137/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/137/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Refactored clustering jobs to subclass AbstractJob.&lt;/li&gt;
	&lt;li&gt;Added fuzzy k-means example to synthetic control examples&lt;/li&gt;
	&lt;li&gt;Added cluster dump to synthetic control examples&lt;/li&gt;
	&lt;li&gt;Fixed _log file access bug in ClusterDumper when run on Hadoop&lt;/li&gt;
	&lt;li&gt;all synthetic control examples run on Hadoop cluster&lt;/li&gt;
	&lt;li&gt;Fuzzy k-Means produces numerically odd-looking clusters&lt;/li&gt;
	&lt;li&gt;added unit tests of run() command line option for each clustering algorithm&lt;/li&gt;
	&lt;li&gt;all unit tests run&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12888906" author="hudson" created="Thu, 15 Jul 2010 21:22:50 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #138 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/138/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/138/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fixed serialization bug in FuzzyKMeansInfo that was not serializing the combinerState and led to inflated cluster centroid values&lt;/li&gt;
	&lt;li&gt;removed combiner TODO that indicates problem has been in trunk for some time&lt;/li&gt;
	&lt;li&gt;added a unit test testFuzzyKMeansInfoSerialization()&lt;/li&gt;
	&lt;li&gt;TestClusterDumper and SyntheticControl now produce reasonable-looking fuzzyK results&lt;/li&gt;
	&lt;li&gt;all unit tests run&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12888989" author="hudson" created="Fri, 16 Jul 2010 03:22:06 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #140 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/140/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/140/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;: Another bit of polishing to replace inlined option building sequences with multi-parameter addOption calls. All tests run&lt;/p&gt;</comment>
                            <comment id="12889190" author="jeastman" created="Fri, 16 Jul 2010 15:25:27 +0100"  >&lt;p&gt;Sigh. Adding clustering back as an affected component. This is a large issue across all of Mahout and further refactoring is needed in many areas. Testability of the command line option processing is complicated by the fact that run() bundles this in with running the job so the command line stuff cannot be tested in isolation. This makes testing all of the argument corner-cases tedious and unnecessarily time-consuming. I&apos;m going to look at factoring the options parsing out of run.&lt;/p&gt;</comment>
                            <comment id="12889199" author="drew.farris" created="Fri, 16 Jul 2010 15:47:00 +0100"  >&lt;p&gt;bq, Testability of the command line option processing is complicated by the fact that run() bundles this in with running the job so the command line stuff cannot be tested in isolation. This makes testing all of the argument corner-cases tedious and unnecessarily time-consuming. I&apos;m going to look at factoring the options parsing out of run. &lt;/p&gt;

&lt;p&gt;This will most definitely be a good thing to do. I&apos;ve always wondered if  more of the option processing can be pushed up to AbstractJob. Once the arguments hash is obtained it still seems that there is a lot of work to be done prior to launching each job&lt;/p&gt;</comment>
                            <comment id="12889240" author="jeastman" created="Fri, 16 Jul 2010 18:46:44 +0100"  >&lt;p&gt;Here&apos;s a stab at improving the testability of AbstractJob options parsing. It adds an argMap variable in AbstractJob and adds new getOption() and hasOption() methods which encapsulate the &quot;--&quot; prepending, avoiding additional constants. By factoring out ClusterDumper.addOptions() as a public method it allows unit testing of the command line processing without invoking the cluster dumper. We could require this in all subclasses by adding AbstractJob.run() and calling a new abstract addOptions() from it. That will have broad impact on all drivers and I have not done it in this patch.&lt;/p&gt;

&lt;p&gt;As a further step, one could imagine moving all of the common options from DefaultOptionCreator into AbstractJob. This would have all of the Mahout shared command line options in a single place; improving consistency.&lt;/p&gt;

&lt;p&gt;Comments on this approach are welcome. I&apos;m gone for the weekend.&lt;/p&gt;</comment>
                            <comment id="12889747" author="drew.farris" created="Mon, 19 Jul 2010 03:53:08 +0100"  >&lt;p&gt;The latest patch looks good to me. I updated CollocDriver to use the getOption/hasOption methods and it is nice to use the same constants for those that are used to define the option themselves.&lt;/p&gt;

&lt;p&gt;As far as DefaultOptionCreator is concerned, I agree it appears that it could be merged in, but I&apos;m uncertain where it&apos;s used outside of the latest AbstractJob work.&lt;/p&gt;</comment>
                            <comment id="12890003" author="hudson" created="Mon, 19 Jul 2010 21:22:48 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #144 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/144/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/144/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added argMap local to AbstractJob to allow option accessing abstraction&lt;/li&gt;
	&lt;li&gt;added hasOption(), getOption() and optionKey() to AbstractJob to encapsulate all &amp;#8211; prepending&lt;/li&gt;
	&lt;li&gt;revised all clustering components to use hasOption()/getOption()&lt;/li&gt;
	&lt;li&gt;added MahoutTestCase.optKey() to use optionKey() to encapsulate all &amp;#8211; prepending&lt;/li&gt;
	&lt;li&gt;decided not to continue with public addOptions() approach in earlier patch&lt;/li&gt;
	&lt;li&gt;removed all public OPTION_KEY constants in DefaultOptionsCreator but made&lt;br/&gt;
    respective OPTION constants public&lt;/li&gt;
	&lt;li&gt;revised all clustering tests to use optKey&lt;/li&gt;
	&lt;li&gt;made interClusterDensity, intraClusterDensity and separation() public in CDbwEvaluator&lt;/li&gt;
	&lt;li&gt;all unit tests run&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12891266" author="hudson" created="Thu, 22 Jul 2010 19:03:17 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #151 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/151/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/151/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="12891319" author="hudson" created="Thu, 22 Jul 2010 21:25:12 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #152 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/152/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/152/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added method=sequential|mapreduce argument to MeanShift, k-Means and FuzzyK to allow reference implementations to be exercised from the command line&lt;/li&gt;
	&lt;li&gt;added/updated unit tests to verify sequential implementations from command line&lt;/li&gt;
	&lt;li&gt;all tests run&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12892044" author="hudson" created="Sat, 24 Jul 2010 23:35:41 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #155 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/155/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/155/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;modified most DisplayClustering subclasses to use the new sequential method on drivers. (Not Dirichlet yet)&lt;/li&gt;
	&lt;li&gt;using file system to transmit Clusters required a rework since they were not serializing needed state&lt;/li&gt;
	&lt;li&gt;refactored Canopy, Cluster, SoftCluster and MeanShiftCanopy significantly, abstracting shared behavior to new AbstractCluster class.&lt;/li&gt;
	&lt;li&gt;deleted ClusterBase after moving static method to AbstractCluster&lt;/li&gt;
	&lt;li&gt;added ClusterObservations to replace KMeansInfo and FuzzyKMeansInfo&lt;/li&gt;
	&lt;li&gt;changed all cluster identifier formatting to include type indication&lt;/li&gt;
	&lt;li&gt;upshot of new clusters is improved posterior statistics for all with radius() now returning stdDev(), a vector&lt;/li&gt;
	&lt;li&gt;new radius() used in Display examples to show elliptical clusters&lt;/li&gt;
	&lt;li&gt;adjusted unit tests and all pass&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;probably should have made a new JIRA for some of this&lt;/p&gt;</comment>
                            <comment id="12908878" author="hudson" created="Mon, 13 Sep 2010 18:47:04 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #274 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/274/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/274/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;: Factored a run(...) method out of EigenVerificationJob.run([]) so it can be called from TestClusterDumper. Made a few of its other methods private that were never used outside. All tests run&lt;/p&gt;</comment>
                            <comment id="12909380" author="hudson" created="Tue, 14 Sep 2010 19:51:21 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #276 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/276/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/276/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;: Added arguments to the DistributedLanczosSolver CLI so that&lt;br/&gt;
it can optionally launch the EigenVerificationJob. Added a new run() method with&lt;br/&gt;
additional arguments needed by EVJ. Added new unit tests of the CLI and adjusted&lt;br/&gt;
some of the cluster dumper tests to use the new run method. All tests run.&lt;/p&gt;

&lt;p&gt;NOTE: this patch changes the semantics of the DLS --output argument: Formerly&lt;br/&gt;
it was the path to the output (raw) eigenvectors file. Now it is a path to an output&lt;br/&gt;
directory in which a rawEigenvectors file will be written. If the EVJ is also specified,&lt;br/&gt;
then the output directory will contain a cleanEigenvectors file in addition.&lt;/p&gt;</comment>
                            <comment id="12914955" author="srowen" created="Sun, 26 Sep 2010 11:02:34 +0100"  >&lt;p&gt;There is plenty of progress here, though much code still uses old Hadoop APIs and specialized parameters. There is enough work left to do that it must be for 0.5.&lt;/p&gt;</comment>
                            <comment id="13018150" author="srowen" created="Sun, 10 Apr 2011 22:15:16 +0100"  >&lt;p&gt;I think this over-arching issue to try to get off the old Hadoop APIs remains important but must get kicked down the road a bit. I think it must block 1.0 however. We do need to understand how the existing old code will finally be updated.&lt;/p&gt;</comment>
                            <comment id="13103475" author="srowen" created="Tue, 13 Sep 2011 10:07:40 +0100"  >&lt;p&gt;I kinda give up on this. I don&apos;t see efforts to clean out the remaining usages of the old Hadoop APIs. It is probably just how it is going to be for that code until it&apos;s deleted.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12456881">MAHOUT-301</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12449501" name="MAHOUT-294.patch" size="120408" author="jeastman" created="Thu, 15 Jul 2010 00:11:59 +0100"/>
                            <attachment id="12449491" name="MAHOUT-294.patch" size="108585" author="jeastman" created="Wed, 14 Jul 2010 22:52:08 +0100"/>
                            <attachment id="12449685" name="MAHOUT-294a.patch" size="31365" author="jeastman" created="Fri, 16 Jul 2010 18:46:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Feb 2010 22:30:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9771</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy607:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23124</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>