<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:26:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-301/MAHOUT-301.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-301] Improve command-line shell script by allowing default properties files</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-301</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Snippet from javadoc gives the idea:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * General-purpose driver class &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Mahout programs.  Utilizes org.apache.hadoop.util.ProgramDriver to run
 * main methods of other classes, but first loads up &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; properties from a properties file.
 *
 * Usage: run on Hadoop like so:
 *
 * $HADOOP_HOME/bin/hadoop -jar path/to/job org.apache.mahout.driver.MahoutDriver [classes.props file] shortJobName \
 *   [&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.props file &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; class] [over-ride options, all specified in &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; form: --input, --jarFile, etc]
 *
 * TODO: set the Main-&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt; to just be MahoutDriver, so that &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; option isn&apos;t needed?
 *
 * (note: using the current shell scipt, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; could be modified to be just 
 * $MAHOUT_HOME/bin/mahout [classes.props file] shortJobName [&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.props file] [over-ride options]
 * )
 *
 * Works like &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;: by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, the file &lt;span class=&quot;code-quote&quot;&gt;&quot;core/src/main/resources/driver.classes.prop&quot;&lt;/span&gt; is loaded, which
 * defines a mapping between &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; names like &lt;span class=&quot;code-quote&quot;&gt;&quot;VectorDumper&quot;&lt;/span&gt; and fully qualified class names.  This file may
 * instead be overridden on the command line by having the first argument be some string of the form *classes.props.
 *
 * The next argument to the Driver is supposed to be the &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; name of the class to be run (as defined in the
 * driver.classes.props file).  After &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the next argument ends in &lt;span class=&quot;code-quote&quot;&gt;&quot;.props&quot;&lt;/span&gt; / &lt;span class=&quot;code-quote&quot;&gt;&quot;.properties&quot;&lt;/span&gt;, it is taken to
 * be the file to use as the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; properties file &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; execution, and key-value pairs are built up from that:
 * &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the file contains
 *
 * input=/path/to/my/input
 * output=/path/to/my/output
 *
 * Then the class which will be run will have it&apos;s main called with
 *
 *   main(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;code-quote&quot;&gt;&quot;--input&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/path/to/my/input&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;--output&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/path/to/my/output&quot;&lt;/span&gt; });
 *
 * After all the &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt; properties are loaded from the file, any further command-line arguments are taken in,
 * and over-ride the defaults.
 */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Could be cleaned up, as it&apos;s kinda ugly with the whole &quot;file named in .props&quot;, but gives the idea.  Really helps cut down on repetitive long command lines, lets defaults be put props files instead of locked into the code also.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12456881">MAHOUT-301</key>
            <summary>Improve command-line shell script by allowing default properties files</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jake.mannix">Jake Mannix</assignee>
                                    <reporter username="jake.mannix">Jake Mannix</reporter>
                        <labels>
                    </labels>
                <created>Sat, 20 Feb 2010 07:15:06 +0000</created>
                <updated>Sat, 21 May 2011 04:24:14 +0100</updated>
                            <resolved>Tue, 2 Mar 2010 18:11:11 +0000</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.3</fixVersion>
                                    <component>Integration</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12836209" author="drew.farris" created="Sat, 20 Feb 2010 17:26:34 +0000"  >&lt;p&gt;This is pretty nice, it gets to the point where relying on shell-history or ad-hoc mechanisms to manage command-lines kills me and this is a nice solution.&lt;/p&gt;

&lt;p&gt;I&apos;ve quickly skimmed the patch but I haven&apos;t tried it out. I see the TODO in there regarding short vs. long arguments. Do you have any thoughts on how to support single-dask arguments? Things the arguments supported by the &lt;a href=&quot;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/util/GenericOptionsParser.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;GenericOptionsParser&lt;/a&gt; could be set in the properties file too.&lt;/p&gt;
</comment>
                            <comment id="12836231" author="jake.mannix" created="Sat, 20 Feb 2010 19:07:07 +0000"  >&lt;p&gt;The TODO refers to the issue that I think there, but am not sure: what does GenericOptionsParser do if you have a command line input like this:&lt;/p&gt;

&lt;p&gt;programName --input foo.txt -i bar.txt &lt;/p&gt;

&lt;p&gt;where --input is the long argument name for -i as short name?  Which one wins?  Is it deterministic?  &lt;/p&gt;</comment>
                            <comment id="12836247" author="tdunning" created="Sat, 20 Feb 2010 20:02:29 +0000"  >
&lt;p&gt;THis also helps non command line usage, actually.  I can imagine a workflow solution where setting all parameters on every step get onerous.&lt;/p&gt;</comment>
                            <comment id="12836268" author="drew.farris" created="Sat, 20 Feb 2010 21:54:21 +0000"  >{blockquote}&lt;br/&gt;
What does GenericOptionsParser do if you have a command line input like this:&lt;br/&gt;
&lt;br/&gt;
programName --input foo.txt -i bar.txt&lt;br/&gt;
&lt;br/&gt;
where --input is the long argument name for -i as short name? Which one wins? Is it deterministic? {blockquote}

&lt;p&gt;In most cases it&apos;s really depends on the implementation, sometimes GenericOptiosnParser isn&apos;t even being used. In Mahout&apos;s case it&apos;s likely to be commons-cli2  that&apos;s actually doing the parsing, and I don&apos;t know how it would behave in this case. I&apos;ll take a look.&lt;/p&gt;

&lt;p&gt;GenericOptionsParser simply  handles things like -conf and -Dprop=value that control hadoop configurations, job settings and the like, and then hands back the rest to the caller.  In many cases in the mahout , GenericOptionsParser isn&apos;t used at all which reduces the control one has over a job&apos;s behavior.  iirc, Sean and Robin have made some progress towards eliminating these cases with the AbstractJob class. &lt;/p&gt;</comment>
                            <comment id="12836271" author="jake.mannix" created="Sat, 20 Feb 2010 22:17:04 +0000"  >&lt;p&gt;So this current patch will totally take -conf / -Dprop=value type stuff, and pass it directly on into the program in the usual way, with the only difference being that these arguments could also be in a properties file, as long as their using the exact same form, which would make ugly props files as is:&lt;/p&gt;

&lt;p&gt;if you wanted to not have to type:&lt;/p&gt;

&lt;p&gt;  $MAHOUT_HOME/bin/mahout myClassShortName -DmyProp=value&lt;/p&gt;

&lt;p&gt;You would could currently need to have, in your props file:&lt;/p&gt;

&lt;p&gt;DmyProp = value&lt;/p&gt;

&lt;p&gt;which looks kinda silly, but would work.  Oh wait, no it wouldn&apos;t, it would end up with a command line which would do &quot; -DmyProp value&quot; not &quot;-DmyProp=value&quot;.  To get the latter, we&apos;d need an even uglier thing with the current patch:&lt;/p&gt;

&lt;p&gt;&quot;DmyProp=value&quot;=&lt;/p&gt;

&lt;p&gt;which would get interpolated into -DmyProp=value on the internal command line.  Super ugly.&lt;/p&gt;

&lt;p&gt;I&apos;ve got a modified version of this I can upload in a bit which takes care of the short-name/long-name arguments thing by a bit of a kludge, with props files which would look like this:&lt;/p&gt;

&lt;p&gt;i | input = foo/path&lt;/p&gt;

&lt;p&gt;which is to be interpreted as: if on the command line, the user say &quot;&lt;del&gt;i bar/path&quot; OR &quot;&lt;/del&gt;&lt;del&gt;input baz/path&quot;, they override the &quot;foo/path&quot; in the props file.  If the line in the props file has no &quot;|&quot; separating two options, it&apos;s assumed to be prepended with &quot;&lt;/del&gt;&quot;.  &lt;/p&gt;

&lt;p&gt;Still doesn&apos;t remove the ugliness of -Dprop=value though. Not sure how is best to handle that one.  What kind of props file syntax would tell it &quot;take these key-value pairs and do &apos;-key value&quot; and do these other ones as &apos;-Dkey=value&apos;&quot;?  I guess just having the &apos;D&apos; there would be a good signal?   It could then just take&lt;/p&gt;

&lt;p&gt;i | input = foo/path&lt;br/&gt;
DmyProp = propValue&lt;/p&gt;

&lt;p&gt;and translate that into a command line like: progName -i foo/path -DmyProp=myValue &lt;/p&gt;

&lt;p&gt;That would work and be not completely horribly ugly.  Not great though.&lt;/p&gt;</comment>
                            <comment id="12836278" author="robinanil" created="Sat, 20 Feb 2010 23:32:23 +0000"  >&lt;p&gt;Looks great. We parallely need to convert all mainClasses  extending AbstractJob and cleanup the stuff there at &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-294&quot; title=&quot;Uniform API behavior for Jobs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-294&quot;&gt;&lt;del&gt;MAHOUT-294&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12836326" author="jake.mannix" created="Sun, 21 Feb 2010 06:01:14 +0000"  >&lt;p&gt;Better version.  Javadocs updated in the patch to reflect the way it works:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * General-purpose driver class &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Mahout programs.  Utilizes org.apache.hadoop.util.ProgramDriver to run
 * main methods of other classes, but first loads up &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; properties from a properties file.
 *
 * Usage: run on Hadoop like so:
 *
 * $HADOOP_HOME/bin/hadoop -jar path/to/job org.apache.mahout.driver.MahoutDriver \
 *   [--classesFile|-cf &amp;lt;file&amp;gt;] [--defaultsFile|-df &amp;lt;file&amp;gt;] shortJobName [over-ride opts]
 *
 * or &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; local running:
 *
 * $MAHOUT_HOME/bin/mahout run [--classesFile|-cf &amp;lt;file&amp;gt;] [--defaultsFile|-df &amp;lt;file&amp;gt;] shortJobName [over-ride ops]
 *
 * Works like &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;: by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, the file &lt;span class=&quot;code-quote&quot;&gt;&quot;core/src/main/resources/driver.classes.props&quot;&lt;/span&gt; is loaded, which
 * defines a mapping between &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; names like &lt;span class=&quot;code-quote&quot;&gt;&quot;VectorDumper&quot;&lt;/span&gt; and fully qualified class names.  This file may
 * instead be overridden on the command line by specifying --classesFile|-cf &amp;lt;classesFile&amp;gt;.
 *
 * The &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; properties to be applied to the program run is pulled out of, by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;,
 * &lt;span class=&quot;code-quote&quot;&gt;&quot;core/src/main/resources/&amp;lt;shortJobName&amp;gt;.props&quot;&lt;/span&gt;, unless --defaultsFile|-df &amp;lt;file&amp;gt; is specified by the cmdline.
 * The format of the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; properties files is as follows:
 *
 * i|input = /path/to/my/input
 * o|output = /path/to/my/output
 * m|jarFile = /path/to/jarFile
 * # etc - each line is shortArg|longArg = value
 *
 * The next argument to the Driver is supposed to be the &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; name of the class to be run (as defined in the
 * driver.classes.props file).
 *
 * Then the class which will be run will have it&apos;s main called with
 *
 *   main(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;code-quote&quot;&gt;&quot;--input&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/path/to/my/input&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;--output&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/path/to/my/output&quot;&lt;/span&gt; });
 *
 * After all the &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt; properties are loaded from the file, any further command-line arguments are taken in,
 * and over-ride the defaults.
 *
 * So &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; your core/src/main/resources/driver.classes.props looks like so:
 *
 * org.apache.mahout.utils.vectors.VectorDumper = &lt;span class=&quot;code-quote&quot;&gt;&quot;vecDump&quot;&lt;/span&gt;
 *
 * and you have a file core/src/main/resources/vecDump.props which looks like
 *
 * o|output = /tmp/vectorOut
 * s|seqFile = /my/vector/sequenceFile
 *
 * And you execute the command-line:
 *
 * $MAHOUT_HOME/bin/mahout run vecDump -s /my/otherVector/sequenceFile
 *
 * Then org.apache.mahout.utils.vectors.VectorDumper.main() will be called with arguments:
 *   {&lt;span class=&quot;code-quote&quot;&gt;&quot;--output&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/vectorOut&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;-s&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/my/otherVector/sequenceFile&quot;&lt;/span&gt;}
 */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12836328" author="jake.mannix" created="Sun, 21 Feb 2010 06:06:19 +0000"  >&lt;p&gt;This patch modifies the mahout shell script to add the &quot;run&quot; command, which invokes this driver class. &lt;/p&gt;

&lt;p&gt;It also more nicely takes shortName definitions from either core/src/main/resources/driver.classes.props or the &quot;-cf configFile&quot; location, and runs the class specified by shortName using props specified in core/src/main/resources/shortName.props or whatever is &quot;-df defaultpropsFile&quot;.&lt;/p&gt;

&lt;p&gt;Also takes options in the file of the form &quot;DsomeOpt = optionVal&quot; and passes those into the program as &quot;-DsomeOpt=optionVal&quot; as well.&lt;/p&gt;

&lt;p&gt;Not sure how well it works on hadoop yet.  But comand line seems to work for the one class I&apos;ve got a props file for (TestClassifier). &lt;/p&gt;</comment>
                            <comment id="12836950" author="jake.mannix" created="Mon, 22 Feb 2010 22:19:09 +0000"  >&lt;p&gt;Fancy new version.  Run as follows:&lt;/p&gt;

&lt;p&gt;Set your $MAHOUT_CONF_DIR to a directory where you will have your own overrides (or, if unset, defaults to ./core/src/main/resources).&lt;/p&gt;

&lt;p&gt;In that directory, there should be a file called &quot;driver.classes.props&quot; with contents like so:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.mahout.utils.vectors.VectorDumper=&lt;span class=&quot;code-quote&quot;&gt;&quot;vecDump&quot;&lt;/span&gt;
org.apache.mahout.utils.clustering.ClusterDumper=&lt;span class=&quot;code-quote&quot;&gt;&quot;clusty&quot;&lt;/span&gt;
org.apache.mahout.utils.SequenceFileDumper=&lt;span class=&quot;code-quote&quot;&gt;&quot;seqDump&quot;&lt;/span&gt;
org.apache.mahout.clustering.kmeans.KMeansDriver=&lt;span class=&quot;code-quote&quot;&gt;&quot;kmeans&quot;&lt;/span&gt;
org.apache.mahout.clustering.canopy.CanopyDriver=&lt;span class=&quot;code-quote&quot;&gt;&quot;canopy&quot;&lt;/span&gt;
org.apache.mahout.utils.vectors.lucene.Driver=&lt;span class=&quot;code-quote&quot;&gt;&quot;luceneVecs&quot;&lt;/span&gt;
org.apache.mahout.text.SequenceFilesFromDirectory=&lt;span class=&quot;code-quote&quot;&gt;&quot;dirToSeq&quot;&lt;/span&gt;
org.apache.mahout.text.WikipediaToSequenceFile=&lt;span class=&quot;code-quote&quot;&gt;&quot;wikToSeq&quot;&lt;/span&gt;
org.apache.mahout.classifier.bayes.TestClassifier=&lt;span class=&quot;code-quote&quot;&gt;&quot;TestClassifier&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Etc.  The right hand side can be whatever you want, &lt;b&gt;but&lt;/b&gt; whatever it is determines where MahoutDriver will look for a default properties file.  For example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$MAHOUT_HOME/bin/mahout run wikToSeq
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;would look for the file $MAHOUT_CONF_DIR/wikToSeq.props and in that file, take each line and transform it into command line arguments for WikipediaToSequenceFile, using the logic as follows:&lt;/p&gt;

&lt;p&gt;on each line of wikToSeq.props, there is a key-value pair:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
i | input = my/wiki/input/path
o | output = my/output/path
c | categories = my/wikiCategories/file
e | exactMatch = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
all = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The part of the key before the vertical bar is the short-name of the argument to pass, and the second part is the long name.  If there is only one, they are assumed to be the same.&lt;/p&gt;

&lt;p&gt;You can also pass Hadoop options here, like &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Djava.io.tmpdir = /&lt;span class=&quot;code-keyword&quot;&gt;var&lt;/span&gt;/tmp/mahout 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which would lead to the program being called with &quot;-Djava.io.tmpdir=/var/tmp/mahout&quot; passed in.&lt;/p&gt;</comment>
                            <comment id="12836952" author="jake.mannix" created="Mon, 22 Feb 2010 22:22:41 +0000"  >&lt;p&gt;Oh, I forgot to finish my sentence which began &quot;run as follows...&quot;&lt;/p&gt;

&lt;p&gt;Once youv&apos;e got default property files in your $MAHOUT_CONF_DIR, you can run like so:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$MAHOUT_HOME/bin/mahout run wikToSeq
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and that&apos;s it.  If you want to override the options in your wikToSeq.props file, just pass them in on that same command line above, and they override as desired.&lt;/p&gt;

&lt;p&gt;If this can be tested out and debugged, this patch is ready for committing, and significantly improves the command line experience.&lt;/p&gt;</comment>
                            <comment id="12836962" author="robinanil" created="Mon, 22 Feb 2010 22:31:25 +0000"  >&lt;p&gt;The help comments are missing from the mahout/bin script. Scroll up that file and you will see a pretty printed help string. Just add the Mahout driver description and possibly a wikilink there. Otherwise looks good to commit.  I have checked the full functionality yet. If anyone else want to take a look, please do quickly&lt;/p&gt;</comment>
                            <comment id="12837070" author="drew.farris" created="Tue, 23 Feb 2010 04:08:43 +0000"  >&lt;p&gt;Did some testing, here&apos;s a patch to clean some of these things up + a couple questions: &lt;/p&gt;

&lt;p&gt;Could we load the default driver.classes.props from the classpath? If it was loaded that way the default would work regardless of where the mahout script is run from (it currently only works if ./bin/mahout is run, not ./mahout for example) and regardless of whether we&apos;re running from a binary release or the dev environment. (included in patch)&lt;/p&gt;

&lt;p&gt;Something else I noticed is that the &apos;mahout&apos; script doesn&apos;t add the classes in $MAHOUT_HOME/lib/*.jar to the classpath. This breakes the binary release in that it can&apos;t run anything, e.g:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./mahout vectordump
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.NoClassDefFoundError: org/apache/commons/cli2/OptionException
Caused by: java.lang.ClassNotFoundException: org.apache.commons.cli2.OptionException
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(fixed in patch)&lt;/p&gt;

&lt;p&gt;Using -core in the context of a dev build should work properly, but leaving out -core will cause the script to error unless run in the context of a release &amp;#8211; this is the way it should work, right?&lt;/p&gt;

&lt;p&gt;Also wondering what the purpose of adding the job jars to the classpath is? (removed in patch)&lt;/p&gt;

&lt;p&gt;Also added a help message for the &apos;run&apos; argument.&lt;/p&gt;

&lt;p&gt;Does executing &apos;./mahout run --help&apos; hang for anyone else or is it something specific to my environment? (didn&apos;t track this one down)&lt;/p&gt;</comment>
                            <comment id="12837120" author="robinanil" created="Tue, 23 Feb 2010 07:17:17 +0000"  >&lt;p&gt;including the job jar is much cleaner than adding all deps. Plus there is nothing more to configure to execute it on top of hadoop..&lt;/p&gt;

&lt;p&gt;BTW. How is hadoop execution done using shell script ? i.e&lt;/p&gt;

&lt;p&gt;hadoop jar mahout-examples-0.3.job o.a.m...DictionaryVectorizer --input ..... args&lt;/p&gt;</comment>
                            <comment id="12837234" author="drew.farris" created="Tue, 23 Feb 2010 13:38:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;including the job jar is much cleaner than adding all deps. Plus there is nothing more to configure to execute it on top of hadoop.. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The job files work fine with &apos;hadoop jar&apos;, but putting the job files in the classspath will not automatically include the dependencies they contain (e.g commons-cli2) on the classpath: the dependencies need to be added separately (see the ClassNotFoundException case described above)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;BTW. How is hadoop execution done using shell script ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If the HADOOP_CONF_DIR is set, it should be picked up by the jobs, but I don&apos;t think that means jar/jobfile execution works properly. I suspect this needs modifications to make that possible.&lt;/p&gt;</comment>
                            <comment id="12837243" author="drew.farris" created="Tue, 23 Feb 2010 14:04:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;BTW. How is hadoop execution done using shell script ? i.e&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It looks like something like the following would do the trick&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/bin/mahout -core org.apache.hadoop.util.RunJar /path/to/mahout-examples-0.3-SNAPSHOT.job org.apache.mahout.driver.MahoutDriver TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;we could probably provide &apos;runjob&apos; case that appends &apos;org.apache.hadoop.util.RunJar examples/target/mahout-examples-0.3-SNAPSHOT.job org.apache.mahout.driver.MahoutDriver&apos;, but perhaps this could be used in every case that &apos;run&apos; is called?&lt;/p&gt;
</comment>
                            <comment id="12837345" author="jake.mannix" created="Tue, 23 Feb 2010 17:54:30 +0000"  >&lt;p&gt;Hey Drew, thanks for looking at this.  Problems you saw are probably what are known as &quot;bugs&quot;. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Did some testing, here&apos;s a patch to clean some of these things up + a couple questions:&lt;br/&gt;
Could we load the default driver.classes.props from the classpath? If it was loaded that way the default would work regardless of where the mahout script is run from (it currently only works if ./bin/mahout is run, not ./mahout for example) and regardless of whether we&apos;re running from a binary release or the dev environment. (included in patch)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;YES!  We should indeed load from classpath.  My most recent version of this patch (which isn&apos;t posted, because it conflicts with yours, I&apos;m trying to resolve that now) changes it so that you just supply a single directory in which driver.classes.props and the shortNames.props files are located.&lt;/p&gt;

&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;p&gt;Something else I noticed is that the &apos;mahout&apos; script doesn&apos;t add the classes in $MAHOUT_HOME/lib/*.jar to the classpath. This breakes the binary release in that it can&apos;t run anything, e.g:&lt;/p&gt;

&lt;p&gt;./mahout vectordump&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: org/apache/commons/cli2/OptionException&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: org.apache.commons.cli2.OptionException&lt;br/&gt;
(fixed in patch)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

This wasn&apos;t a problem with my patch, right?  That was an issue of the mahout script in trunk itself?  

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Using -core in the context of a dev build should work properly, but leaving out -core will cause the script to error unless run in the context of a release - this is the way it should work, right?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

What is the -core option &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;?  I&apos;ve never used it, how does it work?

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Also added a help message for the &apos;run&apos; argument.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

Where did you add that?

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Does executing &apos;./mahout run --help&apos; hang for anyone else or is it something specific to my environment? (didn&apos;t track this one down)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The --help option I didn&apos;t have in there, you added it, do you know where it&apos;s hanging?&lt;/p&gt;</comment>
                            <comment id="12837351" author="jake.mannix" created="Tue, 23 Feb 2010 18:08:33 +0000"  >&lt;p&gt;Ok, Drew, got your patch in diff mode against mine finally.  &lt;/p&gt;

&lt;p&gt;So you already added the ability to load via classpath, right?  If we merge that way of thinking with what I&apos;m currently working on (having a configurable &quot;MAHOUT_CONF_DIR&quot; which is used for all these props files), we could just have the mahout shell script just add MAHOUT_CONF_DIR to the classpath (the way you already have it adding the hardwired core/src/main/resources directory) and then it would work that way.&lt;/p&gt;

&lt;p&gt;New patch merging yours with mine forthcoming.&lt;/p&gt;</comment>
                            <comment id="12837376" author="drew.farris" created="Tue, 23 Feb 2010 18:42:48 +0000"  >&lt;blockquote&gt;
&lt;p&gt;This wasn&apos;t a problem with my patch, right?  That was an issue of the mahout script in trunk itself?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes it was a problem with the script in trunk. I believe this was due to the fact that the job files were on the classpath instead of all of the dependency jars. Adding the job files to the classpath does not add the dependency jars they contain to the classpath as well. So, no you didn&apos;t add this, but it should be fixed (and is in the patch)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is the -core option for?  I&apos;ve never used it, how does it work?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;when you&apos;re running bin/mahout in the context of a build the -core option is used to tell it to use the build classpath instead of the classpath used for a binary release. This just follows the pattern established (by Doug?) in the hadoop and nutch launch scripts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also added a help message for the &apos;run&apos; argument.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;near line 72 in bin/mahout:&lt;br/&gt;
(this is different from the --help question I had)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  echo &lt;span class=&quot;code-quote&quot;&gt;&quot;  seq2sparse            generate sparse vectors from a sequence file&quot;&lt;/span&gt;
  echo &lt;span class=&quot;code-quote&quot;&gt;&quot;  vectordump            dump vectors from a sequence file&quot;&lt;/span&gt;
  echo &lt;span class=&quot;code-quote&quot;&gt;&quot;  run                   run mahout tasks using the MahoutDriver, see: http:&lt;span class=&quot;code-comment&quot;&gt;//cwiki.apache.org/MAHOUT/mahoutdriver.html&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;So you already added the ability to load via classpath, right? If we merge that way of thinking with what I&apos;m currently working on (having a configurable &quot;MAHOUT_CONF_DIR&quot; which is used for all these props files), we could just have the mahout shell script just add MAHOUT_CONF_DIR to the classpath (the way you already have it adding the hardwired core/src/main/resources directory) and then it would work that way.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep, that should do it, as long as MAHOUT_CONF_DIR appears before src/main/resources, we should be good to go. It should be added outside of the section of the script that determines if -core has been specified on the command-line.&lt;/p&gt;
</comment>
                            <comment id="12837428" author="jake.mannix" created="Tue, 23 Feb 2010 20:22:42 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Something else I noticed is that the &apos;mahout&apos; script doesn&apos;t add the classes in $MAHOUT_HOME/lib/*.jar to the classpath. This breakes the binary release in that it can&apos;t run anything, e.g:&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Also wondering what the purpose of adding the job jars to the classpath is? (removed in patch)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When I run locally now, not using -core, I get this failure:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/bin/mahout vectordump -s wiki-sparse-vectors-out/vectors/part-00000
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.NoClassDefFoundError: org/apache/mahout/utils/vectors/VectorDumper
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This appears to be because your patch has CLASSPATH set to add on things like $MAHOUT_HOME/mahout-*.jar, which doesn&apos;t exist after I&apos;ve done &quot;mvn install&quot;.  Is there another maven target I need to use to generate the release jars in $MAHOUT_HOME?&lt;/p&gt;</comment>
                            <comment id="12837434" author="drew.farris" created="Tue, 23 Feb 2010 20:28:38 +0000"  >&lt;p&gt;Jake, the basic idea is that you would always use -core when executing from within a build, but you would not use core when executing in the context of a binary release.&lt;/p&gt;

&lt;p&gt;The binary release, built using mvn -Prelease, lands in target/mahout-0.3-SNAPSHOT.tar.gz, untar that and try running bin/mahout from the directory that&apos;s created and that should work fine without -core&lt;/p&gt;</comment>
                            <comment id="12837440" author="jake.mannix" created="Tue, 23 Feb 2010 20:54:57 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Jake, the basic idea is that you would always use -core when executing from within a build, but you would not use core when executing in the context of a binary release.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm... ok.  I&apos;m a little reticent about running -core when testing, because I&apos;m not really testing what the release run will be like - I like the idea of having a single set of dependencies (jars, not classes directories) which are used locally, and the .job when hitting a remote hadoop cluster.  Maybe I&apos;m just not familiar with the -core option and it&apos;s use.  &lt;/p&gt;

&lt;p&gt;So far, I&apos;ve always run by the process of &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;make code/config changes&lt;/li&gt;
	&lt;li&gt;run mvn clean install (sometimes with -DskipTests if I&apos;m doing rapid iterations)&lt;/li&gt;
	&lt;li&gt;run &quot;mahout &amp;lt;comand&amp;gt; args&quot; OR&lt;/li&gt;
	&lt;li&gt;hadoop jar examples/target/mahout-examples-
{version}
&lt;p&gt;.job &amp;lt;classname&amp;gt; args&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The last step, as you&apos;ve noted, is because I&apos;m not sure that the script actually properly lets HADOOP_CONF_DIR properly get passed through the mahout shell script to actually running on the hadoop cluster, but maybe that&apos;s just a config issue in my case?  Also means that in fact the default properties idea still doesn&apos;t work on hadoop, unless the default properties files are pushed to the classpath.&lt;/p&gt;

&lt;p&gt;Maybe a kludgey way to do it would be for the script to grab the properties files from the MAHOUT_CONF_DIR, unzip the release job jar, push them into it, and re-jar it back up and then give it to hadoop, and now those files will be available on the classpath of the running job on the remote cluster? &lt;/p&gt;

&lt;p&gt;What is the right way run a job with some additional (runtime) files added to the job&apos;s classpath?  Is there some cmdline arg to &quot;hadoop&quot; that I&apos;m forgetting?&lt;/p&gt;</comment>
                            <comment id="12837448" author="drew.farris" created="Tue, 23 Feb 2010 21:12:36 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Hmm... ok. I&apos;m a little reticent about running -core when testing, because I&apos;m not really testing what the release run will be like - I like the idea of having a single set of dependencies (jars, not classes directories) which are used locally, and the .job when hitting a remote hadoop cluster. Maybe I&apos;m just not familiar with the -core option and it&apos;s use.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, I see where you&apos;re coming from, so without core, you&apos;re suggesting that mahout pick up the jar files in the target directories if they exist? I think it is fine to modify the non-core classpath to include these, they won&apos;t be present in the release build anyway.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The last step, as you&apos;ve noted, is because I&apos;m not sure that the script actually properly lets HADOOP_CONF_DIR properly get passed through the mahout shell script to actually running on the hadoop cluster, but maybe that&apos;s just a config issue in my case? Also means that in fact the default properties idea still doesn&apos;t work on hadoop, unless the default properties files are pushed to the classpath.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Are any of the default properties files used beyond the MahoutDriver, which executes locally and sets up the job? Do these files need to be distributed to the rest of the cluster? As noted above, I think the proper way to run MahoutDriver in the context of a distributed job is to do something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./bin/mahout org.apache.hadoop.util.RunJar /path/to/mahout-examples-0.3-SNAPSHOT.job org.apache.mahout.driver.MahoutDriver TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I suspect we could easilly modify the mahout script and shorten this to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./bin/mahout runjob TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can look at this a little closer tonight, so if you have an updated patch for me to work on/test in a few hours, definitely post it. I&apos;d be happy to make any changes you&apos;re interested in.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is the right way run a job with some additional (runtime) files added to the job&apos;s classpath? Is there some cmdline arg to &quot;hadoop&quot; that I&apos;m forgetting?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;FWIW, &lt;span class=&quot;error&quot;&gt;&amp;#91;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/util/GenericOptionsParser.html|GenericOptionsParser&amp;#93;&lt;/span&gt; provides a way to do this with -files, -libjars and -archives&lt;/p&gt;</comment>
                            <comment id="12837472" author="jake.mannix" created="Tue, 23 Feb 2010 22:12:33 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Ahh, I see where you&apos;re coming from, so without core, you&apos;re suggesting that mahout pick up the jar files in the target directories if they exist? I think it is fine to modify the non-core classpath to include these, they won&apos;t be present in the release build anyway.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool, yeah, that makes sense.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Are any of the default properties files used beyond the MahoutDriver, which executes locally and sets up the job? Do these files need to be distributed to the rest of the cluster? As noted above, I think the proper way to run MahoutDriver in the context of a distributed job is to do something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./bin/mahout org.apache.hadoop.util.RunJar /path/to/mahout-examples-0.3-SNAPSHOT.job org.apache.mahout.driver.MahoutDriver TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I suspect we could easilly modify the mahout script and shorten this to:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./bin/mahout runjob TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool, so why not just check to see if $HADOOP_CONF_DIR is set - if it is, do &quot;runjob&quot; as described, if it&apos;s not, do &quot;run&quot; to do locally.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;FWIW, &lt;span class=&quot;error&quot;&gt;&amp;#91;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/util/GenericOptionsParser.html|GenericOptionsParser&amp;#93;&lt;/span&gt; provides a way to do this with -files, -libjars and -archives&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Now of course, I guess I don&apos;t really need the files to get onto the job&apos;s classpath &lt;b&gt;on the cluster&lt;/b&gt; - it just needs to be on the classpath of the locally running jvm which is invoking MahoutDriver.main().  So I was doing more work than was necessary.  This is easy to do, just add MAHOUT_CONF_DIR to the classpath and we&apos;re good to go.&lt;/p&gt;
</comment>
                            <comment id="12837477" author="drew.farris" created="Tue, 23 Feb 2010 22:23:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Cool, so why not just check to see if $HADOOP_CONF_DIR is set - if it is, do &quot;runjob&quot; as described, if it&apos;s not, do &quot;run&quot; to do locally.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, ok &amp;#8211; that should work because I believe you can use RunJar to launch anything even if it isn&apos;t a mapreduce job, no need for classpath setup in this case either &amp;#8211; all you need to do is point to the examples job. Might be able to take advantage of this elsewhere.&lt;/p&gt;</comment>
                            <comment id="12837607" author="drew.farris" created="Wed, 24 Feb 2010 03:47:53 +0000"  >&lt;p&gt;It doesn&apos;t appear that the following command works as intended:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./bin/mahout org.apache.hadoop.util.RunJar /path/to/mahout-examples-0.3-SNAPSHOT.job org.apache.mahout.driver.MahoutDriver TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following seems to be the appropriate way to achieve what we&apos;re trying to do here: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hadoop jar examples/target/mahout-examples-0.3-SNAPSHOT.job org.apache.mahout.driver.MahoutDriver TestClassifier
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any thoughts on whether it makes sense to attempt to work the latter form into the mahout script? It won&apos;t pull the necessary config files for MahoutDriver in from a path outside of the job file unless HADOOP_CLASSPATH is set to include those directories, but I haven&apos;t had a chance to verify that.&lt;/p&gt;</comment>
                            <comment id="12837608" author="jake.mannix" created="Wed, 24 Feb 2010 03:48:06 +0000"  >&lt;p&gt;Ok, new patch.&lt;/p&gt;

&lt;p&gt;This one works in one of two ways.  If you have $MAHOUT_CONF_DIR defined (there are some dummy files living in the newly created directory &quot;conf&quot; at the top level, moving away from core/src/main/resources), then you can just run:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$MAHOUT_HOME/bin/mahout run svd
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and it should read your properties in $MAHOUT_CONF_DIR/svd.props and run (locally).&lt;/p&gt;

&lt;p&gt;The other way it can work (and actually does, at least on my setup) is running on hadoop:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$HADOOP_HOME/bin/hadoop jar path/to/mahout.job org.apache.mahout.driver.MahoutDriver svd 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And again, $MAHOUT_CONF_DIR/svd.props is read locally before being launched off to the hadoop cluster.&lt;/p&gt;

&lt;p&gt;I have not yet been able to get the idea of turning the shell script into automagically issuing RunJar as the command and passing MahoutDriver and the remaining args after, so that you would never need to run hadoop&apos;s shell script at all, although that would be great to have work.&lt;/p&gt;

&lt;p&gt;Also not yet in this patch: actually default set MAHOUT_CONF_DIR to the correct place in both dev mode and release mode, and I haven&apos;t modified the pom to package up the new conf dir and put it in the distribution.&lt;/p&gt;</comment>
                            <comment id="12837616" author="jake.mannix" created="Wed, 24 Feb 2010 04:03:50 +0000"  >&lt;p&gt;Our comments crossed in the ether! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any thoughts on whether it makes sense to attempt to work the latter form into the mahout script? It won&apos;t pull the necessary config files for MahoutDriver in from a path outside of the job file unless HADOOP_CLASSPATH is set to include those directories, but I haven&apos;t had a chance to verify that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right - I did indeed set my HADOOP_CLASSPATH to include $MAHOUT_CONF_DIR, which allowed this to work, otherwise it would not.  This should be done by the script.&lt;/p&gt;

&lt;p&gt;Ideally, yes, it&apos;s ugly but if $MAHOUT_HOME/bin/mahout just sets $HADOOP_CLASSPATH to include $MAHOUT_CONF_DIR (or $MAHOUT_HOME/conf if that variable is not set), then just execute $HADOOP_HOME/bin/hadoop jar ... then it should work.&lt;/p&gt;</comment>
                            <comment id="12837650" author="jake.mannix" created="Wed, 24 Feb 2010 06:33:22 +0000"  >&lt;p&gt;Ok, now we&apos;re getting somewhere.  This one a) has the ability to properly handle &quot;mahout run -h&quot; or &quot;mahout run --help&quot;, helpfully spitting out the list of classes with shortName&apos;s which MahoutDriver has been told about in the driver.classes.props, and more importantly, it can, both in a release environment, and in a dev environment, do:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./bin/mahout run kmeans [options]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If $MAHOUT_CONF_DIR is set, and points to a place with the right files, then the default properties are loaded from there (overridden by &lt;span class=&quot;error&quot;&gt;&amp;#91;options&amp;#93;&lt;/span&gt; given above). &lt;/p&gt;

&lt;p&gt;If both $HADOOP_HOME and $HADOOP_CONF_DIR are set, then this actually sets $HADOOP_CLASSPATH to be prepended with $MAHOUT_CONF_DIR so that the following is actually run:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$HADOOP_HOME/bin/hadoop jar [path to examples.job] o.a.m.driver.MahoutDriver kmeans [options]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;actually works and it gets the default properties loaded and overridden as necessary, running your job on the hadoop cluster.&lt;/p&gt;

&lt;p&gt;If one of those variables are not specified (TODO: if $HADOOP_HOME is specified, but $HADOOP_CONF_DIR is not, guess a default of $HADOOP_HOME/conf, I suppose), then the assumption is to run locally.&lt;/p&gt;

&lt;p&gt;Previous behavior still works, from what I can tell - you can still do:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$MAHOUT_HOME/bin/mahout kmeans --output kmeans/out --input input/vecs -k 13 --clusters tmp/foobar
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and we&apos;re backwards compatible with the old way.&lt;/p&gt;

&lt;p&gt;Now the question is: do we want to be?  Or do we want to trim down the shell script to just always use MahoutDriver, and get rid of all of the &apos;elif [ &quot;$COMMAND&quot; =&apos; stuff and just have $CLASS be MahoutDriver, passing it $COMMAND as the first argument?  &lt;/p&gt;

&lt;p&gt;Then the command line would be exactly the same as before, except you could also load up your $MAHOUT_CONF_DIR/&amp;lt;shortName&amp;gt;.props files with whatever defaults you wanted to use.&lt;/p&gt;</comment>
                            <comment id="12837763" author="drew.farris" created="Wed, 24 Feb 2010 12:46:47 +0000"  >&lt;p&gt;This sounds great. I will take it for a spin when I am in front of a computer. My take is that the old if, else it&apos;s in the script are now redundant. As long as one can use MahoutDriver to run both classes that have been aliased to short names and classes specified using the full name, I say let&apos;s get rid of them.&lt;/p&gt;
</comment>
                            <comment id="12837913" author="drew.farris" created="Wed, 24 Feb 2010 17:59:11 +0000"  >&lt;p&gt;Jake, this is looking really great.&lt;/p&gt;

&lt;p&gt;Here&apos;s a partial patch that includes modifications to bin/mahout and MahoutDriver:&lt;/p&gt;

&lt;p&gt;It removes the separate &apos;command&apos; option from the original script and delegates everything to MahoutDriver, so things like the following work:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
./mahout testclassifier
./mahout --help
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also will set MAHOUT_CONF_DIR to MAHOUT_HOME/conf if MAHOUT_CONF_DIR is not set.&lt;/p&gt;

&lt;p&gt;If no args are specified, will print same output as --help.&lt;/p&gt;

&lt;p&gt;One potential TODO from this would be to potentially launch arbitrary classes if no matching program name is specified, but I need to dig into ProgramDriver to understand how it works before I can contribute something like that.&lt;/p&gt;

&lt;p&gt;Hope this is helpful.&lt;/p&gt;</comment>
                            <comment id="12837917" author="jake.mannix" created="Wed, 24 Feb 2010 18:08:43 +0000"  >&lt;p&gt;Awesome Drew, I&apos;ll check it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One potential TODO from this would be to potentially launch arbitrary classes if no matching program name is specified, but I need to dig into ProgramDriver to understand how it works before I can contribute something like that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I was thinking about that over breakfast - an easy hack to do this is while the driver.classes.props file is being read, keep track if whether you&apos;ve found an exact match on args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, and once all of drivers.classes.props has been read and you haven&apos;t found a match, just do a Class.forName(args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;) and add it to the ProgramDriver with it&apos;s full name as the &quot;shortName&quot; and the rest of the program will work (and would even still work with default properties files!  If you put com.mycompany.MyClass.props in $MAHOUT_CONF_DIR, it&apos;ll read that for defaults).&lt;/p&gt;

&lt;p&gt;I&apos;ll see if I can add that to your patch later today.  I think if that&apos;s working, we should be looking good to commit and see who else wants to play with it and test it out.&lt;/p&gt;</comment>
                            <comment id="12838159" author="jake.mannix" created="Thu, 25 Feb 2010 02:51:01 +0000"  >&lt;p&gt;Ok, new patch, with the modification that indeed you have the ability to just run &quot;$MAHOUT_HOME/bin/mahout &amp;lt;classname&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;args&amp;#93;&lt;/span&gt;&quot; and it still works.  And if &amp;lt;classname&amp;gt;.props exists on the classpath, it&apos;ll get used for defaults. w00t, as the kids say.&lt;/p&gt;

&lt;p&gt;I&apos;ve added to the patch the conf directory (you&apos;d not kept it in your patch, Drew), and there are a bunch of emtpy files in there, except some of them have commented out properties in the right format:&lt;/p&gt;

&lt;p&gt;cleaneigen.props :&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#ci|corpusInput =
#ei|eigenInput =
#o|output =
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To help users see what they can store in here, and in what format.&lt;/p&gt;</comment>
                            <comment id="12838160" author="jake.mannix" created="Thu, 25 Feb 2010 02:53:11 +0000"  >&lt;p&gt;Let&apos;s release this.   Others want to try it out?  &lt;/p&gt;

&lt;p&gt;We need documentation for it too, obviously, but see how it runs on other jobs?  It should work on Hadoop, too, as this ticket / comment thread indicates.&lt;/p&gt;</comment>
                            <comment id="12838694" author="drew.farris" created="Fri, 26 Feb 2010 03:49:13 +0000"  >&lt;p&gt;Had a chance to take this out for a spin tonight. It is working very well. I did some k-means using the script starting with the 20newsgroups collection as textfiles, both locally and on a cluster. I think it is good to go, can we commit? I&apos;d be happy to handle it if we have sufficient consensus.&lt;/p&gt;

&lt;p&gt;There are a couple modifications I&apos;ve made to the maven assemblies to include all of this in the binary and source releases properly (adding the conf directory, setting executable on the mahout script, etc). While I was at it, I cleaned up the bin assembly process so that the releases should build faster too. Should I  commit those, open another issue or should I re-post as a part of this patch?&lt;/p&gt;</comment>
                            <comment id="12838700" author="robinanil" created="Fri, 26 Feb 2010 04:22:18 +0000"  >&lt;p&gt;+1 for committing this. &lt;/p&gt;

&lt;p&gt;Can you upload the patch for the maven configs. Maybe a separate issue? and mark it as 0.3. &lt;/p&gt;</comment>
                            <comment id="12838725" author="jake.mannix" created="Fri, 26 Feb 2010 06:19:48 +0000"  >&lt;p&gt;Drew, do you have a patch with your last changes?  If I can try them out too to verify that they work on more than one system, we can commit this I think.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Should I commit those, open another issue or should I re-post as a part of this patch?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d say that should be in a separate issue, that should be small enough to mark for 0.3 and commit separately.&lt;/p&gt;</comment>
                            <comment id="12838834" author="gsingers" created="Fri, 26 Feb 2010 11:29:46 +0000"  >&lt;p&gt;Just capturing something longer term here, no need to block anything.  One of the things I&apos;d love to have is some basic &quot;experiment management&quot; capabilities.  I can imagine in this mode that things like input parameters, etc. are all written into files and organized along with the output, etc. such that it is easy to keep track of all the different ways things get run over time.   Seems like this script w/ default property files, etc. could be part of that solution.&lt;/p&gt;</comment>
                            <comment id="12838868" author="drew.farris" created="Fri, 26 Feb 2010 13:45:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can you upload the patch for the maven configs. Maybe a separate issue? and mark it as 0.3. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See: &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-311&quot; title=&quot;Update assemblies to include components of launcher script from MAHOUT-301&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-311&quot;&gt;&lt;del&gt;MAHOUT-311&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12840262" author="jake.mannix" created="Tue, 2 Mar 2010 18:11:11 +0000"  >&lt;p&gt;Checked in a version of this which works, not sure if it had the most updated stuff from Drew in it.  I&apos;ll check out the &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-311&quot; title=&quot;Update assemblies to include components of launcher script from MAHOUT-301&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-311&quot;&gt;&lt;del&gt;MAHOUT-311&lt;/del&gt;&lt;/a&gt; patch to see if there&apos;s a bit more for the assembly stuff to get in too.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12456393">MAHOUT-294</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12436878" name="MAHOUT-301-drew.patch" size="14229" author="drew.farris" created="Wed, 24 Feb 2010 17:59:11 +0000"/>
                            <attachment id="12436673" name="MAHOUT-301-drew.patch" size="11093" author="drew.farris" created="Tue, 23 Feb 2010 04:08:43 +0000"/>
                            <attachment id="12436944" name="MAHOUT-301.patch" size="20501" author="jake.mannix" created="Thu, 25 Feb 2010 02:51:32 +0000"/>
                            <attachment id="12436822" name="MAHOUT-301.patch" size="14450" author="jake.mannix" created="Wed, 24 Feb 2010 06:33:22 +0000"/>
                            <attachment id="12436817" name="MAHOUT-301.patch" size="13334" author="jake.mannix" created="Wed, 24 Feb 2010 03:48:06 +0000"/>
                            <attachment id="12436635" name="MAHOUT-301.patch" size="9080" author="jake.mannix" created="Mon, 22 Feb 2010 22:19:09 +0000"/>
                            <attachment id="12436478" name="MAHOUT-301.patch" size="9080" author="jake.mannix" created="Sun, 21 Feb 2010 06:01:14 +0000"/>
                            <attachment id="12436419" name="MAHOUT-301.patch" size="6577" author="jake.mannix" created="Sat, 20 Feb 2010 07:15:55 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12457568">MAHOUT-311</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Feb 2010 17:26:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9764</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5yn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23117</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>