<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:24:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1106/MAHOUT-1106.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1106] SVD++</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1106</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Initial shot at SVD++.&lt;br/&gt;
Relies on the RatingsSGDFactorizer class introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1089&quot; title=&quot;SGD matrix factorization for rating prediction with user and item biases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1089&quot;&gt;&lt;del&gt;MAHOUT-1089&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One could also think about several enhancements, e.g. having separate regularization constants for user and item factors.&lt;/p&gt;

&lt;p&gt;I am also the author of the SVDPlusPlus class in MyMediaLite, so if there are any similarities, no need to worry &amp;#8211; I am okay with relicensing this to the Apache 2.0 license.&lt;br/&gt;
&lt;a href=&quot;https://github.com/zenogantner/MyMediaLite/blob/master/src/MyMediaLite/RatingPrediction/SVDPlusPlus.cs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zenogantner/MyMediaLite/blob/master/src/MyMediaLite/RatingPrediction/SVDPlusPlus.cs&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12613946">MAHOUT-1106</key>
            <summary>SVD++</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ssc">Sebastian Schelter</assignee>
                                    <reporter username="zenogantner">Zeno Gantner</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Oct 2012 20:48:58 +0000</created>
                <updated>Mon, 3 Feb 2014 08:06:19 +0000</updated>
                            <resolved>Mon, 29 Oct 2012 21:06:23 +0000</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.8</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13486356" author="zenogantner" created="Mon, 29 Oct 2012 21:05:07 +0000"  >&lt;p&gt;Another general comment: to my experience, there is not much to gain in using different randomNoise values &#8211; 0.1 would be fine, I guess. Not sure whether we need it in the constructor.&lt;/p&gt;</comment>
                            <comment id="13486359" author="ssc" created="Mon, 29 Oct 2012 21:06:23 +0000"  >&lt;p&gt;Thank you very much again!&lt;/p&gt;</comment>
                            <comment id="13486544" author="hudson" created="Tue, 30 Oct 2012 00:16:03 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1724 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1724/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1724/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1106&quot; title=&quot;SVD++&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1106&quot;&gt;&lt;del&gt;MAHOUT-1106&lt;/del&gt;&lt;/a&gt; SVD++ (Revision 1403522)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ssc : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1403522&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1403522&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/SVDPlusPlusFactorizer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13498742" author="agnonchik" created="Fri, 16 Nov 2012 11:28:06 +0000"  >&lt;p&gt;May I ask here some abstract question regarding the SVD++ algorithm? It has nothing to do with the code. Please excuse me if I&apos;m posting it in the wrong place.&lt;br/&gt;
I wonder if the optimization problem solved by the SVD++ algorithm has a unique solution?&lt;br/&gt;
Seems that in some cases, for example, when the regularization parameter lambda is equal to zero, the problem permits multiple solutions.&lt;br/&gt;
We can write the SVD++ model as&lt;/p&gt;

&lt;p&gt;ratingPrediction(user, item) = mu + bu(user) + bi(item) + (p(user) + |N(user)|^(-0.5) * sum_&lt;/p&gt;
{implItem from N(user)} y(implItem)) * q(item)^T&lt;br/&gt;
&lt;br/&gt;
and the learning algorithm try to optimize the following cost function&lt;br/&gt;
&lt;br/&gt;
sum_{(user, item) from R} (ratingPrediction - observedRating)^2 + lambda * (||bu||_2^2 + ||bi||_2^2 + ||P||_F^2 + ||Q||_F^2 + ||Y||_F^2)&lt;br/&gt;
&lt;br/&gt;
where P = &lt;span class=&quot;error&quot;&gt;&amp;#91;p(1); ... ;p(m)&amp;#93;&lt;/span&gt;, Q = &lt;span class=&quot;error&quot;&gt;&amp;#91;q(1); ... ;q(n)&amp;#93;&lt;/span&gt;, Y = &lt;span class=&quot;error&quot;&gt;&amp;#91;y(1); ... ;y(n)&amp;#93;&lt;/span&gt;.&lt;br/&gt;
Lets introduce the matrix Z such that&lt;br/&gt;
&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Z * Y&amp;#93;&lt;/span&gt;(user) = |N(user)|^(-0.5) * sum_{implItem from N(user)}
&lt;p&gt; y(implItem)&lt;/p&gt;

&lt;p&gt;Then for any solution P and Y of the optimization problem and an arbitrary vector Y2, P2 = P + Z * (Y - Y2) and Y2 is also a solution.&lt;/p&gt;

&lt;p&gt;Am I right?&lt;br/&gt;
If yes, then my point is that applying SVD++ doesn&apos;t make much sense in comparison to biased SVD which ignores implicit feedback (Y parameter).&lt;br/&gt;
Thanks!&lt;/p&gt;</comment>
                            <comment id="13498767" author="srowen" created="Fri, 16 Nov 2012 12:29:18 +0000"  >&lt;p&gt;Yes I think this is true &amp;#8211; ignoring lambda. The SVD++ model is explaining the user&apos;s latent factors as some combination of explicit and implicit factors. Why does the model think you like Shrek? Is it because you rated Shrek 4 stars or clicked it 6 times? Either, both or some of both could make sense. The regularization parameter does constrain it to a &apos;simple&apos; explanation involving the two and lambda should be positive. So if the premise is no regularization &amp;#8211; don&apos;t do that, I suppose. You don&apos;t necessarily have a unique solution even with regularization but it is not of this form.&lt;/p&gt;

&lt;p&gt;There&apos;s a more interesting general question about explicit vs implicit feedback. I certainly don&apos;t think you can ignore implicit feedback. Most of the data in the world is implicit. My question is really whether it&apos;s more interesting to forget &apos;explicit&apos; data entirely since it&apos;s rare and noisy. This is why I personally like ALS-WR, as it is really just the same thing, much simplified and faster since there is no mean or explicit term to worry about. You could argue it&apos;s coarser, but if you believe it&apos;s a world of 99% implicit data, it is negligibly different.&lt;/p&gt;</comment>
                            <comment id="13498782" author="agnonchik" created="Fri, 16 Nov 2012 13:02:15 +0000"  >&lt;p&gt;Thanks, Sean. I&apos;ve got your point.&lt;/p&gt;</comment>
                            <comment id="13507995" author="zenogantner" created="Sat, 1 Dec 2012 16:17:02 +0000"  >&lt;p&gt;I agree with Sean. Implicit feedback is 99%.&lt;/p&gt;

&lt;p&gt;Only for those cases where you have explicit ratings (or thumbs up/down), you would use SVD++.&lt;/p&gt;</comment>
                            <comment id="13560094" author="agnonchik" created="Tue, 22 Jan 2013 22:10:04 +0000"  >&lt;p&gt;1. I compared the accuracy of biased SVD and SVD++ factorizers on the 1M MovieLens dataset and found no significant difference. Seems that both methods end up with the same RMSE but SVD++ is much slower. There should be some datasets on which SVD++  shines. What are those cases?&lt;/p&gt;

&lt;p&gt;2. Do you think it would be natural to extend functionality of SVD++ to the case when the implicit feedback is wider than the explicit? I&apos;m asking because a subset of items evaluated by a user implicitly quite often exceeds the rated items (N(u) and R(u) in Yehuda Koren&apos;s notations).&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13560457" author="srowen" created="Wed, 23 Jan 2013 07:50:04 +0000"  >&lt;p&gt;The Moveielens data set is all explicit right? I&apos;d expect no difference. As you say the difference comes when there is implicit feedback. Yes I think it&apos;s natural to &quot;extend&quot; SVD++ so far to drop explicit feedback or just consider it a special case of implicit feedback; see my previous comment.&lt;/p&gt;</comment>
                            <comment id="13560644" author="agnonchik" created="Wed, 23 Jan 2013 12:35:22 +0000"  >&lt;p&gt;Sean, do you think it would be fair to extend implicit feedback to the validation and test datasets as well? So that&lt;/p&gt;

&lt;p&gt;   R=training_dataset_with_ratings,&lt;br/&gt;
   N=training_dataset_without_ratings+validation_dataset_without_ratings+test_dataset_without ratings.&lt;/p&gt;

&lt;p&gt;Or it&apos;s a kind of cheating?&lt;/p&gt;</comment>
                            <comment id="13560859" author="srowen" created="Wed, 23 Jan 2013 17:42:08 +0000"  >&lt;p&gt;I&apos;m not quite sure what R / N are here. I think you should not split the data by explicit / implicit. Rather you split randomly, or by time, or by positive-ness &amp;#8211; but training / testing on only one type of input probably doesn&apos;t help you measure actual performance.&lt;/p&gt;</comment>
                            <comment id="13564212" author="agnonchik" created="Mon, 28 Jan 2013 11:35:48 +0000"  >&lt;p&gt;Seems that I have found a discrepancy of this implementation from the original Yehuda Koren&apos;s SVD++ algorithm.&lt;/p&gt;

&lt;p&gt;line 140:&lt;br/&gt;
   double denominator = Math.sqrt(itemsByUser.size());&lt;br/&gt;
should be&lt;br/&gt;
   double denominator = Math.sqrt(itemsByUser.get(u).size());&lt;/p&gt;

&lt;p&gt;line 164:&lt;br/&gt;
   double denominator = Math.sqrt(itemsByUser.size());&lt;br/&gt;
should be&lt;br/&gt;
    double denominator = Math.sqrt(itemsByUser.get(u).size());&lt;/p&gt;

&lt;p&gt;The sum of y parameters should be normalized by square root of number of items for which user u provided implicit feedback. Am I right?&lt;br/&gt;
Currently, it is normalized by square root of number of users&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; not items.&lt;/p&gt;</comment>
                            <comment id="13567477" author="zenogantner" created="Thu, 31 Jan 2013 09:06:41 +0000"  >&lt;p&gt;Thank you for the report. This sure looks like a bug.&lt;br/&gt;
Will have a look at it tonight!&lt;/p&gt;</comment>
                            <comment id="13567524" author="agnonchik" created="Thu, 31 Jan 2013 10:43:38 +0000"  >&lt;p&gt;thanks, Zeno!&lt;/p&gt;</comment>
                            <comment id="13567547" author="ssc" created="Thu, 31 Jan 2013 11:16:56 +0000"  >&lt;p&gt;I created a new issue for the bug: &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1144&quot; title=&quot;Wrong normalization in SVD++&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1144&quot;&gt;&lt;del&gt;MAHOUT-1144&lt;/del&gt;&lt;/a&gt; , as this issue here is already closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12551239" name="SVDPlusPlusFactorizer.java" size="7413" author="zenogantner" created="Mon, 29 Oct 2012 20:50:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 29 Oct 2012 21:06:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>252871</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy74if:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75541</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>