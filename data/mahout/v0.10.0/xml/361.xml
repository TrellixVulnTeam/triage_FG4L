<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:22:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-361/MAHOUT-361.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-361] SLF4J dependency structure leads to unpleasant surproses</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-361</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Our poms declare a dependency on the slf4j core, but not on any of the implementation modules. Thus, if an unsuspecting user adds a dependency on our stuff, and runs, they get a exception from slf4j complaining that there&apos;s no implementation. I claim that it would be more better to declare a dependency on the JDK14 module, and those users who really care about using something else can exclude it and include their own. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12461010">MAHOUT-361</key>
            <summary>SLF4J dependency structure leads to unpleasant surproses</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="bmargulies">Benson Margulies</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Apr 2010 11:53:08 +0100</created>
                <updated>Sun, 31 Oct 2010 15:49:20 +0000</updated>
                            <resolved>Fri, 28 May 2010 16:45:03 +0100</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12852788" author="srowen" created="Fri, 2 Apr 2010 11:59:09 +0100"  >&lt;p&gt;Yah in theory it&apos;s their project that should depend on an slf4j implementation, not Mahout. But that represents a gotcha, and, if you are right that their dependency will override (does it? because then two bindings are on the classpath? or if properly overridden, their &quot;job&quot; jars won&apos;t have our dependency?) then it&apos;s good. I like.&lt;/p&gt;</comment>
                            <comment id="12852792" author="drew.farris" created="Fri, 2 Apr 2010 12:24:29 +0100"  >&lt;p&gt;I&apos;ve run into this too as a result of having the slf4j implementation in test scope. &lt;/p&gt;

&lt;p&gt;Can we consider continuing to use the jcl adapter instead of jdk14? &lt;/p&gt;

&lt;p&gt;A large number of Mahout&apos;s dependenices already use jcl for their logging. Using this adapter changing the logging behavior for mahout (and its dependencies) becomes as simple as adding log4j (or not) to the jars (as opposed to switching the jcl version of slf4j &amp;gt;and&amp;lt; adding log4j). Admittedly this a minor difference, but one less thing to change. The default behavior is to use jdk14 anyway. &lt;/p&gt;

&lt;p&gt;I propose that we remove the test scope from the slf4j-jcl adapter dependency and let it default to the compile scope. Benson, this should solve the issue too, correct? &lt;/p&gt;</comment>
                            <comment id="12852793" author="bmargulies" created="Fri, 2 Apr 2010 12:35:25 +0100"  >&lt;p&gt;It&apos;s a little worse than &apos;override&apos;. They must write a Maven &apos;exclude&apos; clause into their dependency on Mahout, and then write a dependency for the back-end they want.&lt;/p&gt;

&lt;p&gt;This is perhaps why some people are shy of using SLF4J as their direct logging API.&lt;/p&gt;

&lt;p&gt;As per Drew, we could just make calls to JCL, and anyone who wants SLF4J (including us in tests or utilities) can use their bridge.&lt;/p&gt;

&lt;p&gt;Actually, I meant to write jcl, not jdk14, so that proposal is fine with me.&lt;/p&gt;</comment>
                            <comment id="12852795" author="srowen" created="Fri, 2 Apr 2010 13:05:21 +0100"  >&lt;p&gt;Hoo boy, and we used to use JCL directly in 0.1. We come full circle. &lt;/p&gt;

&lt;p&gt;I still somehow favor sticking with SLF4J, mostly from inertia. But I dont&apos; feel strongly.&lt;/p&gt;

&lt;p&gt;But if we&apos;re dropping the meta-meta logger, why only drop down to meta-logger JCL? go all the way to JDK&apos;s logger. Hey, we already living in a situation where every major logger is used. Some of them have ways to redirect logging to other loggers. We can just use the most-primitive logger and let those who care redirect to JDK&apos;s logging?&lt;/p&gt;</comment>
                            <comment id="12852842" author="drew.farris" created="Fri, 2 Apr 2010 15:53:31 +0100"  >&lt;p&gt;Sorry, I probably wasn&apos;t being clear; I&apos;m not proposing we switch to the jcl (commons-logging) api. I think we should continue to use the slf4j api and continue to use the slf4j-jcl adapter. I do not think we should switch to use the jcl logging api.&lt;/p&gt;

&lt;p&gt;So, it sounds like we are all in agreement, the only change that would need to be made to the existing core pom would be to remove the test scope for the slf4j-jcl adapter dependency. I&apos;m unsure if there are issues with the other poms. Not in the position to look at this moment.&lt;/p&gt;</comment>
                            <comment id="12852965" author="bmargulies" created="Fri, 2 Apr 2010 22:49:18 +0100"  >&lt;p&gt;Keep in mind that I got unhappy about this because some really not-very-loggy classes in collections now touch the slf4j API and demand a working config.&lt;/p&gt;

&lt;p&gt;I see two plausible alternatives.&lt;/p&gt;

&lt;p&gt;Alternative #1: remove the test scope. This requires non-JCL users to put some relatively fiddly stuff in their POM, but it avoids requiring everyone to pick one and add it. And the result works out-of-the-box. And for some people, jcl is good enough in terms of logging flexibility.&lt;/p&gt;

&lt;p&gt;Alternative #2: rethink this.&lt;/p&gt;

&lt;p&gt;2a: use java.util logging. Anyone who wants another backend can use the SLF4J technology.&lt;br/&gt;
2b: Borrow from CXF. CXF wanted to (a) support I18N and (b) avoid the situation we are in right now. So, they wrote their own simple logging wrapper. By default, it goes to j.u.l, but by putting a file in classpath you tell it to use some other logger. &lt;/p&gt;

&lt;p&gt;In short, they built a mini-SLF4J with two big differences: I18N and a working default configuration. Since that code is sitting in a nearby Apache project, we can pretty easily expropriate it.&lt;/p&gt;</comment>
                            <comment id="12852970" author="srowen" created="Fri, 2 Apr 2010 23:02:23 +0100"  >&lt;p&gt;How about removing logging statements from collections and math? seems too low level for logging, really.&lt;/p&gt;</comment>
                            <comment id="12852971" author="bmargulies" created="Fri, 2 Apr 2010 23:13:50 +0100"  >&lt;p&gt;Well, OK, but if assembling a typical job still requires the user to pick and include an slf4j backend, I submit that it&apos;s not a great thing.&lt;/p&gt;</comment>
                            <comment id="12852992" author="ceki@qos.ch" created="Sat, 3 Apr 2010 00:16:49 +0100"  >&lt;p&gt;FYI, it is likely that future SLF4J release will default to a nop implementation if no binding can be found, eliminating the need to bundle a binding that the user will potentially have to exclude.&lt;/p&gt;</comment>
                            <comment id="12852999" author="srowen" created="Sat, 3 Apr 2010 00:28:25 +0100"  >&lt;p&gt;This is what it looks like to remove logging from math and collections. It&apos;s something to consider separately from the main conversation. Since the module in question was math/collections, maybe this is a helpful step anyway. Fewer dependencies in core libraries are better. But does this lose anything valuable? I sense this is left over from Colt?&lt;/p&gt;</comment>
                            <comment id="12853017" author="bmargulies" created="Sat, 3 Apr 2010 01:15:28 +0100"  >&lt;p&gt;Ceki, noop would be not as nice as j.u.l.&lt;/p&gt;</comment>
                            <comment id="12853018" author="bmargulies" created="Sat, 3 Apr 2010 01:16:23 +0100"  >&lt;p&gt;That lone collections business is pretty silly, and removing it looks good. I&apos;m not qualified to pass on the implications of de-logging some of the more complex math bits.&lt;/p&gt;
</comment>
                            <comment id="12872128" author="srowen" created="Thu, 27 May 2010 08:54:13 +0100"  >&lt;p&gt;Jake I kind of recall you didn&apos;t want these log statements removed. Am I right? If so, won&apos;t commit my attached patch which just removes collections/math logging.&lt;/p&gt;

&lt;p&gt;But in any event looks like slf4j 1.6 is out which I believe defaults to a no-op implementation, so using that ought to rectify the original issue.&lt;/p&gt;</comment>
                            <comment id="12873018" author="srowen" created="Fri, 28 May 2010 16:45:03 +0100"  >&lt;p&gt;I didn&apos;t remove anything, just updated to slf4j 1.6 which should no-op by default.&lt;/p&gt;</comment>
                            <comment id="12873039" author="hudson" created="Fri, 28 May 2010 17:26:44 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #32 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/32/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/32/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-361&quot; title=&quot;SLF4J dependency structure leads to unpleasant surproses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-361&quot;&gt;&lt;del&gt;MAHOUT-361&lt;/del&gt;&lt;/a&gt; &amp;#8211; just update to slf4j 1.6&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12440658" name="MAHOUT-361.patch" size="22758" author="srowen" created="Sat, 3 Apr 2010 00:28:25 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Apr 2010 10:59:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9704</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5lb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23057</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>