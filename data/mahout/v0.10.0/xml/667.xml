<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:26:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-667/MAHOUT-667.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-667] Persistent storage of factorizations in SVDRecommender</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-667</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;As discussed previously (&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-640&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/MAHOUT-640&lt;/a&gt;) it would be beneficial to provide a persistent storage mechanism for factorizations created by SVDRecommender (in package org.apache.mahout.cf.taste.impl.recommender.svd) as these can be time consuming to produce. It would also allow factorizations to be computed on one machine then distributed to other machines providing predictions, improving efficiency and scalability.&lt;/p&gt;

&lt;p&gt;Having a &quot;persistence strategy&quot; interface has been suggested that could be implemented as required. I&apos;ll try to post a outline proposal for discussion purposes in the next few days but any comments or suggestions would be very welcome.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12504042">MAHOUT-667</key>
            <summary>Persistent storage of factorizations in SVDRecommender</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ssc">Sebastian Schelter</assignee>
                                    <reporter username="chris_newell">Chris Newell</reporter>
                        <labels>
                    </labels>
                <created>Tue, 12 Apr 2011 13:18:11 +0100</created>
                <updated>Sat, 21 May 2011 04:18:57 +0100</updated>
                            <resolved>Sun, 17 Apr 2011 11:11:33 +0100</resolved>
                                    <version>0.5</version>
                                    <fixVersion>0.5</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="1209600">336h</timeoriginalestimate>
                            <timeestimate seconds="1209600">336h</timeestimate>
                                        <comments>
                            <comment id="13019257" author="chris_newell" created="Wed, 13 Apr 2011 10:03:31 +0100"  >&lt;p&gt;Initial suggestion for discussion below. It feels like re-inventing the wheel so if I&apos;ve missed some obvious solution elsewhere please let me know.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * Provides a persistent store &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a resource.
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; PersistenceStrategy {

  /**
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; an InputStream from which a resource can be read.
   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; InputStream getInputStream() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

  /**
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; an OutputStream to which a resource can be written.
   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; OutputStream getOutputStream() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
  
  /**
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the persistent store contains a resource; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; otherwise.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; exists();

  /**
   * Clears the persistent store.
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; and only &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the store is successfully cleared; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; otherwise 
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; delete();

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13019857" author="ssc" created="Thu, 14 Apr 2011 16:04:21 +0100"  >&lt;p&gt;I thought of something much less generic that is tied to the usecase:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
public interface PersistanceStrategy {
  Factorization load() throws IOException;
  void maybePersist(Factorization factorization) throws IOException;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;SVDRecommender would call load() in its constructor. If the result was null it would recompute the factorization and call maybePersist(). maybePersist() would also be called after a new factorization was computed at refresh time.&lt;/p&gt;

&lt;p&gt;A default implementation of PersistanceStrategy would always return null for load and never do anything in maybePersist(). Other implementations could load and save the factorizations to the datastore/format of their choice.&lt;/p&gt;

&lt;p&gt;Does this approach sound fitting to you?&lt;/p&gt;



</comment>
                            <comment id="13020245" author="chris_newell" created="Fri, 15 Apr 2011 10:10:57 +0100"  >&lt;p&gt;That looks fine, I&apos;ll have a go at a patch. Do we need to preserve the existing constructors? I don&apos;t want to break anyone&apos;s existing code.&lt;/p&gt;</comment>
                            <comment id="13020298" author="ssc" created="Fri, 15 Apr 2011 14:22:50 +0100"  >&lt;p&gt;Constructors should be preserved, we could introduce new ones that take a PersistanceStrategy and provide a method getDefaultPersistanceStrategy() for the existing ones, similar to getDefaultCandidateItemsStrategy()&lt;/p&gt;</comment>
                            <comment id="13020420" author="chris_newell" created="Fri, 15 Apr 2011 21:30:26 +0100"  >&lt;p&gt;persistent_svd.patch attached for discussion. I&apos;ve used object serialization in FilePersistanceStrategy for simplicity.&lt;/p&gt;</comment>
                            <comment id="13020584" author="ssc" created="Sat, 16 Apr 2011 11:22:44 +0100"  >&lt;p&gt;Hi Chris,&lt;/p&gt;

&lt;p&gt;that patch looks very good, nearly ready to commit, thank you very much. There&apos;s only a tiny issue, we tried to get rid of standard Java serialization in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-510&quot; title=&quot;Standardize serialization mechanisms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-510&quot;&gt;&lt;del&gt;MAHOUT-510&lt;/del&gt;&lt;/a&gt; so I don&apos;t think we should use it here. I&apos;d go for a binary format here, what do you (and others) say?&lt;/p&gt;</comment>
                            <comment id="13020603" author="chris_newell" created="Sat, 16 Apr 2011 14:04:51 +0100"  >&lt;p&gt;A binary format would be fine. I guess there could be a performance advantage and it would be easier to understand - if anyone wants to examine their factor values. I&apos;ll have look at how serialization is done elsewhere in the framework.&lt;/p&gt;</comment>
                            <comment id="13020631" author="chris_newell" created="Sat, 16 Apr 2011 17:45:06 +0100"  >&lt;p&gt;persistent_svd_v2.patch attached for discussion. For serialization I&apos;ve added writeBinary(DataOutput) and readBinary(DataInput) methods to the Factorization class. Any comments or suggestions would be very welcome.&lt;/p&gt;</comment>
                            <comment id="13020759" author="ssc" created="Sun, 17 Apr 2011 11:11:33 +0100"  >&lt;p&gt;Committed with some style changes and small refactorings. &lt;/p&gt;

&lt;p&gt;Moved the serialization code to the strategy to allow for easier customization, removed temporary file writing for the sake of simplicity.&lt;/p&gt;</comment>
                            <comment id="13020782" author="hudson" created="Sun, 17 Apr 2011 13:05:54 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #754 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/754/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/754/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-667&quot; title=&quot;Persistent storage of factorizations in SVDRecommender&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-667&quot;&gt;&lt;del&gt;MAHOUT-667&lt;/del&gt;&lt;/a&gt; Persistent storage of factorizations in SVDRecommender&lt;/p&gt;</comment>
                            <comment id="13034705" author="chris_newell" created="Tue, 17 May 2011 11:59:28 +0100"  >&lt;p&gt;Found a bug in AbstractFactorizer, which I introduced after failing to understand how FastByIDMap behaves.&lt;/p&gt;

&lt;p&gt;These two methods:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; userIndex(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; userID) {
    &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; userIndex = userIDMapping.get(userID);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (userIndex == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      userIndex = userIDMapping.put(userID, userIDMapping.size());
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; userIndex;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; itemIndex(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; itemID) {
    &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; itemIndex = itemIDMapping.get(itemID);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (itemIndex == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      itemIndex = itemIDMapping.put(itemID, itemIDMapping.size());
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; itemIndex;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;Should be replaced by:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; getUserIndex(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; userID) {
    &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; userIndex = userIDMapping.get(userID);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (userIndex == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      userIndex = userIDMapping.size();
      userIDMapping.put(userID, userIndex);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; userIndex;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; getItemIndex(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; itemID) {
    &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; itemIndex = itemIDMapping.get(itemID);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (itemIndex == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      itemIndex = itemIDMapping.size();
      itemIDMapping.put(itemID, itemIndex);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; itemIndex;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13034707" author="srowen" created="Tue, 17 May 2011 12:01:44 +0100"  >&lt;p&gt;Since it&apos;s a clear bug fix to both of us, and relatively important, I think it&apos;s valid to commit now in our code freeze for 0.5. I will do so.&lt;/p&gt;</comment>
                            <comment id="13034766" author="hudson" created="Tue, 17 May 2011 14:49:56 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #816 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/Mahout-Quality/816/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/Mahout-Quality/816/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-667&quot; title=&quot;Persistent storage of factorizations in SVDRecommender&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-667&quot;&gt;&lt;del&gt;MAHOUT-667&lt;/del&gt;&lt;/a&gt; additional bug fix&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12476478" name="persistent_svd.patch" size="9248" author="chris_newell" created="Fri, 15 Apr 2011 21:30:26 +0100"/>
                            <attachment id="12476529" name="persistent_svd_v2.patch" size="11243" author="chris_newell" created="Sat, 16 Apr 2011 17:45:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 14 Apr 2011 15:04:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9395</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy3pz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22754</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>