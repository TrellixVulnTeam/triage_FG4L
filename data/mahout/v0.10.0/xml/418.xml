<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:15:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-418/MAHOUT-418.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-418] Computing the pairwise similarities of the rows of a matrix</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-418</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;In response to the wish from &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-362&quot; title=&quot;Computation of pairwise cosine similarities for Item-Based Collaborative Filtering&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-362&quot;&gt;&lt;del&gt;MAHOUT-362&lt;/del&gt;&lt;/a&gt; and the latest discussion on the mailing list started by Kris Jack about computing a document similarity matrix, I tried to generalize the approach we&apos;re already using to compute the item-item-similarities for collaborative filtering.&lt;/p&gt;

&lt;p&gt;The job in the patch computes the pairwise similarity of the rows of a matrix in a distributed manner, is uses a SequenceFile&amp;lt;IntWritable,VectorWritable&amp;gt; as input and outputs such a file too. Custom similarity implementations can be supplied, I&apos;ve already implemented tanimoto and cosine for demo and testing purposes. The algorithm is based on the one presented here: &lt;a href=&quot;http://www.umiacs.umd.edu/~jimmylin/publications/Elsayed_etal_ACL2008_short.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.umiacs.umd.edu/~jimmylin/publications/Elsayed_etal_ACL2008_short.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;d be glad if someone could verify the applicability of this approach by running it with a reasonably large input, I&apos;m also worried that it might buffer to much data in certain steps.&lt;/p&gt;

&lt;p&gt;If you decide to include it in mahout, some more efforts and decisions (like more tests, more similarity measures, integration with DistributedRowMatrix) would need to be made, I guess.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12467213">MAHOUT-418</key>
            <summary>Computing the pairwise similarities of the rows of a matrix</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ssc">Sebastian Schelter</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Jun 2010 12:14:09 +0100</created>
                <updated>Sun, 31 Oct 2010 15:49:37 +0000</updated>
                            <resolved>Mon, 28 Jun 2010 10:43:01 +0100</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12880691" author="srowen" created="Mon, 21 Jun 2010 00:20:12 +0100"  >&lt;p&gt;Code looks OK to me. I think WeightedRowPair needs to implement equals() and hashCode()?&lt;/p&gt;

&lt;p&gt;Overall, are you moving code out of org.apache.mahout.cf.taste.hadoop.item.similarity into this more common package, and generalizing the code? Should we then expect that that other code will be removed? This would be better.&lt;/p&gt;

&lt;p&gt;yes would be good to get comments from Kris about whether this solves his problem before proceeding.&lt;/p&gt;</comment>
                            <comment id="12880757" author="ssc" created="Mon, 21 Jun 2010 10:21:12 +0100"  >&lt;p&gt;Attached a new patch including equals() and hashCode() for WeightedRowPair, thank you for pointing me to that.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure whether the code in o.a.m.cf.taste.hadoop.similarity should be removed by now. Although it is an implementation of the same algorithm as this patch here, there are some differences in the details. By merging them we would lose some optimizations in the cf-specific implementation but I agree with Sean that it is desirable to have the cf code use standard matrix operations.&lt;/p&gt;

&lt;p&gt;Differences between the two implementations:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;vectors use ints as indices, preferences use longs as IDs, so those IDs would need to be mapped to ints and back (I think the distributed recommender job is already doing that, so that shouldn&apos;t be a big problem)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;o.a.m.math.hadoop.similarity.RowSimilarityJob writes the whole result matrix to disk (although it should be symmetric and no information would be lost if only half of it was written) because we need the whole matrix to be available for following operations and integration into DistributedRowMatrix&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;o.a.m.cf.taste.hadoop.similarity.SimilarityJob automatically assumes the similarity of an item to itself as NaN (and doesn&apos;t compute it) whereas a similarity matrix created by RowSimilarityJob actively computes and includes these values (because it&apos;s a mathematical operation and should be agnostic of the fact that it&apos;s main use case is collaborative filtering)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A possible solution for the cf usecase (that would allow merging the implementations) would be to have the RowSimilarityJob do the computation and after that pick out only the matrix entries we&apos;re interested in in another M/R run.&lt;/p&gt;

&lt;p&gt;If you want it that way, I can implement that.&lt;/p&gt;</comment>
                            <comment id="12880902" author="srowen" created="Mon, 21 Jun 2010 18:23:07 +0100"  >&lt;p&gt;Let&apos;s see how far apart these two implementations are. It would be great to spend some time unifying them a bit, now, if there is no hurry to get a second implementation in.&lt;/p&gt;

&lt;p&gt;Yes, the recommender-specific job needs an additional phase at the start and end, to map from longs to ints and back. It does do this. This can remain. But once data is converted into vectors, the general code you are creating should be able to take over?&lt;/p&gt;

&lt;p&gt;Both implementations can write the whole matrix, and take the same approach to self-similarity. That is I think you are welcome to make them both assume the same thing. Just compute and store everything for good measure.&lt;/p&gt;

&lt;p&gt;If those are the only differences, it really seems like they are doing the same thing and this can be a move of code rather than copy. I think you should feel free to go this way, even if it requires change in other code. I can help adjust other code if it means some assumptions have changed.&lt;/p&gt;

&lt;p&gt;That way you are not burdened with maintaining two implementations. I think that makes &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-420&quot; title=&quot;Improving the distributed item-based recommender&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-420&quot;&gt;&lt;del&gt;MAHOUT-420&lt;/del&gt;&lt;/a&gt; easier.&lt;/p&gt;

&lt;p&gt;What do you think, are you keen to commit this, or open to pushing towards one implementation?&lt;/p&gt;</comment>
                            <comment id="12881141" author="ssc" created="Tue, 22 Jun 2010 10:34:21 +0100"  >&lt;p&gt;I think we should take the time and try to find a unified solution. You are right that maintaining two implementations of the same algorithm is not desirable and from my side there&apos;s no hurry to commit this.&lt;/p&gt;

&lt;p&gt;I propose the following decisions/assumptions for o.a.m.math.hadoop.similarity.RowSimilarityJob&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;similarity functions used must be symmetric&lt;/li&gt;
	&lt;li&gt;the whole matrix is written to disk&lt;/li&gt;
	&lt;li&gt;the similarity of a row to itself is always computed (making this job a usecase-agnostic mathematical operation)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Then o.a.m.cf.taste.hadoop.similarity.SimilarityJob could be reduced to do the following things:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;map the IDs to ints&lt;/li&gt;
	&lt;li&gt;create an item-user-matrix from the preferences&lt;/li&gt;
	&lt;li&gt;run o.a.m.math.hadoop.similarity.RowSimilarityJob&lt;/li&gt;
	&lt;li&gt;pick out the pairs of similar items from the resulting matrix (ignoring the similarity of an item to itself)&lt;/li&gt;
	&lt;li&gt;map the ints back to the IDs&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Do you think this is a viable way to go here?&lt;/p&gt;</comment>
                            <comment id="12881174" author="krisjack" created="Tue, 22 Jun 2010 12:33:43 +0100"  >&lt;p&gt;Hi Sebastian,&lt;/p&gt;

&lt;p&gt;I ran your latest patch on a set of 10,000,000+ documents and managed to get results being produced in less than 24 hours using 10 mapper and 10 reducers.  My documents have been made very sparse, eliminating any terms with a global frequency &amp;gt; 0.001% of all term frequencies.  I haven&apos;t been able to analyse the results systematically yet but they look good at a glimpse.  I think that this is a very valuable contribution to mahout, well done!&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Kris&lt;/p&gt;</comment>
                            <comment id="12881191" author="srowen" created="Tue, 22 Jun 2010 14:06:38 +0100"  >&lt;p&gt;Yes, sounds exactly right to me. I think it&apos;d be great if you could proceed along these lines.&lt;/p&gt;</comment>
                            <comment id="12882789" author="ssc" created="Sat, 26 Jun 2010 01:43:31 +0100"  >&lt;p&gt;Attached a patch that moves the mathematical operation (computation of all pairwise row similarities) to o.a.m.math and also modifies the item-item-similarity computation in the cf part in the way it was proposed.&lt;/p&gt;</comment>
                            <comment id="12882963" author="srowen" created="Sun, 27 Jun 2010 17:52:51 +0100"  >&lt;p&gt;I looked at it briefly and it seems OK. It&apos;s mostly moving code and generalizing. Am I right that all the original functionality you had is still there, just refactored? Then I&apos;m OK to commit. My last question is whether the methods in TasteHadoopUtils can be used elsewhere. there are several other classes that do similar things. We don&apos;t need a new patch to address that, can do it later. I will run tests and commit if it passes as it seems this is well-enough considered to go in.&lt;/p&gt;</comment>
                            <comment id="12882993" author="ssc" created="Sun, 27 Jun 2010 22:45:53 +0100"  >&lt;p&gt;You&apos;re right, the latest patch is actually a big code move and refactoring, all original functionality is still there. The methods in TasteHadoopUtils can be used in other classes too. I&apos;m looking forward to starting work on &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-420&quot; title=&quot;Improving the distributed item-based recommender&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-420&quot;&gt;&lt;del&gt;MAHOUT-420&lt;/del&gt;&lt;/a&gt; when this patch is commited &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12883274" author="hudson" created="Mon, 28 Jun 2010 21:21:57 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #104 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/104/&lt;/a&gt;)&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12447590" name="MAHOUT-418-2.patch" size="45328" author="ssc" created="Mon, 21 Jun 2010 10:19:39 +0100"/>
                            <attachment id="12448112" name="MAHOUT-418-3.patch" size="222494" author="ssc" created="Sat, 26 Jun 2010 01:43:11 +0100"/>
                            <attachment id="12447336" name="MAHOUT-418.patch" size="44981" author="ssc" created="Thu, 17 Jun 2010 12:16:27 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 20 Jun 2010 23:20:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9645</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy58n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23000</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>