<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:22:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-126/MAHOUT-126.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-126] Prepare document vectors from the text</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-126</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Clustering algorithms presently take the document vectors as input.  Generating these document vectors from the text can be broken in two tasks. &lt;/p&gt;

&lt;p&gt;1. Create lucene index of the input  plain-text documents &lt;br/&gt;
2. From the index, generate the document vectors (sparse) with weights as TF-IDF values of the term. With lucene index, this value can be calculated very easily. &lt;/p&gt;

&lt;p&gt;Presently, I have created two separate utilities, which could possibly be invoked from another class. &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12426652">MAHOUT-126</key>
            <summary>Prepare document vectors from the text</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="kshashi">Shashikant Kore</reporter>
                        <labels>
                    </labels>
                <created>Fri, 29 May 2009 08:51:22 +0100</created>
                <updated>Wed, 18 Nov 2009 14:05:54 +0000</updated>
                            <resolved>Mon, 29 Jun 2009 13:45:42 +0100</resolved>
                                    <version>0.2</version>
                                    <fixVersion>0.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12714348" author="dlwh" created="Fri, 29 May 2009 08:59:06 +0100"  >&lt;p&gt;I actually need something like this as well for LDA, except that I would prefer to be able to have the vectors not TF-IDF weighted. Could I get you to add some way of configuring that?&lt;/p&gt;</comment>
                            <comment id="12714351" author="kshashi" created="Fri, 29 May 2009 09:08:49 +0100"  >&lt;p&gt;Patch to create index and document vectors from text.&lt;/p&gt;</comment>
                            <comment id="12714356" author="kshashi" created="Fri, 29 May 2009 09:19:23 +0100"  >&lt;p&gt;David,&lt;/p&gt;

&lt;p&gt;Sorry, I don&apos;t have any background in LDA. Please take a look at the patch and suggest what changes are required in DocumentVector.getDocumentVector() method. I will do rest of the changes of configuration.&lt;/p&gt;</comment>
                            <comment id="12714362" author="dlwh" created="Fri, 29 May 2009 09:29:23 +0100"  >&lt;p&gt; Sure, I just want to be able to have:&lt;/p&gt;

&lt;p&gt; double weight = similarity.tf(termFreq) * similarity.idf(docFreq, numDocs);&lt;/p&gt;

&lt;p&gt;be this instead:&lt;/p&gt;

&lt;p&gt;double weight = termFreq&lt;/p&gt;

&lt;p&gt;based on some configuration or another. (Maybe if I can just pass in a custom &quot;Similarity&quot; object? Or there could be a protected method &quot;createSimilarity&quot; that I could override?)&lt;/p&gt;

&lt;p&gt;Basically, LDA wants raw counts (or at least, some kind of integers).&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12714401" author="gsingers" created="Fri, 29 May 2009 11:55:08 +0100"  >&lt;p&gt;Passing in a way to make a custom weight object makes sense&lt;/p&gt;</comment>
                            <comment id="12714414" author="gsingers" created="Fri, 29 May 2009 12:16:25 +0100"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1193&quot; title=&quot;Provide option for TermVectorComponent to provide a way of retrieving TV info around a position instead of the whole vector&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SOLR-1193&quot;&gt;&lt;del&gt;SOLR-1193&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;</comment>
                            <comment id="12714426" author="bmargulies" created="Fri, 29 May 2009 13:15:30 +0100"  >&lt;p&gt;This patch needs to explicitly manage the character set of the files it is reading. It uses FileReader without specifying a character set.&lt;/p&gt;</comment>
                            <comment id="12714434" author="bmargulies" created="Fri, 29 May 2009 13:27:42 +0100"  >&lt;p&gt;Improved patch. Allows specification of file character set. Applyable inside of eclipse.&lt;/p&gt;</comment>
                            <comment id="12714509" author="gsingers" created="Fri, 29 May 2009 17:55:30 +0100"  >&lt;p&gt;So just kind of brainstorming here, but I think we should create a separate Module for this kind of stuff, to keep out of core and give us some more flexibility in regards to dependencies, etc.&lt;/p&gt;

&lt;p&gt;Also (and I realize this is just a start patch), I think we should assume a Lucene index exists already instead of maintaining code to actually create an index.  There are a lot of ways to do that and people will likely have different fields, etc.  For instance, Solr can provide all of the capabilities here and it has distributed support, so it can scale.  Moreover, though, is people may have the info in a DB or in other places.  I realize we need baby steps, but...&lt;/p&gt;

&lt;p&gt;I&apos;ll try to post a patch this afternoon that takes this effort and melds it with some of my ideas for demo purposes.&lt;/p&gt;</comment>
                            <comment id="12714515" author="gsingers" created="Fri, 29 May 2009 18:11:17 +0100"  >&lt;p&gt;Shashikant,&lt;/p&gt;

&lt;p&gt;Couple of comments on the Lucene specific stuff, though, so that you guys can speed up what you have.&lt;/p&gt;

&lt;p&gt;First off, have a look at Lucene&apos;s support of TermVectorMapper.  Much like SAX, it gives you a call back mechanism such that you don&apos;t have to construct two different data structures (i.e. many people incorrectly use the DOM to parse XML and then extract out of the DOM into their own Data Structure when they should use SAX instead).&lt;/p&gt;

&lt;p&gt;You might have a look at the TermVectorComponent in Solr, as it pretty much does what you are looking to do in this patch and I believe it to be more efficient.&lt;/p&gt;

&lt;p&gt;Seems like we should be able to avoid caching the whole term list in memory.  At a minimum, if you are going to, allTerms should be a Map&amp;lt;String, Integer&amp;gt; that stores the term and it&apos;s DF (doc freq.), as you are currently doing the DF lookup twice, AFAICT.  DF lookup is expensive in Lucene.  If you don&apos;t cache the whole list, we should at least have an LRU cache for DF.&lt;/p&gt;</comment>
                            <comment id="12714693" author="gsingers" created="Sat, 30 May 2009 12:00:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;Seems like we should be able to avoid caching the whole term list in memory. At a minimum, if you are going to, allTerms should be a Map&amp;lt;String, Integer&amp;gt; that stores the term and it&apos;s DF (doc freq.), as you are currently doing the DF lookup twice, AFAICT. DF lookup is expensive in Lucene. If you don&apos;t cache the whole list, we should at least have an LRU cache for DF.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Never mind, I see why the list is cached.  Still, makes sense to cache the DF.&lt;/p&gt;</comment>
                            <comment id="12717741" author="gsingers" created="Tue, 9 Jun 2009 17:34:37 +0100"  >&lt;p&gt;Here&apos;s a first attempt at my thoughts based on the two previous patches, plus some other ideas.&lt;/p&gt;

&lt;p&gt;The main gist of the idea centers around the VectorIterable interface and is driven by the o.a.mahout.utils.vectors.Driver class.&lt;/p&gt;

&lt;p&gt;Note, I dropped the Lucene indexing part, as I don&apos;t think we need to be in the game of creating Lucene indexes.  That is a well known and well document process that is available elsewhere.  In fact, for this particular piece, I indexed Wikipedia in Solr and then pointed the Driver class at the Lucene index.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAHOUT/Creating+Vectors+from+Text&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAHOUT/Creating+Vectors+from+Text&lt;/a&gt; for details on using.&lt;/p&gt;</comment>
                            <comment id="12717742" author="gsingers" created="Tue, 9 Jun 2009 17:42:36 +0100"  >&lt;p&gt;Note, I haven&apos;t actually tried clustering just yet with the output!&lt;/p&gt;</comment>
                            <comment id="12719454" author="kshashi" created="Mon, 15 Jun 2009 09:20:28 +0100"  >&lt;p&gt;Grant, &lt;/p&gt;

&lt;p&gt;I went through the patch.  Compilation failed with following error.  &lt;br/&gt;
&quot;Driver.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;111,26&amp;#93;&lt;/span&gt; FSDirectory(java.io.File,org.apache.lucene.store.LockFactory) has protected access in org.apache.lucene.store.FSDirectory&quot;&lt;/p&gt;

&lt;p&gt;So, I haven&apos;t really run the code.&lt;/p&gt;

&lt;p&gt;Overall, the code looks good.  Now I understand TermVectorMapper. &lt;/p&gt;

&lt;p&gt;Should  VectorMapper be taken as an option? David had commented that he wants vectors with DF as weights. He could add, say DFMapper, to get desired weights. &lt;/p&gt;

&lt;p&gt;I think, document labelling (Mahout-65) also needs to in soon  because it will require chanes to this code.  Mostly those changes will reflect in LuceneIteratable. &lt;/p&gt;</comment>
                            <comment id="12719524" author="gsingers" created="Mon, 15 Jun 2009 12:32:49 +0100"  >&lt;p&gt;Yeah, still needs the labeling stuff.&lt;/p&gt;

&lt;p&gt;As for weights, you should be able to pass in a Weight object.  See the TFIDF implementation.  Likely still needs some work.&lt;/p&gt;

&lt;p&gt;As for the Lucene error, I thought I had updated the Lucene version to be 2.9-dev, which I believe makes this all right.&lt;/p&gt;</comment>
                            <comment id="12720303" author="gsingers" created="Tue, 16 Jun 2009 20:21:40 +0100"  >&lt;p&gt;We really need named Vectors to make this fly.&lt;/p&gt;</comment>
                            <comment id="12720304" author="gsingers" created="Tue, 16 Jun 2009 20:23:07 +0100"  >&lt;p&gt;Here&apos;s a version that is brought up to trunk and adds in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-65&quot; title=&quot;Add Element Labels to Vectors and Matrices&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-65&quot;&gt;&lt;del&gt;MAHOUT-65&lt;/del&gt;&lt;/a&gt;-name.patch to allow for labeling the vectors.&lt;/p&gt;

&lt;p&gt;Next, I&apos;m going to run the output through some clustering&lt;/p&gt;</comment>
                            <comment id="12720363" author="gsingers" created="Tue, 16 Jun 2009 22:37:40 +0100"  >&lt;p&gt;Updated patch since &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-65&quot; title=&quot;Add Element Labels to Vectors and Matrices&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-65&quot;&gt;&lt;del&gt;MAHOUT-65&lt;/del&gt;&lt;/a&gt;-name.patch was committed.&lt;/p&gt;</comment>
                            <comment id="12720686" author="gsingers" created="Wed, 17 Jun 2009 15:22:36 +0100"  >&lt;p&gt;Committed revision 785618.&lt;/p&gt;</comment>
                            <comment id="12720816" author="dlwh" created="Wed, 17 Jun 2009 19:32:32 +0100"  >&lt;p&gt;LuceneIteratable (is that an intentional pun?) has behavior that isn&apos;t documented well. Namely, if the normless constructor is called, the norm defaults to 2.&lt;/p&gt;

&lt;p&gt;This has the consequence that not passing in a norm to Driver L2 normalizes the vectors. You have to specify a negative double != -1.0 to get unnormalized counts. Relatedly, -1 maps to the L2 norm. This is odd behavior to me, or it should at least be documented. (The wiki article implies there&apos;s a difference between using --norm 2 and using no norm at all.)&lt;/p&gt;

&lt;p&gt;Also, I&apos;d like an option to tell Driver what weight object to use. I can do the patch for this.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12720824" author="gsingers" created="Wed, 17 Jun 2009 19:43:41 +0100"  >&lt;p&gt;Agreed about the weirdness on the default norms.  Yeah, patch would be great. &lt;/p&gt;</comment>
                            <comment id="12720878" author="dlwh" created="Wed, 17 Jun 2009 21:32:00 +0100"  >&lt;p&gt;Ok, here&apos;s the patch for normalization. other one forthcoming.&lt;/p&gt;

&lt;p&gt;Also, I&apos;m getting null pointers out of VectorMapper after building an index using Lucene&apos;s demo indexer. I&apos;m going to follow the solr instructions and see if I have better luck.&lt;/p&gt;</comment>
                            <comment id="12720880" author="gsingers" created="Wed, 17 Jun 2009 21:36:08 +0100"  >&lt;blockquote&gt;&lt;p&gt;Also, I&apos;m getting null pointers out of VectorMapper after building an index using Lucene&apos;s demo indexer. I&apos;m going to follow the solr instructions and see if I have better luck.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This stuff requires Term Vectors to be enabled in the Lucene index.&lt;/p&gt;</comment>
                            <comment id="12720882" author="gsingers" created="Wed, 17 Jun 2009 21:39:37 +0100"  >&lt;p&gt;Also, I don&apos;t use git, is there a way to produce a patch that is consumable by the patch utility, or provide the options needed to run. &lt;/p&gt;

&lt;p&gt;In SVN, I do:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
svn diff &amp;gt; ../mypatch.patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then apply as:&lt;br/&gt;
patch -p 0 -i ../mypatch.patch&lt;/p&gt;
</comment>
                            <comment id="12720896" author="dlwh" created="Wed, 17 Jun 2009 22:08:10 +0100"  >&lt;p&gt;My bad. git-format-patch formats an email that has a patch (sigh) and not a patch itself. &lt;/p&gt;

&lt;p&gt;Run the command you pasted on the new patch.&lt;/p&gt;</comment>
                            <comment id="12720910" author="dlwh" created="Wed, 17 Jun 2009 22:30:49 +0100"  >&lt;p&gt;This patch contains an implementation of a TF weight, and it adds the --weight option to Driver to support its use. Default is TFIDF. An error is thrown on input besides TFIDF or TF.&lt;/p&gt;</comment>
                            <comment id="12720931" author="gsingers" created="Wed, 17 Jun 2009 23:01:30 +0100"  >&lt;p&gt;I committed the no-norm thing with some slight mods, since it is not merely valid to check to see if NO_NORMALIZATION since a value &amp;lt; 0 is not valid.&lt;/p&gt;</comment>
                            <comment id="12721068" author="dlwh" created="Thu, 18 Jun 2009 06:17:09 +0100"  >&lt;p&gt;Ok, I&apos;m probably misunderstanding something, or there could be a bug. I modified Lucene&apos;s demo indexer to store a term vector. It&apos;s still crashing. I added a series of printlns before TermVector.java:65 and CachedTermInfo:71, and I end up with the assertion here failing:&lt;/p&gt;

&lt;p&gt;{{&lt;br/&gt;
 @Override&lt;br/&gt;
  public TermEntry getTermEntry(String field, String term) {&lt;br/&gt;
    if (this.field.equals(field) == false)&lt;/p&gt;
{ return null;}
&lt;p&gt;    TermEntry ret =  termEntries.get(term);&lt;br/&gt;
    assert(ret != null); // This assertion is firing.&lt;br/&gt;
    return ret;&lt;br/&gt;
  }&lt;br/&gt;
}}&lt;/p&gt;

&lt;p&gt;In my dataset, this happens after several hundred iterations. The term is a stop-word for the corpus in question, and it looks like there&apos;s an attempt at stopwording earlier in the file. Maybe these are not interacting well?&lt;/p&gt;

&lt;p&gt;&amp;#8211; David&lt;/p&gt;</comment>
                            <comment id="12721070" author="dlwh" created="Thu, 18 Jun 2009 06:22:33 +0100"  >&lt;p&gt;I&apos;m going to assume that&apos;s the problem. The attached patch just skips over any null term vectors. It seems like reasonable behavior here, given the filtering.&lt;/p&gt;
</comment>
                            <comment id="12721215" author="gsingers" created="Thu, 18 Jun 2009 13:07:59 +0100"  >&lt;p&gt;Hey David,&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what&apos;s going on here, because that value being null means the term is not the index, yet is in the Term Vector for that doc.  Are you sure you&apos;re loading the same field?  Can you share the indexing code?&lt;/p&gt;

&lt;p&gt;This fix works, though, but I&apos;d like to know at a deeper level what&apos;s going on.&lt;/p&gt;</comment>
                            <comment id="12721346" author="dlwh" created="Thu, 18 Jun 2009 18:12:24 +0100"  >&lt;p&gt;That&apos;s not the only time. This constructor clearly lets certain things slip through.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; CachedTermInfo(IndexReader reader, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; field, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; minDf, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; maxDfPercent) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.field = field;
    TermEnum te = reader.terms(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Term(field, &quot;&quot;));
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = 0;
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numDocs = reader.numDocs();
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; percent = numDocs * maxDfPercent / 100.0;
    &lt;span class=&quot;code-comment&quot;&gt;//Should we use a linked hash map so that we no terms are in order?
&lt;/span&gt;    termEntries = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, TermEntry&amp;gt;();
    &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
      Term term = te.term();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (term == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || term.field().equals(field) == &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;){
        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
      }
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; df = te.docFreq();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (df &amp;lt; minDf || df &amp;gt; percent){
        &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
      }
      TermEntry entry = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TermEntry(term.text(), count++, df);
      termEntries.put(entry.term, entry);
    } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (te.next());
    te.close();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My code is essentially Lucene&apos;s demo indexing code (IndexFiles.java and FileDocument.java: &lt;a href=&quot;http://google.com/codesearch/p?hl=en&amp;amp;sa=N&amp;amp;cd=1&amp;amp;ct=rc#uGhWbO8eR20/trunk/src/demo/org/apache/lucene/demo/FileDocument.java&amp;amp;q=org.apache.lucene.demo.IndexFiles&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://google.com/codesearch/p?hl=en&amp;amp;sa=N&amp;amp;cd=1&amp;amp;ct=rc#uGhWbO8eR20/trunk/src/demo/org/apache/lucene/demo/FileDocument.java&amp;amp;q=org.apache.lucene.demo.IndexFiles&lt;/a&gt;&lt;br/&gt;
} except that I replaced&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;contents&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileReader(f)));&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;contents&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileReader(f),Field.TermVector.YES));&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then ran &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; java -cp &amp;lt;classpath&amp;gt; org.apache.lucene.demo.IndexFiles /Users/dlwh/txt-reuters/ &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; java -cp &amp;lt;classpath&amp;gt; org.apache.mahout.utils.vectors.Driver --dir /Users/dlwh/src/lucene/index/ --output ~/src/vec-reuters -f contents -t /Users/dlwh/dict --weight TF &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For what&apos;s it worth, it gives a null on &quot;reuters&quot;, which is not usually a stop word, except that every single document ends with it, and so the IDF filtering above is catching it.&lt;/p&gt;
</comment>
                            <comment id="12721351" author="gsingers" created="Thu, 18 Jun 2009 18:18:47 +0100"  >&lt;p&gt;Yep, you are right.  I committed your patch anyway.  We probably should add to the cmd line to support setting minDF, maxDF.&lt;/p&gt;</comment>
                            <comment id="12725152" author="gsingers" created="Mon, 29 Jun 2009 13:45:42 +0100"  >&lt;p&gt;I think this is in pretty good shape for now, can open new issues to deal with specific problems.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12399674">MAHOUT-65</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12398739">MAHOUT-61</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12410984" name="MAHOUT-126-TF.patch" size="4051" author="dlwh" created="Wed, 17 Jun 2009 22:30:49 +0100"/>
                            <attachment id="12410980" name="MAHOUT-126-no-normalization.patch" size="1207" author="dlwh" created="Wed, 17 Jun 2009 22:08:10 +0100"/>
                            <attachment id="12410975" name="MAHOUT-126-no-normalization.patch" size="1546" author="dlwh" created="Wed, 17 Jun 2009 21:32:00 +0100"/>
                            <attachment id="12411028" name="MAHOUT-126-null-entry.patch" size="829" author="dlwh" created="Thu, 18 Jun 2009 06:22:33 +0100"/>
                            <attachment id="12410854" name="MAHOUT-126.patch" size="41746" author="gsingers" created="Tue, 16 Jun 2009 22:37:40 +0100"/>
                            <attachment id="12410844" name="MAHOUT-126.patch" size="51118" author="gsingers" created="Tue, 16 Jun 2009 20:23:07 +0100"/>
                            <attachment id="12410234" name="MAHOUT-126.patch" size="42467" author="gsingers" created="Tue, 9 Jun 2009 17:34:37 +0100"/>
                            <attachment id="12409353" name="MAHOUT-126.patch" size="10244" author="kshashi" created="Fri, 29 May 2009 09:08:49 +0100"/>
                            <attachment id="12409372" name="mahout-126-benson.patch" size="11242" author="bmargulies" created="Fri, 29 May 2009 13:27:42 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 29 May 2009 07:59:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9939</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy71j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23292</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>