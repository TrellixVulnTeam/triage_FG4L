<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:20:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-185/MAHOUT-185.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-185] Add mahout shell script for easy launching of various algorithms</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-185</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Currently, Each algorithm has a different point of entry. At its too complicated to understand and launch each one.  A mahout shell script needs to be made in the bin directory which does something like the following&lt;/p&gt;

&lt;p&gt;mahout classify -algorithm bayes &lt;span class=&quot;error&quot;&gt;&amp;#91;OPTIONS&amp;#93;&lt;/span&gt;&lt;br/&gt;
mahout cluster -algorithm canopy  &lt;span class=&quot;error&quot;&gt;&amp;#91;OPTIONS&amp;#93;&lt;/span&gt;&lt;br/&gt;
mahout fpm -algorithm pfpgrowth &lt;span class=&quot;error&quot;&gt;&amp;#91;OPTIONS&amp;#93;&lt;/span&gt;&lt;br/&gt;
mahout taste -algorithm slopeone &lt;span class=&quot;error&quot;&gt;&amp;#91;OPTIONS&amp;#93;&lt;/span&gt; &lt;br/&gt;
mahout misc -algorithm createVectorsFromText &lt;span class=&quot;error&quot;&gt;&amp;#91;OPTIONS&amp;#93;&lt;/span&gt;&lt;br/&gt;
mahout examples WikipediaExample&lt;/p&gt;</description>
                <environment>&lt;p&gt;linux, bash&lt;/p&gt;</environment>
        <key id="12437386">MAHOUT-185</key>
            <summary>Add mahout shell script for easy launching of various algorithms</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robinanil">Robin Anil</assignee>
                                    <reporter username="robinanil">Robin Anil</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Oct 2009 13:59:31 +0100</created>
                <updated>Sat, 21 May 2011 04:24:14 +0100</updated>
                            <resolved>Fri, 12 Feb 2010 13:57:58 +0000</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12795991" author="srowen" created="Sun, 3 Jan 2010 15:51:00 +0000"  >&lt;p&gt;I like the idea. Is there any elaboration or movement on this?&lt;/p&gt;

&lt;p&gt;I wonder to what extent we can make every &quot;thing&quot; in Mahout a command-line program? For example the CF bits aren&apos;t quite like that. Well, you could make about 15 different sets of args for the 15 different variations of a CF algorithm. Or you could make some general framework for taking a class with main() and args, but then we approach just reproducing &quot;java&quot;. &lt;/p&gt;

&lt;p&gt;And then there are the Hadoop-related versions of everything, which already provide a &quot;Job&quot; class or &quot;Driver&quot; class to run it from the command line. It might be undesirable to duplicate this.&lt;/p&gt;</comment>
                            <comment id="12797233" author="jake.mannix" created="Wed, 6 Jan 2010 18:38:39 +0000"  >&lt;p&gt;As a note on this:  one of the things I&apos;ve sometimes done (and we do for managing our Hadoop jobs at LinkedIn) to make dealing with messy CLI stuff more managable, is to also allow for Properties files with default arguments for various jobs (makes for much more easily reproducible results, and it&apos;s self documenting - just have &quot;mahout classify&quot; look first in classify.props to see if default args are defined, go from there...).&lt;/p&gt;

&lt;p&gt;Using a base class like hadoop&apos;s Tool, you can leverage ToolRunner and GenericOptionsParser as well, and then hooking in a Properties-based way to run it as well makes it pretty flexible.&lt;/p&gt;

&lt;p&gt;It would be really nice to consolidate all of our Driver/Job classes into this issue, so that it&apos;s a) not duplicated, but b) in one place.  &lt;/p&gt;

&lt;p&gt;This issue should get some priority - it will seriously help with our usability if there&apos;s an easy way to launch all the various tasks from one simple place.  I&apos;d love to have a little jruby script to run some of this stuff too, because when I was first writing decomposer, I found it invaluable to be able to just drop into jirb&apos;s REPL and start issuing java commands to run the various Hadoop jobs I was testing.&lt;/p&gt;</comment>
                            <comment id="12797277" author="tdunning" created="Wed, 6 Jan 2010 19:51:20 +0000"  >&lt;p&gt;Regarding the properties file idea, I have had very good luck with a convention that I now use pretty ubiquitously.  Each application has a default properties file that is baked into the jar file.  This allows slow changes subject to recompilation.  All of these default properties are subject to over-ride in an external property file found in the class path or the current working directory.  These over-rides are monitored for changes to allow on-the-fly reconfiguration of long-running processes.&lt;/p&gt;

&lt;p&gt;For transaction systems (not Mahout-like stuff), I also allow requests to contain an additional over-ride map of properties.  This allows certain things to be changed on a request by request basis.  This helps enormously because it allows almost anything to be the subject of A/B testing.&lt;/p&gt;

</comment>
                            <comment id="12801184" author="drew.farris" created="Sat, 16 Jan 2010 15:14:59 +0000"  >&lt;p&gt;This patch adds bin/mahout, a simple bash script based heavily on similar scripts found in hadoop and nutch. Doesn&apos;t follow Robin&apos;s original spec to the letter, but perhaps this is a reasonable start upon which we can build. &lt;/p&gt;

&lt;p&gt;I really put this together because I&apos;m tired of typing &apos;mvn exec:java -D &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&apos; all the time. &lt;/p&gt;

</comment>
                            <comment id="12830077" author="robinanil" created="Fri, 5 Feb 2010 12:05:26 +0000"  >&lt;p&gt;I like the script as i am running k-means these days &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;vectordump&quot;&lt;/span&gt; ] ; then
  CLASS=org.apache.mahout.utils.vectors.VectorDumper
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;clusterdump&quot;&lt;/span&gt; ] ; then
  CLASS=org.apache.mahout.utils.clustering.ClusterDumper
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;seqdump&quot;&lt;/span&gt; ] ; then
  CLASS=org.apache.mahout.utils.SequenceFileDumper
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;kmeans&quot;&lt;/span&gt; ] ; then
  CLASS=org.apache.mahout.clustering.kmeans.KMeansDriver
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;canopy&quot;&lt;/span&gt; ] ; then
  CLASS=org.apache.mahout.clustering.canopy.CanopyDriver
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;lucenevector&quot;&lt;/span&gt; ]; then
  CLASS=org.apache.mahout.utils.vectors.lucene.Driver
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;seqdirectory&quot;&lt;/span&gt; ]; then
  CLASS=org.apache.mahout.text.SequenceFilesFromDirectory
elif [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$COMMAND&quot;&lt;/span&gt; = &lt;span class=&quot;code-quote&quot;&gt;&quot;seqwiki&quot;&lt;/span&gt; ]; then
  CLASS=org.apache.mahout.text.WikipediaToSequenceFile
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we go like this we might have too many options. Any way to streamline this ?&lt;/p&gt;

&lt;p&gt;One thought i have is to have package level Main classes in Core like org.apache.mahout.Clustering.java which internally calls the different main functions ?&lt;br/&gt;
Similarly in examples and util we can keep One Entry class each Examples.java and Util.java&lt;/p&gt;

&lt;p&gt;So with this limited set we can keep a global conf object which implements Tool and the fs object which is the default filesystem as specified by the conf&lt;br/&gt;
This way each algorithm can request a conf object (which copies everything Tool has set)&lt;br/&gt;
How does that sound? I can whip up all the main classes tonight&lt;/p&gt;








</comment>
                            <comment id="12831954" author="srowen" created="Wed, 10 Feb 2010 11:41:49 +0000"  >&lt;p&gt;This timed out for 0.3 methinks&lt;/p&gt;</comment>
                            <comment id="12832239" author="jake.mannix" created="Wed, 10 Feb 2010 22:13:09 +0000"  >&lt;p&gt;Why don&apos;t we just commit the shell script and close this for now - it&apos;s useful as is.  &lt;/p&gt;

&lt;p&gt;We can open another ticket for 0.4 around doing something more around the lines that Robin mentions above (which I&apos;ve got partially complete on my local git repo).&lt;/p&gt;</comment>
                            <comment id="12832626" author="gsingers" created="Thu, 11 Feb 2010 18:52:10 +0000"  >&lt;p&gt;Looks like a good start.  Longer term, we might want to integrate launching EC2, etc.: &lt;a href=&quot;http://openbixo.org/documentation/running-bixo-in-ec2/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openbixo.org/documentation/running-bixo-in-ec2/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12832627" author="gsingers" created="Thu, 11 Feb 2010 18:52:37 +0000"  >&lt;p&gt;I&apos;ll take it.&lt;/p&gt;</comment>
                            <comment id="12832661" author="gsingers" created="Thu, 11 Feb 2010 19:43:23 +0000"  >&lt;p&gt;Committed revision 909120.&lt;/p&gt;</comment>
                            <comment id="12837129" author="robinanil" created="Tue, 23 Feb 2010 07:57:11 +0000"  >&lt;p&gt;Moving fixed issues to 0.3. If further work is required, will open a new one for 0.4&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12430512" name="MAHOUT-185.patch" size="5384" author="drew.farris" created="Sat, 16 Jan 2010 15:14:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 3 Jan 2010 15:51:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9880</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy6of:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23233</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>