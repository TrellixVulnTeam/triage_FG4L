<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:24:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-768/MAHOUT-768.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-768] Duplicated DoubleFunction in mahout and mahout-collections (mahout.math package).</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-768</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;DoubleFunction is duplicated in Mahout Math and Collections. There are also other things inside m.math.* package that are kept there to avoid circular dependencies... Simply removing DoubleFunction from collections is not going to work because it is needed for compilation (again, circular dependency between collections and math). I see two solutions:&lt;/p&gt;

&lt;p&gt;1) extract the common definitions inside math.function.* into a separate module. This is a clean solution, but obviously scatters the code even further.&lt;/p&gt;

&lt;p&gt;2) create a compilation-time, optional dependency on mahout 0.5 in collections, remove the entire mahout.math.* subpackage from collections and live with this. I don&apos;t know how Maven handles circular dependencies of this type:&lt;/p&gt;

&lt;p&gt;collections &lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;optional, required at build time&amp;#93;&lt;/span&gt; mahout.math 0.5&lt;br/&gt;
mahout.math &lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt; -&amp;gt; collections &lt;span class=&quot;error&quot;&gt;&amp;#91;trunk&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;it seems tricky and error-prone, but should also work.&lt;/p&gt;

&lt;p&gt;Looking for other ideas of cleaning this mess up, of course.&lt;br/&gt;
Dawid&lt;/p&gt;</description>
                <environment></environment>
        <key id="12515181">MAHOUT-768</key>
            <summary>Duplicated DoubleFunction in mahout and mahout-collections (mahout.math package).</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tdunning">Ted Dunning</assignee>
                                    <reporter username="dweiss">Dawid Weiss</reporter>
                        <labels>
                    </labels>
                <created>Sun, 24 Jul 2011 08:38:43 +0100</created>
                <updated>Sat, 16 Jun 2012 10:35:23 +0100</updated>
                            <resolved>Mon, 4 Jun 2012 14:47:04 +0100</resolved>
                                    <version>0.5</version>
                    <version>collections-1.0</version>
                                    <fixVersion>0.7</fixVersion>
                                    <component>collections</component>
                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13070228" author="tdunning" created="Sun, 24 Jul 2011 19:56:49 +0100"  >&lt;p&gt;We can also move all the function definitions into collections.  It isn&apos;t that bad to do this.&lt;/p&gt;
</comment>
                            <comment id="13070230" author="srowen" created="Sun, 24 Jul 2011 20:05:30 +0100"  >&lt;p&gt;There&apos;s a third option, perhaps: put collections back into math. I suggest it since &apos;collections&apos; is rather stranded as a separate release. The idea was to make it more reusable apart from Mahout, but it isn&apos;t for reasons like this.&lt;/p&gt;

&lt;p&gt;I&apos;d prefer not to move all this out of math as it makes some sense there, I think that was the intent, and that&apos;s where people are looking for it. Really I mean I prefer the simplest solution.&lt;/p&gt;</comment>
                            <comment id="13070233" author="tdunning" created="Sun, 24 Jul 2011 20:17:39 +0100"  >&lt;p&gt;I can see it several ways.&lt;/p&gt;

&lt;p&gt;Merging collections and math is a fine idea, especially if we aren&apos;t going to replace collections any time soon.&lt;/p&gt;

&lt;p&gt;If we are going to replace collections, then moving all such functions into math is a fine thing.&lt;/p&gt;

&lt;p&gt;Moving the functions into collections is also not so bad since applying functions to collections actually makes a lot of sense.&lt;/p&gt;

&lt;p&gt;My tendency would be the merge.  It is the simplest course.  The only veto would be external users who don&apos;t want that.&lt;/p&gt;</comment>
                            <comment id="13070238" author="dweiss" created="Sun, 24 Jul 2011 20:56:23 +0100"  >&lt;p&gt;We actually wanted to get rid of (colt) collections in Carrot2 entirely, so it&apos;s a -1 for merging from me, but for very selfish reasons &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Can your both (Sean, Ted) ideas be married by keeping stub function interfaces in mahout.math and having them extend method-equivalent counterparts in collections? This wouldn&apos;t break backward compatibility (I believe) and then collections could have its own functions and procedures (in its own package).&lt;/p&gt;</comment>
                            <comment id="13070239" author="srowen" created="Sun, 24 Jul 2011 21:01:14 +0100"  >&lt;p&gt;It would just mean you depend on this math-collections module; in fact, according to this issue you already do. You don&apos;t have to use the math bits. It doesn&apos;t bring much else in for dependencies.&lt;/p&gt;

&lt;p&gt;Doesn&apos;t this suggestion just get back to the original problem of a circular dependency? &lt;/p&gt;</comment>
                            <comment id="13070240" author="dweiss" created="Sun, 24 Jul 2011 21:14:07 +0100"  >&lt;p&gt;Ah.. we may or may not. We currently use bits and pieces of math that don&apos;t require collections at runtime (so we can exclude them in maven poms and not ship them at all). But you&apos;re right in that if anything needs DoubleFunction then we&apos;d be back in the same position anyway. Oh well, up to you then &amp;#8211; I can live with the merge, although it&apos;s a size-heavy addition to math and if it can be avoided, I&apos;d be all for it.&lt;/p&gt;</comment>
                            <comment id="13070252" author="tdunning" created="Sun, 24 Jul 2011 22:11:22 +0100"  >&lt;p&gt;-1 from me on merging based on the emergence of Carrot as a user.&lt;/p&gt;

&lt;p&gt;My second position would be that moving the functions down into collections would be &lt;br/&gt;
simpler than stubs or any other version.  There is no reason that math has to be&lt;br/&gt;
where the definitions are.  This will require a new release of collections, but &lt;br/&gt;
that is pretty easy.&lt;/p&gt;</comment>
                            <comment id="13070255" author="srowen" created="Sun, 24 Jul 2011 22:18:12 +0100"  >&lt;p&gt;OK sounds fine to me &amp;#8211; moving those interfaces to collections.&lt;/p&gt;</comment>
                            <comment id="13070258" author="dweiss" created="Sun, 24 Jul 2011 22:25:15 +0100"  >&lt;p&gt;Thanks guys!&lt;/p&gt;</comment>
                            <comment id="13175947" author="jeastman" created="Mon, 26 Dec 2011 15:14:28 +0000"  >&lt;p&gt;Looks like the DoubleFunction interface was moved to collections but remains in math. Can this issue be resolved and closed by 0.6 cutoff?&lt;/p&gt;</comment>
                            <comment id="13176018" author="tdunning" created="Mon, 26 Dec 2011 21:36:11 +0000"  >&lt;p&gt;Dawid,&lt;/p&gt;

&lt;p&gt;Why is there a problem with having some functional application stuff in Collections?&lt;/p&gt;

&lt;p&gt;WHy not push all duplicates back to Collections?&lt;/p&gt;</comment>
                            <comment id="13176022" author="dweiss" created="Mon, 26 Dec 2011 21:43:18 +0000"  >&lt;p&gt;The original problem for us was when we were post-processing binaries and detected a class clash between mahout collections and mahout-math (duplicated class). This was what prompted the request to move it in either one or the other direction with the preference of keeping classes in mahout-math because it is much smaller and doesn&apos;t trigger an import dependency on collections (if you&apos;re just using mahout math a dependency on the entire collections is a size killer).&lt;/p&gt;

&lt;p&gt;I admit it&apos;s been a while and I&apos;d have to re-evaluate on the proposed solutions to the problem, but I will also live with whatever you can come up with... having identical namespace duplicates is not a good idea so I&apos;d move it in either package and change dependencies accordingly?&lt;/p&gt;</comment>
                            <comment id="13176037" author="tdunning" created="Mon, 26 Dec 2011 22:26:53 +0000"  >&lt;blockquote&gt;
&lt;p&gt;This was what prompted the request to move it in either one or the other direction with the preference of keeping classes in mahout-math because it is much smaller and doesn&apos;t trigger an import dependency on collections (if you&apos;re just using mahout math a dependency on the entire collections is a size killer).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think that mahout-math works without collections because all of the sparse matrix stuff is totally dependent on collections.&lt;/p&gt;</comment>
                            <comment id="13176045" author="dweiss" created="Mon, 26 Dec 2011 23:05:02 +0000"  >&lt;p&gt;We use it selectively and the parts that we do use don&apos;t rely on collections. Like I said, this is not a crucial issue (we can exclude one of the duplicates manually), but I think it&apos;d be nice to remove the duplication nonetheless as it may be confusing.&lt;/p&gt;</comment>
                            <comment id="13179604" author="gsingers" created="Wed, 4 Jan 2012 16:24:29 +0000"  >&lt;p&gt;What&apos;s the status on this?  Can we get this fixed and closed out?&lt;/p&gt;</comment>
                            <comment id="13179913" author="dweiss" created="Wed, 4 Jan 2012 21:39:10 +0000"  >&lt;p&gt;The problem is no solution that I mentioned seems to be convenient &amp;#8211; some require re-release of Mahout Collections (nah...), some involve circular dependency nightmares.&lt;/p&gt;

&lt;p&gt;I suggest we just leave it as-is and mark as not-fixed. I&apos;ll live with this duplication.&lt;/p&gt;</comment>
                            <comment id="13182259" author="gsingers" created="Sun, 8 Jan 2012 18:03:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;some require re-release of Mahout Collections (nah...)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, we are about to do a new release.  Releasing a new Mahout Collections would fit right in, so I don&apos;t see it as a big deal.  Frankly, it seems to me the need to manage Collections separately has largely proven to have been premature.  I&apos;d suggest we just fold it back in to our main dev (although we can keep the version number if we want)&lt;/p&gt;</comment>
                            <comment id="13182263" author="srowen" created="Sun, 8 Jan 2012 18:32:32 +0000"  >&lt;p&gt;I agree with merging back. &lt;/p&gt;</comment>
                            <comment id="13182265" author="dweiss" created="Sun, 8 Jan 2012 18:41:20 +0000"  >&lt;p&gt;I like the idea of merging back. It would be simpler to release simultaneously and apply fixes (such as this one). &lt;/p&gt;</comment>
                            <comment id="13188520" author="jeastman" created="Wed, 18 Jan 2012 16:00:23 +0000"  >&lt;p&gt;Can this issue be resolved soon or moved to 0.7?&lt;/p&gt;</comment>
                            <comment id="13188605" author="dweiss" created="Wed, 18 Jan 2012 18:43:43 +0000"  >&lt;p&gt;Err... I must have forgotten to attach a comment to jira for some reason. Anyway, removing DoubleFunction from mahout.math works for me (the tests pass at least) because math is dependent on collections anyway. This is not a perfect solution, but it is a solution &amp;#8211; remove the duplicate DoubleFunction from m.math.&lt;/p&gt;

&lt;p&gt;In the long run I&apos;d vote for merging back collections. The fact certain classes reside in the same package namespace seems to indicate they&apos;re tightly coupled anyway.&lt;/p&gt;</comment>
                            <comment id="13189690" author="jeastman" created="Fri, 20 Jan 2012 08:19:08 +0000"  >&lt;p&gt;Given the above discussion, I&apos;m moving this issue to 0.7. Seems to me, removing DoubleFunction from mahout.math is more of a hygiene fix and that merging collections back into dev is the consensus solution. This is clearly out of scope for 0.6.&lt;/p&gt;</comment>
                            <comment id="13274833" author="tdunning" created="Mon, 14 May 2012 19:33:31 +0100"  >&lt;p&gt;I will get this one as part of merging math and mahout-collections&lt;/p&gt;</comment>
                            <comment id="13275157" author="tdunning" created="Tue, 15 May 2012 04:36:45 +0100"  >&lt;p&gt;I have a monster patch for this that I have pushed to github.  &lt;/p&gt;

&lt;p&gt;This patch removes the collections dependency and incorporates all of collections into math.  It also removes a dozen or two deprecated matrix classes.&lt;/p&gt;

&lt;p&gt;I am having trouble uploading the patch just now, but you can review the changes here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tdunning/mahout/commit/e979f5c82de39da1a9985b9ee606afc86725279d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/tdunning/mahout/commit/e979f5c82de39da1a9985b9ee606afc86725279d&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The patch will be here shortly (JIRA willing).&lt;/p&gt;</comment>
                            <comment id="13275257" author="dweiss" created="Tue, 15 May 2012 09:05:05 +0100"  >&lt;p&gt;Thanks for working on this, Ted. JIRA was offline for maintenance yesterday (and had some perf. problems before).&lt;/p&gt;</comment>
                            <comment id="13276670" author="tdunning" created="Wed, 16 May 2012 12:31:57 +0100"  >&lt;p&gt;I committed this big patch in the absence of commentary.&lt;/p&gt;

&lt;p&gt;Mahout collections is unchanged, but Mahout math no longer depends on it.&lt;/p&gt;

&lt;p&gt;Dawid, if this is a problem, can you file a new bug against collections alone?&lt;/p&gt;</comment>
                            <comment id="13276673" author="dweiss" created="Wed, 16 May 2012 12:37:33 +0100"  >&lt;p&gt;I have a conference this week but I&apos;ll try to revisit the original issue we had and will provide feedback (or file a new issue).&lt;/p&gt;</comment>
                            <comment id="13276738" author="hudson" created="Wed, 16 May 2012 14:43:51 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1487 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1487/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1487/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-768&quot; title=&quot;Duplicated DoubleFunction in mahout and mahout-collections (mahout.math package).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-768&quot;&gt;&lt;del&gt;MAHOUT-768&lt;/del&gt;&lt;/a&gt; - Merge collections into math. (Revision 1339121)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tdunning : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1339121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1339121&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/math/pom.xml&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/function/ValueTypeComparator.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/list/AbstractValueTypeList.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/list/ValueTypeArrayList.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/AbstractKeyTypeValueTypeMap.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/AbstractObjectValueTypeMap.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMap.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenKeyTypeValueTypeHashMap.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/set/AbstractKeyTypeSet.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/set/OpenKeyTypeHashSet.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/collections&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/collections/Arithmetic.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/collections/Constants.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/Arrays.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/GenericPermuting.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/PersistentObject.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/Sorting.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/Swapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/function/DoubleFunction.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/function/FloatFunction.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/function/Functions.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/function/ObjectObjectProcedure.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/function/ObjectProcedure.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/function/package.html&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/list&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/list/AbstractList.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/list/AbstractObjectList.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/list/ObjectArrayList.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/list/SimpleLongArrayList.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/list/package.html&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/map&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/map/HashFunctions.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/map/OpenHashMap.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/map/PrimeFinder.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/map/QuickOpenIntIntHashMap.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/map/package.html&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/DoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/DoubleMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/AbstractMatrix.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/AbstractMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/AbstractMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/DelegateDoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/DenseDoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/DenseDoubleMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/SelectedDenseDoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/SelectedDenseDoubleMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/SelectedSparseDoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/SelectedSparseDoubleMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/SparseDoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/SparseDoubleMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/WrapperDoubleMatrix1D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/WrapperDoubleMatrix2D.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/impl/package-info.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/matrix/linalg/Property.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/package.html&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/set&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/set/AbstractSet.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/set/OpenHashSet.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13276852" author="tdunning" created="Wed, 16 May 2012 17:18:20 +0100"  >&lt;p&gt;Tests failed due to collections dependency at the top level.&lt;/p&gt;</comment>
                            <comment id="13277256" author="hudson" created="Thu, 17 May 2012 00:20:44 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1489 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1489/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1489/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-768&quot; title=&quot;Duplicated DoubleFunction in mahout and mahout-collections (mahout.math package).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-768&quot;&gt;&lt;del&gt;MAHOUT-768&lt;/del&gt;&lt;/a&gt; - Fixed dependencies at top-level and in distribution. (Revision 1339406)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tdunning : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1339406&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1339406&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/distribution/pom.xml&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13288216" author="gsingers" created="Sun, 3 Jun 2012 18:57:03 +0100"  >&lt;p&gt;Ted, do you know the status of this?  I don&apos;t think the build error pasted here is related.&lt;/p&gt;</comment>
                            <comment id="13288249" author="gsingers" created="Sun, 3 Jun 2012 21:08:07 +0100"  >&lt;p&gt;Should we delete the collections project now that this has been incorporated into Mahout and put a README in there?&lt;/p&gt;</comment>
                            <comment id="13288257" author="gsingers" created="Sun, 3 Jun 2012 21:51:41 +0100"  >&lt;p&gt;I&apos;m trying to get access to the build machine to debug.  My &lt;em&gt;suspicion&lt;/em&gt; is that this has to do with clover instrumentation.&lt;/p&gt;</comment>
                            <comment id="13288258" author="gsingers" created="Sun, 3 Jun 2012 22:06:11 +0100"  >&lt;p&gt;I&apos;ve disabled clover for now, giving it a go.&lt;/p&gt;</comment>
                            <comment id="13288261" author="tdunning" created="Sun, 3 Jun 2012 22:12:50 +0100"  >&lt;p&gt;I think that there may be some users of collections out there somewhere that we don&apos;t know about so I didn&apos;t want to delete it completely.  We should be able to get the jenkins build to not care about it.&lt;/p&gt;

&lt;p&gt;I think you may be right about the clover stuff or something like that.  I think that there is a build and test done once normally and then again with some kind of profiling (aka clover) or analysis (findbugs or some such).  The second build seems to be confused and is somehow winding up with two copies of collections.  It could be that I didn&apos;t change the dependency correctly or it could be that the instrumentation is not interacting well with the idea of the code generation that occurs with collections.  This could be the fault of the code generation plug-in (not surprising if so) or the instrumentation framework may be confusing things by doing its own thing with code modification on top of code generation.&lt;/p&gt;

&lt;p&gt;In any case, I am not convinced at all that the collections project has anything to do with the problem.&lt;/p&gt;

&lt;p&gt;One good strategy would be to turn off the code coverage and quality phases temporarily. If this cures the problem, then we know something.  My next step would be to insert a mvn clean somewhere between the first test build and the instrumentation build or to simply delete the primary test build.  If the instrumentation works without the primary build or if the clean fixes things, then we know one more thing.&lt;/p&gt;</comment>
                            <comment id="13288270" author="gsingers" created="Sun, 3 Jun 2012 23:21:21 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think that there may be some users of collections out there somewhere that we don&apos;t know about so I didn&apos;t want to delete it completely. We should be able to get the jenkins build to not care about it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But it is still in Math, no?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One good strategy would be to turn off the code coverage and quality phases temporarily. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve separated them out into two separate builds.  Clover is now MahoutClover and disabled b/c of the clover license.&lt;/p&gt;</comment>
                            <comment id="13288562" author="gsingers" created="Mon, 4 Jun 2012 14:47:04 +0100"  >&lt;p&gt;I think we are good on this now.  I think the issue was due to funkiness in Clover on the build machine&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 24 Jul 2011 18:56:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9294</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy33j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22653</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>