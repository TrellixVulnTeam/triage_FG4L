<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:23:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-463/MAHOUT-463.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-463] Boolean Data can not get any recommendation by running RecommnenderJob</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-463</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Boolean Preference Data can not get any recommendation by run RecommnenderJob,&lt;br/&gt;
but It can get data using the build in about Aprl.&lt;/p&gt;

&lt;p&gt;It seems that it can not get any data by running RowSimilarityJob &lt;/p&gt;</description>
                <environment></environment>
        <key id="12471316">MAHOUT-463</key>
            <summary>Boolean Data can not get any recommendation by running RecommnenderJob</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="huiwenhan">Han Hui Wen </reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Aug 2010 17:24:06 +0100</created>
                <updated>Sun, 31 Oct 2010 15:50:05 +0000</updated>
                            <resolved>Fri, 13 Aug 2010 19:22:39 +0100</resolved>
                                    <version>0.4</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12897327" author="huiwenhan" created="Wed, 11 Aug 2010 17:24:47 +0100"  >&lt;p&gt;I have tried SIMILARITY_COOCCURRENCE and SIMILARITY_TANIMOTO_COEFFICIENT&lt;/p&gt;

&lt;p&gt;all preference has same prefValue 1.0f&lt;/p&gt;</comment>
                            <comment id="12897344" author="ssc" created="Wed, 11 Aug 2010 18:19:29 +0100"  >&lt;p&gt;Can you provide more details please? &lt;/p&gt;

&lt;p&gt;How did your input data look like? &lt;br/&gt;
With what parameters did you run the job?&lt;br/&gt;
Did you encounter exceptions or unexpected output?&lt;br/&gt;
What was the resulting data and what did you expect?&lt;/p&gt;</comment>
                            <comment id="12897369" author="huiwenhan" created="Wed, 11 Aug 2010 19:28:10 +0100"  >&lt;p&gt;The data is boolean Data that the prefValue is null,&lt;br/&gt;
I run the RecommenderJob used --booleanData = true.&lt;/p&gt;

&lt;p&gt;there is no error and exception.&lt;/p&gt;

&lt;p&gt;RowSimilarityJob does not output any data.&lt;/p&gt;</comment>
                            <comment id="12897385" author="tdunning" created="Wed, 11 Aug 2010 19:53:38 +0100"  >&lt;p&gt;This is still not enough information for anybody to help you.&lt;/p&gt;

&lt;p&gt;Can you say more about your input data?  What did you expect to see?&lt;/p&gt;

&lt;p&gt;How parse was the data?  How large?&lt;/p&gt;

&lt;p&gt;What command did you use to run the program?&lt;/p&gt;

&lt;p&gt;Are you sure that the input data was where you thought?  How do you know?&lt;/p&gt;

&lt;p&gt;Are you sure you looked in the right place for the the output data?  How do you know?&lt;/p&gt;

 &lt;blockquote&gt;
&lt;p&gt;but It can get data using the build in about Aprl.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Also, what did you mean by this?  Is Aprl = April?  Does build = Mahout?  &lt;/p&gt;</comment>
                            <comment id="12897390" author="ssc" created="Wed, 11 Aug 2010 19:59:01 +0100"  >&lt;p&gt;I wrote a small unit test and I encountered quite the opposite behavior as described by Hui. &lt;/p&gt;

&lt;p&gt;When using boolean data the already known items were not filtered out. I will create a patch for this soon. But the rest of the recommendation process worked.&lt;/p&gt;</comment>
                            <comment id="12897585" author="ssc" created="Thu, 12 Aug 2010 06:57:22 +0100"  >&lt;p&gt;Attached a patch that provides a unit test for recommending from boolean input data and correctly excludes already known items in this case.&lt;/p&gt;

&lt;p&gt;Hui, if you apply the patch and have a look a org.apache.mahout.cf.taste.hadoop.item.RecommenderJobTest.testCompleteJobBoolean() you should see that boolean recommendations work.&lt;/p&gt;

&lt;p&gt;Maybe there&apos;s something wrong with your input data?&lt;/p&gt;</comment>
                            <comment id="12897601" author="huiwenhan" created="Thu, 12 Aug 2010 08:12:26 +0100"  >&lt;p&gt;in Classs PrefsToItemUserMatrixMapper:&lt;/p&gt;

&lt;p&gt;public class PrefsToItemUserMatrixMapper&lt;/p&gt;

&lt;p&gt;    extends Mapper&amp;lt;LongWritable,Text,VarIntWritable,DistributedRowMatrix.MatrixEntryWritable&amp;gt; {&lt;/p&gt;


&lt;p&gt;  @Override&lt;/p&gt;

&lt;p&gt;  protected void map(LongWritable key, Text value, Context ctx)&lt;/p&gt;

&lt;p&gt;      throws IOException, InterruptedException &lt;/p&gt;
{


    String[] tokens = TasteHadoopUtils.splitPrefTokens(value.toString());

    long userID = Long.parseLong(tokens[0]);

    long itemID = Long.parseLong(tokens[1]);

    float prefValue = tokens.length &amp;gt; 2 ? Float.parseFloat(tokens[2]) : 1.0f;


    int row = TasteHadoopUtils.idToIndex(itemID);

    int column = TasteHadoopUtils.idToIndex(userID);


    DistributedRowMatrix.MatrixEntryWritable entry = new DistributedRowMatrix.MatrixEntryWritable();

    entry.setRow(row);

    entry.setCol(column);

    entry.setVal(prefValue);

    ctx.write(new VarIntWritable(row), entry);

  }

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;if it&apos;s boolean data ,also need set prefValue =1.0f&lt;/p&gt;</comment>
                            <comment id="12897604" author="ssc" created="Thu, 12 Aug 2010 08:27:16 +0100"  >&lt;p&gt;I see the point in your last comment, you want to be able to give the job input with preference values and make it treat that as if the input was just boolean. &lt;/p&gt;

&lt;p&gt;That&apos;s a good idea and I will add that to the patch, but it doesn&apos;t explain why there was no recommendation output for you.&lt;/p&gt;</comment>
                            <comment id="12897624" author="ssc" created="Thu, 12 Aug 2010 09:09:12 +0100"  >&lt;p&gt;Extended the patch to make PrefsToItemUserMatrixMapper ignore preferenceValues contained in the input when &quot;--booleanData&quot; is set to true. This is available as an option for ItemSimilarityJob now too.&lt;/p&gt;</comment>
                            <comment id="12897636" author="huiwenhan" created="Thu, 12 Aug 2010 09:57:11 +0100"  >&lt;p&gt;Because I set the prefValue=0 for Boolean Data ,&lt;br/&gt;
it may cause all similarityValue =0.&lt;/p&gt;

&lt;p&gt;If we set the prefValue=1.0f for boolean data,&lt;br/&gt;
similarityValue of DistributedUncenteredZeroAssumingCosineVectorSimilarity will be 1.0&lt;/p&gt;

&lt;p&gt;other arithmetic also set similarityValue  to 1.0&lt;/p&gt;

&lt;p&gt;So the RowSimilarityJob  does not make sense.&lt;/p&gt;

&lt;p&gt;Maybe we need new similarity arithmetic for boolean data.&lt;/p&gt;</comment>
                            <comment id="12897655" author="ssc" created="Thu, 12 Aug 2010 10:38:52 +0100"  >&lt;p&gt;Setting the prefValue to 0 obviously won&apos;t work, setting it to 1 is the right thing to do.&lt;/p&gt;

&lt;p&gt;It is not true that DistributedUncenteredZeroAssumingCosineVectorSimilarity always gives 1 for boolean data, have a look at line 27 in org.apache.mahout.math.hadoop.similarity.vector.DistributedUncenteredZeroAssumingCosineVectorSimilarityTest if you need a proof.&lt;/p&gt;</comment>
                            <comment id="12897662" author="huiwenhan" created="Thu, 12 Aug 2010 11:00:08 +0100"  >

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;distributed implementation of cosine similarity that does not center its data&lt;br/&gt;
 */&lt;br/&gt;
public class DistributedUncenteredCosineVectorSimilarity extends AbstractDistributedVectorSimilarity {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  @Override&lt;br/&gt;
  protected double doComputeResult(int rowA, int rowB, Iterable&amp;lt;Cooccurrence&amp;gt; cooccurrences, double weightOfVectorA,&lt;br/&gt;
      double weightOfVectorB, int numberOfColumns) {&lt;/p&gt;

&lt;p&gt;    int n = 0;&lt;br/&gt;
    double sumXY = 0.0;&lt;br/&gt;
    double sumX2 = 0.0;&lt;br/&gt;
    double sumY2 = 0.0;&lt;/p&gt;

&lt;p&gt;    for (Cooccurrence cooccurrence : cooccurrences) &lt;/p&gt;
{
      double x = cooccurrence.getValueA();
      double y = cooccurrence.getValueB();

      sumXY += x * y;
      sumX2 += x * x;
      sumY2 += y * y;
      n++;
    }

&lt;p&gt;    if (n == 0) &lt;/p&gt;
{
      return Double.NaN;
    }
&lt;p&gt;    double denominator = Math.sqrt(sumX2) * Math.sqrt(sumY2);&lt;br/&gt;
    if (denominator == 0.0) &lt;/p&gt;
{
      // One or both vectors has -all- the same values;
      // can&apos;t really say much similarity under this measure
      return Double.NaN;
    }
&lt;p&gt;    return sumXY / denominator;&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;this one will always return 1.0&lt;/p&gt;</comment>
                            <comment id="12897664" author="huiwenhan" created="Thu, 12 Aug 2010 11:03:57 +0100"  >

&lt;p&gt;package org.apache.mahout.math.hadoop.similarity.vector;&lt;/p&gt;

&lt;p&gt;import org.apache.mahout.math.hadoop.similarity.Cooccurrence;&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;distributed implementation of euclidean distance as vector similarity measure&lt;br/&gt;
 */&lt;br/&gt;
public class DistributedEuclideanDistanceVectorSimilarity extends AbstractDistributedVectorSimilarity {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  @Override&lt;br/&gt;
  protected double doComputeResult(int rowA, int rowB, Iterable&amp;lt;Cooccurrence&amp;gt; cooccurrences, double weightOfVectorA,&lt;br/&gt;
      double weightOfVectorB, int numberOfColumns) {&lt;/p&gt;

&lt;p&gt;    double n = 0.0;&lt;br/&gt;
    double sumXYdiff2 = 0.0;&lt;/p&gt;

&lt;p&gt;    for (Cooccurrence cooccurrence : cooccurrences) &lt;/p&gt;
{
      double diff = cooccurrence.getValueA() - cooccurrence.getValueB();
      sumXYdiff2 += diff * diff;
      n++;
    }

&lt;p&gt;    return n / (1.0 + Math.sqrt(sumXYdiff2));&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;this one is always return n (=cooccurrence.size())&lt;/p&gt;</comment>
                            <comment id="12897665" author="ssc" created="Thu, 12 Aug 2010 11:04:51 +0100"  >&lt;p&gt;Yes, this one will return 1 but thats not the one you previously mentioned.&lt;/p&gt;</comment>
                            <comment id="12897667" author="huiwenhan" created="Thu, 12 Aug 2010 11:08:03 +0100"  >&lt;p&gt;For boolean data:&lt;/p&gt;

&lt;p&gt;If n users like ItemA, m users like ItemB,p users like both ItemA and ItemB,&lt;br/&gt;
then the similarityValue  can simply set set to p/(m+n-p).&lt;/p&gt;
</comment>
                            <comment id="12897670" author="ssc" created="Thu, 12 Aug 2010 11:11:27 +0100"  >&lt;p&gt;Yes, that is what DistributedTanimotoCoefficientVectorSimilarity is doing&lt;/p&gt;</comment>
                            <comment id="12897672" author="huiwenhan" created="Thu, 12 Aug 2010 11:12:48 +0100"  >&lt;p&gt;Thanks, Boolean data should use DistributedTanimotoCoefficientVectorSimilarity .&lt;/p&gt;</comment>
                            <comment id="12897675" author="huiwenhan" created="Thu, 12 Aug 2010 11:24:29 +0100"  >&lt;p&gt;In Class AbstractDistributedVectorSimilarity&lt;/p&gt;


&lt;p&gt; /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;computes the number of elements in the 
{@link Iterator}
&lt;p&gt;   */&lt;br/&gt;
  protected int countElements(Iterator&amp;lt;?&amp;gt; iterator) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {    int count = 0;    while (iterator.hasNext()) {
      count++;
      iterator.next();
    }    return count;  }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;countElements may cause performance issue,&lt;/p&gt;

&lt;p&gt;Can we change it to array or list ,then we just get the length of array or size of list ?&lt;/p&gt;

&lt;p&gt;also change some mapper and reducer class to use array or list ?&lt;/p&gt;

&lt;p&gt;I am doing a test , the RowSimilarityJob-CooccurrencesMapper-SimilarityReducer used about 2 hours,&lt;/p&gt;
</comment>
                            <comment id="12897678" author="huiwenhan" created="Thu, 12 Aug 2010 11:28:51 +0100"  >&lt;p&gt;Sorry DistributedUncenteredZeroAssumingCosineVectorSimilarity  does not always return 1.&lt;/p&gt;

&lt;p&gt;If n users like ItemA, m users like ItemB,p users like both ItemA and ItemB,&lt;/p&gt;

&lt;p&gt;DistributedUncenteredZeroAssumingCosineVectorSimilarity  return p/(m*n).&lt;/p&gt;

&lt;p&gt;it also can use for Boolean data, but we can provide a simple one , return (p*p)/(m*n),no so much computing.&lt;/p&gt;</comment>
                            <comment id="12897682" author="ssc" created="Thu, 12 Aug 2010 11:31:27 +0100"  >&lt;p&gt;Hui, please file a new jira ticket for your concerns about AbstractDistributedVectorSimilarity. It&apos;s something completely different then the original cause for that ticket here.&lt;/p&gt;

&lt;p&gt;Additionally please provide detailed information about why you consider this a performance issue.&lt;/p&gt;</comment>
                            <comment id="12897683" author="ssc" created="Thu, 12 Aug 2010 11:38:01 +0100"  >&lt;p&gt;If you want to propose alternative implementations for similarity measures please create a new ticket for that too and provide a patch containing the implementation.&lt;/p&gt;</comment>
                            <comment id="12898352" author="srowen" created="Fri, 13 Aug 2010 19:22:39 +0100"  >&lt;p&gt;Submitted Sebastian&apos;s patch as it seemed reasonable and he&apos;s reporting success.&lt;/p&gt;</comment>
                            <comment id="12898452" author="hudson" created="Fri, 13 Aug 2010 23:38:31 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #186 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/186/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-463&quot; title=&quot;Boolean Data can not get any recommendation by running RecommnenderJob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-463&quot;&gt;&lt;del&gt;MAHOUT-463&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12451869" name="MAHOUT-463-2.patch" size="14489" author="ssc" created="Thu, 12 Aug 2010 09:05:08 +0100"/>
                            <attachment id="12451861" name="MAHOUT-463.patch" size="5917" author="ssc" created="Thu, 12 Aug 2010 06:54:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Aug 2010 17:19:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9600</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy4yn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22955</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>