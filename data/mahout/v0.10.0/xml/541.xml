<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:21:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-541/MAHOUT-541.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-541] Incremental SVD Implementation</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-541</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;I thought I&apos;d put up this implementation of the popular SVD algorithm for recommender systems. It is based on the SVD implementation, but instead of computing each user and each item matrix, it trains the model iteratively, which was the original version that Simon Funk proposed.  The advantage of this implementation is that you don&apos;t have to recalculate the dot product of each user-item pair for each training cycle, they can be cached, which speeds up the algorithm considerably.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12479438">MAHOUT-541</key>
            <summary>Incremental SVD Implementation</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="jamborta">Tamas Jambor</reporter>
                        <labels>
                    </labels>
                <created>Mon, 8 Nov 2010 23:57:09 +0000</created>
                <updated>Sat, 21 May 2011 04:18:55 +0100</updated>
                            <resolved>Tue, 8 Mar 2011 08:58:48 +0000</resolved>
                                    <version>0.4</version>
                                    <fixVersion>0.5</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12970642" author="ssc" created="Sun, 12 Dec 2010 20:13:43 +0000"  >&lt;p&gt;Hi Tamas,&lt;/p&gt;

&lt;p&gt;I&apos;d like to review this, but that&apos;s kinda difficult because you did not supply a patch from which your changes can be seen. I&apos;m looking through the code and getting some idea about the improvements you&apos;ve made, yet it would be very helpful if you could point me to the main code passages you&apos;ve changed.&lt;/p&gt;

&lt;p&gt;Are you refering to &lt;a href=&quot;http://sifter.org/~simon/journal/20061211.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://sifter.org/~simon/journal/20061211.html&lt;/a&gt; when talking about the original version of the algorithm?&lt;/p&gt;</comment>
                            <comment id="12970648" author="jamborta" created="Sun, 12 Dec 2010 20:36:10 +0000"  >&lt;p&gt;Hi Sebastian,&lt;/p&gt;

&lt;p&gt;sorry, I am not really familiar with how this patch thing works.&lt;/p&gt;

&lt;p&gt;yes, it is based on the link you suggested.&lt;/p&gt;

&lt;p&gt;as far as I remember I changed the following methods:&lt;/p&gt;

&lt;p&gt;public void train(int steps) in TJSVDRecommender&lt;/p&gt;

&lt;p&gt;and added the predictRating(int i, int j, int f, Preference pref, boolean bTrailing) method in TJExpecationMaximization&lt;/p&gt;</comment>
                            <comment id="12970652" author="ssc" created="Sun, 12 Dec 2010 20:57:30 +0000"  >&lt;p&gt;Thanks, I&apos;ll have a look at those methods.&lt;/p&gt;

&lt;p&gt;Details for contributing and creating patches can be found here: &lt;a href=&quot;https://cwiki.apache.org/confluence/display/MAHOUT/How+To+Contribute&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/MAHOUT/How+To+Contribute&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12970659" author="jamborta" created="Sun, 12 Dec 2010 21:17:24 +0000"  >&lt;p&gt;thanks. I&apos;ll do it that way next time. &lt;br/&gt;
In fact, I have a nice SVD implementation for implicit feedback, which I always wanted to share with you guys.&lt;/p&gt;</comment>
                            <comment id="12970674" author="ssc" created="Mon, 13 Dec 2010 00:00:11 +0000"  >&lt;p&gt;Tamas,&lt;/p&gt;

&lt;p&gt;I created this patch from the files you supplied, and I also cleaned up the code a little. I did some simple testing and the recommender seems to work fine.&lt;/p&gt;

&lt;p&gt;I left out something because I did not understand it: You use a &quot;modified&quot; dataModel after training where the original preferences are replaced by the estimated ones, what&apos;s the reason for doing this?&lt;/p&gt;

&lt;p&gt;Another question: How can we test the speedup this patch should bring? I did some evaluation on the 1M movielens dataset and didn&apos;t see any increase in computation speed, but maybe that dataset is too small or I got the parameters wrong.&lt;/p&gt;

&lt;p&gt;Can you please review the patch and see if I got everything right? &lt;/p&gt;
</comment>
                            <comment id="12974099" author="jamborta" created="Wed, 22 Dec 2010 07:27:00 +0000"  >&lt;p&gt;sorry for the late reply.&lt;/p&gt;

&lt;p&gt;I had a look at the code, it seems good. I made some slight modifications, attached the patch.&lt;/p&gt;

&lt;p&gt;I don&apos;t know what was the reason of storing the a modified datamodel with the predicted rating, it was implemented in mahout, but later removed, as far as I remember.&lt;/p&gt;

&lt;p&gt;I have tested the speedup, and it was much faster with the 1m movielens. If you have a look at the code there are way less calculations needed (especially calculating the dot product of the matrix for prediction during training), I can run that to confirm. &lt;/p&gt;


</comment>
                            <comment id="12974104" author="ssc" created="Wed, 22 Dec 2010 07:53:40 +0000"  >&lt;p&gt;No need to excuse for a late reply, we&apos;re all doing this in our spare time, thank you for looking through the patch.&lt;/p&gt;

&lt;p&gt;Can you give us some numbers on the speed increase or describe your test setup again? I did some simple testing too and didn&apos;t see it run faster, but maybe I just got something wrong. In my understanding the code&apos;s intention is to trade a higher memory usage (the cached values) for a potential speed increase (not having to do calculate the dot-products), did I get that correctly?&lt;/p&gt;</comment>
                            <comment id="12979181" author="srowen" created="Sat, 8 Jan 2011 19:22:40 +0000"  >&lt;p&gt;Am I right that Sebastian&apos;s latest changes kind of incorporate this? The last patch here deals with ExpectationMaximizationSVD but Sebastian moved this out to ExpectationMaximizationSVDFactorizer. Is this effectively rolled into what SS did?&lt;/p&gt;</comment>
                            <comment id="12979187" author="ssc" created="Sat, 8 Jan 2011 19:39:23 +0000"  >&lt;p&gt;The changes from this issue are not yet included. I could modify ExpectationMaximizationSVDFactorizer to include the changes proposed here, but I wanted to see some numbers for the performance improvements as we&apos;d pay with a higher memory consumption for it if I understand the code correctly. My own tests did not show that the modified version runs significantly faster but I maybe I didn&apos;t do the right testing.&lt;/p&gt;</comment>
                            <comment id="12979218" author="jamborta" created="Sat, 8 Jan 2011 22:16:39 +0000"  >&lt;p&gt;I can run the tests on performance increase on this one sometimes at the end of January, if that&apos;s not too late.&lt;/p&gt;</comment>
                            <comment id="12979224" author="ssc" created="Sat, 8 Jan 2011 22:35:46 +0000"  >&lt;p&gt;That&apos;s fine, take your time. Could you update the patch to work with the current trunk? I did some refactoring, but I didn&apos;t change the way the algorithm worked.&lt;/p&gt;</comment>
                            <comment id="12979225" author="jamborta" created="Sat, 8 Jan 2011 22:43:54 +0000"  >&lt;p&gt;ok. will do. when will 0.5 be released, by the way?&lt;/p&gt;</comment>
                            <comment id="12979226" author="ssc" created="Sat, 8 Jan 2011 22:46:36 +0000"  >&lt;p&gt;AFAIK the plan is to release 0.5 around May 2011&lt;/p&gt;</comment>
                            <comment id="13002994" author="jamborta" created="Sat, 5 Mar 2011 16:32:39 +0000"  >&lt;p&gt;Hi.&lt;/p&gt;

&lt;p&gt;I got around to do the test with movielens 10m (64 features and 20 iterations).&lt;/p&gt;

&lt;p&gt;Training time mahout: 23185168ms&lt;br/&gt;
Training time this one: 4271031ms&lt;/p&gt;</comment>
                            <comment id="13003539" author="jamborta" created="Mon, 7 Mar 2011 19:45:11 +0000"  >&lt;p&gt;I changed it to the latest snapshot, following the structure that you are using now. &lt;br/&gt;
Patch attached.&lt;/p&gt;</comment>
                            <comment id="13003781" author="srowen" created="Tue, 8 Mar 2011 02:11:19 +0000"  >&lt;p&gt;Here&apos;s my own version of the last patch with packages names fixed, some small formatting changes, and slight reimplementation of SVDPreference.&lt;/p&gt;

&lt;p&gt;Sebastian are you in a position to comment on the change in light of the most recent performance info?&lt;/p&gt;</comment>
                            <comment id="13003830" author="ssc" created="Tue, 8 Mar 2011 06:34:35 +0000"  >&lt;p&gt;the performance speedup looks incredibly good, I think it definitely balances out the slightly increased memory consumption, let&apos;s commit the patch. Thank you Tamas!&lt;/p&gt;</comment>
                            <comment id="13004098" author="jamborta" created="Tue, 8 Mar 2011 18:01:41 +0000"  >&lt;p&gt;I would like to add two more small changes.&lt;/p&gt;

&lt;p&gt;1, Collections.shuffle(cachedPreferences, random) could be done after training each feature (or even after each iteration)&lt;/p&gt;

&lt;p&gt;2, Initializing the vector doesn&apos;t really look correct to me. This part:&lt;/p&gt;

&lt;p&gt;defaultValue = Math.sqrt((average - 1.0) / numFeatures);&lt;br/&gt;
leftVectors&lt;span class=&quot;error&quot;&gt;&amp;#91;userIndex&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;feature&amp;#93;&lt;/span&gt; = defaultValue + (random.nextDouble() - 0.5) * randomNoise;&lt;br/&gt;
rightVectors&lt;span class=&quot;error&quot;&gt;&amp;#91;itemIndex&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;feature&amp;#93;&lt;/span&gt; = defaultValue + (random.nextDouble() - 0.5) * randomNoise;&lt;/p&gt;

&lt;p&gt;0.5 should be replaced by something that depends on the number of features and the rating scale.&lt;/p&gt;

&lt;p&gt;what do you think?&lt;/p&gt;</comment>
                            <comment id="13004106" author="srowen" created="Tue, 8 Mar 2011 18:10:50 +0000"  >&lt;p&gt;For #2, I believe it is just trying to compute a value that is randomly within an interval of size &quot;randomNoise&quot; about &quot;defaultValue&quot;. In that sense 0.5 makes sense as a fixed value. Don&apos;t know about #1 but trust you guys know your stuff. Is it worth a patch to describe completely?&lt;/p&gt;</comment>
                            <comment id="13004151" author="jamborta" created="Tue, 8 Mar 2011 19:31:25 +0000"  >&lt;p&gt;the problem with #2 is that the variable randomNoise doesn&apos;t control entirely the noise that affects the rating (and the error). It also depends on the rating scale and the number of features. I suggest this solution (which does make my experiments more stable):&lt;/p&gt;

&lt;p&gt;        double prefInterval = dataModel.getMaxPreference() - dataModel.getMinPreference();&lt;br/&gt;
        defaultValue = Math.sqrt((average - (prefInterval * 0.1)) / numFeatures);&lt;br/&gt;
        double interval = (prefInterval * 0.1)  / numFeatures;&lt;/p&gt;

&lt;p&gt;leftVectors&lt;span class=&quot;error&quot;&gt;&amp;#91;userIndex&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;feature&amp;#93;&lt;/span&gt; = defaultValue + (random.nextDouble() - 0.5) * interval * randomNoise; &lt;br/&gt;
rightVectors&lt;span class=&quot;error&quot;&gt;&amp;#91;itemIndex&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;feature&amp;#93;&lt;/span&gt; = defaultValue + (random.nextDouble() - 0.5) * interval * randomNoise;&lt;/p&gt;</comment>
                            <comment id="13004489" author="jamborta" created="Wed, 9 Mar 2011 11:50:14 +0000"  >&lt;p&gt;1, some bug fixes&lt;br/&gt;
2, changed the way random noise was added&lt;br/&gt;
3, when to shuffle the preference values&lt;/p&gt;</comment>
                            <comment id="13004491" author="srowen" created="Wed, 9 Mar 2011 11:53:00 +0000"  >&lt;p&gt;Is this latest patch against HEAD? It seems to have a lot more change than you had mentioned.&lt;/p&gt;</comment>
                            <comment id="13004497" author="jamborta" created="Wed, 9 Mar 2011 11:59:06 +0000"  >&lt;p&gt;sorry, netbeans formatted the structure. here is another one.&lt;/p&gt;</comment>
                            <comment id="13004635" author="hudson" created="Wed, 9 Mar 2011 16:28:28 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #664 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/664/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/664/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-541&quot; title=&quot;Incremental SVD Implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-541&quot;&gt;&lt;del&gt;MAHOUT-541&lt;/del&gt;&lt;/a&gt; part 2, more refinement from Tamas&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12473119" name="MAHOUT-541.patch" size="2911" author="jamborta" created="Wed, 9 Mar 2011 11:59:20 +0000"/>
                            <attachment id="12473117" name="MAHOUT-541.patch" size="12618" author="jamborta" created="Wed, 9 Mar 2011 11:50:36 +0000"/>
                            <attachment id="12472898" name="MAHOUT-541.patch" size="10117" author="srowen" created="Tue, 8 Mar 2011 02:11:19 +0000"/>
                            <attachment id="12472852" name="MAHOUT-541.patch" size="15794" author="jamborta" created="Mon, 7 Mar 2011 19:45:58 +0000"/>
                            <attachment id="12466794" name="MAHOUT-541.patch" size="12413" author="jamborta" created="Wed, 22 Dec 2010 07:28:05 +0000"/>
                            <attachment id="12466109" name="MAHOUT-541.patch" size="12178" author="ssc" created="Mon, 13 Dec 2010 00:00:10 +0000"/>
                            <attachment id="12459113" name="SVDPreference.java" size="1426" author="jamborta" created="Tue, 9 Nov 2010 00:04:28 +0000"/>
                            <attachment id="12459115" name="TJExpectationMaximizationSVD.java" size="3960" author="jamborta" created="Tue, 9 Nov 2010 00:12:14 +0000"/>
                            <attachment id="12459116" name="TJSVDRecommender.java" size="10587" author="jamborta" created="Tue, 9 Nov 2010 00:12:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 12 Dec 2010 20:13:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9521</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy4hb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22877</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>