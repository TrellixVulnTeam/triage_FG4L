<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:27:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1445/MAHOUT-1445.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1445] Create an intro for item based recommender</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1445</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description></description>
                <environment></environment>
        <key id="12699842">MAHOUT-1445</key>
            <summary>Create an intro for item based recommender</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="maciejmazur">Maciej Mazur</reporter>
                        <labels>
                            <label>documentation</label>
                            <label>recommender</label>
                    </labels>
                <created>Mon, 10 Mar 2014 19:43:56 +0000</created>
                <updated>Mon, 13 Apr 2015 11:20:45 +0100</updated>
                            <resolved>Tue, 15 Apr 2014 05:38:00 +0100</resolved>
                                    <version>1.0.0</version>
                                    <fixVersion>0.10.0</fixVersion>
                                    <component>Documentation</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13968171" author="pknarayan" created="Mon, 14 Apr 2014 09:39:14 +0100"  >&lt;p&gt;How does an item-based recommender work?&lt;br/&gt;
In item-based recommender engines, if a user like an item A then the same item can be recommended to other users who are similar to the user who likes item A. &lt;/p&gt;

&lt;p&gt;How to obtain similar users/similarity between users?&lt;br/&gt;
Similar users can be obtained by using profile-based information about the user&#8212;for example cluster the users based on their attributes, such as age, gender, geographic location, net worth, and so on. Alternatively, you can find similar users using a collaborative-based approach by analyzing the users&#8217; actions and users&#8217; historical ratings and reviews.&lt;/p&gt;

&lt;p&gt;What is the high level logic?&lt;br/&gt;
For every item &#8216;i&#8217; that user &#8216;u&#8217; has no preference for yet &amp;amp; for every other user &#8216;v&#8217; that has preference for item &#8216;i&#8217;,&#8232;Compute the similarity between u and v thereby incorporate user &#8216;v&#8217; preference for item &#8216;i&#8217; by a weight &#8217;s&#8217; into a running average.&#8232;Return the top items, ranked by weighted average.&lt;/p&gt;</comment>
                            <comment id="13968365" author="nimartin" created="Mon, 14 Apr 2014 14:44:38 +0100"  >&lt;p&gt;Worked on this a bit over the weekend. Feel free to use some/all/none if folks find it useful as an intro. I imagine the rest of the item based rec workflow would be described in greater detail below this intro piece, but hopefully something along these lines helps potential users get a feel for what&apos;s possible &quot;above the fold&quot; before diving into data models and similarity metrics, etc. etc. &lt;/p&gt;

&lt;p&gt;**&lt;b&gt;Proposed text below&lt;/b&gt;**&lt;/p&gt;

&lt;p&gt;Item Based Recommender&lt;br/&gt;
Introduction&lt;/p&gt;

&lt;p&gt;Mahout&#8217;s item based recommender is a flexible and easily implemented algorithm with a diverse range of applications. The minimalism of the primary input file&#8217;s structure and availability of ancillary filtering controls can make sourcing required data and shaping a desired output both efficient and straightforward. &lt;/p&gt;

&lt;p&gt;Typical use cases include:&lt;br/&gt;
&#8226;	Recommend products to customers via an eCommerce platform (think: Amazon, Netflix, Overstock)&lt;br/&gt;
&#8226;	Identify organic sales opportunities&lt;br/&gt;
&#8226;	Segment users/customers based on similar item preferences&lt;/p&gt;

&lt;p&gt;Broadly speaking, Mahout&apos;s item-based recommendation algorithm takes as input customer preferences by item and generates an output recommending similar items with a score indicating the likelihood a customer will &quot;like&quot; the recommended item. &lt;/p&gt;

&lt;p&gt;One of the strengths of the item based recommender is its adaptability to your business conditions or research interests. For example, there are many available approaches for providing product preference. One such method is to calculate the total orders for a given product for each customer (i.e. Acme Corp has ordered Widget-A 5,678 times) while others rely on user preference captured via the web (i.e. Jane Doe rated a movie as five stars, or gave a product two thumbs&#8217; up). &lt;/p&gt;

&lt;p&gt; Additionally, a variety of methodologies can be implemented to narrow the focus of Mahout&apos;s recommendations, such as:&lt;br/&gt;
&#8226;	Exclude low volume or low profitability products from consideration&lt;br/&gt;
&#8226;	Group customers by segment or market rather than using user/customer level data&lt;br/&gt;
&#8226;	Exclude zero-dollar transactions, returns or other order types&lt;br/&gt;
&#8226;	Map product substitutions into the Mahout input (i.e. if WidgetA is a recommended item replace it with WidgetX)&lt;/p&gt;

&lt;p&gt;The item based recommender output can be easily consumed by downstream applications (i.e. websites, ERP systems or salesforce automation tools) and is configurable so users can determine the number of item recommendations generated by the algorithm.&lt;/p&gt;</comment>
                            <comment id="13968423" author="ssc" created="Mon, 14 Apr 2014 16:12:02 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=pknarayan&quot; class=&quot;user-hover&quot; rel=&quot;pknarayan&quot;&gt;Pavan Kumar N&lt;/a&gt; I don&apos;t think we should talk about user similarity in an intro of item-based recommenders&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nimartin&quot; class=&quot;user-hover&quot; rel=&quot;nimartin&quot;&gt;Nick Martin&lt;/a&gt; I really like your text. Could you add a small example that shows how to use an item based recommender in Mahout? You could extract something from this page: &lt;a href=&quot;https://mahout.apache.org/users/recommender/recommender-documentation.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mahout.apache.org/users/recommender/recommender-documentation.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13969112" author="nimartin" created="Tue, 15 Apr 2014 02:20:44 +0100"  >&lt;p&gt;Item Based Recommender&lt;br/&gt;
Introduction&lt;/p&gt;

&lt;p&gt;Mahout&#8217;s item based recommender is a flexible and easily implemented algorithm with a diverse range of applications. The minimalism of the primary input file&#8217;s structure and availability of ancillary filtering controls can make sourcing required data and shaping a desired output both efficient and straightforward.&lt;/p&gt;

&lt;p&gt;Typical use cases include:&lt;br/&gt;
&#8226; Recommend products to customers via an eCommerce platform (think: Amazon, Netflix, Overstock)&lt;br/&gt;
&#8226; Identify organic sales opportunities&lt;br/&gt;
&#8226; Segment users/customers based on similar item preferences&lt;/p&gt;

&lt;p&gt;Broadly speaking, Mahout&apos;s item-based recommendation algorithm takes as input customer preferences by item and generates an output recommending similar items with a score indicating the likelihood a customer will &quot;like&quot; the recommended item.&lt;/p&gt;

&lt;p&gt;One of the strengths of the item based recommender is its adaptability to your business conditions or research interests. For example, there are many available approaches for providing product preference. One such method is to calculate the total orders for a given product for each customer (i.e. Acme Corp has ordered Widget-A 5,678 times) while others rely on user preference captured via the web (i.e. Jane Doe rated a movie as five stars, or gave a product two thumbs&#8217; up).&lt;/p&gt;

&lt;p&gt;Additionally, a variety of methodologies can be implemented to narrow the focus of Mahout&apos;s recommendations, such as:&lt;br/&gt;
&#8226; Exclude low volume or low profitability products from consideration&lt;br/&gt;
&#8226; Group customers by segment or market rather than using user/customer level data&lt;br/&gt;
&#8226; Exclude zero-dollar transactions, returns or other order types&lt;br/&gt;
&#8226; Map product substitutions into the Mahout input (i.e. if WidgetA is a recommended item replace it with WidgetX)&lt;/p&gt;

&lt;p&gt;The item based recommender output can be easily consumed by downstream applications (i.e. websites, ERP systems or salesforce automation tools) and is configurable so users can determine the number of item recommendations generated by the algorithm.&lt;/p&gt;


&lt;p&gt;Example&lt;/p&gt;

&lt;p&gt;Testing the item based recommender can be a simple and potentially quite rewarding endeavor. Whereas the typical sample use case for collaborative filtering focuses on utilization of, and integration with, eCommerce platforms we can instead look at a potential use case applicable to most businesses (even those without a web presence). Let&#8217;s look at how a company might use Mahout&#8217;s item based recommender to identify new sales opportunities for an existing customer base. First, you&#8217;ll need to get Mahout up and running, the instructions for which can be found here (&lt;a href=&quot;https://mahout.apache.org/users/basics/quickstart.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mahout.apache.org/users/basics/quickstart.html&lt;/a&gt;). After you&apos;ve ensured Mahout is properly installed we&#8217;re ready to run a quick example. &lt;/p&gt;

&lt;p&gt;Step 1: Gather some test data&lt;br/&gt;
Mahout&#8217;s item based recommender relies on three key pieces of data: userID, itemID and preference. The &#8220;users&#8221; could be website visitors or simply customers that purchase products from your business. Similarly, items could be products, product groups or even pages on your website &#8211; really anything you would want to recommend to a group of users or customers. For our example let&#8217;s use customer orders as a proxy for preference. A simple count of distinct orders by customer, by product will work for this example. You&#8217;ll find as you explore ways to manipulate the item based recommender the preference value can be many things (page clicks, explicit ratings, order counts, etc.). Once your test data is gathered put it in a .txt file separated by commas with no column headers included. &lt;/p&gt;

&lt;p&gt;Step 2: Pick a similarity measure&lt;br/&gt;
Choosing a similarity measure for use in a production environment is something that requires careful testing, evaluation and research. For our example purposes, we&#8217;ll just go with a Mahout similarity classname called &#8220;SIMILARITY_LOGLIKELIHOOD&#8221;.&lt;/p&gt;

&lt;p&gt;Step 3: Configure the Mahout command&lt;br/&gt;
Assuming your JAVA_HOME is appropriately set and Mahout was installed properly we&#8217;re ready to configure our syntax. Enter the following command:&lt;/p&gt;

&lt;p&gt;$ mahout recommenditembased -s SIMILARITY_LOGLIKELIHOOD  -i /path/to/input/file -o /path/to/desired/output  --numRecommendations 25 &lt;/p&gt;

&lt;p&gt;Running the command will execute a series of jobs the final product of which will be an output file deposited to the directory specified in the command syntax. The output file will contain two columns: the userID and an array of itemIDs and scores. &lt;/p&gt;

&lt;p&gt;Step 4: Making use of the output and doing more with Mahout&lt;br/&gt;
The output file generated in our simple example can be transformed using your tool of choice and consumed by downstream applications. There exist a variety of configuration options for Mahout&#8217;s item based recommender to accommodate custom business requirements; exploring and testing various configurations to suit your needs will doubtless lead to additional questions. Our user community is accessible via our mailing list (&lt;a href=&quot;https://mahout.apache.org/general/mailing-lists,-irc-and-archives.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mahout.apache.org/general/mailing-lists,-irc-and-archives.html&lt;/a&gt;) and Mahout In Action is a fantastic starting point. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ssc&quot; class=&quot;user-hover&quot; rel=&quot;ssc&quot;&gt;Sebastian Schelter&lt;/a&gt; Let me know if you think this needs more tweaks. Aim was concision and enough context to get first time users thinking about what they could be doing with recommenders and get them running quickly.&lt;/p&gt;

&lt;p&gt;Also, from &lt;a href=&quot;https://mahout.apache.org/users/basics/quickstart.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mahout.apache.org/users/basics/quickstart.html&lt;/a&gt; the &quot;Do&apos;s and Don&apos;ts&quot; link on this page goes to nowhere. I&apos;ll spin a JIRA for the fix. &lt;/p&gt;</comment>
                            <comment id="13969213" author="ssc" created="Tue, 15 Apr 2014 05:38:00 +0100"  >&lt;p&gt;Added to the website at &lt;a href=&quot;https://mahout.apache.org/users/recommender/intro-itembased-hadoop.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mahout.apache.org/users/recommender/intro-itembased-hadoop.html&lt;/a&gt; . Thanks for the contribution!&lt;/p&gt;</comment>
                            <comment id="13969331" author="hudson" created="Tue, 15 Apr 2014 09:27:33 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #2570 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2570/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2570/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1445&quot; title=&quot;Create an intro for item based recommender&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1445&quot;&gt;&lt;del&gt;MAHOUT-1445&lt;/del&gt;&lt;/a&gt; Create an intro for item based recommender (ssc: rev 1587407)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Apr 2014 08:39:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>378188</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzn0p3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>378481</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>