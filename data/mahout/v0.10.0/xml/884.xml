<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:20:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-884/MAHOUT-884.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-884] Matrix Concatenate utility</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-884</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Utility to concatenate matrices stored as SequenceFiles of vectors.&lt;br/&gt;
Each pair in the SequenceFile is the IntWritable row number and a VectorWritable.&lt;br/&gt;
The input and output files may skip rows. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12531283">MAHOUT-884</key>
            <summary>Matrix Concatenate utility</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="smarthi">Suneel Marthi</assignee>
                                    <reporter username="lancenorskog">Lance Norskog</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Nov 2011 06:53:25 +0000</created>
                <updated>Mon, 3 Feb 2014 08:05:57 +0000</updated>
                            <resolved>Sun, 9 Jun 2013 23:32:29 +0100</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.8</fixVersion>
                                    <component>Integration</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13149469" author="lancenorskog" created="Mon, 14 Nov 2011 06:57:56 +0000"  >&lt;p&gt;I forgot about NamedVectors &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="13149470" author="jake.mannix" created="Mon, 14 Nov 2011 06:58:13 +0000"  >&lt;p&gt;why do we want the part files squished into one?  If the result is small enough to read into memory somewhere, then you can easily just iterate over the part files, reading each one into memory, right?&lt;/p&gt;</comment>
                            <comment id="13149483" author="danbri" created="Mon, 14 Nov 2011 07:41:10 +0000"  >&lt;p&gt;My original use case was here: &lt;a href=&quot;http://www.searchworkings.org/forum/-/message_boards/view_message/356639&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.searchworkings.org/forum/-/message_boards/view_message/356639&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;&quot;&quot;I have a matrix of 100,000 items x 30k features; and another of those&lt;br/&gt;
same 100,000 items, x however-many different features (from n-gram&lt;br/&gt;
collocation extraction). In current app, these are library holdings&lt;br/&gt;
and subject codes + extracted phrases. (later these should be 14&lt;br/&gt;
million items by somewhat but not shockingly larger feature space, if&lt;br/&gt;
that is useful to know)&lt;/p&gt;

&lt;p&gt;I&apos;d like to compose these into a larger unified feature matrix, with&lt;br/&gt;
same row structure, and with feature columns drawing from both input&lt;br/&gt;
matrices. So far in this work I&apos;ve managed to get by using bin/mahout&lt;br/&gt;
rather than firing up Eclipse and messing with Java; I&apos;d be happy to&lt;br/&gt;
learn I can continue in this work style. But if custom code is needed&lt;br/&gt;
that&apos;s fine. Either way, some pointer would be much appreciated...&quot;&quot;&quot;&lt;/p&gt;</comment>
                            <comment id="13149487" author="jake.mannix" created="Mon, 14 Nov 2011 08:11:35 +0000"  >&lt;p&gt;Ah!  So the point is to concatenate the &lt;b&gt;rows themselves&lt;/b&gt;.  This makes much more sense, yes, I can see wanting to do this.&lt;/p&gt;

&lt;p&gt;Then this should be a map-reduce job, not a sequential process, as these matrices could be really large.  Identity mapper + reduce-side join with concatenation would be the most straightforward scalable way to do it.&lt;/p&gt;</comment>
                            <comment id="13151070" author="lancenorskog" created="Wed, 16 Nov 2011 07:23:38 +0000"  >&lt;p&gt;Support NamedVectors. If both input vectors have a name, the left one wins.&lt;/p&gt;</comment>
                            <comment id="13151074" author="lancenorskog" created="Wed, 16 Nov 2011 07:37:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Then this should be a map-reduce job, not a sequential process, as these matrices could be really large.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ah! But how are they stored? Is it an HDFS directory with part-r-00000 , 00001 ... 0000n for n distinct sets of rows?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Identity mapper + reduce-side join with concatenation would be the most straightforward scalable way to do it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The trick is that we want the vectors to come in right-to-left order at each reducer, so that the output vector writes sequentially. See in Ricky Ho&apos;s blog page, search for &quot;Optimized reducer-side join&quot;. He uses a partitioner to achieve this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://horicky.blogspot.com/2010/08/designing-algorithmis-for-map-reduce.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://horicky.blogspot.com/2010/08/designing-algorithmis-for-map-reduce.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13151075" author="lancenorskog" created="Wed, 16 Nov 2011 07:40:29 +0000"  >&lt;p&gt;What is the scope of matrix sizes where this really is worth running on, say, a ten-machine cluster v.s. a sequential program?&lt;/p&gt;</comment>
                            <comment id="13157669" author="lancenorskog" created="Sun, 27 Nov 2011 05:52:01 +0000"  >&lt;p&gt;Map-reduce does not handle this well. There are two ways to implement this in Hadoop:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Null Mapper -&amp;gt; Reducer&amp;lt;IntWritable,VectorWritable&amp;gt;
	&lt;ul&gt;
		&lt;li&gt;The Reducer loads iterators for all VectorWritables, then walks forward monotonically through all iterators.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Mapper -&amp;gt; Partitioner&amp;lt;1 Reducer per row&amp;gt; -&amp;gt; (Reducer&amp;lt;IntWritable index, DoubleWritable value&amp;gt;)
	&lt;ul&gt;
		&lt;li&gt;More: Reducer setup/teardown creates an output VectorWritable, each reduce() call receives one vector index and one or more values.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The first requires loading into memory the contents for row X, from each matrix, simultaneously. ConcatenateMatrices already has this problem, and does not copy the vectors over the network. The second is a &quot;map-increase&quot; algorithm: it creates a separate key pair for each value in the output matrix. Neither of these scale. &lt;/p&gt;

&lt;p&gt;The only way to do this is to precondition the input matrices into one file with ordered rows, and use the above single-threaded concatenator. If you want multiple files, you can partition the matrices into matching sets of rows: part-r-00000 is row 0-&amp;gt;499, part-r-00001 is row 500-&amp;gt;999... etc. You then run ConcatenateMatrices on each pair.&lt;/p&gt;

</comment>
                            <comment id="13157672" author="jake.mannix" created="Sun, 27 Nov 2011 06:33:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;The trick is that we want the vectors to come in right-to-left order at each reducer, so that the output vector writes sequentially. See in Ricky Ho&apos;s blog page, search for &quot;Optimized reducer-side join&quot;. He uses a partitioner to achieve this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, you just do a secondary sort-by-value (using a custom partitioner and comparator).&lt;/p&gt;</comment>
                            <comment id="13157676" author="jake.mannix" created="Sun, 27 Nov 2011 06:40:27 +0000"  >&lt;p&gt;There&apos;s a better way to do this, however, if both matrices have different column dimensionalities (which is always the case except for very special concatenations), you can put the cardinalities of each matrix in the Configuration, and then do the simple Identity Mapper and have the Reducer use the cardinality of the pair of Vectors to decide which goes first.&lt;/p&gt;

&lt;p&gt;No custom partitioner, comparator, and it&apos;s all simple scalable map-reduce.&lt;/p&gt;</comment>
                            <comment id="13176527" author="lancenorskog" created="Wed, 28 Dec 2011 08:54:29 +0000"  >&lt;p&gt;Completely redone. Now a Hadoop job which uses Jake&apos;s trick of caching the row widths. It supports any Writable as the key class. Input vectors can be in multiple files and out of order. Supports named vectors.&lt;/p&gt;

&lt;p&gt;Minuses:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Only concatenates two matrices&lt;/li&gt;
	&lt;li&gt;Hard-coded to SequentialAccessSparseVector with no compression&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13197415" author="smarthi" created="Wed, 1 Feb 2012 00:16:05 +0000"  >&lt;p&gt;Lance, Thanks for this effort. This is something I need now for the stuff I am working on. &lt;/p&gt;</comment>
                            <comment id="13206486" author="smarthi" created="Sun, 12 Feb 2012 19:00:55 +0000"  >&lt;p&gt;Has this code been committed to trunk yet. Looking at the code, the following call seems unnecessary as the retrieved metadata value is never used in getDimensions().&lt;/p&gt;

&lt;p&gt; Metadata m = reader.getMetadata();&lt;/p&gt;
</comment>
                            <comment id="13206679" author="lancenorskog" created="Mon, 13 Feb 2012 05:07:18 +0000"  >&lt;p&gt;You&apos;re right, the Metadata call should be removed. Mahout does not use the Metadata feature anywhere.&lt;/p&gt;</comment>
                            <comment id="13672144" author="tdunning" created="Sat, 1 Jun 2013 17:29:25 +0100"  >&lt;p&gt;Suneel, can you commit this if you think it is good?&lt;/p&gt;</comment>
                            <comment id="13672145" author="ssc" created="Sat, 1 Jun 2013 17:30:55 +0100"  >&lt;p&gt;regarding the patch: please make sure to always close readers in finally blocks and don&apos;t throw an InterruptedException if the job fails.&lt;/p&gt;</comment>
                            <comment id="13672150" author="smarthi" created="Sat, 1 Jun 2013 17:46:05 +0100"  >&lt;p&gt;Agree with Sebastian. I can work on this later today.&lt;/p&gt;</comment>
                            <comment id="13672154" author="smarthi" created="Sat, 1 Jun 2013 17:55:12 +0100"  >&lt;p&gt;Also will be adding unit tests as part of committing this patch.&lt;/p&gt;</comment>
                            <comment id="13672267" author="robinanil" created="Sat, 1 Jun 2013 22:58:51 +0100"  >&lt;p&gt;Not a blocker, might need some cleanup. Pushing to backlog&lt;/p&gt;</comment>
                            <comment id="13678783" author="smarthi" created="Sat, 8 Jun 2013 18:30:29 +0100"  >&lt;p&gt;Modified patch to be compatible with present codebase.&lt;/p&gt;</comment>
                            <comment id="13679201" author="smarthi" created="Sun, 9 Jun 2013 23:22:35 +0100"  >&lt;p&gt;Committed patch to trunk, will be adding additional test cases.&lt;/p&gt;</comment>
                            <comment id="13679217" author="hudson" created="Mon, 10 Jun 2013 00:14:52 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #2070 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2070/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2070/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-884&quot; title=&quot;Matrix Concatenate utility&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-884&quot;&gt;&lt;del&gt;MAHOUT-884&lt;/del&gt;&lt;/a&gt;: Matrix Concatenate Utility (Revision 1491309)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
smarthi : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/ConcatenateVectorsJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/ConcatenateVectorsReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/TestConcatenateVectorsJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/src/conf/driver.classes.default.props&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13679273" author="hudson" created="Mon, 10 Jun 2013 04:13:11 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #2071 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2071/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2071/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-884&quot; title=&quot;Matrix Concatenate utility&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-884&quot;&gt;&lt;del&gt;MAHOUT-884&lt;/del&gt;&lt;/a&gt;: Matrix Concatenate Utility change the utility name to concatmatrices (Revision 1491325)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
smarthi : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/src/conf/driver.classes.default.props&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12586877" name="MAHOUT-884.patch" size="12874" author="smarthi" created="Sat, 8 Jun 2013 18:28:06 +0100"/>
                            <attachment id="12508735" name="MAHOUT-884.patch" size="13581" author="lancenorskog" created="Wed, 28 Dec 2011 08:54:29 +0000"/>
                            <attachment id="12503849" name="MAHOUT-884.patch" size="18628" author="lancenorskog" created="Wed, 16 Nov 2011 07:23:38 +0000"/>
                            <attachment id="12503568" name="MAHOUT-884.patch" size="16780" author="lancenorskog" created="Mon, 14 Nov 2011 06:54:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Nov 2011 06:58:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>217019</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy2dr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22537</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>