<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:17:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-747/MAHOUT-747.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-747] Entropy implementation in Map/Reduce</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-747</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Hi again,&lt;/p&gt;

&lt;p&gt;because I got much to work with entropy and information gain ratio, I want to implement the following distributed algorithms:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Entropy (&lt;a href=&quot;https://secure.wikimedia.org/wikipedia/en/wiki/Entropy_%28information_theory%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://secure.wikimedia.org/wikipedia/en/wiki/Entropy_%28information_theory%29&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;Conditional Entropy (&lt;a href=&quot;https://secure.wikimedia.org/wikipedia/en/wiki/Conditional_entropy&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://secure.wikimedia.org/wikipedia/en/wiki/Conditional_entropy&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;Information Gain&lt;/li&gt;
	&lt;li&gt;Information Gain Ratio (&lt;a href=&quot;https://secure.wikimedia.org/wikipedia/en/wiki/Information_gain_ratio&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://secure.wikimedia.org/wikipedia/en/wiki/Information_gain_ratio&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This issue is at first only for entropy.&lt;/p&gt;

&lt;p&gt;Some questions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;In which package do the classes belong. I put them first at &apos;org.apache.mahout.math.stats&apos;, don&apos;t know if this is right, because they are components of information retrieval.&lt;/li&gt;
	&lt;li&gt;Entropy only reads a set of elements. As input i took a sequence file with keys of type Text and values anyone, because I only work with the keys. Is this the best practise?&lt;/li&gt;
	&lt;li&gt;Is there a generic solution, so that the type of keys can be anything inherited from Writable?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In Hadoop is a TokenCounterMapper, which emits each value with an IntWritable(1). I added a KeyCounterMapper into &apos;org.apache.mahout.common.mapreduce&apos; which does the same with the keys.&lt;/p&gt;

&lt;p&gt;Will append my patch soon.&lt;/p&gt;

&lt;p&gt;Regards, Christoph.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12512189">MAHOUT-747</key>
            <summary>Entropy implementation in Map/Reduce</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="c.nagel">Christoph Nagel</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Jun 2011 10:32:23 +0100</created>
                <updated>Thu, 9 Feb 2012 14:00:44 +0000</updated>
                            <resolved>Tue, 5 Jul 2011 14:54:32 +0100</resolved>
                                    <version>0.6</version>
                                    <fixVersion>0.6</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13057127" author="c.nagel" created="Wed, 29 Jun 2011 10:37:52 +0100"  >&lt;p&gt;First implementation&lt;/p&gt;</comment>
                            <comment id="13057138" author="srowen" created="Wed, 29 Jun 2011 11:30:27 +0100"  >&lt;p&gt;I somehow feel this is not a great fit for Hadoop. This is a really simple job, to be sure, and that&apos;s no bad thing per se. However it does raise the question of whether the big overheads of distributing buy you much.&lt;/p&gt;

&lt;p&gt;For example using a job to count the number of records in the input is a load of overhead for that task, even if you have done it well with a combiner.&lt;/p&gt;

&lt;p&gt;And the second job uses 1 reducer anyway; the &quot;meat&quot; of the computation is not distributed.&lt;/p&gt;

&lt;p&gt;I can surely imagine this computation existing as part of another computation, but I wonder if you wouldn&apos;t already have info at hand like the number of items? does this actually form a reusable component.&lt;/p&gt;</comment>
                            <comment id="13057346" author="c.nagel" created="Wed, 29 Jun 2011 18:00:04 +0100"  >&lt;p&gt;Hi Sean,&lt;/p&gt;

&lt;p&gt;the name and javadoc for my first map/reduce step wasn&apos;t so good. The task is not to count all elements.&lt;br/&gt;
In this step, the set gets grouped by elements and they were counted.&lt;br/&gt;
Example: &lt;span class=&quot;error&quot;&gt;&amp;#91;a, b, c, a, b, a&amp;#93;&lt;/span&gt; =&amp;gt; &lt;/p&gt;
{ a: 3, b: 2, c: 1 }

&lt;p&gt;The second claim is right, I will shift the log-Computations in the mapper. Will be faster.&lt;/p&gt;

&lt;p&gt;Regards, Christoph.&lt;/p&gt;</comment>
                            <comment id="13058578" author="c.nagel" created="Fri, 1 Jul 2011 15:41:33 +0100"  >&lt;p&gt;Second implementation.&lt;br/&gt;
Log-Calculation in Entropy shifted to the mapper, like discussed before.&lt;br/&gt;
Furthermore, ConditionalEntropy, InformationGain and InformationGainRatio are included.&lt;br/&gt;
Both last ones are used in decision trees to create the splits.&lt;/p&gt;</comment>
                            <comment id="13058661" author="srowen" created="Fri, 1 Jul 2011 18:29:22 +0100"  >&lt;p&gt;I have a number of comments from large to small.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I am still not sure how the entropy calculation is distributed. All map keys are NullWritable so they all go to one reducer.&lt;/li&gt;
	&lt;li&gt;CalculateSpecificConditionalEntropyMapper seems to store too much in memory &amp;#8211; a mapping for all keys. Does this not blow up at scale?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Aren&apos;t CalculateSimilarityCombiner and DoubleSumReducer virtually the same?&lt;/li&gt;
	&lt;li&gt;Use VarIntWritable instead of IntWritable for much better I/O efficiency&lt;/li&gt;
	&lt;li&gt;There&apos;s already a StringTuple class that would let you write a pair of Strings&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I prefer to avoid inner classes myself here but it&apos;s more a question of preference&lt;/li&gt;
	&lt;li&gt;I think it&apos;s more standard to use one capital letter for generic types (&quot;K&quot;) rather than words (&quot;Key&quot;)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13059496" author="c.nagel" created="Mon, 4 Jul 2011 17:06:32 +0100"  >&lt;p&gt;Added a new implementation.&lt;br/&gt;
@Sean Owen:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;why don&apos;t you think, that the entropy calculation is distributed? There are 2 m/r-tasks. First groups and counts, which can take max |key| reducer. Second does the calculation and sums all values in the reducer. OK, only one reducer can do this, but I don&apos;t see another way. Added a more complexity to it, sorry, because of better calculation. Thanks @Ted Dunning for his hint.&lt;/li&gt;
	&lt;li&gt;changed the conditionalEntropy calculation, so no join is needed.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;sorry, don&apos;t understand the point &quot;Aren&apos;t CalculateSimilarityCombiner and DoubleSumReducer virtually the same?&quot;. Can&apos;t find CalculateSimilarityCombiner.&lt;/li&gt;
	&lt;li&gt;Changed all IntWritable to VarIntWritable&lt;/li&gt;
	&lt;li&gt;Thanks for StringTuple, saves much lines.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Regards, Christoph.&lt;/p&gt;</comment>
                            <comment id="13059502" author="srowen" created="Mon, 4 Jul 2011 17:17:12 +0100"  >&lt;p&gt;The issue is that you&apos;re using NullWritable as the key. All keys go to the same place &amp;#8211; one reducer, whether or not you have run more than 1.&lt;/p&gt;

&lt;p&gt;I&apos;m referring to CalculateConditionalEntropyReducer and DoubleSumReducer. They only differ in the key/value ordering, and it seems they don&apos;t need to behave differently in this regard.&lt;/p&gt;
</comment>
                            <comment id="13059529" author="c.nagel" created="Mon, 4 Jul 2011 18:59:27 +0100"  >&lt;p&gt;Hi Sean,&lt;/p&gt;

&lt;p&gt;sorry, but if i need to sum a set of doubles to one value, how is it possible with more than one reducer?&lt;br/&gt;
Is there a best practise I don&apos;t see?&lt;/p&gt;

&lt;p&gt;For the second point, if we have one value and no key, is it better to store the value as key or value in the sequence file?&lt;/p&gt;

&lt;p&gt;Regards, Christoph.&lt;/p&gt;</comment>
                            <comment id="13059600" author="srowen" created="Mon, 4 Jul 2011 21:18:17 +0100"  >&lt;p&gt;Yes that&apos;s what I was getting at originally... you can&apos;t really distribute this entirely. The counting is distributable though, yes.&lt;/p&gt;

&lt;p&gt;I don&apos;t think there&apos;s a strong convention for writing null,value or value,null when outputting a single value. I think that since it saves you writing another class, you can just go with null,value.&lt;/p&gt;

&lt;p&gt;There are some other items here I&apos;d like to tweak in the code but they are small. For example I may want to move or merge some of these classes. But yes I can take a look soon and put it in. It&apos;s a simple job that does something useful, so seems OK to add.&lt;/p&gt;</comment>
                            <comment id="13059904" author="srowen" created="Tue, 5 Jul 2011 14:54:32 +0100"  >&lt;p&gt;OK I submitted this with moderate changes. Most of it is streamlining and using some common code that simplifies this. Much of it was putting this all into its own package. Some is small style changes. I had to fix it to ignore _SUCCESS files found in Hadoop 0.22+ distros.&lt;/p&gt;</comment>
                            <comment id="13059909" author="ssc" created="Tue, 5 Jul 2011 15:00:55 +0100"  >&lt;p&gt;Gratulations to your first committed Apache code, Christoph!&lt;/p&gt;</comment>
                            <comment id="13060624" author="c.nagel" created="Wed, 6 Jul 2011 16:03:28 +0100"  >&lt;p&gt;Cool &amp;amp; Thanks. Looked at it and only one question.&lt;br/&gt;
Isn&apos;t *.common.mapreduce the best package for DoubleSumReducer, KeyCounterMapper, ValueCounterMapper, VarInSumReducer? These are generic mapper and reducer and while coding, I was surprised, that nobody had implemented them yet.&lt;/p&gt;

&lt;p&gt;Regards, Christoph.&lt;/p&gt;</comment>
                            <comment id="13060641" author="srowen" created="Wed, 6 Jul 2011 16:35:46 +0100"  >&lt;p&gt;Yes they could go there too. My personal preference would be to keep it next to the code where it is used, for now, until there is a need to refactor it so it can be used elsewhere. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12485162" name="MAHOUT-747.patch" size="43733" author="c.nagel" created="Mon, 4 Jul 2011 16:59:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 29 Jun 2011 10:30:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9315</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy387:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22674</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>