<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:21:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1142/MAHOUT-1142.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1142] TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI is broken with Hadoop 0.23.5</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1142</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Stacktrace&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: number of clean eigenvectors expected:&amp;lt;3&amp;gt; but was:&amp;lt;0&amp;gt;&lt;br/&gt;
at org.junit.Assert.fail(Assert.java:91)&lt;br/&gt;
at org.junit.Assert.failNotEquals(Assert.java:645)&lt;br/&gt;
at org.junit.Assert.assertEquals(Assert.java:126)&lt;br/&gt;
at org.junit.Assert.assertEquals(Assert.java:470)&lt;br/&gt;
at org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI(TestDistributedLanczosSolverCLI.java:143)&lt;br/&gt;
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)&lt;br/&gt;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)&lt;br/&gt;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&lt;br/&gt;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)&lt;br/&gt;
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)&lt;br/&gt;
at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)&lt;br/&gt;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)&lt;br/&gt;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)&lt;br/&gt;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&lt;br/&gt;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&lt;br/&gt;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&lt;br/&gt;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&lt;br/&gt;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&lt;br/&gt;
at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&lt;br/&gt;
at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:236)&lt;br/&gt;
at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:134)&lt;br/&gt;
at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:113)&lt;br/&gt;
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&lt;br/&gt;
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&lt;br/&gt;
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&lt;br/&gt;
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)&lt;br/&gt;
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12628154">MAHOUT-1142</key>
            <summary>TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI is broken with Hadoop 0.23.5</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="jxiang">Jimmy Xiang</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Jan 2013 04:04:55 +0000</created>
                <updated>Mon, 3 Feb 2014 08:06:05 +0000</updated>
                            <resolved>Tue, 22 Jan 2013 11:41:59 +0000</resolved>
                                    <version>0.8</version>
                                    <fixVersion>0.8</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13556949" author="jxiang" created="Fri, 18 Jan 2013 04:08:47 +0000"  >&lt;p&gt;This test is broken due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-8906&quot; title=&quot;paths with multiple globs are unreliable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-8906&quot;&gt;&lt;del&gt;HADOOP-8906&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The issue is that if the path pattern is something like &quot;/parent_path/file/*&quot;, the original FileSystem#globStatus will return the status of the file &quot;/parent_path/file&quot;. The new one (&lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-8906&quot; title=&quot;paths with multiple globs are unreliable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-8906&quot;&gt;&lt;del&gt;HADOOP-8906&lt;/del&gt;&lt;/a&gt;) returns nothing since &quot;file&quot; is a file, not a folder.&lt;/p&gt;</comment>
                            <comment id="13557125" author="srowen" created="Fri, 18 Jan 2013 10:49:23 +0000"  >&lt;p&gt;0.23.x / 2.x is not supported, and this change doesn&apos;t compile against 1.x. That is probably fixable though.&lt;/p&gt;

&lt;p&gt;I read the issue. You&apos;re saying that globbing &quot;foo/*&quot; would return the status of &quot;foo&quot; now, but it doesn&apos;t. If it was &apos;fixed&apos; to return nothing, that would also seem to not work, and isn&apos;t correct either. I assume the Hadoop issue did fix globbing problems, but they seem to be related to multiple wildcards. &lt;/p&gt;

&lt;p&gt;I am not sure this is the issue, if there is one? it works vs the stable supported version of Hadoop, so I&apos;m going to close, but if we can identify a backwards-compatible change that makes it work in both cases that&apos;s cool.&lt;/p&gt;</comment>
                            <comment id="13557643" author="mpercy" created="Fri, 18 Jan 2013 21:47:47 +0000"  >&lt;p&gt;Updating Jimmy&apos;s patch to update the file offsets against trunk. I don&apos;t have perms to reopen this JIRA, but the updated patch compiles for me against Hadoop 1.0.4.&lt;/p&gt;

&lt;p&gt;Both of these work for me after applying Jimmy&apos;s patch:&lt;/p&gt;

&lt;p&gt;(1) mvn clean install -Dtest=TestDistributedLanczosSolverCLI,TestDistributedRowMatrix -DfailIfNoTests=false&lt;/p&gt;

&lt;p&gt;(2) mvn clean install -Dhadoop.version=0.23.5 -Dtest=TestDistributedLanczosSolverCLI,TestDistributedRowMatrix -DfailIfNoTests=false&lt;/p&gt;

&lt;p&gt;Before applying the patch, only (1) succeeds. After applying the patch, both (1) and (2) succeed.&lt;/p&gt;</comment>
                            <comment id="13557648" author="mpercy" created="Fri, 18 Jan 2013 21:50:25 +0000"  >&lt;p&gt;It&apos;s worth noting that &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-8906&quot; title=&quot;paths with multiple globs are unreliable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-8906&quot;&gt;&lt;del&gt;HADOOP-8906&lt;/del&gt;&lt;/a&gt; is designed to make &quot;hadoop fs -ls blah/*&quot; return nothing if &quot;blah&quot; is a file, which is consistent with Linux/Unix systems. If &quot;blah&quot; is a directory, it will still list the contents. This patch just differentiates between the two and tries to maintain backwards compatibility.&lt;/p&gt;</comment>
                            <comment id="13557669" author="jxiang" created="Fri, 18 Jan 2013 22:08:20 +0000"  >&lt;p&gt;Reopen it, which is a valid issue.&lt;/p&gt;</comment>
                            <comment id="13557977" author="srowen" created="Sat, 19 Jan 2013 12:28:40 +0000"  >&lt;p&gt;This is the same patch. isDirectory() is deprecated and its replacement throws IOException. That&apos;s mostly a detail but I do think it&apos;s worth noting that #1 the priority is being compatible with the most recent stable release.&lt;/p&gt;

&lt;p&gt;The thing is that the test is already passing a directory, so I don&apos;t see how this would change anything. Either that&apos;s wrong, and the test needs to be fixed... or it&apos;s not, and the problem is elsewhere. Either way this does not seem like the patch to apply (even overlooking the compile/deprecation problem).&lt;/p&gt;

&lt;p&gt;Can anyone explain the above, and/or provide a patch suitable for 1.x?&lt;/p&gt;</comment>
                            <comment id="13559245" author="jxiang" created="Tue, 22 Jan 2013 00:42:52 +0000"  >&lt;p&gt;The test passes a directory.  Inside the core code, it passes directories as well in many places.  However, at one time, it passes a file.  It is easy to find out by running the same test from eclipse with a break point in the place this patch touched. &lt;/p&gt;</comment>
                            <comment id="13559284" author="mpercy" created="Tue, 22 Jan 2013 01:52:31 +0000"  >&lt;p&gt;Here are some examples.&lt;/p&gt;

&lt;p&gt;Passes a directory:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;tt&gt;TestDistributedRowMatrix.testTranspose()&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;TestDistributedRowMatrix.testMatrixTimesMatrix()&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Passes a file:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;tt&gt;TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI()&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll attach a patch that uses the less-deprecated API, FileSystem.get(conf).getFileStatus(rowPath).isDir(). Sadly, in 0.23.x and 2.0.x they have deprecated isDir() in favor of isDirectory() - even though only isDir() is available in Hadoop 1.x.x. So there may still be deprecation warnings when compiled against 0.23/2.0 versions but that seems to be the right way to handle this case.&lt;/p&gt;</comment>
                            <comment id="13559342" author="mpercy" created="Tue, 22 Jan 2013 03:19:38 +0000"  >&lt;p&gt;Updated patch using getFileStatus().isDir() API.&lt;/p&gt;</comment>
                            <comment id="13559482" author="srowen" created="Tue, 22 Jan 2013 08:35:23 +0000"  >&lt;p&gt;I don&apos;t see where it passes a file &amp;#8211; &quot;distMatrix&quot; is a directory, or should be and appears to be. This would be the better fix, since it is supposed to consume a directory. It seems like it does though.&lt;/p&gt;

&lt;p&gt;I suspect, though I don&apos;t know, that this is not the problem. You can get a &quot;0&quot; in other cases, like when the RNG seeds differently, in my past experience. It could be a red herring, but it could also explain why shuffling up the dependencies and such changes things slightly to make this fail.&lt;/p&gt;</comment>
                            <comment id="13559498" author="mpercy" created="Tue, 22 Jan 2013 09:14:49 +0000"  >&lt;p&gt;I hacked up the file to get some debug info and below is what I got running under the default (Hadoop 1.0.0) profile. The test is not passing a directory in the below stacktrace, it&apos;s a file.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;rowPath is a file. Path = file:/tmp/mahout-TestDistributedLanczosSolverCLI-7708908523833467904/output/rawEigenvectors
java.lang.Exception: Stack trace for debug
  at org.apache.mahout.math.hadoop.DistributedRowMatrix.iterateAll(DistributedRowMatrix.java:146)
  at org.apache.mahout.math.hadoop.DistributedRowMatrix.iterator(DistributedRowMatrix.java:292)
  at org.apache.mahout.math.hadoop.decomposer.EigenVerificationJob.verifyEigens(EigenVerificationJob.java:248)
  at org.apache.mahout.math.hadoop.decomposer.EigenVerificationJob.run(EigenVerificationJob.java:159)
  at org.apache.mahout.math.hadoop.decomposer.DistributedLanczosSolver.run(DistributedLanczosSolver.java:159)
  at org.apache.mahout.math.hadoop.decomposer.DistributedLanczosSolver.run(DistributedLanczosSolver.java:112)
  at org.apache.mahout.math.hadoop.decomposer.DistributedLanczosSolver$DistributedLanczosSolverJob.run(DistributedLanczosSolver.java:284)
  at org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI(TestDistributedLanczosSolverCLI.java:109)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
  at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
  at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
  at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
  at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
  at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
  at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
  at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
  at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
  at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
  at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
  at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
  at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
  at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
  at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sean, are you saying this should not be supported? I don&apos;t see why it would be problematic. However, an alternative could be to check for isDir() in the DistributedRowMatrix constructor and throw an IllegalArgumentException if a non-directory path is detected. We would also need to clarify the semantics in the javadocs. It seems a bit strong but at least it&apos;s consistent. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13559501" author="srowen" created="Tue, 22 Jan 2013 09:27:00 +0000"  >&lt;p&gt;OK, it&apos;s much farther down. It seems fine to support this, if it&apos;s not merely a test error, but seems actually like the desired behavior in the first place. This is a latent bug then &amp;#8211; I don&apos;t know, didn&apos;t write this code. I agree with checking for a directory. It just has to be done in a way that works with 1.x; it&apos;s OK if that is later deprecated if it&apos;s not in 1.x. So yes the last patch you attached looks right.&lt;/p&gt;</comment>
                            <comment id="13559513" author="mpercy" created="Tue, 22 Jan 2013 09:44:31 +0000"  >&lt;p&gt;Great!&lt;/p&gt;</comment>
                            <comment id="13559607" author="hudson" created="Tue, 22 Jan 2013 12:59:51 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1834 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1834/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1834/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1142&quot; title=&quot;TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI is broken with Hadoop 0.23.5&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1142&quot;&gt;&lt;del&gt;MAHOUT-1142&lt;/del&gt;&lt;/a&gt; support single file input (Revision 1436840)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
srowen : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1436840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1436840&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/DistributedRowMatrix.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13559770" author="mpercy" created="Tue, 22 Jan 2013 17:02:40 +0000"  >&lt;p&gt;Thanks for the commit Sean!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                                                <inwardlinks description="is broken by">
                                        <issuelink>
            <issuekey id="12611052">HADOOP-8906</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12565562" name="MAHOUT-1142-2.patch" size="1121" author="mpercy" created="Fri, 18 Jan 2013 21:47:47 +0000"/>
                            <attachment id="12565900" name="MAHOUT-1142-3.patch" size="1419" author="mpercy" created="Tue, 22 Jan 2013 03:19:38 +0000"/>
                            <attachment id="12565430" name="mahout-1142.patch" size="1121" author="jxiang" created="Fri, 18 Jan 2013 04:06:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Jan 2013 10:49:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>305009</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz1xlr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>255288</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>