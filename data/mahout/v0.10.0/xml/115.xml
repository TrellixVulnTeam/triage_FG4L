<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:26:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-115/MAHOUT-115.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-115] Interpolated Knn and SVD Recommender</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-115</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Item based recommender implementation that uses K-nearest neighbors with interpolated weights, based on the paper of Robert M. Bell and Yehuda Koren&lt;br/&gt;
in ICDM &apos;07.&lt;br/&gt;
Recommender implementation that uses Single Value Decomposition to capture the features of a DataSet.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12422606">MAHOUT-115</key>
            <summary>Interpolated Knn and SVD Recommender</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="panisson">Andre Panisson</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Apr 2009 22:00:22 +0100</created>
                <updated>Tue, 16 Feb 2010 16:55:39 +0000</updated>
                            <resolved>Sun, 12 Apr 2009 15:58:56 +0100</resolved>
                                                    <fixVersion>0.2</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12697980" author="panisson" created="Fri, 10 Apr 2009 22:10:02 +0100"  >&lt;p&gt;The version I&apos;m working with. There are still some fixes to make, and some modifications as adding documentation and license.&lt;br/&gt;
Some work is still needed in the Knn implementation to follow exactly the paper description, but I&apos;m already having very good results with it.&lt;/p&gt;</comment>
                            <comment id="12697985" author="srowen" created="Fri, 10 Apr 2009 22:28:59 +0100"  >&lt;p&gt;Broadly, looking great to me. Would you like me to commit it, plus a first pass of tweaks (like updating the copyright headers, etc.), or would you prefer to iterate a little more on the patch?&lt;/p&gt;</comment>
                            <comment id="12698071" author="srowen" created="Sat, 11 Apr 2009 12:19:34 +0100"  >&lt;p&gt;Here&apos;s my patch in reply. The changes are mostly:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Reformatting and changes to javadoc, including copyright header&lt;/li&gt;
	&lt;li&gt;Removed debug/dead code&lt;/li&gt;
	&lt;li&gt;A few initial micro-optimizations to loops from IntelliJ&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The two substantive questions/changes outstanding are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I removed the bits of code that assume the pref value must be in the range 1 to 5, since that&apos;s not generally true. Does this break other assumptions?&lt;/li&gt;
	&lt;li&gt;Why is Knn an item-based recommender? actually it looks like an item-based recommender with another recommender bolted on the side... at first glance it looks like should just be a &quot;Recommender&quot; and then I can scrape out a lot of what was copied from GenericItemBasedRecommender&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12698097" author="panisson" created="Sat, 11 Apr 2009 15:30:21 +0100"  >&lt;p&gt;The changes are ok, they do not affect the overall behavior of the recommenders.&lt;/p&gt;

&lt;p&gt;About your questions Sean:&lt;/p&gt;

&lt;p&gt;First, I think it is good to not assume the pref value is in the range 1 to 5. The final evaluation will be a little worst, but I think that cutting the final predictions to bound values should be the work of some &quot;outer&quot; recommender that knows the domain of the predictions.&lt;/p&gt;

&lt;p&gt;Second, the Knn is a variation of the generic item-based recommender. It first takes the item i and calculates the k nearest neighbors of item i. The difference is in the calculation of the final prediction: instead of taking the similarity of each neighbor as the weight of each preference, it first makes a linear interpolation to calculate the best weights to apply in each preference. The paper of Bell and Koren have the details about it. As you see, this is an item-centric recommender, and we could create a different recommender just taking the neighbors of users instead of the neighbors of items. In this second case, the recommender would be a variation of the generic user-based recommender, but taking the values of a linear interpolation as the weights of each neighbor.&lt;/p&gt;

&lt;p&gt;I think that the discussion about which one is better is beyond this comment, but the item-centric approach is much more used in practice because the data sets are limited in the number of items. In these cases, an item-centric approach have better results and better performance. But, as a researcher of social and complex networks, I think this is not the general case - see the cases of YouTube, LastFM, and also P2P clients, where the number of items is much greater than the number of users. In these cases, I think a user-centric approach would have better results.&lt;/p&gt;</comment>
                            <comment id="12698123" author="srowen" created="Sat, 11 Apr 2009 20:20:37 +0100"  >&lt;p&gt;OK here&apos;s an update to Knn, the source file itself. I have instead made it extend GenericItemBasedRecommender &amp;#8211; seems more natural that way. I believe it has the same functionality.&lt;/p&gt;

&lt;p&gt;How&apos;s that looking for an initial patch?&lt;/p&gt;</comment>
                            <comment id="12698130" author="panisson" created="Sat, 11 Apr 2009 21:28:01 +0100"  >&lt;p&gt;The behavior of the method doEstimatePreference is different from the original in a way it definitely affects the results. The problem is that you should take the k nearest neighbors of item i that had also been evaluated by user u. That&apos;s why you need to have a method mostSimilarItems that returns the nearest neighbors among a given set of items.&lt;/p&gt;</comment>
                            <comment id="12698137" author="srowen" created="Sat, 11 Apr 2009 22:20:34 +0100"  >&lt;p&gt;I see, yes. So, might we simply use all of a user&apos;s preferences as the &apos;neighborhood&apos;? Seems OK in the sense that we don&apos;t need to select a subset of all items here &amp;#8211; the user&apos;s set of preferred items is already small. Is there a need to order them by similarity to a given item, or some other reason I am missing?&lt;/p&gt;

&lt;p&gt;That is what if we have...&lt;/p&gt;

&lt;p&gt;  @Override&lt;br/&gt;
  protected double doEstimatePreference(User theUser, Item item) throws TasteException {&lt;/p&gt;

&lt;p&gt;    List&amp;lt;Item&amp;gt; theNeighborhood = new ArrayList&amp;lt;Item&amp;gt;();&lt;br/&gt;
    for (Preference pref : theUser.getPreferences()) {&lt;br/&gt;
      Item theItem = pref.getItem();&lt;br/&gt;
      if (!theItem.equals(item)) &lt;/p&gt;
{
        theNeighborhood.add(theItem);
      }
&lt;p&gt;    }&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;Either way, now that I have looked at it in more detail, I perhaps should not make it extend GenericItemBasedRecommender. At the moment all it is really doing is overriding doEstimatePreference() and not really interacting with the other logic in the superclass. It should probably just extend AbstractRecommender, though indeed it can re-use some code and has some similarities to an item-based recommender (at least as I define the term).&lt;/p&gt;</comment>
                            <comment id="12698139" author="srowen" created="Sat, 11 Apr 2009 22:23:44 +0100"  >&lt;p&gt;Actually scratch my comment about GenericItemBasedRecommender... still need to think about it, still in the process of understanding how this fits together. It might be best to be a subclass after all.&lt;/p&gt;</comment>
                            <comment id="12698147" author="panisson" created="Sun, 12 Apr 2009 01:25:54 +0100"  >&lt;p&gt;We still need to select the &quot;k&quot; nearest neighbors of the item, and it is not sufficient to take all the user&apos;s preferences as the neighborhood. And thinking about this, I think we could give the &quot;k&quot; (NEIGHBORHOOD_SIZE) as a parameter of the constructor, and maybe also the Optimizer as an optional parameter, if the user wants to change the optimizer implementation. I think subclassing is a good option, and maybe an AbstractItemBasedRecommender with the common methods would also be a good option.&lt;/p&gt;</comment>
                            <comment id="12698175" author="srowen" created="Sun, 12 Apr 2009 07:59:02 +0100"  >&lt;p&gt;OK very good, I restored this part. I parameterized neighborhoodSize and also the optimizer implementation. How about this to start?&lt;/p&gt;</comment>
                            <comment id="12698222" author="panisson" created="Sun, 12 Apr 2009 15:00:18 +0100"  >&lt;p&gt;Very good Sean! I had exactly the same results, even without cutting the final predictions to bound values! I think it&apos;s a good start.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12405228" name="KNNandSVD.patch" size="35630" author="srowen" created="Sat, 11 Apr 2009 12:19:34 +0100"/>
                            <attachment id="12405261" name="KNNandSVD2.patch" size="28308" author="srowen" created="Sun, 12 Apr 2009 07:59:02 +0100"/>
                            <attachment id="12405239" name="KnnItemBasedRecommender.java" size="4167" author="srowen" created="Sat, 11 Apr 2009 20:20:37 +0100"/>
                            <attachment id="12405198" name="mahout.patch" size="34451" author="panisson" created="Fri, 10 Apr 2009 22:10:02 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 Apr 2009 21:28:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9950</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy73z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23303</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>