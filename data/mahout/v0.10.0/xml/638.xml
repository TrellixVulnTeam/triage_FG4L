<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:28:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-638/MAHOUT-638.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-638] Stochastic svd&apos;s is not handling well all cases of sparse vectors </title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-638</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;The Mahout patch of the algorithm is not handling all types of sparse input efficiently. BtJob doesn&apos;t handle SequentialSparseVector in a way to pick only non-zero elements from initial input and QJob doesn&apos;t iterate over RandomAccessSparseVector correctly. With extremely sparse inputs (0.05% non-zero elements) that leads to a terrible inefficiency in the aforementioned jobs (QJob, BtJob).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12502605">MAHOUT-638</key>
            <summary>Stochastic svd&apos;s is not handling well all cases of sparse vectors </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dlyubimov">Dmitriy Lyubimov</assignee>
                                    <reporter username="dlyubimov">Dmitriy Lyubimov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Mar 2011 18:07:18 +0100</created>
                <updated>Mon, 29 Aug 2011 23:31:51 +0100</updated>
                            <resolved>Tue, 19 Apr 2011 19:29:18 +0100</resolved>
                                    <version>0.5</version>
                                    <fixVersion>0.5</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13012175" author="dlyubimov" created="Mon, 28 Mar 2011 19:55:47 +0100"  >&lt;p&gt;is that the best way to do row-wise outer product computation (rows A and Q)?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ( (aRow &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; SequentialAccessSparseVector) ||
          (aRow &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RandomAccessSparseVector )) {
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; ( Vector.Element el:aRow ) { 
          &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; mul=el.get();
          &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; ( &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j =0; j &amp;lt; kp; j++ ) 
            btRow.setQuick(j, mul * qRow.getQuick(j));
          btKey.set(el.index());
          context.write(btKey, btValue);
        }
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; { 
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; n = aRow.size();
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; n; i++) {
          &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; mul = aRow.getQuick(i);
          &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = 0; j &amp;lt; kp; j++)
            btRow.setQuick(j, mul * qRow.getQuick(j));
          btKey.set(i);
          context.write(btKey, btValue);
        }
      }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13012184" author="dlyubimov" created="Mon, 28 Mar 2011 20:16:35 +0100"  >&lt;p&gt;adding missing support for sparse vectors during projection and multiplication (partial outer product computation)&lt;/p&gt;</comment>
                            <comment id="13013899" author="srowen" created="Thu, 31 Mar 2011 10:53:14 +0100"  >&lt;p&gt;Vector has properties isDense() and isSequentialAccess() which should prevent us from ever needing instanceof.  The patch doesn&apos;t quite match code style, but, that&apos;s minor enough. It&apos;ll get cleaned up eventually by me, though might have a glance at the rest of the code for spacing / brace conventions and such.&lt;/p&gt;

&lt;p&gt;Otherwise I&apos;m sure you&apos;re welcome to proceed.&lt;/p&gt;</comment>
                            <comment id="13014040" author="dlyubimov" created="Thu, 31 Mar 2011 16:55:51 +0100"  >&lt;p&gt;Yeah. I looked the &lt;tt&gt;instanceof&lt;/tt&gt; use somewhere in DRM code, it would seem either vector contract deficient, or it was not used properly. I&apos;ll patch it. &lt;/p&gt;

&lt;p&gt;Strange. I committed that patch yesterday since a user was waiting to validate this code. Jenkins did not comment on it, although i am pretty sure it had the issue number in the commit comment.&lt;/p&gt;</comment>
                            <comment id="13014287" author="hudson" created="Fri, 1 Apr 2011 00:30:45 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #708 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/708/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/708/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13014338" author="dlyubimov" created="Fri, 1 Apr 2011 02:09:43 +0100"  >&lt;p&gt;Let me do one more round on this, please. Please don&apos;t close it yet. Thanks.&lt;/p&gt;</comment>
                            <comment id="13020840" author="dlyubimov" created="Sun, 17 Apr 2011 19:39:13 +0100"  >&lt;p&gt;Second installment: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;reworked to use Vector#isDense().&lt;/li&gt;
	&lt;li&gt;isolating code with valid warnings and marking them with @SuppressWarnings().&lt;/li&gt;
	&lt;li&gt;adding test for sparse matrix.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13020843" author="dlyubimov" created="Sun, 17 Apr 2011 19:42:57 +0100"  >&lt;p&gt;Fixing checkstyle complaints.&lt;/p&gt;

&lt;p&gt;I will let this patch sit for another day and commit it if no objections. This is a small change.&lt;/p&gt;</comment>
                            <comment id="13020844" author="dlyubimov" created="Sun, 17 Apr 2011 19:44:21 +0100"  >&lt;p&gt;Fixing checkstyle complaints. &lt;br/&gt;
This is a small change. i will let it sit here for another day before committing. I will commit if no objections in a day.&lt;/p&gt;</comment>
                            <comment id="13020845" author="dlyubimov" created="Sun, 17 Apr 2011 19:45:32 +0100"  >&lt;p&gt;Ooops. please ignore -622 patch, it does not belong here. &lt;/p&gt;

&lt;p&gt;Second installment patch is &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-638&quot; title=&quot;Stochastic svd&amp;#39;s is not handling well all cases of sparse vectors &quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-638&quot;&gt;&lt;del&gt;MAHOUT-638&lt;/del&gt;&lt;/a&gt;-2.patch.&lt;/p&gt;</comment>
                            <comment id="13020863" author="dlyubimov" created="Sun, 17 Apr 2011 21:41:22 +0100"  >&lt;p&gt;Github url for this issue: &lt;a href=&quot;https://github.com/dlyubimov/mahout-commits/tree/MAHOUT-638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/dlyubimov/mahout-commits/tree/MAHOUT-638&lt;/a&gt; (pull requests are welcome).&lt;/p&gt;</comment>
                            <comment id="13021638" author="hudson" created="Tue, 19 Apr 2011 17:17:49 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #761 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/761/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/761/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-638&quot; title=&quot;Stochastic svd&amp;#39;s is not handling well all cases of sparse vectors &quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-638&quot;&gt;&lt;del&gt;MAHOUT-638&lt;/del&gt;&lt;/a&gt;: second installment of fixes, sequential sparse source test&lt;/p&gt;</comment>
                            <comment id="13021673" author="hudson" created="Tue, 19 Apr 2011 18:31:33 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #762 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/762/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/762/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-638&quot; title=&quot;Stochastic svd&amp;#39;s is not handling well all cases of sparse vectors &quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-638&quot;&gt;&lt;del&gt;MAHOUT-638&lt;/del&gt;&lt;/a&gt;: fixing a row multiplication for sparse input&lt;/p&gt;</comment>
                            <comment id="13092649" author="dlyubimov" created="Mon, 29 Aug 2011 07:01:56 +0100"  >&lt;p&gt;This  of course is still wrong. I looked at the implementAtion of the full iterator in sparse vectors and it does sequential iteration, whereas I assumed it is equivAlent to iteratenonzero. So this fix is not the right one and sparse inputs are still handled deficiently. &lt;/p&gt;

&lt;p&gt;I cannot reopen this one, so I will commit the quick fix for that in one of the other re lated issues.&lt;/p&gt;</comment>
                            <comment id="13092652" author="tdunning" created="Mon, 29 Aug 2011 07:06:47 +0100"  >&lt;p&gt;Don&apos;t even assume that iteratorNonZero will never return zeros.&lt;/p&gt;</comment>
                            <comment id="13092910" author="dlyubimov" created="Mon, 29 Aug 2011 16:26:56 +0100"  >&lt;p&gt;but it doesn&apos;t show all zeros, right? otherwise, what&apos;s the best way to iterate thru non-zero elements of a sparse vector?&lt;/p&gt;

&lt;p&gt;i just want not to iterate thru millions of zeros, but i am ok to iterate thru few of them.&lt;/p&gt;</comment>
                            <comment id="13092913" author="tdunning" created="Mon, 29 Aug 2011 16:32:21 +0100"  >&lt;p&gt;Right.  IterateNonZero is &lt;b&gt;allowed&lt;/b&gt; to not returned zeros, but it is not &lt;b&gt;guaranteed&lt;/b&gt; to never return a zero.&lt;/p&gt;

&lt;p&gt;If you want to go faster, then it is the thing to use.  There is no contract, however, that says that it will be faster and for a dense matrix, it may well not be.  It would be good to have the dense iterator avoid showing zeros if only to avoid constructing the little Element structure unnecessarily.&lt;/p&gt;</comment>
                            <comment id="13092918" author="dlyubimov" created="Mon, 29 Aug 2011 16:39:46 +0100"  >&lt;p&gt;Ok... my latest version to compute Y buffer (which also may be sparse, but i handled it separately looks like this : &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void computeYRow(Vector aRow, &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;[] yRow) {
    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; yRow.length == kp;
&lt;/span&gt;    Arrays.fill(yRow, 0.0);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (aRow.isDense()) {
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; n = aRow.size();
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = 0; j &amp;lt; n; j++) {
        accumDots(j, aRow.getQuick(j), yRow);
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Iterator&amp;lt;Element&amp;gt; iter = aRow.iterateNonZero(); iter.hasNext();) {
        Element el = iter.next();
        accumDots(el.index(), el.get(), yRow);
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does it look good to you? Do you think Y should be handled as RandomAcessSparseVector instead?&lt;/p&gt;</comment>
                            <comment id="13092939" author="tdunning" created="Mon, 29 Aug 2011 17:03:06 +0100"  >&lt;p&gt;I don&apos;t know the context well enough here.&lt;/p&gt;

&lt;p&gt;Why is simple multiplication not good enough here?&lt;/p&gt;</comment>
                            <comment id="13093049" author="dlyubimov" created="Mon, 29 Aug 2011 19:20:30 +0100"  >&lt;p&gt;it&apos;s random projection multiplication Y_&lt;/p&gt;
{i*}=A_{i*}
&lt;p&gt;\Omega (part of the Omega class). Since that&apos;s the only operation we ever do with Omega, i did not feel like I needed to implement the whole Matrix api for Omega; and even if i did, it would&apos;ve looked as something similar except here it is optimized to re-use the same holder object (yRow).&lt;/p&gt;</comment>
                            <comment id="13093267" author="tdunning" created="Mon, 29 Aug 2011 23:31:51 +0100"  >&lt;p&gt;Ahh...&lt;/p&gt;

&lt;p&gt;I went ahead and implemented a random matrix to make things like this easier.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12476568" name="MAHOUT-622-2.patch" size="11978" author="dlyubimov" created="Sun, 17 Apr 2011 19:42:57 +0100"/>
                            <attachment id="12476569" name="MAHOUT-638-2.patch" size="34663" author="dlyubimov" created="Sun, 17 Apr 2011 19:44:21 +0100"/>
                            <attachment id="12476566" name="MAHOUT-638-2.patch" size="30920" author="dlyubimov" created="Sun, 17 Apr 2011 19:39:13 +0100"/>
                            <attachment id="12474802" name="MAHOUT-638.patch" size="3149" author="dlyubimov" created="Mon, 28 Mar 2011 20:16:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Mar 2011 09:53:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9423</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy3vz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22781</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>