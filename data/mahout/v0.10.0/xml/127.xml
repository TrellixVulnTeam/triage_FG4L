<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:22:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-127/MAHOUT-127.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-127] Remove warnings </title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-127</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;The patch I&apos;m about to attach gets rid of all the current yellow triangles for Eclipse 3.4.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12426673">MAHOUT-127</key>
            <summary>Remove warnings </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="bmargulies">Benson Margulies</reporter>
                        <labels>
                    </labels>
                <created>Fri, 29 May 2009 14:50:40 +0100</created>
                <updated>Wed, 18 Nov 2009 14:06:31 +0000</updated>
                            <resolved>Sat, 30 May 2009 08:13:03 +0100</resolved>
                                    <version>0.2</version>
                                    <fixVersion>0.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12714477" author="srowen" created="Fri, 29 May 2009 16:01:06 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I like the changes you mentioned, like @SuppressWarnings&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I personally favor keeping in explicit widening casts to show the reader what is happening. It might avoid subtle integer-division bugs. However it is a small point of preference. While I am inclined to say, let&apos;s not change it, I would go along with a change if there is other support from committers&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;(Although casting from char to int in String.indexOf() is a tad over the top. I can live with reversing that.)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I personally do not like putting serialVersionUID in Serializable classes. The default serialization logic is never wrong; it just might falsely conclude two versions of a class are not serialization-compatible when they are. When you add serialVersionUID, you introduce a burden to update it when fields change. And if you fail to, you create a much worse problem &amp;#8211; two versions are deemed compatible when they are not. I think there is no value to serialVersionUID unless compatibility of serialized form is necessary across revisions of a class, and that does not seem to be the case here.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12714480" author="bmargulies" created="Fri, 29 May 2009 16:10:28 +0100"  >&lt;p&gt;The cast changes were overuse of the Eclipse code clean-up wizard on my part. Oops, in other words. For the reason alone, I want to revert all and rerun the process.&lt;/p&gt;

&lt;p&gt;I should have asked first. If you&apos;d prefer the &apos;default&apos; ID to the generated ID, I&apos;ll do that.&lt;/p&gt;
</comment>
                            <comment id="12714482" author="bmargulies" created="Fri, 29 May 2009 16:15:43 +0100"  >&lt;p&gt;Here is a patch with less gratuitous changes. Perhaps few enough?&lt;/p&gt;</comment>
                            <comment id="12714487" author="bmargulies" created="Fri, 29 May 2009 16:34:46 +0100"  >&lt;p&gt;Are you sure? Eclipse claims that coding &apos;1&apos; has the effect of getting the default behavior without getting a warning. &lt;/p&gt;</comment>
                            <comment id="12714604" author="bmargulies" created="Fri, 29 May 2009 22:07:45 +0100"  >&lt;p&gt;OK, I&apos;m convinced that I should turn off this warning in eclipse instead of putting all those &apos;1&apos;s in here. &lt;/p&gt;

&lt;p&gt;I&apos;ll post a trimmed patch.&lt;/p&gt;</comment>
                            <comment id="12714606" author="srowen" created="Fri, 29 May 2009 22:14:20 +0100"  >&lt;p&gt;How about this patch? removed the serialVersionUID and tweaked what appeared to be some unintended spacing/line break changes.&lt;/p&gt;</comment>
                            <comment id="12714907" author="adeneche" created="Sun, 31 May 2009 18:57:11 +0100"  >&lt;p&gt;I&apos;m getting Compilation errors after this path has been commited !!!&lt;/p&gt;

&lt;p&gt;I did a fresh checkout, and when launching &apos;mvn install&apos; I get the following errors (when compiling core-tests):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[INFO] Compilation failure

&amp;lt;MAHOUT-PATH&amp;gt;\core\src\test\java\org\apache\mahout\ga\watchmaker\
EvalMapperTest.java:[48,25] type parameter org.apache.hadoop.io.LongWritable is not within its bound

&amp;lt;MAHOUT-PATH&amp;gt;\core\src\test\java\org\apache\mahout\ga\watchmaker\
EvalMapperTest.java:[48,91] type parameter org.apache.hadoop.io.LongWritable is not within its bound
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Those errors point to the following line in EvalMapperTest.java:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;DummyOutputCollector&amp;lt;LongWritable,DoubleWritable&amp;gt; collector = new DummyOutputCollector&amp;lt;LongWritable,DoubleWritable&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I went to DummyOutputCollector.java, who has been modified by this patch, and restored it to its previous version (removed &amp;lt;?&amp;gt; from the class definition), and after that &apos;mvn install&apos; went Ok.&lt;/p&gt;

&lt;p&gt;I got this error both on Windows Vista and Ubuntu (Yep I got Ubuntu now =D ). Here is what I get with &apos;mvn -version&apos;:&lt;/p&gt;

&lt;p&gt;On Windows Vista:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Apache Maven 2.1.0 (r755702; 2009-03-18 20:10:27+0100)
Java version: 1.6.0_07
Java home: C:\Program Files\Java\jdk1.6.0_07\jre
Default locale: fr_FR, platform encoding: Cp1252
OS name: &quot;windows vista&quot; version: &quot;6.0&quot; arch: &quot;x86&quot; Family: &quot;windows&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and on Ubuntu:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Maven version: 2.0.9
Java version: 1.6.0_0
OS name: &quot;linux&quot; version: &quot;2.6.28-11-generic&quot; arch: &quot;i386&quot; Family: &quot;unix&quot; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the strangest part is that Eclipse IDE, who is configured to use the same JDK used by maven, compiles all the code without any problem at all and on both platforms !!!&lt;/p&gt;</comment>
                            <comment id="12714913" author="srowen" created="Sun, 31 May 2009 19:20:45 +0100"  >&lt;p&gt;I think javac is right, though I find myself a little confused as to exactly why. In the meantime I reverted the change.&lt;/p&gt;

&lt;p&gt;LongWritable implements WritableComparable&amp;lt;T&amp;gt; but does not bound the generic type. It almost surely should. That&apos;s the issue, it seems. But I suppose I am not 100% clear on why javac does not consider LongWritable to be assignment-compatible with WritableComparable&amp;lt;?&amp;gt; since that is, AFAIK, equivalent to WritableComparable (raw type).&lt;/p&gt;</comment>
                            <comment id="12714920" author="bimargulies@gmail.com" created="Sun, 31 May 2009 21:09:09 +0100"  >&lt;p&gt;did we both forget to run mvn clean install?&lt;/p&gt;

</comment>
                            <comment id="12714935" author="bmargulies" created="Mon, 1 Jun 2009 00:05:16 +0100"  >&lt;p&gt;This is a hadoop prank and I&apos;m not sure what to do about it.&lt;/p&gt;

&lt;p&gt;The &apos;right&apos; thing to put in DummyOutputCollector is &lt;/p&gt;

&lt;p&gt;public class DummyOutputCollector&amp;lt;K extends WritableComparable&amp;lt;BinaryComparable&amp;gt;, V extends Writable&amp;gt; implements OutputCollector&amp;lt;K, V&amp;gt; {&lt;/p&gt;

&lt;p&gt;That doesn&apos;t work, however, because of the use of LongWritable in EvalMapperTest. LongWritable inherits the WritableComparable interface without any parameters. So I think an @SuppressWarnings is called for in DummyOutputCollector until/unless Hadoop gets better, unless someone wants to find a way around using LongWritable.&lt;/p&gt;</comment>
                            <comment id="12714936" author="bmargulies" created="Mon, 1 Jun 2009 00:37:09 +0100"  >&lt;p&gt;Index: core/src/test/java/org/apache/mahout/utils/DummyOutputCollector.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; core/src/test/java/org/apache/mahout/utils/DummyOutputCollector.java	(revision 780524)&lt;br/&gt;
+++ core/src/test/java/org/apache/mahout/utils/DummyOutputCollector.java	(working copy)&lt;br/&gt;
@@ -28,6 +28,9 @@&lt;br/&gt;
 import java.util.Set;&lt;br/&gt;
 import java.util.TreeMap;&lt;/p&gt;

&lt;p&gt;+// due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-5946&quot; title=&quot;Type LongWritable isn&amp;#39;t parameterized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-5946&quot;&gt;&lt;del&gt;HADOOP-5946&lt;/del&gt;&lt;/a&gt;, it&apos;s pretty much impossible to get rid of the&lt;br/&gt;
+// unchecked warning on WritableComparable.&lt;br/&gt;
+@SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
 public class DummyOutputCollector&amp;lt;K extends WritableComparable, V extends Writable&amp;gt; implements OutputCollector&amp;lt;K, V&amp;gt; {&lt;/p&gt;

&lt;p&gt;   final Map&amp;lt;String, List&amp;lt;V&amp;gt;&amp;gt; data = new TreeMap&amp;lt;String, List&amp;lt;V&amp;gt;&amp;gt;();&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12409391" name="warnings.diff" size="41395" author="bmargulies" created="Fri, 29 May 2009 16:15:43 +0100"/>
                            <attachment id="12409423" name="warnings.patch" size="19291" author="srowen" created="Fri, 29 May 2009 22:14:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 29 May 2009 15:01:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9938</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy71b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23291</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>