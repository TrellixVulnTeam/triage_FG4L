<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:23:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-164/MAHOUT-164.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-164] &quot;Potpourri&quot;: a collection of small possible bugs and improvements</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-164</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;I call this issue &quot;Potpourri&quot;. It&apos;s a number of small items batched together that didn&apos;t seem worth an issue on their own.&lt;/p&gt;

&lt;p&gt;1. DenseVector.NonZeroIterator&lt;br/&gt;
This doesn&apos;t seem to work, exactly, as per the Iterator contract. next() doesn&apos;t advance the iterator; hasNext() does. A normal series of calls to these might get the right effect, but this seems wrong. See proposed fix.&lt;/p&gt;

&lt;p&gt;2. next() and NoSuchElementException&lt;br/&gt;
Iterators need to throw this appropriately &amp;#8211; see changes&lt;/p&gt;

&lt;p&gt;3. DistanceMeasure.distance(double[] p1, double[] p2)&lt;br/&gt;
Looks like subclasses are kinda trying to treat this as a method to be overridden/implemented. I changed to make it so. Am I mistaken and this is on the way out or something? in which case, removable?&lt;/p&gt;

&lt;p&gt;4. Subtraction in compareTo()&lt;br/&gt;
Check out IntPairWritable. It does the sensible thing and tries to return the difference of two ints to satisfy the compareTo() contract. This works until the subtraction overflows.&lt;/p&gt;

&lt;p&gt;5. Comparators and Serializable&lt;br/&gt;
Super tiny point. Comparators ought to implement Serializable&lt;/p&gt;

&lt;p&gt;6. Double literals&lt;br/&gt;
Another super tiny point: suggest we write double literals in canonical form. &quot;1&quot; is an int; &quot;1.0&quot; is a double (though the former will be widened &amp;#8211; might as well write what&apos;s meant. Likewise &quot;1.0f&quot; is a float but &quot;1.0&quot; is not. Also suggest that &quot;1.0E-5&quot; is better than &quot;1E-5&quot; for doubles.&lt;/p&gt;

&lt;p&gt;7. compareTo() and equals()&lt;br/&gt;
equals() needs to be overridden when compareTo() is. and hashCode() needs to be there when equals() is. Looking at LDAPrintTopics.StringDoublePair&lt;/p&gt;

&lt;p&gt;8. Redundant braces&lt;br/&gt;
Finally like I mentioned, we should&apos;t do...&lt;br/&gt;
for (...) {&lt;/p&gt;
  {
     ...
  }
&lt;p&gt;}&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433441">MAHOUT-164</key>
            <summary>&quot;Potpourri&quot;: a collection of small possible bugs and improvements</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="srowen">Sean Owen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2009 12:26:30 +0100</created>
                <updated>Wed, 18 Nov 2009 14:05:56 +0000</updated>
                            <resolved>Thu, 20 Aug 2009 23:56:56 +0100</resolved>
                                    <version>0.2</version>
                                    <fixVersion>0.2</fixVersion>
                                        <due>Fri, 21 Aug 2009 07:00:00 +0000</due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12745057" author="srowen" created="Wed, 19 Aug 2009 14:51:49 +0100"  >&lt;p&gt;Better attempt at the patch.&lt;/p&gt;</comment>
                            <comment id="12745207" author="tdunning" created="Wed, 19 Aug 2009 22:17:37 +0100"  >&lt;blockquote&gt;&lt;p&gt;I call this issue &quot;Potpourri&quot;. It&apos;s a number of small items batched together that didn&apos;t seem worth an issue on their own.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good name.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;DenseVector.NonZeroIterator ... This doesn&apos;t seem to work, exactly, as per the Iterator contract. next() doesn&apos;t advance the iterator; hasNext() does. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ouch.&lt;/p&gt;

&lt;p&gt;Bizarre.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Comparators and Serializable ... Super tiny point. Comparators ought to implement Serializable&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why?&lt;/p&gt;
</comment>
                            <comment id="12745230" author="srowen" created="Wed, 19 Aug 2009 23:13:04 +0100"  >&lt;p&gt;On Comparators &amp;#8211; not even sure I am sold on it, but it&apos;s an idea I came on recently. The idea is they are commonly attached to Collection classes that are Serializable, and could be serialized (thinking of TreeSet, etc.) Without this the collection would be unserializable.&lt;/p&gt;

&lt;p&gt;The counter argument is just conceptual: a Comparator does not encapsulate data, it encapsulates logic. That makes it trivially serializable &amp;#8211; one could say that&apos;s an argument it shouldn&apos;t conceptually be &apos;serializable&apos;. &lt;/p&gt;

&lt;p&gt;I don&apos;t feel strongly either way.&lt;/p&gt;</comment>
                            <comment id="12745452" author="srowen" created="Thu, 20 Aug 2009 15:55:46 +0100"  >&lt;p&gt;Any objection to submitting... I will remove the change to the Comparator since it drew a question and I think it&apos;s a tossup really.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12417021" name="MAHOUT-164.patch" size="20577" author="srowen" created="Wed, 19 Aug 2009 14:51:49 +0100"/>
                            <attachment id="12417010" name="MAHOUT-164.patch" size="21251" author="srowen" created="Wed, 19 Aug 2009 12:27:46 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Aug 2009 21:17:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9901</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy6t3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23254</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>