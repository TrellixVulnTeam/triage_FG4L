<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:17:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1211/MAHOUT-1211.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1211] Replace deprecated Closables.closeQuietly calls</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1211</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Deprecated Guava &lt;tt&gt;Closables.closeQuietly&lt;/tt&gt; API has to be replaced, it&apos;s usage is a code smell, and that method is scheduled to be removed from Guava 16.0.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://code.google.com/p/guava-libraries/issues/detail?id=1118&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this discussion&lt;/a&gt; for more info.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12647203">MAHOUT-1211</key>
            <summary>Replace deprecated Closables.closeQuietly calls</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gsingers">Grant Ingersoll</assignee>
                                    <reporter username="sslavic">Stevo Slavic</reporter>
                        <labels>
                    </labels>
                <created>Sun, 12 May 2013 11:58:25 +0100</created>
                <updated>Mon, 3 Feb 2014 08:06:07 +0000</updated>
                            <resolved>Sun, 9 Jun 2013 21:53:16 +0100</resolved>
                                                    <fixVersion>0.8</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13655672" author="tdunning" created="Mon, 13 May 2013 00:03:32 +0100"  >&lt;p&gt;This raises the question of whether we should move to Java 1.7.&lt;/p&gt;

&lt;p&gt;I presume that the answer is that we can&apos;t really do that yet, but it would certainly make life easier for things like reliable stream closing.&lt;/p&gt;
</comment>
                            <comment id="13655688" author="sslavic" created="Mon, 13 May 2013 01:02:45 +0100"  >&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/hadoop/HadoopJavaVersions&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Hadoop Java versions table&lt;/a&gt; still doesn&apos;t list Java 7.&lt;/p&gt;

&lt;p&gt;Maybe stay compatible with Java 1.6 for Mahout 0.8, and consider raising the bar to Java 7 for Mahout 0.9. Hopefully by then Java 8 will be out and many will migrate at least to Java 7.&lt;/p&gt;</comment>
                            <comment id="13672233" author="smarthi" created="Sat, 1 Jun 2013 21:47:26 +0100"  >&lt;p&gt;Stevo, would this be ready for 0.8 release?&lt;/p&gt;</comment>
                            <comment id="13672302" author="smarthi" created="Sun, 2 Jun 2013 02:52:17 +0100"  >&lt;p&gt;This can goin 0.8. Would u like to me to take a stab?&lt;/p&gt;</comment>
                            <comment id="13672325" author="smarthi" created="Sun, 2 Jun 2013 07:30:58 +0100"  >&lt;p&gt;Working on this Ted, done with all of the classes except those that extend AbstractIterator (like- FileLineIterator, SequenceFileValueIterator, SequenceFileIterator, ARFFIterator etc.. I can look into those classes tomorrow morning.&lt;/p&gt;

&lt;p&gt;Attached patch has changes for all of the classes except for those that extend AbstractIterator.  &lt;/p&gt;</comment>
                            <comment id="13672334" author="sslavic" created="Sun, 2 Jun 2013 08:40:18 +0100"  >&lt;p&gt;Yes, those are tricky, closable opened in one method, and closed in another - seemed risky to change them, and contributing partial solution didn&apos;t seem right to me.&lt;/p&gt;</comment>
                            <comment id="13672511" author="srowen" created="Sun, 2 Jun 2013 14:56:35 +0100"  >&lt;p&gt;PS I would suggest that it&apos;s OK to swallow the exception when closing a &lt;b&gt;reader&lt;/b&gt; fails, but ideally not when a &lt;b&gt;writer&lt;/b&gt; fails. This may not be the case already, everywhere. &lt;br/&gt;
The idea is that if you can&apos;t clean up after you&apos;ve fully read a stream, there&apos;s not much you can do but proceed. But failing after fully writing to a stream might be bad since it could be a failure to flush buffered data.&lt;/p&gt;</comment>
                            <comment id="13672513" author="ssc" created="Sun, 2 Jun 2013 15:00:46 +0100"  >&lt;p&gt;I think the problem comes when you have an exception in the try block, close the stream in the finally block and get another exception. You cannot handle both exceptions in Java6 AFAIK.&lt;/p&gt;</comment>
                            <comment id="13672514" author="ssc" created="Sun, 2 Jun 2013 15:01:38 +0100"  >&lt;p&gt;Can anyone provide a template of the optimal way to close writers? Would be great.&lt;/p&gt;</comment>
                            <comment id="13672530" author="srowen" created="Sun, 2 Jun 2013 15:24:48 +0100"  >&lt;p&gt;Yeah that&apos;s a good point. If two exceptions occur, in Java 7, the initial exception would be thrown along with the closing exception attached as &apos;suppressed&apos;. So swallowing the exception from close, in the case of a writer or anything else, better mimics that behavior. The problem is just that you throw 0 exceptions with this approach if the close() fails and not the original body. (In Java 7 you would propagate the closing exception.)&lt;/p&gt;

&lt;p&gt;I don&apos;t know of a solution short of actually copying the complete and complex boilerplate code that Java 7 would generate. You have to store and save exceptions to be able to check whether a finally block was reach with or without error. It&apos;s a real mess.&lt;/p&gt;

&lt;p&gt;For the meantime, one possible compromise is to log the initial exception and then let an exception in close() potentially mask the initial exception. At least the initial info is logged, and you do throw an exception in this case, which is kind of safer behavior than just continuing.&lt;/p&gt;

&lt;p&gt;    try &lt;/p&gt;
{
      ...
    }
&lt;p&gt; catch (IOException ioe) &lt;/p&gt;
{
      log.warn(..., ioe);
      throw ioe;
    }
&lt;p&gt; finally &lt;/p&gt;
{
      Closeables.close(writer, false);
    }</comment>
                            <comment id="13672584" author="gsingers" created="Sun, 2 Jun 2013 16:42:23 +0100"  >&lt;p&gt;So, the patch here has close(XXX, true), are we saying we should do false?&lt;/p&gt;</comment>
                            <comment id="13672589" author="srowen" created="Sun, 2 Jun 2013 17:35:00 +0100"  >&lt;p&gt;My suggestion is essentially &quot;true&quot; for readers, &quot;false&quot; for writers.&lt;/p&gt;</comment>
                            <comment id="13675280" author="dlyubimov" created="Tue, 4 Jun 2013 22:31:12 +0100"  >&lt;p&gt;I am having deja vu of this discussion with Sean some time ago (I guess i couldn&apos;t convince him of harm of closeQuietly)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In other words, there is no practical difference between write() throwing an exception and close() throwing an exception, for writables.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My then-point exactly.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So, the patch here has close(XXX, true), are we saying we should do false?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;My suggestion is essentially &quot;true&quot; for readers, &quot;false&quot; for writers.... The idea is that if you can&apos;t clean up after you&apos;ve fully read a stream, there&apos;s not much you can do but proceed&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;-1. There&apos;s a reason reader throws a generic exception. If a reader deems there&apos;s been no harm done to I/O subsystem or data integrity and it is ok to recover, it  would&apos;ve not have a reason to signal anything. E.g. it might be a bad protocol signature or trailer thus previously read data is somehow deficient. In practice it is probably not so often the case but it is implied by the contract and it doesn&apos;t really matter how rare it is in practice as long as it holds true for at least one case.&lt;/p&gt;

</comment>
                            <comment id="13675285" author="srowen" created="Tue, 4 Jun 2013 22:36:24 +0100"  >&lt;p&gt;Yes this is why I think &quot;false&quot; is appropriate for writers, for sure. For readers, I don&apos;t know. Your logic is sound but there&apos;s no reason to believe this is the logic implementations follow. What is un-recoverable about a failure to close a readable stream? I can&apos;t figure out what harm you can plausibly assume it would do to proceed. Either way it&apos;s a guess, I guess. I could see the argument for being conservative and not closing quietly, ever. Then, these methods should just be calling close() directly.&lt;/p&gt;</comment>
                            <comment id="13675347" author="dlyubimov" created="Tue, 4 Jun 2013 23:19:58 +0100"  >&lt;p&gt;I am just going by contract which implies that if something was agreed on then one doesn&apos;t have to figure examples or counter examples to figure what it means. Maybe there&apos;s not enough semantics in this contract (IOException)-- or even java itself &amp;#8211; that we keep looking for anecdotal evidence what might be behind the contract to establish recoverability criteria in each particular case.&lt;/p&gt;

&lt;p&gt;(You know they joke in Russia that the strictness of russian law is refuted by lack of formal enforcement; and so they keep engaging in discussions about whether they can get caught if they do this or that, instead of whether something is truly legal or not per law &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Sorry for digression&lt;/p&gt;</comment>
                            <comment id="13679048" author="gsingers" created="Sun, 9 Jun 2013 14:14:01 +0100"  >&lt;p&gt;Patch coming shortly based off of Suneel&apos;s original patch.  Would appreciate some eyeballs before committing.  I went with Sean&apos;s approach for readers and writers.  I think Dmitriy has a valid point, but perhaps we take it on a case by case base to see if any harm comes out of quietly closing readers.&lt;/p&gt;</comment>
                            <comment id="13679051" author="gsingers" created="Sun, 9 Jun 2013 14:23:19 +0100"  >&lt;p&gt;Updated patch to trunk&lt;/p&gt;</comment>
                            <comment id="13679053" author="gsingers" created="Sun, 9 Jun 2013 14:30:48 +0100"  >&lt;p&gt;I committed this, but we can leave open for others to review and tweak, but it should be able to be closed before the release.&lt;/p&gt;</comment>
                            <comment id="13679069" author="hudson" created="Sun, 9 Jun 2013 15:10:35 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #2064 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2064/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2064/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1211&quot; title=&quot;Replace deprecated Closables.closeQuietly calls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1211&quot;&gt;&lt;del&gt;MAHOUT-1211&lt;/del&gt;&lt;/a&gt;: clean up use of deprecated closeQuietly api (Revision 1491214)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
gsingers : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/FactorizationEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/UserVectorSplitterMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/FilePersistenceStrategy.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/precompute/FileSimilarItemsWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/precompute/MultithreadedBatchItemSimilarities.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/DFUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/DecisionForest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/data/Dataset.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/mapreduce/Classifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/tools/UDistrib.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/naivebayes/BayesUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/naivebayes/NaiveBayesModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sequencelearning/hmm/BaumWelchTrainer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sequencelearning/hmm/RandomSequenceGenerator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sequencelearning/hmm/ViterbiEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sgd/ModelSerializer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/classify/ClusterClassifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/iterator/ClusterIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/RandomSeedGenerator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/spectral/common/VectorCache.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/AbstractJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/HadoopUtil.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/distance/MahalanobisDistanceMeasure.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/distance/WeightedDistanceMeasure.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/iterator/FileLineIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/driver/MahoutDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/MatrixColumnMeansJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/TimesSquaredJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/cooccurrence/Vectors.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDHelper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/qr/QRFirstStep.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/collocations/llr/CollocMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/document/SequenceFileTokenizerMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/pruner/PrunedPartialVectorMergeReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/term/TFPartialVectorReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/Utils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/partial/PartialBuilderTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/naivebayes/NaiveBayesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/sgd/ModelSerializerTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/ClusteringTestUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/canopy/TestCanopyCreation.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/dirichlet/TestMapReduce.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/fuzzykmeans/TestFuzzyKmeansClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/common/MahoutTestCase.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/FPGrowthTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/FPGrowthTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthRetailDataTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthRetailDataTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthRetailDataTestVs.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthSynthDataTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/MatrixWritableTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/MathHelper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/ConditionalEntropyTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/EntropyTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/InformationGainRatioTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/InformationGainTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/DictionaryVectorizerTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/DocumentProcessorTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/EncodedVectorsFromSequenceFilesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/SparseVectorsFromSequenceFilesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/GramKeyTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/bookcrossing/BookCrossingDataModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/email/MailToPrefsDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/grouplens/GroupLensDataModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/DataFileIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/ToCSV.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/track1/Track1Runner.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/track1/svd/Track1SVDRunner.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/track2/Track2Runner.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/hadoop/example/als/netflix/NetflixDatasetConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/NewsgroupHelper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/TestForest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/sgd/AdaptiveLogisticModelParameters.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/sgd/LogisticModelParameters.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/sgd/PrintResourceOrFile.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/sgd/SimpleCsvExamples.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/sgd/TrainLogistic.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplaySpectralKMeans.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/minhash/LastfmDataConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/test/java/org/apache/mahout/classifier/sgd/TrainLogisticTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/cf/taste/impl/model/jdbc/GenericJDBCDataModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/evaluation/RepresentativePointsDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/lda/LDAPrintTopics.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/SequenceFilesFromMailArchives.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaDatasetCreatorMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaXmlSplitter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/XmlInputFormat.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SequenceFileDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SplitInput.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/io/ChunkedWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/regex/AnalyzerTransformer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/RowIdJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/arff/ARFFIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/arff/Driver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/io/DelimitedTermInfoWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/io/SequenceFileVectorWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/io/TextualVectorWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/lucene/ClusterLabels.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromMailArchivesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/text/TestSequenceFilesFromDirectory.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/SplitInputTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/csv/CSVVectorIteratorTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/io/VectorWriterTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/CachedTermInfoTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/DriverTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/LuceneIterableTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13679108" author="dfilimon" created="Sun, 9 Jun 2013 18:01:57 +0100"  >&lt;p&gt;I&apos;m also fixing the Closeables.close(writer, true) calls. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=smarthi&quot; class=&quot;user-hover&quot; rel=&quot;smarthi&quot;&gt;Suneel Marthi&lt;/a&gt; said that for writers, these should be &quot;false&quot; to not swallow the exception.&lt;/p&gt;</comment>
                            <comment id="13679128" author="smarthi" created="Sun, 9 Jun 2013 19:35:11 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dfilimon&quot; class=&quot;user-hover&quot; rel=&quot;dfilimon&quot;&gt;Dan Filimon&lt;/a&gt;please refer to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=srowen&quot; class=&quot;user-hover&quot; rel=&quot;srowen&quot;&gt;Sean Owen&lt;/a&gt; comments above for more clarification on this.&lt;/p&gt;</comment>
                            <comment id="13679132" author="hudson" created="Sun, 9 Jun 2013 20:11:50 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #2066 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2066/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2066/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1211&quot; title=&quot;Replace deprecated Closables.closeQuietly calls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1211&quot;&gt;&lt;del&gt;MAHOUT-1211&lt;/del&gt;&lt;/a&gt;: Disabled swallowing of IOExceptions is Closeables.close for writers (Revision 1491265)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
dfilimon : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/FactorizationEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/FilePersistenceStrategy.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/precompute/FileSimilarItemsWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/precompute/MultithreadedBatchItemSimilarities.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/DFUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/mapreduce/Classifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/df/tools/UDistrib.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/naivebayes/BayesUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/naivebayes/NaiveBayesModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sequencelearning/hmm/BaumWelchTrainer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sequencelearning/hmm/RandomSequenceGenerator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sequencelearning/hmm/ViterbiEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sgd/ModelSerializer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/classify/ClusterClassifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/RandomSeedGenerator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/spectral/common/VectorCache.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/streaming/mapreduce/StreamingKMeansUtilsMR.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/common/HadoopUtil.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/cooccurrence/Vectors.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/qr/QRFirstStep.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/DictionaryVectorizer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/tfidf/TFIDFConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/partial/PartialBuilderTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/naivebayes/NaiveBayesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/sgd/ModelSerializerTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/ClusteringTestUtils.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/dirichlet/TestMapReduce.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/fuzzykmeans/TestFuzzyKmeansClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/common/MahoutTestCase.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/FPGrowthTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/FPGrowthTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthRetailDataTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthRetailDataTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthRetailDataTestVs.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthSynthDataTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/fpm/pfpgrowth/PFPGrowthTest2.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/MatrixWritableTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/VectorWritableTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/MathHelper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDPCADenseTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverSparseSequentialTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/ConditionalEntropyTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/EntropyTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/InformationGainRatioTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/math/stats/entropy/InformationGainTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/DictionaryVectorizerTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/DocumentProcessorTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/EncodedVectorsFromSequenceFilesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/SparseVectorsFromSequenceFilesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/GramKeyTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/bookcrossing/BookCrossingDataModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/email/MailToPrefsDriver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/grouplens/GroupLensDataModel.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/ToCSV.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/track1/Track1Runner.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/track1/svd/Track1SVDRunner.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/kddcup/track2/Track2Runner.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/hadoop/example/als/netflix/NetflixDatasetConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/sgd/TrainLogistic.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplaySpectralKMeans.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/minhash/LastfmDataConverter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/benchmark/SerializationBenchmark.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/lda/LDAPrintTopics.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/SequenceFilesFromLuceneStorage.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/SequenceFilesFromMailArchives.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaXmlSplitter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SequenceFileDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/RowIdJob.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/arff/Driver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/io/DelimitedTermInfoWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/io/SequenceFileVectorWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/io/TextualVectorWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/lucene/ClusterLabels.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromMailArchivesTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/text/TestSequenceFilesFromDirectory.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/SplitInputTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/csv/CSVVectorIteratorTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/io/VectorWriterTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/CachedTermInfoTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/LuceneIterableTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12586951" name="MAHOUT-1211.patch" size="103313" author="gsingers" created="Sun, 9 Jun 2013 14:23:19 +0100"/>
                            <attachment id="12585748" name="MAHOUT-1211.patch" size="86449" author="smarthi" created="Sun, 2 Jun 2013 07:31:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 12 May 2013 23:03:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327560</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzecyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327904</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>