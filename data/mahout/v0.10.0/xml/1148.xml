<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:21:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1148/MAHOUT-1148.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1148] QR Decomposition is too slow</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1148</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;A user reported that QR decomposition is too slow.  I coded up a replacement that can be 10x faster under certain cases and the new version is also tested.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12630597">MAHOUT-1148</key>
            <summary>QR Decomposition is too slow</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tdunning">Ted Dunning</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Feb 2013 00:40:28 +0000</created>
                <updated>Mon, 3 Feb 2014 08:05:52 +0000</updated>
                            <resolved>Tue, 5 Feb 2013 18:39:24 +0000</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.8</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13570738" author="tdunning" created="Mon, 4 Feb 2013 23:15:53 +0000"  >&lt;p&gt;I committed the new QR decomposition.  This is a bit bold to do, but I think that the benefits are large enough to really make a difference.  The tests on the QR decomposition are pretty strict so the results should drop in.  The exception would be if somebody is checking the content of the QR decomposition itself rather than just its results since there are likely sign changes relative to the old implementation.&lt;/p&gt;

&lt;p&gt;This impacts the ALS code including the implicit solvers.  I am hoping that we have good tests on those and will see any problems quickly.&lt;/p&gt;

&lt;p&gt;I have also not run the full suite of tests.  If Jenkins bitches, I will reopen this bug and fix the issues.&lt;/p&gt;</comment>
                            <comment id="13570876" author="hudson" created="Tue, 5 Feb 2013 02:19:29 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1854 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1854/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1854/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1148&quot; title=&quot;QR Decomposition is too slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1148&quot;&gt;&lt;del&gt;MAHOUT-1148&lt;/del&gt;&lt;/a&gt; - Demonstrate speedup (Revision 1442436)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1148&quot; title=&quot;QR Decomposition is too slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1148&quot;&gt;&lt;del&gt;MAHOUT-1148&lt;/del&gt;&lt;/a&gt; - Re-implemented QR decomposition.  On a 60x60 random matrix it is about 8x faster now after the JIT warms up (takes 100 or so decompositions). (Revision 1442428)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tdunning : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1442436&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1442436&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/OldQRDecomposition.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/QR.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/QRDecomposition.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/QRDecompositionTest.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tdunning : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1442428&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1442428&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/OldQRDecomposition.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/QRDecomposition.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/OldQRDecompositionTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/QRDecompositionTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13570893" author="smarthi" created="Tue, 5 Feb 2013 02:47:51 +0000"  >&lt;p&gt;QRDecompositionTest.fullRankWide() is failing.&lt;/p&gt;

&lt;p&gt;Here&apos;s what I am seeing locally:-&lt;/p&gt;

&lt;p&gt;fullRankWide(org.apache.mahout.math.QRDecompositionTest)  Time elapsed: 0.004 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
java.lang.AssertionError: null&lt;br/&gt;
	at org.junit.Assert.fail(Assert.java:86)&lt;br/&gt;
	at org.junit.Assert.assertTrue(Assert.java:41)&lt;br/&gt;
	at org.junit.Assert.assertFalse(Assert.java:64)&lt;br/&gt;
	at org.junit.Assert.assertFalse(Assert.java:74)&lt;br/&gt;
	at org.apache.mahout.math.QRDecompositionTest.fullRankWide(QRDecompositionTest.java:117)&lt;/p&gt;

&lt;p&gt;Its failing on this line in QRDecompositionTest.fullRankWide() &lt;/p&gt;

&lt;p&gt;   assertFalse(qr.getFullRank())&lt;/p&gt;
</comment>
                            <comment id="13571541" author="tdunning" created="Tue, 5 Feb 2013 18:24:34 +0000"  >&lt;p&gt;Test failing&lt;/p&gt;</comment>
                            <comment id="13571542" author="tdunning" created="Tue, 5 Feb 2013 18:25:31 +0000"  >&lt;p&gt;Suneel,&lt;/p&gt;

&lt;p&gt;Jenkins agrees with you.&lt;/p&gt;

&lt;p&gt;I will trouble shoot why this worked on my dev machine.&lt;/p&gt;</comment>
                            <comment id="13571563" author="tdunning" created="Tue, 5 Feb 2013 18:39:24 +0000"  >&lt;p&gt;OK.  That was a silly last minute change that went with the wrong polarity.&lt;/p&gt;

&lt;p&gt;Committed another fix.&lt;/p&gt;</comment>
                            <comment id="13571722" author="hudson" created="Tue, 5 Feb 2013 21:01:51 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1855 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1855/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1855/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1148&quot; title=&quot;QR Decomposition is too slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1148&quot;&gt;&lt;del&gt;MAHOUT-1148&lt;/del&gt;&lt;/a&gt; - fix test ... should have been full rank (Revision 1442691)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tdunning : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/QRDecompositionTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13571776" author="ssc" created="Tue, 5 Feb 2013 21:59:00 +0000"  >&lt;p&gt;I ran a quick mini benchmark using ALS to factorize the movielens1M dataset, (I didn&apos;t check correctness of the results). Numbers indicate a 2x to 3x increase in performance:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[2] features, [3] iterations: OLD [1233] ms &amp;lt;-&amp;gt; NEW [1254] ms
[2] features, [3] iterations: OLD [760] ms &amp;lt;-&amp;gt; NEW [926] ms
[2] features, [3] iterations: OLD [758] ms &amp;lt;-&amp;gt; NEW [768] ms
[2] features, [3] iterations: OLD [768] ms &amp;lt;-&amp;gt; NEW [774] ms
[2] features, [3] iterations: OLD [772] ms &amp;lt;-&amp;gt; NEW [760] ms
[5] features, [3] iterations: OLD [1116] ms &amp;lt;-&amp;gt; NEW [1015] ms
[5] features, [3] iterations: OLD [1110] ms &amp;lt;-&amp;gt; NEW [981] ms
[5] features, [3] iterations: OLD [1124] ms &amp;lt;-&amp;gt; NEW [986] ms
[5] features, [3] iterations: OLD [1116] ms &amp;lt;-&amp;gt; NEW [1008] ms
[5] features, [3] iterations: OLD [1105] ms &amp;lt;-&amp;gt; NEW [989] ms
[10] features, [3] iterations: OLD [2577] ms &amp;lt;-&amp;gt; NEW [1825] ms
[10] features, [3] iterations: OLD [2578] ms &amp;lt;-&amp;gt; NEW [1863] ms
[10] features, [3] iterations: OLD [2566] ms &amp;lt;-&amp;gt; NEW [1834] ms
[10] features, [3] iterations: OLD [2587] ms &amp;lt;-&amp;gt; NEW [1827] ms
[10] features, [3] iterations: OLD [2623] ms &amp;lt;-&amp;gt; NEW [1839] ms
[20] features, [3] iterations: OLD [11211] ms &amp;lt;-&amp;gt; NEW [5863] ms
[20] features, [3] iterations: OLD [11106] ms &amp;lt;-&amp;gt; NEW [5820] ms
[20] features, [3] iterations: OLD [11041] ms &amp;lt;-&amp;gt; NEW [5851] ms
[20] features, [3] iterations: OLD [11047] ms &amp;lt;-&amp;gt; NEW [5837] ms
[20] features, [3] iterations: OLD [11027] ms &amp;lt;-&amp;gt; NEW [5748] ms
[30] features, [3] iterations: OLD [30781] ms &amp;lt;-&amp;gt; NEW [13929] ms
[30] features, [3] iterations: OLD [30900] ms &amp;lt;-&amp;gt; NEW [13971] ms
[30] features, [3] iterations: OLD [30917] ms &amp;lt;-&amp;gt; NEW [13890] ms
[30] features, [3] iterations: OLD [30933] ms &amp;lt;-&amp;gt; NEW [13984] ms
[30] features, [3] iterations: OLD [30902] ms &amp;lt;-&amp;gt; NEW [13964] ms
[50] features, [3] iterations: OLD [118351] ms &amp;lt;-&amp;gt; NEW [41957] ms
[50] features, [3] iterations: OLD [118682] ms &amp;lt;-&amp;gt; NEW [42165] ms
[50] features, [3] iterations: OLD [118605] ms &amp;lt;-&amp;gt; NEW [42302] ms
[50] features, [3] iterations: OLD [118698] ms &amp;lt;-&amp;gt; NEW [42219] ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13571796" author="tdunning" created="Tue, 5 Feb 2013 22:19:53 +0000"  >&lt;p&gt;Well, Jake predicted a speedup.  But this is a big difference.&lt;/p&gt;</comment>
                            <comment id="13576711" author="yingliao422" created="Tue, 12 Feb 2013 15:49:30 +0000"  >&lt;p&gt;I tried the new QRDecompose implementation in mahout. There is a big improvement comparing with the old one. But it&apos;s still slower than the implementation from org.apache.commons.math3.linear.QRDecomposition. Here is my comparison. &lt;br/&gt;
Map input records: 2,827,622&lt;br/&gt;
num of Features = 60&lt;br/&gt;
Solve time with org.apache.mahout.math.QRDecomposition = 8,459,920&lt;br/&gt;
Solve time with org.apache.commons.math3.linear.QRDecomposition = 1,214,592&lt;/p&gt;</comment>
                            <comment id="13579708" author="tdunning" created="Sat, 16 Feb 2013 04:44:29 +0000"  >&lt;p&gt;The difference was just a matter of rewriting the algorithm using vector operations instead of element by element math.  You can probably get another 2x out of the algorithm pretty easily and possibly 5x with some cleverness.  I didn&apos;t spend any time optimizing this code at all.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 5 Feb 2013 02:19:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>311093</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzbjdz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>311441</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>