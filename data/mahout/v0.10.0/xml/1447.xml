<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:28:17 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1447/MAHOUT-1447.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1447] ImplicitFeedbackAlternatingLeastSquaresSolver tests and features</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1447</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;I added a test case for the YtY calculation code&lt;br/&gt;
I removed the indexes.quickSort() in the YtY calculation  because I don&apos;t think it&apos;s necessary and the test cases passed without it. The order shouldn&apos;t matter since you&apos;re adding the scalers together. Correct me if i&apos;m wrong.&lt;/p&gt;

&lt;p&gt;In Factorization.java I added methods to access the iterator of item ids and user ids directly. This saves memory when using classes like TopItems.java when you don&apos;t have the DataModel class in memory as well. &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12700727">MAHOUT-1447</key>
            <summary>ImplicitFeedbackAlternatingLeastSquaresSolver tests and features</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ssc">Sebastian Schelter</assignee>
                                    <reporter username="adamilardi">Adam Ilardi</reporter>
                        <labels>
                            <label>newbie</label>
                            <label>patch</label>
                            <label>performance</label>
                    </labels>
                <created>Tue, 11 Mar 2014 15:37:18 +0000</created>
                <updated>Mon, 13 Apr 2015 11:21:18 +0100</updated>
                            <resolved>Tue, 11 Mar 2014 18:32:17 +0000</resolved>
                                    <version>0.9</version>
                                    <fixVersion>0.10.0</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13930503" author="ssc" created="Tue, 11 Mar 2014 16:14:51 +0000"  >&lt;p&gt;Hi Adam,&lt;/p&gt;

&lt;p&gt;yes the order of the keys shouldn&apos;t matter, good catch! Can you explain the rationale behind  Factorization.getUserIdIterator() and getItemIdIterator() in more detail? I&apos;m not sure I completely understood it.&lt;/p&gt;</comment>
                            <comment id="13930646" author="adamilardi" created="Tue, 11 Mar 2014 17:51:04 +0000"  >&lt;p&gt;I have code that creates the ALS model and outputs it to the .out binary file of the Factorization &lt;br/&gt;
I have a different class that reads that output and does cross validation but it&apos;s a ton of data so I don&apos;t want to keep a duplicate array of item ids in memory.&lt;br/&gt;
Scala code example ... sorry&lt;/p&gt;

&lt;p&gt;val model = new FilePersistenceStrategy(new File(modelFile))&lt;br/&gt;
val factorization = model.load()&lt;br/&gt;
val estimator: TopItems.Estimator&lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Long&amp;#93;&lt;/span&gt; = new DotProductEstimator(userId, factorization)       &lt;/p&gt;

&lt;p&gt;This way I can do&lt;br/&gt;
TopItems.getTopItems(factorization.numItems, factorization.getItemIdIterator(), null, estimator))&lt;/p&gt;

&lt;p&gt;VS&lt;/p&gt;

&lt;p&gt;val allItems = factorization.getItemIDMappings().iterator().asScala.map(_.getKey().toLong).toArray&lt;br/&gt;
TopItems.getTopItems(factorization.numItems, new LongPrimitiveArrayIterator(allItems), null, estimator))&lt;/p&gt;

&lt;p&gt;Alternatively adding getters on these two Factorization class members would be best. Are they hidden to prevent map modifications? If so they could be be wrapped in Collections.unmodifiableMap &lt;/p&gt;

&lt;p&gt;private final FastByIDMap&amp;lt;Integer&amp;gt; userIDMapping;&lt;br/&gt;
private final FastByIDMap&amp;lt;Integer&amp;gt; itemIDMapping;&lt;/p&gt;

&lt;p&gt;Please let me know if I wasn&apos;t clear.&lt;/p&gt;</comment>
                            <comment id="13930725" author="ssc" created="Tue, 11 Mar 2014 18:32:08 +0000"  >&lt;p&gt;Its clear know, I didn&apos;t had the getters for hiding the mapping as you assumed. I think the methods from your patch are fine.&lt;/p&gt;

&lt;p&gt;I&apos;m committing your patch with a few cosmetic changes.&lt;/p&gt;

&lt;p&gt;Btw, are you interesting in contributing the cross-validation code? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13930866" author="adamilardi" created="Tue, 11 Mar 2014 20:07:11 +0000"  >&lt;p&gt;It&apos;s written in scala and pretty ebay specific @ the moment. Are there plans to include scala sources with mahout in the future?&lt;/p&gt;</comment>
                            <comment id="13930876" author="adamilardi" created="Tue, 11 Mar 2014 20:12:18 +0000"  >&lt;p&gt;I am also interested in implementing section 5 &quot;Explaining recommendations&quot; from the original paper.&lt;/p&gt;</comment>
                            <comment id="13931533" author="hudson" created="Wed, 12 Mar 2014 08:37:56 +0000"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #2516 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2516/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2516/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1447&quot; title=&quot;ImplicitFeedbackAlternatingLeastSquaresSolver tests and features&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1447&quot;&gt;&lt;del&gt;MAHOUT-1447&lt;/del&gt;&lt;/a&gt; ImplicitFeedbackAlternatingLeastSquaresSolver tests and feature (ssc: rev 1576459)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/Factorization.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java/org/apache/mahout/math/als/ImplicitFeedbackAlternatingLeastSquaresSolver.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/als/AlternatingLeastSquaresSolverTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12633923" name="MAHOUT-1447.patch" size="5785" author="adamilardi" created="Tue, 11 Mar 2014 15:45:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Mar 2014 16:14:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>379070</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzn64n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>379362</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>