<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:21:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1045/MAHOUT-1045.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1045] Cluster evaluators returning bad results</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1045</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;With real world crawl data the Intra-cluster density from ClusterEvaluator is almost always NaN. The CDbw inter-cluster density is almost always 0. I have also seen several cases where CDbw fails to return any results but have not tracked down why yet.&lt;/p&gt;

&lt;p&gt;I have sent a link to an 8G data set that reproduces these errors to Jeff Eastman.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Several environments and data sets&lt;/p&gt;</environment>
        <key id="12598444">MAHOUT-1045</key>
            <summary>Cluster evaluators returning bad results</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="pferrel">Pat Ferrel</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Jul 2012 21:17:21 +0100</created>
                <updated>Mon, 3 Feb 2014 08:05:53 +0000</updated>
                            <resolved>Sat, 1 Jun 2013 18:36:12 +0100</resolved>
                                    <version>0.6</version>
                    <version>0.7</version>
                    <version>0.8</version>
                                    <fixVersion>0.8</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13414123" author="pferrel" created="Fri, 13 Jul 2012 23:55:37 +0100"  >&lt;p&gt;From the inputs to the ClusterEvaluator class I&apos;ll try uploading the stuff below as an attachment to this issue:&lt;/p&gt;

&lt;p&gt;    conf.set(RepresentativePointsDriver.DISTANCE_MEASURE_KEY, dm.getClass().getName());&lt;br/&gt;
    ---&amp;gt; org.apache.mahout.common.distance.CosineDistanceMeasure&lt;br/&gt;
    I guess you can just make a note of this&lt;/p&gt;

&lt;p&gt;    conf.set(RepresentativePointsDriver.STATE_IN_KEY, &quot;tmp/representative/representativePoints-&quot; + numIters);&lt;br/&gt;
    ---&amp;gt; representativePoints-5/*&lt;/p&gt;

&lt;p&gt;    ClusterEvaluator ce = new ClusterEvaluator(conf, finalClusters);&lt;br/&gt;
    ---&amp;gt; clusters-27-final/*&lt;br/&gt;
    The final clusters dir of the k = 500 run.&lt;/p&gt;

&lt;p&gt;it&apos;s an 22M tar.gz&lt;/p&gt;</comment>
                            <comment id="13414147" author="pferrel" created="Sat, 14 Jul 2012 00:27:10 +0100"  >&lt;p&gt;Can&apos;t upload more than 10M so here is a webdav URL&lt;br/&gt;
&lt;a href=&quot;http://cloud.occamsmachete.com/public.php?service=files&amp;amp;token=ceae2302d5ef6a55737b5e48aaafe45a3eddc389&amp;amp;file=/cluster-eval.tar.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cloud.occamsmachete.com/public.php?service=files&amp;amp;token=ceae2302d5ef6a55737b5e48aaafe45a3eddc389&amp;amp;file=/cluster-eval.tar.gz&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13414149" author="pferrel" created="Sat, 14 Jul 2012 00:30:25 +0100"  >&lt;p&gt;Running the cluster evaluators on this data shows a lot of pruned clusters, 48 where k = 500. The ClusterEvaluator has NaN for several individual clusters too.&lt;/p&gt;</comment>
                            <comment id="13414431" author="pferrel" created="Sat, 14 Jul 2012 16:28:56 +0100"  >&lt;p&gt;I checked the data set linked above by only running the evaluators on it. I got results listed below. The values are almost identical to the first evaluator values I got so we have the right data isolated. I assume the small differences are due to different representative points?&lt;/p&gt;

&lt;p&gt;Inter-Cluster Density: 0.9289881620012391&lt;br/&gt;
Intra-Cluster Density: NaN&lt;br/&gt;
CDbw Inter-Cluster Density: 0.0&lt;br/&gt;
CDbw Intra-Cluster Density: 1050.0723680608382&lt;br/&gt;
CDbw Separation: 187792.32137017616&lt;/p&gt;

&lt;p&gt;I&apos;ll start looking at the NaN and 0 values when I get time, no idea if the other values are correct but eliminating the obvious errors seems like a good place to start.&lt;/p&gt;</comment>
                            <comment id="13414652" author="jeastman" created="Sun, 15 Jul 2012 15:58:30 +0100"  >&lt;p&gt;Ok, I can duplicate your results, but (whew) the 500 clusters really takes a while to compute CDbw inter-cluster density (it&apos;s n^2 on clusters) and it does it twice. First optimization would be to cache it so the separation calculation can be done more quickly. I will dig into the ClusterEvaluator NaN first. Stay tuned.&lt;/p&gt;</comment>
                            <comment id="13414664" author="jeastman" created="Sun, 15 Jul 2012 16:22:48 +0100"  >&lt;p&gt;Initial results indicate you have some very, very dense clusters that have max distance from the cluster center and min distance both == 0. This makes the intra-density NaN for that cluster and, since the overall density is an average of the per-cluster intra-density, that too is NaN. I&apos;ve checked one of those clusters and the invalidCluster() calculation indicates at least one of the representative points for the cluster is not identical to the cluster center. This should yield a non-zero distance, even for CosineDistanceMeasure, but this does not seem to be the case. Continuing...&lt;/p&gt;</comment>
                            <comment id="13414675" author="jeastman" created="Sun, 15 Jul 2012 16:42:53 +0100"  >&lt;p&gt;I tried changing the initialization of the max loop variable from 0 to Double.MIN_VALUE (see below) and now it produces a legal value (0.656) for average Intra-Cluster Density. Is this useful? Does it look like a reasonable change?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; intraClusterDensity() {
    pruneInvalidClusters();
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; avgDensity = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Cluster cluster : clusters) {
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = 0;
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; max = &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.MIN_VALUE;
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; min = &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.MAX_VALUE;
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; sum = 0;
      List&amp;lt;VectorWritable&amp;gt; repPoints = representativePoints.get(cluster.getId());
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; repPoints.size(); i++) {
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = i + 1; j &amp;lt; repPoints.size(); j++) {
          &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; d = measure.distance(repPoints.get(i).get(), repPoints.get(j).get());
          min = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(d, min);
          max = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(d, max);
          sum += d;
          count++;
        }
      }
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; denom = max - min;
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; density = (sum / count - min) / denom;
      avgDensity += density;
      log.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Intra-Cluster Density[{}] = {}&quot;&lt;/span&gt;, cluster.getId(), density);
    }
    avgDensity = clusters.isEmpty() ? 0 : avgDensity / clusters.size();
    log.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Intra-Cluster Density = {}&quot;&lt;/span&gt;, avgDensity);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; avgDensity;   
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13414679" author="jeastman" created="Sun, 15 Jul 2012 16:51:19 +0100"  >&lt;p&gt;I also recall wondering about the density calculation when I wrote it. The intra-cluster density uses a similar normalization in the book and, well, I really cannot defend either of them. Here it is just for conversation:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; interClusterDensity() {
    pruneInvalidClusters();
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; max = 0;
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; min = &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.MAX_VALUE;
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; sum = 0;
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; clusters.size(); i++) {
      Cluster clusterI = clusters.get(i);
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = i + 1; j &amp;lt; clusters.size(); j++) {
        Cluster clusterJ = clusters.get(j);
        &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; d = measure.distance(clusterI.getCenter(), clusterJ.getCenter());
        min = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(d, min);
        max = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(d, max);
        sum += d;
        count++;
      }
    }
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; density = (sum / count - min) / (max - min);
    log.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Inter-Cluster Density = {}&quot;&lt;/span&gt;, density);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; density;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13414697" author="pferrel" created="Sun, 15 Jul 2012 17:39:59 +0100"  >&lt;p&gt;As to the very dense clusters; from visual inspection I bet those are a set of identical pages. I have done nothing to filter them since they have different URLs and for my particular use the URL makes them different. I noticed this looking at the results so it is just a guess. For other people doing crawls I suspect it will happen fairly often. &lt;/p&gt;

&lt;p&gt;As to the change made to the initialization from the absolute 0 to Double.MIN_VALUE I claim ignorance of the java Double implementation (years waisted in other programming languages). However given the special nature of NaN, 0, positive and negative infinity, and the need to correct for rounding errors in large scale calculations my intuition says it is the right thing to do, BTW I will be much more careful myself in the future. When this is over I&apos;d suggest a code review from a Java math expert, don&apos;t rely on me obviously.&lt;/p&gt;

&lt;p&gt;As to whether the value returned looks good; I am not sure what to expect since I haven&apos;t seen a lot of values from that calc but I&apos;ll plug in your code to recreate the evaluator table (the one with several values of k) and we&apos;ll see what it looks like.&lt;/p&gt;

&lt;p&gt;You reference &quot;the book&quot; in the question about normalization. I&apos;ve been meaning to ask where the ClusterEvaluator work came from? &lt;/p&gt;

&lt;p&gt;I&apos;ve got a fire drill on another project but will get back on this asap.&lt;/p&gt;</comment>
                            <comment id="13414702" author="pferrel" created="Sun, 15 Jul 2012 17:53:57 +0100"  >&lt;p&gt;Thinking about how the evaluators are tested; it seems that there are several cases that will occur often in real world data that might not be seen in synthetic data. First is ultra dense clusters because of identical docs/items. Another is empty vectors. With dimensional reduction in it&apos;s various forms you can easily get empty vectors and depending on how the clusterer works you may get a cluster around the origin or one of empty vectors. Anyway back to the fire drill.&lt;/p&gt;</comment>
                            <comment id="13414707" author="srowen" created="Sun, 15 Jul 2012 18:14:43 +0100"  >&lt;p&gt;Nota Bene: Double.MIN_VALUE is &lt;b&gt;not&lt;/b&gt; the smallest double value. It&apos;s the smallest &lt;b&gt;positive&lt;/b&gt; double value. Initialize max variables of this type to Double.NEGATIVE_INFINITY and min variables to Double.POSITIVE_INFINITY.&lt;/p&gt;</comment>
                            <comment id="13414709" author="pferrel" created="Sun, 15 Jul 2012 18:18:31 +0100"  >&lt;p&gt;Back, I&apos;ll change the init code and rerun the evals for all ks. &lt;/p&gt;

&lt;p&gt;I notice that the INFO output for the individual cluster intra-cluster density is written here. Is it hard to also send it to the output file? I realize the ClusterEvaluator is meant to be used without the clusterdump driver so just asking.&lt;/p&gt;</comment>
                            <comment id="13414751" author="jeastman" created="Sun, 15 Jul 2012 20:33:47 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It&apos;s easy enough to create a method that accumulates a map of intra-densities and another that takes their average. I will do this and post a patch so you can try it.&lt;/li&gt;
	&lt;li&gt;It is certainly possible to write the densities to a file too.&lt;/li&gt;
	&lt;li&gt;The invalidClusters() pruning is supposed to catch all clusters where the representative points are all identical to the cluster center. This can be caused by the RepresentativePointsDriver if there are no points assigned to the cluster in the clustering step (empty clusters can occur in kmeans and others).&lt;/li&gt;
	&lt;li&gt;Thanks Sean. Changing to NEGATIVE and POSITIVE_INFINITY causes the NaN problem to reoccur. I&apos;m going to dig into why those clusters are not getting pruned.&lt;/li&gt;
	&lt;li&gt;&quot;The Book&quot; is &quot;Mahout in Action&quot; p 146. BTW, it uses 0 and Double.MAX_VALUE (-;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13414753" author="jeastman" created="Sun, 15 Jul 2012 20:40:25 +0100"  >&lt;p&gt;Working patch that includes a unit test for debugging this issue.&lt;/p&gt;</comment>
                            <comment id="13414757" author="pferrel" created="Sun, 15 Jul 2012 20:55:58 +0100"  >&lt;p&gt;I changed the init values in inter and intra-cluster methods and iterated through intra-cluster calc until the first time you get a density = NaN. The breakpoint is on this line.&lt;/p&gt;

&lt;p&gt;      log.info(&quot;Intra-Cluster Density&lt;span class=&quot;error&quot;&gt;&amp;#91;{}&amp;#93;&lt;/span&gt; = {}&quot;, cluster.getId(), density);&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the debug output. It will mean more to you than me but one odd thing is that the cluster radius vector has weights of NaN on some keys?&lt;/p&gt;

&lt;p&gt;The way the average is calculated once a NaN comes along the average will stay NaN. It look likes once the radius is wonked the distance measure returns 0 and so density = NaN. All of which seems to indicate that any NaN for any cluster will mess up the calc.&lt;/p&gt;

&lt;p&gt;Something wrong in the radius calculation or is that a red herring?&lt;/p&gt;</comment>
                            <comment id="13414761" author="jeastman" created="Sun, 15 Jul 2012 21:12:01 +0100"  >&lt;p&gt;Hey Pat,&lt;br/&gt;
You are probably the first real user here. What would be the most useful output formats for these measures? A triangular matrix of the inter- densities and a vector of the intra- densities, written to files? I think the averages are not working so well, not yet anyway, and it might be better to just output raw values.&lt;/p&gt;</comment>
                            <comment id="13414768" author="srowen" created="Sun, 15 Jul 2012 21:37:36 +0100"  >&lt;p&gt;The fix may or may not be right to use POSITIVE_INFINITY; it may just be a part of the puzzle. If switching from 0 to a really small positive value helps, then I&apos;d imagine that means NaN is creeping in somewhere as a divide by 0. And that could happen if max never is different from 0 and ends up making a denominator 0? That might also explain why using POSITIVE_INFINITY does the same, as you may end up with infinity/infinity somewhere. Sounds like some loop expects there to be at least one iteration to make for valid max/min values, but there isn&apos;t one loop.  Is count 0?&lt;/p&gt;</comment>
                            <comment id="13414774" author="jeastman" created="Sun, 15 Jul 2012 22:18:04 +0100"  >&lt;p&gt;I also get the first NaN with cluster 33465. It has 6 representative points:&lt;/p&gt;

&lt;p&gt;5 identical vectors like this:&lt;/p&gt;
{3077:0.09790894164219517,4973:0.1884642719752401,6340:0.11433534252102742,7096:0.26375115412812483,7729:0.1579332024718107,8266:0.2592449794079855,9311:0.10461220497464459,11472:0.06164575325915021,13427:0.1747753834897376,13438:0.06393054441982463,14399:0.16359365494209394,14692:0.06929109554243788,15186:0.17966648450303982,15780:0.046454420041688316,15791:0.0731677731970443,21692:0.2244867856209188,22814:0.16150377853136402,23483:0.130108231430041,25323:0.08123791103459937,31633:0.266528727390838,32172:0.17767387631551967,32522:0.08487072539355776,33136:0.1370203379603993,33815:0.2873453848941226,39598:0.07758306663660308,48009:0.1279477350859634,50625:0.24661162653957963,52392:0.1555548032973563,53378:0.08022117855049148,54994:0.11022622928504641,59960:0.10656817176360436,60167:0.112475120915112,60808:0.19365247390752108,61246:0.12696983521304098,62779:0.15779491042479035,68657:0.12754867891049163,68768:0.15258151446035362,70703:0.1207780185942059,70936:0.0663956144057571,71349:0.07686518411114775,71912:0.10194260052056149,73137:0.20056701730214407,75223:0.06801198254209008}

&lt;p&gt;and one (the cluster center) like this:&lt;/p&gt;
{13438:0.06393054441982461,6340:0.11433534252102741,33815:0.2873453848941226,39598:0.07758306663660308,54994:0.11022622928504643,11472:0.06164575325915022,4973:0.1884642719752401,13427:0.17477538348973762,23483:0.130108231430041,7729:0.15793320247181072,8266:0.2592449794079856,50625:0.24661162653957966,48009:0.12794773508596344,14399:0.16359365494209396,73137:0.20056701730214407,53378:0.08022117855049148,7096:0.26375115412812483,59960:0.10656817176360435,52392:0.1555548032973563,15186:0.17966648450303982,9311:0.1046122049746446,3077:0.09790894164219519,25323:0.08123791103459939,32172:0.17767387631551967,71349:0.07686518411114775,15791:0.0731677731970443,32522:0.08487072539355776,21692:0.22448678562091878,62779:0.15779491042479035,60167:0.11247512091511201,22814:0.16150377853136402,33136:0.13702033796039934,15780:0.046454420041688316,68657:0.12754867891049163,31633:0.26652872739083794,68768:0.15258151446035365,60808:0.1936524739075211,75223:0.06801198254209008,61246:0.12696983521304098,70703:0.1207780185942059,14692:0.06929109554243788,70936:0.0663956144057571,71912:0.10194260052056149}

&lt;p&gt;Somehow, the CosineDistanceMeasure computes the distance between these two as 0. Seems like it should be more like 1, but I don&apos;t know why. The lengthSquaredV1 = 1.0000000000000002 = lengthSquaredV2 = dotProduct.&lt;/p&gt;</comment>
                            <comment id="13414776" author="jeastman" created="Sun, 15 Jul 2012 22:23:28 +0100"  >&lt;p&gt;The NaN in the radius is a red herring. This computation only uses the representative points computed for the cluster. In this case, the cluster center is ok as are the other identical rep points. Why those points ever got assigned to that cluster is also a mystery, but given that cosine distance seems to think they are identical I am not too surprised.&lt;/p&gt;</comment>
                            <comment id="13414785" author="jeastman" created="Sun, 15 Jul 2012 22:48:32 +0100"  >&lt;p&gt;Well, the dot product is correct. There are 43 common elements between the two vectors: Their distance is indeed 0. What is happening is that, since there are representative points that are not &lt;b&gt;equal to&lt;/b&gt; the cluster center, the invalidCluster filter is letting them into the intra-cluster calculation. The fact that they are all 0-distance from the center is not taken into account by the filter and thus the max &amp;amp; min values are - correctly - zero too. This results in the divide by zero and NaN is a correct intra-density. &lt;/p&gt;

&lt;p&gt;Once a NaN intra-cluster density is computed, it forces the rest of the average density calculation to return NaN too. I don&apos;t know what to do at this point.&lt;/p&gt;

&lt;p&gt;I&apos;m betting this kind of pattern is at work in the CDbw calculation too.&lt;/p&gt;</comment>
                            <comment id="13414791" author="pferrel" created="Sun, 15 Jul 2012 22:58:22 +0100"  >&lt;p&gt;As to the output per cluster, your description sounds ideal. &lt;/p&gt;

&lt;p&gt;The reason for intra-cluster density is to help judge which clusters are really clumps and which are left-overs or non-clusters. If the distribution of points in a cluster indicates a &quot;fuzzy&quot; collection it might not be a very high quality cluster. &lt;/p&gt;

&lt;p&gt;As to inter-cluster densities as a quality measure I&apos;d probably calculate an average to judge a cluster&apos;s separation from others in general.&lt;/p&gt;</comment>
                            <comment id="13414795" author="pferrel" created="Sun, 15 Jul 2012 23:24:23 +0100"  >&lt;p&gt;I think your conclusion about one NaN leading to average = NaN is correct. Sean and I suspected as much above. I described several things you can get in the real world that cause trouble, clusters with many identical points and points with no dimensions.&lt;/p&gt;

&lt;p&gt;Looking at 33465 this seems to be the case. I would suggest that these clusters either have bad representative points or are not valid clusters for inclusion in the average intra-cluster density. if they have a centroid with dimensions they would still be useful for inter-cluster density but just because one has a NaN intra-cluster density doesn&apos;t mean the whole intra-cluster density average should be horked. Why not just remove them from consideration?&lt;/p&gt;

&lt;p&gt;It seems to me this is the case of a bunch of docs that have the same content forming a cluster. This will happen all the time in real world crawls as I said above. But maybe an infinite density should be considered a fringe case and removed from the average. &lt;/p&gt;</comment>
                            <comment id="13415238" author="jeastman" created="Mon, 16 Jul 2012 16:54:39 +0100"  >&lt;p&gt;Cluster 33465 looks to be suspect. Its representative points contain the same document name repeated 5 times and the cluster center vector, which is identical to the repeated document vector. This would occur if the clusteredPoints for the cluster contained only the single document and is a related case to clusters having none. The representative points calculation will emit duplicates like this if there are less points in the cluster than the number of representative points requested.&lt;/p&gt;

&lt;p&gt;This cluster should be pruned by invalidCluster() but it is not because the document vector values differ from the cluster center vector by a very insignificant value: (e.g. 0.09790894164219519 vs 0.09790894164219517). This filter should probably use an epsilon comparison rather than Vector.equals(), which considers these small differences to be significant.&lt;/p&gt;

&lt;p&gt;All of this makes me wonder if the pruning process should be scrapped, and NaN values simply not included in the averages. I&apos;m going to follow this line of thought and will report back later.&lt;/p&gt;</comment>
                            <comment id="13415359" author="pferrel" created="Mon, 16 Jul 2012 17:30:29 +0100"  >&lt;p&gt;The evaluator code does no error checking and so assumes all input is valid. My style would be to put checks for edge conditions in the evaluators. Like make sure the denominator is never 0, etc. This might hide some deeper problems though. &lt;/p&gt;

&lt;p&gt;I assume what you are saying about the same doc name means the same item was chosen five times? I strongly suspect that there will be cases where an identical weighted vector will have n different names so you can&apos;t get away with checking for uniqueness of representative points alone, you will still have the problem of a singularity (borrowing a physics term) cluster. The clustering algorithm may even accidentally make the centroid the same as the rest of the points and I suspect that would cause different problems. I think these cases are all fairly likely to come up in large crawls.&lt;/p&gt;

&lt;p&gt;Not sure what else the pruning process is for but in this case I&apos;d toss the cluster from the intra-cluster evaluation but not necessarily the inter-cluster density eval (though it might break some math there too). Which leans us towards scapping the pruning for evaluation because it removes the cluster from both calculations and maybe others too? &lt;/p&gt;

&lt;p&gt;If pruning is supposed to catch all undesirable conditions for all evaluations it seems like a lot of coupling with the evaluation algorithms and therefore fragile with respect to changes in algorithm and data conditions.&lt;/p&gt;

&lt;p&gt;So I guess I agree with your last statement.&lt;/p&gt;</comment>
                            <comment id="13415371" author="jeastman" created="Mon, 16 Jul 2012 17:46:53 +0100"  >&lt;p&gt;Yes, the pruning process was supposed to catch all of the irregular situations that might come up but it was clearly inadequate here. I&apos;ve removed it in favor of calculating a sparse vector of &amp;lt;clusterId, double&amp;gt; for all the intra-densities and then omitting any NaN values from the average. It seems to work.&lt;/p&gt;

&lt;p&gt;Removing the pruning from the inter-cluster calculation allows clusters with less elements to be included in the computation but does not introduce NaN values because the cluster centers are only used for this average. I&apos;m going to add a method that returns a sparse matrix &amp;lt;clusterId, clusterId, double&amp;gt; of all the inter-cluster distances and then compute the average using these values.&lt;/p&gt;

&lt;p&gt;These two changes should pave the way to a CLI invocation that actually writes these structures to files so you can do whatever additional analysis you want.&lt;/p&gt;

&lt;p&gt;I will post the revised patch in a bit.&lt;/p&gt;</comment>
                            <comment id="13415418" author="jeastman" created="Mon, 16 Jul 2012 18:30:50 +0100"  >&lt;p&gt;This patch removes the pruning and introduces intermediate methods that return structures of inter-cluster and intra-cluster distances for later file output enhancements.&lt;/p&gt;</comment>
                            <comment id="13415813" author="pferrel" created="Tue, 17 Jul 2012 01:29:43 +0100"  >&lt;p&gt;I get &lt;/p&gt;

&lt;p&gt;Inter-Cluster Density: 0.9464271269766443&lt;br/&gt;
Intra-Cluster Density: 0.593190786304747&lt;br/&gt;
CDbw Inter-Cluster Density: 0.0&lt;br/&gt;
CDbw Intra-Cluster Density: 1050.0723680608382&lt;br/&gt;
CDbw Separation: 187792.32137017616&lt;/p&gt;

&lt;p&gt;With lots of NaN&apos;s for clusters. I finally got the data into my UI so I can see why we are getting NaN&apos;s. Lots of clusters where the pages are nearly or exactly identical. The NaN&apos;s are a red flag and for most applications I expect they will be of use in making clustering output have a gooey cream center--yum.&lt;/p&gt;

&lt;p&gt;I think this line may be wrong. You want to divide by the number of valid/non-NaN clusters don&apos;t you?&lt;/p&gt;

&lt;p&gt;    avgDensity = clusters.isEmpty() ? 0 : avgDensity / clusters.size();&lt;/p&gt;

&lt;p&gt;The Intra-Cluster Density: 0.593190786304747 looks skewed low if you look at the per cluster output. &lt;/p&gt;

&lt;p&gt;The actual effect of the singularity clusters is that they are super dense, which leads one to wonder if this shouldn&apos;t be reflected in the average somehow.&lt;/p&gt;</comment>
                            <comment id="13417663" author="jeastman" created="Wed, 18 Jul 2012 21:47:05 +0100"  >&lt;p&gt;Good points. I will count the number of non-NaN clusters and divide by that. Your other point also deserves thought, though adding near-infinite density to the running sum will definitely skew the results. &lt;/p&gt;

&lt;p&gt;I&apos;m going to look into CDbw next...&lt;/p&gt;</comment>
                            <comment id="13417668" author="pferrel" created="Wed, 18 Jul 2012 21:54:28 +0100"  >&lt;p&gt;Adding singularity clusters into the average would make more sense if they weren&apos;t anomalies. For instance if the singularity was caused by dimensional reduction instead of identical pages with different URLs. So it seems like we are splitting hairs at this point. I am not aware of a statistical technique for adding them back in, so unless someone else does I wouldn&apos;t know how.&lt;/p&gt;</comment>
                            <comment id="13417688" author="pferrel" created="Wed, 18 Jul 2012 22:14:50 +0100"  >&lt;p&gt;BTW It would be nice have access to the evaluator measures for each cluster so keeping them in a collection (for example densities) is very helpful. How will I get access to those? I think you talked about adding them to the output file. I hate to ask for too much but is it possible to add them to the data in the CE instance?&lt;/p&gt;

&lt;p&gt;ce.intraClusterDensities() could return the collection perhaps?&lt;/p&gt;

&lt;p&gt;Same for CDbw instance?&lt;/p&gt;</comment>
                            <comment id="13418610" author="jeastman" created="Thu, 19 Jul 2012 20:42:43 +0100"  >&lt;p&gt;This patch adjusts the average intra-cluster density to ignore NaN values by counting the good ones for the average. It also has two methods:&lt;/p&gt;

&lt;p&gt;  public Map&amp;lt;Integer, Vector&amp;gt; interClusterDistances() {&lt;br/&gt;
  public Vector intraClusterDensities() {&lt;/p&gt;

&lt;p&gt;that provide Java access to these intermediate values before averages are calculated.&lt;/p&gt;</comment>
                            <comment id="13419865" author="jeastman" created="Sat, 21 Jul 2012 16:52:34 +0100"  >&lt;p&gt;This patch adds similar CDbw methods to return per-cluster densities and adds some significant performance improvements by caching values that were computed twice before. It also adds a unit test that evaluates against Pat&apos;s database. I changed the inter-cluster density calculation to return the average - like the document says but does not show in eqn 1 - and to ignore the NaN values that are present in this dataset. Probably needs some more testing too.&lt;/p&gt;

&lt;p&gt;I&apos;m still not sure how to deal with the NaN values, as they appear to be valid but infinitely dense clusters that all contain vectors identical to the cluster center. &lt;/p&gt;</comment>
                            <comment id="13419878" author="pferrel" created="Sat, 21 Jul 2012 18:07:58 +0100"  >&lt;p&gt;I get the following values for the evaluators. It looks like the ClusterEvaluator is working. However i still get a 0 for CDbw Inter-Cluster Density? I assume the fix for that is not included? I&apos;ll test this on some other cluster collections once you give the sign.&lt;/p&gt;


&lt;p&gt;12/07/21 09:59:55 INFO evaluation.ClusterEvaluator: Average Intra-Cluster Density = 0.6665065014660079&lt;/p&gt;

&lt;p&gt;Inter-Cluster Density: 0.9464271269766251&lt;br/&gt;
Intra-Cluster Density: 0.6665065014660079&lt;br/&gt;
CDbw Inter-Cluster Density: 0.0&lt;br/&gt;
CDbw Intra-Cluster Density: 1664.748876193994&lt;br/&gt;
CDbw Separation: 115780.90501251115&lt;/p&gt;</comment>
                            <comment id="13419914" author="jeastman" created="Sat, 21 Jul 2012 20:16:49 +0100"  >&lt;p&gt;I thought there was a problem there too (and I spent a bunch of time debugging it) but consider: Their definition of inter-cluster density is the average density of representative points within one standard deviation of a midpoint half way between the closest representative points of each cluster. All of those seem to be 0 in this dataset. It might be that sampling more representative points would change that but I&apos;m not sure at all.&lt;/p&gt;

&lt;p&gt;I will be interested in what you find with some other cluster collections.&lt;/p&gt;</comment>
                            <comment id="13419931" author="pferrel" created="Sat, 21 Jul 2012 21:38:30 +0100"  >&lt;p&gt;BTW the CDbw values have changed. Is this a side effect of ignoring NaN clusters? Expected?&lt;/p&gt;

&lt;p&gt;I see that the CDbw Validity Index is calculated (and available in java) it&apos;s also trivial to recreate from the output values but wondered why it is not output?&lt;/p&gt;</comment>
                            <comment id="13419936" author="jeastman" created="Sat, 21 Jul 2012 21:49:08 +0100"  >&lt;p&gt;I would imagine that is a consequence of ignoring NaN, but I also changed the inter-cluster density to be an average of the individual densities (as the text in the book describes it) though the equation (1) does not normalize it by the count. This seems more consistent with the other metrics we compute but it might be wrong. The inter-cluster density is also used in the separation. Of course, zero / count is still zero so it is moot right now. I&apos;m going to try this on the other test cases and see how that looks.&lt;/p&gt;</comment>
                            <comment id="13419937" author="pferrel" created="Sat, 21 Jul 2012 21:50:24 +0100"  >&lt;p&gt;As to the CDbw Inter-Cluster Density: 0.0&lt;/p&gt;

&lt;p&gt;When I was reading the paper it came from I was struck with a couple observations. First the data seemed somewhat contrived and the clustering algorithms were quirky in that they seemed to have been designed or chosen to solve problems in the data set examined. Since I&apos;m planning to put some weight on the values I&apos;ll do a search to see how often the paper has been sited. Unless you have already done that.&lt;/p&gt;

&lt;p&gt;In any case I see what you mean about its calculation and since it does not even enter the validity index calc will consider the issue closed.&lt;/p&gt;

&lt;p&gt;I&apos;ll run this on the same data set with the same values for k and compare the new results with the previous ones. Back in a bit...&lt;/p&gt;</comment>
                            <comment id="13425091" author="pferrel" created="Mon, 30 Jul 2012 19:24:02 +0100"  >&lt;p&gt;I&apos;ve had a chance to run this on several data sets and see no problems. Below are the results I get for a couple sets. For two completely different crawls I see a steadily increasing CDbw validity index as k increases. This doesn&apos;t tell me much. I was hoping to get an indication of an optimal k for a given data set but doesn&apos;t seem to do that.  I may need to try much smaller increments, although that isn&apos;t very practical.&lt;/p&gt;

&lt;p&gt;If the data has some clumps at a given scale and other clumps at another scale (which may well be the case) then using the per cluster measures and linking different scales together may give better results. The per cluster value for intra-cluster density does vary around a mean in what seems to be a normal or log normal distribution. So tossing clusters based on a sigma test might be a good idea. &lt;/p&gt;

&lt;p&gt;I vote to close this bug. &lt;/p&gt;

&lt;p&gt;I also vote to have the per cluster data and new scaled inter-cluster density put into the ClusterDumpDriver&apos;s output file instead of leaving them in the logger output.&lt;/p&gt;

&lt;p&gt;--------------------------------------&lt;/p&gt;


&lt;p&gt;Cluster Eval for small crawl for 34487 pages 76156 terms								&lt;/p&gt;

&lt;p&gt;clusters	CDbw Inter-Cluster Density	CDbw Intra-Cluster Density	CDbw Separation	CDbw Validity Index	clusters	average Inter-cluster Density	Average Intra-cluster Density	Scaled Inter-cluster density&lt;br/&gt;
500	0	1050.07236806084	187792.321370176	1.97E+08	500	0.928988162001239	0.666506501466008	0.946427126976625&lt;br/&gt;
1000	0	2224.68724332853	463618.902327256	1.03E+09	1000	0.945889416532285	0.643526550057345	0.945889416532285&lt;br/&gt;
2000	0	3129.61404306957	1863976.83410554	5.83E+09	2000	0.947064274614474	0.616175031765541	0.947064274614474&lt;/p&gt;




&lt;p&gt;Cluster Eval for small crawl for 9686 docs and 27305 terms							&lt;/p&gt;

&lt;p&gt;clusters	CDbw Inter-Cluster Density	CDbw Intra-Cluster Density	CDbw Separation	CDbw Validity Index	clusters	average Inter-cluster Density	Average Intra-cluster Density&lt;br/&gt;
300	0	1377.66044402807	37674.9918329275	5.19E+07	300	0.953138888958119	0.662978461499837&lt;br/&gt;
400	0	1317.72330604304	70756.173673846	9.32E+07	400	0.949625717325956	0.653041070121705&lt;br/&gt;
500	0	1386.28300980349	112213.199968639	1.56E+08	500	0.952490341799314	0.639917990128385&lt;br/&gt;
1000	0	2485.55318093317	466293.691473308	1.16E+09	1000	0.953935715416424	0.587833106832454&lt;br/&gt;
2000	0	4930.2878999304	1892114.62345989	9.33E+09	2000	0.954298464279533	0.55663214080861&lt;br/&gt;
3000				0.00E+00	3000	0.955378051490676	0.537693888785647&lt;/p&gt;</comment>
                            <comment id="13425131" author="jeastman" created="Mon, 30 Jul 2012 19:56:37 +0100"  >&lt;p&gt;Good news. I will try to get this patch finished off and into trunk in the next few days.&lt;/p&gt;</comment>
                            <comment id="13431999" author="hudson" created="Thu, 9 Aug 2012 18:20:08 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1614 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1614/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1614/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1045&quot; title=&quot;Cluster evaluators returning bad results&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1045&quot;&gt;&lt;del&gt;MAHOUT-1045&lt;/del&gt;&lt;/a&gt;: committing patch with changes to unit tests. CDbw numbers still need user testing but ClusterEvaluater results are improved. All tests run (Revision 1371250)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1371250&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1371250&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/cdbw/CDbwEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/evaluation/ClusterEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/MAHOUT1045Test.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterEvaluator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/cdbw/TestCDbwEvaluator.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13437564" author="apurtell" created="Sun, 19 Aug 2012 19:39:16 +0100"  >&lt;p&gt;The integration tests checked in with this patch appear to want an absolute path hardcoded to the developer&apos;s home directory:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;mvn -Dhadoop.version=2.0.0-alpha clean install
[...]
Tests in error: 
  testClusterEvaluator(org.apache.mahout.clustering.MAHOUT1045Test): /Users/jeff/Desktop/jeff/kmeans-clusters/clusters-27-final
  testCDbwEvaluator(org.apache.mahout.clustering.MAHOUT1045Test): /Users/jeff/Desktop/jeff/kmeans-clusters/clusters-27-final
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13437570" author="jeastman" created="Sun, 19 Aug 2012 21:02:30 +0100"  >&lt;p&gt;Good catch Andrew, that test was not intended to be committed to trunk. I&apos;ve just deleted it.&lt;/p&gt;</comment>
                            <comment id="13437592" author="hudson" created="Sun, 19 Aug 2012 22:56:11 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1628 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1628/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1628/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1045&quot; title=&quot;Cluster evaluators returning bad results&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1045&quot;&gt;&lt;del&gt;MAHOUT-1045&lt;/del&gt;&lt;/a&gt;: Removing test that should not have been committed (Revision 1374834)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1374834&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1374834&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/MAHOUT1045Test.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13672171" author="gsingers" created="Sat, 1 Jun 2013 18:36:13 +0100"  >&lt;p&gt;Looks in and passing&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12537459" name="MAHOUT-1045.patch" size="32921" author="jeastman" created="Sat, 21 Jul 2012 16:52:34 +0100"/>
                            <attachment id="12537234" name="MAHOUT-1045.patch" size="21888" author="jeastman" created="Thu, 19 Jul 2012 20:42:43 +0100"/>
                            <attachment id="12536667" name="MAHOUT-1045.patch" size="21860" author="jeastman" created="Mon, 16 Jul 2012 18:30:50 +0100"/>
                            <attachment id="12536573" name="MAHOUT-1045.patch" size="19369" author="jeastman" created="Sun, 15 Jul 2012 20:40:25 +0100"/>
                            <attachment id="12536574" name="first-time-density-nan.txt" size="1570" author="pferrel" created="Sun, 15 Jul 2012 20:57:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 15 Jul 2012 14:58:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242121</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxwdf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12661</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>