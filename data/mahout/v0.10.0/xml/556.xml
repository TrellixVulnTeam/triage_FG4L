<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:17:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-556/MAHOUT-556.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-556] In the trainlogistic example the JSON model file which is created is missing commas and making it unusable with runLogistic.</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-556</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>
&lt;p&gt;Bug related to creation of the model when you run trainlogistic &lt;/p&gt;

&lt;p&gt; Its creating the JSON model file  using the toJson function as illustrated below&lt;br/&gt;
--------------------------------&lt;br/&gt;
In,&lt;br/&gt;
 LogisticModelParameters.java&lt;br/&gt;
Function&lt;br/&gt;
void saveTo(Writer out)&lt;/p&gt;
{
...
..
String savedForm = gson.toJson(this);
...
}
&lt;p&gt;--------------------------------&lt;/p&gt;

&lt;p&gt;But this is not working as expected : -  String savedForm = gson.toJson(this);&lt;/p&gt;


&lt;p&gt;For my experiment using a different dataset - &lt;/p&gt;

&lt;p&gt;I get the following model file : &lt;/p&gt;


&lt;p&gt;{&quot;targetVariable&quot;:&quot;customer&quot;,&quot;typeMap&quot;:&lt;/p&gt;
{&quot;feature2&quot;:&quot;n&quot;,&quot;feature3&quot;:&quot;n&quot;,
    &quot;feature1&quot;:&quot;n&quot;}
&lt;p&gt;,&quot;numFeatures&quot;:334,&quot;useBias&quot;:true,&quot;maxTargetCategories&quot;:&lt;br/&gt;
  2,&quot;targetCategories&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;0&amp;quot;,&amp;quot;1&amp;quot;&amp;#93;&lt;/span&gt;,&quot;lambda&quot;:1.0E-4,&quot;learningRate&quot;:0.001,&quot;lr&quot;:{&lt;br/&gt;
    &quot;mu0&quot;:0.001,&quot;decayFactor&quot;:0.999,&quot;stepOffset&quot;:10,&quot;forgettingExponent&quot;:&lt;br/&gt;
    -0.5,&quot;perTermAnnealingOffset&quot;:20,&quot;beta&quot;:&lt;/p&gt;
{&quot;rows&quot;:1,&quot;cols&quot;:334,&quot;data&quot;:[[
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,6.741887291022263E-4,0.0,0.0,-53.6076187622054,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.031178185395536E-5,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.04383410529689268,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
          0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]}
&lt;p&gt;,&lt;br/&gt;
    &quot;numCategories&quot;:2,&quot;step&quot;:260951,&quot;updateSteps&quot;:{}&quot;updateCounts&quot;:{}&lt;br/&gt;
    &quot;lambda&quot;:1.0E-4,&quot;prior&quot;:{}&quot;sealed&quot;:true,&quot;gradient&quot;:{}}}&lt;/p&gt;


&lt;p&gt;If you notice the last part,&lt;/p&gt;

&lt;p&gt;  &quot;numCategories&quot;:2,&quot;step&quot;:260951,&quot;updateSteps&quot;:{}&quot;updateCounts&quot;:{}&lt;br/&gt;
    &quot;lambda&quot;:1.0E-4,&quot;prior&quot;:{}&quot;sealed&quot;:true,&quot;gradient&quot;:{}}}&lt;/p&gt;

&lt;p&gt;are missing commas between updateSteps,updateCounts  and Sealed variables&lt;/p&gt;

&lt;p&gt;Investigating further, &lt;br/&gt;
These come from the  AbstractOnlineLogisticRegression.java and the above variables are not initialized hence the wrong output by the toJson function. &lt;/p&gt;

&lt;p&gt;This is a bug with  - &amp;gt; gson.toJson function,  I see that I am using gson-1.3 and upgrading to 1.4  by modifying core/pom.xml fixes things, But runLogistic then complains about &lt;/p&gt;

&lt;p&gt;10/11/29 03:29:43 WARN conf.Configuration: DEPRECATED: hadoop-site.xml found in the classpath. Usage of hadoop-site.xml is deprecated. Instead use core-site.xml, mapred-site.xml and hdfs-site.xml to override properties of core-default.xml, mapred-default.xml and hdfs-default.xml respectively&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.RuntimeException: No-args constructor for interface org.apache.mahout.math.Vector does not exist. Register an InstanceCreator with Gson for this type to fix this problem.&lt;br/&gt;
	at com.google.gson.MappedObjectConstructor.constructWithNoArgConstructor(MappedObjectConstructor.java:64)&lt;br/&gt;
	at com.google.gson.MappedObjectConstructor.construct(MappedObjectConstructor.java:53)&lt;br/&gt;
	at com.google.gson.JsonObjectDeserializationVisitor.constructTarget(JsonObjectDeserializationVisitor.java:41)&lt;br/&gt;
	at com.google.gson.JsonDeserializationVisitor.getTarget(JsonDeserializationVisitor.java:56)&lt;br/&gt;
	at com.google.gson.ObjectNavigator.accept(ObjectNavigator.java:101)&lt;br/&gt;
	at com.google.gson.JsonDeserializationVisitor.visitChild(JsonDeserializationVisitor.java:107)&lt;br/&gt;
	at com.google.gson.JsonDeserializationVisitor.visitChildAsObject(JsonDeserializationVisitor.java:95)&lt;br/&gt;
	at com.google.gson.JsonObjectDeserializationVisitor.visitObjectField(JsonObjectDeserializationVisitor.java:62)&lt;br/&gt;
	at com.google.gson.ObjectNavigator.navigateClassFields(ObjectNavigator.java:156)&lt;br/&gt;
	at com.google.gson.ObjectNavigator.accept(ObjectNavigator.java:123)&lt;br/&gt;
	at com.google.gson.JsonDeserializationVisitor.visitChild(JsonDeserializationVisitor.java:107)&lt;br/&gt;
	at com.google.gson.JsonDeserializationVisitor.visitChildAsObject(JsonDeserializationVisitor.java:95)&lt;br/&gt;
	at com.google.gson.JsonObjectDeserializationVisitor.visitObjectField(JsonObjectDeserializationVisitor.java:62)&lt;br/&gt;
	at com.google.gson.ObjectNavigator.navigateClassFields(ObjectNavigator.java:156)&lt;br/&gt;
	at com.google.gson.ObjectNavigator.accept(ObjectNavigator.java:123)&lt;br/&gt;
	at com.google.gson.JsonDeserializationContextDefault.fromJsonObject(JsonDeserializationContextDefault.java:73)&lt;br/&gt;
	at com.google.gson.JsonDeserializationContextDefault.deserialize(JsonDeserializationContextDefault.java:51)&lt;br/&gt;
	at com.google.gson.Gson.fromJson(Gson.java:495)&lt;br/&gt;
	at com.google.gson.Gson.fromJson(Gson.java:444)&lt;br/&gt;
	at com.google.gson.Gson.fromJson(Gson.java:419)&lt;br/&gt;
	at org.apache.mahout.classifier.sgd.LogisticModelParameters.loadFrom(LogisticModelParameters.java:142)&lt;br/&gt;
	at org.apache.mahout.classifier.sgd.LogisticModelParameters.loadFrom(LogisticModelParameters.java:155)&lt;br/&gt;
	at org.apache.mahout.classifier.sgd.RunLogistic.main(RunLogistic.java:56)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:616)&lt;br/&gt;
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:68)&lt;br/&gt;
	at org.apache.hadoop.util.ProgramDriver.driver(ProgramDriver.java:139)&lt;br/&gt;
	at org.apache.mahout.driver.MahoutDriver.main(MahoutDriver.java:182)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:616)&lt;br/&gt;
	at org.apache.hadoop.util.RunJar.main(RunJar.java:156)&lt;/p&gt;

&lt;p&gt;Which I haven&apos;t had the time to investigate yet, Will post more results tomorrow.&lt;/p&gt;








</description>
                <environment>&lt;p&gt;Ubuntu 10.10, Hadoop-0.20.2 &lt;/p&gt;</environment>
        <key id="12491529">MAHOUT-556</key>
            <summary>In the trainlogistic example the JSON model file which is created is missing commas and making it unusable with runLogistic.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tdunning">Ted Dunning</assignee>
                                    <reporter username="rohananil">Rohan Anil</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Nov 2010 11:42:21 +0000</created>
                <updated>Sat, 21 May 2011 04:18:48 +0100</updated>
                            <resolved>Mon, 17 Jan 2011 01:03:15 +0000</resolved>
                                    <version>0.5</version>
                                    <fixVersion>0.5</fixVersion>
                                    <component>Classification</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12964772" author="tdunning" created="Mon, 29 Nov 2010 15:18:09 +0000"  >&lt;p&gt;Rohan,&lt;/p&gt;

&lt;p&gt;THanks for looking into this.&lt;/p&gt;

&lt;p&gt;I have started building up serializers of the entire sgd framework using serializers because large models just aren&apos;t feasible to serialize&lt;br/&gt;
using JSON.&lt;/p&gt;

&lt;p&gt;Let me check the state of those changes.  Last I looked, I think that they were very close to ready.&lt;/p&gt;</comment>
                            <comment id="12964775" author="tdunning" created="Mon, 29 Nov 2010 15:22:41 +0000"  >
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-545&quot; title=&quot;GSON not a good fit for deserializing SGD models&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-545&quot;&gt;&lt;del&gt;MAHOUT-545&lt;/del&gt;&lt;/a&gt; is the issue I have been using to track JSON serialization problems.&lt;/p&gt;

&lt;p&gt;The problem with missing comma&apos;s shouldn&apos;t be occurring if ModelSerializer is used.  The RunLogistic&lt;br/&gt;
code is kind of old so it may not be using that class.&lt;/p&gt;</comment>
                            <comment id="12964776" author="tdunning" created="Mon, 29 Nov 2010 15:25:33 +0000"  >&lt;p&gt;Yes.  I think that this code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    GsonBuilder gb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GsonBuilder();
    gb.registerTypeAdapter(Matrix.class, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MatrixTypeAdapter());
    Gson gson = gb.setPrettyPrinting().create();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;in LogisticModelParameters.saveTo() at about line 126 should actually be more like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Gson gson = ModelSerializer.gson();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The serializer that results has lots of adapters installed already.&lt;/p&gt;</comment>
                            <comment id="12965089" author="rohananil" created="Tue, 30 Nov 2010 04:45:23 +0000"  >&lt;p&gt;Thanks! That works.&lt;/p&gt;

&lt;p&gt;The same edit is needed in the  LogisticModelParameters.loadFrom!&lt;/p&gt;

&lt;p&gt;Another bug: in Auc.java&lt;br/&gt;
Classifier Evaluation : &lt;/p&gt;

&lt;p&gt;when the scores are tied -  &lt;br/&gt;
...&lt;br/&gt;
        // how many negatives are tied?&lt;br/&gt;
        int k0 = 0;&lt;br/&gt;
        while (i0 &amp;lt; n0 &amp;amp;&amp;amp; v0 == tieScore) &lt;/p&gt;
{
          k0++;
          i0++;
          v0 = scores[0].get(i0);
        }

&lt;p&gt;        // and how many positives&lt;br/&gt;
        int k1 = 0;&lt;br/&gt;
        while (i1 &amp;lt; n1 &amp;amp;&amp;amp; v1 == tieScore) &lt;/p&gt;
{
          k1++;
          i1++;
          v1 = scores[1].get(i1);
        }
&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;It sometimes goes Index out of bounds: Increment operation should be after accessing it&lt;/p&gt;

&lt;p&gt; while (i0 &amp;lt; n0 &amp;amp;&amp;amp; v0 == tieScore) &lt;/p&gt;
{
          v0 = scores[0].get(i0);
          k0++;
          i0++;
         
        }

&lt;p&gt;        // and how many positives&lt;br/&gt;
        int k1 = 0;&lt;br/&gt;
        while (i1 &amp;lt; n1 &amp;amp;&amp;amp; v1 == tieScore) &lt;/p&gt;
{
          v1 = scores[1].get(i1);
          k1++;
          i1++;
         
        }</comment>
                            <comment id="12982435" author="srowen" created="Mon, 17 Jan 2011 00:13:49 +0000"  >&lt;p&gt;Ted&apos;s guess at the change is probably good, and it passes tests. I committed that. Rohan maybe you can verify it works?&lt;/p&gt;

&lt;p&gt;Rohan I&apos;d also open brand-new issue for unrelated issues, instead of commenting on an unrelated one. The second issue you mention, however, seems to have already been fixed anyway.&lt;/p&gt;</comment>
                            <comment id="12982445" author="tdunning" created="Mon, 17 Jan 2011 01:01:24 +0000"  >&lt;p&gt;The reading side has the same problem as noted by Rohan.  Commit coming through in minutes.&lt;/p&gt;</comment>
                            <comment id="12982446" author="tdunning" created="Mon, 17 Jan 2011 01:03:15 +0000"  >&lt;p&gt;Tiny additional patch committed.&lt;/p&gt;</comment>
                            <comment id="12982502" author="hudson" created="Mon, 17 Jan 2011 07:04:13 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #563 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/563/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/563/&lt;/a&gt;)&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12479964">MAHOUT-545</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 29 Nov 2010 15:18:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy4dz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22862</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>