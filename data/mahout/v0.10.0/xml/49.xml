<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:28:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-49/MAHOUT-49.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-49] ParameterEnumerable</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-49</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;A utility package used to &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;configure class&lt;/li&gt;
	&lt;li&gt;create default configuration files&lt;/li&gt;
	&lt;li&gt;parse main method arguments&lt;/li&gt;
	&lt;li&gt;produce human readable help&lt;/li&gt;
	&lt;li&gt;getters and setters for value as object and string, for future generic reflection based GUI.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12394354">MAHOUT-49</key>
            <summary>ParameterEnumerable</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="karl.wettin">Karl Wettin</assignee>
                                    <reporter username="karl.wettin">Karl Wettin</reporter>
                        <labels>
                    </labels>
                <created>Sat, 19 Apr 2008 02:30:59 +0100</created>
                <updated>Thu, 21 Aug 2008 16:41:33 +0100</updated>
                            <resolved>Wed, 23 Apr 2008 18:47:52 +0100</resolved>
                                                    <fixVersion>0.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12590661" author="karl.wettin" created="Sat, 19 Apr 2008 02:33:35 +0100"  >&lt;p&gt;Something like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; ParameterEnumerable {

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numberOfParameters();
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; Enumeration&amp;lt;Parameter&amp;gt; enumerateParameters();

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Parameter&amp;lt;T&amp;gt; {
    /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name();
    /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; description();
    /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;T&amp;gt; type();
    /** @param stringValue */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void setStringValue(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; stringValue);
    /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getStringValue();
    /** @param value*/
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void setValue(T value);
    /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; T getValue();
    /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; T defaultValue();

  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12590662" author="srowen" created="Sat, 19 Apr 2008 02:36:40 +0100"  >&lt;p&gt;Is this anything to do with parsing command line and providing help on options? Sounds like something that Commons CLI handles &amp;#8211; or if you&apos;re suggesting something merely similar, maybe still a package that can be reused partially.&lt;/p&gt;</comment>
                            <comment id="12590664" author="karl.wettin" created="Sat, 19 Apr 2008 03:04:13 +0100"  >&lt;blockquote&gt;&lt;p&gt;Is this anything to do with parsing command line and providing help on options?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not so much command line. Thats usually just a path to where all files are located.&lt;/p&gt;

&lt;p&gt;This is more about producing help on the parameters one can pass to the Hadoop job in the configuration file: what the training data in the path is called, what leven to set some knob, what class strategy to use for something, the settings for that strategy, et c.&lt;/p&gt;

&lt;p&gt;I also want it to handle composite configuration. If I set a distance measure class it should iterate the new settings of that too.&lt;/p&gt;

&lt;p&gt;With getters and setters in the parameters its fairly simple to create a GUI for setting up jobs. Weka does similar things in their explorer GUI.&lt;/p&gt;

</comment>
                            <comment id="12590681" author="karl.wettin" created="Sat, 19 Apr 2008 07:42:41 +0100"  >&lt;ul&gt;
	&lt;li&gt;Parametered&lt;/li&gt;
	&lt;li&gt;Parameter&lt;/li&gt;
	&lt;li&gt;ParameterUtils - prints settings to different output formats&lt;/li&gt;
	&lt;li&gt;AbstractParameter&lt;/li&gt;
	&lt;li&gt;CompositeParameter - a class of some sort that can contain more parameters.&lt;/li&gt;
	&lt;li&gt;PathParameter&lt;/li&gt;
	&lt;li&gt;DoubleParameter, IntegerParameter, StringParameter&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is what implementations can look like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HierarchialClusterDriver &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Tool, Parametered {

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void help() {
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Usage: ./hadoop mahout.job HierarchialClusterDriver [&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; root path]&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println();
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(ParameterUtils.help(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;));
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    HierarchialClusterDriver driver = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HierarchialClusterDriver();
    driver.configureParameters(HierarchialClusterDriver.class.getSimpleName() + &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; res = ToolRunner.run(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Configuration(), driver, args);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.exit(res);

  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;Parameter&amp;gt; parameters;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; defaultRootPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; trainingInstancesPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; trainingInstancePath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; treePath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; treeInstancesPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;&amp;gt; instanceDistancePruneThreadshold;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;DistanceMeasure&amp;gt; distanceMeasure;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; closestInstanceOutputPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; closestNodeOutputPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; nodesOutputFile;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; trainingInstanceVectorWritableClass;

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Parameter&amp;gt; getParameters() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; parameters;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configureParameters(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix) {
    parameters = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Parameter&amp;gt;(1);
    parameters.add(defaultRootPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt; + HierarchialClusterDriver.class.getSimpleName()), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;defaultRootPath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to where all files are located by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.&quot;&lt;/span&gt;));

    parameters.add(trainingInstancesPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(defaultRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstances&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstancesPath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to file containing instances to be added to the tree.&quot;&lt;/span&gt;));
    parameters.add(trainingInstancePath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(defaultRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstance&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstancePath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay file containing the instance to be inserted and currently compared against instances in the tree.&quot;&lt;/span&gt;));
    parameters.add(trainingInstanceVectorWritableClass = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringParameter(DenseVector.class.getName(), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstanceVectorWritableClass&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;VectorWritable class used to read and write trainingInstances and trainingInstance file.&quot;&lt;/span&gt;));

    parameters.add(distanceMeasure = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompositeParameter&amp;lt;DistanceMeasure&amp;gt;(DistanceMeasure.class, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; WeightedEuclideanDistanceMeasure(), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;distanceMeasure&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Distance measure used to calcualte distance between instances.&quot;&lt;/span&gt;));
    parameters.add(treePath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(defaultRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;tree&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;treePath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to directory containing persistent tree.&quot;&lt;/span&gt;));
    parameters.add(treeInstancesPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(treePath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;instances&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;treeInstancesPath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay file containing all instances currently in tree.&quot;&lt;/span&gt;));
    parameters.add(instanceDistancePruneThreadshold = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DoubleParameter(0.2d, prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;instanceDistancePruneThreadshold&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Instances will share the same leaf node &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the distance between them is no more than &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; value.&quot;&lt;/span&gt;));

    parameters.add(closestInstanceOutputPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(defaultRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;closest_instance&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;closestInstanceOutputPath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay results directoy containing closest instance in tree.&quot;&lt;/span&gt;));
    parameters.add(closestNodeOutputPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(defaultRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;closest_node&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;closestNodeOutputPath&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay results directoy containing closest node in tree..&quot;&lt;/span&gt;));

    parameters.add(nodesOutputFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(defaultRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;nodes_from_leaf_to_root&quot;&lt;/span&gt;), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;nodesOutputFile&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay file containing nodes between instance and root to be compared against training instance.&quot;&lt;/span&gt;));

    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Parameter parameter : parameters) {
      parameter.configureParameters(parameter.name() + &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that the driver has a Parameter&amp;lt;DistanceMeasure&amp;gt;.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class WeightedDistanceMeasure &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; AbstractDistanceMeasure {
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; List&amp;lt;Parameter&amp;gt; parameters;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; weightsFile;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; vectorWritableClass;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Vector weights;


  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configureParameters(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix) {
    parameters = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Parameter&amp;gt;(2);
    parameters.add(weightsFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringParameter(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;weightsFile&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path on DFS to a file containing the weights.&quot;&lt;/span&gt;));
    parameters.add(vectorWritableClass = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringParameter(DenseVector.class.getName(), prefix + &lt;span class=&quot;code-quote&quot;&gt;&quot;vectorWritableClass&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;VectorWritable class used to read file specified in parameter weightsFile.&quot;&lt;/span&gt;));
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Collection&amp;lt;Parameter&amp;gt; getParameters() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; parameters;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure(JobConf jobConf) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (parameters == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      configureParameters(WeightedDistanceMeasure.class.getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      FileSystem fs = FileSystem.get(jobConf);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (weightsFile.get() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        VectorWritable writable = (VectorWritable) &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName(vectorWritableClass.get()).newInstance();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;




&lt;p&gt;Here is the output from ParameterUtil.help(driver):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Usage: ./hadoop mahout.job HierarchialClusterDriver [root path]

HierarchialClusterDriver.defaultRootPath                        Path to where all files are located by default. (default value &apos;/HierarchialClusterDriver&apos;)
HierarchialClusterDriver.trainingInstancesPath                  Path to file containing instances to be added to the tree. (default value &apos;/HierarchialClusterDriver/trainingInstances&apos;)
HierarchialClusterDriver.trainingInstancePath                   Path to temporay file containing the instance to be inserted and currently compared against instances in the tree. (default value &apos;/HierarchialClusterDriver/trainingInstance&apos;)
HierarchialClusterDriver.trainingInstanceVectorWritableClass    VectorWritable class used to read and write trainingInstances and trainingInstance file. (default value &apos;org.apache.mahout.matrix.DenseVector&apos;)
HierarchialClusterDriver.distanceMeasure                        Distance measure used to calcualte distance between instances. (default value &apos;org.apache.mahout.utils.WeightedEuclideanDistanceMeasure&apos;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the next two lines are the composite parts of the parameter in previous line.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;HierarchialClusterDriver.distanceMeasure.weightsFile            Path on DFS to a file containing the weights.
HierarchialClusterDriver.distanceMeasure.vectorWritableClass    VectorWritable class used to read file specified in parameter weightsFile. (default value &apos;org.apache.mahout.matrix.DenseVector&apos;)
HierarchialClusterDriver.treePath                               Path to directory containing persistent tree. (default value &apos;/HierarchialClusterDriver/tree&apos;)
HierarchialClusterDriver.treeInstancesPath                      Path to temporay file containing all instances currently in tree. (default value &apos;/HierarchialClusterDriver/tree/instances&apos;)
HierarchialClusterDriver.instanceDistancePruneThreadshold       Instances will share the same leaf node if the distance between them is no more than this value. (default value &apos;0.2&apos;)
HierarchialClusterDriver.closestInstanceOutputPath              Path to temporay results directoy containing closest instance in tree. (default value &apos;/HierarchialClusterDriver/closest_instance&apos;)
HierarchialClusterDriver.closestNodeOutputPath                  Path to temporay results directoy containing closest node in tree.. (default value &apos;/HierarchialClusterDriver/closest_node&apos;)
HierarchialClusterDriver.nodesOutputFile                        Path to temporay file containing nodes between instance and root to be compared against training instance. (default value &apos;/HierarchialClusterDriver/nodes_from_leaf_to_root&apos;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;




&lt;p&gt;And this is the output from ParameterUtil.conf(driver):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;# Path to where all files are located by default.
HierarchialClusterDriver.defaultRootPath = /HierarchialClusterDriver

# Path to file containing instances to be added to the tree.
HierarchialClusterDriver.trainingInstancesPath = /HierarchialClusterDriver/trainingInstances

# Path to temporay file containing the instance to be inserted and currently compared against instances in the tree.
HierarchialClusterDriver.trainingInstancePath = /HierarchialClusterDriver/trainingInstance

# VectorWritable class used to read and write trainingInstances and trainingInstance file.
HierarchialClusterDriver.trainingInstanceVectorWritableClass = org.apache.mahout.matrix.DenseVector

# Distance measure used to calcualte distance between instances.
HierarchialClusterDriver.distanceMeasure = org.apache.mahout.utils.WeightedEuclideanDistanceMeasure

# Path on DFS to a file containing the weights.
HierarchialClusterDriver.distanceMeasure.weightsFile = 

# VectorWritable class used to read file specified in parameter weightsFile.
HierarchialClusterDriver.distanceMeasure.vectorWritableClass = org.apache.mahout.matrix.DenseVector

# Path to directory containing persistent tree.
HierarchialClusterDriver.treePath = /HierarchialClusterDriver/tree

# Path to temporay file containing all instances currently in tree.
HierarchialClusterDriver.treeInstancesPath = /HierarchialClusterDriver/tree/instances

# Instances will share the same leaf node if the distance between them is no more than this value.
HierarchialClusterDriver.instanceDistancePruneThreadshold = 0.2

# Path to temporay results directoy containing closest instance in tree.
HierarchialClusterDriver.closestInstanceOutputPath = /HierarchialClusterDriver/closest_instance

# Path to temporay results directoy containing closest node in tree..
HierarchialClusterDriver.closestNodeOutputPath = /HierarchialClusterDriver/closest_node

# Path to temporay file containing nodes between instance and root to be compared against training instance.
HierarchialClusterDriver.nodesOutputFile = /HierarchialClusterDriver/nodes_from_leaf_to_root
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12591458" author="karl.wettin" created="Tue, 22 Apr 2008 22:58:45 +0100"  >
&lt;p&gt;Patch contains a pattern to recursively configure composite JobConfigurable classes. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Parametered &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; JobConfigurable {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log log = LogFactory.getLog(Parametered.class);
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; Collection&amp;lt;Parameter&amp;gt; getParameters();
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void createParameters(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix, JobConf jobConf);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Simple non composite use:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class WeightedDistanceMeasure &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; AbstractDistanceMeasure {

  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; List&amp;lt;Parameter&amp;gt; parameters;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; weightsFile;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;gt; vectorWritableClass;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Vector weights;


   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void createParameters(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix, JobConf jobConf) {
    parameters = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Parameter&amp;gt;();
    parameters.add(weightsFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;weightsFile&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Path on DFS to a file containing the weights.&quot;&lt;/span&gt;));
    parameters.add(vectorWritableClass = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ClassParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;vectorWritableClass&quot;&lt;/span&gt;, jobConf, DenseVector.class, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;Vector&amp;gt; file specified in parameter weightsFile has been serialized with.&quot;&lt;/span&gt;));
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Collection&amp;lt;Parameter&amp;gt; getParameters() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; parameters;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure(JobConf jobConf) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (parameters == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      ParameteredGeneralizations.configureParameters(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, jobConf);
    }    
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;HierarchialClusterDriver contains a whole bunch of parameters of different sort. tree contains more parameters. See help output futher down.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;Parameter&amp;gt; parameters;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; dfsRootPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; trainingInstancesFile;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; trainingInstanceFile;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; appendingInstancesFile;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Tree&amp;gt; tree;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;&amp;gt; instanceDistancePruneThreadshold;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; closestInstanceOutputPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; closestNodeOutputPath;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;Path&amp;gt; nodesOutputFile;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Parameter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;gt; trainingInstanceVectorClass;


  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Parameter&amp;gt; getParameters() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; parameters;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void createParameters(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix, JobConf jobConf) {
    parameters = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Parameter&amp;gt;();
    parameters.add(dfsRootPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;dfsRootPath&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt; + HierarchialClusterDriver.class.getSimpleName()), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to where all files on DFS are located by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.&quot;&lt;/span&gt;));
    
    parameters.add(trainingInstancesFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstancesFile&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(dfsRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstances&quot;&lt;/span&gt;), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to file containing instances to be added to the tree.&quot;&lt;/span&gt;));
    parameters.add(trainingInstanceFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstanceFile&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(dfsRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstance&quot;&lt;/span&gt;), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay file containing the instance to be inserted and currently compared against instances in the tree.&quot;&lt;/span&gt;));
    parameters.add(trainingInstanceVectorClass = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ClassParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;trainingInstanceVectorClass&quot;&lt;/span&gt;, jobConf, DenseVector.class, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;Vector&amp;gt; used to read and write trainingInstances and trainingInstance file.&quot;&lt;/span&gt;));

    parameters.add(appendingInstancesFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;appendingInstancesFile&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(dfsRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;appendingInstances&quot;&lt;/span&gt;), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay file containing all the instances to be measured against when inserting a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; instance.&quot;&lt;/span&gt;));

    parameters.add(tree = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompositeParameter&amp;lt;Tree&amp;gt;(Tree.class, prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;tree&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PhmTree(), &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;Tree&amp;gt; used to store instances and their 2-dimensional relationships.&quot;&lt;/span&gt;));
    parameters.add(instanceDistancePruneThreadshold = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DoubleParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;instanceDistancePruneThreadshold&quot;&lt;/span&gt;, jobConf, 0.2d, &lt;span class=&quot;code-quote&quot;&gt;&quot;Instances will share the same leaf node &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the distance between them is no more than &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; value.&quot;&lt;/span&gt;));

    parameters.add(closestInstanceOutputPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;closestInstanceOutputPath&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(dfsRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;closest_instance&quot;&lt;/span&gt;), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay results directoy containing closest instance in tree.&quot;&lt;/span&gt;));
    parameters.add(closestNodeOutputPath = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;closestNodeOutputPath&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(dfsRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;closest_node&quot;&lt;/span&gt;), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay results directoy containing closest node in tree..&quot;&lt;/span&gt;));

    parameters.add(nodesOutputFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PathParameter(prefix, &lt;span class=&quot;code-quote&quot;&gt;&quot;nodesOutputFile&quot;&lt;/span&gt;, jobConf, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(dfsRootPath.get(), &lt;span class=&quot;code-quote&quot;&gt;&quot;nodes_from_leaf_to_root&quot;&lt;/span&gt;), &lt;span class=&quot;code-quote&quot;&gt;&quot;Path to temporay file containing nodes between instance and root to be compared against training instance.&quot;&lt;/span&gt;));

  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Configuration conf;

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure(JobConf jobConf) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (parameters == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      ParameteredGeneralizations.configureParameters(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, jobConf);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this is what the help output looks like (a little buggy)&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Usage: ./hadoop mahout.job HierarchialClusterDriver [default dfs root path]

dfsRootPath                             Path to where all files on DFS are located by default. (default value &apos;/HierarchialClusterDriver&apos;)
trainingInstancesFile                   Path to file containing instances to be added to the tree. (default value &apos;HierarchialClusterDriver/1208901248028/dfs/trainingInstances&apos;)
trainingInstanceFile                    Path to temporay file containing the instance to be inserted and currently compared against instances in the tree. (default value &apos;HierarchialClusterDriver/1208901248028/dfs/trainingInstance&apos;)
trainingInstanceVectorClass             Class&amp;lt;Vector&amp;gt; used to read and write trainingInstances and trainingInstance file. (default value &apos;org.apache.mahout.matrix.DenseVector&apos;)
appendingInstancesFile                  Path to temporay file containing all the instances to be measured against when inserting a new instance. (default value &apos;HierarchialClusterDriver/1208901248028/dfs/appendingInstances&apos;)
tree                                    Class&amp;lt;Tree&amp;gt; used to store instances and their 2-dimensional relationships. (default value &apos;org.apache.mahout.clustering.hierarchial.tree.phm.PhmTree&apos;)
tree.distanceMeasure                    Class&amp;lt;DistanceMeasure&amp;gt; used to measure distance between instances. (default value &apos;org.apache.mahout.utils.WeightedEuclideanDistanceMeasure&apos;)
tree.distanceMeasure.weightsFile        Path on DFS to a file containing the weights.
tree.distanceMeasure.vectorWritableClassClass&amp;lt;Vector&amp;gt; file specified in parameter weightsFile has been serialized with. (default value &apos;org.apache.mahout.matrix.DenseVector&apos;)
tree.lfsRootPath                        Path to storage root path on local file system. (default value &apos;PhmTree&apos;)
tree.sequenceManagerFile                Path to primary key sequence manager file on local file system. (default value &apos;/Users/kalle/projekt/apache/mahout/MAHOUT-19/HierarchialClusterDriver/1208901248028/lfs/tree/sequenceManagerFile&apos;)
tree.instanceVectorClass                Class&amp;lt;Vector&amp;gt; used to serialize instances. (default value &apos;org.apache.mahout.matrix.SparseVector&apos;)
tree.maximumInstances                   Maximum number of instances this tree can fit. (default value &apos;10000&apos;)
instanceDistancePruneThreadshold        Instances will share the same leaf node if the distance between them is no more than this value. (default value &apos;0.2&apos;)
closestInstanceOutputPath               Path to temporay results directoy containing closest instance in tree. (default value &apos;HierarchialClusterDriver/1208901248028/dfs/closest_instance&apos;)
closestNodeOutputPath                   Path to temporay results directoy containing closest node in tree.. (default value &apos;HierarchialClusterDriver/1208901248028/dfs/closest_node&apos;)
nodesOutputFile                         Path to temporay file containing nodes between instance and root to be compared against training instance. (default value &apos;HierarchialClusterDriver/1208901248028/dfs/nodes_from_leaf_to_root&apos;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It can read any of these values from main String[] args or the configuration file. A parameter is also accessible via getter and setter, either as object or using string values:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Parameter&amp;lt;T&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Parametered {
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; job configuration setting key prefix */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix();
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; configuration parameters name, e.g. org.apache.mahout.util.WeightedDistanceMeasure.weightsFile */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name();
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; human readable description of parameters */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; description();
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value class type */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;T&amp;gt; type();
  /** @param stringValue value string representation */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void setStringValue(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; stringValue);
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value string reprentation of current value */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getStringValue();
  /** @param value &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; parameters value */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void set(T value);
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; current parameters value */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; T get();
  /** @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value used &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not set by consumer */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; defaultValue();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12380729" name="MAHOUT-49.txt" size="51872" author="karl.wettin" created="Tue, 22 Apr 2008 22:58:45 +0100"/>
                            <attachment id="12380557" name="MAHOUT-49.txt" size="25571" author="karl.wettin" created="Sat, 19 Apr 2008 07:42:41 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 19 Apr 2008 01:36:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10017</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy7in:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23369</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>