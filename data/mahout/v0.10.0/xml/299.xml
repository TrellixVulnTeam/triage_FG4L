<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:15:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-299/MAHOUT-299.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-299] Collocations: improve performance by making Gram BinaryComparable</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-299</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Robin&apos;s profiling indicated that a large portion of a run was spent in readFields() in Gram due to the deserialization occuring as a part of Gram comparions for sorting. He pointed me to BinaryComparable and the implementation in Text.&lt;/p&gt;

&lt;p&gt;Like Text, in this new implementation, Gram stores its string in binary form. When encoding the string at construction time we allocate an extra character&apos;s worth of data to hold the Gram type information. When sorting Grams, the binary arrays are compared instead of deserializing and comparing fields.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12456747">MAHOUT-299</key>
            <summary>Collocations: improve performance by making Gram BinaryComparable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="drew.farris">Drew Farris</assignee>
                                    <reporter username="drew.farris">Drew Farris</reporter>
                        <labels>
                            <label>binary</label>
                            <label>collocations</label>
                            <label>comparison</label>
                    </labels>
                <created>Fri, 19 Feb 2010 04:11:41 +0000</created>
                <updated>Sat, 21 May 2011 04:23:53 +0100</updated>
                            <resolved>Sat, 20 Feb 2010 18:56:04 +0000</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.3</fixVersion>
                                    <component>Integration</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12835578" author="drew.farris" created="Fri, 19 Feb 2010 04:23:01 +0000"  >&lt;p&gt;Patch as described above:&lt;/p&gt;

&lt;p&gt;Included other cleanups:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Gram is no longer mutable, except in the case of readFields of course.&lt;/li&gt;
	&lt;li&gt;Added explicit NGRAM type, remove constructors that implicitly set type.&lt;/li&gt;
	&lt;li&gt;Added unit tests for constuctors, writability. One should be added for sortability/comparison.&lt;/li&gt;
	&lt;li&gt;Better unigram handling in the mappers/reducers (no need to setType on these anymore)&lt;/li&gt;
	&lt;li&gt;Switched to adjustOrPutValue when accumulating frequencies in OpenObjectIntHashMaps&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also, NGramCollector, NGramCollectorTest should be removed from the repo. They are no longer relevant. Applying this patch with -E will empty and erase these files, but it&apos;s up to svn to do the rest.&lt;/p&gt;
</comment>
                            <comment id="12836162" author="srowen" created="Sat, 20 Feb 2010 13:04:25 +0000"  >&lt;p&gt;Broadly it looks fine to me, especially as proven by your unit tests. You&apos;re welcome to commit with your new karma as far as I&apos;m concerned, or ping me to do so. Just want to get it in shortly as it&apos;s marked for 0.3&lt;/p&gt;

&lt;p&gt;Minor style questions:&lt;/p&gt;

&lt;p&gt;I don&apos;t like static imports but not sure if that is common practice or my own. (I always want to hunt for the symbol NGRAM in the class and of course it&apos;s not there... gets even weirder for methods). So up to you on that minor point. It would reduce the number of imports, actually, to not use it.&lt;/p&gt;

&lt;p&gt;I&apos;d not throw RuntimeException &amp;#8211; IllegalStateException is my favorite for a &quot;this can&apos;t happen&quot; situation. Error subclasses seem too harsh, as they mean the JVM is busted. While nobody&apos;s going to meaningfully handle such an exception, it seems to me good style to afford the possibility of differentiating between catching this and all other runtime exceptions.&lt;/p&gt;
</comment>
                            <comment id="12836207" author="drew.farris" created="Sat, 20 Feb 2010 17:07:13 +0000"  >&lt;p&gt;Thanks for the review Sean, I&apos;ll get it committed sometime today if I can steal some time to do so (sometime this weekend, worst case).&lt;/p&gt;

&lt;p&gt;Point taken about the static imports, I prefer the readability, but I probably rely on my IDE too much to track down references like that, so I&apos;ll remove them to conform with the overall style we&apos;re following.&lt;/p&gt;

&lt;p&gt;Same about RuntimeException, will revsie that as well. Once those changes are complete, I&apos;ll commit and close the issue &amp;#8211; all in all it will be a great way to test my Karma. &lt;/p&gt;</comment>
                            <comment id="12836224" author="drew.farris" created="Sat, 20 Feb 2010 18:23:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d not throw RuntimeException - IllegalStateException is my favorite for a &quot;this can&apos;t happen&quot; situation. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just wanted to check on this &amp;#8211; I think the pattern below is the right one to use to catch exceptions in ObjectIntProcedures (from OutputCollector) in a map or reduce phase-- this look good to everyone else? (Not sure how the discussion on the list re: this ended up)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    OpenObjectIntHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; ngrams = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenObjectIntHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;(...)

   &lt;span class=&quot;code-comment&quot;&gt;// popluate ngrams map here and then... 
&lt;/span&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      ngrams.forEachPair(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ObjectIntProcedure&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;() {
        @Override
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; apply(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; term, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; frequency) {
          &lt;span class=&quot;code-comment&quot;&gt;// obtain components, the leading (n-1)gram and the trailing unigram.
&lt;/span&gt;          &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = term.lastIndexOf(&apos; &apos;); &lt;span class=&quot;code-comment&quot;&gt;// TODO: fix &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; non-whitespace delimited languages.
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (i != -1) { &lt;span class=&quot;code-comment&quot;&gt;// bigram, trigram etc
&lt;/span&gt;            Gram ngram = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Gram(term, frequency, Gram.Type.NGRAM);
            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
              collector.collect(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Gram(term.substring(0, i), frequency, Gram.Type.HEAD), ngram);
              collector.collect(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Gram(term.substring(i + 1), frequency, Gram.Type.TAIL), ngram);
            } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(e);
            }
          }
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        }
      });
    }
    &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IllegalStateException ise) {
      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; an re-&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; original exceptions from the procedures.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ise.getCause() &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; IOException) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; (IOException) ise.getCause();
      }
      &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;code-comment&quot;&gt;// wasn&apos;t what was expected, so re-&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt;
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; ise;
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12836230" author="drew.farris" created="Sat, 20 Feb 2010 18:56:04 +0000"  >&lt;p&gt;resolved in r912189&lt;/p&gt;</comment>
                            <comment id="12836246" author="tdunning" created="Sat, 20 Feb 2010 19:59:34 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Just wanted to check on this - I think the pattern below is the right one to use to catch exceptions in ObjectIntProcedures (from OutputCollector) in a map or reduce phase-- this look good to everyone else? (Not sure how the discussion on the list re: this ended up)&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;code that nests in a ISE, then rethrows the cause
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.  That looks about right.&lt;/p&gt;

&lt;p&gt;(visions of small proteins being helped across a blood brain barrier)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12436283" name="MAHOUT-299.patch" size="36882" author="drew.farris" created="Fri, 19 Feb 2010 04:23:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Feb 2010 13:04:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9766</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5z3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23119</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>