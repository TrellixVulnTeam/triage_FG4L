<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:22:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-319/MAHOUT-319.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-319] SVD solvers should be gracefully stoppable/restartable</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-319</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;LanczosSolver, DistributedLanczosSolver, and HebbianSolver all keep copious amounts of memory-resident data which is lost if the app crashes or is killed (OOM, forgetting to run in a screen session, and losing net connectivity to the server running it, etc...).  &lt;/p&gt;

&lt;p&gt;These algorithms (and many other Mahout processes!) should enable a pluggable &quot;persist state&quot; mechanism (to HDFS, RDBMS, local disk, key-value store, etc), and similarly, a way to pick up and start from such a state.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12457752">MAHOUT-319</key>
            <summary>SVD solvers should be gracefully stoppable/restartable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jake.mannix">Jake Mannix</assignee>
                                    <reporter username="jake.mannix">Jake Mannix</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Mar 2010 16:20:07 +0000</created>
                <updated>Sat, 21 May 2011 04:18:55 +0100</updated>
                            <resolved>Fri, 6 May 2011 05:24:42 +0100</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.5</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12914002" author="srowen" created="Thu, 23 Sep 2010 13:22:49 +0100"  >&lt;p&gt;Guessing that since it&apos;s an improvement and no activity in 6 months we can mark it for 0.5&lt;/p&gt;</comment>
                            <comment id="12914069" author="kanjilal" created="Thu, 23 Sep 2010 16:55:42 +0100"  >&lt;p&gt;I would like to help out on this task by building  a notion of persisting of the state generically to fix this and build implementations of an RDBMS, local disk or HDFS underneath.   Let me know if thats ok with you guys.  Out of curiosity when is 0.5 planned to be released?&lt;/p&gt;</comment>
                            <comment id="12914134" author="tdunning" created="Thu, 23 Sep 2010 19:04:01 +0100"  >&lt;p&gt;Saikat, &lt;/p&gt;

&lt;p&gt;That sounds like an excellent thing to do.  My guess is that you don&apos;t need a huge machinery and will be able to implement the local disk and HDFS versions with the same code.  The RDBMS is probably not of interest because this is for checkpointing a running algorithm so that it can be restarted later.  If you want to analyze something, you probably don&apos;t want the vectors in the RDBMS anyway because dot products are so painful there.&lt;/p&gt;

&lt;p&gt;We have a 3-9 month release cycle, but any patch that you produce would be available pretty much right away in the trunk version of Mahout.  At this point, trunk is typically much more useful than an older release because so many new and exciting things are going into Mahout on a daily basis.  Once things are more stable and the changes become more incremental, I would expect stable releases to become more prominent.&lt;/p&gt;</comment>
                            <comment id="12914142" author="kanjilal" created="Thu, 23 Sep 2010 19:25:48 +0100"  >&lt;p&gt;As you guys would say +1 , I&apos;ll get started on this task., thanks Ted.&lt;/p&gt;</comment>
                            <comment id="12927734" author="kanjilal" created="Wed, 3 Nov 2010 04:56:42 +0000"  >&lt;p&gt;Hi All,&lt;br/&gt;
Am finally getting some time to devote to working on this task, I&apos;ve started the implementation for this and have created a generic snapshotting mechanism, as part of this I am planning to make the design configurable where the user specifies two parameters to be used each time the matrix computations are run, these parameters are the storage mechanism (disk or hadoop) and the time interval on which to perform snapshotting (i.e. every 5 minutes or some similar time period).  Are there other configurable parameters that may be useful?  Also I am planning to introduce a properties file to store these parms and read them using a ResourceBundle, is there a generic properties file to use for things like this?  Looking forward for discussion on this.&lt;/p&gt;</comment>
                            <comment id="13014985" author="srowen" created="Sat, 2 Apr 2011 11:16:29 +0100"  >&lt;p&gt;It&apos;s looking like this one has timed out, but, am just moving it to &quot;unscheduled&quot; for now.&lt;/p&gt;</comment>
                            <comment id="13016488" author="jake.mannix" created="Wed, 6 Apr 2011 20:09:12 +0100"  >&lt;p&gt;Saikat, I think you&apos;ll need to look at each of the solvers, and essentially snapshot on a &quot;per pass over the data&quot; kind of way, not per 5min.  I don&apos;t think you need a ResourceBundle, just have it read in via the usual command line args / properties file which already exists (see the MahoutDriver class and associated properties files).&lt;/p&gt;</comment>
                            <comment id="13018467" author="jake.mannix" created="Mon, 11 Apr 2011 19:00:45 +0100"  >&lt;p&gt;Ok, so I&apos;ve actually got a patch which should make this a lot more doable (at least for Lanczos/DistributedLanczos), by refactoring the solver to take a LanczosState object which encapsulates the running state (the current basis vectors, their projections and norms) so that on each iteration, a call to state.setIterationNumber&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; could have a side-effect of persisting to disk/hdfs.  Additionally, by hiding the state inside of this object, it can transparently &lt;b&gt;not&lt;/b&gt; keep everything in memory, which could reduce the overall memory usage of the solver by a huge margin (at a cost of having to go to disk for some final non-M/R parts the algorithm).  Tests running now, uploading patch and then doing some cleanup later.&lt;/p&gt;</comment>
                            <comment id="13018487" author="jake.mannix" created="Mon, 11 Apr 2011 19:27:57 +0100"  >&lt;p&gt;Patch modifies the LanczosSolver.solve() api in non-backwards-compatible way.  Tests pass.&lt;/p&gt;</comment>
                            <comment id="13018489" author="jake.mannix" created="Mon, 11 Apr 2011 19:30:38 +0100"  >&lt;p&gt;I&apos;ll leave this patch up for a bit before continuing, but actually fixing this bug (at least for Lanczos) should be an easy step away from this current patch, and I might be able to get to that part quickly as well.&lt;/p&gt;</comment>
                            <comment id="13018494" author="kanjilal" created="Mon, 11 Apr 2011 19:39:13 +0100"  >&lt;p&gt;Jake,&lt;br/&gt;
On your last comment are you saying you&apos;ll work on the snapshotting mechanism for Lanczos, I was going to start work on the DistributedLanczos and want to make sure we&apos;re not duplicating any efforts.&lt;/p&gt;

&lt;p&gt;Regards&lt;/p&gt;</comment>
                            <comment id="13018508" author="jake.mannix" created="Mon, 11 Apr 2011 19:57:28 +0100"  >&lt;p&gt;Saikat,&lt;/p&gt;

&lt;p&gt;  Once this patch is applied, it will make the code for snapshotting both Lanczos and DistributedLanczos the same: the new class &quot;LanczosState&quot; will handle persisting itself, and we can subclass or componentize that class in a variety of ways: a abstract base subclass like PersistentLanczosState which has a serializer/deserializer object injected into it, and then we can write a variety of serializer/deserializers: HDFS/local disk/DB, etc.&lt;/p&gt;

&lt;p&gt;  Apply this patch directly to your checkout if you want to see how it works in the meantime until this hits trunk.&lt;/p&gt;</comment>
                            <comment id="13018994" author="jake.mannix" created="Tue, 12 Apr 2011 20:09:43 +0100"  >&lt;p&gt;This one is totally doable (for Lanczos/DistributedLanczos) now, let&apos;s try and get this in for 0.5&lt;/p&gt;</comment>
                            <comment id="13021628" author="jake.mannix" created="Tue, 19 Apr 2011 16:41:10 +0100"  >&lt;p&gt;Updated patch, which adds HDFS persistence to the LanczosState, with unit/integration test.&lt;/p&gt;

&lt;p&gt;Integrated API changes with EigencutsDriver and SpectralKMeansDriver (but not the HDFS persistence piece).&lt;/p&gt;

&lt;p&gt;Still need to integrate HDFS persistence with the DistributedLanczosDriver before this bug is finished off.&lt;/p&gt;</comment>
                            <comment id="13021632" author="kanjilal" created="Tue, 19 Apr 2011 16:51:30 +0100"  >&lt;p&gt;Jake,&lt;br/&gt;
I was wondering if you still need my help for this, this is on my list to do this week, I&apos;ve been busy with other things.  I can start on the writing to disk persistence.  let me know how I can help without conflicting or duplicating your efforts.&lt;/p&gt;</comment>
                            <comment id="13021641" author="jake.mannix" created="Tue, 19 Apr 2011 17:21:05 +0100"  >&lt;p&gt;Hi Saikat,&lt;/p&gt;

&lt;p&gt;  Modifying the code in this patch to specifically use a LocalFileSystem instance would be helpful, most likely, yes.&lt;/p&gt;

&lt;p&gt;  Something which would be very helpful would be to improve the efficiency of the HDFS persistence, actually.  My current design is super-dumb: after each Lanczos iteration, persist the new vector directly to HDFS (which is fine), but then when iterating through the basis vector (to construct the final singular vectors) just read read them raw back from HDFS again.  Probably a better approach could be devised, which temporarily stores them locally.  &lt;/p&gt;

&lt;p&gt;  Can you try out this patch, and see how it looks, and whether you have any ideas to improve the RAM/time tradeoff and local/remote fs tradeoff?&lt;/p&gt;

&lt;p&gt;  I will probably end up committing this to trunk soon enough (this week), and if you have ideas to improve it from there, it would be great.&lt;/p&gt;</comment>
                            <comment id="13021648" author="kanjilal" created="Tue, 19 Apr 2011 17:37:27 +0100"  >&lt;p&gt;I&apos;ll start digging into both of these things tonight and will try out the patch as the first step.  Will keep you updated&lt;/p&gt;</comment>
                            <comment id="13021991" author="kanjilal" created="Wed, 20 Apr 2011 07:36:40 +0100"  >&lt;p&gt;Hi Jake,&lt;br/&gt;
I applied the patch and am looking at the solve method inside the LanczosSolver.java, is this the only place where the HDFS persistence code is living, also this method is really large, it may be a good idea to break it up for readability.&lt;/p&gt;

&lt;p&gt;Let me know more details.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13028724" author="srowen" created="Wed, 4 May 2011 13:16:41 +0100"  >&lt;p&gt;It sounds like this is still in progress &amp;#8211; may we move to 0.6? I didn&apos;t push it myself since there has at least been some noise in the last 2 weeks, and some patch up.&lt;/p&gt;</comment>
                            <comment id="13029723" author="jake.mannix" created="Fri, 6 May 2011 05:05:39 +0100"  >&lt;p&gt;Committing this, all tests finally are working, functionality is in.&lt;/p&gt;</comment>
                            <comment id="13029731" author="jake.mannix" created="Fri, 6 May 2011 05:24:42 +0100"  >&lt;p&gt;Committed revision 1100042.&lt;/p&gt;</comment>
                            <comment id="13029792" author="hudson" created="Fri, 6 May 2011 07:57:14 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #800 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/Mahout-Quality/800/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/Mahout-Quality/800/&lt;/a&gt;)&lt;br/&gt;
    Fixes &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-319&quot; title=&quot;SVD solvers should be gracefully stoppable/restartable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-319&quot;&gt;&lt;del&gt;MAHOUT-319&lt;/del&gt;&lt;/a&gt;, by the following means:&lt;/p&gt;

&lt;p&gt;  LanczosSolver now takes a LanczosState object as part of its solve() method, and operates on this&lt;br/&gt;
state as it iterates.  One of the possible side-effects of completing an iteration is that it persists&lt;br/&gt;
state to disk (or HDFS, etc).  When the solver is started up, and passed the path to the intermediate&lt;br/&gt;
state and there is already state persisted there, it picks up where it left off.&lt;/p&gt;

&lt;p&gt;  This additionally improves scalability for the solver, by not requring more than 3 singular vectors&lt;br/&gt;
to be held in memory at any one time, instead of 2*desiredRank dense vectors of this size.&lt;/p&gt;

&lt;p&gt;  This API change to LanczosSolver is non-backwards compatible, but hopefully moving to a single &lt;br/&gt;
packaged state object will make it less likely that this kind of change will be needed much in the&lt;br/&gt;
future on this class.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12478365" name="MAHOUT-319.diff" size="72563" author="jake.mannix" created="Fri, 6 May 2011 05:05:39 +0100"/>
                            <attachment id="12476742" name="MAHOUT-319.diff" size="51131" author="jake.mannix" created="Tue, 19 Apr 2011 16:41:10 +0100"/>
                            <attachment id="12476029" name="MAHOUT-319.patch" size="27227" author="jake.mannix" created="Mon, 11 Apr 2011 19:27:57 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Sep 2010 12:22:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9746</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5un:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23099</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>