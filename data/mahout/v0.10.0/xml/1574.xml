<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:18:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1574/MAHOUT-1574.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1574] SparseRowMatrix needs performance improvement for times()</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1574</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;According to ssc,&lt;/p&gt;

&lt;p&gt;&amp;gt; * SparseRowMatrix with sequential vectors times SparseRowMatrix with&lt;br/&gt;
&amp;gt; sequential vectors is totally broken, it uses three nested loops and uses&lt;br/&gt;
&amp;gt; get(row, col) on the matrices, which internally uses binary search...&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12718991">MAHOUT-1574</key>
            <summary>SparseRowMatrix needs performance improvement for times()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tdunning">Ted Dunning</assignee>
                                    <reporter username="tdunning">Ted Dunning</reporter>
                        <labels>
                    </labels>
                <created>Sat, 7 Jun 2014 03:18:09 +0100</created>
                <updated>Mon, 13 Apr 2015 11:20:31 +0100</updated>
                            <resolved>Sat, 7 Jun 2014 06:09:32 +0100</resolved>
                                                    <fixVersion>0.10.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14020664" author="tdunning" created="Sat, 7 Jun 2014 03:39:59 +0100"  >&lt;p&gt;Committed fixes and tests.&lt;/p&gt;</comment>
                            <comment id="14020670" author="hudson" created="Sat, 7 Jun 2014 04:17:21 +0100"  >&lt;p&gt;FAILURE: Integrated in Mahout-Quality #2637 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2637/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2637/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1574&quot; title=&quot;SparseRowMatrix needs performance improvement for times()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1574&quot;&gt;&lt;del&gt;MAHOUT-1574&lt;/del&gt;&lt;/a&gt; - Add sparse handling to rows and columns of DiagonalMatrix (tdunning: rev dd78ed9479559cd222f24fa0be57655cf2e3075b)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/DiagonalMatrix.java&lt;/li&gt;
	&lt;li&gt;math/src/test/java/org/apache/mahout/math/DiagonalMatrixTest.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1574&quot; title=&quot;SparseRowMatrix needs performance improvement for times()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1574&quot;&gt;&lt;del&gt;MAHOUT-1574&lt;/del&gt;&lt;/a&gt; - Make SparseRowMatrix handle multiplication efficiently for special cases of SRM, DenseMatrix and other kinds of sparse matrices.  Speedup on the given test is at least several thousand x (tdunning: rev 0f4f5dec7f3a7de7161d1fabf3e02418099f4446)&lt;/li&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/SparseRowMatrix.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1574&quot; title=&quot;SparseRowMatrix needs performance improvement for times()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1574&quot;&gt;&lt;del&gt;MAHOUT-1574&lt;/del&gt;&lt;/a&gt; - Add tests to demonstrate correctness and efficiency (tdunning: rev 5083f58359dd103ac6d8e72a50c53bb20a5df14e)&lt;/li&gt;
	&lt;li&gt;math/src/test/java/org/apache/mahout/math/TestSparseRowMatrix.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14020692" author="dlyubimov" created="Sat, 7 Jun 2014 05:47:56 +0100"  >&lt;p&gt;I suggest to reopen: &lt;/p&gt;

&lt;p&gt;(1) first, an added test is failing in jenkins build. Not sure whether legitimately or not.&lt;br/&gt;
(2) &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (other &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; SparseRowMatrix) {
     .... 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;is a good first step but still a bit naive. Not sure it solves Sebastian&apos;s case. While SRM %&amp;#42;% SRM is definitely one of the cases, there&apos;s also a handful of other cases (e.g. SRM %&amp;#42;% SCM.t which is organizationally equivalent).&lt;/p&gt;

&lt;p&gt;What i meant previously by absence of cost based approach for in-core matrices was more along the lines what Robin did the vector optimizations. Instead of asking &quot;Are you imiplementation A&quot; vector operations carry a cost-interrogating abstraction asking questions like &quot;what is my cost traversing non-zeros? what is my cost for random access?&quot; &lt;/p&gt;

&lt;p&gt;Also in current vector optimizations, this process is not a property (method) of LHS, but rather interrogates both LHS and RHS. Similarly i guess matrices could be interrogated along the lines &quot;what is cost of row wise non-zero traverse&quot;, &quot;what is the cost column-wise traverse&quot;, &quot;what traversal plan bears best element locality&quot; etc. etc.&lt;/p&gt;</comment>
                            <comment id="14020699" author="tdunning" created="Sat, 7 Jun 2014 06:09:04 +0100"  >&lt;p&gt;Oops.  Regressed with new code in terms of matrix size checking.&lt;/p&gt;</comment>
                            <comment id="14020700" author="tdunning" created="Sat, 7 Jun 2014 06:09:32 +0100"  >&lt;p&gt;Committed trivial fix.&lt;/p&gt;</comment>
                            <comment id="14020702" author="tdunning" created="Sat, 7 Jun 2014 06:15:48 +0100"  >&lt;blockquote&gt;
&lt;p&gt;(1) first, an added test is failing in jenkins build. Not sure whether legitimately or not.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It was a legitimate beef and a small triumph for the abstract tests.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(2)&lt;br/&gt;
     if (other instanceof SparseRowMatrix) {&lt;br/&gt;
     .... &lt;br/&gt;
is a good first step but still a bit naive. Not sure it solves Sebastian&apos;s case. While SRM %&lt;b&gt;% SRM is definitely one of the cases, there&apos;s also a handful of other cases (e.g. SRM %&lt;/b&gt;% SCM.t which is organizationally equivalent).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Read the rest of the code.  There is handling for SRM %*% general sparse matrix in there.  It is just with SRM, there is special handling to be had.  If the transpose happens to expose sparse rows then this fix will cause substantial speedups whenever an SRM is on the left.&lt;/p&gt;

&lt;p&gt;It is true that this isn&apos;t a complete cost based solution, but it is a good step forward for an important case.  In fact, the general optimization of matrix products is quite difficult.&lt;/p&gt;

&lt;p&gt;It might be worth a followup bug that handles important certain matrix x vector cases.  &lt;/p&gt;

&lt;p&gt;Dealing well with these will require that we let matrices expose considerably more information about memory locality than we already do.&lt;/p&gt;</comment>
                            <comment id="14020709" author="dlyubimov" created="Sat, 7 Jun 2014 06:28:01 +0100"  >&lt;p&gt;of course i read it. Which is why i said it is a good first step rather than something else. Still it misses cases of transpose views and symmetry cases of SCM and SRM (for once, at the very least with this approach we need something symmetrical in the SparseColumnMatrix). &lt;/p&gt;

&lt;p&gt;As for complexity, well, we don&apos;t have to nail all complexity, i&apos;d be happy if we just nail SRM and SCM and SM and view transpose. I think it would capture most of what is Sebastian has been referring to. Traversal locality probably will help a lot, too, in some cases, because it would reduce need for number of generated view POJOs.&lt;/p&gt;</comment>
                            <comment id="14020710" author="hudson" created="Sat, 7 Jun 2014 06:29:33 +0100"  >&lt;p&gt;FAILURE: Integrated in Mahout-Quality #2638 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2638/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2638/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1574&quot; title=&quot;SparseRowMatrix needs performance improvement for times()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1574&quot;&gt;&lt;del&gt;MAHOUT-1574&lt;/del&gt;&lt;/a&gt; - Fixed regression in argument checking. (tdunning: rev 63b765abb305cca6d726f54549a92018754a6348)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/SparseRowMatrix.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 7 Jun 2014 03:17:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>397190</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzq8kf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>397313</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>