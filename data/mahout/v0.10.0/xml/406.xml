<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:23:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-406/MAHOUT-406.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-406] Inconsistent return values of different ItemSimilarity implementations</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-406</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity returns Double.NaN if you request the similarity for two itemIDs it doesn&apos;t know, while  org.apache.mahout.cf.taste.impl.similarity.jdbc.AbstractJDBCItemSimilarity throws a NoSuchItemException.&lt;/p&gt;

&lt;p&gt;They should act consistently (and both return Double.NaN, I guess).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12465782">MAHOUT-406</key>
            <summary>Inconsistent return values of different ItemSimilarity implementations</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="ssc">Sebastian Schelter</reporter>
                        <labels>
                    </labels>
                <created>Mon, 31 May 2010 13:03:57 +0100</created>
                <updated>Sun, 31 Oct 2010 15:49:33 +0000</updated>
                            <resolved>Mon, 31 May 2010 14:49:02 +0100</resolved>
                                                    <fixVersion>0.4</fixVersion>
                                    <component>Collaborative Filtering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12873643" author="srowen" created="Mon, 31 May 2010 14:24:05 +0100"  >&lt;p&gt;NoSuchItemException is the right behavior.&lt;/p&gt;

&lt;p&gt;The problem is this class doesn&apos;t know which items actually exist. Just because it has no similarities for an item doesn&apos;t mean it doesn&apos;t exist.&lt;/p&gt;

&lt;p&gt;It could add a check purely to implement this behavior but I think that&apos;s overkill.&lt;/p&gt;

&lt;p&gt;instead I think this is best solved with documentation. These methods should document that they return NaN for unknown similarities, and one reason they might be unknown is because an item doesn&apos;t exist.&lt;/p&gt;</comment>
                            <comment id="12873655" author="ssc" created="Mon, 31 May 2010 14:48:46 +0100"  >&lt;p&gt;I think it&apos;s absolutely ok that these classes don&apos;t know which items exist and that they would return NaN for non-existing items too. In my application code I already wrote a wrapper around the jdbc-backed ItemSimilarity that catches NoSuchItemExceptions and returns NaN then.&lt;/p&gt;

&lt;p&gt;The important thing is IMHO that all implementations act consistently because one might experience strange behavior otherwise. I ran into that issue cause I wrote a unit test for a component that normally uses a jdbc-backed ItemSimilarity. In the test I changed the implementation in use to GenericItemSimilarity and expected to catch a NoSuchItemException for unknown items, which wasn&apos;t thrown and made my tests fail. &lt;/p&gt;</comment>
                            <comment id="12873659" author="srowen" created="Mon, 31 May 2010 14:53:27 +0100"  >&lt;p&gt;Yeah I looked into this and I think all other implementations ultimately manage to throw an exception. This one is a special case since it actually has no knowledge of the underlying data.&lt;/p&gt;

&lt;p&gt;I update the docs to be more correct: an exception is thrown if the user or item is known to not exist, and returns NaN if the similarity is otherwise unknown. These are both valid outcomes and yes you should be prepared to deal with either.&lt;/p&gt;

&lt;p&gt;The only twist is that just because the method doesn&apos;t throw an exception doesn&apos;t mean the item/user definitely exists. &lt;/p&gt;</comment>
                            <comment id="12873668" author="ssc" created="Mon, 31 May 2010 15:17:20 +0100"  >&lt;p&gt;I&apos;m confused now, sorry. GenericItemSimilarity and AbstractJDBCItemSimilarity both manage a list of precomputed similarities and both don&apos;t have access to a DataModel, so they cannot know which items actually exist. So why should one throw a NoSuchItemException and the other return NaN? Other similarity implementations that compute the similarities from a DataModel can throw NoSuchItemExceptions as they know all the preference data, but not these. Did I get something wrong here?&lt;/p&gt;</comment>
                            <comment id="12873670" author="hudson" created="Mon, 31 May 2010 15:21:06 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #39 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/39/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/39/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-406&quot; title=&quot;Inconsistent return values of different ItemSimilarity implementations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-406&quot;&gt;&lt;del&gt;MAHOUT-406&lt;/del&gt;&lt;/a&gt; clarify documentation&lt;/p&gt;</comment>
                            <comment id="12873677" author="srowen" created="Mon, 31 May 2010 15:35:17 +0100"  >&lt;p&gt;You are right. Really for consistency the JDBC-backed one needs to return NaN. How about that? because the same logic applies &amp;#8211; just because it&apos;s not in the similarity table doesn&apos;t mean it doesn&apos;t exist in the  model.&lt;/p&gt;</comment>
                            <comment id="12873686" author="hudson" created="Mon, 31 May 2010 16:19:40 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #40 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/40/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Mahout-Quality/40/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-406&quot; title=&quot;Inconsistent return values of different ItemSimilarity implementations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-406&quot;&gt;&lt;del&gt;MAHOUT-406&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 May 2010 13:24:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9658</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5bb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23012</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>