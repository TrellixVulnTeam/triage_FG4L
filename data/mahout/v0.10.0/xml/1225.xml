<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:20:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1225/MAHOUT-1225.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1225] Sets and maps incorrectly clear() their state arrays (potential endless loops)</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1225</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;The code I attached hangs on forever, Eclipse does not print me its stack trace because it does not terminate the program. So I decided to make a small test.java file that you can easily run.&lt;/p&gt;

&lt;p&gt;This code has the main function that simply runs getItemList() method which successfully executes getDataset() method (here please download mushroom.dat dataset and set the full path into filePath string variable) and the hangs on (the problem happens on a fourth columnValues.add() call). After the dataset was taken into X array, the code simply goes through X column by column and searches for different items in it.&lt;/p&gt;

&lt;p&gt;If you uncomment IntSet columnValues = new IntOpenHashSet(); and corresponding import headers then everything will work just fine (you will also need to include hppc jar file found here &lt;a href=&quot;http://labs.carrotsearch.com/hppc.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://labs.carrotsearch.com/hppc.html&lt;/a&gt; or below in the attachment).&lt;/p&gt;</description>
                <environment>&lt;p&gt;Eclipse, linux Fedora 17, Java 1.7, Mahout Maths collections (Set) 0.7, hppc 0.4.3&lt;/p&gt;</environment>
        <key id="12648680">MAHOUT-1225</key>
            <summary>Sets and maps incorrectly clear() their state arrays (potential endless loops)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dweiss">Dawid Weiss</assignee>
                                    <reporter username="sophiesperner">Sophie Sperner</reporter>
                        <labels>
                            <label>hashset</label>
                            <label>java</label>
                            <label>mahout</label>
                            <label>test</label>
                    </labels>
                <created>Tue, 21 May 2013 18:46:52 +0100</created>
                <updated>Mon, 3 Jun 2013 14:21:09 +0100</updated>
                            <resolved>Sat, 1 Jun 2013 22:28:59 +0100</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.7</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                    <timeoriginalestimate seconds="172800">48h</timeoriginalestimate>
                            <timeestimate seconds="172800">48h</timeestimate>
                                        <comments>
                            <comment id="13663176" author="sophiesperner" created="Tue, 21 May 2013 18:48:28 +0100"  >&lt;p&gt;test.java - runnable selfcontained code&lt;br/&gt;
mushroom.dat - dataset&lt;br/&gt;
hppc-0.4.3.jar - external lib&lt;/p&gt;</comment>
                            <comment id="13663384" author="dweiss" created="Tue, 21 May 2013 21:44:53 +0100"  >&lt;p&gt;This is a legitimate bug in clear():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clear() {
    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.state, 0, state.length - 1, FREE);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &quot;to&quot; argument is wrong, it is an exclusive range so it should be state.length. Since the last element of the state array is not cleared it is subsequently filled entirely and indexOfKey hangs on the lookup loop (because all slots are &quot;taken&quot;).&lt;/p&gt;

&lt;p&gt;Simpler problem reproduction code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 AbstractIntSet s = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenIntHashSet();
            s.clear();
            s.add(23);
            s.add(46);
            s.clear();
            s.add(70);
            s.add(93);
            s.contains(100);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13663390" author="sophiesperner" created="Tue, 21 May 2013 21:53:12 +0100"  >&lt;p&gt;Thank you Dawid for your easier example. That&apos;s the reason I&apos;m using your library in this case &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Let&apos;s see how mahout will work for big data (currently setting up amazon machine). All the supercool programmers say so many good words about mahout which has so obvious bug in hashset. What a crap &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13663401" author="dweiss" created="Tue, 21 May 2013 22:07:06 +0100"  >&lt;p&gt;I wouldn&apos;t be impolite to people who are trying to help you, Sophie. Software bugs are omnipresent and are not necessarily a result of one&apos;s negligence &amp;#8211; very often it&apos;s a process of multiple rewrites by many people. In this particular case collections have been ported over from Colt and multiple changes layered.&lt;/p&gt;

&lt;p&gt;Judging from the test code you submitted on this issue I am pretty confident that the choice of collections library is secondary &amp;#8211; your problem is in algorithmic solutions to whatever it is you&apos;re trying to achieve.&lt;/p&gt;</comment>
                            <comment id="13663844" author="dweiss" created="Wed, 22 May 2013 07:27:41 +0100"  >&lt;p&gt;I looked quickly at the templates and this pattern is in a few places, actually. It&apos;s a trivial patch but I&apos;d say a unit test doing some random blasting of intermixed operations against another implementation (be it Java collections, HPPC, fastutil or whatever else) would be very sensible.&lt;/p&gt;

&lt;p&gt;If nobody picks it up in the next few hours, I will.&lt;/p&gt;</comment>
                            <comment id="13664613" author="tmarthal" created="Wed, 22 May 2013 23:22:01 +0100"  >&lt;p&gt;I looked at it. In the OpenIntHashSet.indexOfKey(int) method, the while loop never completes because the i variable is being decremented as well as incremented (line 226).&lt;/p&gt;

&lt;p&gt;The fix is to move the&lt;br/&gt;
      if (i &amp;lt; 0) &lt;/p&gt;
{
        i += length;
      }
&lt;p&gt;code out of the loop.&lt;/p&gt;</comment>
                            <comment id="13664918" author="dweiss" created="Thu, 23 May 2013 07:24:22 +0100"  >&lt;p&gt;No, this is not the right fix, Tom. That loop is correct as open addressing allows a &quot;wrap around&quot; in the array and this &quot;if&quot; clause does exactly that. The problem is the invariant of indexOf (and other methods in open addressing) is that there is at least one empty slot, which is not the case due to the bug I mentioned.&lt;/p&gt;</comment>
                            <comment id="13664970" author="dweiss" created="Thu, 23 May 2013 09:08:32 +0100"  >&lt;p&gt;Initial patch that shows how much needs to be done in terms of fixing stuff &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I fixed the problem with clear() on the template for OpenIntHashSet but there are several other classes that show non-uniform behavior against Java Util Collections (and they&apos;re very likely bugs).&lt;/p&gt;

&lt;p&gt;I&apos;ll try to fix these during the day today, time permitting. Stay tuned.&lt;/p&gt;</comment>
                            <comment id="13665105" author="dweiss" created="Thu, 23 May 2013 13:24:42 +0100"  >&lt;p&gt;Final patch.&lt;/p&gt;</comment>
                            <comment id="13665109" author="dweiss" created="Thu, 23 May 2013 13:25:44 +0100"  >&lt;p&gt;There are a bunch of issues, actually. In no particular order randomized testing against JUC allowed me to spot the following:&lt;/p&gt;

&lt;p&gt;1. Inconsistent clearing of buffers.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.state, 0, state.length - 1, FREE);
+    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.state, FREE); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;this eventually leads to endless loops because invariants are no longer respected. &lt;/p&gt;

&lt;p&gt;2. Unreleased references.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.state, 0, state.length - 1, FREE);
+    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.state, FREE);
+    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.table, FREE); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some of the generic collections do not clear buffers properly, never allowing the objects stored inside those buffers to be GCed (unless the following trimToSize() does it, but I don&apos;t think it always does).&lt;/p&gt;

&lt;p&gt;3. Inconsistent reference/equals comparisons.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (stat[i] != FREE &amp;amp;&amp;amp; (stat[i] == REMOVED || tab[i] != key)) {
+      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (stat[i] != FREE &amp;amp;&amp;amp; (stat[i] == REMOVED || !key.equals(tab[i]))) { 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that the current code always assumes non-null keys which is not mentioned anywhere. I assumed non-null keys.&lt;/p&gt;

&lt;p&gt;4. Inconsistent return value from add.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; newCapacity = chooseGrowCapacity(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.distinct + 1, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.minLoadFactor, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.maxLoadFactor);
       rehash(newCapacity);
-      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; add(key);
+      &lt;span class=&quot;code-comment&quot;&gt;// we&apos;ve already added the element so we don&apos;t need to add it again.
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is odd, don&apos;t even know why this block is there. But the result is inconsistent because the rehashing takes place after the key has been added so a subsequent add() returns an invalid value.&lt;/p&gt;

&lt;p&gt;I did &lt;b&gt;not&lt;/b&gt; go through the code thoroughly, this is a result of a quick test against JUC. I bet there are other issues in there that may be lurking in the (untested) shadows. While I appreciate the effort put into this code I still think it&apos;d be wiser for Mahout to move on to fastutil, trove or something similar that has a better test coverage.&lt;/p&gt;

&lt;p&gt;I&apos;ve tried to commit this in but my commit rights have been revoked apparently (perhaps this happens when you&apos;re on an emeritus status &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13665174" author="jake.mannix" created="Thu, 23 May 2013 14:38:18 +0100"  >&lt;p&gt;Wait, was this not &lt;em&gt;exactly&lt;/em&gt; the bug in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/MAHOUT-1186&lt;/a&gt; ?&lt;/p&gt;

&lt;p&gt;How did this creep back in?&lt;/p&gt;</comment>
                            <comment id="13665180" author="dweiss" created="Thu, 23 May 2013 14:49:06 +0100"  >&lt;p&gt;Hi Jake. No idea, really. I just checked out &lt;a href=&quot;http://svn.apache.org/repos/asf/mahout/collections/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/mahout/collections/trunk&lt;/a&gt; and followed from there. I am subscribed to the list but I&apos;m not following much of Mahout&apos;s development nowadays.&lt;/p&gt;</comment>
                            <comment id="13665184" author="dweiss" created="Thu, 23 May 2013 14:53:03 +0100"  >&lt;p&gt;Darn... I think I&apos;ve been working on an obsolete branch? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Is this the current one?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think the old one should be removed or moved under an attic somewhere...&lt;/p&gt;</comment>
                            <comment id="13665185" author="dweiss" created="Thu, 23 May 2013 14:56:10 +0100"  >&lt;p&gt;Yeah... good to know where the current development takes place. I&apos;ll reapply this to the current code and will be back if any of these issues still apply.&lt;/p&gt;</comment>
                            <comment id="13665188" author="jake.mannix" created="Thu, 23 May 2013 14:59:02 +0100"  >&lt;p&gt;Ah yes, we merged collections back into math a while back.  I&apos;d love to have your test cases added in, more coverage == better!&lt;/p&gt;</comment>
                            <comment id="13665213" author="dweiss" created="Thu, 23 May 2013 15:17:44 +0100"  >&lt;p&gt;Apologies for the noise &amp;#8211; I&apos;ve been working on the wrong SVN path.&lt;/p&gt;

&lt;p&gt;The good news is that most of the issues have been solved on the current master (including Sophie&apos;s so I wonder which version she worked with...). &lt;/p&gt;

&lt;p&gt;I attach a patch that adds randomized tests against JUC since these are really effective at catching bugs so in case of refactorings it may be handy. There is also one piggybacked change that clears the table of references on clear() &amp;#8211; test attached (and failing previously).&lt;/p&gt;</comment>
                            <comment id="13665248" author="sophiesperner" created="Thu, 23 May 2013 16:05:04 +0100"  >&lt;p&gt;Dear, I go to &lt;a href=&quot;http://repo1.maven.org/maven2/org/apache/mahout/mahout-math/0.7/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://repo1.maven.org/maven2/org/apache/mahout/mahout-math/0.7/&lt;/a&gt; and download mahout-math-0.7.jar . Does it contain lots of bugs? What is the newest version? If you point me to github then I do not know how to make a jar file out of source. Could you please tell how to get most recent and stable code? I apologise if said bad words about old version.&lt;/p&gt;</comment>
                            <comment id="13665250" author="sophiesperner" created="Thu, 23 May 2013 16:06:58 +0100"  >&lt;p&gt;Would not it be a good idea to release 0.8 version with the most current code especially since almost a year has passed.&lt;/p&gt;</comment>
                            <comment id="13665275" author="tdunning" created="Thu, 23 May 2013 16:39:39 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Would not it be a good idea to release 0.8 version with the most current code&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.  In fact, we are already in the process of stabilizing for a release.&lt;/p&gt;</comment>
                            <comment id="13665276" author="sophiesperner" created="Thu, 23 May 2013 16:40:01 +0100"  >&lt;p&gt;I tried to follow &lt;a href=&quot;http://stackoverflow.com/questions/16717858/how-to-make-jar-out-of-github-sources&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/16717858/how-to-make-jar-out-of-github-sources&lt;/a&gt;&lt;br/&gt;
but I get lots of errors and no jar file. Is it possible to make a jar file?&lt;/p&gt;</comment>
                            <comment id="13665335" author="jake.mannix" created="Thu, 23 May 2013 17:40:08 +0100"  >&lt;p&gt;To build from trunk (which is what we all do, for the most part), see the wiki, here: &lt;a href=&quot;https://cwiki.apache.org/confluence/display/MAHOUT/BuildingMahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/MAHOUT/BuildingMahout&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13665351" author="smarthi" created="Thu, 23 May 2013 17:55:30 +0100"  >&lt;p&gt;Sophie, attached is mahout-math.jar from trunk.&lt;/p&gt;</comment>
                            <comment id="13665358" author="sophiesperner" created="Thu, 23 May 2013 18:04:42 +0100"  >&lt;p&gt;Thank you Suneel! What I think is important for a new 0.8 release: make it up to date with java 1.7 version and fix as more bugs as possible.&lt;/p&gt;</comment>
                            <comment id="13665361" author="jake.mannix" created="Thu, 23 May 2013 18:10:05 +0100"  >&lt;p&gt;I&apos;m not sure everyone&apos;s hadoop cluster is on 1.7 (I know ours here at Twitter isn&apos;t), so moving to 1.7 seems a little early.&lt;/p&gt;

&lt;p&gt;Fixing bugs sounds like a good idea. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13665367" author="dweiss" created="Thu, 23 May 2013 18:13:26 +0100"  >&lt;p&gt;Could somebody with permissions remove that dead branch of collections from SVN? Alternatively I&apos;d at least remove the contents of the trunk and place a simple README file redirecting to the new location of current development branch.&lt;/p&gt;

&lt;p&gt;Not that it wasn&apos;t a lot of fun debugging but we can save somebody else from the mistake I made. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13672243" author="robinanil" created="Sat, 1 Jun 2013 22:22:50 +0100"  >&lt;p&gt;I am going to submit this for Dawid to close this. Excellent catch and even better testing.&lt;/p&gt;</comment>
                            <comment id="13672258" author="hudson" created="Sat, 1 Jun 2013 22:53:37 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #2026 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2026/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2026/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1225&quot; title=&quot;Sets and maps incorrectly clear() their state arrays (potential endless loops)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1225&quot;&gt;&lt;del&gt;MAHOUT-1225&lt;/del&gt;&lt;/a&gt; Nasty bug in Mahout collections. Sets and maps incorrectly clear() their state arrays (potential endless loops) - author: dweiss (Revision 1488607)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
robinanil : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/math/pom.xml&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/randomized&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/math/src/test/java/org/apache/mahout/math/randomized/RandomBlasting.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13672318" author="jake.mannix" created="Sun, 2 Jun 2013 06:09:01 +0100"  >&lt;p&gt;What exactly did you end up submitting Robin?  I thought we had determined that this was fixed already?  You just added the new randomized testing that Dawid added?  OpenObjectValueTypeHashMap still had the issue?&lt;/p&gt;</comment>
                            <comment id="13672695" author="dweiss" created="Sun, 2 Jun 2013 22:59:49 +0100"  >&lt;p&gt;Thanks Robin!&lt;/p&gt;

&lt;p&gt;Jake - there was still a small issue with clearing references &amp;#8211; a potential memory leak, although in practice probably not encountered. See the test case that was previously failing and you&apos;ll see a potential buggy scenario.&lt;/p&gt;
</comment>
                            <comment id="13672852" author="dweiss" created="Mon, 3 Jun 2013 07:20:50 +0100"  >&lt;p&gt;Ehm. I&apos;ve closed this issue as per Robin&apos;s comment above but I don&apos;t think this was the right way to go &amp;#8211; this should have been left open (with a fixed resolution) until a release is made. Apologies for the noise. I can&apos;t reopen it now &amp;#8211; probably missing some Jira&apos;s karma to do this. Please correct my mistake if you have admin rights, reopen and then bulk close at release time. Thanks!&lt;/p&gt;</comment>
                            <comment id="13672909" author="robinanil" created="Mon, 3 Jun 2013 09:48:39 +0100"  >&lt;p&gt;Could you elaborate on the buggy scenario. I dont see an option to reopen myself.&lt;/p&gt;</comment>
                            <comment id="13673031" author="dweiss" created="Mon, 3 Jun 2013 12:35:48 +0100"  >&lt;p&gt;Take a look at this test:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testClearTable() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        OpenObjectIntHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; m = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenObjectIntHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;();
        m.clear(); &lt;span class=&quot;code-comment&quot;&gt;// rehash from the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; capacity to the next prime after 1 (3).
&lt;/span&gt;        m.put(1, 2);
        m.clear(); &lt;span class=&quot;code-comment&quot;&gt;// Should clear internal references.
&lt;/span&gt;        
        Field tableField = m.getClass().getDeclaredField(&lt;span class=&quot;code-quote&quot;&gt;&quot;table&quot;&lt;/span&gt;);
        tableField.setAccessible(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[] table = (&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[]) tableField.get(m);
        
        assertEquals(
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt;(Arrays.asList(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; [] { &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; } )),
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt;(Arrays.asList(table)));
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This fails because clear() does not explicitly erase the table of references. It does call rehash but not always (not if there&apos;s no need) in which case the references stay hard-linked. The fix is to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void clear() {
     Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.state, FREE);
+    Arrays.fill(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.table, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+
     distinct = 0;
     freeEntries = table.length; &lt;span class=&quot;code-comment&quot;&gt;// delta
&lt;/span&gt;     trimToSize();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You could avoid this by returning a boolean from trimToSize() and checking whether internal buffers have been reallocated (and thus references freed).&lt;/p&gt;</comment>
                            <comment id="13673072" author="robinanil" created="Mon, 3 Jun 2013 13:37:08 +0100"  >&lt;p&gt;Yes I saw that, thats why I committed your patch. I thought there was something else &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/viewvc/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t?r1=1488607&amp;amp;r2=1488606&amp;amp;pathrev=1488607&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t?r1=1488607&amp;amp;r2=1488606&amp;amp;pathrev=1488607&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13673096" author="dweiss" created="Mon, 3 Jun 2013 14:21:09 +0100"  >&lt;p&gt;Nope, only that. It&apos;s fun to see how everything else goes bust when you run those tests on that dead collections branch though.&lt;br/&gt;
I&apos;ll run those microbenchmarks when I get a spare minute.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12584503" name="MAHOUT-1225.patch" size="13435" author="dweiss" created="Thu, 23 May 2013 15:17:44 +0100"/>
                            <attachment id="12584480" name="MAHOUT-1225.patch" size="16975" author="dweiss" created="Thu, 23 May 2013 13:24:42 +0100"/>
                            <attachment id="12584457" name="MAHOUT-1225.patch" size="13795" author="dweiss" created="Thu, 23 May 2013 09:08:32 +0100"/>
                            <attachment id="12584041" name="hppc-0.4.3.jar" size="1229348" author="sophiesperner" created="Tue, 21 May 2013 18:48:28 +0100"/>
                            <attachment id="12584526" name="mahout-math-0.8-SNAPSHOT.jar" size="1588548" author="smarthi" created="Thu, 23 May 2013 17:55:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 May 2013 20:44:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329035</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzem1r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329377</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>