<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:22:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1030/MAHOUT-1030.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1030] Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1030</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Looks like this won&apos;t make it into this build. Pretty widespread impact on code and tests and I don&apos;t know which properties were implemented in the old version. I will create a JIRA and post my interim results.&lt;/p&gt;

&lt;p&gt;On 6/8/12 12:21 PM, Jeff Eastman wrote:&lt;br/&gt;
&amp;gt; That&apos;s a reversion that evidently got in when the new ClusterClassificationDriver was introduced. It should be a pretty easy fix and I will see if I can make the change before Paritosh cuts the release bits tonight.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; On 6/7/12 1:00 PM, Pat Ferrel wrote:&lt;br/&gt;
&amp;gt;&amp;gt; It appears that in kmeans the clusteredPoints are now written as WeightedVectorWritable where in mahout 0.6 they were WeightedPropertyVectorWritable? This means that the distance from the centroid is no longer stored here? Why? I hope I&apos;m wrong because that is not a welcome change. How is one to order clustered docs by distance from cluster centroid?&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; I&apos;m sure I could calculate the distance but that would mean looking up the centroid for the cluster id given in the above WeightedVectorWritable, which means iterating through all the clusters for each clustered doc. In my case the number of clusters could be fairly large.&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; Am I missing something?&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12560051">MAHOUT-1030</key>
            <summary>Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="andrew.musselman">Andrew Musselman</assignee>
                                    <reporter username="jeastman">Jeff Eastman</reporter>
                        <labels>
                    </labels>
                <created>Sat, 9 Jun 2012 17:08:56 +0100</created>
                <updated>Tue, 28 Jan 2014 16:41:12 +0000</updated>
                            <resolved>Sun, 8 Dec 2013 04:08:46 +0000</resolved>
                                    <version>0.7</version>
                                    <fixVersion>0.9</fixVersion>
                                    <component>Clustering</component>
                    <component>Integration</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13292411" author="jeastman" created="Sat, 9 Jun 2012 19:57:29 +0100"  >&lt;p&gt;Here&apos;s a patch that modifies the cluster classification code to emit WeightedPropertyVectorWritables instead of WeightedVectorWritables. It does not compute a distance property; however, as this is not generally available for all Cluster types (really only DistanceMeasureClusters).&lt;/p&gt;

&lt;p&gt;The more I think about the distance property calculation the more I am comfortable with the current (trunk) implementation. Consider that, for DistanceMeasureClusters at least, the pdf is:&lt;/p&gt;

&lt;p&gt;pdf = 1/(1+distance)&lt;/p&gt;

&lt;p&gt;It is trivial to back-calculate the distance from the pdf value that is already written in the WeightedVectorWritable. This is because, in the new implementation, the pdfs are calculated by the classify() policy method and it is the pdfs that are written.&lt;/p&gt;

&lt;p&gt;Sooo, I&apos;m not sure this is a must-fix or even a want-fix. Thoughts?&lt;/p&gt;

&lt;p&gt;This patch also fixes a bug in the ClusterDumperWriter that correctly catches null properties fields read when the written properties map contains 0 entries. This part of the patch should go into trunk regardless of the above.&lt;/p&gt;</comment>
                            <comment id="13292412" author="jeastman" created="Sat, 9 Jun 2012 19:58:31 +0100"  >&lt;p&gt;Not sure this patch is what we want to do for the reasons mentioned above. I think the current implementation provides enough information already.&lt;/p&gt;</comment>
                            <comment id="13292427" author="hudson" created="Sat, 9 Jun 2012 22:03:52 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1537 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1537/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1537/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1030&quot; title=&quot;Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1030&quot;&gt;&lt;del&gt;MAHOUT-1030&lt;/del&gt;&lt;/a&gt;: adding null check when empty properties are written (Revision 1348491)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1348491&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1348491&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumperWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13292438" author="hudson" created="Sat, 9 Jun 2012 23:40:16 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1538 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1538/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1538/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1030&quot; title=&quot;Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1030&quot;&gt;&lt;del&gt;MAHOUT-1030&lt;/del&gt;&lt;/a&gt;: adding better null check when empty properties are written (Revision 1348494)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1030&quot; title=&quot;Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1030&quot;&gt;&lt;del&gt;MAHOUT-1030&lt;/del&gt;&lt;/a&gt;: adding better null check when empty properties are written (Revision 1348493)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1348494&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1348494&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/examples/bin/cluster-reuters.sh&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumperWriter.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1348493&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1348493&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumperWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13292840" author="jeastman" created="Mon, 11 Jun 2012 16:37:42 +0100"  >&lt;p&gt;I&apos;m moving this to 0.8 to allow for more discussion on whether or not it needs to be implemented at all. Given that the existing pdf weights allow for distance to be computed I don&apos;t view it as a showstopper for 0.7.&lt;/p&gt;

&lt;p&gt;I committed the patch to ClusterDumperWriter after the release bits were cut but, since it has not presented itself to date and since clustering no longer produces WeightedPropertyVectorWritables, I don&apos;t view it as a showstopper for 0.7 either.&lt;/p&gt;</comment>
                            <comment id="13403570" author="pferrel" created="Fri, 29 Jun 2012 00:15:06 +0100"  >&lt;p&gt;Jeff said; &quot;It is trivial to back-calculate the distance from the pdf value that is already written in the WeightedVectorWritable.&quot;&lt;/p&gt;

&lt;p&gt;Hmm, I don&apos;t see how the pdf is included in the WeightedVectorWritable, at least for kmeans. The weight therein is the probability it belongs to the cluster, for kmeans 1 or 0, right? clusteredPoints/part-m-00000 is made of IntWritable clusterIDs and WeightedVectorWritable so how do you find a non-binary pdf for a specific doc? &lt;/p&gt;</comment>
                            <comment id="13404028" author="jeastman" created="Fri, 29 Jun 2012 18:04:53 +0100"  >&lt;p&gt;Here&apos;s a small patch that actually sets the documented weights in the WeightedVectorWritables in the ClusterClassificationMapper. Needs more testing to make sure it doesn&apos;t break something else though.&lt;/p&gt;</comment>
                            <comment id="13404516" author="jeastman" created="Sat, 30 Jun 2012 16:34:34 +0100"  >&lt;p&gt;This patch modifies the classify() method of AbstractClusteringPolicy to remove the normalization in order that pdf values in the WeightedVectorWritable can be back-converted into the original distance measure distance.&lt;/p&gt;

&lt;p&gt;Not sure which direction to go on this issue right now. If this fixes the regression adequately, it introduces another incompatibility with AbstractVectorClassifier&apos;s expectation of normalized results. The downside of this approach needs to be weighed against the much larger patch needed to return WeightedPropertyVectorWritables in the first version of the patch.&lt;/p&gt;</comment>
                            <comment id="13404581" author="pferrel" created="Sat, 30 Jun 2012 18:40:52 +0100"  >&lt;p&gt;Personally I have a work around that&apos;s independent of putting the distance or pdf in the clusteredPoints WeightedVectorWritable.&lt;/p&gt;

&lt;p&gt;Clearly there are larger issues regarding the refactoring that have to be considered. I&apos;ll rely on my work around until the mahout team has determined what should get into the trunk and will then convert to that solution.&lt;/p&gt;

&lt;p&gt;If you think this patch is the right thing to do I&apos;ll test it.&lt;/p&gt;</comment>
                            <comment id="13404650" author="lancenorskog" created="Sun, 1 Jul 2012 00:16:37 +0100"  >&lt;blockquote&gt;&lt;p&gt;If this fixes the regression adequately, it introduces another incompatibility with AbstractVectorClassifier&apos;s expectation of normalized results.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I have not used this code, but have a general request: it is hard to describe the difficulty of approaching this kind of code from outside. Inconsistency makes it that much more frustrating.&lt;/p&gt;</comment>
                            <comment id="13404737" author="pferrel" created="Sun, 1 Jul 2012 15:59:25 +0100"  >&lt;p&gt;A couple other thoughts:&lt;/p&gt;

&lt;p&gt;1) With non-partitioning clustering like fuzzy kmeans the weight is used to communicate the probability of inclusion in the cluster. I&apos;d expect it is required. Whatever you do can&apos;t change the meaning of the weight for anything but kmeans.&lt;/p&gt;

&lt;p&gt;2) Strictly speaking the probability of a vectors inclusion in a cluster for kmeans is always 1.0 or 0. Therefore if you attach the underlying pdf to the clusteredPoints aren&apos;t you actually turning kmeans into fkmeans, at least by some loose definition? or is the weight calculated differently for fkmeans--see #1.&lt;/p&gt;</comment>
                            <comment id="13678785" author="smarthi" created="Sat, 8 Jun 2013 18:39:32 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=pferrel&quot; class=&quot;user-hover&quot; rel=&quot;pferrel&quot;&gt;Pat Ferrel&lt;/a&gt;Did you have a chance to try the last patch that Jeff had submitted here?&lt;/p&gt;</comment>
                            <comment id="13678847" author="pferrel" created="Sat, 8 Jun 2013 21:27:32 +0100"  >&lt;p&gt;+1 to Lance&apos;s point.&lt;/p&gt;

&lt;p&gt;My point of 01/Jul/12 was that the membership for kmeans should be 1 or 0 (it was prior to Jeff&apos;s patch I believe) and so can&apos;t be used to calculate the distance to the centroid. The membership is being overloaded and so I was voting to return to the old method for storing the distance in a WeightedPropertyVectorWritable and leaving the membership 0 or 1.&lt;/p&gt;

&lt;p&gt;Since I was voting to not use the membership I implemented a recalc of the distance during ingest of the clustered vectors so that my code would continue to work either way. I rather expected someone to complain that membership was now fuzzy in some sense and dependent on the distance metric. Lance and Jeff also point out the problem with normalization expectations.&lt;/p&gt;

&lt;p&gt;In general there are lots of places a WeightedPropertyVectorWritable would be nice, even nicer than a NamedVectorWritable. Using them seems like a good way to add properties without breaking backward compatibility. &lt;/p&gt;</comment>
                            <comment id="13679170" author="gsingers" created="Sun, 9 Jun 2013 22:29:30 +0100"  >&lt;p&gt;Pat, do you have a patch for this that demonstrates what you are suggesting so that we can compare?&lt;/p&gt;</comment>
                            <comment id="13679620" author="pferrel" created="Mon, 10 Jun 2013 17:42:59 +0100"  >&lt;p&gt;Not really. What I do now is recalculate the distance to the centroid when I store the vectors in a DB. &lt;/p&gt;

&lt;p&gt;What used to happen, pre 0.8 (or ?) was the distance was stored in a WeightedPropertyVectorWritable, in the properties. During the kmeans refactoring of 0.8 the type of the vector was changed to NamedVectorWritable so the property that held the distance was lost. To put back WeightedPropertyVectorWritable and store the distance in it was more than I wanted to maintain outside of the trunk.&lt;/p&gt;

&lt;p&gt;So I just recalculate it.&lt;/p&gt;</comment>
                            <comment id="13679624" author="pferrel" created="Mon, 10 Jun 2013 17:47:32 +0100"  >&lt;p&gt;BTW you can look at the code of 0.6 or 0.7 to see how the distance was stored. The key thing is changing the output vector type otherwise there is no good place to put it.&lt;/p&gt;

&lt;p&gt;This is more of a feature that was lost than a completely new feature request.&lt;/p&gt;</comment>
                            <comment id="13680391" author="gsingers" created="Tue, 11 Jun 2013 15:04:06 +0100"  >&lt;p&gt;I&apos;m going to push this.  I know that for 0.9 we are looking at reworking the way we handle vectors and their associated properties (i.e. get rid of NamedVector, etc.)&lt;/p&gt;</comment>
                            <comment id="13809686" author="andrew.musselman" created="Wed, 30 Oct 2013 22:07:24 +0000"  >&lt;p&gt;Grant, who should I talk to to get up to speed on this?&lt;/p&gt;</comment>
                            <comment id="13809813" author="gsingers" created="Thu, 31 Oct 2013 00:52:10 +0000"  >&lt;p&gt;Andrew, I suppose it depends on what part of it you want to address.  If it is the literal part of this bug, Pat has been pretty responsive.  If it is the reworking of the properties of vectors, that is probably best handled on the mailing list.  The basic gist being we want to more intelligently handle vector properties and get rid of NamedVector.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tdunning&quot; class=&quot;user-hover&quot; rel=&quot;tdunning&quot;&gt;Ted Dunning&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=robinanil&quot; class=&quot;user-hover&quot; rel=&quot;robinanil&quot;&gt;Robin Anil&lt;/a&gt; and others may have some thoughts here as well.&lt;/p&gt;

&lt;p&gt;(FWIW, I&apos;d prefer the latter to be tackled.)&lt;/p&gt;</comment>
                            <comment id="13834990" author="andrew.musselman" created="Thu, 28 Nov 2013 17:30:15 +0000"  >&lt;p&gt;I&apos;ll dig through the 0.6 code for this; in the meantime does anyone remember if every usage of WeightedPropertyVectorWritable was changed to WeightedVectorWritable, or just certain ones used in clustering?&lt;/p&gt;</comment>
                            <comment id="13835031" author="pferrel" created="Thu, 28 Nov 2013 18:34:27 +0000"  >&lt;p&gt;Broken record warning: The bigger issue (I agree with Grant about tackling it) is that each part of Mahout may or may not support NamedVectors, let alone WeightedPropertyVectorWritable. It is probably a big job but before 1.0 it would sure be nice to have something like WeightedPropertyVectorWritable supported optionally everywhere in Mahout. I&apos;ve run across many occasions where it would save a lot of extra import/export code and do it in a completely scalable way. Import/export code is almost always non-scalable because people, including me, are too lazy to write external-id to internal-id to external-id lookup code in a scalable way. There are a fair number of cases where using a WeightedPropertyVectorWritable raises some issues like matrix transpose and multiply. Maybe a better way to solve the external to internal to external problem is with a scalable implementation supplied as a separate tool in Mahout. If there is a feature request for this larger issue maybe that is a better place for this discussion. &lt;/p&gt;

&lt;p&gt;As far as this issue is concerned, it is related only to refactoring of the clustering code. In 0.6 the distance to centroid was stored in a WeightedPropertyVectorWritable. In 0.7 during refactoring, the vector type was changed and the distance to centroid was no longer stored with the clustered vectors. Restoring this would make iterating through every clustered vector to recalculate the distance unnecessary.&lt;/p&gt;</comment>
                            <comment id="13835036" author="andrew.musselman" created="Thu, 28 Nov 2013 19:01:11 +0000"  >&lt;p&gt;I&apos;m planning on fixing this for clustering to get into the 0.9 release next week, and then do the bigger change for 1.0.&lt;/p&gt;</comment>
                            <comment id="13835946" author="andrew.musselman" created="Sun, 1 Dec 2013 04:16:48 +0000"  >&lt;p&gt;Using WeightedPropertyVectorWritable in place of WeightedVectorWritable where it&apos;s used for clustering.&lt;/p&gt;

&lt;p&gt;Got both TestKmeansClustering and ClusterClassificationDriverTest passing; let me know if I&apos;ve missed something.&lt;/p&gt;

&lt;p&gt;The plan is to ship this regression fix in 0.9 and do the more expansive refactoring for 1.0.&lt;/p&gt;</comment>
                            <comment id="13835947" author="andrew.musselman" created="Sun, 1 Dec 2013 04:21:31 +0000"  >&lt;p&gt;Hm, just noticed my patch is very similar to the one submitted two Junes ago.&lt;/p&gt;

&lt;p&gt;Were people just waiting for the bigger fix to get this quick fix in, and/or should this be sorted out now too:&lt;/p&gt;

&lt;p&gt;&quot;If this fixes the regression adequately, it introduces another incompatibility with AbstractVectorClassifier&apos;s expectation of normalized results.&quot;&lt;/p&gt;</comment>
                            <comment id="13836085" author="pferrel" created="Sun, 1 Dec 2013 18:33:48 +0000"  >&lt;p&gt;Don&apos;t have time to fully test this right now but skimming the patch seems to indicate that the pdf is being used as a proxy for the distance to the centroid? Jeff tried this earlier. If I&apos;m jumping to the wrong conclusion then disregard the following.&lt;/p&gt;

&lt;p&gt;The pdf for kmeans will be 0 or 1 to indicate the vector is or is not a member of a cluster. It therefore can&apos;t be used to calculate distance. The actual distance is calculated somewhere else in the flow, I haven&apos;t looked into where that is, but I believe it changed from 0.6 to 0.7 due to the refactoring and this is one reason it was no longer stored in the WPVW for each clustered point. For many applications, we need to know the closest vectors to the centroid or use the distance as a way to sort member vectors. It is used as an indicator of strength of membership in the cluster. Without the distance all member vectors are treated equally, and this is often not a good thing to do.&lt;/p&gt;

&lt;p&gt;For some clustering methods, the pdf may be used to recalculate the distance to centroid, but this method is not general as I recall.&lt;/p&gt;</comment>
                            <comment id="13836087" author="pferrel" created="Sun, 1 Dec 2013 18:41:03 +0000"  >&lt;p&gt;I hope Jeff can answer about normalized results, but I believe that had to do with using the pdf in lieu of using the true distance to centroid. If the true distance from the WPVW to the already calculated centroid is stored in the WPVW, I don&apos;t believe Jeff&apos;s comment applies. &lt;/p&gt;

&lt;p&gt;He&apos;s calling this a regression because the distance was in the vector and now is not. His proposed fix didn&apos;t work out because of the above comment. Again, as I recall.&lt;/p&gt;</comment>
                            <comment id="13836091" author="andrew.musselman" created="Sun, 1 Dec 2013 19:01:55 +0000"  >&lt;p&gt;Okay; I did the distance calculation in the mapper and put that into a property called &quot;distance&quot; like in 0.6.&lt;/p&gt;</comment>
                            <comment id="13836099" author="pferrel" created="Sun, 1 Dec 2013 19:29:19 +0000"  >&lt;p&gt;Thanks, I see now. That looks correct. This is fine for my needs. The only suggestion I&apos;d have is to call it distance-squared or some such in case someone wants to calculate actual distance.&lt;/p&gt;</comment>
                            <comment id="13836280" author="andrew.musselman" created="Mon, 2 Dec 2013 06:19:46 +0000"  >&lt;p&gt;Or output square-root of distance-squared in &quot;distance&quot;.&lt;/p&gt;</comment>
                            <comment id="13836677" author="pferrel" created="Mon, 2 Dec 2013 16:46:44 +0000"  >&lt;p&gt;as you wish, either is clear, thanks.&lt;/p&gt;</comment>
                            <comment id="13838284" author="andrew.musselman" created="Tue, 3 Dec 2013 22:53:10 +0000"  >&lt;p&gt;Changing property name from &quot;distance&quot; to &quot;distance-squared&quot;.&lt;/p&gt;</comment>
                            <comment id="13842400" author="andrew.musselman" created="Sun, 8 Dec 2013 04:08:10 +0000"  >&lt;p&gt;New patch per reviewboard, closing as fixed.&lt;/p&gt;</comment>
                            <comment id="13842401" author="andrew.musselman" created="Sun, 8 Dec 2013 04:08:46 +0000"  >&lt;p&gt;Closing per reviewboard as fixed/ship it.&lt;/p&gt;</comment>
                            <comment id="13842553" author="andrew.musselman" created="Sun, 8 Dec 2013 17:04:21 +0000"  >&lt;p&gt;Removing redundant if block, tmp variable, and unused imports.&lt;/p&gt;</comment>
                            <comment id="13842554" author="andrew.musselman" created="Sun, 8 Dec 2013 17:04:46 +0000"  >&lt;p&gt;Closing&lt;/p&gt;</comment>
                            <comment id="13842574" author="smarthi" created="Sun, 8 Dec 2013 18:19:12 +0000"  >&lt;p&gt;Patch committed to trunk, Thanks Andrew.  &lt;br/&gt;
P.S. Please don&apos;t close JIRAs, they are closed at the time of Release.&lt;/p&gt;</comment>
                            <comment id="13842680" author="hudson" created="Sun, 8 Dec 2013 19:29:51 +0000"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #2356 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2356/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2356/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1030&quot; title=&quot;Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1030&quot;&gt;&lt;del&gt;MAHOUT-1030&lt;/del&gt;&lt;/a&gt;:Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable (smarthi: rev 1549089)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/classify/ClusterClassificationDriver.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1030&quot; title=&quot;Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1030&quot;&gt;&lt;del&gt;MAHOUT-1030&lt;/del&gt;&lt;/a&gt;: Regression: Clustered Points Should be WeightedPropertyVectorWritable not WeightedVectorWritable (smarthi: rev 1549087)&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/CHANGELOG&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/classify/ClusterClassificationMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/classify/ClusterClassificationDriverTest.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/AbstractClusterWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/CSVClusterWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/ClusterDumperWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/GraphMLClusterWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/clustering/JsonClusterWriter.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/lucene/ClusterLabels.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13881226" author="pferrel" created="Fri, 24 Jan 2014 18:08:14 +0000"  >&lt;p&gt;This fixes a very literal reading of the bug. The distance-squared is indeed included in clusteredPoints BUT there are no vector ids so the distance can&apos;t actually be used. Without a vector id in clusteredPoints, Mahout doesn&apos;t really perform unsupervised categorization. I will now have to loop through all vectors, recalculate the distance and categorize them according to the cluster centroid they are closest to. &lt;/p&gt;

&lt;p&gt;The clusteredPoints and distance-squared can&apos;t actually be used without knowing the vector id. I think named vectors work here but many cases including mine do not have names only Mahout integer ids.&lt;/p&gt;

&lt;p&gt;Please correct me if I&apos;ve missed something.&lt;/p&gt;

&lt;p&gt;When I cluster the user preference data used in the Mahout recommender I get clusteredPoints something like this. The data from the vector is given but not its id??? The Key here is a cluster id.&lt;/p&gt;

&lt;p&gt;pat$ mahout seqdumper -i /Users/pat/big-data/temp/clusters/clusteredPoints/ | more&lt;br/&gt;
Jan 24, 2014 10:02:05 AM org.slf4j.impl.JCLLoggerAdapter info&lt;br/&gt;
INFO: Command line arguments: {--endPhase=&lt;span class=&quot;error&quot;&gt;&amp;#91;2147483647&amp;#93;&lt;/span&gt;, --input=&lt;span class=&quot;error&quot;&gt;&amp;#91;/Users/pat/big-data/temp/clusters/clusteredPoints/&amp;#93;&lt;/span&gt;, --startPhase=&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, --tempDir=&lt;span class=&quot;error&quot;&gt;&amp;#91;temp&amp;#93;&lt;/span&gt;}&lt;br/&gt;
2014-01-24 10:02:05.707 java&lt;span class=&quot;error&quot;&gt;&amp;#91;29221:1003&amp;#93;&lt;/span&gt; Unable to load realm info from SCDynamicStore&lt;br/&gt;
Input Path: &lt;a href=&quot;file:/Users/pat/big-data/temp/clusters/clusteredPoints/part-m-00000&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/pat/big-data/temp/clusters/clusteredPoints/part-m-00000&lt;/a&gt;&lt;br/&gt;
Key class: class org.apache.hadoop.io.IntWritable Value Class: class org.apache.mahout.clustering.classify.WeightedPropertyVectorWritable&lt;br/&gt;
Key: 39: Value: wt: 1.0 distance-squared: 9.656875  vec: &lt;span class=&quot;error&quot;&gt;&amp;#91;0:1.000, 2:1.000, 5:1.000, 9:1.000, 12:1.000, 13:1.000, 17:1.000, 18:1.000, 19:1.000, 20:1.000&amp;#93;&lt;/span&gt;&lt;br/&gt;
Key: 48: Value: wt: 1.0 distance-squared: 22.229166666666686  vec: &lt;span class=&quot;error&quot;&gt;&amp;#91;25:1.000, 26:1.000, 27:1.000, 28:1.000, 29:1.000, 30:1.000, 31:1.000, 36:1.000, 38:1.000, 39:1.000, 40:1.000, 41:1.000, 43:1.000, 44:1.000, 46:1.000, 48:1.000, 53:1.000, 54:1.000, 55:1.000, 56:1.000, 57:1.000, 58:1.000, 60:1.000, 63:1.000, 64:1.000, 66:1.000, 67:1.000, 68:1.000, 69:1.000, 70:1.000, 71:1.000, 72:1.000&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13881273" author="andrew.musselman" created="Fri, 24 Jan 2014 18:34:21 +0000"  >&lt;p&gt;Yes, was looking at this last night with Suneel.  I think he found where it&apos;s happening and we&apos;ll check it out.&lt;/p&gt;</comment>
                            <comment id="13881283" author="pferrel" created="Fri, 24 Jan 2014 18:38:33 +0000"  >&lt;p&gt;Hmm, Suneel recommends creating a new Jira so I will&lt;/p&gt;

&lt;p&gt;Comments from Suneel,&lt;/p&gt;

&lt;p&gt;I concur that we r presently not capturing the vectorIds (unless its a Named Vector) and also concur that its hard to infer as to which vector belongs to which cluster without that. It seems easy to use NamedVector for now to be able to determine the vectors that belong to a cluster.&lt;/p&gt;

&lt;p&gt;The Clustering algos are only reading VectorWritable() and if the VectorWritable() did not have the vector key (i.e. is not a Named Vector) the clustering algorithm just wouldn&apos;t have it.&lt;/p&gt;

&lt;p&gt;See the following code snippet from PartialVectorMergeReducer.java :-&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (namedVector) {
      vector = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; NamedVector(vector, key.toString());
    }

    &lt;span class=&quot;code-comment&quot;&gt;// drop empty vectors.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (vector.getNumNondefaultElements() &amp;gt; 0) {
      VectorWritable vectorWritable = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VectorWritable(vector);
      context.write(key, vectorWritable);
    }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So from the above code snippet if its not a Named Vector then the corresponding vector key is not captured (in the VectorWritable).&lt;/p&gt;

&lt;p&gt;The RowIdJob reads the same Tf-Idf vectors and creates a docIndex and matrix (I am sure u know their layout and what they are intended for so I&apos;ll avoid the details here).&lt;/p&gt;

&lt;p&gt;The following code snippet from ClusterIterator.iterateSeq() only reads the VectorWritable but not the Key:&lt;/p&gt;

&lt;p&gt;      for (VectorWritable vw : new SequenceFileDirValueIterable&amp;lt;VectorWritable&amp;gt;(inPath, PathType.LIST,&lt;br/&gt;
          PathFilters.logsCRCFilter(), conf)) {&lt;/p&gt;

&lt;p&gt;It should have been reading a Pair&amp;lt;Text, VectorWritable&amp;gt; to capture the Key for the vector as well.&lt;/p&gt;

&lt;p&gt;I presently have a 0.9 Release sitting out there in staging waiting to be finalized.  Please create a JIRA for this and we should have it fixed in the next major release (or Release Candidate).&lt;/p&gt;
</comment>
                            <comment id="13881287" author="pferrel" created="Fri, 24 Jan 2014 18:43:01 +0000"  >&lt;p&gt;adde a &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1410&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/MAHOUT-1410&lt;/a&gt;&lt;br/&gt;
not sure if it&apos;s needed.&lt;/p&gt;

&lt;p&gt;I can promise an instant test on some real world data if you have a patch, very sorry I didn&apos;t notice sooner!&lt;/p&gt;</comment>
                            <comment id="13881762" author="smarthi" created="Sat, 25 Jan 2014 08:54:12 +0000"  >&lt;p&gt;My bad, should have caught this earlier. While working on the fix for M-1410 realized that this fix only takes care of MR version, the sequential version still uses WeightedVectorWritable() and doesn&apos;t preserve distance.&lt;/p&gt;

&lt;p&gt;The patch for M-1410 should include the fix for this.&lt;/p&gt;</comment>
                            <comment id="13883103" author="pferrel" created="Mon, 27 Jan 2014 18:51:14 +0000"  >&lt;p&gt;using cosine similarity for clustering I&apos;m getting what must be wrong values in the clusteredPoints. The distance is often &amp;gt; 1&lt;/p&gt;

&lt;p&gt;In fact in the above output when the job was putting distance-squared in clusteredPoints, the results were often larger than 1 too.&lt;/p&gt;

&lt;p&gt;using cosine, isn&apos;t it impossible to get a distance: 4.92391969868745 or  distance-squared: 9.656875 for that matter?&lt;/p&gt;

&lt;p&gt;using kmeans, command line arguments: {--clustering=null, --clusters=&lt;span class=&quot;error&quot;&gt;&amp;#91;/Users/pat/big-data/guide/temp/cluster-seeds&amp;#93;&lt;/span&gt;, --convergenceDelta=&lt;span class=&quot;error&quot;&gt;&amp;#91;0.0010&amp;#93;&lt;/span&gt;, --distanceMeasure=&lt;span class=&quot;error&quot;&gt;&amp;#91;org.apache.mahout.common.distance.CosineDistanceMeasure&amp;#93;&lt;/span&gt;, --endPhase=&lt;span class=&quot;error&quot;&gt;&amp;#91;2147483647&amp;#93;&lt;/span&gt;, --input=&lt;span class=&quot;error&quot;&gt;&amp;#91;/Users/pat/big-data/guide/temp/tmp1/pairwiseSimilarity&amp;#93;&lt;/span&gt;, --maxIter=&lt;span class=&quot;error&quot;&gt;&amp;#91;50&amp;#93;&lt;/span&gt;, --method=&lt;span class=&quot;error&quot;&gt;&amp;#91;mapreduce&amp;#93;&lt;/span&gt;, --numClusters=&lt;span class=&quot;error&quot;&gt;&amp;#91;20&amp;#93;&lt;/span&gt;, --output=&lt;span class=&quot;error&quot;&gt;&amp;#91;/Users/pat/big-data/guide/temp/clusters&amp;#93;&lt;/span&gt;, --overwrite=null, --startPhase=&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, --tempDir=&lt;span class=&quot;error&quot;&gt;&amp;#91;temp&amp;#93;&lt;/span&gt;}&lt;/p&gt;


&lt;p&gt;Example for one point in clusteredPoints from seqdumper&lt;br/&gt;
Key: 950: Value: wt: 1.0 distance: 4.92391969868745  vec: 24 = &lt;span class=&quot;error&quot;&gt;&amp;#91;39:0.855, 43:0.698, 72:0.829, 260:0.829, 336:0.829, 341:0.829, 346:0.829, 363:0.807, 365:0.896, 427:0.855, 438:0.896, 787:0.855, 795:0.855, 921:0.855, 926:0.855, 932:0.807, 939:0.896, 1144:0.829, 1269:0.896, 1271:0.896, 1273:0.896, 1275:0.896, 1277:0.896, 1278:0.896, 1279:0.896, 1280:0.896, 1281:0.896, 1283:0.896, 1286:0.896, 1287:0.829, 1288:0.896, 1289:0.952, 1290:0.952, 1291:0.896, 1293:0.896, 1294:0.896, 1296:0.896, 1297:0.896, 1299:0.896, 1302:0.896, 1303:0.896, 1307:0.829, 1344:0.855, 1346:0.855, 1394:0.829, 1409:0.855, 1977:0.896, 1978:0.896, 1979:0.896, 1980:0.896, 1981:0.896, 1982:0.896&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13883138" author="andrew.musselman" created="Mon, 27 Jan 2014 19:12:34 +0000"  >&lt;p&gt;As I recall that distance is the distance of that vector to the centroid of the cluster it&apos;s been assigned to, which wouldn&apos;t be using the cosine similarity metric I wouldn&apos;t think.&lt;/p&gt;</comment>
                            <comment id="13883149" author="smarthi" created="Mon, 27 Jan 2014 19:19:10 +0000"  >&lt;p&gt;That&apos;s correct Andrew. Its the distance of the vector to the cluster centroid. I was wrong.&lt;/p&gt;</comment>
                            <comment id="13883188" author="pferrel" created="Mon, 27 Jan 2014 19:46:58 +0000"  >&lt;p&gt;The distance should be measured the same way that the cluster is created, right? Otherwise how would you know what metric is used?&lt;/p&gt;

&lt;p&gt;Also the data is from boolean recommender data (all dimensions = 0,1) it is the item-item similarity matrix calculated using loglikelihood and looks like the stuff below. Andrew and Suneel have copies of it.&lt;/p&gt;

&lt;p&gt;Key: 0: Value: &lt;/p&gt;
{5:0.854718643737767,172:0.8292121703264371,192:0.854718643737767,13:0.8962379566075429,198:0.8962379566075429,20:0.8962379566075429,9:0.8962379566075429,19:0.8962379566075429,201:0.8962379566075429,207:0.8962379566075429,43:0.6976395601234899,193:0.8962379566075429,18:0.8962379566075429,184:0.8962379566075429,209:0.8962379566075429,187:0.854718643737767,2:0.8962379566075429,211:0.854718643737767,27:0.7327087555023397,177:0.854718643737767,183:0.8292121703264371,214:0.8962379566075429,17:0.854718643737767,190:0.854718643737767,176:0.8292121703264371,12:0.8962379566075429,191:0.854718643737767}
&lt;p&gt;Key: 2: Value: &lt;/p&gt;
{5:0.8962379566075429,12:0.919419979968322,19:0.919419979968322,9:0.919419979968322,17:0.8962379566075429,20:0.919419979968322,18:0.919419979968322,13:0.919419979968322}</comment>
                            <comment id="13883321" author="smarthi" created="Mon, 27 Jan 2014 21:19:10 +0000"  >&lt;p&gt;I hope I am wrong but someone please verify this. I don&apos;t see the CLI supplied DistanceMeasure being honored in both KMeans and FuzzyKMeans.&lt;br/&gt;
This seems to have been an issue with Mahout Kmeans/FuzzyKMeans clustering forever,  but was never noticed or reported. &lt;/p&gt;

&lt;p&gt;Please file a JIRA for this.&lt;/p&gt;
</comment>
                            <comment id="13883555" author="andrew.musselman" created="Tue, 28 Jan 2014 00:23:04 +0000"  >&lt;p&gt;Something&apos;s wrong with those distances for sure, but the command-line parameter is making it through to the instantiation of Kluster.&lt;/p&gt;

&lt;p&gt;I attached a debugger and watched that work, as well as watched a correct measure make it through a job.&lt;/p&gt;

&lt;p&gt;The issue is that when I built the &quot;distance&quot; property I used the Vector method getDistanceSquared, which does not know what metric we used for the clustering.&lt;/p&gt;

&lt;p&gt;So it&apos;s debatable if this is a show-stopper, but it&apos;s not ideal.&lt;/p&gt;
</comment>
                            <comment id="13883774" author="smarthi" created="Tue, 28 Jan 2014 05:20:38 +0000"  >&lt;p&gt;Andrew, looking at this issue now and u&apos;re right that its not a show stopper but needs to be fixed nevertheless. The mistake&apos;s with the distance calculation wherein we are always using &apos;squaredDistance&apos; as opposed to using the CLI provided DistanceMeasure.&lt;/p&gt;

&lt;p&gt;Below code snippet should fix the issue (needs to be added in both ClusterClassificationMapper and ClusterClassificationDriver where the distance is being calculated):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    DistanceMeasureCluster distanceMeasureCluster = (DistanceMeasureCluster) cluster;
    DistanceMeasure distanceMeasure = distanceMeasureCluster.getMeasure();
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; d = distanceMeasure.distance(cluster.getCenter(), vw.get());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this change and CosineDistanceMeasure, the distances are now in the range &lt;span class=&quot;error&quot;&gt;&amp;#91;0,1&amp;#93;&lt;/span&gt;.  &lt;/p&gt;</comment>
                            <comment id="13883801" author="smarthi" created="Tue, 28 Jan 2014 06:06:24 +0000"  >&lt;p&gt;Attaching patch for this fix. Please verify the same before its committed to trunk.&lt;/p&gt;</comment>
                            <comment id="13883826" author="andrew.musselman" created="Tue, 28 Jan 2014 06:52:16 +0000"  >&lt;p&gt;Looks good.&lt;/p&gt;</comment>
                            <comment id="13883887" author="smarthi" created="Tue, 28 Jan 2014 08:20:34 +0000"  >&lt;p&gt;Patch committed.&lt;/p&gt;</comment>
                            <comment id="13884313" author="pferrel" created="Tue, 28 Jan 2014 16:41:12 +0000"  >&lt;p&gt;Ran it through KMeans, FuzzyKMeans, sequential and m/r, and all are producing distances in the right range.&lt;/p&gt;

&lt;p&gt;Looks closed to me.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12617645" name="MAHOUT-1030.patch" size="29310" author="andrew.musselman" created="Sun, 8 Dec 2013 17:04:21 +0000"/>
                            <attachment id="12617611" name="MAHOUT-1030.patch" size="27975" author="andrew.musselman" created="Sun, 8 Dec 2013 04:08:10 +0000"/>
                            <attachment id="12616869" name="MAHOUT-1030.patch" size="27821" author="andrew.musselman" created="Tue, 3 Dec 2013 22:53:10 +0000"/>
                            <attachment id="12616456" name="MAHOUT-1030.patch" size="27813" author="andrew.musselman" created="Sun, 1 Dec 2013 04:16:48 +0000"/>
                            <attachment id="12534109" name="MAHOUT-1030.patch" size="2939" author="jeastman" created="Sat, 30 Jun 2012 16:34:34 +0100"/>
                            <attachment id="12534011" name="MAHOUT-1030.patch" size="2032" author="jeastman" created="Fri, 29 Jun 2012 18:04:53 +0100"/>
                            <attachment id="12531575" name="MAHOUT-1030.patch" size="28081" author="jeastman" created="Sat, 9 Jun 2012 19:57:28 +0100"/>
                            <attachment id="12625526" name="Mahout-1030.patch" size="3683" author="smarthi" created="Tue, 28 Jan 2014 06:06:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 9 Jun 2012 21:03:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>243581</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy1hr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22393</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>