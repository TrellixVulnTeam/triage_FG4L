<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:28:36 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-480/MAHOUT-480.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-480] Replace manual precondition checking with Precondition utility class from Guava</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-480</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Replace manual precondition checking with the Precondition class. This will affect the following classes: &lt;br/&gt;
FileDataModel&lt;br/&gt;
MemoryDiffStorage&lt;br/&gt;
SlopeOneRecommender&lt;br/&gt;
FileDiffStorage&lt;br/&gt;
AbstractJDBCDiffStorage&lt;/p&gt;</description>
                <environment></environment>
        <key id="12471558">MAHOUT-480</key>
            <summary>Replace manual precondition checking with Precondition utility class from Guava</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="eugenparaschiv">Eugen Paraschiv</reporter>
                        <labels>
                    </labels>
                <created>Fri, 13 Aug 2010 15:54:51 +0100</created>
                <updated>Sun, 31 Oct 2010 15:50:12 +0000</updated>
                            <resolved>Sun, 3 Oct 2010 21:53:33 +0100</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12898270" author="eugenparaschiv" created="Fri, 13 Aug 2010 16:13:14 +0100"  >&lt;p&gt;This patch contains initial work on this issue - it does not modify the exception logic of the code at all (throws the exact same exception type with the same message). There are still a few instances where the code might benefit from additional checks. &lt;/p&gt;</comment>
                            <comment id="12898349" author="srowen" created="Fri, 13 Aug 2010 19:13:06 +0100"  >&lt;p&gt;Good one, though the thrust of my message on the dev@ thread was that we ought to do argument checking across the entire codebase this way, or not. I don&apos;t want to use Guava in 5 classes only.&lt;/p&gt;

&lt;p&gt;But I am at the least happy to make sure that the behavior of the code matches what&apos;s in this patch.&lt;/p&gt;</comment>
                            <comment id="12898432" author="eugenparaschiv" created="Fri, 13 Aug 2010 22:47:00 +0100"  >&lt;p&gt;This patch covers a much wider portion of the system, in accordance with the feedback. The goal is to replace manual condition checking throwing IllegalArgumentException with Preconditions.checkArguments calls. If the feedback on this is OK, I will of course continue to cover the rest of the system and provide a second patch. &lt;/p&gt;</comment>
                            <comment id="12899898" author="srowen" created="Wed, 18 Aug 2010 17:35:59 +0100"  >&lt;p&gt;Looking good, are you going further with it?&lt;/p&gt;</comment>
                            <comment id="12913128" author="tdunning" created="Tue, 21 Sep 2010 19:00:37 +0100"  >&lt;p&gt;Eugen,&lt;/p&gt;

&lt;p&gt;This seems like something that can go into 0.4 if you would like to champion the issue.&lt;/p&gt;</comment>
                            <comment id="12913430" author="eugenparaschiv" created="Wed, 22 Sep 2010 08:06:24 +0100"  >&lt;p&gt;Sure, I will submit a full patch in a few days. Thanks. &lt;/p&gt;</comment>
                            <comment id="12917206" author="eugenparaschiv" created="Sat, 2 Oct 2010 16:44:43 +0100"  >&lt;p&gt;The &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-480&quot; title=&quot;Replace manual precondition checking with Precondition utility class from Guava&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-480&quot;&gt;&lt;del&gt;MAHOUT-480&lt;/del&gt;&lt;/a&gt;_v3.patch contains fixes for all of the mahout-core condition checking that was previously done by hand. A few notes: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;some of the checks are verifying multiple independent conditions on one single line; I left most of those as they were, but they should really be broken into independent checks - I can do that after this patch is integrated&lt;/li&gt;
	&lt;li&gt;the guava Preconditions class has more specialized methods for checking various types of conditions; I only used Preconditions.checkArgument() so that the exact type of exception thrown doesn&apos;t change (for example some of the other methods throw NullPointerException instead of IllegalArgumentException)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12917253" author="tdunning" created="Sat, 2 Oct 2010 23:21:59 +0100"  >&lt;p&gt;Eugen,&lt;/p&gt;

&lt;p&gt;I think that there were half a dozen errors in your conversions and at least one error in the original code.  Your patch also had some problems being applied on 3 files, probably due to recent commits.&lt;/p&gt;

&lt;p&gt;I updated the patch to apply cleanly and I have reviewed all 93 files that you changed, correcting the following kinds of items:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;some tests were not negated correctly&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;some of the original checks were backwards&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;when data is included in the message, printf syntax should be used to avoid a string construction if the precondition holds&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;code should use Mahout style&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Can you review this revised patch?&lt;/p&gt;

&lt;p&gt;Also, it is good to keep the same name on the file so that JIRA can see earlier versions and deprecate them.  This can be very important on projects like Hadoop where patches are reviewed automatically.&lt;/p&gt;</comment>
                            <comment id="12917254" author="tdunning" created="Sat, 2 Oct 2010 23:24:18 +0100"  >&lt;p&gt;I think that this can go in if we get one more pair of eyes on my latest patch.&lt;/p&gt;

&lt;p&gt;It may need -p1 to apply.  Or -p0.  I am using git through IDEA which makes it hard to say which kind of patch is produced.&lt;/p&gt;</comment>
                            <comment id="12917316" author="srowen" created="Sun, 3 Oct 2010 11:43:25 +0100"  >&lt;p&gt;I think this is a fairly heroic effort to use Preconditions across the board. My concern had been about getting into a half-way state where Preconditions was used for some but not all such checking. It&apos;s the same sort of issue we&apos;d discussed any number of times about, say, half-using 3 logging systems is worse than none at all, or same for 3 math libraries.&lt;/p&gt;

&lt;p&gt;I find this less of an issue here &amp;#8211; not all arg checking can or must be done with Preconditions. We have no existing consistent system to compete with.&lt;/p&gt;

&lt;p&gt;And, it looks largely like mahout-core is updated. mahout-examples and mahout-utils are not it seems. I could take that on as well as try to find more instances where it can be used in mahout-core.&lt;/p&gt;

&lt;p&gt;mahout-math, perhaps we should not introduce the dependency into.&lt;/p&gt;</comment>
                            <comment id="12917362" author="eugenparaschiv" created="Sun, 3 Oct 2010 17:44:19 +0100"  >&lt;p&gt;I fully understand your concern about inconsistent state, especially from a conceptual point of view. I will open JIRA issues for mahout-math, mahout-examples and mahout-utils and will provide similar patches for them if that is OK. &lt;br/&gt;
From the API perspective, this kind of cross cutting concern is less of a problem, as the guava checks are perfectly aligned with the manual checks that are in place now, meaning that the type of exception thrown is the same, so incremental changes are less of a problem. &lt;br/&gt;
So, now that mahout-core is covered, please tell me how I should go about creating the other JIRA issues so that I can continue with this. &lt;br/&gt;
Thanks. &lt;/p&gt;</comment>
                            <comment id="12917363" author="srowen" created="Sun, 3 Oct 2010 17:58:18 +0100"  >&lt;p&gt;No that&apos;s fine, I will do the rest, to match your effort. I don&apos;t think we should do mahout-math &amp;#8211; I believe we&apos;d wanted to keep the dependencies there minimal as it is reused by at least one other project. (Well, that was my argument at least.)&lt;/p&gt;</comment>
                            <comment id="12917376" author="tdunning" created="Sun, 3 Oct 2010 19:37:06 +0100"  >
&lt;p&gt;I agree that leaving out math for now is a good idea.  &lt;/p&gt;

&lt;p&gt;Has anybody finished checking my patch? &lt;/p&gt;

&lt;p&gt;SHould I commit it anyway?&lt;/p&gt;

&lt;p&gt;Eugen,&lt;/p&gt;

&lt;p&gt;I don&apos;t think it is so bad to change the type of exception if it still makes sense.  Thus, changing an IllegalArgumentException to a NullPointerException isn&apos;t such a bad thing if it makes the code easier to read.  It is officially an API change, but a fairly benign one.&lt;/p&gt;</comment>
                            <comment id="12917377" author="srowen" created="Sun, 3 Oct 2010 19:43:48 +0100"  >&lt;p&gt;Ted I have the patch locally and have added to it as well as fixed a few more typos. I can commit shortly.&lt;/p&gt;

&lt;p&gt;This is a very small point of preference, not one I would insist on, but I like IllegalArgumentException for when you&apos;ve checked an argument for null and found it to be null, and it can&apos;t be. It is perhaps more explicit &amp;#8211; the problem is a bad argument. The description can say what is null. NPE always causes me to guess that there was a developer error inside the library at first glance.&lt;/p&gt;</comment>
                            <comment id="12917380" author="tdunning" created="Sun, 3 Oct 2010 19:52:05 +0100"  >&lt;p&gt;Thanks Sean.&lt;/p&gt;

&lt;p&gt;I have the same preference as you do.  Argument checking is argument checking and null pointer checking in the code is null pointer checking.  The distinction is (slightly) nice to preserve.  On the other hand, I would prioritize ease of reading of the exception type, but only if somebody showed me&lt;br/&gt;
code that was significantly easier to read.&lt;/p&gt;
</comment>
                            <comment id="12917411" author="hudson" created="Sun, 3 Oct 2010 22:56:20 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #368 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/368/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/368/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-480&quot; title=&quot;Replace manual precondition checking with Precondition utility class from Guava&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-480&quot;&gt;&lt;del&gt;MAHOUT-480&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12456215" name="MAHOUT-480.patch" size="155832" author="tdunning" created="Sat, 2 Oct 2010 23:21:59 +0100"/>
                            <attachment id="12456198" name="MAHOUT-480_v3.patch" size="143261" author="eugenparaschiv" created="Sat, 2 Oct 2010 16:44:43 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Aug 2010 18:13:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9583</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy4uv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22938</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>