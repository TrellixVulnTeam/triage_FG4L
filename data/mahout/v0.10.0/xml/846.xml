<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:26:59 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-846/MAHOUT-846.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-846] Improve Scalability of Gaussian Cluster For Wide Vectors</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-846</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;The pdf() implementation in GaussianCluster is pretty lame. It is computing a running product of the element pdfs which, for wide input vectors (Reuters is 41,807), always underflows and returns 0. Here&apos;s the code:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public double pdf(VectorWritable vw) {
    Vector x = vw.get();
    // return the product of the component pdfs
    // TODO: is this reasonable? correct? It seems to work in some cases.
    double pdf = 1;
    for (int i = 0; i &amp;lt; x.size(); i++) {
      // small prior on stdDev to avoid numeric instability when stdDev==0
      pdf *= UncommonDistributions.dNorm(x.getQuick(i),
          getCenter().getQuick(i), getRadius().getQuick(i) + 0.000001);
    }
    return pdf;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  }&lt;/p&gt;</description>
                <environment></environment>
        <key id="12527785">MAHOUT-846</key>
            <summary>Improve Scalability of Gaussian Cluster For Wide Vectors</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jeastman">Jeff Eastman</assignee>
                                    <reporter username="jeastman">Jeff Eastman</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Oct 2011 18:06:36 +0100</created>
                <updated>Thu, 9 Feb 2012 14:01:09 +0000</updated>
                            <resolved>Mon, 26 Dec 2011 14:24:22 +0000</resolved>
                                    <version>0.5</version>
                                    <fixVersion>0.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13131194" author="hudson" created="Thu, 20 Oct 2011 01:10:53 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1104 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1104/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-846&quot; title=&quot;Improve Scalability of Gaussian Cluster For Wide Vectors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-846&quot;&gt;&lt;del&gt;MAHOUT-846&lt;/del&gt;&lt;/a&gt;: Fixed prior of DMCD to have Gaussian element values vs. all 0. Updated build-reuters.sh to use DMCD. All tests run and reuters looks much better.&lt;/p&gt;

&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1186452&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1186452&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/models/DistanceMeasureClusterDistribution.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/bin/build-reuters.sh&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13131309" author="hudson" created="Thu, 20 Oct 2011 04:35:22 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #1105 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1105/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1105/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-846&quot; title=&quot;Improve Scalability of Gaussian Cluster For Wide Vectors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-846&quot;&gt;&lt;del&gt;MAHOUT-846&lt;/del&gt;&lt;/a&gt;: Simplified DistanceMeasureCluster.pdf() to avoid exp(...). Increased DPC iterations to 20 in build-reuters. All tests run&lt;/p&gt;

&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1186540&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1186540&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/DistanceMeasureCluster.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/TestClusterClassifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/bin/build-reuters.sh&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13174953" author="jeastman" created="Thu, 22 Dec 2011 18:22:55 +0000"  >&lt;p&gt;The following code refactors the pdf() function to sum the exponents and perform the exponentiation only once. It produces equivalent results to the old version for DisplayDirichlet and the math seems solid. I introduced two helper methods to make it all clearer. I believe it will handle wide vectors better than the original but have yet to verify that.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; pdf(VectorWritable vw) {
    Vector x = vw.get();
    Vector m = getCenter();
    Vector s = getRadius().plus(0.0000001); &lt;span class=&quot;code-comment&quot;&gt;// add a small prior to avoid divide by zero
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.exp(-(divideSquareAndSum(x.minus(m), s) / 2)) / zProdSqt2Pi(s);
  }
  
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; zProdSqt2Pi(Vector s) {
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; prod = 1;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; s.size(); i++) {
      prod *= s.getQuick(i) * UncommonDistributions.SQRT2PI;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; prod;
  }
  
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; divideSquareAndSum(Vector numerator, Vector denominator) {
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; result = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Iterator&amp;lt;Element&amp;gt; it = denominator.iterateNonZero(); it.hasNext();) {
      Element denom = it.next();
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; quotient = numerator.getQuick(denom.index()) / denom.get();
      result += quotient * quotient;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13175189" author="jeastman" created="Fri, 23 Dec 2011 00:17:11 +0000"  >&lt;p&gt;This version gets rid of all vector operations and caches the zProd2piS term which is constant over the life of the cluster between reCalculations. I don&apos;t really like the lazy evaluation but the alternative is putting it in the constructors and reader. Will see...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;// the value of the zProduct(S*2pi) term. Calculated below.
&lt;/span&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt; zProd2piS = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; pdf(VectorWritable vw) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (zProd2piS == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      computeProd2piS();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.exp(-(sumXminusMdivSsquared(vw.get()) / 2)) / zProd2piS;
  }
  
  /**
   * Compute the product(s[i]*SQRT2PI) over all i
   */
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void computeProd2piS() {
    zProd2piS = 1.0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Iterator&amp;lt;Element&amp;gt; it = getRadius().iterateNonZero(); it.hasNext();) {
      Element se = it.next();
      zProd2piS *= se.get() * UncommonDistributions.SQRT2PI;
    }
  }
  
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void computeParameters() {
    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.computeParameters();
    zProd2piS = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
  }
  
  /**
   * @param x
   *          a Vector
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the zSum(((x[i]-m[i])/s[i])^2) over i
   */
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; sumXminusMdivSsquared(Vector x) {
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; result = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Iterator&amp;lt;Element&amp;gt; it = getRadius().iterateNonZero(); it.hasNext();) {
      Element se = it.next();
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; quotient = (x.get(se.index()) - getCenter().get(se.index()))
          / se.get();
      result += quotient * quotient;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13175255" author="hudson" created="Fri, 23 Dec 2011 03:53:36 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1265 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1265/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1265/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-846&quot; title=&quot;Improve Scalability of Gaussian Cluster For Wide Vectors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-846&quot;&gt;&lt;del&gt;MAHOUT-846&lt;/del&gt;&lt;/a&gt;: Minor refactoring to eliminate unnecessary vector.times(SQRT2PI)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-846&quot; title=&quot;Improve Scalability of Gaussian Cluster For Wide Vectors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-846&quot;&gt;&lt;del&gt;MAHOUT-846&lt;/del&gt;&lt;/a&gt;: Refactored pdf() to sum the exponents and perform the exponentiation only once. All tests run&lt;/p&gt;

&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1222443&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1222443&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/models/GaussianCluster.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1222420&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1222420&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/UncommonDistributions.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/models/GaussianCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13175277" author="hudson" created="Fri, 23 Dec 2011 05:03:34 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1266 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1266/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1266/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-846&quot; title=&quot;Improve Scalability of Gaussian Cluster For Wide Vectors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-846&quot;&gt;&lt;del&gt;MAHOUT-846&lt;/del&gt;&lt;/a&gt;: Cache pdf zProd2piR term constant over life of cluster&lt;/p&gt;

&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1222524&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1222524&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/models/GaussianCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13175940" author="jeastman" created="Mon, 26 Dec 2011 14:24:22 +0000"  >&lt;p&gt;Committed changes to GaussianCluster.pdf(). Overloaded setRadius() to calculate zProd2piR denominator vs lazy initialization in above patch. All tests run and pdf() is significantly faster with no new Vectors created.&lt;/p&gt;</comment>
                            <comment id="13175954" author="hudson" created="Mon, 26 Dec 2011 15:59:26 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1272 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1272/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1272/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-846&quot; title=&quot;Improve Scalability of Gaussian Cluster For Wide Vectors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-846&quot;&gt;&lt;del&gt;MAHOUT-846&lt;/del&gt;&lt;/a&gt;: Improved scalability of GaussianCluster.pdf. Introduced some beginnings for &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-933&quot; title=&quot;Implement mapreduce version of ClusterIterator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-933&quot;&gt;&lt;del&gt;MAHOUT-933&lt;/del&gt;&lt;/a&gt;. All tests run.&lt;/p&gt;

&lt;p&gt;jeastman : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1224730&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1224730&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/AbstractCluster.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/CIMapper.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/CIReducer.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/Cluster.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/ClusterClassifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/ClusterIterator.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/Model.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletCluster.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/models/GaussianCluster.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/TestClusterClassifier.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayDirichlet.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayFuzzyKMeans.java&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayKMeans.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Oct 2011 00:10:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>89282</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy2m7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22575</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>