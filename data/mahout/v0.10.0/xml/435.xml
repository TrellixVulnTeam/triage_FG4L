<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:16:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-435/MAHOUT-435.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-435] Add assign(DenseVector)/assign(DenseMatrix) function to DenseVector/DenseMatrix</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-435</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;This new feature would add a new overloaded assign function to (Dense)Vector/(Dense)Matrix, that allows to assign the content of another (Dense)Vector / (Dense)Matrix by overwriting the content of the internal double array. Compared to using .clone(), this feature would reduce the number of memory allocations. &lt;/p&gt;

&lt;p&gt;For example in case of an iterative algorithm, that needs to check for convergence;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;Convergence check using .clone()&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Densematrix newMatrix = oldMatrix.clone();
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(!converged)
{
    &lt;span class=&quot;code-comment&quot;&gt;// perform iteration computation on newMatrix
&lt;/span&gt;    converged=checkConvergence(newMatrix,oldMatrix);
    oldMatrix = newMatrix.clone(); &lt;span class=&quot;code-comment&quot;&gt;// results in memory allocation
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;Convergence check using .assign(Matrix)&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Densematrix newMatrix = oldMatrix.clone();
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(!converged)
{
    &lt;span class=&quot;code-comment&quot;&gt;// perform iteration computation on newMatrix
&lt;/span&gt;    converged=checkConvergence(newMatrix,oldMatrix);
    oldMatrix.assign(newMatrix); &lt;span class=&quot;code-comment&quot;&gt;// no memory allocation
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12468628">MAHOUT-435</key>
            <summary>Add assign(DenseVector)/assign(DenseMatrix) function to DenseVector/DenseMatrix</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="mheimel">Max Heimel</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Jul 2010 14:07:46 +0100</created>
                <updated>Sat, 21 May 2011 04:19:00 +0100</updated>
                            <resolved>Sat, 15 Jan 2011 16:36:45 +0000</resolved>
                                                    <fixVersion>0.5</fixVersion>
                                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12885587" author="mheimel" created="Tue, 6 Jul 2010 17:30:57 +0100"  >&lt;p&gt;Patch to add assign(DenseVector) to DenseVector.java and assign(DenseMatrix) to DenseMatrix.java&lt;/p&gt;</comment>
                            <comment id="12885590" author="tdunning" created="Tue, 6 Jul 2010 17:40:24 +0100"  >
&lt;p&gt;Max, can you test to see how much difference the lack of allocation actually makes to your code?  We should still add this patch, but it will help us all to have a reference point regarding how much difference it makes.&lt;/p&gt;

&lt;p&gt;My question really pertains to the cost of relatively large highly ephemeral (on average) allocations.  Since there is quite a bit of work that goes on with the contents of the copy, it may be that the cost of allocating and then almost always collecting the copy would be very small.&lt;/p&gt;
</comment>
                            <comment id="12885591" author="tdunning" created="Tue, 6 Jul 2010 17:43:35 +0100"  >
&lt;p&gt;My only common on this patch is that it appears to not match the overall Mahout style.  Whoever commits it should fix the indentation (remove tabs!) and add braces to the if statement and for loops.&lt;/p&gt;
</comment>
                            <comment id="12982144" author="hudson" created="Sat, 15 Jan 2011 18:32:37 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #557 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/557/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/557/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-435&quot; title=&quot;Add assign(DenseVector)/assign(DenseMatrix) function to DenseVector/DenseMatrix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-435&quot;&gt;&lt;del&gt;MAHOUT-435&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12985230" author="lancenorskog" created="Sun, 23 Jan 2011 01:34:15 +0000"  >&lt;p&gt;Does the Java type system really support this? Does &apos;assign(Vector)&apos; always defer to &apos;assign(DenseVector) when called from other objects?&lt;/p&gt;
</comment>
                            <comment id="12985291" author="srowen" created="Sun, 23 Jan 2011 10:55:25 +0000"  >&lt;p&gt;This overriding is legal (it compiles after all). It does not change run-time behavior, but, changes compile-time behavior. Passing a reference of type DenseVector will statically bind to the second one. Calling with a reference of type Vector than points to a DenseVector will statically bind to the first.&lt;/p&gt;

&lt;p&gt;The major drawback to this approach is simply that it requires the caller to understand those semantics and get the reference type right to take advantage. An alternative, but one with equal but different design issues, is one method with &quot;instanceof&quot; checks.&lt;/p&gt;

&lt;p&gt;I think the right-er design would be an isDense() flag or something that affects behavior within one method. However for now I was just committing the patch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12448794" name="MAHOUT-435.diff" size="1865" author="mheimel" created="Tue, 6 Jul 2010 17:30:57 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Jul 2010 16:40:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9628</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy54v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22983</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>