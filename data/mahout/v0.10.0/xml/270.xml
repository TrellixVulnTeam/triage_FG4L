<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:16:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-270/MAHOUT-270.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-270] Make ClusterDumper dump Dirichlet clusters too</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-270</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Given the binary representation of models/clusters in Dirichlet, extend the ClusterDumper utility to dump out a printable representation of them too.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12446838">MAHOUT-270</key>
            <summary>Make ClusterDumper dump Dirichlet clusters too</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jeastman">Jeff Eastman</assignee>
                                    <reporter username="jeastman">Jeff Eastman</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Jan 2010 17:44:44 +0000</created>
                <updated>Sun, 31 Oct 2010 15:49:05 +0000</updated>
                            <resolved>Tue, 18 May 2010 17:47:59 +0100</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12806873" author="jeastman" created="Sun, 31 Jan 2010 22:24:49 +0000"  >&lt;p&gt;In the beginning, vectors, canopies and clusters needed a serialization mechanism and asFormatString() was invented. Also invented but not expressed in interfaces were their deserialization counterparts, static methods decodeCanopy(), decodeCluster() and decodeVector(). These ad-hoc encodings worked adequately for a time but were soon replaced by standard Json encodings as newer entities embodied more complicated state and the ad-hoc methods became unworkable. Shortly after that, the quest for speed (and improvements in Hadoop support) led to the adoption of Writable encodings and SequenceFiles by all Mahout entities.&lt;/p&gt;

&lt;p&gt;Of course, binary encodings are impossible to use for debugging so some clustering entities use asFormatString() as their toString() implementations and also as a human-readable option for final output. As more kinds of clustering were implemented some refactoring was indicated and ClusterBase was invented to abstract out the center and centroid calculations common among them. Then came Dirichlet which has no notion of centers, nor centroid calculations so it makes little sense to generalize them under ClusterBase. DirichletClusters have only a domain-specific Model and totalCount and these are serialized/deserialized entirely using Writable (asFormatString() only prints the model&apos;s toString() output and there is no decode() static method).&lt;/p&gt;

&lt;p&gt;Even more recently, users doing text clustering needed better sparse vector implementations and utilities for working with term vectors. ClusterDumper and VectorHelper utilities were added to meet these needs. ClusterDumper can output either a Json encoding of the center of a cluster or a VectorHelper.vectorToString() representation which can include a term dictionary to make the output more human-readable.&lt;/p&gt;

&lt;p&gt;It should now be obvious to all that making ClusterDumper dump DirichletClusters too will take some serious refactoring. I have some thoughts about how to accomplish that, but it seems to be a good time to revisit the user requirements so we do not perpetuate unnecessary or obsolete stuff. Could I get some comments on the following requirements?&lt;/p&gt;

&lt;p&gt;1. We need an efficient, binary encoding for serialization and deserialization. (I take this as a given and that Writable is it, but feel free to disagree)&lt;br/&gt;
2. We need a Json encoding encoding for serialization and deserialization. &lt;br/&gt;
3. We need a complete, human-readable encoding for output only. (Json qualifies here)&lt;br/&gt;
4. We need a human-readable encoding for output only. (Json qualifies here too but others may be more usable)&lt;br/&gt;
5. We need a human-readable toString() encoding for debugging only.&lt;/p&gt;</comment>
                            <comment id="12830741" author="jeastman" created="Sun, 7 Feb 2010 18:52:18 +0000"  >&lt;p&gt;I&apos;d like to deprecate the asFormatString() methods in Vector, Matrix and elsewhere, replacing instead with a new interface:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Printable {

  /**
   * Produce a custom, printable representation of the receiver.
   * 
   * @param bindings an optional &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] containing label bindings used to format the primary 
   *    Vector/s of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; implementation.
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; asFormatString(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] bindings);

  /**
   * Produce a printable representation of the receiver using Json. (Label bindings
   * are &lt;span class=&quot;code-keyword&quot;&gt;transient&lt;/span&gt; and not part of the Json representation)
   * 
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; a Json &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; asJsonString();

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This interface would be implemented by all classes that currently implement Writable and which need to be dumped by the cluster dumper. This includes ClusterBase and DirichletCluster and Model. Implementing these changes would allow the cluster dumper to dump both species of clusters.&lt;/p&gt;</comment>
                            <comment id="12831678" author="jeastman" created="Tue, 9 Feb 2010 21:32:55 +0000"  >&lt;p&gt;r908235 commits the Printable interface and implements it in ClusterBase, DirichletCluster and Model. It does not modify ClusterDumper so current dump formats are unchanged, but that is the remaining task to complete this issue.&lt;/p&gt;

&lt;p&gt;Here is what was done versus the above requirements:&lt;br/&gt;
1. We need an efficient, binary encoding for serialization and deserialization: No changes to Writable utilization&lt;br/&gt;
2. We need a Json encoding encoding for serialization and deserialization: asJsonString in Printable interface supports this&lt;br/&gt;
3. We need a complete, human-readable encoding for output only: recommend using asJsonString if completeness is needed&lt;br/&gt;
4. We need a human-readable encoding for output only: asFormatString(bindings) implements simplified, more readable notations with optional bindings&lt;br/&gt;
5. We need a human-readable toString() encoding for debugging only: toString generally calls asFormatString(null)&lt;/p&gt;</comment>
                            <comment id="12854742" author="jeastman" created="Thu, 8 Apr 2010 01:11:35 +0100"  >&lt;p&gt;r931372 renames Printable to Cluster and adds getId, getNumPoints and getCenter methods needed by the original ClusterDumper. Updated the ClusterDumper to use the new interface. Added unit tests of Canopy, KMeans and Dirichlet all using the same ClusterDumper basic display. All tests run but more polishing and testing is needed to ensure all features are working correctly.&lt;/p&gt;</comment>
                            <comment id="12868724" author="jeastman" created="Tue, 18 May 2010 17:47:59 +0100"  >&lt;p&gt;Resolving this as tests are all positive and code is stable&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9795</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy65j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23148</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>