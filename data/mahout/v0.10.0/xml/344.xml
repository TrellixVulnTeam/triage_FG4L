<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:15:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-344/MAHOUT-344.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-344] Minhash based clustering </title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-344</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Minhash clustering performs probabilistic dimension reduction of high dimensional data. The essence of the technique is to hash each item using multiple independent hash functions such that the probability of collision of similar items is higher. Multiple such hash tables can then be constructed  to answer near neighbor type of queries efficiently.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12459826">MAHOUT-344</key>
            <summary>Minhash based clustering </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ankur">Ankur</assignee>
                                    <reporter username="ankur">Ankur</reporter>
                        <labels>
                    </labels>
                <created>Mon, 22 Mar 2010 07:44:04 +0000</created>
                <updated>Tue, 29 Nov 2011 13:18:44 +0000</updated>
                            <resolved>Fri, 1 Oct 2010 08:40:45 +0100</resolved>
                                    <version>0.3</version>
                                    <fixVersion>0.4</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12848049" author="ankur" created="Mon, 22 Mar 2010 07:58:08 +0000"  >&lt;p&gt;As per &quot;Yonik&apos;s law of patches&quot; submitting my implementation. Please feel free to provide ideas for improvement or even submit an improved patch. &lt;/p&gt;</comment>
                            <comment id="12849402" author="cristi" created="Wed, 24 Mar 2010 20:15:48 +0000"  >&lt;p&gt;I&apos;ve studied the min-hash algorithm these days, and your implementation a little bit. Also been looking through Mahout&apos;s code, the wiki, how to contribute etc.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking to try my hand at applying a patch to Mahout before submitting my proposal for GSoC. I would like to extend/improve this implementation. Could you please point out a way/idea on how I might do this ? (I would leave it&apos;s integrating with Taste as a second task for me.)&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="12849598" author="ankur" created="Thu, 25 Mar 2010 06:34:49 +0000"  >&lt;p&gt;Appreciate your interest in this. I&apos;d suggest that we pick a dataset to try this on and then make changes as required. &lt;br/&gt;
For ideas :-&lt;br/&gt;
    1.  Clustering  a p2p dataset like this - &lt;a href=&quot;http://warsteiner.db.cs.cmu.edu/db-site/Datasets/graphData/eDoneky-p2p/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://warsteiner.db.cs.cmu.edu/db-site/Datasets/graphData/eDoneky-p2p/&lt;/a&gt; to find out nodes closer to each other. &lt;br/&gt;
    2.  Clustering similar items/songs in this - &lt;a href=&quot;http://www.iua.upf.es/~ocelma/MusicRecommendationDataset/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.iua.upf.es/~ocelma/MusicRecommendationDataset/index.html&lt;/a&gt; for recommendations.&lt;/p&gt;

&lt;p&gt;Talking about missing things in the implementation:-&lt;br/&gt;
   1. Option of more hash functions for user&apos;s to experiment with. &lt;br/&gt;
   2. Code for cluster goodness evaluation (Precision/Recall tests?)&lt;br/&gt;
   3. Unit tests for completeness.&lt;/p&gt;

&lt;p&gt;May be other Mahout folks can take a quick look at the patch and suggest more ideas.   &lt;/p&gt;</comment>
                            <comment id="12851416" author="cristi" created="Tue, 30 Mar 2010 15:38:23 +0100"  >&lt;p&gt;I ran the code on the last.fm data set (2.). Due to the nature of the data set I had to write a small program that converts it to the a format used by the algorithm. Also I have clustered similar users instead of songs (the transformation I mentioned above was easier to do) and I wanted to see how does the algorithm runs. I&apos;ve used MurmurHash for mapping artists hashes to integers - which can be used by the min-hash algorithm. &lt;/p&gt;

&lt;p&gt;Related to this I would like to ask, how does Mahout usually deals with this kind of situations: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Is there a standard formatting for the input on each clustering alg or the input format follows the same rules for all algorithms, and then the users write conversion tools which ?&lt;/li&gt;
	&lt;li&gt;would it be ok if I attach the code which does an example of running min-hash clustering in the examples dirs ? (it would first convert the dataset format accordingly)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@Ankur: you are using a DdistributedCache for sharing the hash functions. That requires the distributed file to be on HDFS as far as I know. I believe it would be nice to have a flag or something which allows storing the hash on &quot;normal&quot; file system, for testing purposes. What do you think ?&lt;/p&gt;

&lt;p&gt;Sorry everybody If I&apos;m doing something wrong, it&apos;s the first time I&apos;m contributing to an open source project. &lt;/p&gt;</comment>
                            <comment id="12851686" author="drew.farris" created="Wed, 31 Mar 2010 02:28:28 +0100"  >&lt;p&gt;Hi Cristi,&lt;/p&gt;

&lt;p&gt;Sounds like a great start. Answers for a couple of your questions:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is there a standard formatting for the input on each clustering alg or the input format follows the same rules for all algorithms, and then the users write conversion tools which ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Take a look at the various Vector clases in the math module and the VectorWritable wrapper. Most of the clustering algorithms take vectors of one kind or another as input and the assumption is that users will write tools to convert their data to these common formats. The wiki page &lt;a href=&quot;http://cwiki.apache.org/MAHOUT/creating-vectors-from-text.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/MAHOUT/creating-vectors-from-text.html&lt;/a&gt; is a good place to start&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;would it be ok if I attach the code which does an example of running min-hash clustering in the examples dirs ? (it would first convert the dataset format accordingly)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Go for it, code is good, patches are even better, see: &lt;a href=&quot;http://cwiki.apache.org/MAHOUT/howtocontribute.html#HowToContribute-Creatingthepatchfile&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/MAHOUT/howtocontribute.html#HowToContribute-Creatingthepatchfile&lt;/a&gt; and simply attach it to this issue. &lt;/p&gt;</comment>
                            <comment id="12851756" author="ankur" created="Wed, 31 Mar 2010 08:29:54 +0100"  >&lt;p&gt;Drew, thanks for pitching in as I&apos;ve been running super busy with some crap &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;@Cristi&lt;br/&gt;
That&apos;s right but its totally unnecessary as each of the mappers can do their own initialization of hash functions. They will be the same hash function if they used the same seed for java.util.Random(). So distributed cache can be removed alltogther with that change. The code will be shorter and simpler.&lt;/p&gt;

&lt;p&gt;What is the min-cluster size you are using? How many hash hash functions? How many hashes are grouped together? &lt;br/&gt;
We will need some tests to show how good the clusters are. As a start we can compute a simple metrics like average similarity of items within a cluster aggregated over all clusters.&lt;/p&gt;</comment>
                            <comment id="12853117" author="cristi" created="Sat, 3 Apr 2010 12:01:16 +0100"  >&lt;p&gt;Thank you guys for all the encouragement and advices. &lt;/p&gt;

&lt;p&gt;I&apos;m committing my first patch for MinHah clustering. The patch contain the following things:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;in core - minhash:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;MinHashMapRed - removed the distributed hash need; Each mapper generates the same hash functions using the same seed (as per instructions from Ankur).&lt;/li&gt;
	&lt;li&gt;RandomLinearHashFunction - added another random linear hash function in form: h( x ) = ax + b mod p . p will be as big as possible &amp;gt; 10000000 and it should be prime(not done yet, but committing in this form due to some time restrictions) .&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;in examples - minhash directory:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;DisplayMinHash - contains an example of running min-hash, with the options commented. It&apos;s basically the main function from MinHashMapRed.&lt;/li&gt;
	&lt;li&gt;PrepareDataset - this class offers the ability to convert the last-fm database suggested above in a format readable by the MinHash algorithm. It also shows a progress bar with the percent done &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; .&lt;br/&gt;
For the future I believe that all the code in the algorithm should take a more generalized form and use the Vectors classes used by Mahout, then the users could either write their own version with a Vector interface or create a tool that converts their ds to the vector format the code will know.&lt;br/&gt;
MurmurHash is used by PrepareDataset to hash the strings which denoted users (in the original last_fm dataset) - to integers. &lt;/li&gt;
	&lt;li&gt;TestClusterQuality - gets a clustered file, generated by the minhash algorithm and computes the average for each cluster aggregated over all clusters.&lt;br/&gt;
In each cluster the mean is computed by:&lt;br/&gt;
SUM (similarity (item_i, item_j)) / TOTAL_SIMILARITIES, for i &lt;span class=&quot;error&quot;&gt;Unable to render embedded object: File (= j . TOTAL_SIMILARITIES = n) not found.&lt;/span&gt; / k! * (n -k)!, n = total number of items in cluster, k = 2.&lt;br/&gt;
The aggregated mean is the mean of all these values. &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As an example. Having the following input:&lt;/p&gt;

&lt;p&gt;1	1	2	3	4	5&lt;br/&gt;
2	1	2	3	4	6&lt;br/&gt;
3	7	6	3	8	9&lt;br/&gt;
4	7	8	9	6	1&lt;br/&gt;
5	5	6	7	8	9&lt;br/&gt;
6	8	7	5	6&lt;/p&gt;

&lt;p&gt;The first column are the users. For each user, on the lines we have the items preferred (browsed, listened to) by him. Same format in the contents of each cluster bellow. &lt;/p&gt;

&lt;p&gt;we get the following output(PARAMETERS: 20 hash functions, 4 keygroups (hash indices in a bucket), 2 - minimum items within cluster):&lt;/p&gt;

&lt;p&gt;CLUSTER ID &amp;#8211; 2359983695385880352354530253637788 (items=2)	&lt;br/&gt;
=========================================&lt;br/&gt;
2	1	2	3	4	6&lt;br/&gt;
1	1	2	3	4	5&lt;/p&gt;

&lt;p&gt;CLUSTER ID &amp;#8211; 236643825172184878353970117486898894 (items=2)	&lt;br/&gt;
=========================================&lt;br/&gt;
4	7	8	9	6	1&lt;br/&gt;
3	7	6	3	8	9&lt;/p&gt;

&lt;p&gt;CLUSTER ID &amp;#8211; 35606006580772015548743126287496777 (items=2)	&lt;br/&gt;
=========================================&lt;br/&gt;
6	8	7	5	6&lt;br/&gt;
5	5	6	7	8	9&lt;/p&gt;

&lt;p&gt;CLUSTER ID &amp;#8211; 38797144231157365543316465389702468 (items=2)	&lt;br/&gt;
=========================================&lt;br/&gt;
6	8	7	5	6&lt;br/&gt;
5	5	6	7	8	9&lt;/p&gt;

&lt;p&gt;The aggregated average over theses clusters is 0.6793650793650793.&lt;/p&gt;

&lt;p&gt;I&apos;m now testing on the last_fm dataset. The problem I currently encounter is that the size for the clustered file is kind of big, but I&apos;m working on tuning the params. &lt;/p&gt;</comment>
                            <comment id="12853118" author="cristi" created="Sat, 3 Apr 2010 12:03:55 +0100"  >&lt;p&gt;See comment above for this patch. &lt;/p&gt;</comment>
                            <comment id="12872126" author="srowen" created="Thu, 27 May 2010 08:44:13 +0100"  >&lt;p&gt;Just cleaning house here &amp;#8211; is this suitable for committing? I don&apos;t see any comments to the contrary. Maybe you are in the best position to comment Ankur?&lt;/p&gt;</comment>
                            <comment id="12873541" author="ankur" created="Mon, 31 May 2010 05:38:38 +0100"  >&lt;p&gt;Just back from a vacation. I am catching up with a lot of things so won&apos;t be able to review Cristi&apos;s changes for next 3 - 4 days but I am hoping that any further changes would be minor. &lt;/p&gt;

&lt;p&gt;Cristi, do you have some results to share from your testing over last.fm dataset ? &lt;/p&gt;

&lt;p&gt;Once this is in we can start working towards using this to generate recommendations.&lt;/p&gt;</comment>
                            <comment id="12894286" author="srowen" created="Sat, 31 Jul 2010 16:08:36 +0100"  >&lt;p&gt;Just cleaning house and pinging this issue. Since it&apos;s possibly a &apos;bug&apos; want to make sure it&apos;s not dropped.&lt;/p&gt;</comment>
                            <comment id="12894476" author="cristi" created="Mon, 2 Aug 2010 08:13:52 +0100"  >&lt;p&gt;Sorry for the big delay - I had to finish my dissertation and other stuff. Anyways, here are some things I managed to do and for which I commit a patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Converted the existing code to work with hadoop 0.20+&lt;/li&gt;
	&lt;li&gt;Converted the input of the algorithm to RandomAccessSparseVector&lt;/li&gt;
	&lt;li&gt;Converted the LastFM db into RandomAccessSparseVector format&lt;/li&gt;
	&lt;li&gt;Added command options using the DefaultOptionCreator mechanism&lt;br/&gt;
Running the MinHash clustering algorithm can be done using a configuration like this:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;del&gt;i(&lt;/del&gt;-input) lastfm/med_db_seq &lt;br/&gt;
&lt;del&gt;o(&lt;/del&gt;-output) lastfm/med_db_clusters &lt;br/&gt;
&lt;del&gt;mcs(&lt;/del&gt;-minClusterSize) 5 &lt;br/&gt;
&lt;del&gt;nh(&lt;/del&gt;-numHashFunctions) 2 &lt;br/&gt;
&lt;del&gt;kg(&lt;/del&gt;-keyGroups) 2  &lt;br/&gt;
&lt;del&gt;ow(&lt;/del&gt;-overwriteOutput)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Evaluating the clustering results with the above configuration using the metric suggested by Ankur yields a value of 0.20303965982542901 .. which is not to good IMO. I will still run tests with other parameters and see what happens.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The following steps are the following:&lt;br/&gt;
1. write tests for the current code (doing this now);&lt;br/&gt;
2. refactor the code so that it uses &quot;points&quot; and &quot;vectors&quot; instead of &quot;items&quot; and &quot;users&quot;. The algorithm will also cluster text files, for finding very similar files. &lt;br/&gt;
3. Write some documentation on how to use the algorithm. &lt;br/&gt;
4. Investigate a more general format for the output algorithm (Vectors or something like that). &lt;/p&gt;

&lt;p&gt;If you have any suggestions I would very much like to hear them. &lt;/p&gt;
</comment>
                            <comment id="12894477" author="cristi" created="Mon, 2 Aug 2010 08:15:02 +0100"  >&lt;p&gt;See above comment. &lt;/p&gt;</comment>
                            <comment id="12896771" author="ankur" created="Tue, 10 Aug 2010 06:42:14 +0100"  >&lt;p&gt;Marking as fix for version 0.4. I will review Cristi&apos;s patch in a day to see if we need any changes. Besides that can anyone take a cursory look to suggest what else this patch needs to make it to 0.4&lt;/p&gt;</comment>
                            <comment id="12913112" author="tdunning" created="Tue, 21 Sep 2010 18:50:46 +0100"  >&lt;p&gt;Ankur?&lt;/p&gt;

&lt;p&gt;How does this look for committing?&lt;/p&gt;</comment>
                            <comment id="12913560" author="ankur" created="Wed, 22 Sep 2010 15:04:16 +0100"  >&lt;p&gt;Hi Ted,&lt;br/&gt;
             There is bit of work left in this, specifically:-&lt;/p&gt;

&lt;p&gt;1. Adding murmurhash as an option for available hash functions. Looks like I can use the checkin of &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-503&quot; title=&quot;Bad murmur hash implementation ?!?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-503&quot;&gt;&lt;del&gt;MAHOUT-503&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
2. Unit test case completion demonstrating correctness.&lt;br/&gt;
3. Example code completion and cleanup. After a bit of thought I feel that the average item similarity across all clusters might not be a good criteria for a probabilistic clustering technique like this. Instead I am planning to write a unit test to calculate precision as folllows:-&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Set a min similarity threshold for intra cluster items, for e.x 0.4&lt;/li&gt;
	&lt;li&gt;For each cluster out of randomly selected subset of all clusters, run pairwise similarity test to count true positives (TP) that pass the threshold.&lt;/li&gt;
	&lt;li&gt;Precision = (TP/Total-items-in-clusters)&lt;br/&gt;
Do you see any problems ? Any other suggestions ?&lt;br/&gt;
4. Documentation and cleanup.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I should be able to provide an updated patch by end of this week and with one more round of review and changes this should be good to go in by end of next week. If the timeline sounds acceptable for 0.4 then we&apos;re good else we&apos;ll have to push this one out to 0.5&lt;/p&gt;</comment>
                            <comment id="12913564" author="tdunning" created="Wed, 22 Sep 2010 15:14:58 +0100"  >&lt;p&gt;Sounds like end of the week is a good time to decide.&lt;/p&gt;</comment>
                            <comment id="12914867" author="ankur" created="Sat, 25 Sep 2010 20:42:39 +0100"  >&lt;p&gt;Finally some action from my side &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;1. HashFunction is now an interface with a single method - hash().&lt;br/&gt;
2. Implementations of different hash functions are now moved to a HashFactory that also provides factory method for fetching hashFunctions of a requested type (linear, polynomial, murmur).&lt;br/&gt;
3. Minhash mapper/reducer code cleaned up quite a bit.&lt;br/&gt;
4. Added options for minimum vector size and hashType.&lt;/p&gt;

&lt;p&gt;Pending tasks&lt;br/&gt;
1. Fix the Unit test case.&lt;br/&gt;
2. Fix example code over Last FM dataset.&lt;br/&gt;
3. Add Javadoc documentation.&lt;/p&gt;

&lt;p&gt;I hope to complete the above task by EOD tomorrow and submit a new patch.     &lt;/p&gt;</comment>
                            <comment id="12915022" author="ankur" created="Sun, 26 Sep 2010 20:26:32 +0100"  >&lt;p&gt;Updated patch with complete minhash implementation along with Unit test case. However I did not get enough time to finish&lt;/p&gt;

&lt;p&gt;1. Javadoc comments to my satisfaction.&lt;br/&gt;
2. Example code re-write for Last.fm dataset.&lt;/p&gt;

&lt;p&gt;While I&apos;ll be certainly completing the javadoc comments within a days time, the example code rewrite might stretch this to a couple of days.&lt;/p&gt;

&lt;p&gt;Ted/Sean can you please take a look and provide review comments ? &lt;/p&gt;</comment>
                            <comment id="12916186" author="ankur" created="Wed, 29 Sep 2010 17:14:39 +0100"  >&lt;p&gt;Updated (and hopefully) penultimate patch with&lt;/p&gt;

&lt;p&gt;1. All the code issues Fixed after another round of cleanup and testing.&lt;br/&gt;
2. Example code for conversion of LastFM dataset into Mahout vector format written to sequenceFiles.&lt;br/&gt;
3. Cluster quality evaluation code for analyzing the precision at various similarity thresholds.&lt;/p&gt;

&lt;p&gt;Here are the steps to run the clustering code on Last FM dataset after applying the patch and building mahout jars :-&lt;/p&gt;

&lt;p&gt;1. Download  &lt;a href=&quot;http://mtg.upf.edu/static/datasets/last.fm/lastfm-dataset-360K.tar.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mtg.upf.edu/static/datasets/last.fm/lastfm-dataset-360K.tar.gz&lt;/a&gt; and uncompress and untar into a local dir.&lt;/p&gt;

&lt;p&gt;2. Run the following command to create data converted into vector format, dumped into sequence files:-&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;java -Xms512m -Xmx512m -cp  /path/to/commons-logging-1.0.4.jar:/path/to/log4j-1.2.15.jar:/path/to/hadoop-0.20.2-core.jar:/path/to/mahout-math-0.4-SNAPSHOT.jar:/path/to/mahout-examples-0.4-SNAPSHOT.jar:/path/to/mahout-core-0.4-SNAPSHOT.jar org.apache.mahout.clustering.minhash.LastfmDataConverter /path/to/lastfm-dataset-360K/usersha1-artmbid-artname-plays.tsv /path/to/lastfm-vector-formated.seq&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;3. Upload file &apos;lastfm-vector-formated.seq&apos; to DFS dir &apos;lastfm&apos;&lt;/p&gt;

&lt;p&gt;4. Before running the clustering MR job do the following on the shell prompt:-&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;export HADOOP_CLASSPATH=/path/to/mahout-math-0.4-SNAPSHOT.jar:/path/to/mahout-core-0.4-SNAPSHOT.jar:/path/to/commons-cli-2.0-mahout.jar.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;5. Run the clustering MR job on the data. Here is a sample command line&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hadoop jar /path/to/mahout-core-0.4-SNAPSHOT.jar  org.apache.mahout.clustering.minhash.MinHashDriver -Dio.sort.mb=256 -Dio.sort.factor=20 -libjars /path/to/mahout-math-0.4-SNAPSHOT.jar --input lastfm  --output lastfm-out --minClusterSize 10 --minVectorSize 10 --hashType polynomial --numHashFunctions 60 --keyGroups 2 --debugOutput true --numReducers 1&lt;/li&gt;
	&lt;li&gt;Note:- debugOutput is set to true so that entire vectors are clustered which later on will be used for similarity computation in quality evaluation.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;6. Download the file under &apos;lastfm-out&apos; to local dir and run the evaluation code as follows:-&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;java -cp /path/to/commons-logging-1.0.4.jar:/path/to/log4j-1.2.15.jar:/path/to/hadoop-0.20.2-core.jar:/path/to/mahout-math-0.4-SNAPSHOT.jar:/path/to/mahout-examples-0.4-SNAPSHOT.jar:/path/to/mahout-core-0.4-SNAPSHOT.jar org.apache.mahout.clustering.minhash.LastfmClusterEvaluator lastfm-cluster-data.seq 0.2 0.5&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here are some of the results I got with different threshold parameters and sampling parameters&lt;/p&gt;

&lt;p&gt;Test Results&lt;br/&gt;
=============&lt;br/&gt;
 (A) Listeners in same cluster with simiarity above threshold (0.2) : 4997&lt;br/&gt;
 (B) All listeners: 15564&lt;br/&gt;
 Average cluster precision: A/B = 32.11 &lt;/p&gt;

&lt;p&gt;(A) Listeners in same cluster with simiarity above threshold (0.3) : 1872&lt;br/&gt;
 (B) All listeners: 15564&lt;br/&gt;
 Average cluster precision: A/B = 12.03&lt;/p&gt;

&lt;p&gt;The only task remaining here is updating Javadoc comments and incorporating any review comments. Apart from those 2 this should be good to go in.&lt;/p&gt;</comment>
                            <comment id="12916403" author="srowen" created="Thu, 30 Sep 2010 08:41:14 +0100"  >&lt;p&gt;I&apos;m ready to commit after adjusting the code for project code style. However there are two outstanding issues IMHO:&lt;/p&gt;

&lt;p&gt;Catching OutOfMemoryError &amp;#8211; this looks bad. Is it really possible to proceed in this case versus just crashing?&lt;br/&gt;
Random &amp;#8211; java.util.Random is used directly and hard-coded to a seed. Should it not use an un-seeded RNG? and use RandomUtils.getRandom() in particular so that tests are repeatable? But then the tests fail for me.&lt;/p&gt;

&lt;p&gt;Don&apos;t need a new patch, perhaps just targeted advice on how we might adjust for these as necessary.&lt;/p&gt;</comment>
                            <comment id="12916435" author="ankur" created="Thu, 30 Sep 2010 11:51:13 +0100"  >&lt;p&gt;&amp;gt; Catching OutOfMemoryError&lt;br/&gt;
LastfmClusterEvaluator - I was getting OOME as I was trying to run this on simply concatenated sequence files. Don&apos;t think we can proceed in this case as simply concatenated sequence files essentially mean corrupt data. Once this was fixed, there was no problem so we can safely remove the OOME catch block.&lt;br/&gt;
LastfmDataConverter - The code works fine with -Xmx512m heap settings that should be reasonable for 1.5G of uncompressed data. This is what is suggested. Can&apos;t think of a reasonable in-memory approach.&lt;/p&gt;

&lt;p&gt;&amp;gt;Random - java.util.Random&lt;br/&gt;
Each mapper should get the exact copy of hash functions for constructing the minhash signatures or else the chances of collision are quite less even for highly similar items. that is the reason for hard-coding seed for Random(). The reason for test failure is not that, it is the linear hash function that has a higher false positive rate than murmur and polynomial hash functions. The remedy is to concatenate more hashes for a key groups. For testLinearMinHashMRJob() I changed number of hash functions to 20 and number of key groups to 4 and now test passes successfully. &lt;/p&gt;</comment>
                            <comment id="12916475" author="srowen" created="Thu, 30 Sep 2010 14:47:02 +0100"  >&lt;p&gt;I see. So really we might as well take the first 6 integers generated by &quot;new Random(11)&quot; and stick them in as the fixed parameters for these hash functions. If we do that, might we not make sure to pick good values rather than leave it to the RNG? For example, it&apos;s bad if &quot;seedA&quot; in linear hash is 0. I&apos;m sure it isn&apos;t. But if they&apos;re both even, that&apos;s not so great I think?&lt;/p&gt;

&lt;p&gt;That is, what happens if I just stick in some arbitrary primes here?&lt;br/&gt;
Would that remove the need to divide module a large prime at the end?&lt;/p&gt;

&lt;p&gt;(Also does it matter that &apos;byteVal&apos; values can be negative? doesn&apos;t really seem so, from the math, but I stopped to wonder at it for a moment.&lt;/p&gt;</comment>
                            <comment id="12916491" author="ankur" created="Thu, 30 Sep 2010 15:37:09 +0100"  >&lt;p&gt;Having the seed as fixed parameters does not give us a family of hash functions, it will be the same hash functions repeated K times. What we need is a family of hash functions F where each function  h(s) is defined as follows:-&lt;br/&gt;
h(s) = index of first element in a random permutation of all possible values that is also present in set s&lt;br/&gt;
Then probability that two sets agree on a hash value is equal to their Jaccard coefficient i.e.&lt;br/&gt;
P&lt;span class=&quot;error&quot;&gt;&amp;#91;h(s1) = h(s2) &amp;#93;&lt;/span&gt; = (s1 intersect s2) / (s1 union s2)&lt;/p&gt;

&lt;p&gt;Having multiple different hash functions is an implementation trick that simulates the random permutation of all possible values. Having said that, there is nothing that prevents our seed generator to generate duplicate seeds, essentially making 2 or more hash functions identical. Also I think it will make a difference if we just accept prime seeds.  What do you think ?&lt;br/&gt;
Let me make the change of discarding duplicate seeds and accepting only primes to see what happens.&lt;/p&gt;

&lt;p&gt;BTW I completed the javadoc comments and also added support for &lt;a href=&quot;http://mtg.upf.edu/static/datasets/last.fm/lastfm-dataset-1K.tar.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mtg.upf.edu/static/datasets/last.fm/lastfm-dataset-1K.tar.gz&lt;/a&gt; dataset which I think is more dense.&lt;br/&gt;
I will post a new patch shortly.      &lt;/p&gt;</comment>
                            <comment id="12916494" author="srowen" created="Thu, 30 Sep 2010 15:46:04 +0100"  >&lt;p&gt;Got it, I understand the point of this class now. Well I might only humbly suggest &quot;RandomUtils.getRandom(11)&quot; for sheer consistency in that line.&lt;/p&gt;

&lt;p&gt;I also have a modified version of your patch locally where I tried to adjust the items that were giving off minor style warnings. I am happy to bear the burden of merging your latest changes. If they&apos;re small, it might be simple too to commit and let you add them in too.&lt;/p&gt;</comment>
                            <comment id="12916519" author="ankur" created="Thu, 30 Sep 2010 16:37:21 +0100"  >&lt;p&gt;Sean, &lt;br/&gt;
    Thanks for agreeing to merge the style and latest code changes.I&apos;ll study your style changes and hopefully do better next time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Code changes should only be in &apos;LastfmDataConverter&apos; &amp;amp; &apos;LastfmClusterEvaluator&apos;.&lt;/p&gt;

&lt;p&gt;Updated patch with fixed Javadoc comments and added support for converting LastFM 1K users dataset &lt;a href=&quot;http://www.dtic.upf.edu/~ocelma/MusicRecommendationDataset/lastfm-1K.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.dtic.upf.edu/~ocelma/MusicRecommendationDataset/lastfm-1K.html&lt;/a&gt; into vector format for running MinHash.&lt;/p&gt;

&lt;p&gt;Sadly the changes in seed generation as we discussed did not help much and addition RandomUtil.getRandom(11) was causing testLinearMinHashMRJob() to fail consistently &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; . So I reverted the code change in HashFactory.java    &lt;/p&gt;
</comment>
                            <comment id="12916579" author="tdunning" created="Thu, 30 Sep 2010 18:57:54 +0100"  >&lt;p&gt;Sorry to chime in late,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;gt;Random - java.util.Random&lt;br/&gt;
Each mapper should get the exact copy of hash functions for constructing the minhash signatures or else the chances of collision are quite less even for highly similar items. that is the reason for hard-coding seed for Random(). The reason for test failure is not that, it is the linear hash function that has a higher false positive rate than murmur and polynomial hash functions. The remedy is to concatenate more hashes for a key groups. For testLinearMinHashMRJob() I changed number of hash functions to 20 and number of key groups to 4 and now test passes successfully.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This sounds like we should be using murmurHash instead.  It is almost as fast a j.u.Random and has MUCH better properties.  This kind of change is fine to defer to 0.5.&lt;/p&gt;</comment>
                            <comment id="12916690" author="srowen" created="Thu, 30 Sep 2010 22:40:23 +0100"  >&lt;p&gt;I&apos;m gonna submit my flavor of Ankur&apos;s patches, with &quot;new Random(11)&quot; left in place. We can iterate from there. Cool with all? &lt;/p&gt;</comment>
                            <comment id="12916834" author="hudson" created="Fri, 1 Oct 2010 10:02:08 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #358 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/358/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/358/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-344&quot; title=&quot;Minhash based clustering &quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-344&quot;&gt;&lt;del&gt;MAHOUT-344&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12916849" author="ankur" created="Fri, 1 Oct 2010 11:04:31 +0100"  >&lt;p&gt;I am glad this was accepted. Thanks you folks.&lt;/p&gt;

&lt;p&gt;Also, Thanks to Cristi Prodan for making progress on this. Cristi hope you see this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  &lt;/p&gt;</comment>
                            <comment id="12917942" author="cristi" created="Tue, 5 Oct 2010 12:16:56 +0100"  >&lt;p&gt;I sure do &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; . I&apos;ve been silently watching the set of changes. I had a lot to learn when working on it as well as when seeing others contribute. Glad to see this making it into the trunk and hoping to contribute more in the future. &lt;/p&gt;</comment>
                            <comment id="13101188" author="gsingers" created="Fri, 9 Sep 2011 14:01:24 +0100"  >&lt;p&gt;Ankur,&lt;/p&gt;

&lt;p&gt;Could you doc this at &lt;a href=&quot;https://cwiki.apache.org/confluence/display/MAHOUT/Minhash+Clustering&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/MAHOUT/Minhash+Clustering&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13102460" author="ankur" created="Mon, 12 Sep 2011 07:40:41 +0100"  >&lt;p&gt;Sure, will do it in next 2 - 3 days&lt;/p&gt;</comment>
                            <comment id="13141892" author="gsingers" created="Wed, 2 Nov 2011 03:57:21 +0000"  >&lt;p&gt;Ankur, any luck on documenting this stuff?&lt;/p&gt;</comment>
                            <comment id="13142978" author="ankur" created="Thu, 3 Nov 2011 09:13:33 +0000"  >&lt;p&gt;I will surely get it done by 08/Nov/11. Apologies for delay&lt;/p&gt;</comment>
                            <comment id="13144150" author="gsingers" created="Fri, 4 Nov 2011 16:49:50 +0000"  >&lt;p&gt;Also, Ankur, do you have a reference to what your implementation is based off of?  I&apos;m mostly wondering about the purpose of the keyGroups option.  (I get what it does at the syntax level, wondering about the purpose of it)&lt;/p&gt;</comment>
                            <comment id="13144493" author="hudson" created="Sat, 5 Nov 2011 00:51:13 +0000"  >&lt;p&gt;Integrated in Mahout-Quality #1150 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/1150/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/1150/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-344&quot; title=&quot;Minhash based clustering &quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-344&quot;&gt;&lt;del&gt;MAHOUT-344&lt;/del&gt;&lt;/a&gt;: added minhash to build-asf-email.sh and to driver.classes.props&lt;/p&gt;

&lt;p&gt;gsingers : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1197803&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1197803&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/mahout/trunk/examples/bin/build-asf-email.sh&lt;/li&gt;
	&lt;li&gt;/mahout/trunk/src/conf/driver.classes.props&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13146215" author="ankur" created="Tue, 8 Nov 2011 10:59:36 +0000"  >&lt;p&gt;Grant, The idea behind keyGroups is to concatenate hashes from multiple hash functions reduce the probability of collision between 2 users that agreed on 1 or more individual hash values. This essentially improves the average similarity of users in a cluster.&lt;/p&gt;

&lt;p&gt;About documentation, I am caught up with a few urgent issues at work and will need more time. Hope to get some free cycles before end of this week.   &lt;/p&gt;</comment>
                            <comment id="13159249" author="gsingers" created="Tue, 29 Nov 2011 13:18:44 +0000"  >&lt;p&gt;Ankur, do you have a reference for this implementation.  Trying to compare this with the original Broder paper.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12439434" name="MAHOUT-344-v1.patch" size="17301" author="ankur" created="Mon, 22 Mar 2010 07:58:08 +0000"/>
                            <attachment id="12440683" name="MAHOUT-344-v2.patch" size="35209" author="cristi" created="Sat, 3 Apr 2010 12:03:54 +0100"/>
                            <attachment id="12451016" name="MAHOUT-344-v3.patch" size="41983" author="cristi" created="Mon, 2 Aug 2010 08:15:02 +0100"/>
                            <attachment id="12455574" name="MAHOUT-344-v4.patch" size="40046" author="ankur" created="Sat, 25 Sep 2010 20:42:39 +0100"/>
                            <attachment id="12455620" name="MAHOUT-344-v5.patch" size="28406" author="ankur" created="Sun, 26 Sep 2010 20:26:32 +0100"/>
                            <attachment id="12455925" name="MAHOUT-344-v6.patch" size="43435" author="ankur" created="Wed, 29 Sep 2010 16:50:08 +0100"/>
                            <attachment id="12456018" name="MAHOUT-344-v7.patch" size="48774" author="ankur" created="Thu, 30 Sep 2010 16:37:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Mar 2010 20:15:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9721</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy5p3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23074</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>