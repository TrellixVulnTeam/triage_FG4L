<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:17:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1693/MAHOUT-1693.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1693] FunctionalMatrixView materializes row vectors in scala shell</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1693</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;FunctionalMatrixView materializes row vectors in scala shell.&lt;/p&gt;

&lt;p&gt;Problem first reported by a user Michael Alton, Intel:&lt;/p&gt;

&lt;p&gt;&quot;When I first tried to make a large matrix, I got an out of Java heap space error. I increased the memory incrementally until I got it to work. &#8220;export MAHOUT_HEAPSIZE=8000&#8221; didn&#8217;t work, but &#8220;export MAHOUT_HEAPSIZE=64000&#8221; did. The question is why do we need so much memory? A 5000x5000 matrix of doubles should only take up ~200MB of space?&quot;&lt;/p&gt;

&lt;p&gt;Problem has been narrowed down to not override toString() method in FunctionalMatrixView which causes it to materialize all of the row vectors when run in Mahout Spark Shell.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12822543">MAHOUT-1693</key>
            <summary>FunctionalMatrixView materializes row vectors in scala shell</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Andrew_Palumbo">Andrew Palumbo</assignee>
                                    <reporter username="smarthi">Suneel Marthi</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Apr 2015 04:17:39 +0100</created>
                <updated>Wed, 22 Apr 2015 06:06:22 +0100</updated>
                            <resolved>Wed, 22 Apr 2015 06:06:21 +0100</resolved>
                                    <version>0.10.0</version>
                                    <fixVersion>0.10.1</fixVersion>
                                    <component>Mahout spark shell</component>
                    <component>Math</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14504222" author="githubbot" created="Tue, 21 Apr 2015 04:23:58 +0100"  >&lt;p&gt;Github user andrewpalumbo closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/120&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14504223" author="githubbot" created="Tue, 21 Apr 2015 04:24:00 +0100"  >&lt;p&gt;GitHub user andrewpalumbo reopened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/120&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;: FunctionalMatrixView materializes row vectors in scala shell&lt;/p&gt;

&lt;p&gt;     Override .toString() to simply return the class name in  FunctionalMatrixView.java solves this problem.  &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; testMatrices&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/120.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/120.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #120&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit fac851790e2f20d6bde4583c75331f86795154bf&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-21T03:08:57Z&lt;/p&gt;

&lt;p&gt;    Override .toString() in FunctionalMatrixView.java&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14504238" author="githubbot" created="Tue, 21 Apr 2015 04:38:19 +0100"  >&lt;p&gt;Github user smarthi commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/120#issuecomment-94628899&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/120#issuecomment-94628899&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Also add a test :&lt;br/&gt;
    val inCoreB = Matrices.symmetricUniformView(50000, 50000, 1)&lt;/p&gt;

&lt;p&gt;    that demonstrates this problem to not occur after this fix&lt;/p&gt;

</comment>
                            <comment id="14504302" author="githubbot" created="Tue, 21 Apr 2015 05:30:39 +0100"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/120&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14504311" author="andrew_palumbo" created="Tue, 21 Apr 2015 05:37:59 +0100"  >&lt;p&gt;Pushed a quick fix to master which will print only the class name &lt;tt&gt;o.a.m.FunctionalMatrixView&lt;/tt&gt; when &lt;tt&gt;.toString()&lt;/tt&gt; is called by the &lt;tt&gt;spark-shell&lt;/tt&gt; as the result of creating the &lt;tt&gt;FunctionalMatrixView&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;leaving this opened because i am still concerned about the memory issue:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The question is why do we need so much memory? A 5000x5000 matrix of doubles should only take up ~200MB of space?&quot; &lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14504332" author="hudson" created="Tue, 21 Apr 2015 06:01:21 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3130 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3130/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3130/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;: FunctionalMatrixView materializes row vectors in scala shell closes apache/mahout#120 (apalumbo: rev 8be44ab3bb5e92c664203d0974bbfc2379496281)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGELOG&lt;/li&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/FunctionalMatrixView.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14504406" author="andrew_palumbo" created="Tue, 21 Apr 2015 07:06:10 +0100"  >&lt;blockquote&gt;&lt;p&gt;The question is why do we need so much memory? A 5000x5000 matrix of doubles should only take up ~200MB of space?&quot; &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So it seems like the real memory hog here is:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;AbstractMatrix.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; toString() {
    StringBuilder s = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringBuilder(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\n&quot;&lt;/span&gt;);
    Iterator&amp;lt;MatrixSlice&amp;gt; it = iterator();
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (it.hasNext()) {
      MatrixSlice next = it.next();
      s.append(&lt;span class=&quot;code-quote&quot;&gt;&quot;  &quot;&lt;/span&gt;).append(next.index()).append(&lt;span class=&quot;code-quote&quot;&gt;&quot;  =&amp;gt;\t&quot;&lt;/span&gt;).append(next.vector()).append(&apos;\n&apos;);
    }
    s.append(&lt;span class=&quot;code-quote&quot;&gt;&quot;}&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; s.toString();
  }
} 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ie. each time a large in-core matrix is the result of an operation or a function within the spark-shell, the .toString() method is called (though truncated by the shell itself).&lt;/p&gt;

&lt;p&gt;So if the result of an operation or function is e.g. a Dense Matrix of 5000 x 5000 doubles the spark-shell actually tries to create a String representation of 250000000  doubles.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure that this .toString() method was ever intended to be called on a large matrix. Possibly a better fix would be to only display an upper left block of a reasonable number of rows and columns. &lt;/p&gt;</comment>
                            <comment id="14505915" author="githubbot" created="Tue, 21 Apr 2015 23:22:36 +0100"  >&lt;p&gt;GitHub user andrewpalumbo opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/121&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;: Override .toString() in AbstractMatrix using VectorView&lt;/p&gt;

&lt;p&gt;    I still have to test this out a bit, but this is a fix for the memory issues caused by the shell triggering .toString() after the instantiation of large  DenseMatrix, SparseMatrix and FunctionalMatrixViews (&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;).  This is set to display an (arbitrarily sized)10x20 upper left block of the matrix.  For sparse matrices this does affect the printout, so it may not be acceptable. &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; shellMem&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/121.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/121.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #121&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit ded13976ed3ee4f4e4e8f1e59629ccf8f6986b34&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-21T20:27:31Z&lt;/p&gt;

&lt;p&gt;    use VectorView to display subVectors in AbstractVector.toString()&lt;/p&gt;

&lt;p&gt;commit ffe9ee5701922fde1e897f21a7eb5b0896e461b0&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-21T20:59:18Z&lt;/p&gt;

&lt;p&gt;    fixed check for numRows().  added work on SparseColumnMatrix&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14505937" author="andrew_palumbo" created="Tue, 21 Apr 2015 23:36:09 +0100"  >&lt;p&gt;Random 5000x5000 functional matrix view:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
mahout&amp;gt; val inCoreB = Matrices.symmetricUniformView(5000, 5000, 1234)
inCoreB: org.apache.mahout.math.Matrix = 
{
 0 =&amp;gt;   {0:0.4586377101191827,1:0.07261898163580698,2:-0.4120814898385057,3:-0.34642075708405595,4:0.13562878996026145,5:0.45784520525982153,6:-0.4706505546910752,7:-0.23016615311845348,8:0.21877862831669628,9:0.479636479803259,10:0.19463854560108987,11:-0.22143915316681387,12:0.2097891013284503,13:-0.19744761560808702,14:-0.4407562546938582,15:0.3862335162012072,16:0.14407519172762487,17:0.04194022497803126,18:0.10862031391251574,19:-0.32684877921184075 ... 
 1 =&amp;gt;   {0:0.48977896201757654,1:0.2695201068510176,2:0.2035624121801051,3:0.24936953161203088,4:-0.47270888285344,5:0.06258489700284349,6:0.49054005184097776,7:-0.18983013078048971,8:0.2565323032908135,9:-0.09123189392334696,10:0.3342825154746871,11:-0.015098754906761836,12:0.279540866689215...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add 1 to that view and return a 5000x5000 DenseMatrix &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
mahout&amp;gt; val inCoreC = inCoreB +1
inCoreC: org.apache.mahout.math.Matrix = 
{
 0 =&amp;gt;   {0:1.4586377101191828,1:1.072618981635807,2:0.5879185101614943,3:0.653579242915944,4:1.1356287899602615,5:1.4578452052598214,6:0.5293494453089248,7:0.7698338468815465,8:1.2187786283166964,9:1.479636479803259,10:1.19463854560109,11:0.7785608468331862,12:1.2097891013284503,13:0.802552384391913,14:0.5592437453061418,15:1.3862335162012072,16:1.1440751917276248,17:1.0419402249780312,18:1.1086203139125157,19:0.6731512207881593 ... 
 1 =&amp;gt;   {0:1.4897789620175765,1:1.2695201068510176,2:1.2035624121801052,3:1.2493695316120308,4:0.52729111714656,5:1.0625848970028435,6:1.4905400518409777,7:0.8101698692195103,8:1.2565323032908136,9:0.908768106076653,10:1.3342825154746871,11:0.9849012450932382,12:1.2795408666892159,13:0.5187942833296166,14:0.6908001073... 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Random ~60% sparse Matrix of 1000x1000&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
mahout&amp;gt; val spc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SparseMatrix(1000,1000)
spc: org.apache.mahout.math.SparseMatrix = 
{
...
mahout&amp;gt; val r= &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Random()
r: java.util.Random = java.util.Random@27f62689
mahout&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;( i &amp;lt;- 0 to 1000;j &amp;lt;-0 to 1000){ &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r.nextGaussian()&amp;gt; 0.6) spc(i,j) = 1.0}
mahout&amp;gt; spc
res2: org.apache.mahout.math.SparseMatrix = 
{
 406 =&amp;gt; {5:1.0,8:1.0,10:1.0,16:1.0 ... 
 610 =&amp;gt; {0:1.0,2:1.0,6:1.0,8:1.0,9:1.0,10:1.0,15:1.0 ... 
 636 =&amp;gt; {5:1.0,10:1.0,15:1.0 ... 
 612 =&amp;gt; {2:1.0,6:1.0,7:1.0,10:1.0,13:1.0,14:1.0,15:1.0,19:1.0 ... 
 727 =&amp;gt; {4:1.0,5:1.0,10:1.0,11:1.0 ... 
 900 =&amp;gt; {1:1.0,6:1.0,11:1.0,15:1.0,16:1.0,19:1.0 ... 
 492 =&amp;gt; {3:1.0,5:1.0,6:1.0,8:1.0,14:1.0,16:1.0,17:1.0,19:1.0 ... 
 875 =&amp;gt; {2:1.0,7:1.0,9:1.0,10:1.0,13:1.0,14:1.0,17:1.0 ... 
 175 =&amp;gt; {3:1.0,6:1.0,9:1.0,11:1.0,12:1.0,13:1.0,15:1.0,17:1.0 ... 
 723 =&amp;gt; {0:1.0,11:1.0,15:1.0 ... 
...
mahout&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Random ~60% sparse DenseMatrix 1000x1000&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
mahout&amp;gt; val dns = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DenseMatrix(1000,1000)
dns: org.apache.mahout.math.DenseMatrix = 
{
 0 =&amp;gt;   { ... 
 1 =&amp;gt;   { ... 
 2 =&amp;gt;   { ... 
 3 =&amp;gt;   { ... 
 4 =&amp;gt;   { ... 
 5 =&amp;gt;   { ... 
 6 =&amp;gt;   { ... 
 7 =&amp;gt;   { ... 
 8 =&amp;gt;   { ... 
 9 =&amp;gt;   { ... 
...
mahout&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;( i &amp;lt;- 0 until 1000;j &amp;lt;-0 until 1000){ &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r.nextGaussian()&amp;gt; 0.6) dns(i,j) = 1.0}
mahout&amp;gt; dns
res5: org.apache.mahout.math.DenseMatrix = 
{
 0 =&amp;gt;   {0:1.0,1:1.0,4:1.0,6:1.0,8:1.0,9:1.0,10:1.0,12:1.0,15:1.0,17:1.0,18:1.0 ... 
 1 =&amp;gt;   {0:1.0,2:1.0,4:1.0,5:1.0,6:1.0,9:1.0,10:1.0,11:1.0,13:1.0,15:1.0,16:1.0,17:1.0 ... 
 2 =&amp;gt;   {0:1.0,1:1.0,2:1.0,5:1.0,6:1.0,7:1.0,8:1.0,9:1.0,14:1.0,16:1.0 ... 
 3 =&amp;gt;   {4:1.0,5:1.0,6:1.0,9:1.0,11:1.0,18:1.0 ... 
 4 =&amp;gt;   {1:1.0,9:1.0,10:1.0,17:1.0,19:1.0 ... 
 5 =&amp;gt;   {1:1.0,2:1.0,5:1.0,6:1.0,8:1.0,12:1.0,17:1.0 ... 
 6 =&amp;gt;   {0:1.0,2:1.0,3:1.0,5:1.0,8:1.0,9:1.0,12:1.0,18:1.0 ... 
 7 =&amp;gt;   {3:1.0,9:1.0 ... 
 8 =&amp;gt;   {2:1.0,5:1.0,7:1.0,10:1.0,11:1.0,13:1.0,16:1.0,17:1.0 ... 
 9 =&amp;gt;   {0:1.0,4:1.0,6:1.0,8:1.0,9:1.0,12:1.0,14:1.0,15:1.0 ... 
...
mahout&amp;gt; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;SparseColumnMatrix 1000x1000:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
mahout&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;( i &amp;lt;- 0 until 1000;j &amp;lt;-0 until 1000){ &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r.nextGaussian()&amp;gt; 0.6) scm(i,j) = 1.0}
mahout&amp;gt; scm
res3: org.apache.mahout.math.SparseColumnMatrix = 
{
  0  =&amp;gt; {8:1.0,12:1.0,17:1.0 ... 
  1  =&amp;gt; {8:1.0,11:1.0 ... 
  2  =&amp;gt; {0:1.0,11:1.0,14:1.0,17:1.0,18:1.0 ... 
  3  =&amp;gt; {1:1.0,3:1.0,8:1.0,17:1.0,19:1.0 ... 
  4  =&amp;gt; {0:1.0,1:1.0,2:1.0,3:1.0,7:1.0,9:1.0,11:1.0,12:1.0,16:1.0 ... 
  5  =&amp;gt; {7:1.0,17:1.0 ... 
  6  =&amp;gt; {0:1.0,3:1.0,4:1.0,11:1.0,19:1.0 ... 
  7  =&amp;gt; {0:1.0,1:1.0,8:1.0,13:1.0 ... 
  8  =&amp;gt; {3:1.0,4:1.0,8:1.0,14:1.0 ... 
  9  =&amp;gt; {1:1.0,2:1.0,3:1.0,4:1.0,5:1.0,8:1.0,10:1.0 ... 
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;500000 x 500000 random FunctionalMatrixView &lt;b&gt;View ONLY&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
val incCoreA = Matrices.symmetricUniformView(500000, 500000, 1234)
incCoreA: org.apache.mahout.math.Matrix = 
{
 0 =&amp;gt;   {0:0.4586377101191827,1:0.07261898163580698,2:-0.4120814898385057,3:-0.34642075708405595,4:0.13562878996026145,5:0.45784520525982153,6:-0.4706505546910752,7:-0.23016615311845348,8:0.21877862831669628,9:0.479636479803259,10:0.19463854560108987,11:-0.22143915316681387,12:0.2097891013284503,13:-0.19744761560808702,14:-0.4407562546938582,15:0.3862335162012072,16:0.14407519172762487,17:0.04194022497803126,18:0.10862031391251574,19:-0.32684877921184075 ... 
 1 =&amp;gt;   {0:0.48977896201757654,1:0.2695201068510176,2:0.2035624121801051,3:0.24936953161203088,4:-0.47270888285344,5:0.06258489700284349,6:0.49054005184097776,7:-0.18983013078048971,8:0.2565323032908135,9:-0.09123189392334696,10:0.3342825154746871,11:-0.015098754906761836,12:0.27954086668921...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All tested with default &lt;tt&gt;MAHOUT_HEAPSIZE&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="14506247" author="githubbot" created="Wed, 22 Apr 2015 03:03:48 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/121#discussion_r28839428&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/121#discussion_r28839428&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math/src/main/java/org/apache/mahout/math/AbstractMatrix.java &amp;#8212;&lt;br/&gt;
    @@ -782,13 +782,34 @@ public boolean isAddConstantTime() {&lt;/p&gt;

&lt;p&gt;       @Override&lt;br/&gt;
       public String toString() {&lt;br/&gt;
    +    int row = 0;&lt;br/&gt;
    +    int maxRowsToDisplay = 10;&lt;br/&gt;
    +    int maxColsToDisplay = 20;&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    If there are no objections to a max 10x20 matrix to display, or anything else, i will commit this to master and the 0.10.1 branch.&lt;/p&gt;</comment>
                            <comment id="14506319" author="githubbot" created="Wed, 22 Apr 2015 04:08:36 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/121#issuecomment-95010698&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/121#issuecomment-95010698&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    I&apos;m going to push this to master tonight since it&apos;s a better fix than we have in place already, and I&apos;m not sure how much time I&apos;ll have tomorrow.  We can always adjust the size of the matrix block to be displayed.&lt;/p&gt;</comment>
                            <comment id="14506321" author="githubbot" created="Wed, 22 Apr 2015 04:11:41 +0100"  >&lt;p&gt;Github user smarthi commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/121#issuecomment-95010969&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/121#issuecomment-95010969&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    10 * 20 to display is fine IMO. +1 to push this to master.&lt;/p&gt;</comment>
                            <comment id="14506322" author="githubbot" created="Wed, 22 Apr 2015 04:13:09 +0100"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/121&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14506332" author="andrew_palumbo" created="Wed, 22 Apr 2015 04:19:40 +0100"  >&lt;p&gt;Pushed to master.  Will push to branch tomorrow.&lt;/p&gt;</comment>
                            <comment id="14506354" author="hudson" created="Wed, 22 Apr 2015 04:41:50 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3132 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3132/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3132/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;: Override .toString() in AbstractMatrix using VectorView closes apache/mahout#121 (apalumbo: rev 6a3f93e6f695d12f63ef48c5e33f0d24658bd596)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/FunctionalMatrixView.java&lt;/li&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/AbstractMatrix.java&lt;/li&gt;
	&lt;li&gt;math/src/main/java/org/apache/mahout/math/SparseColumnMatrix.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14506421" author="githubbot" created="Wed, 22 Apr 2015 05:59:25 +0100"  >&lt;p&gt;GitHub user andrewpalumbo opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/123&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;: Override toString() in AbstractMatrix using VectorView: 0.10.x branch&lt;/p&gt;

&lt;p&gt;    already pushed to master&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; mahout-0.10.x-&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1693&quot; title=&quot;FunctionalMatrixView materializes row vectors in scala shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1693&quot;&gt;&lt;del&gt;MAHOUT-1693&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/123.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/123.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #123&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 1291a519f5e3857eed15e1127acdbb70479cff09&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-22T04:09:37Z&lt;/p&gt;

&lt;p&gt;    use Override toString() using VectorView&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14506424" author="githubbot" created="Wed, 22 Apr 2015 06:05:17 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/123#issuecomment-95036588&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/123#issuecomment-95036588&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    merged to mahout-0.10.x branch&lt;/p&gt;</comment>
                            <comment id="14506425" author="githubbot" created="Wed, 22 Apr 2015 06:05:17 +0100"  >&lt;p&gt;Github user andrewpalumbo closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/123&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14506427" author="andrew_palumbo" created="Wed, 22 Apr 2015 06:06:22 +0100"  >&lt;p&gt;Merged to both master and mahout-0.10.x branch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Apr 2015 03:23:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|i07fen:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>