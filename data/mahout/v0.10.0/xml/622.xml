<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:20:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-622/MAHOUT-622.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-622] Mahout dependencies are unified under dependency management in parent pom</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-622</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;As far as I understand, Maven encourages &quot;best practice&quot; of unified view of dependency versions specified under &amp;lt;dependencyManagement&amp;gt; usually in a parent pom, instead of under &amp;lt;dependencies&amp;gt;. &lt;/p&gt;

&lt;p&gt;In Mahout, this practice is only partially followed. Some dependencies have concrete versions under &amp;lt;dependencies&amp;gt; tag in submodule poms. Proposed change is to raid those and move version declarations into parent pom. &lt;/p&gt;

&lt;p&gt;This (as far as i understand) achieves 2 things: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Mahout assembly would include same versions for all modules thus ensuring runtime module dependencies are the same as compile time;&lt;/li&gt;
	&lt;li&gt;Somebody who uses Mahout as a dependency, could import Mahout dependencies using &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt; spec thus inheriting Mahout&apos;s versions for shared dependencies.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For most part the change would be nominal although in certain cases we&apos;d need to sort out through cross-module conflicts (if any). Commons-math was one, not sure if there are more. If there are none, the changes would be rather mechanistic. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12500988">MAHOUT-622</key>
            <summary>Mahout dependencies are unified under dependency management in parent pom</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dlyubimov">Dmitriy Lyubimov</assignee>
                                    <reporter username="dlyubimov">Dmitriy Lyubimov</reporter>
                        <labels>
                            <label>build</label>
                            <label>maven</label>
                            <label>pom</label>
                    </labels>
                <created>Thu, 10 Mar 2011 06:44:41 +0000</created>
                <updated>Wed, 10 Jul 2013 12:46:11 +0100</updated>
                            <resolved>Tue, 5 Apr 2011 11:27:14 +0100</resolved>
                                    <version>0.4</version>
                                    <fixVersion>0.5</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13004994" author="srowen" created="Thu, 10 Mar 2011 08:32:31 +0000"  >&lt;p&gt;Sounds great to me. I doubt (I hope) there are conflicts, so should be a cleanup that causes no trouble.&lt;/p&gt;</comment>
                            <comment id="13005189" author="tdunning" created="Thu, 10 Mar 2011 17:33:36 +0000"  >&lt;p&gt;Three cheers for this!&lt;/p&gt;

&lt;p&gt;Excellent improvement.&lt;/p&gt;</comment>
                            <comment id="13005304" author="dlyubimov" created="Thu, 10 Mar 2011 20:09:19 +0000"  >&lt;p&gt;Can someone assign it to me? I still seem not to be able to assign anything myself. &lt;br/&gt;
(should i be able to assign issues? if yes i guess i still have a privilege problem)&lt;/p&gt;</comment>
                            <comment id="13005375" author="tdunning" created="Thu, 10 Mar 2011 22:53:59 +0000"  >&lt;p&gt;I don&apos;t think that JIRA knows that you are a committer and it only seems to&lt;br/&gt;
allow assignment to a committer.&lt;/p&gt;

&lt;p&gt;On Thu, Mar 10, 2011 at 12:11 PM, Dmitriy Lyubimov (JIRA)&lt;/p&gt;
</comment>
                            <comment id="13005382" author="bmargulies" created="Thu, 10 Mar 2011 23:01:05 +0000"  >&lt;p&gt;I added you as a committer in JIRA.&lt;/p&gt;</comment>
                            <comment id="13010867" author="dlyubimov" created="Thu, 24 Mar 2011 19:30:22 +0000"  >&lt;p&gt;I am going thru core now . What is this artifact and why is it not using standard versioning? this group id seems to be Mahout&apos;s one but i don&apos;t think i saw pom with this group-id in the main tree. Do we want to have more than one group id for Mahout project at all? this looks like an utility project which might as well be implemented as a mahout module in the same tree? Alhtough it&apos;s probably more of a refactoring that this issue suggests.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.mahout.commons&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;commons-cli&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;2.0-mahout&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13010875" author="srowen" created="Thu, 24 Mar 2011 19:45:55 +0000"  >&lt;p&gt;I think someone wanted to use features from Commons CLI 2.x, which is not (and may never be) released. So there&apos;s a private copy.&lt;/p&gt;

&lt;p&gt;AFAICT, 2.x was abandoned 7 years ago (&lt;a href=&quot;http://commons.apache.org/cli/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/cli/&lt;/a&gt;). I sorta think we should not use it. That&apos;s a separate housecleaning issue, and a worthy one (takers? is it really hard to undo?)&lt;/p&gt;

&lt;p&gt;So I think you are welcome to do anything at all here that improves the situation. If there&apos;s any official-er 2.x release, use that. It is supposed to live in Commons Sandbox somewhere.&lt;/p&gt;</comment>
                            <comment id="13010880" author="dlyubimov" created="Thu, 24 Mar 2011 19:55:48 +0000"  >&lt;p&gt;I see. it&apos;s not really a Mahout stuff. Ok, I will leave it aside for now.&lt;/p&gt;</comment>
                            <comment id="13010883" author="dlyubimov" created="Thu, 24 Mar 2011 20:00:35 +0000"  >&lt;p&gt;what about this one? doesn&apos;t seem to be in our tree either: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.mahout.hbase&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;hbase&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;0.20.0&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13010926" author="tdunning" created="Thu, 24 Mar 2011 21:09:40 +0000"  >&lt;p&gt;I think that hbase crept in via Naive Bayes.  Having this be reparented like this is pretty odious.  So is the&lt;br/&gt;
use of such an ancient version.  I haven&apos;t heard of anybody using anything before 0.20.6 lately and those people&lt;br/&gt;
generally can&apos;t get any answer for their problems on the mailing list other than a recommendation to upgrade to&lt;br/&gt;
the 0.90 series.&lt;/p&gt;</comment>
                            <comment id="13010982" author="dlyubimov" created="Thu, 24 Mar 2011 22:46:11 +0000"  >&lt;p&gt;Ok, I see. However, in case of CLI I understand motivation of creating mahout&apos;s specific private copy. In case of hbase, however, there has been an official release. Should i try to switch it to an official org.apache.hbase ? Although, i guess, they haven&apos;t had it published to a maven repo back then. I guess that&apos;s the reason. 0.90 api is somewhat different though both contractually and operationally (some things don&apos;t look the same way anymore and some things do not work the same way anymore even if they look the same). I&apos;ll keep it in mind for another time, I&apos;d suggest we try to clean this (especially if we want to expose this thru &amp;lt;dependencyManagement&amp;gt; for other people to inherit the versions).&lt;/p&gt;</comment>
                            <comment id="13010985" author="tdunning" created="Thu, 24 Mar 2011 22:50:16 +0000"  >
&lt;p&gt;If you change the hbase dependency, some code will break.&lt;/p&gt;

&lt;p&gt;Robin,&lt;/p&gt;

&lt;p&gt;I think that the Naive Bayes stuff is where this is.  I don&apos;t know if anybody has used this capability.  &lt;/p&gt;

&lt;p&gt;Should we kill it?&lt;/p&gt;</comment>
                            <comment id="13010992" author="dlyubimov" created="Thu, 24 Mar 2011 23:07:55 +0000"  >&lt;p&gt;Oh, I am not suggesting we kill it. Certainly not here. Maybe later and even then chances are it might be easy enough to retrofit.&lt;/p&gt;</comment>
                            <comment id="13011001" author="tdunning" created="Thu, 24 Mar 2011 23:26:45 +0000"  >&lt;p&gt;I &lt;b&gt;am&lt;/b&gt; suggesting we kill it.&lt;/p&gt;

&lt;p&gt;Dependencies with no audience are just a loss for us.&lt;/p&gt;</comment>
                            <comment id="13011131" author="srowen" created="Fri, 25 Mar 2011 09:16:17 +0000"  >&lt;p&gt;I tend to agree... how much audience do we have for the HBase integration? It only exists in one place, and have not heard questions about it. Worth asking now on the mailing list (I will). Killing this and the GSON dependency (which I&apos;ve done in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-510&quot; title=&quot;Standardize serialization mechanisms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-510&quot;&gt;&lt;del&gt;MAHOUT-510&lt;/del&gt;&lt;/a&gt; already, ready to go) sound like good goals before 0.5.&lt;/p&gt;</comment>
                            <comment id="13011533" author="dlyubimov" created="Sat, 26 Mar 2011 01:28:59 +0000"  >&lt;p&gt;First cleanup of core.pom. All tests pass. &lt;/p&gt;

&lt;p&gt;I think since pom files are highly competitive and i am moving rather slowly with this, i would like to commit this more often instead of cleaning it all up at once. So i will do it module by module. Any objections? &lt;/p&gt;

&lt;p&gt;&lt;b&gt;This patch is not final&lt;/b&gt; but per above I&apos;d like to commit this issue in several steps, so this is for review.  &lt;/p&gt;

&lt;p&gt;Thank you. &lt;/p&gt;</comment>
                            <comment id="13012190" author="dlyubimov" created="Mon, 28 Mar 2011 20:34:23 +0100"  >&lt;p&gt;Ok, i guess i am going to commit first iteration (core module cleanup).&lt;/p&gt;</comment>
                            <comment id="13012232" author="dlyubimov" created="Mon, 28 Mar 2011 22:25:54 +0100"  >&lt;blockquote&gt;&lt;p&gt;I would drop most of the properties that specify versions. Defining a symbol that is used in one place doesn&apos;t really even save much.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, half of that has been there before, i am just continuing the list. Ok i will drop them. &lt;/p&gt;</comment>
                            <comment id="13012257" author="dlyubimov" created="Mon, 28 Mar 2011 23:13:12 +0100"  >&lt;p&gt;Per Ted&apos;s comments, removed the properties.&lt;/p&gt;</comment>
                            <comment id="13012535" author="srowen" created="Tue, 29 Mar 2011 17:09:46 +0100"  >&lt;p&gt;I have a related question while looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-637&quot; title=&quot;Remove direct HBase dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-637&quot;&gt;&lt;del&gt;MAHOUT-637&lt;/del&gt;&lt;/a&gt;. I killed some KosmoFS references in that patch, since we did used to have a dependency that no longer exists. But one reference is just an &amp;lt;exclusion&amp;gt; under our dependence on hadoop-core 0.20.2.&lt;/p&gt;

&lt;p&gt;In fact there are a load of excludes there. I understand it&apos;s needed if you want to perhaps exclude some transitive dependency and override it, but, it seems like we&apos;re excluding a load of things that aren&apos;t relevant. Do they &quot;hurt&quot; enough that we have to keep up with what Hadoop includes that we don&apos;t use?&lt;/p&gt;

&lt;p&gt;I can only imagine it bloats the .job file... but that doesn&apos;t include Hadoop jars does it? &lt;/p&gt;</comment>
                            <comment id="13012544" author="tdunning" created="Tue, 29 Mar 2011 17:24:20 +0100"  >&lt;p&gt;There are a boatload of transitive dependencies in Hadoop that are generally suppressed because they either are just dead weight (like KFS) or because they commonly cause conflicts (like logging packages).  The Hadoop pom is not setup in a sufficiently refined manner to have those transitive dependencies have &quot;provided&quot; scope so this is pretty much necessary.&lt;/p&gt;</comment>
                            <comment id="13012545" author="srowen" created="Tue, 29 Mar 2011 17:26:36 +0100"  >&lt;p&gt;OK I will undo my removal of the kfs exclude then in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-637&quot; title=&quot;Remove direct HBase dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-637&quot;&gt;&lt;del&gt;MAHOUT-637&lt;/del&gt;&lt;/a&gt; (but will keep removal of other stuff like attribution to KFS that we don&apos;t use)&lt;/p&gt;</comment>
                            <comment id="13012553" author="dlyubimov" created="Tue, 29 Mar 2011 17:49:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;In fact there are a load of excludes there. I understand it&apos;s needed if you want to perhaps exclude some transitive dependency and override it, but, it seems like we&apos;re excluding a load of things that aren&apos;t &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;relevant. Do they &quot;hurt&quot; enough that we have to keep up with what Hadoop includes that we don&apos;t use?&lt;/p&gt;

&lt;p&gt;In short, at present, i think the answer is &apos;yes&apos;, we have to keep up with stripping stuff off that we don&apos;t use. But I think hadoop 0.21 has reworked this so we will have to revisit it then.&lt;/p&gt;

&lt;p&gt;exclusions are stuff that we prune out of transitive tree. As far as i understand, the reason here is that we never class-load any files on any path either directly or thru hadoop use so we don&apos;t need them in our final assembly. That&apos;s also the risk (imagine hadoop changes and for some reasons client implementation initiates some classes to be loaded form KosmosFS or else. ) &lt;/p&gt;

&lt;p&gt;One of the better practices to handle that that i came on is have those dependencies optional (i.e. &apos;excluded by default&apos;). Spring is a good example in this sense. It is compiled with a boatload of technologies and it&apos;s quite unlikely you&apos;d use all of them. So they declare them optional but you still can inherit their versions (sometimes, not alwyas, as spring might use some maven work there too IMO) and if you need them, you just redeclare them without a version. &lt;/p&gt;

&lt;p&gt;But sometimes there&apos;s a problem in a sense that for the same project one might have 2 scopes &amp;#8211; one scope for &apos;api only&apos; everything else excluded, and other scope is api + full implementation and then there&apos;s no way to separate them clearly under current maven model. So when you want some &apos;api&apos; only then you incur tons of excludes (kinda like what we have). &lt;/p&gt;

&lt;p&gt;I think Hadoop community now inclines more and more toward practice where client (driver) code is compiled with api only (such as 0.20.2) and can find local hadoop client libraries at runtime and &quot;throw&quot; them into MR job automatically. E.g. Pig0.7.0 used to include all hadoop jars and hence would run only with a fixed version of hadoop but 0.8.0 doesn&apos;t have all those jars &apos;onboard&apos; and instead requires a local hadoop install to be used. In that sense, i think, it would make for hadoop to declare their api stuff transitively (necessary for driver only) and the rest of it &apos;optional&apos;. We can look at Pig 0.8.0 to see what they do with hadoop deps in that regard (although i am not sure whether they actually have a maven build though &amp;#8211; they might have a regular ant, i can&apos;t remember). &lt;/p&gt;</comment>
                            <comment id="13014286" author="hudson" created="Fri, 1 Apr 2011 00:30:45 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #708 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/708/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/708/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13015720" author="dlyubimov" created="Tue, 5 Apr 2011 03:02:25 +0100"  >&lt;p&gt;Cleaning up utils deps, will commit soon after rerunning the tests.&lt;/p&gt;</comment>
                            <comment id="13015729" author="dlyubimov" created="Tue, 5 Apr 2011 03:29:37 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-622&quot; title=&quot;Mahout dependencies are unified under dependency management in parent pom&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-622&quot;&gt;&lt;del&gt;MAHOUT-622&lt;/del&gt;&lt;/a&gt;: final cleanup: supersedes all else.&lt;/p&gt;</comment>
                            <comment id="13015732" author="dlyubimov" created="Tue, 5 Apr 2011 03:43:29 +0100"  >&lt;p&gt;Patch applies cleanly, all tests succeeded.&lt;/p&gt;</comment>
                            <comment id="13015837" author="srowen" created="Tue, 5 Apr 2011 11:27:14 +0100"  >&lt;p&gt;Looks good, passes for me too.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12657056">MAHOUT-1277</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12475451" name="MAHOUT-622-2.patch" size="11978" author="dlyubimov" created="Tue, 5 Apr 2011 03:29:37 +0100"/>
                            <attachment id="12475449" name="MAHOUT-622-utils.patch" size="2590" author="dlyubimov" created="Tue, 5 Apr 2011 03:02:25 +0100"/>
                            <attachment id="12474822" name="MAHOUT-622.patch" size="11733" author="dlyubimov" created="Mon, 28 Mar 2011 23:13:12 +0100"/>
                            <attachment id="12474682" name="MAHOUT-622.patch" size="10919" author="dlyubimov" created="Sat, 26 Mar 2011 01:28:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Mar 2011 08:32:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9439</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy3zb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22796</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>