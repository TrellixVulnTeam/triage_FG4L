<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:19:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-510/MAHOUT-510.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-510] Standardize serialization mechanisms</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-510</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;At the moment this is tracking a broader concern: to standardize as much as possible how we approach serialization. The long-term goal is notionally to use the following &quot;encodings&quot; as the input/output of Mahout stuff, and by extension, probably internally too.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Text&lt;/li&gt;
	&lt;li&gt;Vector Writable&lt;/li&gt;
	&lt;li&gt;(maybe Avro)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;not&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Serializable&lt;/li&gt;
	&lt;li&gt;GSON / JSON&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12474828">MAHOUT-510</key>
            <summary>Standardize serialization mechanisms</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srowen">Sean Owen</assignee>
                                    <reporter username="srowen">Sean Owen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Sep 2010 15:49:51 +0100</created>
                <updated>Sat, 21 May 2011 04:19:08 +0100</updated>
                            <resolved>Tue, 5 Apr 2011 22:13:48 +0100</resolved>
                                    <version>0.4</version>
                                    <fixVersion>0.5</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12980423" author="srowen" created="Tue, 11 Jan 2011 23:19:06 +0000"  >&lt;p&gt;So, I&apos;m starting to take a crack at this. I&apos;ve identified about 1/3 of all the JSON code so far that is not apparently used (except for code testing it), removed it, and everything seems OK. Before I keep going &amp;#8211; are people still keen on this goal? we had some small assent in an earlier thread.&lt;/p&gt;

&lt;p&gt;That is to say, if JSON disappears, can anyone think of a real problem it causes?&lt;/p&gt;</comment>
                            <comment id="12982131" author="srowen" created="Sat, 15 Jan 2011 16:49:15 +0000"  >&lt;p&gt;Here is one initial pass at removing JSON that seems completely unused. This is the easy bit.&lt;/p&gt;</comment>
                            <comment id="12982197" author="tdunning" created="Sun, 16 Jan 2011 01:38:14 +0000"  >&lt;p&gt;I think that this patch looks pretty reasonable.  It affects a lot of code that Jeff has committed so that he should comment.  The Naive Bayes code is hit less so, but it would be good to hear from Robin on that side.&lt;/p&gt;

&lt;p&gt;A key thing to remember is that asFormatString won&apos;t work on large objects anyway.  It has occasionally been useful to assist with equality checks, but that is a small justification.  As far as the Naive Bayes stuff is concerned, the serialized form hasn&apos;t been sufficient to fully re-instantiate a usable model, so it is hard to see what the point is.&lt;/p&gt;
</comment>
                            <comment id="12982278" author="srowen" created="Sun, 16 Jan 2011 10:58:37 +0000"  >&lt;p&gt;(BTW I&apos;m not committing this for some time.)&lt;/p&gt;

&lt;p&gt;I&apos;ve managed to take out almost all the usages. The only real usage of it is in the dirichlet implementation, which uses it to serialize a ModelDistribution and pass it as a string to Hadoop workers via the Configuration object.&lt;/p&gt;

&lt;p&gt;Now, per the issue description, we could re-do serialization here to use Writable. That&apos;s not hard and makes it possible to write these things out to HDFS later in a more Hadoop-ish way later. But that gives you a serialization to bytes, not String. I could Base64-encode it; it&apos;s not huge.&lt;/p&gt;

&lt;p&gt;That&apos;s starting to get a little weird. Is the better answer to look at writing the ModelDistribution to HDFS? or just leave this use of JSON?  &lt;/p&gt;</comment>
                            <comment id="12982416" author="tdunning" created="Sun, 16 Jan 2011 23:13:05 +0000"  >&lt;p&gt;(replied instead of commenting ... sorry for the duplicate email)&lt;/p&gt;

&lt;p&gt;Putting data objects in the Configuration is a bit of a misuse (it has been the subject of an argument on the hadoop mailing lists for a long time now).&lt;/p&gt;

&lt;p&gt;I would leave this use in place for now and later refactor to read from HDFS.  That has more legs in any case when it comes to using the clustering on new data without retraining.&lt;/p&gt;</comment>
                            <comment id="12982483" author="robinanil" created="Mon, 17 Jan 2011 05:49:03 +0000"  >&lt;p&gt;The changes are fine. What are we moving towards for model? Sequence Files seem like an obvious choice? Any thoughts?&lt;/p&gt;</comment>
                            <comment id="12991966" author="srowen" created="Tue, 8 Feb 2011 13:52:30 +0000"  >&lt;p&gt;Here&apos;s my latest work on the subject. It&apos;s a big patch which cleans out all use of JSON. Nice and all that.&lt;/p&gt;

&lt;p&gt;The only piece I can&apos;t get to work is this Dirichlet business. I tried to carefully revise it to pass those same configuration values through simple Configuration object params, and recreate the model on the other end, but it&apos;s not working.&lt;/p&gt;

&lt;p&gt;It&apos;s a bit of a black box... I would be very grateful if Jeff &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; would have any time to apply, maybe spot the issue, and/or fix it. That would complete the patch. Otherwise I&apos;m going to have a hard time understanding how to look into this.&lt;/p&gt;</comment>
                            <comment id="13015212" author="srowen" created="Sun, 3 Apr 2011 21:48:23 +0100"  >&lt;p&gt;This is my proposed final patch. Highlights:&lt;/p&gt;

&lt;p&gt;It removes all use of JSON. This was a stated goal, to reduce the number of serialization approaches, and this does by 1.&lt;/p&gt;

&lt;p&gt;Dirichlet had used JSON to serialize ModelDistribution, when really what it was doing was serializing a simple description of the instance as a string. So, there&apos;s now DistributionDescription used throughout to encapsulate these params and transport them around as a string.&lt;/p&gt;

&lt;p&gt;LogisticModelParameters serialized itself with JSON too. This was the only bit that looked a bit hard to know what to do with. Its main component, OnlineLogisticRegression, was already Writable. So I made LMP Writable too and used this serialization to write/load it to a stream. At least, it&apos;s using an existing serialization mechanism.&lt;/p&gt;

&lt;p&gt;Tests pass of course.&lt;/p&gt;

&lt;p&gt;The only remaining concern was that this will mean some examples on the wiki (and in the book) are a little out of date then. How big an issue is that vs. wanting to commit this at some near point?&lt;/p&gt;

&lt;p&gt;Thoughts on the original concept of this JIRA to begin with?&lt;/p&gt;

&lt;p&gt;Nice thing is that this results in a net decrease of over 1,600 lines of code !&lt;/p&gt;</comment>
                            <comment id="13015449" author="isabel" created="Mon, 4 Apr 2011 15:59:19 +0100"  >&lt;p&gt;&amp;gt; The only remaining concern was that this will mean some examples on the wiki (and in the book) are a little &lt;br/&gt;
&amp;gt; out of date then. How big an issue is that vs. wanting to commit this at some near point?&lt;/p&gt;

&lt;p&gt;I&apos;d rather commit this now and fix the wiki ASAP. Do we have a list of pages that this patch renders out of date? I think the issue should not only make the code simpler - but reduce complexity in the core documentation as well?!&lt;/p&gt;

&lt;p&gt;&amp;gt; Nice thing is that this results in a net decrease of over 1,600 lines of code !&lt;/p&gt;

&lt;p&gt;Yeah!&lt;/p&gt;</comment>
                            <comment id="13015601" author="srowen" created="Mon, 4 Apr 2011 21:13:07 +0100"  >&lt;p&gt;Yes it&apos;s just a few wiki pages, it seems &amp;#8211; I just search on cwiki.apache.org. I can update those. The book &quot;Mahout in Action&quot; is another concern, though I don&apos;t know if it appears in the book and arguably well the code is going to keep changing anyway and it&apos;s gone to print at this point, so...&lt;/p&gt;

&lt;p&gt;I would like to commit but do encourage others to take a peek. It&apos;s a substantial chop, and non-trivial surgery to the two bits I noted above.&lt;/p&gt;</comment>
                            <comment id="13015623" author="tdunning" created="Mon, 4 Apr 2011 22:20:19 +0100"  >&lt;p&gt;The deletion of ModelSerializer in its entirety is a real problem because we lose the writeBinary method.&lt;/p&gt;

&lt;p&gt;Losing the JSON stuff is fine, but writeBinary is the only way to serialize SGD models properly.&lt;/p&gt;</comment>
                            <comment id="13015642" author="srowen" created="Mon, 4 Apr 2011 22:56:29 +0100"  >&lt;p&gt;No problem I can stitch that back in with a Writable-based serialization.&lt;/p&gt;</comment>
                            <comment id="13015666" author="tdunning" created="Mon, 4 Apr 2011 23:39:03 +0100"  >&lt;p&gt;That stitching has to be kind of fancy because there is a lot of polymorphism that goes on.&lt;/p&gt;

&lt;p&gt;That was a big point of the ModelSerializer ... as I remember the readBinary allows a super &lt;br/&gt;
class to be passed in and the actual class is burned into the serialized representations.  &lt;br/&gt;
This gives type safety with a simple API.  Since we don&apos;t know the actual type to be returned,&lt;br/&gt;
we can&apos;t use the normal Writable structure.  This polymorphism is internal as well as external&lt;br/&gt;
although most of the internal stuff should be hidden by the PolymorphicWritable static methods.&lt;/p&gt;

&lt;p&gt;Anyway, the upshot as I see it is that the static convenience methods in ModelSerializer really&lt;br/&gt;
did have value in that they put an official imprimatur on the required idioms.&lt;/p&gt;
</comment>
                            <comment id="13015846" author="srowen" created="Tue, 5 Apr 2011 11:40:18 +0100"  >&lt;p&gt;Ted are you saying it&apos;s simply sufficient to retain the Writable-related methods like writeBinary() and readBinary()? That&apos;s quite simple, I can do that.&lt;/p&gt;</comment>
                            <comment id="13015978" author="tdunning" created="Tue, 5 Apr 2011 17:08:20 +0100"  >&lt;p&gt;Yes.  Preserving those is all that is needed.&lt;/p&gt;

&lt;p&gt;That will let TrainNewGroups remain unmodified (and still work)&lt;/p&gt;</comment>
                            <comment id="13016018" author="srowen" created="Tue, 5 Apr 2011 18:05:37 +0100"  >&lt;p&gt;Here&apos;s one more iteration, with ModelSerializer&apos;s binary methods restored along with tests.&lt;/p&gt;</comment>
                            <comment id="13016178" author="hudson" created="Wed, 6 Apr 2011 00:21:58 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #722 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/722/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/722/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-510&quot; title=&quot;Standardize serialization mechanisms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-510&quot;&gt;&lt;del&gt;MAHOUT-510&lt;/del&gt;&lt;/a&gt; remove use of JSON&lt;/p&gt;</comment>
                            <comment id="13016262" author="lancenorskog" created="Wed, 6 Apr 2011 06:12:56 +0100"  >&lt;p&gt;MatrixTest still has a testLabelBindingSerialization which does nothing.&lt;/p&gt;</comment>
                            <comment id="13016279" author="srowen" created="Wed, 6 Apr 2011 08:03:08 +0100"  >&lt;p&gt;It does quite little now, if not nothing. It essentially tests the getter/setter. I suppose I wanted to err on the side of less change than more, and it had non-zero content.&lt;/p&gt;</comment>
                            <comment id="13016283" author="srowen" created="Wed, 6 Apr 2011 08:32:30 +0100"  >&lt;p&gt;As an encore, I did find more use of JSON and here&apos;s another change as a result. It came up while looking at the vector-related Driver classes, which have an option to dump to SequenceFile or JSON. I removed the JSON option, though it could be left in as a &quot;dump as some text&quot; option though I don&apos;t know if that&apos;s useful or just more confusing. I renamed the &quot;JWriter*&quot; classes as they no longer involve &quot;J&quot;SON.&lt;/p&gt;</comment>
                            <comment id="13016640" author="hudson" created="Thu, 7 Apr 2011 02:10:56 +0100"  >&lt;p&gt;Integrated in Mahout-Quality #726 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/Mahout-Quality/726/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/Mahout-Quality/726/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-510&quot; title=&quot;Standardize serialization mechanisms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-510&quot;&gt;&lt;del&gt;MAHOUT-510&lt;/del&gt;&lt;/a&gt; part 2 take out more JSON and remove defunct output selection option in a few jobs&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12475508" name="MAHOUT-510.patch" size="188103" author="srowen" created="Tue, 5 Apr 2011 18:05:37 +0100"/>
                            <attachment id="12475327" name="MAHOUT-510.patch" size="190695" author="srowen" created="Sun, 3 Apr 2011 21:48:23 +0100"/>
                            <attachment id="12470590" name="MAHOUT-510.patch" size="188058" author="srowen" created="Tue, 8 Feb 2011 13:53:03 +0000"/>
                            <attachment id="12468460" name="MAHOUT-510.patch" size="61054" author="srowen" created="Sat, 15 Jan 2011 16:49:15 +0000"/>
                            <attachment id="12475566" name="MAHOUT-510_part_2.patch" size="17752" author="srowen" created="Wed, 6 Apr 2011 08:32:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 16 Jan 2011 01:38:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9553</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxy4o7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22908</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>