<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:15:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MAHOUT-1493/MAHOUT-1493.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MAHOUT-1493] Port Naive Bayes to the Spark DSL</title>
                <link>https://issues.apache.org/jira/browse/MAHOUT-1493</link>
                <project id="12310751" key="MAHOUT">Mahout</project>
                    <description>&lt;p&gt;Port our Naive Bayes implementation to the new spark dsl. Shouldn&apos;t require more than a few lines of code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12704106">MAHOUT-1493</key>
            <summary>Port Naive Bayes to the Spark DSL</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="11">Done</resolution>
                                        <assignee username="Andrew_Palumbo">Andrew Palumbo</assignee>
                                    <reporter username="ssc">Sebastian Schelter</reporter>
                        <labels>
                            <label>DSL</label>
                            <label>h2o</label>
                            <label>scala</label>
                    </labels>
                <created>Thu, 27 Mar 2014 21:15:28 +0000</created>
                <updated>Mon, 13 Apr 2015 10:57:30 +0100</updated>
                            <resolved>Mon, 6 Apr 2015 04:25:22 +0100</resolved>
                                                    <fixVersion>0.10.0</fixVersion>
                                    <component>Classification</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13949943" author="ssc" created="Thu, 27 Mar 2014 21:18:33 +0000"  >&lt;p&gt;preliminary patch. lacks preparation code and testing.&lt;/p&gt;</comment>
                            <comment id="13950283" author="dlyubimov" created="Fri, 28 Mar 2014 02:18:23 +0000"  >&lt;p&gt;I don&apos;t think you meant run() to return Unit. &lt;/p&gt;

&lt;p&gt;Also I am not sure using a class is justified.&lt;/p&gt;

&lt;p&gt;In most cases, i would favor dropping classes in favor of functions, albeit with fairly long parameter list but populaed with default values.&lt;/p&gt;

&lt;p&gt;The pattern i am following is to create a pithy and expressive name (such as ssvd()) for a function (in this case could be something like &quot;trainNB&quot;) inside a scala object (singleton) and then re-translate that as top-level package function so one can say something like &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; decompositions._
val nbmodel = trainNB(...)
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="13950293" author="dlyubimov" created="Fri, 28 Mar 2014 02:32:25 +0000"  >&lt;p&gt;PS. it&apos;s an R naming style. R almost never exposes api as classes (and, frankly, R classes &amp;#8211; even the latest generation &amp;#8211; is embarassment compared to everything else in existence).&lt;/p&gt;

&lt;p&gt;Classes are usually needed if there&apos;s a state, and we already have that state as the bayes model object, don&apos;t we?&lt;/p&gt;</comment>
                            <comment id="13950536" author="ssc" created="Fri, 28 Mar 2014 09:32:04 +0000"  >&lt;p&gt;Updated the patch according to Dmitriy&apos;s style suggestions.&lt;/p&gt;

&lt;p&gt;The only thing that is executed in a distributed fashion is the summation of the observations for each label. The rest of the training is done in memory on the driver. This should not be a problem as the data used by the local training has to fit in memory for the existing NaiveBayesModel anyway.&lt;/p&gt;

&lt;p&gt;The patch needs to be verified on a real example yet. I will do this in May probably. If someone wants to test it before that time, I&apos;d be happy to help.&lt;/p&gt;</comment>
                            <comment id="13951016" author="dlyubimov" created="Fri, 28 Mar 2014 16:52:02 +0000"  >&lt;p&gt;I d say we really need that shell finished. That would be a killer way to write both distributed tests and tutorial at the same time&lt;/p&gt;</comment>
                            <comment id="13963324" author="dlyubimov" created="Tue, 8 Apr 2014 20:17:57 +0100"  >&lt;p&gt;Also &amp;#8211; to finalize this &amp;#8211; I think we need start doing blackbox packages outside the drm package. Maybe even outside sparkbindings package. At least idea was that drm package holds base math functions only &amp;#8211; such as qr and svd. Well since PCA is very math-y , so PCA as well .&lt;/p&gt;

&lt;p&gt;NB is a classification method so we proabably need to start classification package outside drm. Ditto for other ML stuff.&lt;/p&gt;</comment>
                            <comment id="13963365" author="ssc" created="Tue, 8 Apr 2014 21:02:44 +0100"  >&lt;p&gt;ok, where should the blackbox algorithms go then?&lt;/p&gt;</comment>
                            <comment id="13963395" author="dlyubimov" created="Tue, 8 Apr 2014 21:25:08 +0100"  >&lt;p&gt;&quot;o.a.m.classification&quot;, &quot;o.a.m.clustering&quot; ... ? or that intersects with java code inconveniently?&lt;/p&gt;</comment>
                            <comment id="13975112" author="ssc" created="Sun, 20 Apr 2014 12:41:21 +0100"  >&lt;p&gt;Updated patch to reflect the work from &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1504&quot; title=&quot;Enable/fix thetaSummer job in TrainNaiveBayesJob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1504&quot;&gt;&lt;del&gt;MAHOUT-1504&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14010274" author="dlyubimov" created="Tue, 27 May 2014 22:05:40 +0100"  >&lt;p&gt;convert to a PR?&lt;/p&gt;</comment>
                            <comment id="14060102" author="cviebig" created="Sun, 13 Jul 2014 13:59:19 +0100"  >&lt;p&gt;As part of an university course homework at TU Berlin, Germany, we (a group of students) got the task to continue the work done on this issue. To achieve that we ported Sebastian&apos;s code to a recent mahout master revision to make it work again.&lt;br/&gt;
Following changes were applied to Sebastian&apos;s patch right now:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;StandardThetaTrainer removed&lt;/li&gt;
	&lt;li&gt;trainNB method parameter trainComplementary removed&lt;/li&gt;
	&lt;li&gt;method call &lt;tt&gt;dense&lt;/tt&gt; was changed to &lt;tt&gt;org.apache.mahout.math.scalabindings&lt;/tt&gt; method &lt;tt&gt;dense&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;method call &lt;tt&gt;colSums&lt;/tt&gt; was changed to &lt;tt&gt;new MatrixOps(_).colSums&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;method call &lt;tt&gt;rowSums&lt;/tt&gt; was changed to &lt;tt&gt;new MatrixOps(_).rowSums&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;weightsPerLabelAndFeature(labelIndex, :: ) }} was changed to {{weightsPerLabelAndFeature.viewRow(labelIndex)&lt;/tt&gt; as it seems to be not supported by the java class&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We noticed that you refactored the code a lot in the mean time. Shall we move the patch code and the one of the used classes from mrlegacy to another location?&lt;/p&gt;</comment>
                            <comment id="14064027" author="andrew_palumbo" created="Wed, 16 Jul 2014 21:17:37 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cviebig&quot; class=&quot;user-hover&quot; rel=&quot;cviebig&quot;&gt;Christoph Viebig&lt;/a&gt;, The patch looks good. I&apos;ve made some edits (against your develop/issue/1493/4 branch) and will attach a M-1493a.patch shortly.  I put the trainComplementary parameter back in as this is needed to make the distinction between Standard and Complementary Models in the NaiveBayesModel constructor.  &lt;/p&gt;

&lt;p&gt;As well, I&apos;ve added a thetaNormalizer var which can remain null when passed to the NaiveBayesModel constructor unless training a Complementary NB model. see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/mahout/blob/master/mrlegacy/src/main/java/org/apache/mahout/classifier/naivebayes/NaiveBayesModel.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/blob/master/mrlegacy/src/main/java/org/apache/mahout/classifier/naivebayes/NaiveBayesModel.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if creating a null var as I&apos;ve done here is best practice in scala, but i wanted to give you an idea of the NaiveBayesModel design.  &lt;/p&gt;

&lt;p&gt;As you&apos;ve noted, there has been a lot of refactoring going on.  As far as moving the code, I think that for now it might be a good idea to keep this in `spark` module, and move the `org.apache.mahout.sparkbindings.drm.classification` package out of `org.apache.mahout.sparkbindings.drm` and into a new `org.apache.mahout.classification` package.  I believe that for now this would be a good place for it.  There shouldn&apos;t be any need to move any of the java code from mrlegacy.&lt;/p&gt;



</comment>
                            <comment id="14065661" author="pferrel" created="Thu, 17 Jul 2014 23:07:41 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Andrew_Palumbo&quot; class=&quot;user-hover&quot; rel=&quot;Andrew_Palumbo&quot;&gt;Andrew Palumbo&lt;/a&gt; can you make this a pull request? Put it in a branch on your github and hit the PR button so we can see the diffs and comment inline on github.&lt;/p&gt;</comment>
                            <comment id="14066040" author="githubbot" created="Fri, 18 Jul 2014 06:13:49 +0100"  >&lt;p&gt;GitHub user andrewpalumbo opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt; Port Naive Bayes to Spark DSL (for review)&lt;/p&gt;

&lt;p&gt;    Created this PR to review the patch provided by Christoph Viebig and team, Students of TU, Berlin.  It is based on Sebastian&apos;s code from before the DSL was abstracted away from Spark. &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #32&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit eb0b76e96e2003e0061e30d6e1fbfb4c677dc836&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-07-18T04:55:22Z&lt;/p&gt;

&lt;p&gt;    applied &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;.patch by cviebig and team from TU Berlin&lt;/p&gt;

&lt;p&gt;commit a99909db863d486115893a79f5f57848edf16b93&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-07-18T04:59:24Z&lt;/p&gt;

&lt;p&gt;    applied &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;a patch: edits to NaiveBayesModel call&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14066072" author="githubbot" created="Fri, 18 Jul 2014 06:33:14 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-49396941&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-49396941&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    One of their first questions was where to move it (out of the o.a.m.sparkbindings.drm package).  My suggestion, for now, was a new package in the spark module: o.a.m.classification.(naivebayes).   mrlegacy keeps classification algo packages in o.a.m.classifier.  If we wanted to keep consistent with naming (stick with classifiers v. classification) would this cause conflicts?  &lt;/p&gt;

&lt;p&gt;    The next step would be to create some scalatests for this.  This should be relatively easy since most of the rest of mrlegacy NB has is either MR independent or has sequential options. So it should be somewhat straightforward to reproduce (some of) the mrlegacy tests. &lt;/p&gt;</comment>
                            <comment id="14066082" author="githubbot" created="Fri, 18 Jul 2014 06:39:13 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-49397174&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-49397174&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Also, the &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;a patch was written by me to illustrate how the NaiveBayesModel constructor  needed to be called- so don&apos;t hold any style points against them on this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. &lt;/p&gt;</comment>
                            <comment id="14066121" author="githubbot" created="Fri, 18 Jul 2014 07:52:33 +0100"  >&lt;p&gt;Github user avati commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-49400739&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-49400739&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    @andrewpalumbo , this code very much feels like it should be in math-scala/src/main/scala/org/apache/mahout/math/classification/*. There is nothing (yet) specific to DRM in this code, so we can keep it out of sparkbindings, at least this part of the algorithm.&lt;/p&gt;</comment>
                            <comment id="14069349" author="githubbot" created="Mon, 21 Jul 2014 22:44:10 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-49670252&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-49670252&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Agree with @avati, without looking at much else, NB definitely doesn&apos;t belong in `package org.apache.mahout.sparkbindings.drm.classification`. A better root perhaps is simply `o.a.m.classification`, even if it clashes with some legacy (java) packages ?&lt;/p&gt;
</comment>
                            <comment id="14088350" author="githubbot" created="Wed, 6 Aug 2014 23:06:26 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51404288&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51404288&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    So, can we move the package please?&lt;/p&gt;</comment>
                            <comment id="14088365" author="githubbot" created="Wed, 6 Aug 2014 23:16:42 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51405333&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51405333&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Absolutely!  I was just getting ready to do this and write some tests. &lt;/p&gt;</comment>
                            <comment id="14088367" author="githubbot" created="Wed, 6 Aug 2014 23:18:00 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51405454&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51405454&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Am hoping to see how (short) the Spark and H2O tests compare &lt;/p&gt;</comment>
                            <comment id="14088376" author="githubbot" created="Wed, 6 Aug 2014 23:26:51 +0100"  >&lt;p&gt;Github user avati commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51406299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51406299&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Actually I&apos;m not sure if this would work against H2O, as the code is doing &lt;/p&gt;

&lt;p&gt;      observationsPerLabel.map(new MatrixOps(_).colSums)&lt;/p&gt;

&lt;p&gt;    which happens on RDD (and not on DRM, because of the implicit conversion). We would need to generic&apos;ize that somehow.&lt;/p&gt;</comment>
                            <comment id="14088382" author="githubbot" created="Wed, 6 Aug 2014 23:30:17 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51406631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51406631&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    @andrewpalumbo can you perhaps comment on the code itself so we see what you are talking about?&lt;/p&gt;</comment>
                            <comment id="14088385" author="githubbot" created="Wed, 6 Aug 2014 23:30:48 +0100"  >&lt;p&gt;Github user avati commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51406691&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51406691&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Oops, I misread.. the map() happens on Array, my bad!&lt;/p&gt;

&lt;p&gt;    I must admit I do not (yet) know how this code is working on DRM in a distributed way (i.e, to compare two backends)&lt;/p&gt;</comment>
                            <comment id="14088391" author="githubbot" created="Wed, 6 Aug 2014 23:35:49 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r15908429&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r15908429&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/sparkbindings/drm/classification/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,74 @@&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    + * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
    + * this work for additional information regarding copyright ownership.&lt;br/&gt;
    + * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
    + * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
    + * the License.  You may obtain a copy of the License at&lt;br/&gt;
    + *&lt;br/&gt;
    + * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
    + *&lt;br/&gt;
    + * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
    + * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    + * See the License for the specific language governing permissions and&lt;br/&gt;
    + * limitations under the License.&lt;br/&gt;
    + */&lt;br/&gt;
    +&lt;br/&gt;
    +package org.apache.mahout.sparkbindings.drm.classification&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math.drm._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.NaiveBayesModel&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.training.ComplementaryThetaTrainer&lt;br/&gt;
    +&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    Imports look engine-independent. Should not be Spark-coupled. &lt;br/&gt;
    Imports probably should include implicit operations per document (which is why the code does weird stuff like `new MatrixOps(m)`).&lt;/p&gt;

&lt;p&gt;    The &quot;standard&quot; recommended way to do imports for engine -independent code&lt;/p&gt;

&lt;p&gt;         import org.apache.mahout.math._&lt;br/&gt;
         import scalabindings._&lt;br/&gt;
         import RLikeOps._&lt;br/&gt;
         import drm._&lt;br/&gt;
         import RLikeDrmOps._&lt;/p&gt;

&lt;p&gt;    if java collections are used (e.g. something like `for (row &amp;lt;- matrix) &lt;/p&gt;
{ ... }
&lt;p&gt;`) then it also would need &lt;/p&gt;

&lt;p&gt;        import collection._&lt;br/&gt;
        import JavaConversions._&lt;/p&gt;

&lt;p&gt;    to enable all implicits.&lt;/p&gt;</comment>
                            <comment id="14088394" author="githubbot" created="Wed, 6 Aug 2014 23:37:02 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r15908475&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r15908475&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/sparkbindings/drm/classification/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,74 @@&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    + * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
    + * this work for additional information regarding copyright ownership.&lt;br/&gt;
    + * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
    + * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
    + * the License.  You may obtain a copy of the License at&lt;br/&gt;
    + *&lt;br/&gt;
    + * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
    + *&lt;br/&gt;
    + * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
    + * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    + * See the License for the specific language governing permissions and&lt;br/&gt;
    + * limitations under the License.&lt;br/&gt;
    + */&lt;br/&gt;
    +&lt;br/&gt;
    +package org.apache.mahout.sparkbindings.drm.classification&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math.drm._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.NaiveBayesModel&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.training.ComplementaryThetaTrainer&lt;br/&gt;
    +&lt;br/&gt;
    +import scala.reflect.ClassTag&lt;br/&gt;
    +&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Distributed training of a Naive Bayes model. Follows the approach presented in Rennie et.al.: Tackling the poor&lt;br/&gt;
    + * assumptions of Naive Bayes Text classifiers, ICML 2003, &lt;a href=&quot;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&lt;/a&gt;&lt;br/&gt;
    + */&lt;br/&gt;
    +object NaiveBayes {&lt;br/&gt;
    +&lt;br/&gt;
    +  /** default value for the smoothing parameter */&lt;br/&gt;
    +  def defaultAlphaI = 1f&lt;br/&gt;
    +&lt;br/&gt;
    +  /**&lt;br/&gt;
    +   * Distributed training of a Naive Bayes model.&lt;br/&gt;
    +   *&lt;br/&gt;
    +   * @param observationsPerLabel an array of matrices. Every matrix contains the observations for a particular label.&lt;br/&gt;
    +   * @param trainComplementary whether to train a complementary Naive Bayes model&lt;br/&gt;
    +   * @param alphaI smoothing parameter&lt;br/&gt;
    +   * @return trained naive bayes model&lt;br/&gt;
    +   */&lt;br/&gt;
    +  def trainNB&lt;span class=&quot;error&quot;&gt;&amp;#91;K: ClassTag&amp;#93;&lt;/span&gt;(observationsPerLabel: Array[DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;K&amp;#93;&lt;/span&gt;], trainComplementary :Boolean = true,&lt;br/&gt;
    +                                   alphaI: Float = defaultAlphaI): NaiveBayesModel = {&lt;br/&gt;
    +&lt;br/&gt;
    +    // distributed summation of all observations per label&lt;br/&gt;
    +    val weightsPerLabelAndFeature = scalabindings.dense(observationsPerLabel.map(new MatrixOps(_).colSums))&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    if imports are properly done, this should just be &lt;/p&gt;

&lt;p&gt;         val weightsPerLabelAndFeature = dense(observationsPerLabel.map(_.colSums))&lt;/p&gt;

&lt;p&gt;    Note that this is not Spark-dependent code. the `map` here is Scala collection map.&lt;/p&gt;</comment>
                            <comment id="14088396" author="githubbot" created="Wed, 6 Aug 2014 23:37:40 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r15908489&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r15908489&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/sparkbindings/drm/classification/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,74 @@&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    + * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
    + * this work for additional information regarding copyright ownership.&lt;br/&gt;
    + * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
    + * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
    + * the License.  You may obtain a copy of the License at&lt;br/&gt;
    + *&lt;br/&gt;
    + * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
    + *&lt;br/&gt;
    + * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
    + * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    + * See the License for the specific language governing permissions and&lt;br/&gt;
    + * limitations under the License.&lt;br/&gt;
    + */&lt;br/&gt;
    +&lt;br/&gt;
    +package org.apache.mahout.sparkbindings.drm.classification&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math.drm._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.NaiveBayesModel&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.training.ComplementaryThetaTrainer&lt;br/&gt;
    +&lt;br/&gt;
    +import scala.reflect.ClassTag&lt;br/&gt;
    +&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Distributed training of a Naive Bayes model. Follows the approach presented in Rennie et.al.: Tackling the poor&lt;br/&gt;
    + * assumptions of Naive Bayes Text classifiers, ICML 2003, &lt;a href=&quot;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&lt;/a&gt;&lt;br/&gt;
    + */&lt;br/&gt;
    +object NaiveBayes {&lt;br/&gt;
    +&lt;br/&gt;
    +  /** default value for the smoothing parameter */&lt;br/&gt;
    +  def defaultAlphaI = 1f&lt;br/&gt;
    +&lt;br/&gt;
    +  /**&lt;br/&gt;
    +   * Distributed training of a Naive Bayes model.&lt;br/&gt;
    +   *&lt;br/&gt;
    +   * @param observationsPerLabel an array of matrices. Every matrix contains the observations for a particular label.&lt;br/&gt;
    +   * @param trainComplementary whether to train a complementary Naive Bayes model&lt;br/&gt;
    +   * @param alphaI smoothing parameter&lt;br/&gt;
    +   * @return trained naive bayes model&lt;br/&gt;
    +   */&lt;br/&gt;
    +  def trainNB&lt;span class=&quot;error&quot;&gt;&amp;#91;K: ClassTag&amp;#93;&lt;/span&gt;(observationsPerLabel: Array[DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;K&amp;#93;&lt;/span&gt;], trainComplementary :Boolean = true,&lt;br/&gt;
    +                                   alphaI: Float = defaultAlphaI): NaiveBayesModel = {&lt;br/&gt;
    +&lt;br/&gt;
    +    // distributed summation of all observations per label&lt;br/&gt;
    +    val weightsPerLabelAndFeature = scalabindings.dense(observationsPerLabel.map(new MatrixOps(_).colSums))&lt;br/&gt;
    +    // local summation of all weights per feature&lt;br/&gt;
    +    val weightsPerFeature = new MatrixOps(weightsPerLabelAndFeature).colSums&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    Similarly this should be just &lt;/p&gt;

&lt;p&gt;         val weightsPerFeature = weightsPerLabelAndFeature.colSums&lt;/p&gt;</comment>
                            <comment id="14088397" author="githubbot" created="Wed, 6 Aug 2014 23:38:08 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r15908508&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r15908508&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/sparkbindings/drm/classification/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,74 @@&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    + * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
    + * this work for additional information regarding copyright ownership.&lt;br/&gt;
    + * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
    + * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
    + * the License.  You may obtain a copy of the License at&lt;br/&gt;
    + *&lt;br/&gt;
    + * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
    + *&lt;br/&gt;
    + * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
    + * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    + * See the License for the specific language governing permissions and&lt;br/&gt;
    + * limitations under the License.&lt;br/&gt;
    + */&lt;br/&gt;
    +&lt;br/&gt;
    +package org.apache.mahout.sparkbindings.drm.classification&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math.drm._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.NaiveBayesModel&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.training.ComplementaryThetaTrainer&lt;br/&gt;
    +&lt;br/&gt;
    +import scala.reflect.ClassTag&lt;br/&gt;
    +&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Distributed training of a Naive Bayes model. Follows the approach presented in Rennie et.al.: Tackling the poor&lt;br/&gt;
    + * assumptions of Naive Bayes Text classifiers, ICML 2003, &lt;a href=&quot;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&lt;/a&gt;&lt;br/&gt;
    + */&lt;br/&gt;
    +object NaiveBayes {&lt;br/&gt;
    +&lt;br/&gt;
    +  /** default value for the smoothing parameter */&lt;br/&gt;
    +  def defaultAlphaI = 1f&lt;br/&gt;
    +&lt;br/&gt;
    +  /**&lt;br/&gt;
    +   * Distributed training of a Naive Bayes model.&lt;br/&gt;
    +   *&lt;br/&gt;
    +   * @param observationsPerLabel an array of matrices. Every matrix contains the observations for a particular label.&lt;br/&gt;
    +   * @param trainComplementary whether to train a complementary Naive Bayes model&lt;br/&gt;
    +   * @param alphaI smoothing parameter&lt;br/&gt;
    +   * @return trained naive bayes model&lt;br/&gt;
    +   */&lt;br/&gt;
    +  def trainNB&lt;span class=&quot;error&quot;&gt;&amp;#91;K: ClassTag&amp;#93;&lt;/span&gt;(observationsPerLabel: Array[DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;K&amp;#93;&lt;/span&gt;], trainComplementary :Boolean = true,&lt;br/&gt;
    +                                   alphaI: Float = defaultAlphaI): NaiveBayesModel = {&lt;br/&gt;
    +&lt;br/&gt;
    +    // distributed summation of all observations per label&lt;br/&gt;
    +    val weightsPerLabelAndFeature = scalabindings.dense(observationsPerLabel.map(new MatrixOps(_).colSums))&lt;br/&gt;
    +    // local summation of all weights per feature&lt;br/&gt;
    +    val weightsPerFeature = new MatrixOps(weightsPerLabelAndFeature).colSums&lt;br/&gt;
    +    // local summation of all weights per label&lt;br/&gt;
    +    val weightsPerLabel = new MatrixOps(weightsPerLabelAndFeature).rowSums&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    Same thing here. now need for `new MatrixOps`...  here and elsewhere &lt;/p&gt;</comment>
                            <comment id="14088400" author="githubbot" created="Wed, 6 Aug 2014 23:38:39 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51407423&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51407423&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Yes-- and as a reminder  this code is  a compilation of  patches that were writen before the abastraction away from spark (not by myself).  I&apos;ve not looked at it too closely, and just put it up for comment and feedback for the Berlin TU students.   I&apos;ve been away almost the entire summer and had planned on doing some work on this to get back up to speed and to try out the H2o bindings.  &lt;/p&gt;

&lt;p&gt;    So please- yes any comments are welcome. &lt;/p&gt;</comment>
                            <comment id="14088401" author="githubbot" created="Wed, 6 Aug 2014 23:39:05 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r15908555&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r15908555&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/sparkbindings/drm/classification/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,74 @@&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    + * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
    + * this work for additional information regarding copyright ownership.&lt;br/&gt;
    + * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
    + * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
    + * the License.  You may obtain a copy of the License at&lt;br/&gt;
    + *&lt;br/&gt;
    + * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
    + *&lt;br/&gt;
    + * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
    + * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    + * See the License for the specific language governing permissions and&lt;br/&gt;
    + * limitations under the License.&lt;br/&gt;
    + */&lt;br/&gt;
    +&lt;br/&gt;
    +package org.apache.mahout.sparkbindings.drm.classification&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math.drm._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.NaiveBayesModel&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.training.ComplementaryThetaTrainer&lt;br/&gt;
    +&lt;br/&gt;
    +import scala.reflect.ClassTag&lt;br/&gt;
    +&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Distributed training of a Naive Bayes model. Follows the approach presented in Rennie et.al.: Tackling the poor&lt;br/&gt;
    + * assumptions of Naive Bayes Text classifiers, ICML 2003, &lt;a href=&quot;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&lt;/a&gt;&lt;br/&gt;
    + */&lt;br/&gt;
    +object NaiveBayes {&lt;br/&gt;
    +&lt;br/&gt;
    +  /** default value for the smoothing parameter */&lt;br/&gt;
    +  def defaultAlphaI = 1f&lt;br/&gt;
    +&lt;br/&gt;
    +  /**&lt;br/&gt;
    +   * Distributed training of a Naive Bayes model.&lt;br/&gt;
    +   *&lt;br/&gt;
    +   * @param observationsPerLabel an array of matrices. Every matrix contains the observations for a particular label.&lt;br/&gt;
    +   * @param trainComplementary whether to train a complementary Naive Bayes model&lt;br/&gt;
    +   * @param alphaI smoothing parameter&lt;br/&gt;
    +   * @return trained naive bayes model&lt;br/&gt;
    +   */&lt;br/&gt;
    +  def trainNB&lt;span class=&quot;error&quot;&gt;&amp;#91;K: ClassTag&amp;#93;&lt;/span&gt;(observationsPerLabel: Array[DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;K&amp;#93;&lt;/span&gt;], trainComplementary :Boolean = true,&lt;br/&gt;
    +                                   alphaI: Float = defaultAlphaI): NaiveBayesModel = {&lt;br/&gt;
    +&lt;br/&gt;
    +    // distributed summation of all observations per label&lt;br/&gt;
    +    val weightsPerLabelAndFeature = scalabindings.dense(observationsPerLabel.map(new MatrixOps(_).colSums))&lt;br/&gt;
    +    // local summation of all weights per feature&lt;br/&gt;
    +    val weightsPerFeature = new MatrixOps(weightsPerLabelAndFeature).colSums&lt;br/&gt;
    +    // local summation of all weights per label&lt;br/&gt;
    +    val weightsPerLabel = new MatrixOps(weightsPerLabelAndFeature).rowSums&lt;br/&gt;
    +&lt;br/&gt;
    +    // perLabelThetaNormalizer Vector is expected by NaiveBayesModel. We can pass a null value&lt;br/&gt;
    +    // in the case of a standard NB model&lt;br/&gt;
    +    var thetaNormalizer: org.apache.mahout.math.Vector= null&lt;br/&gt;
    +&lt;br/&gt;
    +    // instantiate a trainer and retrieve the perLabelThetaNormalizer Vector from it in the case of&lt;br/&gt;
    +    // a complementary NB model&lt;br/&gt;
    +    if( trainComplementary ){&lt;br/&gt;
    +      val thetaTrainer = new ComplementaryThetaTrainer(weightsPerFeature, weightsPerLabel, alphaI)&lt;br/&gt;
    +      // local training of the theta normalization&lt;br/&gt;
    +      for (labelIndex &amp;lt;- 0 until new MatrixOps(weightsPerLabelAndFeature).nrow) {&lt;br/&gt;
    +        thetaTrainer.train(labelIndex, weightsPerLabelAndFeature.viewRow(labelIndex))&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    in Mahout Scala, this slicing should look &lt;/p&gt;

&lt;p&gt;        ... weightsPerLabelAndFeature(labelIndex, :&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14088415" author="githubbot" created="Wed, 6 Aug 2014 23:46:54 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r15908947&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r15908947&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/sparkbindings/drm/classification/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,74 @@&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    + * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
    + * this work for additional information regarding copyright ownership.&lt;br/&gt;
    + * The ASF licenses this file to You under the Apache License, Version 2.0&lt;br/&gt;
    + * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
    + * the License.  You may obtain a copy of the License at&lt;br/&gt;
    + *&lt;br/&gt;
    + * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
    + *&lt;br/&gt;
    + * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
    + * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    + * See the License for the specific language governing permissions and&lt;br/&gt;
    + * limitations under the License.&lt;br/&gt;
    + */&lt;br/&gt;
    +&lt;br/&gt;
    +package org.apache.mahout.sparkbindings.drm.classification&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math.drm._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.NaiveBayesModel&lt;br/&gt;
    +import org.apache.mahout.classifier.naivebayes.training.ComplementaryThetaTrainer&lt;br/&gt;
    +&lt;br/&gt;
    +import scala.reflect.ClassTag&lt;br/&gt;
    +&lt;br/&gt;
    +/**&lt;br/&gt;
    + * Distributed training of a Naive Bayes model. Follows the approach presented in Rennie et.al.: Tackling the poor&lt;br/&gt;
    + * assumptions of Naive Bayes Text classifiers, ICML 2003, &lt;a href=&quot;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf&lt;/a&gt;&lt;br/&gt;
    + */&lt;br/&gt;
    +object NaiveBayes {&lt;br/&gt;
    +&lt;br/&gt;
    +  /** default value for the smoothing parameter */&lt;br/&gt;
    +  def defaultAlphaI = 1f&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    Mahout convention is to write these as `1.0` rather than a float.&lt;/p&gt;</comment>
                            <comment id="14088492" author="githubbot" created="Thu, 7 Aug 2014 01:03:58 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51414355&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51414355&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    @dlyubimov thanks for all the comments I&apos;m going to try to get the changes in shortly.  &lt;/p&gt;</comment>
                            <comment id="14091351" author="githubbot" created="Fri, 8 Aug 2014 23:00:02 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51662654&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51662654&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    I made most of the changes from Dmitriy&apos;s comments.  I&apos;ve done some (hackish) work here just to get this in the right package, compiling and and testing.  Changed the Array&lt;span class=&quot;error&quot;&gt;&amp;#91;DrmLike&amp;#93;&lt;/span&gt; to DrmLike for the sparse feature input (for now).  This is very basic and assumes that each row correspnds to a unique label.  The only real engine specific DRM work right now is done in:&lt;/p&gt;

&lt;p&gt;        val weightsPerFeature = observationsPerLabel.colSums&lt;/p&gt;

&lt;p&gt;    I&apos;ve added a Spark test suite with a test for a skeleton NB model. Tests pass here on Spark.   I&apos;ve also added an h2o test suite on my &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-1500 branch with relativly minimal effort (had to make a few dependency changes to the h20/pom.xml). h2o tests pass.&lt;/p&gt;

&lt;p&gt;    Obviously there is still a lot of work to do here and it won&apos;t be ready to merge anytime soon, so I&apos;ll leave this PR open for a little while in case anybody&apos;s interested and then close it until i have some more work done on it as to not clog up the PR page. &lt;/p&gt;

</comment>
                            <comment id="14091353" author="githubbot" created="Fri, 8 Aug 2014 23:05:23 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16019061&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16019061&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: CHANGELOG &amp;#8212;&lt;br/&gt;
    @@ -2,7 +2,15 @@ Mahout Change Log&lt;/p&gt;

&lt;p&gt;     Release 1.0 - unreleased&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1583&quot; title=&quot;cbind() operator for Scala DRMs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1583&quot;&gt;&lt;del&gt;MAHOUT-1583&lt;/del&gt;&lt;/a&gt;: cbind() operator for Scala DRMs&lt;br/&gt;
    +  &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1596&quot; title=&quot;support for rbind() operator on DRMs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1596&quot;&gt;&lt;del&gt;MAHOUT-1596&lt;/del&gt;&lt;/a&gt;: implement rbind() operator (Anand Avati and dlyubimov)&lt;br/&gt;
    +&lt;br/&gt;
    +  &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1597&quot; title=&quot;A + 1.0 (element-wise scala operation) gives wrong result if rdd is missing rows, Spark side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1597&quot;&gt;&lt;del&gt;MAHOUT-1597&lt;/del&gt;&lt;/a&gt;: A + 1.0 (element-wise scala operation) gives wrong result if rdd is missing rows, Spark side (dlyubimov)&lt;br/&gt;
    +&lt;br/&gt;
    +  &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1595&quot; title=&quot;iterateNonZero() is broken in MatrixVectorView&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1595&quot;&gt;&lt;del&gt;MAHOUT-1595&lt;/del&gt;&lt;/a&gt;: MatrixVectorView - implement a proper iterateNonZero() (Anand Avati via dlyubimov)&lt;br/&gt;
    +&lt;br/&gt;
    +  &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1529&quot; title=&quot;Finalize abstraction of distributed logical plans from backend operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1529&quot;&gt;&lt;del&gt;MAHOUT-1529&lt;/del&gt;&lt;/a&gt;(e): Move dense/sparse matrix test in mapBlock into spark (Anand Avati via dlyubimov)&lt;br/&gt;
    +&lt;br/&gt;
    +  &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1583&quot; title=&quot;cbind() operator for Scala DRMs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1583&quot;&gt;&lt;del&gt;MAHOUT-1583&lt;/del&gt;&lt;/a&gt;: cbind() operator for Scala DRMs (dlyubimov)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    er...not sure why changelog shows these changes, please sync to latest master so no changes until squash-commit please.&lt;/p&gt;</comment>
                            <comment id="14091355" author="githubbot" created="Fri, 8 Aug 2014 23:07:03 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16019136&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16019136&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,72 @@&lt;br/&gt;
    +package org.apache.mahout.classifier.naivebayes&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math._&lt;br/&gt;
    +import org.apache.mahout.math.function.VectorFunction&lt;br/&gt;
    +import scalabindings._&lt;br/&gt;
    +import scalabindings.RLikeOps._&lt;br/&gt;
    +import drm.RLikeDrmOps._&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    weird. this should be just &lt;/p&gt;

&lt;p&gt;        import RLikeDrmOps._&lt;/p&gt;

&lt;p&gt;    (since math._ is already imported)&lt;/p&gt;</comment>
                            <comment id="14091363" author="githubbot" created="Fri, 8 Aug 2014 23:09:15 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16019231&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16019231&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math-scala/src/main/scala/org/apache/mahout/math/cf/CooccurrenceAnalysis.scala &amp;#8212;&lt;br/&gt;
    @@ -15,7 +15,7 @@&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;limitations under the License.&lt;br/&gt;
      */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    -package org.apache.mahout.cf&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    hm. why any changes to Co-oc analysis? i think this needs merging with master with -Xtheirs&lt;/p&gt;</comment>
                            <comment id="14091367" author="githubbot" created="Fri, 8 Aug 2014 23:12:36 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51663705&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51663705&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    I think the patch went out of sync with current master pretty badly. may require merge, optionally with `-Xtheirs` if conflicts become too ugly.&lt;/p&gt;</comment>
                            <comment id="14091382" author="githubbot" created="Fri, 8 Aug 2014 23:22:06 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51664409&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51664409&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Ugg- sorry about that- my local repo went out of wack when I was merging something else.  Thanks. &lt;/p&gt;</comment>
                            <comment id="14091498" author="githubbot" created="Sat, 9 Aug 2014 01:25:49 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51671230&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51671230&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    OK.. rebased on master.  Not sure exactly what happened there.  everything should be up to date. &lt;/p&gt;</comment>
                            <comment id="14091501" author="githubbot" created="Sat, 9 Aug 2014 01:32:14 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16022926&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16022926&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/test/scala/org/apache/mahout/classifier/naivebayes/NBSparkTestSuite.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,11 @@&lt;br/&gt;
    +package org.apache.mahout.classifier.naivebayes&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings.RLikeOps._&lt;br/&gt;
    +import org.apache.mahout.math.scalabindings._&lt;br/&gt;
    +import org.apache.mahout.sparkbindings.test.DistributedSparkSuite&lt;br/&gt;
    +import org.apache.mahout.test.MahoutSuite&lt;br/&gt;
    +import org.scalatest.FunSuite&lt;br/&gt;
    +&lt;br/&gt;
    +class NBSparkTestSuite extends FunSuite with MahoutSuite with DistributedSparkSuite with NBTestBase&lt;/p&gt;
{
    +}
&lt;p&gt;    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    please remove `{ }` for classes with no body&lt;/p&gt;</comment>
                            <comment id="14091502" author="githubbot" created="Sat, 9 Aug 2014 01:32:40 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16022935&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16022935&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math-scala/pom.xml &amp;#8212;&lt;br/&gt;
    @@ -167,6 +167,12 @@&lt;br/&gt;
           &amp;lt;artifactId&amp;gt;mahout-math&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
         &amp;lt;/dependency&amp;gt;&lt;/p&gt;

&lt;p&gt;    +    &amp;lt;dependency&amp;gt;&lt;br/&gt;
    +      &amp;lt;groupId&amp;gt;org.apache.mahout&amp;lt;/groupId&amp;gt;&lt;br/&gt;
    +      &amp;lt;artifactId&amp;gt;mahout-mrlegacy&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
    +    &amp;lt;/dependency&amp;gt;&lt;br/&gt;
    +&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    what is  using mr-legacy here?&lt;/p&gt;</comment>
                            <comment id="14091503" author="githubbot" created="Sat, 9 Aug 2014 01:33:25 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51671505&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51671505&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Looks much -much cleaner, thank you Andrew!.&lt;/p&gt;</comment>
                            <comment id="14091506" author="githubbot" created="Sat, 9 Aug 2014 01:36:46 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16022971&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16022971&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NaiveBayes.scala &amp;#8212;&lt;br/&gt;
    @@ -0,0 +1,72 @@&lt;br/&gt;
    +package org.apache.mahout.classifier.naivebayes&lt;br/&gt;
    +&lt;br/&gt;
    +import org.apache.mahout.math._&lt;br/&gt;
    +import org.apache.mahout.math.function.VectorFunction&lt;br/&gt;
    +import scalabindings._&lt;br/&gt;
    +import scalabindings.RLikeOps._&lt;br/&gt;
    +import drm.RLikeDrmOps._&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    Yeah I was having alot of trouble with the imports. I&apos;m new to scala. I&apos;d tried your import suggestions, but was having trouble with them.  I was getting errors when I was using:&lt;/p&gt;

&lt;p&gt;        import RLikeDrmOps._&lt;/p&gt;

&lt;p&gt;    I put the package in:&lt;/p&gt;

&lt;p&gt;        org.apache.mahout.classifier.naivebayes&lt;/p&gt;

&lt;p&gt;    so it is a level down from `org.apache.mahout.math` so from what I was thinking it needed the `drm.RLikeDrmOps._`&lt;/p&gt;


</comment>
                            <comment id="14091509" author="githubbot" created="Sat, 9 Aug 2014 01:37:34 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16022978&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16022978&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math-scala/pom.xml &amp;#8212;&lt;br/&gt;
    @@ -167,6 +167,12 @@&lt;br/&gt;
           &amp;lt;artifactId&amp;gt;mahout-math&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
         &amp;lt;/dependency&amp;gt;&lt;/p&gt;

&lt;p&gt;    +    &amp;lt;dependency&amp;gt;&lt;br/&gt;
    +      &amp;lt;groupId&amp;gt;org.apache.mahout&amp;lt;/groupId&amp;gt;&lt;br/&gt;
    +      &amp;lt;artifactId&amp;gt;mahout-mrlegacy&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
    +    &amp;lt;/dependency&amp;gt;&lt;br/&gt;
    +&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    NaiveBayesModel is a java class in mr-legacy&lt;/p&gt;</comment>
                            <comment id="14091511" author="githubbot" created="Sat, 9 Aug 2014 01:40:44 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51671783&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51671783&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Thanks for the reviews!&lt;/p&gt;</comment>
                            <comment id="14091512" author="githubbot" created="Sat, 9 Aug 2014 01:41:35 +0100"  >&lt;p&gt;Github user dlyubimov commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r16023021&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r16023021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: math-scala/pom.xml &amp;#8212;&lt;br/&gt;
    @@ -167,6 +167,12 @@&lt;br/&gt;
           &amp;lt;artifactId&amp;gt;mahout-math&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
         &amp;lt;/dependency&amp;gt;&lt;/p&gt;

&lt;p&gt;    +    &amp;lt;dependency&amp;gt;&lt;br/&gt;
    +      &amp;lt;groupId&amp;gt;org.apache.mahout&amp;lt;/groupId&amp;gt;&lt;br/&gt;
    +      &amp;lt;artifactId&amp;gt;mahout-mrlegacy&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
    +    &amp;lt;/dependency&amp;gt;&lt;br/&gt;
    +&lt;br/&gt;
    &amp;#8212; End diff &amp;#8211;&lt;/p&gt;

&lt;p&gt;    ok&lt;/p&gt;</comment>
                            <comment id="14091515" author="githubbot" created="Sat, 9 Aug 2014 01:45:29 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51671975&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51671975&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    ok i suppose since the test passes we can merge that in now, and tweak any problems later, in order not to have to handle any more conflicts...&lt;/p&gt;</comment>
                            <comment id="14091528" author="githubbot" created="Sat, 9 Aug 2014 02:10:51 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-51672766&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-51672766&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    It still needs alot of work before its really a functioning Classifier. At the moment it assumes that each instance is a uniqe class- It probably needs to go back to accepting an array as Sebastian originally had it.  It definitly needs some more tests.  But i&apos;m fine with merging this in as a base now and working on it from there.  It definitly will make it easier to work with!   &lt;/p&gt;</comment>
                            <comment id="14123649" author="githubbot" created="Fri, 5 Sep 2014 22:46:39 +0100"  >&lt;p&gt;Github user andrewpalumbo closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14123663" author="githubbot" created="Fri, 5 Sep 2014 22:55:17 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-54686571&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-54686571&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    is this abandoned?&lt;/p&gt;</comment>
                            <comment id="14123752" author="githubbot" created="Sat, 6 Sep 2014 00:03:12 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-54692047&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-54692047&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Not at all- I was just closing it up to keep the PR list clean  while i did some work on it (was hoping to soon).  Should just merge it as we discussed and then work from there?  Was going to do a little more work on it but I&apos;m not sure how long that will take.  &lt;/p&gt;</comment>
                            <comment id="14123756" author="githubbot" created="Sat, 6 Sep 2014 00:05:38 +0100"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-54692207&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-54692207&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    No, do what you think is right... just was checking.&lt;/p&gt;</comment>
                            <comment id="14123790" author="githubbot" created="Sat, 6 Sep 2014 00:24:28 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-54693386&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-54693386&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    cool- thx. I plan on focusing on this for a while now (when I can).  I have to look at it closely again.  &lt;/p&gt;</comment>
                            <comment id="14132868" author="githubbot" created="Sat, 13 Sep 2014 19:04:28 +0100"  >&lt;p&gt;GitHub user andrewpalumbo reopened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt; Port Naive Bayes to Spark DSL (for comment)&lt;/p&gt;

&lt;p&gt;    Created this PR to review the patch provided by Christoph Viebig and team, Students of TU, Berlin.  It is based on Sebastian&apos;s code from before the DSL was abstracted away from Spark. &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #32&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit fcde47a0ed2708e991c302f152fdb2afde37a44d&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-07-18T04:55:22Z&lt;/p&gt;

&lt;p&gt;    applied &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;.patch by cviebig and team from TU Berlin&lt;/p&gt;

&lt;p&gt;commit 0b985daa62d756d4b34aaecc3a6b97cc75168b6a&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-07-18T04:59:24Z&lt;/p&gt;

&lt;p&gt;    applied &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;a patch: edits to NaiveBayesModel call&lt;/p&gt;

&lt;p&gt;commit 8a769711cff7743be6a41f784edc335778d497c4&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-07T05:51:21Z&lt;/p&gt;

&lt;p&gt;    Moved NaiveBayes.scala to math-scala module under o.a.m.classification.  Made several modifications to get more Mahout DSL-like&lt;/p&gt;

&lt;p&gt;commit de202e9b1c367d68a3778ef41dae6554958459d2&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-07T07:10:41Z&lt;/p&gt;

&lt;p&gt;    Removed from drm package.  More DSl stuff&lt;/p&gt;

&lt;p&gt;commit e331ffd4059ddd914f78252eb2229c89a1ed6622&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-07T22:50:35Z&lt;/p&gt;

&lt;p&gt;    Added mrlegacy dependency and imports&lt;/p&gt;

&lt;p&gt;commit 796b8e3bb129be55ef5873df062b2b22c2f2ac78&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-08T00:59:31Z&lt;/p&gt;

&lt;p&gt;    Moved NaiveBayes.scala to package o.a.m.classifier.naivebayes&lt;/p&gt;

&lt;p&gt;commit ca08b5ae422010d73b801cee2a8d8392b9028301&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-08T02:38:30Z&lt;/p&gt;

&lt;p&gt;    Fixed imports and other small things.  Compiles now.&lt;/p&gt;

&lt;p&gt;commit 848e8ff8becfa9446a643a511194dd3ad3892163&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-08T08:25:03Z&lt;/p&gt;

&lt;p&gt;    Changed constructor to accept DrmLike rather than an array of DrmLike.  Added in a very basic test from.  Test passes.Hacked a bunch of NaiveBayes.scala together so needs alot of cleanup.  Basic skeleton of NB&lt;/p&gt;

&lt;p&gt;commit aaa81774c7617c8f436717c040d6d0d166091440&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-08T21:21:50Z&lt;/p&gt;

&lt;p&gt;    Clean up a few things&lt;/p&gt;

&lt;p&gt;commit a55ecb5fb709e030e4964118fab58ec3708fbe1d&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-08T21:57:36Z&lt;/p&gt;

&lt;p&gt;    Clean up a few more things&lt;/p&gt;

&lt;p&gt;commit 337ad5ffc3ac047590066432049db6d3c07d86ed&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-08-29T15:28:30Z&lt;/p&gt;

&lt;p&gt;    Style cleanup&lt;/p&gt;

&lt;p&gt;commit bc462fd925004c33a04f1d2fea387978999cf25f&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T02:28:16Z&lt;/p&gt;

&lt;p&gt;    First attempt at combiner for seq2sparse outputted vectors&lt;/p&gt;

&lt;p&gt;commit e8a40aabd47af024ab02b47dc1769fd18d2679a8&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T02:44:51Z&lt;/p&gt;

&lt;p&gt;    A few fixes and some cleanup.  Compiles.&lt;/p&gt;

&lt;p&gt;commit bbaf2f356c3b86badfd9cb8778475f52c80f24f8&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T02:55:33Z&lt;/p&gt;

&lt;p&gt;    Fixed second loop in Comibiner, cleanup, comments&lt;/p&gt;

&lt;p&gt;commit a9bbcd5f97b45ad386df2f23d472e7501db8845d&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T03:08:39Z&lt;/p&gt;

&lt;p&gt;    Remove unused imoport, add some comments&lt;/p&gt;

&lt;p&gt;commit 6be1b93f5e3b86c36a74ea42b68436dedfb1c8b7&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T14:05:32Z&lt;/p&gt;

&lt;p&gt;    comments, javadoc, liscense&lt;/p&gt;

&lt;p&gt;commit 557ff0a4b1e048cd9cf1f3f03f2b7d5f23c610aa&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T14:20:45Z&lt;/p&gt;

&lt;p&gt;    change blockB to blockA.like and setter to setQuick&lt;/p&gt;

&lt;p&gt;commit 0b5238faa513033c06512aad9941baa6feb5c355&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T14:33:53Z&lt;/p&gt;

&lt;p&gt;    change trainNB to accept a DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;Int&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;commit e006fc3d58fb6cd85f5093c5c0641b177d58f793&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T14:39:36Z&lt;/p&gt;

&lt;p&gt;    comments&lt;/p&gt;

&lt;p&gt;commit fa8fc27f6572d2edca136f0c19f7bca857f68195&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-11T16:59:45Z&lt;/p&gt;

&lt;p&gt;    Change extractLabelsAndAggregateObservations to take a DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;K&amp;#93;&lt;/span&gt; rather than &lt;span class=&quot;error&quot;&gt;&amp;#91;String&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;commit f510242391a93f0afd61c822a5c579cb38f65123&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;ap.dev@outlook.com&amp;gt;&lt;br/&gt;
Date:   2014-09-13T17:57:45Z&lt;/p&gt;

&lt;p&gt;    Cleanup, comments&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14132871" author="githubbot" created="Sat, 13 Sep 2014 19:12:34 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-55501933&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-55501933&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    This is still very much &quot;java in scala&quot;, and needs alot of work (not even sure if what im referring to as the &quot;Combiner&quot; even works .  But conceptually training should work through to NaiveBayesModel on any engine.  NaiveBayesModel is an MRLegacy object.  &lt;/p&gt;

&lt;p&gt;    My thinking is that extractLabelsAndAggregateObservations can be overridden and optimized for any engine.   &lt;/p&gt;</comment>
                            <comment id="14165901" author="andrew_palumbo" created="Thu, 9 Oct 2014 23:36:58 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ssc&quot; class=&quot;user-hover&quot; rel=&quot;ssc&quot;&gt;Sebastian Schelter&lt;/a&gt; I&apos;ve been doing some work here that is almost ready to commit- do you mind if I re-assign this to myself?  &lt;/p&gt;</comment>
                            <comment id="14180766" author="dlyubimov" created="Thu, 23 Oct 2014 01:01:10 +0100"  >&lt;p&gt;I am guessing no answer means ok &lt;br/&gt;
@Andrew please go ahead it makes sense to press on on this.&lt;/p&gt;</comment>
                            <comment id="14180872" author="andrew_palumbo" created="Thu, 23 Oct 2014 02:27:15 +0100"  >&lt;p&gt;Thanks Dmitriy, I&apos;ll get back to work on this shortly.  Appreciate it!&lt;/p&gt;</comment>
                            <comment id="14237320" author="githubbot" created="Sun, 7 Dec 2014 23:43:46 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-65961642&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-65961642&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    I&#8217;ve had some time to work on this recently and have Na&#239;ve Bayes implemented in the math-scala and spark modules with basic CLI drivers (for Spark) and working with the classify-20newsgroups.sh example.  It still needs some refactoring and cleanup. In the math-scala implementation, there are some problems with the `NaiveBayes.extractLabelsAndAggregateObservations(&#8230;)` function in NaiveBayes.scala.  I&#8217;ve put together a hack using `mapBlock(&#8230;)` which works, but very inefficiently (uses 2 transposes on a large set and ).  Not very pretty.  As well in order to convert from a String-Keyed to an Int-Keyed DRM it is necessary to collect the entire dataset up front.   I&#8217;m going to investigate a .toIntKeyed() function for DrmLike  though I&#8217;m still not all that familiar with the RDD backing. So currently I&#8217;m just overriding it in a SparkNaiveBayes object in the spark package. &lt;/p&gt;

&lt;p&gt;    There are three (trivial) MRLegacy dependencies:  `ComplementaryThetaTrainer`, `ResultAnalyzer` and  ClassifierResult.  I&#8217;ll probably port `ComplementaryThetaTrainer` into the Math-Scala module.  Maybe `ComplementaryThetaTrainer` and `ResultAnalyzer` are candidates to be moved into Mahout-Math.  I&#8217;m not sure if we&#8217;re trying to keep MRLegacy out of Math-Scala?&lt;br/&gt;
    A few issues that I still need to work out:&lt;/p&gt;

&lt;p&gt;    1.	A bug in the H20Drm &#8211;` H20Helper.java` uses a `water.fvec.Vec` vector to store label keys but `water.fvec.Vec` does not accept String values (throws an error).  So we need a new distributed data structure to store String Row Labels for H20 DRMs. Otherwise this should be working for H20. &lt;/p&gt;

&lt;p&gt;    2.	Need a distributed method for conversion for the conversion from String to Int-Keyed DRMs (as mentioned above)&lt;/p&gt;

&lt;p&gt;    3.	As is, the `NBModel` is not fully serializable (several `RandomAccessSparseVectors` fields and a `Matrix` field in the class).  I&#8217;m still working out a way to broadcast it to the mapBlock closure. Should be an relatively straightforward fix.  So NaiveBayes.test(&#8230;) is running sequentially for now, and collecting the full test set up front.  I haven&#8217;t looked at it too closely, but I&#8217;m wondering if we can add a `drmBroadcast(&#8230;)` method for arbitrary (serializable) Broadcast Objects?  &lt;/p&gt;

&lt;p&gt;    Next steps:&lt;/p&gt;

&lt;p&gt;    1.	Address above issues.&lt;/p&gt;

&lt;p&gt;    2.	Add in more CLI options.&lt;/p&gt;

&lt;p&gt;    3.	Add more tests.&lt;/p&gt;

&lt;p&gt;    4.	Implement NaiveBayes.classifyNew(&#8230;) method as outlined in &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1564&quot; title=&quot;Naive Bayes Classifier for New Text Documents&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1564&quot;&gt;&lt;del&gt;MAHOUT-1564&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;


&lt;p&gt;    If there are no objections, I&#8217;ll probably commit this after a bit more cleanup, and after some style fixes, and then work on the next steps from there.&lt;/p&gt;

&lt;p&gt;    Any input is appreciated.&lt;/p&gt;
</comment>
                            <comment id="14237322" author="githubbot" created="Sun, 7 Dec 2014 23:52:57 +0000"  >&lt;p&gt;Github user avati commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-65961981&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-65961981&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    On Sun Dec 07 2014 at 3:43:50 PM Andrew Palumbo &amp;lt;notifications@github.com&amp;gt;&lt;br/&gt;
    wrote:&lt;/p&gt;

&lt;p&gt;    &amp;gt;&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt;    1.&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt;    A bug in the H20Drm &#8211;H20Helper.java uses a water.fvec.Vec vector to&lt;br/&gt;
    &amp;gt;    store label keys but water.fvec.Vec does not accept String values&lt;br/&gt;
    &amp;gt;    (throws an error). So we need a new distributed data structure to store&lt;br/&gt;
    &amp;gt;    String Row Labels for H20 DRMs. Otherwise this should be working for H20.&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    H2ODrm actually stores label keys as ValueString internally (by converting&lt;br/&gt;
    java String to/fro). Can you point to the exact line which is failing (or&lt;br/&gt;
    give the backtrace), I can have a quick look / fix it.&lt;/p&gt;

&lt;p&gt;    Thanks&lt;/p&gt;</comment>
                            <comment id="14237323" author="githubbot" created="Sun, 7 Dec 2014 23:57:20 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r21430349&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r21430349&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,8 +327,9 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
             writer.set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Hey anand,  getting an error here. &lt;/p&gt;</comment>
                            <comment id="14237325" author="githubbot" created="Mon, 8 Dec 2014 00:13:47 +0000"  >&lt;p&gt;Github user avati commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r21430551&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r21430551&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,8 +327,9 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
             writer.set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Ah, patch coming up..&lt;/p&gt;</comment>
                            <comment id="14237326" author="githubbot" created="Mon, 8 Dec 2014 00:14:34 +0000"  >&lt;p&gt;Github user avati commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r21430555&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r21430555&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,8 +327,9 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
             writer.set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Please try this patch:&lt;/p&gt;

&lt;p&gt;    diff --git a/h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java b/h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java&lt;br/&gt;
    index 294ec7e..c3b1339 100644&lt;br/&gt;
    &amp;#8212; a/h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java&lt;br/&gt;
    +++ b/h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java&lt;br/&gt;
    @@ -329,7 +329,7 @@ public class H2OHelper {&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;/p&gt;

&lt;p&gt;           for (long r = 0; r &amp;lt; m.rowSize(); r++) &lt;/p&gt;
{
    -        writer.set(r, rmap.get(r));
    +        labels.chunkForRow(r).set(r, rmap.get(r));
           }

&lt;p&gt;           writer.close(closer);&lt;/p&gt;</comment>
                            <comment id="14237328" author="githubbot" created="Mon, 8 Dec 2014 00:24:42 +0000"  >&lt;p&gt;Github user avati commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r21430646&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r21430646&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,8 +327,9 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
             writer.set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Argh, the formatting got messed up. Please replace &quot;writer.set(r, rmap.get(r));&quot; with &quot;labels.chunkForRow(r).set(r, rmap.get(r));&quot;&lt;/p&gt;</comment>
                            <comment id="14237330" author="githubbot" created="Mon, 8 Dec 2014 00:31:24 +0000"  >&lt;p&gt;Github user avati commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r21430707&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r21430707&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,8 +327,9 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
             writer.set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Please merge &lt;a href=&quot;https://github.com/apache/mahout/pull/64&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/64&lt;/a&gt; to fix this bug.&lt;/p&gt;</comment>
                            <comment id="14237336" author="githubbot" created="Mon, 8 Dec 2014 00:56:04 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r21431045&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r21431045&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,9 +327,11 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;/li&gt;
	&lt;li&gt;writer.set(r, rmap.get(r));&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +        //writer.set(r, rmap.get(r));&lt;br/&gt;
    +        labels.chunkForRow(r).set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Thanks again for looking at this, Anand - I&apos;m getting the following with patch applied and the h2o tests enabled.  Appreciate it! &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;NB Aggregator *** FAILED ***&lt;br/&gt;
      java.lang.IllegalArgumentException: Not a String&lt;br/&gt;
      at water.fvec.Chunk.set_impl(Chunk.java:189)&lt;br/&gt;
      at water.fvec.Chunk.set0(Chunk.java:158)&lt;br/&gt;
      at water.fvec.Chunk.set(Chunk.java:105)&lt;br/&gt;
      at org.apache.mahout.h2obindings.H2OHelper.drmFromMatrix(H2OHelper.java:334)&lt;br/&gt;
      at org.apache.mahout.h2obindings.H2OEngine$.drmParallelizeWithRowLabels(H2OEngine.scala:83)&lt;br/&gt;
      at org.apache.mahout.math.drm.package$.drmParallelizeWithRowLabels(package.scala:67)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBTestBase$$anonfun$2.apply$mcV$sp(NBTestBase.scala:90)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBTestBase$$anonfun$2.apply(NBTestBase.scala:69)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBTestBase$$anonfun$2.apply(NBTestBase.scala:69)&lt;br/&gt;
      at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)&lt;br/&gt;
      ...&lt;/li&gt;
	&lt;li&gt;Model DFS Serialization *** FAILED ***&lt;br/&gt;
      java.lang.IllegalArgumentException: Not a String&lt;br/&gt;
      at water.fvec.Chunk.set_impl(Chunk.java:189)&lt;br/&gt;
      at water.fvec.Chunk.set0(Chunk.java:158)&lt;br/&gt;
      at water.fvec.Chunk.set(Chunk.java:105)&lt;br/&gt;
      at org.apache.mahout.h2obindings.H2OHelper.drmFromMatrix(H2OHelper.java:334)&lt;br/&gt;
      at org.apache.mahout.h2obindings.H2OEngine$.drmParallelizeWithRowLabels(H2OEngine.scala:83)&lt;br/&gt;
      at org.apache.mahout.math.drm.package$.drmParallelizeWithRowLabels(package.scala:67)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBModel.dfsWrite(NBModel.scala:144)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBTestBase$$anonfun$3.apply$mcV$sp(NBTestBase.scala:142)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBTestBase$$anonfun$3.apply(NBTestBase.scala:117)&lt;br/&gt;
      at org.apache.mahout.classifier.naivebayes.NBTestBase$$anonfun$3.apply(NBTestBase.scala:117)&lt;br/&gt;
      ...&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="14249060" author="githubbot" created="Tue, 16 Dec 2014 22:15:48 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-67242761&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-67242761&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    I&apos;m going to wait to push this until i figure out the best way to get all of the MRLegacy dependencies out.&lt;/p&gt;</comment>
                            <comment id="14250682" author="githubbot" created="Wed, 17 Dec 2014 22:22:19 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r22009635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r22009635&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,9 +327,11 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;/li&gt;
	&lt;li&gt;writer.set(r, rmap.get(r));&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +        //writer.set(r, rmap.get(r));&lt;br/&gt;
    +        labels.chunkForRow(r).set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    looks like the exception is being thrown here:&lt;br/&gt;
    ```java&lt;br/&gt;
    water.fvec.Chunk.set_impl(Chunk.java:189)&lt;/p&gt;

&lt;p&gt;    boolean set_impl (int idx, String str) &lt;/p&gt;
{ throw new IllegalArgumentException(&quot;Not a String&quot;); }
&lt;p&gt;    ```&lt;br/&gt;
    I&apos;ve been looking through some of the more recent code and it seems that the `Vec.Writer.set( long i, String str)` signature has been phased out.&lt;/p&gt;

&lt;p&gt;    We should probably address this as a separate issue since we have to update to a newer h2o-core artifact, and there may be some other issues in there too.  &lt;/p&gt;</comment>
                            <comment id="14250690" author="githubbot" created="Wed, 17 Dec 2014 22:25:45 +0000"  >&lt;p&gt;Github user avati commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r22009885&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r22009885&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,9 +327,11 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;/li&gt;
	&lt;li&gt;writer.set(r, rmap.get(r));&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +        //writer.set(r, rmap.get(r));&lt;br/&gt;
    +        labels.chunkForRow(r).set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    I am looking into this. Have been a bit busy, will get back on this soon.&lt;/p&gt;

&lt;p&gt;    On Wed, Dec 17, 2014, 14:22 Andrew Palumbo &amp;lt;notifications@github.com&amp;gt; wrote:&lt;/p&gt;

&lt;p&gt;    &amp;gt; In h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java&lt;br/&gt;
    &amp;gt; &amp;lt;&lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion-diff-22009635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion-diff-22009635&lt;/a&gt;&amp;gt;:&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt; &amp;gt; @@ -327,9 +327,11 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
    &amp;gt; &amp;gt;        labels = frame.anyVec().makeZero();&lt;br/&gt;
    &amp;gt; &amp;gt;        Vec.Writer writer = labels.open();&lt;br/&gt;
    &amp;gt; &amp;gt;        Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    &amp;gt; &amp;gt; -&lt;br/&gt;
    &amp;gt; &amp;gt; -      for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    &amp;gt; &amp;gt; -        writer.set(r, rmap.get(r));&lt;br/&gt;
    &amp;gt; &amp;gt; +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    &amp;gt; &amp;gt; +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    &amp;gt; &amp;gt; +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    &amp;gt; &amp;gt; +        //writer.set(r, rmap.get(r));&lt;br/&gt;
    &amp;gt; &amp;gt; +        labels.chunkForRow(r).set(r, rmap.get(r));&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt; looks like the exception is being thrown here:&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt; water.fvec.Chunk.set_impl(Chunk.java:189)&lt;br/&gt;
    &amp;gt; boolean set_impl (int idx, String str) &lt;/p&gt;
{ throw new IllegalArgumentException(&quot;Not a String&quot;); }
&lt;p&gt;    &amp;gt;&lt;br/&gt;
    &amp;gt; I&apos;ve been looking through some of the more recent code and it seems that&lt;br/&gt;
    &amp;gt; the Vec.Writer.set( long i, String str) signature has been phased out.&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt; We should probably address this as a separate issue since we have to&lt;br/&gt;
    &amp;gt; update to a newer h2o-core artifact, and there may be some other issues in&lt;br/&gt;
    &amp;gt; there too.&lt;br/&gt;
    &amp;gt;&lt;br/&gt;
    &amp;gt; &#8212;&lt;br/&gt;
    &amp;gt; Reply to this email directly or view it on GitHub&lt;br/&gt;
    &amp;gt; &amp;lt;&lt;a href=&quot;https://github.com/apache/mahout/pull/32/files#r22009635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32/files#r22009635&lt;/a&gt;&amp;gt;.&lt;br/&gt;
    &amp;gt;&lt;/p&gt;</comment>
                            <comment id="14250705" author="githubbot" created="Wed, 17 Dec 2014 22:32:59 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#discussion_r22010435&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#discussion_r22010435&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java &amp;#8212;&lt;br/&gt;
    @@ -327,9 +327,11 @@ public static H2ODrm drmFromMatrix(Matrix m, int minHint, int exactHint) {&lt;br/&gt;
           labels = frame.anyVec().makeZero();&lt;br/&gt;
           Vec.Writer writer = labels.open();&lt;br/&gt;
           Map&amp;lt;Integer,String&amp;gt; rmap = reverseMap(map);&lt;br/&gt;
    -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (long r = 0; r &amp;lt; m.rowSize(); r++) {&lt;/li&gt;
	&lt;li&gt;writer.set(r, rmap.get(r));&lt;br/&gt;
    +      // TODO: fix BUG here... h20 water.fvec.Vec does not accept String values&lt;br/&gt;
    +      // TODO: need a new distributed data structure for storing String keys.&lt;br/&gt;
    +      for (int r = 0; r &amp;lt; m.rowSize(); r++) {&lt;br/&gt;
    +        //writer.set(r, rmap.get(r));&lt;br/&gt;
    +        labels.chunkForRow(r).set(r, rmap.get(r));
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Cool thanks.    &lt;/p&gt;</comment>
                            <comment id="14252765" author="githubbot" created="Fri, 19 Dec 2014 01:50:17 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32#issuecomment-67587905&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32#issuecomment-67587905&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    All MRLegacy dependencies are now removed.  I ported `ConfusionMatrix`,`ClassifierResult` and `ResultAnalyzer` over to a new package `o.a.m.classifier.stats`.  They had some dependencies on Statistics classes in  `o.a.m.cf.taste.impl.common` so i brought them over too.  They&apos;re all living in the `o.a.m.classifier.stats` package for now- but it may be useful to move them in the future.   They still need documentation.  I&apos;ll probably do a couple more cleanup checks and then  push this in the next day or two.&lt;/p&gt;</comment>
                            <comment id="14254090" author="githubbot" created="Fri, 19 Dec 2014 22:00:50 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/32&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14254143" author="hudson" created="Fri, 19 Dec 2014 22:31:19 +0000"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #2900 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2900/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2900/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt; Port Naive Bayes to Scala DSL (apalumbo) closes apache/mahout#32 (ap.dev: rev 310534319ae8df4cd95c3ff044afb6afdaee2605)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TestNBDriver.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NBModel.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NBClassifier.scala&lt;/li&gt;
	&lt;li&gt;bin/mahout&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NaiveBayes.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/classifier/naivebayes/SparkNaiveBayes.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/stats/ClassifierStats.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/test/scala/org/apache/mahout/classifier/stats/ClassifierStatsTestBase.scala&lt;/li&gt;
	&lt;li&gt;spark/src/test/scala/org/apache/mahout/classifier/naivebayes/NBSparkTestSuite.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/stats/ConfusionMatrix.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/sparkbindings/drm/package.scala&lt;/li&gt;
	&lt;li&gt;h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java&lt;/li&gt;
	&lt;li&gt;CHANGELOG&lt;/li&gt;
	&lt;li&gt;math-scala/src/test/scala/org/apache/mahout/classifier/naivebayes/NBTestBase.scala&lt;/li&gt;
	&lt;li&gt;spark/src/test/scala/org/apache/mahout/classifier/stats/ClassifierStatsSparkTestSuite.scala&lt;/li&gt;
	&lt;li&gt;examples/bin/classify-20newsgroups.sh&lt;/li&gt;
	&lt;li&gt;spark-shell/src/main/scala/org/apache/mahout/sparkbindings/shell/MahoutSparkILoop.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TrainNBDriver.scala&lt;/li&gt;
	&lt;li&gt;mrlegacy/src/test/java/org/apache/mahout/classifier/ConfusionMatrixTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14254170" author="andrew_palumbo" created="Fri, 19 Dec 2014 22:50:59 +0000"  >&lt;p&gt;I will still be adding tests, scaladocs and doing some refactoring. As well as more work on the CLI drivers.&lt;/p&gt;</comment>
                            <comment id="14254198" author="hudson" created="Fri, 19 Dec 2014 23:10:24 +0000"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #2901 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/2901/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/2901/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt; fix changelog and remove temporary hardcoded settings from spark-shell (ap.dev: rev 0f037cb03e77c09627c36962600e4fb00c4013c8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;spark-shell/src/main/scala/org/apache/mahout/sparkbindings/shell/MahoutSparkILoop.scala&lt;/li&gt;
	&lt;li&gt;CHANGELOG&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14255237" author="pferrel" created="Sun, 21 Dec 2014 18:21:15 +0000"  >&lt;p&gt;I did some simplification of the drivers which made your driver.start override unnecessary. So i commented them out. They do no harm but would if the default config ever changed.&lt;/p&gt;

&lt;p&gt;Pardon my ignorance of the naive bayes driver but do we really want to keep using sequence files? Even for spark-rowsimilarity we use delimited text to encode a DRM, adding the ability to have user specific IDs. This has the benefit of hiding the Mahout IDs from a CLI user, which seems to be the source of a great number of mistakes and mailing list questions. &lt;/p&gt;

&lt;p&gt;The internal item and row similarity code is structured around rdd backed DRMs so the DSL is honored. But for the CLI text makes input human readable and language neutral.&lt;/p&gt;

&lt;p&gt;Since we don&apos;t save around intermediate files anymore do we have to live with the binary format going forward?&lt;/p&gt;</comment>
                            <comment id="14255330" author="andrew_palumbo" created="Mon, 22 Dec 2014 00:47:31 +0000"  >&lt;p&gt;Thanks for looking at this Pat.   My thinking up to now as far as using Sequence files is that the input to Naive Bayes (for now) would be the output from seq2sparse; a &amp;lt;Text,VectorWritable&amp;gt; Sequence file.  This is really just to keep it simple for now and to, and the CLI drivers that I wrote are a rough cut that I basically copied and pasted from your Item-similarity drivers (very cool by the way).   &lt;/p&gt;

&lt;p&gt;I&apos;m all for taking other input formats.   Especially since were hopefully moving on from MR seq2sparse soon.  I need to read up on what you did with the Readers and Writers.  &lt;/p&gt;

&lt;p&gt;The issue that alot of people are having on the list with MRLegacy NB (if I&apos;m think of the issue same as you mentioned) is that each Vectorized Document has to contain a Category in its Key.  Since the Mahout Process for text vectorization has been to seperate documents into directorys by their respective categories, then run `mahout seqdirectory` which converts each document into into a sequence file with \directory\doc_id as a key then seq2sparse, ... ect... So since the category extraction step in MRLegacy NB was hardcoded as a split on &quot;\&quot; and labeling the document as with the first token after the split (the directory id). I&apos;ve kind of taken this as the convention.  &lt;/p&gt;

&lt;p&gt;Internally the documents ids are discarded and the TF-IDF weights are aggregated by category and then individually discarded. &lt;/p&gt;

&lt;p&gt;I&apos;ve tried to relax the Category extraction convention in the DSL Naive Bayes by allowing the &lt;del&gt;user&lt;/del&gt;  &lt;em&gt;developer&lt;/em&gt; the ability to pass an arbitrary `String =&amp;gt; String`  function in the aggregation constructor.  This way the Labels can be extracted by e.g. a regex pattern.  I&apos;d like to incorporate this as an option into the CLI driver but haven&apos;t really made it this far yet.  &lt;/p&gt;

&lt;p&gt;So I think that with any format, there may be some confusion over the document labeling.   But I agree that we should support other file formats as input.  &lt;/p&gt;

</comment>
                            <comment id="14292684" author="githubbot" created="Tue, 27 Jan 2015 00:09:33 +0000"  >&lt;p&gt;GitHub user andrewpalumbo opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-h2o: Enable Naive Bayes Tests in h2o Module&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-h2o&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #72&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 0b204bbd3a6f8e532cf79f5d1a761e57c214b0d5&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-01-26T21:15:02Z&lt;/p&gt;

&lt;p&gt;    Enable Naive Bayes Tests in h2o Module&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14292707" author="githubbot" created="Tue, 27 Jan 2015 00:25:25 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72#issuecomment-71567408&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72#issuecomment-71567408&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Will merge after &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1626&quot; title=&quot;Support for required quasi-algebraic operations and starting with aggregating rows/blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1626&quot;&gt;MAHOUT-1626&lt;/a&gt; is resolved.&lt;/p&gt;</comment>
                            <comment id="14292708" author="githubbot" created="Tue, 27 Jan 2015 00:25:25 +0000"  >&lt;p&gt;Github user andrewpalumbo closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14292710" author="githubbot" created="Tue, 27 Jan 2015 00:25:30 +0000"  >&lt;p&gt;GitHub user andrewpalumbo reopened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-h2o: Enable Naive Bayes Tests in h2o Module&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-h2o&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #72&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 0b204bbd3a6f8e532cf79f5d1a761e57c214b0d5&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-01-26T21:15:02Z&lt;/p&gt;

&lt;p&gt;    Enable Naive Bayes Tests in h2o Module&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14292742" author="githubbot" created="Tue, 27 Jan 2015 00:44:55 +0000"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72#issuecomment-71569572&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72#issuecomment-71569572&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Will merge after &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1638&quot; title=&quot;H2O bindings fail at drmParallelizeWithRowLabels(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1638&quot;&gt;&lt;del&gt;MAHOUT-1638&lt;/del&gt;&lt;/a&gt; is resolved.&lt;/p&gt;</comment>
                            <comment id="14371674" author="andrew_palumbo" created="Fri, 20 Mar 2015 17:24:23 +0000"  >&lt;p&gt;Still have a couple of things to do:  General Cleanup, CLI changes doc comments, etc.  Will do these under a new JIRA.&lt;/p&gt;</comment>
                            <comment id="14378866" author="githubbot" created="Tue, 24 Mar 2015 23:05:27 +0000"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/78#issuecomment-85733101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/78#issuecomment-85733101&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    BTW @andrewpalumbo could you please change the header to show the issue like this: &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;,  then close and repopen it. Once re-opened, @asfgit bot will start synching jira to reviews and backwards.&lt;/p&gt;</comment>
                            <comment id="14378945" author="githubbot" created="Tue, 24 Mar 2015 23:48:44 +0000"  >&lt;p&gt;GitHub user andrewpalumbo reopened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/78&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/78&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt; driver cleanup&lt;/p&gt;

&lt;p&gt;    This removes parseIndexedDatasetFormatOptions() and some other option parsers not used by `spark-trainnb` and `spark-testnb`.  There are still a couple of options that I need to add but first want to figure out how to handle the  required `-o` option.&lt;/p&gt;

&lt;p&gt;    Currently `spark-testnb` doesn&apos;t have any actual output.  I was thinking about writing a confusion matrix as Text out to a file.      &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-driver-cleanup&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/78.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/78.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #78&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit d0efc75b44b749081fbc8395f4520bc38e8babc3&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-06T23:23:33Z&lt;/p&gt;

&lt;p&gt;    Remove unused parsers&lt;/p&gt;

&lt;p&gt;commit 7a9dbb2f29d775f07b65c427da0fa029e3a4a4b5&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-06T23:45:23Z&lt;/p&gt;

&lt;p&gt;    remove requirement for -o option from MahoutOptionParser&lt;/p&gt;

&lt;p&gt;commit 02de3edb5e408aa221e6e60121ab8fca11c72133&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-07T00:07:17Z&lt;/p&gt;

&lt;p&gt;    pass complementary option through to training.  cleanup.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14379009" author="githubbot" created="Wed, 25 Mar 2015 00:28:10 +0000"  >&lt;p&gt;Github user dlyubimov commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/78#issuecomment-85755842&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/78#issuecomment-85755842&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    well if you decide to get another issue, just edit the header again and re-open again. since current issue seems to be closed. or just re-open the current jira issue.&lt;/p&gt;</comment>
                            <comment id="14382841" author="andrew_palumbo" created="Thu, 26 Mar 2015 22:35:18 +0000"  >&lt;p&gt;Reopening to finish some work and clean-up here:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fix #78 based on Pat&apos;s comments and push&lt;/li&gt;
	&lt;li&gt;add CLI options for aplha_i and -overwrite (save Regex key parser option for 0.10.1)&lt;/li&gt;
	&lt;li&gt;Currently testNB brings all code into Memory up front and runs sequentially (would like to get this fixed for 0.10.0)
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;Work is done except Classifier classes need to be fully serializable to mapBlock closures&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Clean up code, comments, etc.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="14394084" author="githubbot" created="Fri, 3 Apr 2015 06:32:19 +0100"  >&lt;p&gt;Github user avati commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72#issuecomment-89169192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72#issuecomment-89169192&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Please find fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1638&quot; title=&quot;H2O bindings fail at drmParallelizeWithRowLabels(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1638&quot;&gt;&lt;del&gt;MAHOUT-1638&lt;/del&gt;&lt;/a&gt; in #99. I have tested this PR on top of that patch and NB tests work fine.&lt;/p&gt;</comment>
                            <comment id="14394678" author="githubbot" created="Fri, 3 Apr 2015 17:51:08 +0100"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/72&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/72&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14394725" author="hudson" created="Fri, 3 Apr 2015 18:22:25 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3045 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3045/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3045/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1638&quot; title=&quot;H2O bindings fail at drmParallelizeWithRowLabels(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1638&quot;&gt;&lt;del&gt;MAHOUT-1638&lt;/del&gt;&lt;/a&gt;: H2O bindings fail at drmParallelizeWithRowLabels(...) closes apache/mahout#99 and &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-h2o closes apache/mahout#72 (apalumbo: rev 5197ac9e8393763dd4ed58f5f1e9f167e75d3078)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;CHANGELOG&lt;/li&gt;
	&lt;li&gt;h2o/src/main/java/org/apache/mahout/h2obindings/H2OHdfs.java&lt;/li&gt;
	&lt;li&gt;h2o/src/test/scala/org/apache/mahout/classifier/stats/ClassifierStatsH2OTestSuite.scala&lt;/li&gt;
	&lt;li&gt;h2o/src/main/scala/org/apache/mahout/h2obindings/ops/MapBlockHelper.scala&lt;/li&gt;
	&lt;li&gt;h2o/src/main/java/org/apache/mahout/h2obindings/H2OHelper.java&lt;/li&gt;
	&lt;li&gt;h2o/src/test/scala/org/apache/mahout/classifier/naivebayes/NBH2OTestSuite.scala&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14395848" author="githubbot" created="Sat, 4 Apr 2015 19:05:10 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/78#issuecomment-89632105&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/78#issuecomment-89632105&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    fixing in a different branch&lt;/p&gt;</comment>
                            <comment id="14395849" author="githubbot" created="Sat, 4 Apr 2015 19:05:11 +0100"  >&lt;p&gt;Github user andrewpalumbo closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/78&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/78&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14395918" author="hudson" created="Sat, 4 Apr 2015 21:22:52 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3057 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3057/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3057/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;: Naive Bayes CLI cleanup closes apache/mahout#102 (apalumbo: rev 1bcda32146713144eac4889c3065c448417c36f6)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TrainNBDriver.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TestNBDriver.scala&lt;/li&gt;
	&lt;li&gt;examples/bin/classify-20newsgroups.sh&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14396051" author="githubbot" created="Sun, 5 Apr 2015 04:35:51 +0100"  >&lt;p&gt;GitHub user andrewpalumbo opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/104&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/104&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt; parallelize SparkNaiveBayes.test(...)&lt;/p&gt;

&lt;p&gt;    Explicitly define math-scala NaiveBayes.test(...) as sequential and in memory.  Extend test(..) into SparkNaiveBayes and distribute the classification process. Also some general cleanup.&lt;/p&gt;


&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;-serialize&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/104.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/104.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #104&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 98fc94484a408ecc9e433babaee772258ba9bae9&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T01:27:47Z&lt;/p&gt;

&lt;p&gt;    add a prefix directory for model.dfsWrite(..) to write components. added tests for full training and testing of seeded random toy TFIDF data&lt;/p&gt;

&lt;p&gt;commit 1049b461464ab27a56f742d96c5b5c73b040ec1b&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T01:33:23Z&lt;/p&gt;

&lt;p&gt;    use SparkNaiveBayes rather than NaiveBayes in CLI drivers to avoid confusion&lt;/p&gt;

&lt;p&gt;commit 6c5dc8f3359255f85fbbbe2ffb24681fa489255d&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T02:40:44Z&lt;/p&gt;

&lt;p&gt;    override NaiveBayes.test in Spark and broadcast the classifier to the closure.  Now is no longer pulling everything into memory up frot&lt;/p&gt;

&lt;p&gt;commit 2522a029ecbf6389f09ab69f80f05a298bcd7ea0&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T02:55:08Z&lt;/p&gt;

&lt;p&gt;    Make math-scala NaiveBayes.test(...) explictly sequential&lt;/p&gt;

&lt;p&gt;commit bad6d9a06e3e04cfdafcce7d1adc2066ecd991b7&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T03:29:36Z&lt;/p&gt;

&lt;p&gt;    Cleanup&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14396345" author="githubbot" created="Sun, 5 Apr 2015 18:58:38 +0100"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/104&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/104&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14396359" author="hudson" created="Sun, 5 Apr 2015 19:38:19 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3064 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3064/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3064/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;: parallelize SparkNaiveBayes.test(...) closes apache/mahout#104 (apalumbo: rev 1be5a00c809fe0c7d26fcad24536428b5f0b564e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TestNBDriver.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NaiveBayes.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/classifier/naivebayes/SparkNaiveBayes.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NBModel.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/sparkbindings/io/MahoutKryoRegistrator.scala&lt;/li&gt;
	&lt;li&gt;spark/src/test/scala/org/apache/mahout/classifier/naivebayes/NBSparkTestSuite.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TrainNBDriver.scala&lt;/li&gt;
	&lt;li&gt;math-scala/src/test/scala/org/apache/mahout/classifier/naivebayes/NBTestBase.scala&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14425996" author="githubbot" created="Sun, 5 Apr 2015 23:34:35 +0100"  >&lt;p&gt;GitHub user andrewpalumbo opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/111&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/111&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;:  Add CLI options for --overwrite and --alphaI  to NB Drivers &lt;/p&gt;

&lt;p&gt;    Presently `mahout spark-trainnb` will not complete if a model already exists in the output directory.  These last options add in an `--overwrite` option to overwrite a model in the given output directory.  &lt;/p&gt;

&lt;p&gt;    as well:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add `.par(auto = true)` to the input Drm&lt;/li&gt;
	&lt;li&gt;ads a `delete(...)` method to `Hadppo1HDFSUtils` which does not handle any IO exceptions&lt;/li&gt;
	&lt;li&gt;adds an almost trivial  `--alphaI` option to set the Laplace smoothing factor from the CLI&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    This patch will complete the full port of the old MapReduce Naive Bayes to the `math-scala` and `spark` modules.    &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/andrewpalumbo/mahout&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/andrewpalumbo/mahout&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;g&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/111.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/111.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #111&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 37f40e1ba32871227cc025effe87b135b5c28f31&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T20:56:48Z&lt;/p&gt;

&lt;p&gt;    set .par(auto = true) on input data in CLI Drivers&lt;/p&gt;

&lt;p&gt;commit 149b0d0ef4ee5ea6e161b669f09d4fa2eeb2fff3&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T22:12:27Z&lt;/p&gt;

&lt;p&gt;    add CLI driver options for -ow and -alphaI.  added a delete(...) method in hHadoop1HDFSUtil.&lt;/p&gt;

&lt;p&gt;commit 59ca8c1b2e960b5bfc10de39d5cd8e2bb0042c12&lt;br/&gt;
Author: Andrew Palumbo &amp;lt;apalumbo@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-04-05T22:14:58Z&lt;/p&gt;

&lt;p&gt;    Adjust Example accordingly&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14426396" author="githubbot" created="Sun, 5 Apr 2015 23:38:02 +0100"  >&lt;p&gt;Github user andrewpalumbo commented on a diff in the pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/111#discussion_r27781100&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/111#discussion_r27781100&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &amp;#8212; Diff: spark/src/main/scala/org/apache/mahout/drivers/TestNBDriver.scala &amp;#8212;&lt;br/&gt;
    @@ -76,7 +77,7 @@ object TestNBDriver extends MahoutSparkDriver {&lt;br/&gt;
       /** Read the test set from inputPath/part-x-00000 sequence file of form &amp;lt;Text,VectorWritable&amp;gt; */&lt;br/&gt;
       private def readTestSet: DrmLike&lt;span class=&quot;error&quot;&gt;&amp;#91;_&amp;#93;&lt;/span&gt; = {&lt;br/&gt;
         val inputPath = parser.opts(&quot;input&quot;).asInstanceOf&lt;span class=&quot;error&quot;&gt;&amp;#91;String&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;val trainingSet = drm.drmDfsRead(inputPath)&lt;br/&gt;
    +    val trainingSet = drm.drmDfsRead(inputPath).par(auto = true)
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;End diff &amp;#8211;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    @dlyubimov, @pferrel  -does adding `.par(auto = true)` here make sense?  Otherwise there are no explicit partitioning instructions for the input data. &lt;/p&gt;</comment>
                            <comment id="14480890" author="githubbot" created="Mon, 6 Apr 2015 04:24:22 +0100"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/mahout/pull/111&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/mahout/pull/111&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14480910" author="hudson" created="Mon, 6 Apr 2015 05:02:04 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3069 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3069/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3069/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;: Add CLI options for --overwrite and --alphaI to NB Drivers. closes apache/mahout#111 (apalumbo: rev 30fe6cc83f83578c922d8c01742ae7a6939280e8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NBModel.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TestNBDriver.scala&lt;/li&gt;
	&lt;li&gt;examples/bin/classify-20newsgroups.sh&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/drivers/TrainNBDriver.scala&lt;/li&gt;
	&lt;li&gt;spark/src/main/scala/org/apache/mahout/common/Hadoop1HDFSUtil.scala&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14480926" author="hudson" created="Mon, 6 Apr 2015 05:31:34 +0100"  >&lt;p&gt;SUCCESS: Integrated in Mahout-Quality #3070 (See &lt;a href=&quot;https://builds.apache.org/job/Mahout-Quality/3070/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Mahout-Quality/3070/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/MAHOUT-1493&quot; title=&quot;Port Naive Bayes to the Spark DSL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAHOUT-1493&quot;&gt;&lt;del&gt;MAHOUT-1493&lt;/del&gt;&lt;/a&gt;: Fixed incorrect alphaI in NBModel (apalumbo: rev ebb39fe4ae917188b7a1ac235fd8d04e30c92cba)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;math-scala/src/main/scala/org/apache/mahout/classifier/naivebayes/NBModel.scala&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14492187" author="sslavic" created="Mon, 13 Apr 2015 10:57:30 +0100"  >&lt;p&gt;Bulk closing all 0.10.0 resolved issues&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12716911">MAHOUT-1564</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12655456" name="MAHOUT-1493.patch" size="5333" author="cviebig" created="Sun, 13 Jul 2014 13:59:19 +0100"/>
                            <attachment id="12640988" name="MAHOUT-1493.patch" size="1519" author="ssc" created="Sun, 20 Apr 2014 12:41:21 +0100"/>
                            <attachment id="12637368" name="MAHOUT-1493.patch" size="5101" author="ssc" created="Fri, 28 Mar 2014 09:32:04 +0000"/>
                            <attachment id="12637246" name="MAHOUT-1493.patch" size="2779" author="ssc" created="Thu, 27 Mar 2014 21:18:33 +0000"/>
                            <attachment id="12656129" name="MAHOUT-1493a.patch" size="3699" author="Andrew_Palumbo" created="Wed, 16 Jul 2014 21:19:52 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Mar 2014 02:18:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>382440</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hznqpz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>382709</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>