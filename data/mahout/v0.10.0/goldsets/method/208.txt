org.apache.mahout.clustering.meanshift.MeanShiftCanopy.computeBoundCentroid()
org.apache.mahout.common.distance.SquaredEuclideanDistanceMeasure.distance(double,Vector,Vector)
org.apache.mahout.math.AbstractMatrix.get(String,String)
org.apache.mahout.math.AbstractMatrix.iterateAll()
org.apache.mahout.math.AbstractMatrix.iterateAll.hasNext()
org.apache.mahout.math.AbstractMatrix.iterateAll.next()
org.apache.mahout.math.AbstractMatrix.iterateAll.remove()
org.apache.mahout.math.AbstractMatrix.iterator()
org.apache.mahout.math.AbstractMatrix.numSlices()
org.apache.mahout.math.AbstractMatrix.slice(int)
org.apache.mahout.math.AbstractMatrix.timesSquared(Vector)
org.apache.mahout.math.AbstractMatrix.TransposeViewVector.like(int)
org.apache.mahout.math.AbstractVector.AbstractVector(String,int)
org.apache.mahout.math.AbstractVector.aggregate(BinaryFunction,UnaryFunction)
org.apache.mahout.math.AbstractVector.aggregate(Vector,BinaryFunction,BinaryFunction)
org.apache.mahout.math.AbstractVector.assign(BinaryFunction,double)
org.apache.mahout.math.AbstractVector.assign(UnaryFunction)
org.apache.mahout.math.AbstractVector.getDistanceSquared(Vector)
org.apache.mahout.math.AbstractVector.maxValue()
org.apache.mahout.math.AbstractVector.maxValueIndex()
org.apache.mahout.math.AbstractVector.norm(double)
org.apache.mahout.math.BinaryFunction.apply(double,double)
org.apache.mahout.math.decomposer.hebbian.HebbianSolver.hasNotConverged(Vector,Matrix,TrainingState)
org.apache.mahout.math.decomposer.hebbian.HebbianUpdater.updateTrainingProjectionsVector(TrainingState,Vector,int)
org.apache.mahout.math.decomposer.hebbian.HebbianUpdater.update(Vector,Vector,TrainingState)
org.apache.mahout.math.decomposer.lanczos.LanczosSolver.getInitialVector(Matrix)
org.apache.mahout.math.decomposer.lanczos.LanczosSolver.orthoganalizeAgainstAllButLast(Vector,Matrix)
org.apache.mahout.math.decomposer.lanczos.LanczosSolver.solve(Matrix,int,Matrix,List<Double>,Double)
org.apache.mahout.math.DenseVector.addTo(Vector)
org.apache.mahout.math.DenseVector.assign(Vector,BinaryFunction)
org.apache.mahout.math.DenseVector.DenseVector()
org.apache.mahout.math.DenseVector.getLengthSquared()
org.apache.mahout.math.function.Functions.between(double,double)
org.apache.mahout.math.function.Functions.bindArg1(BinaryFunction,double)
org.apache.mahout.math.function.Functions.bindArg2(BinaryFunction,double)
org.apache.mahout.math.function.Functions.chain(BinaryFunction,UnaryFunction,UnaryFunction)
org.apache.mahout.math.function.Functions.chain(UnaryFunction,BinaryFunction)
org.apache.mahout.math.function.Functions.chain(UnaryFunction,UnaryFunction)
org.apache.mahout.math.function.Functions.compare(double)
org.apache.mahout.math.function.Functions.constant(double)
org.apache.mahout.math.function.Functions.div(double)
org.apache.mahout.math.function.Functions.equals(double)
org.apache.mahout.math.function.Functions.Functions()
org.apache.mahout.math.function.Functions.greater(double)
org.apache.mahout.math.function.Functions.IEEEremainder(double)
org.apache.mahout.math.function.Functions.isBetween(double,double)
org.apache.mahout.math.function.Functions.isEqual(double)
org.apache.mahout.math.function.Functions.isGreater(double)
org.apache.mahout.math.function.Functions.isLess(double)
org.apache.mahout.math.function.Functions.less(double)
org.apache.mahout.math.function.Functions.lg(double)
org.apache.mahout.math.function.Functions.max(double)
org.apache.mahout.math.function.Functions.min(double)
org.apache.mahout.math.function.Functions.minus(double)
org.apache.mahout.math.function.Functions.minusMult(double)
org.apache.mahout.math.function.Functions.mod(double)
org.apache.mahout.math.function.Functions.mult(double)
org.apache.mahout.math.function.Functions.plus(double)
org.apache.mahout.math.function.Functions.plusMult(double)
org.apache.mahout.math.function.Functions.pow(double)
org.apache.mahout.math.function.Functions.random()
org.apache.mahout.math.function.Functions.round(double)
org.apache.mahout.math.function.Functions.swapArgs(BinaryFunction)
org.apache.mahout.math.function.Mult.getMultiplicator()
org.apache.mahout.math.function.Mult.Mult(double)
org.apache.mahout.math.function.Mult.setMultiplicator(double)
org.apache.mahout.math.function.PlusMult.minusDiv(double)
org.apache.mahout.math.function.PlusMult.plusDiv(double)
org.apache.mahout.math.function.PlusMult.PlusMult(double)
org.apache.mahout.math.jet.math.Functions.bindArg1(DoubleDoubleFunction,double)
org.apache.mahout.math.jet.math.Functions.bindArg2(DoubleDoubleFunction,double)
org.apache.mahout.math.jet.math.Functions.chain(DoubleDoubleFunction,DoubleFunction,DoubleFunction)
org.apache.mahout.math.jet.math.Functions.chain(DoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.jet.math.Functions.chain(DoubleFunction,DoubleFunction)
org.apache.mahout.math.jet.math.Functions.swapArgs(DoubleDoubleFunction)
org.apache.mahout.math.Matrix.asFormatString()
org.apache.mahout.math.matrix.DoubleFactory1D.ascending(int)
org.apache.mahout.math.matrix.DoubleFactory2D.ascending(int,int)
org.apache.mahout.math.matrix.DoubleFactory3D.ascending(int,int,int)
org.apache.mahout.math.matrix.DoubleMatrix1D.aggregate(DoubleDoubleFunction,DoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix1D.aggregate(DoubleMatrix1D,BinaryFunction,BinaryFunction)
org.apache.mahout.math.matrix.DoubleMatrix1D.aggregate(DoubleMatrix1D,org.apache.mahout.math.function.DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix1D.assign(DoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix1D.assign(DoubleMatrix1D,BinaryFunction)
org.apache.mahout.math.matrix.DoubleMatrix1D.assign(DoubleMatrix1D,BinaryFunction,IntArrayList)
org.apache.mahout.math.matrix.DoubleMatrix1D.assign(DoubleMatrix1D,org.apache.mahout.math.function.DoubleDoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix1D.assign(DoubleMatrix1D,org.apache.mahout.math.function.DoubleDoubleFunction,IntArrayList)
org.apache.mahout.math.matrix.DoubleMatrix1D.zSum()
org.apache.mahout.math.matrix.DoubleMatrix2D.aggregate(DoubleMatrix2D,BinaryFunction,BinaryFunction)
org.apache.mahout.math.matrix.DoubleMatrix2D.aggregate(DoubleMatrix2D,org.apache.mahout.math.function.DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix2D.assign(DoubleMatrix2D,BinaryFunction)
org.apache.mahout.math.matrix.DoubleMatrix2D.assign(DoubleMatrix2D,org.apache.mahout.math.function.DoubleDoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix3D.aggregate(DoubleMatrix3D,BinaryFunction,BinaryFunction)
org.apache.mahout.math.matrix.DoubleMatrix3D.aggregate(DoubleMatrix3D,org.apache.mahout.math.function.DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.matrix.DoubleMatrix3D.assign(DoubleMatrix3D,BinaryFunction)
org.apache.mahout.math.matrix.DoubleMatrix3D.assign(DoubleMatrix3D,org.apache.mahout.math.function.DoubleDoubleFunction)
org.apache.mahout.math.matrix.impl.RCDoubleMatrix2D.assign(double)
org.apache.mahout.math.matrix.impl.RCDoubleMatrix2D.assign(DoubleMatrix2D)
org.apache.mahout.math.matrix.impl.RCDoubleMatrix2D.zMult(DoubleMatrix2D,DoubleMatrix2D,double,double,boolean,boolean)
org.apache.mahout.math.matrix.impl.SparseDoubleMatrix2D.assign(DoubleMatrix2D,DoubleDoubleFunction)
org.apache.mahout.math.matrix.impl.TridiagonalDoubleMatrix2D.assign(org.apache.mahout.math.function.DoubleFunction)
org.apache.mahout.math.matrix.linalg.Algebra.hypot(double,double)
org.apache.mahout.math.matrix.linalg.Algebra.hypotFunction()
org.apache.mahout.math.matrix.linalg.Algebra.multOuter(DoubleMatrix1D,DoubleMatrix1D,DoubleMatrix2D)
org.apache.mahout.math.matrix.linalg.Algebra.norm1(DoubleMatrix1D)
org.apache.mahout.math.matrix.linalg.Algebra.normF(DoubleMatrix2D)
org.apache.mahout.math.matrix.linalg.Algebra.normInfinity(DoubleMatrix1D)
org.apache.mahout.math.matrix.linalg.Blas.assign(DoubleMatrix2D,DoubleMatrix2D,BinaryFunction)
org.apache.mahout.math.matrix.linalg.Blas.assign(DoubleMatrix2D,DoubleMatrix2D,org.apache.mahout.math.function.DoubleDoubleFunction)
org.apache.mahout.math.matrix.linalg.Blas.assign(DoubleMatrix2D,org.apache.mahout.math.function.DoubleFunction)
org.apache.mahout.math.matrix.linalg.Blas.assign(DoubleMatrix2D,UnaryFunction)
org.apache.mahout.math.matrix.linalg.Blas.dasum(DoubleMatrix1D)
org.apache.mahout.math.matrix.linalg.Blas.daxpy(double,DoubleMatrix1D,DoubleMatrix1D)
org.apache.mahout.math.matrix.linalg.LUDecompositionQuick.decompose(DoubleMatrix2D)
org.apache.mahout.math.matrix.linalg.LUDecompositionQuick.solve(DoubleMatrix2D)
org.apache.mahout.math.matrix.linalg.QRDecomposition.QRDecomposition(DoubleMatrix2D)
org.apache.mahout.math.matrix.linalg.SeqBlas.assign(DoubleMatrix2D,DoubleMatrix2D,DoubleDoubleFunction)
org.apache.mahout.math.matrix.linalg.SeqBlas.dger(double,DoubleMatrix1D,DoubleMatrix1D,DoubleMatrix2D)
org.apache.mahout.math.matrix.linalg.SeqBlas.SeqBlas()
org.apache.mahout.math.matrix.linalg.SmpBlas.allocateBlas(int,Blas)
org.apache.mahout.math.Matrix.numCols()
org.apache.mahout.math.Matrix.numRows()
org.apache.mahout.math.Matrix.size()
org.apache.mahout.math.MatrixSlice.index()
org.apache.mahout.math.MatrixSlice.MatrixSlice(Vector,int)
org.apache.mahout.math.MatrixSlice.vector()
org.apache.mahout.math.MatrixTest.testAssignMatrixBinaryFunction()
org.apache.mahout.math.MatrixTest.testAssignMatrixBinaryFunctionCardinality()
org.apache.mahout.math.MatrixTest.testAssignUnaryFunction()
org.apache.mahout.math.MatrixTest.testCopy()
org.apache.mahout.math.MatrixTest.testIterate()
org.apache.mahout.math.Matrix.times(Matrix)
org.apache.mahout.math.Matrix.times(Vector)
org.apache.mahout.math.NegateFunction.apply(double)
org.apache.mahout.math.PlusWithScaleFunction.PlusWithScaleFunction()
org.apache.mahout.math.PlusWithScaleFunction.PlusWithScaleFunction(double)
org.apache.mahout.math.PlusWithScaleFunction.setScale(double)
org.apache.mahout.math.RandomAccessSparseVector.DistanceSquared.apply(int,double)
org.apache.mahout.math.RandomAccessSparseVector.DistanceSquared.DistanceSquared(Vector)
org.apache.mahout.math.RandomAccessSparseVector.DistanceSquared.DistanceSquared(Vector,OpenIntHashSet)
org.apache.mahout.math.RandomAccessSparseVector.Element.set(double)
org.apache.mahout.math.RandomAccessSparseVector.setQuick(int,double)
org.apache.mahout.math.SequentialAccessSparseVector.AbstractElement.AbstractElement(int,OrderedIntDoubleMapping)
org.apache.mahout.math.SequentialAccessSparseVector.AbstractElement.AbstractElement(int,SequentialAccessSparseVector)
org.apache.mahout.math.SequentialAccessSparseVector.DenseElement.DenseElement(int,OrderedIntDoubleMapping)
org.apache.mahout.math.SequentialAccessSparseVector.DenseElement.DenseElement(int,SequentialAccessSparseVector)
org.apache.mahout.math.SequentialAccessSparseVector.DistanceSquarer.distanceSquared()
org.apache.mahout.math.SequentialAccessSparseVector.DistanceSquarer.DistanceSquarer(Iterator<Element>,Element,Iterator<Element>,Element)
org.apache.mahout.math.SequentialAccessSparseVector.getElement(int)
org.apache.mahout.math.SequentialAccessSparseVector.getNumNondefaultElements()
org.apache.mahout.math.SequentialAccessSparseVector.IntDoublePairIterator.IntDoublePairIterator(OrderedIntDoubleMapping)
org.apache.mahout.math.SequentialAccessSparseVector.IntDoublePairIterator.IntDoublePairIterator(OrderedIntDoubleMapping,int)
org.apache.mahout.math.SequentialAccessSparseVector.IntDoublePairIterator.IntDoublePairIterator(SequentialAccessSparseVector)
org.apache.mahout.math.SequentialAccessSparseVector.IntDoublePairIterator.IntDoublePairIterator(SequentialAccessSparseVector,int)
org.apache.mahout.math.SequentialAccessSparseVector.iterateNonZero()
org.apache.mahout.math.SequentialAccessSparseVector.like()
org.apache.mahout.math.SequentialAccessSparseVector.SparseElement.SparseElement(int,OrderedIntDoubleMapping)
org.apache.mahout.math.SequentialAccessSparseVector.SparseElement.SparseElement(int,SequentialAccessSparseVector)
org.apache.mahout.math.SparseColumnMatrix.clone()
org.apache.mahout.math.TestDenseVector.testAssignBinaryFunction()
org.apache.mahout.math.TestDenseVector.testAssignBinaryFunction2()
org.apache.mahout.math.TestDenseVector.testAssignBinaryFunction3()
org.apache.mahout.math.TestDenseVector.testAssignBinaryFunctionCardinality()
org.apache.mahout.math.TestDenseVector.testAssignDouble()
org.apache.mahout.math.TestDenseVector.testAssignVectorCardinality()
org.apache.mahout.math.TestDenseVector.testGetDistanceSquared()
org.apache.mahout.math.TestDenseVector.testZSum()
org.apache.mahout.math.VectorTest.doTestAggregation(Vector,Vector)
org.apache.mahout.math.VectorTest.doTestGetDistanceSquared(Vector,Vector)
org.apache.mahout.math.VectorTest.doTestVectors(Vector,Vector)
org.apache.mahout.math.VectorTest.setUpFirstVector(Vector)
org.apache.mahout.math.VectorTest.setUpSecondVector(Vector)
org.apache.mahout.math.VectorTest.setUpV(Vector)
org.apache.mahout.math.VectorTest.setUpW(Vector)
org.apache.mahout.math.VectorTest.testAggregation()
org.apache.mahout.math.VectorTest.testEnumeration()
org.apache.mahout.math.VectorTest.testMax()
org.apache.mahout.math.VectorTest.testNormalize()
org.apache.mahout.math.VectorView.NonZeroIterator.buffer()
org.apache.mahout.matrix.DenseVector.readFields(DataInput)
org.apache.mahout.utils.vectors.arff.Driver.getSeqFileWriter(String)
