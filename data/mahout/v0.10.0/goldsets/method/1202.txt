org.apache.mahout.common.distance.ChebyshevDistanceMeasure.distance(Vector,Vector)
org.apache.mahout.common.distance.TanimotoDistanceMeasure.distance(double,Vector,Vector)
org.apache.mahout.common.distance.TanimotoDistanceMeasure.dot(Vector,Vector)
org.apache.mahout.ep.Mapping.Mapping()
org.apache.mahout.math.AbstractMatrix.clone()
org.apache.mahout.math.AbstractMatrix.determinant()
org.apache.mahout.math.AbstractMatrix.TransposeViewVector.getElement(int)
org.apache.mahout.math.AbstractMatrix.TransposeViewVector.getQuick(int)
org.apache.mahout.math.AbstractMatrix.TransposeViewVector.TransposeViewVector(Matrix,int,boolean)
org.apache.mahout.math.AbstractVector.AbstractVector(int)
org.apache.mahout.math.AbstractVector.aggregate(DoubleDoubleFunction,DoubleFunction)
org.apache.mahout.math.AbstractVector.aggregate(Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.AbstractVector.assign(double)
org.apache.mahout.math.AbstractVector.assign(double[])
org.apache.mahout.math.AbstractVector.assign(DoubleDoubleFunction,double)
org.apache.mahout.math.AbstractVector.assign(DoubleFunction)
org.apache.mahout.math.AbstractVector.assign(Vector)
org.apache.mahout.math.AbstractVector.assign(Vector,DoubleDoubleFunction)
org.apache.mahout.math.AbstractVector.createOptimizedCopy()
org.apache.mahout.math.AbstractVector.createOptimizedCopy(Vector)
org.apache.mahout.math.AbstractVector.dotSelf()
org.apache.mahout.math.AbstractVector.dot(Vector)
org.apache.mahout.math.AbstractVector.equals(Object)
org.apache.mahout.math.AbstractVector.getDistanceSquared(Vector)
org.apache.mahout.math.AbstractVector.invalidateCachedLength()
org.apache.mahout.math.AbstractVector.maxValue()
org.apache.mahout.math.AbstractVector.mergeDiff(Vector,Vector)
org.apache.mahout.math.AbstractVector.minus(Vector)
org.apache.mahout.math.AbstractVector.minValue()
org.apache.mahout.math.AbstractVector.norm(double)
org.apache.mahout.math.AbstractVector.plus(double)
org.apache.mahout.math.AbstractVector.plus(Vector)
org.apache.mahout.math.AbstractVector.randomScanDiff(Vector,Vector)
org.apache.mahout.math.AbstractVector.times(double)
org.apache.mahout.math.AbstractVector.times(Vector)
org.apache.mahout.math.AbstractVector.toString(String[])
org.apache.mahout.math.AbstractVector.viewPart(int,int)
org.apache.mahout.math.AbstractVector.zSum()
org.apache.mahout.math.Centroid.addWeight()
org.apache.mahout.math.Centroid.addWeight(double)
org.apache.mahout.math.Centroid.Centroid(int,Vector)
org.apache.mahout.math.Centroid.Centroid(WeightedVector)
org.apache.mahout.math.Centroid.getKey()
org.apache.mahout.math.Centroid.like()
org.apache.mahout.math.Centroid.toString()
org.apache.mahout.math.Centroid.update.apply(double,double)
org.apache.mahout.math.Centroid.update(Vector)
org.apache.mahout.math.Centroid.update(Vector,double)
org.apache.mahout.math.decomposer.lanczos.LanczosSolver.Scale.Scale(double)
org.apache.mahout.math.DelegatingVector.hashCode()
org.apache.mahout.math.DenseVector.assign(DenseVector)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.incrementQuick(int,double)
org.apache.mahout.math.function.DoubleDoubleFunction.isAssociative()
org.apache.mahout.math.function.DoubleDoubleFunction.isAssociativeAndCommutative()
org.apache.mahout.math.function.DoubleDoubleFunction.isCommutative()
org.apache.mahout.math.function.DoubleDoubleFunction.isDensifying()
org.apache.mahout.math.function.DoubleDoubleFunction.isLikeLeftMult()
org.apache.mahout.math.function.DoubleDoubleFunction.isLikeMult()
org.apache.mahout.math.function.DoubleDoubleFunction.isLikeRightMult()
org.apache.mahout.math.function.DoubleDoubleFunction.isLikeRightPlus()
org.apache.mahout.math.function.DoubleFunction.apply(double)
org.apache.mahout.math.function.Functions.chain(DoubleDoubleFunction,DoubleFunction,DoubleFunction)
org.apache.mahout.math.function.Functions.chain(DoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.function.Functions.Functions()
org.apache.mahout.math.function.Functions.minusAbsPow(double)
org.apache.mahout.math.function.Functions.plusMult(double)
org.apache.mahout.math.function.Functions.pow(double)
org.apache.mahout.math.function.Functions.reweigh(double,double)
org.apache.mahout.math.function.Functions.swapArgs(DoubleDoubleFunction)
org.apache.mahout.math.function.PlusMult.getMultiplicator()
org.apache.mahout.math.function.PlusMult.setMultiplicator(double)
org.apache.mahout.math.FunctionTest.FunctionTest(DoubleDoubleFunction,String)
org.apache.mahout.math.FunctionTest.testIsAssociative()
org.apache.mahout.math.FunctionTest.testIsCommutative()
org.apache.mahout.math.FunctionTest.testIsDensifying()
org.apache.mahout.math.FunctionTest.testIsLikeLeftMult()
org.apache.mahout.math.FunctionTest.testIsLikeRightMult()
org.apache.mahout.math.FunctionTest.testIsLikeRightPlus()
org.apache.mahout.math.hadoop.stochasticsvd.qr.GivensThinSolver.TriangularRowView.getIteratorAdvanceCost()
org.apache.mahout.math.hadoop.stochasticsvd.qr.GivensThinSolver.TriangularRowView.getLookupCost()
org.apache.mahout.math.hadoop.stochasticsvd.qr.GivensThinSolver.TriangularRowView.getNumNondefaultElements()
org.apache.mahout.math.hadoop.stochasticsvd.qr.GivensThinSolver.TriangularRowView.isAddConstantTime()
org.apache.mahout.math.hadoop.stochasticsvd.qr.GivensThinSolver.TriangularRowView.matrixLike(int,int)
org.apache.mahout.math.hadoop.stochasticsvd.qr.GivensThinSolver.TriangularRowView.mergeUpdates(OrderedIntDoubleMapping)
org.apache.mahout.math.jet.math.Constants.Constants()
org.apache.mahout.math.MatrixSlice.index()
org.apache.mahout.math.MatrixSlice.MatrixSlice(Vector,int)
org.apache.mahout.math.MatrixSlice.vector()
org.apache.mahout.math.NamedVector.divide(double)
org.apache.mahout.math.OrderedIntDoubleMapping.getIndices()
org.apache.mahout.math.OrderedIntDoubleMapping.get(int)
org.apache.mahout.math.OrderedIntDoubleMapping.getNumMappings()
org.apache.mahout.math.OrderedIntDoubleMapping.getValues()
org.apache.mahout.math.OrderedIntDoubleMapping.increment(int,double)
org.apache.mahout.math.OrderedIntDoubleMapping.indexAt(int)
org.apache.mahout.math.OrderedIntDoubleMapping.insertOrUpdateValueIfPresent(int,double)
org.apache.mahout.math.OrderedIntDoubleMapping.insertValueIfNotDefault(int,int,double)
org.apache.mahout.math.OrderedIntDoubleMapping.merge(OrderedIntDoubleMapping)
org.apache.mahout.math.OrderedIntDoubleMapping.OrderedIntDoubleMapping()
org.apache.mahout.math.OrderedIntDoubleMapping.OrderedIntDoubleMapping(boolean)
org.apache.mahout.math.OrderedIntDoubleMapping.OrderedIntDoubleMapping(int[],double[],int)
org.apache.mahout.math.OrderedIntDoubleMapping.setIndexAt(int,int)
org.apache.mahout.math.OrderedIntDoubleMapping.set(int,double)
org.apache.mahout.math.OrderedIntDoubleMapping.setValueAt(int,double)
org.apache.mahout.math.PermutedVectorView.isDense()
org.apache.mahout.math.PermutedVectorView.isSequentialAccess()
org.apache.mahout.math.QRDecompositionTest.fasterThanBefore()
org.apache.mahout.math.QRDecompositionTest.fullRankWide()
org.apache.mahout.math.RandomAccessSparseVector.NonDefaultIterator.next()
org.apache.mahout.math.SequentialAccessSparseVector.setQuick(int,double)
org.apache.mahout.math.TestOrderedIntDoubleMapping.testAddDefaultElements()
org.apache.mahout.math.TestOrderedIntDoubleMapping.testClone()
org.apache.mahout.math.TestOrderedIntDoubleMapping.testMerge()
org.apache.mahout.math.VectorBinaryAggregate.aggregateBest(Vector,Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAggregate.aggregate(Vector,Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAggregateCostTest.createStubs(Vector,Vector)
org.apache.mahout.math.VectorBinaryAggregateCostTest.denseInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.denseRasvInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.denseSasvInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.rasvDenseInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.rasvInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.rasvSasvInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.replayAll()
org.apache.mahout.math.VectorBinaryAggregateCostTest.sasvDenseInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.sasvInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.sasvRasvInteractions()
org.apache.mahout.math.VectorBinaryAggregateCostTest.setUpStubs()
org.apache.mahout.math.VectorBinaryAggregate.estimateCost(Vector,Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAggregate.getBestOperation(Vector,Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAggregate.isValid(Vector,Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAggregateTest.generateData()
org.apache.mahout.math.VectorBinaryAggregateTest.testAll()
org.apache.mahout.math.VectorBinaryAggregateTest.VectorBinaryAggregateTest(DoubleDoubleFunction,DoubleDoubleFunction,VectorBinaryAggregate)
org.apache.mahout.math.VectorBinaryAssign.assignBest(Vector,Vector,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAssign.assign(Vector,Vector,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAssign.estimateCost(Vector,Vector,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAssign.getBestOperation(Vector,Vector,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAssign.isValid(Vector,Vector,DoubleDoubleFunction)
org.apache.mahout.math.VectorBinaryAssignTest.VectorBinaryAssignTest(DoubleDoubleFunction,VectorBinaryAssign)
org.apache.mahout.math.VectorTest.doTestAggregation(Vector,Vector)
org.apache.mahout.math.VectorTest.setUpFirstVector(Vector)
org.apache.mahout.math.VectorTest.testEmptyAggregate1()
org.apache.mahout.math.VectorTest.testEmptyAggregate2()
org.apache.mahout.math.VectorTest.testHashCode()
org.apache.mahout.math.VectorTest.testIteratorRasv()
org.apache.mahout.math.VectorTest.testMergeDiff()
org.apache.mahout.math.VectorTest.testRandomScanDiff()
org.apache.mahout.math.VectorTest.testSkipsLast(Vector)
org.apache.mahout.math.VectorTest.testSkips(Vector)
org.apache.mahout.math.WeightedVector.WeightedVector(double,int)
