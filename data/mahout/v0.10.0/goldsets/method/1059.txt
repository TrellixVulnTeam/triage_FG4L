org.apache.mahout.clustering.meanshift.MeanShiftCanopyMapper.cleanup(Context)
org.apache.mahout.clustering.meanshift.MeanShiftCanopyMapper.map(WritableComparable<?>,ClusterWritable,Context)
org.apache.mahout.clustering.meanshift.MeanShiftCanopyMapper.setup(Context)
org.apache.mahout.math.AbstractVector.getDistanceSquared(Vector)
org.apache.mahout.math.AbstractVector.getLengthSquared()
org.apache.mahout.math.AbstractVector.minus(Vector)
org.apache.mahout.math.AbstractVector.setLengthSquared(double)
org.apache.mahout.math.AbstractVectorTest.testSimpleOps()
org.apache.mahout.math.Centroid.addWeight()
org.apache.mahout.math.Centroid.Centroid(int,Vector)
org.apache.mahout.math.Centroid.Centroid(int,Vector,double)
org.apache.mahout.math.Centroid.Centroid(WeightedVector)
org.apache.mahout.math.Centroid.create(int,Vector)
org.apache.mahout.math.Centroid.getKey()
org.apache.mahout.math.CentroidTest.testUpdate()
org.apache.mahout.math.Centroid.update.apply(double,double)
org.apache.mahout.math.Centroid.update(Vector)
org.apache.mahout.math.Centroid.update(Vector,double)
org.apache.mahout.math.DelegatingVector.aggregate(DoubleDoubleFunction,DoubleFunction)
org.apache.mahout.math.DelegatingVector.aggregate(Vector,DoubleDoubleFunction,DoubleDoubleFunction)
org.apache.mahout.math.DelegatingVector.asFormatString()
org.apache.mahout.math.DelegatingVector.assign(double)
org.apache.mahout.math.DelegatingVector.assign(double[])
org.apache.mahout.math.DelegatingVector.assign(DoubleDoubleFunction,double)
org.apache.mahout.math.DelegatingVector.assign(DoubleFunction)
org.apache.mahout.math.DelegatingVector.assign(Vector)
org.apache.mahout.math.DelegatingVector.assign(Vector,DoubleDoubleFunction)
org.apache.mahout.math.DelegatingVector.clone()
org.apache.mahout.math.DelegatingVector.cross(Vector)
org.apache.mahout.math.DelegatingVector.DelegatingVector(int)
org.apache.mahout.math.DelegatingVector.DelegatingVector(Vector)
org.apache.mahout.math.DelegatingVector.divide(double)
org.apache.mahout.math.DelegatingVector.dot(Vector)
org.apache.mahout.math.DelegatingVector.equals(Object)
org.apache.mahout.math.DelegatingVector.getElement(int)
org.apache.mahout.math.DelegatingVector.get(int)
org.apache.mahout.math.DelegatingVector.getVector()
org.apache.mahout.math.DelegatingVector.hashCode()
org.apache.mahout.math.DelegatingVector.logNormalize()
org.apache.mahout.math.DelegatingVector.logNormalize(double)
org.apache.mahout.math.DelegatingVector.maxValue()
org.apache.mahout.math.DelegatingVector.maxValueIndex()
org.apache.mahout.math.DelegatingVector.minValue()
org.apache.mahout.math.DelegatingVector.minValueIndex()
org.apache.mahout.math.DelegatingVector.normalize()
org.apache.mahout.math.DelegatingVector.normalize(double)
org.apache.mahout.math.DelegatingVector.norm(double)
org.apache.mahout.math.DelegatingVector.plus(double)
org.apache.mahout.math.DelegatingVector.plus(Vector)
org.apache.mahout.math.DelegatingVector.set(int,double)
org.apache.mahout.math.DelegatingVector.size()
org.apache.mahout.math.DelegatingVector.times(double)
org.apache.mahout.math.DelegatingVector.times(Vector)
org.apache.mahout.math.DelegatingVector.toString()
org.apache.mahout.math.DelegatingVector.viewPart(int,int)
org.apache.mahout.math.DelegatingVector.zSum()
org.apache.mahout.math.FileBasedMatrix.addData(DoubleBuffer)
org.apache.mahout.math.FileBasedMatrix.FileBasedMatrix(int,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.assignColumn(int,Vector)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.assignRow(int,Vector)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.BinaryReadOnlyElement.BinaryReadOnlyElement(int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.FileBasedSparseBinaryMatrix(int,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.getQuick(int,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.like()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.like(int,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.searchForIndex(IntBuffer,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.setData(File,boolean)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.setQuick(int,int,double)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.getNumNondefaultElements()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.getQuick(int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.isDense()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.isSequentialAccess()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.iterateNonZero()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.iterator()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.iterator.computeNext()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.iterator.computeNext.get()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.iterator.computeNext.index()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.iterator.computeNext.set(double)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.matrixLike(int,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.setQuick(int,double)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.SparseBinaryVector(ByteBuffer,int,int,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.SparseBinaryVector.SparseBinaryVector(int,IntBuffer,int)
org.apache.mahout.math.FileBasedSparseBinaryMatrixTest.matrixValue(int)
org.apache.mahout.math.FileBasedSparseBinaryMatrixTest.testBigMatrix()
org.apache.mahout.math.FileBasedSparseBinaryMatrixTest.testSetData()
org.apache.mahout.math.FileBasedSparseBinaryMatrix.viewPart(int[],int[])
org.apache.mahout.math.FileBasedSparseBinaryMatrix.viewRow(int)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.writeMatrix.apply(Vector.Element)
org.apache.mahout.math.FileBasedSparseBinaryMatrix.writeMatrix(File,Matrix)
org.apache.mahout.math.MatrixVectorView.MatrixVectorView(Matrix,int,int,int,int)
org.apache.mahout.math.MatrixVectorView.MatrixVectorView(Matrix,int,int,int,int,boolean)
org.apache.mahout.math.random.AbstractSamplerFunction.apply(double)
org.apache.mahout.math.random.AbstractSamplerFunction.sample()
org.apache.mahout.math.random.ChineseRestaurant.ChineseRestaurant(double)
org.apache.mahout.math.random.ChineseRestaurant.ChineseRestaurant(double,double)
org.apache.mahout.math.random.ChineseRestaurant.count()
org.apache.mahout.math.random.ChineseRestaurant.count(int)
org.apache.mahout.math.random.ChineseRestaurantTest.hapaxCount(ChineseRestaurant)
org.apache.mahout.math.random.ChineseRestaurantTest.predictSize(Matrix,int,double)
org.apache.mahout.math.random.ChineseRestaurantTest.testDepth()
org.apache.mahout.math.random.ChineseRestaurantTest.testExtremeDiscount()
org.apache.mahout.math.random.ChineseRestaurantTest.testGrowth()
org.apache.mahout.math.random.Empirical.Empirical(boolean,boolean,int,double)
org.apache.mahout.math.random.Empirical.sample(double)
org.apache.mahout.math.random.EmpiricalTest.testBadArguments()
org.apache.mahout.math.random.EmpiricalTest.testSimpleDist()
org.apache.mahout.math.random.EmpiricalTest.testZeros()
org.apache.mahout.math.random.IndianBuffet.createIntegerDocumentSampler(double)
org.apache.mahout.math.random.IndianBuffet.createTextDocumentSampler(double)
org.apache.mahout.math.random.IndianBuffet.IdentityConverter.convert(int)
org.apache.mahout.math.random.IndianBuffet.ImpossibleException.ImpossibleException(Throwable)
org.apache.mahout.math.random.IndianBuffet.IndianBuffet(double,WordFunction<T>,T)
org.apache.mahout.math.random.IndianBuffetTest.testBasicText()
org.apache.mahout.math.random.IndianBuffet.WordConverter.WordConverter()
org.apache.mahout.math.random.IndianBuffet.WordConverter.WordConverter.getResult()
org.apache.mahout.math.random.IndianBuffet.WordConverter.WordConverter.processLine(String)
org.apache.mahout.math.random.Missing.Missing(double,Sampler<T>,T)
org.apache.mahout.math.random.Missing.Missing(double,Sampler<T>,T,T)
org.apache.mahout.math.random.Missing.Missing(int,double,Sampler<T>,T,T)
org.apache.mahout.math.random.Multinomial.add(T,double)
org.apache.mahout.math.random.Multinomial.delete(T)
org.apache.mahout.math.random.Multinomial.getProbability(T)
org.apache.mahout.math.random.Multinomial.getWeights()
org.apache.mahout.math.random.Multinomial.getWeight(T)
org.apache.mahout.math.random.Multinomial.Multinomial()
org.apache.mahout.math.random.Multinomial.Multinomial(Iterable<WeightedThing<T>>,WeightedThing<T>,T)
org.apache.mahout.math.random.Multinomial.Multinomial(Multiset<T>,T)
org.apache.mahout.math.random.Multinomial.set(T,double)
org.apache.mahout.math.random.MultinomialTest.checkSelfConsistent(Multinomial<Integer>,Integer)
org.apache.mahout.math.random.MultinomialTest.testDeleteAndUpdate()
org.apache.mahout.math.random.MultinomialTest.testEvenSplit()
org.apache.mahout.math.random.MultinomialTest.testInsert()
org.apache.mahout.math.random.MultinomialTest.testNoValues()
org.apache.mahout.math.random.MultinomialTest.testPrime()
org.apache.mahout.math.random.MultinomialTest.testSingleton()
org.apache.mahout.math.random.MultiNormal.getMean()
org.apache.mahout.math.random.MultiNormal.MultiNormal(double,Vector)
org.apache.mahout.math.random.MultiNormal.MultiNormal(int)
org.apache.mahout.math.random.MultiNormal.MultiNormal(Matrix,Vector)
org.apache.mahout.math.random.MultiNormal.MultiNormal(Matrix,Vector,int)
org.apache.mahout.math.random.MultiNormal.MultiNormal(Vector)
org.apache.mahout.math.random.MultiNormal.MultiNormal(Vector,Vector)
org.apache.mahout.math.random.MultiNormalTest.setUp()
org.apache.mahout.math.random.MultiNormalTest.testDiagonal()
org.apache.mahout.math.random.MultiNormalTest.testRadius()
org.apache.mahout.math.random.Normal.Normal()
org.apache.mahout.math.random.Normal.Normal(double,double)
org.apache.mahout.math.random.NormalTest.testOffset()
org.apache.mahout.math.random.NormalTest.testSample()
org.apache.mahout.math.random.PoissonSampler.PoissonSampler(double)
org.apache.mahout.math.random.PoissonSamplerTest.checkDistribution(PoissonSampler,double)
org.apache.mahout.math.random.PoissonSamplerTest.testBasics()
org.apache.mahout.math.random.SyntheticVariable.assign(Iterable<String>,String)
org.apache.mahout.math.random.WeightedThing.compareTo(WeightedThing<T>,T)
org.apache.mahout.math.random.WeightedThing.getValue()
org.apache.mahout.math.random.WeightedThing.WeightedThing(T,double)
org.apache.mahout.math.WeightedVector.compareTo(WeightedVector)
org.apache.mahout.math.WeightedVector.getIndex()
org.apache.mahout.math.WeightedVector.getWeight()
org.apache.mahout.math.WeightedVector.project(Vector,Vector)
org.apache.mahout.math.WeightedVector.project(Vector,Vector,int)
org.apache.mahout.math.WeightedVector.setIndex(int)
org.apache.mahout.math.WeightedVector.setWeight(double)
org.apache.mahout.math.WeightedVectorTest.testLength()
org.apache.mahout.math.WeightedVectorTest.testOrdering()
org.apache.mahout.math.WeightedVectorTest.testProjection()
org.apache.mahout.math.WeightedVectorTest.vectorToTest(int)
org.apache.mahout.math.WeightedVector.WeightedVector(int,double,int)
org.apache.mahout.math.WeightedVector.WeightedVector(Vector,double,int)
org.apache.mahout.math.WeightedVector.WeightedVector(Vector,Vector,int)
