org.apache.mahout.cf.taste.hadoop.als.eval.InMemoryFactorizationEvaluator.readMatrix(Path)
org.apache.mahout.cf.taste.hadoop.als.eval.InMemoryFactorizationEvaluator.run(String[])
org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJobTest.completeJobToyExample()
org.apache.mahout.classifier.AbstractVectorClassifier.classifyFull(Matrix)
org.apache.mahout.classifier.AbstractVectorClassifier.classify(Matrix)
org.apache.mahout.classifier.AbstractVectorClassifier.classifyScalar(Matrix)
org.apache.mahout.classifier.discriminative.LinearTrainer.train(Vector,Matrix)
org.apache.mahout.classifier.discriminative.PerceptronTrainerTest.testUpdate()
org.apache.mahout.classifier.discriminative.WinnowTrainer.update(double,Vector,LinearModel)
org.apache.mahout.classifier.naivebayes.NaiveBayesModel.materialize(Path,Configuration)
org.apache.mahout.classifier.naivebayes.NaiveBayesModel.serialize(Path,Configuration)
org.apache.mahout.classifier.naivebayes.training.TrainUtils.readModelFromTempDir(Path,Configuration)
org.apache.mahout.classifier.naivebayes.training.WeightsMapper.map(IntWritable,VectorWritable,Context)
org.apache.mahout.classifier.sequencelearning.hmm.HmmUtils.truncateModel(HmmModel,double)
org.apache.mahout.classifier.sgd.AbstractOnlineLogisticRegression.classifyNoLink(Vector)
org.apache.mahout.classifier.sgd.AbstractOnlineLogisticRegression.classifyScalarNoLink(Vector)
org.apache.mahout.classifier.sgd.GradientMachine.hiddenToOutput(Vector)
org.apache.mahout.classifier.sgd.GradientMachine.inputToHidden(Vector)
org.apache.mahout.classifier.sgd.GradientMachine.updateRanking(Vector,Collection<Integer>,Integer,int,Random)
org.apache.mahout.classifier.sgd.OnlineBaseTest.test(Matrix,Vector,AbstractVectorClassifier,double,double)
org.apache.mahout.classifier.sgd.OnlineBaseTest.train(Matrix,Vector,OnlineLearner)
org.apache.mahout.classifier.sgd.PassiveAggressive.train(long,String,int,Vector)
org.apache.mahout.clustering.AbstractCluster.observe(ClusterObservations)
org.apache.mahout.clustering.AbstractCluster.observe(Vector)
org.apache.mahout.clustering.AbstractCluster.observe(Vector,double)
org.apache.mahout.clustering.display.DisplayMeanShift.paint(Graphics)
org.apache.mahout.clustering.lda.LDAInference.createPhiMatrix(int)
org.apache.mahout.clustering.lda.LDAInference.digammaGamma(Vector)
org.apache.mahout.clustering.TestClusterDumper.testKmeansSVD()
org.apache.mahout.clustering.TestGaussianAccumulators.setUp()
org.apache.mahout.common.mapreduce.VectorSumReducer.reduce(WritableComparable<?>,Iterable<VectorWritable>,VectorWritable,Context)
org.apache.mahout.math.AbstractMatrix.AbstractMatrix(int,int)
org.apache.mahout.math.AbstractMatrix.aggregateColumns(VectorFunction)
org.apache.mahout.math.AbstractMatrix.aggregate(DoubleDoubleFunction,DoubleFunction)
org.apache.mahout.math.AbstractMatrix.assign(double)
org.apache.mahout.math.AbstractMatrix.assign(double[][])
org.apache.mahout.math.AbstractMatrix.assign(DoubleFunction)
org.apache.mahout.math.AbstractMatrix.assign(Matrix)
org.apache.mahout.math.AbstractMatrix.assign(Matrix,DoubleDoubleFunction)
org.apache.mahout.math.AbstractMatrix.columnSize()
org.apache.mahout.math.AbstractMatrix.determinant()
org.apache.mahout.math.AbstractMatrix.divide(double)
org.apache.mahout.math.AbstractMatrix.get(int,int)
org.apache.mahout.math.AbstractMatrix.getNumNondefaultElements()
org.apache.mahout.math.AbstractMatrix.iterateAll()
org.apache.mahout.math.AbstractMatrix.minus(Matrix)
org.apache.mahout.math.AbstractMatrix.numCols()
org.apache.mahout.math.AbstractMatrix.numRows()
org.apache.mahout.math.AbstractMatrix.plus(double)
org.apache.mahout.math.AbstractMatrix.plus(Matrix)
org.apache.mahout.math.AbstractMatrix.rowSize()
org.apache.mahout.math.AbstractMatrix.set(int,double[])
org.apache.mahout.math.AbstractMatrix.set(int,int,double)
org.apache.mahout.math.AbstractMatrix.size()
org.apache.mahout.math.AbstractMatrix.slice(int)
org.apache.mahout.math.AbstractMatrix.times(double)
org.apache.mahout.math.AbstractMatrix.times(Matrix)
org.apache.mahout.math.AbstractMatrix.timesSquared(Vector)
org.apache.mahout.math.AbstractMatrix.times(Vector)
org.apache.mahout.math.AbstractMatrix.transpose()
org.apache.mahout.math.AbstractMatrix.TransposeViewVector.getQuick(int)
org.apache.mahout.math.AbstractMatrix.TransposeViewVector.setQuick(int,double)
org.apache.mahout.math.AbstractMatrix.viewDiagonal()
org.apache.mahout.math.AbstractMatrix.zSum()
org.apache.mahout.math.AbstractTestVector.testCrossProduct()
org.apache.mahout.math.AbstractVector.addTo(Vector)
org.apache.mahout.math.AbstractVector.plus(Vector)
org.apache.mahout.math.AbstractVector.set(int,double)
org.apache.mahout.math.Algebra.getNorm(Matrix)
org.apache.mahout.math.Algebra.mult(Matrix,Vector)
org.apache.mahout.math.als.AlternateLeastSquaresSolver.addLambdaTimesNuiTimesE(Matrix,double,int)
org.apache.mahout.math.als.AlternateLeastSquaresSolver.solve(List<Vector>,Vector,Vector,double,int)
org.apache.mahout.math.als.AlternateLeastSquaresSolver.solve(Matrix,Matrix)
org.apache.mahout.math.als.AlternateLeastSquaresSolverTest.addLambdaTimesNuiTimesE()
org.apache.mahout.math.ConstantVector.ConstantVector(double,int)
org.apache.mahout.math.ConstantVector.isDense()
org.apache.mahout.math.ConstantVector.isSequentialAccess()
org.apache.mahout.math.ConstantVector.iterateNonZero()
org.apache.mahout.math.decomposer.hebbian.HebbianSolver.getRandomStartingIndex(Matrix,Matrix)
org.apache.mahout.math.decomposer.hebbian.HebbianSolver.hasNotConverged(Vector,Matrix,TrainingState)
org.apache.mahout.math.decomposer.hebbian.HebbianSolver.main(String[])
org.apache.mahout.math.decomposer.hebbian.HebbianSolver.solve(Matrix,int)
org.apache.mahout.math.decomposer.hebbian.TrainingState.currentTrainingProjection()
org.apache.mahout.math.decomposer.hebbian.TrainingState.getCurrentEigens()
org.apache.mahout.math.decomposer.hebbian.TrainingState.mostRecentEigen()
org.apache.mahout.math.decomposer.hebbian.TrainingState.TrainingState(Matrix,Matrix)
org.apache.mahout.math.decomposer.SolverTest.assertEigen(Matrix,VectorIterable,int,double,boolean)
org.apache.mahout.math.decomposer.SolverTest.assertOrthonormal(Matrix,double)
org.apache.mahout.math.decomposer.SolverTest.randomSequentialAccessSparseMatrix(int,int,int,int,double)
org.apache.mahout.math.DenseMatrix.clone()
org.apache.mahout.math.DenseMatrix.DenseMatrix()
org.apache.mahout.math.DenseMatrix.DenseMatrix(double[][])
org.apache.mahout.math.DenseMatrix.DenseMatrix(int,int)
org.apache.mahout.math.DenseMatrix.initSize()
org.apache.mahout.math.DenseMatrix.setQuick(int,int,double)
org.apache.mahout.math.DenseVector.addAll(Vector)
org.apache.mahout.math.DenseVector.getLengthSquared()
org.apache.mahout.math.DiagonalMatrix.DiagonalMatrix(double[])
org.apache.mahout.math.DiagonalMatrix.DiagonalMatrix(double,int)
org.apache.mahout.math.DiagonalMatrix.DiagonalMatrix(Matrix)
org.apache.mahout.math.DiagonalMatrix.DiagonalMatrix(Vector)
org.apache.mahout.math.DiagonalMatrix.getColumn(int)
org.apache.mahout.math.DiagonalMatrix.getRow(int)
org.apache.mahout.math.DiagonalMatrix.identity(int)
org.apache.mahout.math.hadoop.decomposer.EigenVerificationJob.prepareEigens(Configuration,Path,boolean)
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolverCLI.testDistributedLanczosSolverEVJCLI()
org.apache.mahout.math.hadoop.MatrixMultiplicationJob.MatrixMultiplicationReducer.reduce(IntWritable,Iterator<VectorWritable>,VectorWritable,OutputCollector<IntWritable,VectorWritable>,IntWritable,VectorWritable,Reporter)
org.apache.mahout.math.hadoop.stochasticsvd.GivensThinSolver.getRRow(int)
org.apache.mahout.math.hadoop.stochasticsvd.GivensThinSolver.getRTilde()
org.apache.mahout.math.hadoop.stochasticsvd.GivensThinSolver.pushQtDown()
org.apache.mahout.math.hadoop.stochasticsvd.GivensThinSolver.setRRow(int,double[])
org.apache.mahout.math.hadoop.stochasticsvd.GivensThinSolver.solve(Matrix)
org.apache.mahout.math.hadoop.stochasticsvd.LocalSSVDSolverDenseTest.testSSVDSolver()
org.apache.mahout.math.hadoop.stochasticsvd.SSVDPrototypeTest.assertOrthonormality(Matrix,boolean,double)
org.apache.mahout.math.hadoop.stochasticsvd.SSVDPrototype.testBlockQrWithSSVD(int,int,int,long)
org.apache.mahout.math.hadoop.stochasticsvd.SSVDPrototype.testThinQr.emitRow(int,Vector)
org.apache.mahout.math.hadoop.stochasticsvd.SSVDPrototype.testThinQr(int,int)
org.apache.mahout.math.hadoop.stochasticsvd.UJob.UMapper.map(Writable,VectorWritable,Context)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.assignColumn(int,Vector)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.assignNonZeroElementsInRow(int,double[])
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.assignRow(int,double[])
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.assignRow(int,Vector)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.elementsToMatrixSize(int)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.getData()
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.getL(int,int)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.getQuick(int,int)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.like()
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.like(int,int)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangularTest.print(Matrix)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangularTest.testBasics()
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.UpperTriangular(double[],boolean)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.UpperTriangular(int)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.UpperTriangular(int,double[],boolean)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.UpperTriangular(int,int)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.UpperTriangular(int,Vector)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.UpperTriangular(Vector)
org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular.viewPart(int[],int[])
org.apache.mahout.math.hadoop.TimesSquaredJob.VectorSummingReducer.reduce(NullWritable,Iterator<VectorWritable>,VectorWritable,OutputCollector<NullWritable,VectorWritable>,NullWritable,VectorWritable,Reporter)
org.apache.mahout.math.MatrixTest.testAggregateCols()
org.apache.mahout.math.MatrixTest.testAggregateRows()
org.apache.mahout.math.MatrixTest.testAssignColumnCardinality()
org.apache.mahout.math.MatrixTest.testAssignDouble()
org.apache.mahout.math.MatrixTest.testAssignDoubleArrayArray()
org.apache.mahout.math.MatrixTest.testAssignDoubleArrayArrayCardinality()
org.apache.mahout.math.MatrixTest.testAssignMatrix()
org.apache.mahout.math.MatrixTest.testAssignMatrixBinaryFunction()
org.apache.mahout.math.MatrixTest.testAssignUnaryFunction()
org.apache.mahout.math.MatrixTest.testCardinality()
org.apache.mahout.math.MatrixTest.testColumnView()
org.apache.mahout.math.MatrixTest.testCopy()
org.apache.mahout.math.MatrixTest.testDeterminant()
org.apache.mahout.math.MatrixTest.testDetermitant()
org.apache.mahout.math.MatrixTest.testDivide()
org.apache.mahout.math.MatrixTest.testGet()
org.apache.mahout.math.MatrixTest.testGetColumn()
org.apache.mahout.math.MatrixTest.testGetColumnIndexOver()
org.apache.mahout.math.MatrixTest.testGetColumnIndexUnder()
org.apache.mahout.math.MatrixTest.testGetIndexOver()
org.apache.mahout.math.MatrixTest.testGetIndexUnder()
org.apache.mahout.math.MatrixTest.testGetQuick()
org.apache.mahout.math.MatrixTest.testGetRow()
org.apache.mahout.math.MatrixTest.testGetRowIndexOver()
org.apache.mahout.math.MatrixTest.testGetRowIndexUnder()
org.apache.mahout.math.MatrixTest.testLike()
org.apache.mahout.math.MatrixTest.testLikeIntInt()
org.apache.mahout.math.MatrixTest.testMinus()
org.apache.mahout.math.MatrixTest.testPlusDouble()
org.apache.mahout.math.MatrixTest.testPlusMatrix()
org.apache.mahout.math.MatrixTest.testRowView()
org.apache.mahout.math.MatrixTest.testSetOver()
org.apache.mahout.math.MatrixTest.testSetQuick()
org.apache.mahout.math.MatrixTest.testSetUnder()
org.apache.mahout.math.MatrixTest.testTimesDouble()
org.apache.mahout.math.MatrixTest.testTimesMatrix()
org.apache.mahout.math.MatrixTest.testTranspose()
org.apache.mahout.math.MatrixTest.testViewColumn()
org.apache.mahout.math.MatrixTest.testViewColumnIndexOver()
org.apache.mahout.math.MatrixTest.testViewColumnIndexUnder()
org.apache.mahout.math.MatrixTest.testViewPart()
org.apache.mahout.math.MatrixTest.testViewRow()
org.apache.mahout.math.MatrixTest.testViewRowIndexOver()
org.apache.mahout.math.MatrixTest.testViewRowIndexUnder()
org.apache.mahout.math.MatrixVectorView.MatrixVectorView(Matrix,int,int,int,int)
org.apache.mahout.math.MatrixView.MatrixView()
org.apache.mahout.math.MatrixView.MatrixView(Matrix,int[],int[])
org.apache.mahout.math.Matrix.viewPart(int,int,int,int)
org.apache.mahout.math.MatrixWritable.readMatrix(DataInput)
org.apache.mahout.math.NamedVector.getDistanceSquared(Vector)
org.apache.mahout.math.PermutedVectorView.iterator.computeNext.get()
org.apache.mahout.math.PermutedVectorView.iterator.computeNext.index()
org.apache.mahout.math.PermutedVectorView.iterator.computeNext.set(double)
org.apache.mahout.math.PermutedVectorView.matrixLike(int,int)
org.apache.mahout.math.PermutedVectorView.PermutedVectorView(Vector,int[])
org.apache.mahout.math.PermutedVectorView.PermutedVectorView(Vector,int[],int[])
org.apache.mahout.math.PermutedVectorView.reversePivotPermutation(int[])
org.apache.mahout.math.PermutedVectorViewTest.pivot()
org.apache.mahout.math.PermutedVectorViewTest.randomVector()
org.apache.mahout.math.PermutedVectorViewTest.randomVector.apply(double)
org.apache.mahout.math.PermutedVectorViewTest.testIterators()
org.apache.mahout.math.PermutedVectorViewTest.testViewBasics()
org.apache.mahout.math.PermutedVectorViewTest.unpivot()
org.apache.mahout.math.PivotedMatrix.columnUnpivot(int)
org.apache.mahout.math.PivotedMatrix.getBase()
org.apache.mahout.math.PivotedMatrix.getColumnPivot()
org.apache.mahout.math.PivotedMatrix.getInverseColumnPivot()
org.apache.mahout.math.PivotedMatrix.getInverseRowPivot()
org.apache.mahout.math.PivotedMatrix.getRowPivot()
org.apache.mahout.math.PivotedMatrix.identityPivot(int)
org.apache.mahout.math.PivotedMatrix.invert(int[])
org.apache.mahout.math.PivotedMatrix.PivotedMatrix(Matrix)
org.apache.mahout.math.PivotedMatrix.PivotedMatrix(Matrix,int[])
org.apache.mahout.math.PivotedMatrix.PivotedMatrix(Matrix,int[],int[])
org.apache.mahout.math.PivotedMatrix.rowUnpivot(int)
org.apache.mahout.math.PivotedMatrix.swapColumns(int,int)
org.apache.mahout.math.PivotedMatrix.swap(int,int)
org.apache.mahout.math.PivotedMatrix.swap(int[],int[],int,int)
org.apache.mahout.math.PivotedMatrix.swapRows(int,int)
org.apache.mahout.math.PivotedMatrixTest.testSwap()
org.apache.mahout.math.RandomAccessSparseVector.dot(Vector)
org.apache.mahout.math.RandomTrinaryMatrix.RandomTrinaryMatrix(int,int)
org.apache.mahout.math.RandomTrinaryMatrix.RandomTrinaryMatrix(int,int,int,boolean)
org.apache.mahout.math.SparseColumnMatrix.SparseColumnMatrix()
org.apache.mahout.math.SparseColumnMatrix.SparseColumnMatrix(int[])
org.apache.mahout.math.SparseColumnMatrix.SparseColumnMatrix(int,int)
org.apache.mahout.math.SparseColumnMatrix.SparseColumnMatrix(int,int,RandomAccessSparseVector[])
org.apache.mahout.math.SparseColumnMatrix.SparseColumnMatrix(int[],RandomAccessSparseVector[])
org.apache.mahout.math.SparseColumnMatrix.viewColumn(int)
org.apache.mahout.math.SparseMatrix.iterator()
org.apache.mahout.math.SparseMatrix.iterator.computeNext()
org.apache.mahout.math.SparseMatrix.SparseMatrix()
org.apache.mahout.math.SparseMatrix.SparseMatrix(int[])
org.apache.mahout.math.SparseMatrix.SparseMatrix(int,int)
org.apache.mahout.math.SparseMatrix.SparseMatrix(int,int,Map<Integer,RandomAccessSparseVector>,Integer,RandomAccessSparseVector)
org.apache.mahout.math.SparseMatrix.SparseMatrix(int[],Map<Integer,RandomAccessSparseVector>,Integer,RandomAccessSparseVector)
org.apache.mahout.math.SparseMatrix.viewRow(int)
org.apache.mahout.math.SparseRowMatrix.getColumn.newVector(int)
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix()
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int[])
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int[],boolean)
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int,int)
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int,int,boolean)
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int,int,Vector[])
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int,int,Vector[],boolean,boolean)
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int[],Vector[])
org.apache.mahout.math.SparseRowMatrix.SparseRowMatrix(int[],Vector[],boolean,boolean)
org.apache.mahout.math.TestMatrixView.testSize()
org.apache.mahout.math.TestSparseColumnMatrix.matrixFactory(double[][])
org.apache.mahout.math.TestSparseColumnMatrix.testIterate()
org.apache.mahout.math.VectorTest.testAddTo()
