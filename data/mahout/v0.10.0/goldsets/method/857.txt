org.apache.mahout.classifier.ClassifierResult.ClassifierResult()
org.apache.mahout.classifier.ClassifierResult.ClassifierResult(String)
org.apache.mahout.classifier.ClassifierResult.ClassifierResult(String,double,double)
org.apache.mahout.classifier.ClassifierResult.getLabel()
org.apache.mahout.classifier.ClassifierResult.getLogLikelihood()
org.apache.mahout.classifier.ClassifierResult.setLogLikelihood(double)
org.apache.mahout.classifier.ResultAnalyzer.addInstance(String,ClassifierResult)
org.apache.mahout.classifier.ResultAnalyzer.getConfusionMatrix()
org.apache.mahout.classifier.ResultAnalyzer.ResultAnalyzer(Collection<String>,String,String)
org.apache.mahout.classifier.ResultAnalyzer.toString()
org.apache.mahout.classifier.sgd.NewsgroupHelper.countWords(Analyzer,Collection<String>,String,Reader,Multiset<String>,String)
org.apache.mahout.classifier.sgd.NewsgroupHelper.encodeFeatureVector(File,int,int,Multiset<String>,String)
org.apache.mahout.classifier.sgd.TestNewsGroups.getBooleanArgument(CommandLine,Option)
org.apache.mahout.classifier.sgd.TestNewsGroups.getStringArgument(CommandLine,Option)
org.apache.mahout.classifier.sgd.TestNewsGroups.main(String[])
org.apache.mahout.classifier.sgd.TestNewsGroups.parseArgs(String[])
org.apache.mahout.classifier.sgd.TestNewsGroups.run(PrintWriter)
org.apache.mahout.classifier.sgd.TestNewsGroups.TestNewsGroups()
org.apache.mahout.classifier.sgd.TrainNewsGroups.countWords(Analyzer,Collection<String>,String,Reader)
org.apache.mahout.classifier.sgd.TrainNewsGroups.dissect(int,Dictionary,AdaptiveLogisticRegression,Iterable<File>,File)
org.apache.mahout.classifier.sgd.TrainNewsGroups.encodeFeatureVector(File,int,int)
org.apache.mahout.classifier.sgd.TrainNewsGroups.permute(Iterable<File>,File,Random)
org.apache.mahout.classifier.sgd.TrainNewsGroups.TrainNewsGroups()
