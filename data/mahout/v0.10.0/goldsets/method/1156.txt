org.apache.mahout.clustering.streaming.cluster.StreamingKMeansTest.generateData()
org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansUtilsMR.searcherFromConfiguration(Configuration)
org.apache.mahout.math.neighborhood.BruteSearch.BruteSearch(DistanceMeasure)
org.apache.mahout.math.neighborhood.BruteSearch.search.call()
org.apache.mahout.math.neighborhood.BruteSearch.search(Iterable<WeightedVector>,WeightedVector,int,int)
org.apache.mahout.math.neighborhood.FastProjectionSearch.FastProjectionSearch(DistanceMeasure,int,int)
org.apache.mahout.math.neighborhood.FastProjectionSearch.iterator.computeNext()
org.apache.mahout.math.neighborhood.FastProjectionSearch.reindex(boolean)
org.apache.mahout.math.neighborhood.FastProjectionSearch.setDirty()
org.apache.mahout.math.neighborhood.HashedVector.computeHash64(Vector,Matrix)
org.apache.mahout.math.neighborhood.HashedVector.equals(Object)
org.apache.mahout.math.neighborhood.HashedVector.getHash()
org.apache.mahout.math.neighborhood.HashedVector.hammingDistance(long)
org.apache.mahout.math.neighborhood.HashedVector.hashCode()
org.apache.mahout.math.neighborhood.HashedVector.HashedVector(Vector,long,int)
org.apache.mahout.math.neighborhood.HashedVector.HashedVector(Vector,Matrix,int,long)
org.apache.mahout.math.neighborhood.HashedVector.HashedVector(WeightedVector,Matrix,long)
org.apache.mahout.math.neighborhood.HashedVector.hash(WeightedVector,Matrix)
org.apache.mahout.math.neighborhood.HashedVector.hash(WeightedVector,Matrix,long)
org.apache.mahout.math.neighborhood.HashedVector.toString()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.add(Vector)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.clear()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.getSearchSize()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.initialize(int)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.iterator()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.iterator.apply(org.apache.mahout.math.neighborhood.HashedVector)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.LocalitySensitiveHashSearch(DistanceMeasure,int)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.removeHash(WeightedThing<Vector>,Vector)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.remove(Vector,double)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.resetEvaluationCount()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.searchFirst(Vector,boolean)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.searchInternal(Vector)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.search(Vector,int)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.setRaiseHashLimitStrategy(double)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.setSearchSize(int)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearch.size()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearchTest.evaluateStrategy(Matrix,BruteSearch,LocalitySensitiveHashSearch)
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearchTest.testDotCorrelation()
org.apache.mahout.math.neighborhood.LocalitySensitiveHashSearchTest.testNormal()
org.apache.mahout.math.neighborhood.LumpyData.LumpyData(int,double,double)
org.apache.mahout.math.neighborhood.LumpyData.lumpyRandomData(int,int)
org.apache.mahout.math.neighborhood.LumpyData.sample()
org.apache.mahout.math.neighborhood.ProjectionSearch.ProjectionSearch(DistanceMeasure,int,int)
org.apache.mahout.math.neighborhood.Searcher.addAll(Iterable<?extendsVector>,Vector)
org.apache.mahout.math.neighborhood.Searcher.addAllMatrixSlicesAsWeightedVectors(Iterable<MatrixSlice>,MatrixSlice)
org.apache.mahout.math.neighborhood.Searcher.addAllMatrixSlices(Iterable<MatrixSlice>,MatrixSlice)
org.apache.mahout.math.neighborhood.Searcher.getCandidateQueue(int)
org.apache.mahout.math.neighborhood.Searcher.getCandidateQueue.lessThan(WeightedThing<Vector>,Vector,WeightedThing<Vector>,Vector)
org.apache.mahout.math.neighborhood.Searcher.getDistanceMeasure()
org.apache.mahout.math.neighborhood.Searcher.Searcher(DistanceMeasure)
org.apache.mahout.math.neighborhood.Searcher.searchFirst(Iterable<?extendsVector>,Vector,boolean)
org.apache.mahout.math.neighborhood.Searcher.search(Iterable<?extendsVector>,Vector,int)
org.apache.mahout.math.neighborhood.SearchQualityTest.getResultsAndRuntime(Searcher,Iterable<?extendsVector>,Vector)
org.apache.mahout.math.neighborhood.SearchQualityTest.getResultsAndRuntimeSearchFirst(Searcher,Iterable<?extendsVector>,Vector)
org.apache.mahout.math.neighborhood.SearchQualityTest.SearchQualityTest(Searcher,Matrix,Matrix,Pair<List<List<WeightedThing<Vector>>>,Long>,List<List<WeightedThing<Vector>>>,List<WeightedThing<Vector>>,WeightedThing<Vector>,Vector,Long,Pair<List<WeightedThing<Vector>>,Long>,List<WeightedThing<Vector>>,WeightedThing<Vector>,Vector,Long)
org.apache.mahout.math.neighborhood.SearchQualityTest.StripWeight.apply(WeightedThing<Vector>,Vector)
org.apache.mahout.math.neighborhood.SearchQualityTest.testOverlapAndRuntime()
org.apache.mahout.math.neighborhood.SearchQualityTest.testOverlapAndRuntimeSearchFirst()
org.apache.mahout.math.neighborhood.SearchSanityTest.multiNormalRandomData(int,int)
org.apache.mahout.math.neighborhood.SearchSanityTest.SearchSanityTest(UpdatableSearcher,Matrix)
org.apache.mahout.math.neighborhood.SearchSanityTest.testExactMatch()
org.apache.mahout.math.neighborhood.SearchSanityTest.testNearMatch()
org.apache.mahout.math.neighborhood.SearchSanityTest.testOrdering()
org.apache.mahout.math.neighborhood.SearchSanityTest.testRemoval()
org.apache.mahout.math.neighborhood.SearchSanityTest.testSearchFirst()
org.apache.mahout.math.neighborhood.UpdatableSearcher.UpdatableSearcher(DistanceMeasure)
org.apache.mahout.math.random.RandomProjector.generateBasisNormal(int,int)
org.apache.mahout.math.random.RandomProjector.generateBasisPlusMinusOne(int,int)
org.apache.mahout.math.random.RandomProjector.generateBasisZeroPlusMinusOne(int,int)
org.apache.mahout.math.random.RandomProjector.generateVectorBasis(int,int)
org.apache.mahout.math.random.WeightedThing.getValue()
org.apache.mahout.math.random.WeightedThing.WeightedThing(double)
org.apache.mahout.math.random.WeightedThing.WeightedThing(T,double)
