org.apache.mahout.df.Bagging.Bagging(TreeBuilder,Data)
org.apache.mahout.df.Bagging.build(int,Random,PredictionCallback)
org.apache.mahout.df.BreimanExample.runIteration(Data,int,int)
org.apache.mahout.df.BreimanExample.run(String[])
org.apache.mahout.df.builder.DefaultTreeBuilder.build(Random,Data)
org.apache.mahout.df.builder.DefaultTreeBuilder.DefaultTreeBuilder()
org.apache.mahout.df.builder.DefaultTreeBuilder.randomAttributes(Dataset,Random,int)
org.apache.mahout.df.builder.DefaultTreeBuilder.setIgSplit(IgSplit)
org.apache.mahout.df.builder.DefaultTreeBuilder.setM(int)
org.apache.mahout.df.builder.DefaultTreeBuilderTest.testRandomAttributes()
org.apache.mahout.df.callback.ForestPredictions.computePredictions(Random)
org.apache.mahout.df.callback.ForestPredictions.ForestPredictions(int,int)
org.apache.mahout.df.callback.ForestPredictions.prediction(int,int,int)
org.apache.mahout.df.callback.MeanTreeCollector.MeanTreeCollector(Data,int)
org.apache.mahout.df.callback.MeanTreeCollector.meanTreeError()
org.apache.mahout.df.callback.MultiCallback.MultiCallback(PredictionCallback)
org.apache.mahout.df.callback.SingleTreePredictions.SingleTreePredictions(int)
org.apache.mahout.df.data.conditions.Condition.equals(int,double)
org.apache.mahout.df.data.conditions.Condition.greaterOrEquals(int,double)
org.apache.mahout.df.data.conditions.Condition.isTrueFor(Instance)
org.apache.mahout.df.data.conditions.Condition.lesser(int,double)
org.apache.mahout.df.data.conditions.Equals.Equals(int,double)
org.apache.mahout.df.data.conditions.GreaterOrEquals.GreaterOrEquals(int,double)
org.apache.mahout.df.data.conditions.Lesser.Lesser(int,double)
org.apache.mahout.df.data.Data.bagging(Random)
org.apache.mahout.df.data.Data.bagging(Random,boolean[])
org.apache.mahout.df.data.Data.clone()
org.apache.mahout.df.data.Data.contains(Instance)
org.apache.mahout.df.data.DataConverter.convert(int,String)
org.apache.mahout.df.data.DataConverter.DataConverter(Dataset)
org.apache.mahout.df.data.DataConverterTest.testConvert()
org.apache.mahout.df.data.Data.countLabels(int[])
org.apache.mahout.df.data.Data.Data(Dataset,List<Instance>,Instance)
org.apache.mahout.df.data.Data.extractLabels()
org.apache.mahout.df.data.Data.extractLabels(Dataset,FileSystem,Path)
org.apache.mahout.df.data.Data.get(int)
org.apache.mahout.df.data.Data.identicalLabel()
org.apache.mahout.df.data.Data.indexof(Instance)
org.apache.mahout.df.data.Data.isEmpty()
org.apache.mahout.df.data.Data.isIdentical()
org.apache.mahout.df.data.DataLoader.constructData(Attribute[],List<Instance>,Instance,List<String>[],String)
org.apache.mahout.df.data.DataLoader.generateDataset(String,FileSystem,Path)
org.apache.mahout.df.data.DataLoader.generateDataset(String,String[])
org.apache.mahout.df.data.DataLoader.loadData(Dataset,FileSystem,Path)
org.apache.mahout.df.data.DataLoader.loadData(Dataset,String[])
org.apache.mahout.df.data.DataLoader.parseString(int,Attribute[],List<String>[],String,String)
org.apache.mahout.df.data.DataLoaderTest.checkCategorical(double[][],List<Integer>,Integer,Data,int,int,double,double)
org.apache.mahout.df.data.DataLoaderTest.checkLabel(double[][],List<Integer>,Integer,Data,int,double)
org.apache.mahout.df.data.DataLoaderTest.prepareData(double[][],Attribute[],List<Integer>,Integer)
org.apache.mahout.df.data.DataLoaderTest.setUp()
org.apache.mahout.df.data.DataLoaderTest.testGenerateDataset()
org.apache.mahout.df.data.DataLoaderTest.testGenerateDatasetFromFile()
org.apache.mahout.df.data.DataLoaderTest.testLoadDataFromFile()
org.apache.mahout.df.data.DataLoaderTest.testLoadDataWithDescriptor()
org.apache.mahout.df.data.DataLoaderTest.testLoadedData(double[][],Attribute[],List<Integer>,Integer,Data)
org.apache.mahout.df.data.DataLoaderTest.testLoadedDataset(double[][],Attribute[],List<Integer>,Integer,Data)
org.apache.mahout.df.data.Data.majorityLabel(Random)
org.apache.mahout.df.data.Data.rsplit(Random,int)
org.apache.mahout.df.data.Data.rsubset(Random,double)
org.apache.mahout.df.data.Dataset.Attribute.isCategorical()
org.apache.mahout.df.data.Dataset.Attribute.isIgnored()
org.apache.mahout.df.data.Dataset.Attribute.isLabel()
org.apache.mahout.df.data.Dataset.Attribute.isNumerical()
org.apache.mahout.df.data.Dataset.countAttributes(Attribute[])
org.apache.mahout.df.data.Dataset.Dataset()
org.apache.mahout.df.data.Dataset.Dataset(Attribute[],List<String>[],String,int)
org.apache.mahout.df.data.Dataset.getIgnored()
org.apache.mahout.df.data.Dataset.getLabelId()
org.apache.mahout.df.data.Dataset.getLabel(int)
org.apache.mahout.df.data.Dataset.isNumerical(int)
org.apache.mahout.df.data.Dataset.labelCode(String)
org.apache.mahout.df.data.Dataset.load(Configuration,Path)
org.apache.mahout.df.data.Dataset.nbAttributes()
org.apache.mahout.df.data.Dataset.nbInstances()
org.apache.mahout.df.data.Dataset.nblabels()
org.apache.mahout.df.data.Dataset.read(DataInput)
org.apache.mahout.df.data.Dataset.readFields(DataInput)
org.apache.mahout.df.data.DatasetTest.readDataset(byte[])
org.apache.mahout.df.data.DatasetTest.testWritable()
org.apache.mahout.df.data.Dataset.validateValues(Attribute[],List<String>[],String)
org.apache.mahout.df.data.Dataset.valueOf(int,String)
org.apache.mahout.df.data.Dataset.write(DataOutput)
org.apache.mahout.df.data.Data.size()
org.apache.mahout.df.data.Data.subset(Condition)
org.apache.mahout.df.data.DataTest.count(double[],double)
org.apache.mahout.df.data.DataTest.testBagging()
org.apache.mahout.df.data.DataTest.testCountLabel()
org.apache.mahout.df.data.DataTest.testIdenticalFalse()
org.apache.mahout.df.data.DataTest.testIdenticalLabelFalse()
org.apache.mahout.df.data.DataTest.testIdenticalLabelTrue()
org.apache.mahout.df.data.DataTest.testIdenticalTrue()
org.apache.mahout.df.data.DataTest.testMajorityLabel()
org.apache.mahout.df.data.DataTest.testRsplit()
org.apache.mahout.df.data.DataTest.testSubset()
org.apache.mahout.df.data.DataTest.testValues()
org.apache.mahout.df.data.DataUtils.add(int[],int[])
org.apache.mahout.df.data.DataUtils.dec(int[],int[])
org.apache.mahout.df.data.DataUtils.maxindex(Random,int[])
org.apache.mahout.df.data.DataUtils.sum(int[])
org.apache.mahout.df.data.Data.values(int)
org.apache.mahout.df.data.DescriptorUtils.DescriptorException.DescriptorException(String)
org.apache.mahout.df.data.DescriptorUtils.generateDescriptor(List<String>,String)
org.apache.mahout.df.data.DescriptorUtils.generateDescriptor(String)
org.apache.mahout.df.data.DescriptorUtils.parseDescriptor(String)
org.apache.mahout.df.data.DescriptorUtilsTest.testGenerateDescription()
org.apache.mahout.df.data.DescriptorUtilsTest.testParseDescriptor()
org.apache.mahout.df.data.DescriptorUtilsTest.validate(String,String)
org.apache.mahout.df.data.Instance.Instance(int,Vector,int)
org.apache.mahout.df.data.Instance.set(int,double)
org.apache.mahout.df.data.Utils.double2String(double[])
org.apache.mahout.df.data.Utils.double2String(double[][])
org.apache.mahout.df.data.Utils.findLabel(String)
org.apache.mahout.df.data.Utils.generateDescriptor(char[])
org.apache.mahout.df.data.Utils.LogCallback.LogCallback(Logger)
org.apache.mahout.df.data.Utils.randomData(Random,int,int)
org.apache.mahout.df.data.Utils.randomDescriptor(Random,int)
org.apache.mahout.df.data.Utils.randomDoubles(Random,int,int)
org.apache.mahout.df.data.Utils.randomDoubles(Random,String,int)
org.apache.mahout.df.data.Utils.randomDoublesWithSameLabel(Random,String,int,int)
org.apache.mahout.df.data.Utils.randomTokens(Random,int)
org.apache.mahout.df.data.Utils.randomVector(Random,Attribute[])
org.apache.mahout.df.data.Utils.splitData(String[],int)
org.apache.mahout.df.data.Utils.writeDatasetToTestFile(Dataset)
org.apache.mahout.df.data.Utils.writeDataToFile(String[],Path)
org.apache.mahout.df.data.Utils.writeDataToTestFile(String[])
org.apache.mahout.df.DecisionForest.classify(Data,PredictionCallback)
org.apache.mahout.df.DecisionForest.classify(Random,Instance)
org.apache.mahout.df.DecisionForest.DecisionForest()
org.apache.mahout.df.DecisionForest.DecisionForest(List<Node>,Node)
org.apache.mahout.df.DecisionForest.equals(Object)
org.apache.mahout.df.DecisionForest.getTrees()
org.apache.mahout.df.DecisionForest.meanMaxDepth()
org.apache.mahout.df.DecisionForest.meanNbNodes()
org.apache.mahout.df.DecisionForest.nbNodes()
org.apache.mahout.df.DFUtils.elapsedTime(long)
org.apache.mahout.df.DFUtils.listOutputFiles(FileSystem,Path)
org.apache.mahout.df.DFUtils.readDoubleArray(DataInput)
org.apache.mahout.df.DFUtils.readIntArray(DataInput)
org.apache.mahout.df.DFUtils.readNodeArray(DataInput)
org.apache.mahout.df.DFUtils.writeArray(DataOutput,double[])
org.apache.mahout.df.DFUtils.writeArray(DataOutput,int[])
org.apache.mahout.df.DFUtils.writeArray(DataOutput,Node[])
org.apache.mahout.df.ErrorEstimate.errorRate(int[],int[])
org.apache.mahout.df.ErrorEstimate.nbErrors(int[],int[])
org.apache.mahout.df.ErrorEstimate.nbPredicted(int[])
org.apache.mahout.df.node.CategoricalNode.CategoricalNode()
org.apache.mahout.df.node.CategoricalNode.CategoricalNode(int,double[],Node[])
org.apache.mahout.df.node.CategoricalNode.classify(Instance)
org.apache.mahout.df.node.CategoricalNode.getString()
org.apache.mahout.df.node.CategoricalNode.maxDepth()
org.apache.mahout.df.node.CategoricalNode.writeNode(DataOutput)
org.apache.mahout.df.node.Leaf.Leaf()
org.apache.mahout.df.node.Leaf.Leaf(int)
org.apache.mahout.df.node.Leaf.parse(StringTokenizer)
org.apache.mahout.df.node.Node.node2Type()
org.apache.mahout.df.node.NodeTest.readNode()
org.apache.mahout.df.node.NodeTest.testCategoricalNode()
org.apache.mahout.df.node.NodeTest.testParseNumerical()
org.apache.mahout.df.node.NodeTest.testReadLeaf()
org.apache.mahout.df.node.NodeTest.testReadTree()
org.apache.mahout.df.node.Node.toString()
org.apache.mahout.df.node.NumericalNode.NumericalNode()
org.apache.mahout.df.node.NumericalNode.NumericalNode(int,double,Node,Node)
org.apache.mahout.df.ref.SequentialBuilder.build(int,PredictionCallback)
org.apache.mahout.df.ref.SequentialBuilder.logProgress(float)
org.apache.mahout.df.ref.SequentialBuilder.SequentialBuilder(Random,TreeBuilder,Data)
org.apache.mahout.df.split.DefaultIgSplit.categoricalIg(Data,int)
org.apache.mahout.df.split.DefaultIgSplit.computeSplit(Data,int)
org.apache.mahout.df.split.DefaultIgSplit.entropy(Data)
org.apache.mahout.df.split.DefaultIgSplit.numericalIg(Data,int,double)
org.apache.mahout.df.split.DefaultIgSplitTest.testEntropy()
org.apache.mahout.df.split.OptIgSplit.categoricalSplit(Data,int)
org.apache.mahout.df.split.OptIgSplit.computeFrequencies(Data,int,double[])
org.apache.mahout.df.split.OptIgSplit.entropy(int[],int)
org.apache.mahout.df.split.OptIgSplit.initCounts(Data,double[])
org.apache.mahout.df.split.OptIgSplit.numericalSplit(Data,int)
org.apache.mahout.df.split.OptIgSplit.sortedValues(Data,int)
org.apache.mahout.df.split.OptIgSplitTest.testComputeSplit()
org.apache.mahout.df.split.Split.Split(int,double)
org.apache.mahout.df.split.Split.Split(int,double,double)
org.apache.mahout.df.tools.Describe.convert(List)
org.apache.mahout.df.tools.Describe.generateDataset(String,String)
org.apache.mahout.df.tools.Describe.main(String[])
org.apache.mahout.df.tools.Describe.runTool(String,List<String>,String,String)
org.apache.mahout.df.tools.Describe.storeWritable(Configuration,Path,Writable)
org.apache.mahout.df.tools.Describe.validateOutput(String)
