org.apache.mahout.cf.taste.example.email.MailToRecReducer.reduce(Text,Iterable<LongWritable>,LongWritable,Context)
org.apache.mahout.cf.taste.hadoop.als.ALSUtils.ALSUtils()
org.apache.mahout.cf.taste.hadoop.als.ALSUtils.readFirstRow(Path,Configuration)
org.apache.mahout.cf.taste.hadoop.als.ALSUtils.readMatrixByRows(Path,Configuration)
org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJobTest.completeJobImplicitToyExample()
org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJobTest.completeJobToyExample()
org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJobTest.preferencesAsText(Matrix)
org.apache.mahout.cf.taste.hadoop.example.als.netflix.NetflixDatasetConverter.NetflixDatasetConverter()
org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev.inverse()
org.apache.mahout.cf.taste.impl.model.file.FileDataModel.FileDataModel(File,boolean,long)
org.apache.mahout.cf.taste.impl.recommender.knn.KnnItemBasedRecommender.doEstimatePreference(long,PreferenceArray,long)
org.apache.mahout.cf.taste.impl.recommender.knn.KnnItemBasedRecommender.getInterpolations(long,long[],List<Long>,Long)
org.apache.mahout.cf.taste.impl.recommender.knn.KnnItemBasedRecommender.getInterpolations(long,long,long[],List<Long>,Long)
org.apache.mahout.cf.taste.impl.recommender.knn.KnnItemBasedRecommender.mostSimilarItems(long,LongPrimitiveIterator,int,Rescorer<LongPair>,LongPair)
org.apache.mahout.cf.taste.impl.similarity.TanimotoCoefficientSimilarity.userSimilarity(long,long)
org.apache.mahout.classifier.ConfusionMatrixDumper.printCountsTable(ConfusionMatrix,PrintStream)
org.apache.mahout.classifier.ConfusionMatrixDumper.printGrayCell(ConfusionMatrix,PrintStream,int,String,String)
org.apache.mahout.classifier.ConfusionMatrix.setMatrix(Matrix)
org.apache.mahout.classifier.ConfusionMatrix.sortLabels(Map<String,Integer>,String,Integer)
org.apache.mahout.classifier.ConfusionMatrix.verifyLabels(int,String[])
org.apache.mahout.classifier.df.Bagging.build(int,Random)
org.apache.mahout.classifier.df.Bagging.build(Random)
org.apache.mahout.classifier.df.data.DataLoaderTest.testGenerateDataset()
org.apache.mahout.classifier.df.data.DataLoaderTest.testGenerateDatasetFromFile()
org.apache.mahout.classifier.df.mapreduce.inmem.InMemMapper.map(IntWritable,Context)
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.parseOutput(Job)
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.processOutput(JobContext,Path,int[],TreeID[],Node[])
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.processOutput(JobContext,Path,TreeID[],Node[])
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilderTest.testProcessOutput()
org.apache.mahout.classifier.df.mapreduce.partial.PartialSequentialBuilder.processOutput(TreeID[],MapredOutput[])
org.apache.mahout.classifier.df.mapreduce.partial.PartialSequentialBuilder.runJob(Job)
org.apache.mahout.classifier.df.mapreduce.partial.Step1Mapper.cleanup(Context)
org.apache.mahout.classifier.df.ref.SequentialBuilder.build(int)
org.apache.mahout.classifier.sgd.NewsgroupHelper.encodeFeatureVector(File,int,int,Multiset<String>,String)
org.apache.mahout.classifier.sgd.RunAdaptiveLogistic.mainToOutput(String[],PrintWriter)
org.apache.mahout.classifier.sgd.SGDHelper.analyzeState(SGDInfo,int,int,State<AdaptiveLogisticRegression.Wrapper,CrossFoldLearner>,AdaptiveLogisticRegression.Wrapper,CrossFoldLearner)
org.apache.mahout.classifier.sgd.SGDHelper.dissect(int,Dictionary,AdaptiveLogisticRegression,Iterable<File>,File,Multiset<String>,String)
org.apache.mahout.classifier.sgd.SGDHelper.permute(Iterable<File>,File,Random)
org.apache.mahout.classifier.sgd.SGDHelper.SGDHelper()
org.apache.mahout.classifier.sgd.SGDInfo.getAverageCorrect()
org.apache.mahout.classifier.sgd.SGDInfo.getAverageLL()
org.apache.mahout.classifier.sgd.SGDInfo.getBumps()
org.apache.mahout.classifier.sgd.SGDInfo.getStep()
org.apache.mahout.classifier.sgd.SGDInfo.setAverageCorrect(double)
org.apache.mahout.classifier.sgd.SGDInfo.setAverageLL(double)
org.apache.mahout.classifier.sgd.SGDInfo.setBumps(int[])
org.apache.mahout.classifier.sgd.SGDInfo.setStep(double)
org.apache.mahout.classifier.sgd.TestASFEmail.parseArgs(String[])
org.apache.mahout.classifier.sgd.TestASFEmail.run(PrintWriter)
org.apache.mahout.classifier.sgd.TrainASFEmail.TrainASFEmail()
org.apache.mahout.classifier.sgd.TrainNewsGroups.TrainNewsGroups()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusteringEuclideanMR()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testUserDefinedDistanceMeasure()
org.apache.mahout.clustering.lda.cvb.CachingCVB0Mapper.getMaxIters()
org.apache.mahout.clustering.lda.cvb.CachingCVB0Mapper.getModelTrainer()
org.apache.mahout.clustering.lda.cvb.CachingCVB0Mapper.getNumTopics()
org.apache.mahout.clustering.lda.cvb.CachingCVB0Mapper.setup(Context)
org.apache.mahout.clustering.lda.cvb.CVB0DocInferenceMapper.map(IntWritable,VectorWritable,Context)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.calculatePerplexity(Configuration,Path,Path,int)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.DualDoubleSumReducer.run(Context)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.getCurrentIterationNumber(Configuration,Path,int)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.getNumTerms(Configuration,Path)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.perplexityPath(Path,int)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.rateOfChange(List<Double>,Double)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.readPerplexity(Configuration,Path,int)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.run(Configuration,Path,Path,int,int,double,double,int,int,double,Path,Path,Path,long,float,int,int,int,int,boolean)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.runIteration(Configuration,Path,Path,Path,int,int,int)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.run(String[])
org.apache.mahout.clustering.lda.cvb.CVB0Driver.setModelPaths(Job,Path)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.writeDocTopicInference(Configuration,Path,Path,Path)
org.apache.mahout.clustering.lda.cvb.CVB0Driver.writeTopicModel(Configuration,Path,Path)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.error()
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.error(int)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.initializeModel()
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.InMemoryCollapsedVariationalBayes0()
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.iterateUntilConvergence(double,int,int)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.iterateUntilConvergence(double,int,int,double)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.loadCorpus(String)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.loadDictionary(String,Configuration)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.logTime(String,long)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.main2(String[],Configuration)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.postInitCorpus()
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.trainDocuments(double)
org.apache.mahout.clustering.lda.cvb.InMemoryCollapsedVariationalBayes0.writeModel(Path)
org.apache.mahout.clustering.lda.cvb.ModelTrainer.TrainerRunnable.TrainerRunnable(TopicModel,TopicModel,Vector,Vector,Matrix,int)
org.apache.mahout.clustering.lda.cvb.ModelTrainer.train(VectorIterable,VectorIterable,int)
org.apache.mahout.clustering.lda.cvb.TestCVBModelTrainer.testInMemoryCVB0()
org.apache.mahout.clustering.lda.cvb.TestCVBModelTrainer.testRandomStructuredModelViaMR()
org.apache.mahout.clustering.lda.cvb.TopicModel.getNumTerms()
org.apache.mahout.clustering.lda.cvb.TopicModel.initializeThreadPool()
org.apache.mahout.clustering.lda.cvb.TopicModel.iterator()
org.apache.mahout.clustering.lda.cvb.TopicModel.pTopicGivenTerm(Vector,Vector,Matrix)
org.apache.mahout.clustering.lda.cvb.TopicModel.randomMatrix(int,int,Random)
org.apache.mahout.clustering.lda.cvb.TopicModel.sampleTerm(Vector)
org.apache.mahout.clustering.lda.cvb.TopicModel.TopicModel(Matrix,Vector,double,double,String[],int,double)
org.apache.mahout.clustering.lda.cvb.TopicModel.topicTermCounts()
org.apache.mahout.clustering.lda.cvb.TopicModel.toString()
org.apache.mahout.clustering.lda.cvb.TopicModel.vectorToSortedString(Vector,String[])
org.apache.mahout.clustering.lda.cvb.TopicModel.viewRowSums(Matrix)
org.apache.mahout.clustering.lda.TestMapReduce.testEndToEnd()
org.apache.mahout.clustering.lda.TestMapReduce.testEndToEnd.apply(double)
org.apache.mahout.clustering.spectral.eigencuts.EigencutsDriver.performEigenDecomposition(Configuration,DistributedRowMatrix,LanczosState,int,int,Path)
org.apache.mahout.clustering.spectral.eigencuts.EigencutsDriver.run(Configuration,Path,Path,int,int,double,double,double)
org.apache.mahout.clustering.spectral.kmeans.SpectralKMeansDriver.run(Configuration,Path,Path,int,int,DistanceMeasure,double,int)
org.apache.mahout.common.AbstractJob.getAnalyzerClassFromOption()
org.apache.mahout.common.distance.MahalanobisDistanceMeasure.configure(Configuration)
org.apache.mahout.common.MemoryUtil.main(String[])
org.apache.mahout.common.MemoryUtil.MemoryUtil()
org.apache.mahout.common.MemoryUtil.startMemoryLogger(long)
org.apache.mahout.common.MemoryUtil.startMemoryLogger.newThread(Runnable)
org.apache.mahout.common.MemoryUtil.startMemoryLogger.run()
org.apache.mahout.common.MemoryUtil.stopMemoryLogger()
org.apache.mahout.ga.watchmaker.cd.CDMutation.mutate(CDRule,Random)
org.apache.mahout.ga.watchmaker.cd.CDMutation.rndDouble(double,double,double,Random)
org.apache.mahout.ga.watchmaker.cd.CDMutation.rndInt(double,int,Random)
org.apache.mahout.ga.watchmaker.cd.CDMutation.rndInt(int,Random)
org.apache.mahout.graph.linkanalysis.PageRankJobTest.toyIntegrationTest()
org.apache.mahout.math.als.AlternatingLeastSquaresSolver.addLambdaTimesNuiTimesE(Matrix,double,int)
org.apache.mahout.math.als.AlternatingLeastSquaresSolver.createMiIi(Iterable<Vector>,Vector,int)
org.apache.mahout.math.als.AlternatingLeastSquaresSolver.createRiIiMaybeTransposed(Vector)
org.apache.mahout.math.als.AlternatingLeastSquaresSolver.solve(Iterable<Vector>,Vector,Vector,double,int)
org.apache.mahout.math.als.AlternatingLeastSquaresSolver.solve(Matrix,Matrix)
org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver.columnVectorAsMatrix(Vector)
org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver.solve(Vector)
org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver.YtransponseCuPu(Vector)
org.apache.mahout.math.decomposer.lanczos.LanczosState.intitializeBasisAndSingularVectors()
org.apache.mahout.math.decomposer.lanczos.LanczosState.intitializeBasisAndSingularVectors(int,int)
org.apache.mahout.math.decomposer.lanczos.LanczosState.LanczosState(VectorIterable,int,int,Vector)
org.apache.mahout.math.decomposer.lanczos.LanczosState.LanczosState(VectorIterable,int,Vector)
org.apache.mahout.math.decomposer.lanczos.TestLanczosSolver.testEigenvalueCheck()
org.apache.mahout.math.decomposer.lanczos.TestLanczosSolver.testLanczosSolver()
org.apache.mahout.math.decomposer.lanczos.TestLanczosSolver.testLanczosSolverSymmetric()
org.apache.mahout.math.hadoop.decomposer.DistributedLanczosSolver.runJob(Configuration,LanczosState,int,int,boolean,String)
org.apache.mahout.math.hadoop.decomposer.DistributedLanczosSolver.runJob(Configuration,Path,Path,int,int,boolean,int,String)
org.apache.mahout.math.hadoop.decomposer.DistributedLanczosSolver.run(Path,Path,Path,Path,int,int,boolean,int)
org.apache.mahout.math.hadoop.decomposer.EigenVerificationJob.runJob(Configuration,Path,Path,Path,boolean,double,double,int)
org.apache.mahout.math.hadoop.decomposer.EigenVerificationJob.runJob(Configuration,Path,Path,Path,boolean,double,int)
org.apache.mahout.math.hadoop.decomposer.HdfsBackedLanczosState.HdfsBackedLanczosState(VectorIterable,int,int,Vector,Path)
org.apache.mahout.math.hadoop.decomposer.HdfsBackedLanczosState.HdfsBackedLanczosState(VectorIterable,int,Vector,Path)
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolver.doTestDistributedLanczosSolver(boolean,int)
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolver.doTestDistributedLanczosSolver(boolean,int,boolean)
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolver.doTestResumeIteration(boolean)
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolver.getCorpus(boolean)
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolver.setup()
org.apache.mahout.math.hadoop.decomposer.TestDistributedLanczosSolver.setUp()
org.apache.mahout.math.hadoop.MathHelper.nice(Matrix)
org.apache.mahout.math.hadoop.MathHelper.nice(Vector)
org.apache.mahout.math.hadoop.solver.DistributedConjugateGradientSolver.getConf()
org.apache.mahout.math.hadoop.solver.DistributedConjugateGradientSolver.runJob(Path,Path,int,int,Vector,Preconditioner,int,double)
org.apache.mahout.math.hadoop.solver.DistributedConjugateGradientSolver.setConf(Configuration)
org.apache.mahout.math.hadoop.solver.TestDistributedConjugateGradientSolverCLI.randomVector(int,double)
org.apache.mahout.math.hadoop.stochasticsvd.qr.QRFirstStep.collect(Writable,Vector)
org.apache.mahout.math.hadoop.stochasticsvd.qr.QRFirstStep.map(Vector)
org.apache.mahout.math.hadoop.stochasticsvd.qr.QRFirstStep.map(Writable,Vector)
org.apache.mahout.math.hadoop.stochasticsvd.qr.QRFirstStep.secondPass()
org.apache.mahout.math.hadoop.stochasticsvd.SparseRowBlockWritable.SparseRowBlockWritable()
org.apache.mahout.math.hadoop.stochasticsvd.SSVDTestsHelper.generateDenseInput(Path,FileSystem,Vector,int,int,int)
org.apache.mahout.math.hadoop.stochasticsvd.YtYJob.run(Configuration,Path[],Path,int,int,long)
org.apache.mahout.math.hadoop.stochasticsvd.YtYJob.run(Configuration,Path[],Path,int,int,long,int)
org.apache.mahout.math.MatrixUtils.MatrixUtils()
org.apache.mahout.math.MatrixUtils.read(Configuration,Path)
org.apache.mahout.math.MatrixUtils.readDictionary(Configuration,Path)
org.apache.mahout.math.MatrixUtils.write(Path,Configuration,VectorIterable)
org.apache.mahout.math.MurmurHash3.murmurhash3_x86_32(byte[],int,int,int)
org.apache.mahout.math.MurmurHash3Test.testCorrectValues()
org.apache.mahout.math.solver.TestConjugateGradientSolver.getAsymmetricMatrix()
org.apache.mahout.math.solver.TestConjugateGradientSolver.getIllConditionedMatrix()
org.apache.mahout.math.solver.TestConjugateGradientSolver.getLowrankAsymmetricMatrix()
org.apache.mahout.math.solver.TestConjugateGradientSolver.reshape(double[],int,int)
org.apache.mahout.math.solver.TestConjugateGradientSolver.testConjugateGradientSolver()
org.apache.mahout.math.stats.Sampler.sample()
org.apache.mahout.math.stats.Sampler.samplerFor(double[])
org.apache.mahout.math.stats.Sampler.samplerFor(Vector)
org.apache.mahout.math.stats.Sampler.Sampler(Random)
org.apache.mahout.math.stats.SamplerTest.l1Dist(Vector,Vector)
org.apache.mahout.math.stats.SamplerTest.testDiscreteSampler()
org.apache.mahout.utils.regex.AnalyzerTransformer.AnalyzerTransformer()
org.apache.mahout.utils.regex.AnalyzerTransformer.transformMatch(String)
org.apache.mahout.utils.regex.FPGFormatter.format(String)
org.apache.mahout.utils.regex.RegexMapper.map(LongWritable,Text,Context)
org.apache.mahout.utils.regex.RegexMapperTest.testFPGFormatter()
org.apache.mahout.utils.regex.RegexMapperTest.testGroups()
org.apache.mahout.utils.regex.RegexMapperTest.testRegex()
org.apache.mahout.utils.regex.RegexUtils.extract(CharSequence,Pattern,Collection<Integer>,Integer,String,RegexTransformer)
org.apache.mahout.utils.regex.RegexUtils.extract(CharSequence,StringBuilder,Pattern,Collection<Integer>,Integer,String,RegexTransformer)
org.apache.mahout.utils.regex.RegexUtils.extract(String,Pattern,List<Integer>,Integer,String,RegexTransformer)
org.apache.mahout.utils.regex.RegexUtils.extract(String,StringBuilder,Pattern,List<Integer>,Integer,String,RegexTransformer)
org.apache.mahout.utils.regex.RegexUtils.RegexUtils()
org.apache.mahout.utils.regex.RegexUtilsTest.testExtract()
org.apache.mahout.utils.regex.URLDecodeTransformer.URLDecodeTransformer()
org.apache.mahout.utils.SequenceFileDumper.SequenceFileDumper()
org.apache.mahout.utils.vectors.arff.ARFFIterator.computeNext()
org.apache.mahout.utils.vectors.arff.Driver.writeLabelBindings(File,ARFFModel,String)
org.apache.mahout.vectorizer.collocations.llr.CollocReducer.processSubgram(GramKey,Iterator<Gram>,Gram,Context)
org.apache.mahout.vectorizer.collocations.llr.CollocReducer.processSubgram(Iterator<Gram>,Gram,Context)
org.apache.mahout.vectorizer.collocations.llr.CollocReducer.processUnigram(GramKey,Iterator<Gram>,Gram,Context)
org.apache.mahout.vectorizer.collocations.llr.CollocReducer.processUnigram(Iterator<Gram>,Gram,Context)
org.apache.mahout.vectorizer.collocations.llr.CollocReducer.reduce(GramKey,Iterable<Gram>,Gram,Context)
org.apache.mahout.vectorizer.collocations.llr.GramKeyPartitioner.setOffsets(Configuration,int)
org.apache.mahout.vectorizer.collocations.llr.GramKeyPartitioner.setOffsets(Configuration,int,int)
org.apache.mahout.vectorizer.DictionaryVectorizer.createVectors(Path,Path,VectorizerConfig)
org.apache.mahout.vectorizer.DictionaryVectorizer.DictionaryVectorizer()
org.apache.mahout.vectorizer.EncodingMapper.map(Text,Text,Context)
org.apache.mahout.vectorizer.SimpleTextEncodingVectorizer.SimpleTextEncodingVectorizer()
org.apache.mahout.vectorizer.VectorizerConfig.getAnalyzerClassName()
org.apache.mahout.vectorizer.VectorizerConfig.getCardinality()
org.apache.mahout.vectorizer.VectorizerConfig.getChunkSizeInMegabytes()
org.apache.mahout.vectorizer.VectorizerConfig.getEncoderClass()
org.apache.mahout.vectorizer.VectorizerConfig.getEncoderName()
org.apache.mahout.vectorizer.VectorizerConfig.getMaxNGramSize()
org.apache.mahout.vectorizer.VectorizerConfig.getMinLLRValue()
org.apache.mahout.vectorizer.VectorizerConfig.getMinSupport()
org.apache.mahout.vectorizer.VectorizerConfig.getNormPower()
org.apache.mahout.vectorizer.VectorizerConfig.getNumReducers()
org.apache.mahout.vectorizer.VectorizerConfig.isLogNormalize()
org.apache.mahout.vectorizer.VectorizerConfig.isNamedVectors()
org.apache.mahout.vectorizer.VectorizerConfig.isSequentialAccess()
org.apache.mahout.vectorizer.VectorizerConfig.setAnalyzerClassName(String)
org.apache.mahout.vectorizer.VectorizerConfig.setCardinality(int)
org.apache.mahout.vectorizer.VectorizerConfig.setChunkSizeInMegabytes(int)
org.apache.mahout.vectorizer.VectorizerConfig.setEncoderClass(String)
org.apache.mahout.vectorizer.VectorizerConfig.setEncoderName(String)
org.apache.mahout.vectorizer.VectorizerConfig.setLogNormalize(boolean)
org.apache.mahout.vectorizer.VectorizerConfig.setMaxNGramSize(int)
org.apache.mahout.vectorizer.VectorizerConfig.setMinLLRValue(float)
org.apache.mahout.vectorizer.VectorizerConfig.setMinSupport(int)
org.apache.mahout.vectorizer.VectorizerConfig.setNamedVectors(boolean)
org.apache.mahout.vectorizer.VectorizerConfig.setNormPower(float)
org.apache.mahout.vectorizer.VectorizerConfig.setNumReducers(int)
org.apache.mahout.vectorizer.VectorizerConfig.setSequentialAccess(boolean)
org.apache.mahout.vectorizer.VectorizerConfig.VectorizerConfig(Configuration,String,String,String,boolean,boolean,int)
