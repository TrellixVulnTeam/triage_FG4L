org.apache.mahout.cf.taste.hadoop.item.RecommenderJob.run(String[])
org.apache.mahout.cf.taste.hadoop.item.RecommenderMapper.configure(JobConf)
org.apache.mahout.cf.taste.hadoop.item.RecommenderMapper.CooccurrenceCache.CooccurrenceCache(MapFilesMap<IntWritable,Vector>,IntWritable,Vector)
org.apache.mahout.cf.taste.hadoop.item.RecommenderMapper.CooccurrenceCache.CooccurrenceCache(MapFilesMap<IntWritable,VectorWritable>,IntWritable,VectorWritable)
org.apache.mahout.cf.taste.hadoop.item.RecommenderMapper.CooccurrenceCache.get(IntWritable)
org.apache.mahout.cf.taste.hadoop.item.RecommenderMapper.map(LongWritable,SparseVector,OutputCollector<LongWritable,RecommendedItemsWritable>,LongWritable,RecommendedItemsWritable,Reporter)
org.apache.mahout.cf.taste.hadoop.item.RecommenderMapper.map(LongWritable,VectorWritable,OutputCollector<LongWritable,RecommendedItemsWritable>,LongWritable,RecommendedItemsWritable,Reporter)
org.apache.mahout.clustering.canopy.CanopyClusterer.emitPointToExistingCanopies(Vector,List<Canopy>,Canopy,OutputCollector<Text,Vector>,Text,Vector)
org.apache.mahout.clustering.canopy.CanopyClusterer.emitPointToExistingCanopies(Vector,List<Canopy>,Canopy,OutputCollector<Text,VectorWritable>,Text,VectorWritable)
org.apache.mahout.clustering.canopy.CanopyClusteringJob.main(String[])
org.apache.mahout.clustering.canopy.CanopyClusteringJob.runJob(String,String,String,double,double)
org.apache.mahout.clustering.canopy.CanopyClusteringJob.runJob(String,String,String,double,double,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.canopy.CanopyMapper.close()
org.apache.mahout.clustering.canopy.CanopyMapper.map(WritableComparable<?>,Vector,OutputCollector<Text,Vector>,Text,Vector,Reporter)
org.apache.mahout.clustering.canopy.CanopyMapper.map(WritableComparable<?>,VectorWritable,OutputCollector<Text,VectorWritable>,Text,VectorWritable,Reporter)
org.apache.mahout.clustering.canopy.Canopy.readFields(DataInput)
org.apache.mahout.clustering.canopy.CanopyReducer.reduce(Text,Iterator<Vector>,Vector,OutputCollector<Text,Canopy>,Text,Canopy,Reporter)
org.apache.mahout.clustering.canopy.CanopyReducer.reduce(Text,Iterator<VectorWritable>,VectorWritable,OutputCollector<Text,Canopy>,Text,Canopy,Reporter)
org.apache.mahout.clustering.canopy.Canopy.write(DataOutput)
org.apache.mahout.clustering.canopy.ClusterDriver.runJob(String,String,String,String,double,double)
org.apache.mahout.clustering.canopy.ClusterDriver.runJob(String,String,String,String,double,double,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.canopy.DisplayCanopy.DisplayCanopy()
org.apache.mahout.clustering.canopy.TestCanopyCreation.getPoints(double[][])
org.apache.mahout.clustering.canopy.TestCanopyCreation.populateCanopies(DistanceMeasure,List<Vector>,Vector,double,double)
org.apache.mahout.clustering.canopy.TestCanopyCreation.populateCanopies(DistanceMeasure,List<VectorWritable>,VectorWritable,double,double)
org.apache.mahout.clustering.canopy.TestCanopyCreation.TestCanopyCreation(String)
org.apache.mahout.clustering.canopy.TestCanopyCreation.testCanopyGenEuclideanMR()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testCanopyGenManhattanMR()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testCanopyMapperEuclidean()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testCanopyMapperManhattan()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testCanopyReducerEuclidean()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testCanopyReducerManhattan()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusteringEuclideanMR()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusteringManhattanMR()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusterMapperEuclidean()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusterMapperManhattan()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusterReducerEuclidean()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testClusterReducerManhattan()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testIterativeEuclidean()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testIterativeManhattan()
org.apache.mahout.clustering.canopy.TestCanopyCreation.testUserDefinedDistanceMeasure()
org.apache.mahout.clustering.ClusteringTestUtils.ClusteringTestUtils()
org.apache.mahout.clustering.ClusteringTestUtils.writePointsToFile(List<Vector>,Vector,String,FileSystem,Configuration)
org.apache.mahout.clustering.ClusteringTestUtils.writePointsToFile(List<VectorWritable>,VectorWritable,String,FileSystem,Configuration)
org.apache.mahout.clustering.dirichlet.DirichletDriver.createState(String,int,double)
org.apache.mahout.clustering.dirichlet.DirichletDriver.runIteration(String,String,String,String,int,double,int)
org.apache.mahout.clustering.dirichlet.DirichletDriver.writeInitialState(String,String,String,int,double)
org.apache.mahout.clustering.dirichlet.DirichletMapper.configure(DirichletState<Vector>,Vector)
org.apache.mahout.clustering.dirichlet.DirichletMapper.configure(DirichletState<VectorWritable>,VectorWritable)
org.apache.mahout.clustering.dirichlet.DirichletMapper.getDirichletState(JobConf)
org.apache.mahout.clustering.dirichlet.DirichletMapper.normalizedProbabilities(DirichletState<Vector>,Vector,Vector)
org.apache.mahout.clustering.dirichlet.DirichletMapper.normalizedProbabilities(DirichletState<VectorWritable>,VectorWritable,VectorWritable)
org.apache.mahout.clustering.dirichlet.DirichletReducer.getNewModels()
org.apache.mahout.clustering.dirichlet.DirichletReducer.reduce(Text,Iterator<Vector>,Vector,OutputCollector<Text,DirichletCluster<Vector>>,Text,DirichletCluster<Vector>,Vector,Reporter)
org.apache.mahout.clustering.dirichlet.DirichletReducer.reduce(Text,Iterator<VectorWritable>,VectorWritable,OutputCollector<Text,DirichletCluster<VectorWritable>>,Text,DirichletCluster<VectorWritable>,VectorWritable,Reporter)
org.apache.mahout.clustering.dirichlet.Display2dASNDirichlet.Display2dASNDirichlet()
org.apache.mahout.clustering.dirichlet.Display2dASNDirichlet.paint(Graphics)
org.apache.mahout.clustering.dirichlet.DisplayASNDirichlet.DisplayASNDirichlet()
org.apache.mahout.clustering.dirichlet.DisplayASNOutputState.DisplayASNOutputState()
org.apache.mahout.clustering.dirichlet.DisplayASNOutputState.getResults()
org.apache.mahout.clustering.dirichlet.DisplayASNOutputState.getSamples()
org.apache.mahout.clustering.dirichlet.DisplayASNOutputState.readFile(String)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.generate2dSamples(int,double,double,double,double)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.generateResults(ModelDistribution<Vector>,Vector)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.generateResults(ModelDistribution<VectorWritable>,VectorWritable)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.isSignificant(Model<Vector>,Vector)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.isSignificant(Model<VectorWritable>,VectorWritable)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.plotEllipse(Graphics2D,Vector,Vector)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.plotSampleData(Graphics)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.printModels(List<Model<Vector>[]>,Model<Vector>[],Vector,int)
org.apache.mahout.clustering.dirichlet.DisplayDirichlet.printModels(List<Model<VectorWritable>[]>,Model<VectorWritable>[],VectorWritable,int)
org.apache.mahout.clustering.dirichlet.DisplayNDirichlet.DisplayNDirichlet()
org.apache.mahout.clustering.dirichlet.DisplayOutputState.DisplayOutputState()
org.apache.mahout.clustering.dirichlet.DisplaySNDirichlet.DisplaySNDirichlet()
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalDistribution.sampleFromPosterior(Model<Vector>[],Vector)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalDistribution.sampleFromPosterior(Model<VectorWritable>[],VectorWritable)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalDistribution.sampleFromPrior(int)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalModel.observe(Vector)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalModel.observe(VectorWritable)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalModel.pdf(Vector)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalModel.pdf(Vector,double)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalModel.pdf(VectorWritable)
org.apache.mahout.clustering.dirichlet.models.AsymmetricSampledNormalModel.sample()
org.apache.mahout.clustering.dirichlet.models.NormalModel.computeParameters()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.generateSamples(int,double,double,double)
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.printResults(List<Model<Vector>[]>,Model<Vector>[],Vector,int)
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.printResults(List<Model<VectorWritable>[]>,Model<VectorWritable>[],VectorWritable,int)
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.setUp()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster100()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster1000()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster10000()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster10000as()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster10000s()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster1000as()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster1000s()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster100as()
org.apache.mahout.clustering.dirichlet.TestDirichletClustering.testDirichletCluster100s()
org.apache.mahout.clustering.dirichlet.TestMapReduce.addSample(double[])
org.apache.mahout.clustering.dirichlet.TestMapReduce.generate4Datasets()
org.apache.mahout.clustering.dirichlet.TestMapReduce.printModels(Iterable<Model<Vector>[]>,Model<Vector>[],Vector,int)
org.apache.mahout.clustering.dirichlet.TestMapReduce.printModels(Iterable<Model<VectorWritable>[]>,Model<VectorWritable>[],VectorWritable,int)
org.apache.mahout.clustering.dirichlet.TestMapReduce.printResults(List<List<DirichletCluster<Vector>>>,List<DirichletCluster<Vector>>,DirichletCluster<Vector>,Vector,int)
org.apache.mahout.clustering.dirichlet.TestMapReduce.printResults(List<List<DirichletCluster<VectorWritable>>>,List<DirichletCluster<VectorWritable>>,DirichletCluster<VectorWritable>,VectorWritable,int)
org.apache.mahout.clustering.dirichlet.TestMapReduce.testAsymmetricSampledNormalDistributionSerialization()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testDriverMnRIterations()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testDriverMnRnIterations()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testDriverMnRnIterationsAsymmetric()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testDriverMRIterations()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testMapper()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testModelHolderSerialization()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testModelHolderSerialization2()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testMRIterations()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testReducer()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testSampledNormalDistributionSerialization()
org.apache.mahout.clustering.dirichlet.TestMapReduce.testStateSerialization()
org.apache.mahout.clustering.fuzzykmeans.DisplayFuzzyKMeans.DisplayFuzzyKMeans()
org.apache.mahout.clustering.fuzzykmeans.DisplayFuzzyKMeans.referenceFuzzyKMeans(List<Vector>,Vector,DistanceMeasure,double,double,int)
org.apache.mahout.clustering.fuzzykmeans.DisplayFuzzyKMeans.referenceFuzzyKMeans(List<VectorWritable>,VectorWritable,DistanceMeasure,double,double,int)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterMapper.map(WritableComparable<?>,Vector,OutputCollector<Text,FuzzyKMeansOutput>,Text,FuzzyKMeansOutput,Reporter)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterMapper.map(WritableComparable<?>,VectorWritable,OutputCollector<Text,FuzzyKMeansOutput>,Text,FuzzyKMeansOutput,Reporter)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansDriver.runClustering(String,String,String,String,double,int,float)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansDriver.runClustering(String,String,String,String,double,int,float,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansDriver.runJob(String,String,String,String,double,int,int,int,float)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansDriver.runJob(String,String,String,String,double,int,int,int,float,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansJob.runJob(String,String,String,String,double,int,int,int,boolean,float)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansJob.runJob(String,String,String,String,double,int,int,int,boolean,float,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansMapper.map(WritableComparable<?>,Vector,OutputCollector<Text,FuzzyKMeansInfo>,Text,FuzzyKMeansInfo,Reporter)
org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansMapper.map(WritableComparable<?>,VectorWritable,OutputCollector<Text,FuzzyKMeansInfo>,Text,FuzzyKMeansInfo,Reporter)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.computeCluster(List<Vector>,Vector,List<SoftCluster>,SoftCluster,FuzzyKMeansClusterer,Map<String,String>,String,String)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.computeCluster(List<VectorWritable>,VectorWritable,List<SoftCluster>,SoftCluster,FuzzyKMeansClusterer,Map<String,String>,String,String)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.iterateReference(List<Vector>,Vector,List<SoftCluster>,SoftCluster,FuzzyKMeansClusterer)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.iterateReference(List<VectorWritable>,VectorWritable,List<SoftCluster>,SoftCluster,FuzzyKMeansClusterer)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.referenceFuzzyKMeans(List<Vector>,Vector,List<SoftCluster>,SoftCluster,Map<String,String>,String,String,String,double,double,int)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.referenceFuzzyKMeans(List<VectorWritable>,VectorWritable,List<SoftCluster>,SoftCluster,Map<String,String>,String,String,String,double,double,int)
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.testFuzzyKMeansClusterMapper()
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.testFuzzyKMeansCombiner()
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.testFuzzyKMeansMapper()
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.testFuzzyKMeansMRJob()
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.testFuzzyKMeansReducer()
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.testReferenceImplementation()
org.apache.mahout.clustering.fuzzykmeans.TestFuzzyKmeansClustering.tweakValue(Vector)
org.apache.mahout.clustering.kmeans.DisplayKMeans.DisplayKMeans()
org.apache.mahout.clustering.kmeans.DisplayKMeans.iterateReference(List<Vector>,Vector,List<Cluster>,Cluster,DistanceMeasure)
org.apache.mahout.clustering.kmeans.DisplayKMeans.iterateReference(List<VectorWritable>,VectorWritable,List<Cluster>,Cluster,DistanceMeasure)
org.apache.mahout.clustering.kmeans.DisplayKMeans.referenceKmeans(List<Vector>,Vector,List<List<Cluster>>,List<Cluster>,Cluster,DistanceMeasure,int)
org.apache.mahout.clustering.kmeans.DisplayKMeans.referenceKmeans(List<VectorWritable>,VectorWritable,List<List<Cluster>>,List<Cluster>,Cluster,DistanceMeasure,int)
org.apache.mahout.clustering.kmeans.KMeansClusterMapper.map(WritableComparable<?>,Vector,OutputCollector<Text,Text>,Text,Text,Reporter)
org.apache.mahout.clustering.kmeans.KMeansClusterMapper.map(WritableComparable<?>,VectorWritable,OutputCollector<Text,Text>,Text,Text,Reporter)
org.apache.mahout.clustering.kmeans.KMeansDriver.runClustering(String,String,String,String,String)
org.apache.mahout.clustering.kmeans.KMeansDriver.runClustering(String,String,String,String,String,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.kmeans.KMeansDriver.runJob(String,String,String,String,double,int,int)
org.apache.mahout.clustering.kmeans.KMeansDriver.runJob(String,String,String,String,double,int,int,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.kmeans.KMeansMapper.map(WritableComparable<?>,Vector,OutputCollector<Text,KMeansInfo>,Text,KMeansInfo,Reporter)
org.apache.mahout.clustering.kmeans.KMeansMapper.map(WritableComparable<?>,VectorWritable,OutputCollector<Text,KMeansInfo>,Text,KMeansInfo,Reporter)
org.apache.mahout.clustering.kmeans.RandomSeedGenerator.buildRandom(String,String,int)
org.apache.mahout.clustering.kmeans.TestKmeansClustering.iterateReference(List<Vector>,Vector,List<Cluster>,Cluster,DistanceMeasure,double)
org.apache.mahout.clustering.kmeans.TestKmeansClustering.iterateReference(List<VectorWritable>,VectorWritable,List<Cluster>,Cluster,DistanceMeasure,double)
org.apache.mahout.clustering.kmeans.TestKmeansClustering.referenceKmeans(List<Vector>,Vector,List<Cluster>,Cluster,DistanceMeasure,int,double)
org.apache.mahout.clustering.kmeans.TestKmeansClustering.referenceKmeans(List<VectorWritable>,VectorWritable,List<Cluster>,Cluster,DistanceMeasure,int,double)
org.apache.mahout.clustering.kmeans.TestKmeansClustering.testKMeansCombiner()
org.apache.mahout.clustering.kmeans.TestKmeansClustering.testKMeansMapper()
org.apache.mahout.clustering.kmeans.TestKmeansClustering.testKMeansMRJob()
org.apache.mahout.clustering.kmeans.TestKmeansClustering.testKMeansReducer()
org.apache.mahout.clustering.kmeans.TestKmeansClustering.textKMeansWithCanopyClusterInput()
org.apache.mahout.clustering.kmeans.TestRandomSeedGenerator.testRandomSeedGenerator()
org.apache.mahout.clustering.meanshift.DisplayMeanShift.DisplayMeanShift()
org.apache.mahout.clustering.syntheticcontrol.canopy.InputDriver.runJob(String,String)
org.apache.mahout.clustering.syntheticcontrol.canopy.InputDriver.runJob(String,String,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.syntheticcontrol.dirichlet.Job.printResults(String,String,int,int,double)
org.apache.mahout.clustering.syntheticcontrol.dirichlet.Job.runJob(String,String,String,int,int,double,int,Class<?extendsVector>,Vector)
org.apache.mahout.clustering.syntheticcontrol.kmeans.Job.runJob(String,String,String,double,double,double,int)
org.apache.mahout.clustering.syntheticcontrol.kmeans.Job.runJob(String,String,String,double,double,double,int,Class<?extendsVector>,Vector)
org.apache.mahout.math.AbstractMatrix.get(String,String)
org.apache.mahout.math.AbstractMatrix.readMatrix(DataInput)
org.apache.mahout.math.AbstractMatrix.writeMatrix(DataOutput,Matrix)
org.apache.mahout.math.AbstractMatrix.zSum()
org.apache.mahout.math.AbstractVector.cross(Vector)
org.apache.mahout.math.AbstractVector.decodeVector(WritableComparable<?>)
org.apache.mahout.math.AbstractVector.readVector(DataInput)
org.apache.mahout.math.AbstractVector.set(String,int,double)
org.apache.mahout.math.AbstractVector.writeVector(DataOutput,Vector)
org.apache.mahout.math.DenseMatrix.columnSize()
org.apache.mahout.math.DenseMatrix.DenseMatrix()
org.apache.mahout.math.DenseMatrix.getRow(int)
org.apache.mahout.math.DenseMatrix.rowSize()
org.apache.mahout.math.DenseVector.DenseVector()
org.apache.mahout.math.DenseVector.DenseVector(String,int)
org.apache.mahout.math.DenseVector.DenseVector(Vector)
org.apache.mahout.math.DenseVector.getElement(int)
org.apache.mahout.math.Matrix.asFormatString()
org.apache.mahout.math.MatrixTest.testLabelBindingSerialization()
org.apache.mahout.math.MatrixTest.testMatrixWritable()
org.apache.mahout.math.SparseVector.Element.set(double)
org.apache.mahout.math.SparseVector.getLengthSquared()
org.apache.mahout.math.SparseVector.SparseVector()
org.apache.mahout.math.TestMatrixView.testGetColumnIndexOver()
org.apache.mahout.math.TestMatrixView.testLabelBindings()
org.apache.mahout.math.VectorView.equals(Object)
org.apache.mahout.utils.vectors.io.SequenceFileVectorWriter.write(Iterable<Vector>,Vector,long)
org.apache.mahout.utils.vectors.io.VectorWriterTest.testSFVW()
org.apache.mahout.utils.vectors.SequenceFileVectorIterable.SeqFileIterator.next()
org.apache.mahout.utils.vectors.SequenceFileVectorIterableTest.testIterable()
org.apache.mahout.utils.vectors.text.DictionaryVectorizer.createDictionaryChunks(int,Path,String,int)
org.apache.mahout.utils.vectors.text.DictionaryVectorizer.createVectorFromPartialVectors(List<Path>,Path,String)
org.apache.mahout.utils.vectors.text.DictionaryVectorizer.makePartialVectors(String,Path,Path,Analyzer)
org.apache.mahout.utils.vectors.text.DictionaryVectorizerTest.generateRandomText(int)
org.apache.mahout.utils.vectors.text.DictionaryVectorizerTest.testCreateTermFrequencyVectors()
org.apache.mahout.utils.vectors.text.DictionaryVectorizerTest.testPerf()
org.apache.mahout.utils.vectors.text.PartialVectorGenerator.reduce(Text,Iterator<Text>,Text,OutputCollector<Text,SparseVector>,Text,SparseVector,Reporter)
org.apache.mahout.utils.vectors.text.PartialVectorGenerator.reduce(Text,Iterator<Text>,Text,OutputCollector<Text,VectorWritable>,Text,VectorWritable,Reporter)
org.apache.mahout.utils.vectors.text.PartialVectorMerger.reduce(Text,Iterator<SparseVector>,SparseVector,OutputCollector<Text,SparseVector>,Text,SparseVector,Reporter)
org.apache.mahout.utils.vectors.text.PartialVectorMerger.reduce(Text,Iterator<VectorWritable>,VectorWritable,OutputCollector<Text,VectorWritable>,Text,VectorWritable,Reporter)
