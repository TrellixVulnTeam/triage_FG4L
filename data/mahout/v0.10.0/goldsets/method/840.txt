org.apache.mahout.cf.taste.impl.recommender.SamplingCandidateItemsStrategy.computeMaxFrom(int,int)
org.apache.mahout.cf.taste.impl.recommender.SamplingCandidateItemsStrategy.doGetCandidateItems(long[],DataModel)
org.apache.mahout.cf.taste.impl.recommender.SamplingCandidateItemsStrategy.SamplingCandidateItemsStrategy(int,int,int,int,int)
org.apache.mahout.classifier.df.BreimanExample.runIteration(Random,Data,int,int)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.build(Random,Data)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.cloneCategoricalAttributes(Dataset,boolean[])
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.isIdentical(Data)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.randomAttributes(Random,boolean[],int)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.setComplemented(boolean)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.setIgSplit(IgSplit)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.setMinSplitNum(int)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.setM(int)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilder.setMinVarianceProportion(double)
org.apache.mahout.classifier.df.builder.DecisionTreeBuilderTest.testRandomAttributes()
org.apache.mahout.classifier.df.builder.DefaultTreeBuilder.DefaultTreeBuilder()
org.apache.mahout.classifier.df.builder.InfiniteRecursionTest.testBuild()
org.apache.mahout.classifier.df.data.Data.bagging(Random)
org.apache.mahout.classifier.df.data.Data.contains(Instance)
org.apache.mahout.classifier.df.data.DataConverter.convert(CharSequence)
org.apache.mahout.classifier.df.data.DataConverterTest.testConvert()
org.apache.mahout.classifier.df.data.Data.countLabels(int[])
org.apache.mahout.classifier.df.data.Data.extractLabels()
org.apache.mahout.classifier.df.data.Data.extractLabels(Dataset,FileSystem,Path)
org.apache.mahout.classifier.df.data.Data.identicalLabel()
org.apache.mahout.classifier.df.data.Data.indexof(Instance)
org.apache.mahout.classifier.df.data.DataLoader.generateDataset(CharSequence,boolean,FileSystem,Path)
org.apache.mahout.classifier.df.data.DataLoader.generateDataset(CharSequence,boolean,String[])
org.apache.mahout.classifier.df.data.DataLoader.parseString(Attribute[],List<String>[],String,CharSequence)
org.apache.mahout.classifier.df.data.DataLoader.parseString(Attribute[],Set<String>[],String,CharSequence,boolean)
org.apache.mahout.classifier.df.data.DataLoaderTest.checkCategorical(double[][],Collection<Integer>,Integer,Data,int,int,double,double)
org.apache.mahout.classifier.df.data.DataLoaderTest.checkLabel(double[][],Collection<Integer>,Integer,Data,int,double)
org.apache.mahout.classifier.df.data.DataLoaderTest.testGenerateDataset()
org.apache.mahout.classifier.df.data.DataLoaderTest.testGenerateDatasetFromFile()
org.apache.mahout.classifier.df.data.DataLoaderTest.testLoadDataFromFile()
org.apache.mahout.classifier.df.data.DataLoaderTest.testLoadDataWithDescriptor()
org.apache.mahout.classifier.df.data.DataLoaderTest.testLoadedData(double[][],Attribute[],Collection<Integer>,Integer,Data)
org.apache.mahout.classifier.df.data.DataLoaderTest.testLoadedDataset(double[][],Attribute[],Collection<Integer>,Integer,Data)
org.apache.mahout.classifier.df.data.Data.majorityLabel(Random)
org.apache.mahout.classifier.df.data.Data.rsplit(Random,int)
org.apache.mahout.classifier.df.data.Data.rsubset(Random,double)
org.apache.mahout.classifier.df.data.Dataset.countAttributes(Attribute[])
org.apache.mahout.classifier.df.data.Dataset.Dataset(Attribute[],List<String>[],String,int,boolean)
org.apache.mahout.classifier.df.data.Dataset.getLabelId()
org.apache.mahout.classifier.df.data.Dataset.getLabel(Instance)
org.apache.mahout.classifier.df.data.Dataset.getLabelString(double)
org.apache.mahout.classifier.df.data.Dataset.getLabelString(int)
org.apache.mahout.classifier.df.data.Dataset.labelCode(String)
org.apache.mahout.classifier.df.data.Dataset.labels()
org.apache.mahout.classifier.df.data.Dataset.nbInstances()
org.apache.mahout.classifier.df.data.Dataset.nbValues(int)
org.apache.mahout.classifier.df.data.DatasetTest.testWritable()
org.apache.mahout.classifier.df.data.Dataset.validateValues(Attribute[],List<String>[],String)
org.apache.mahout.classifier.df.data.Data.subset(Condition)
org.apache.mahout.classifier.df.data.DataTest.count(double[],double)
org.apache.mahout.classifier.df.data.DataTest.setUp()
org.apache.mahout.classifier.df.data.DataTest.testBagging()
org.apache.mahout.classifier.df.data.DataTest.testCountLabel()
org.apache.mahout.classifier.df.data.DataTest.testRsplit()
org.apache.mahout.classifier.df.data.DataTest.testSubset()
org.apache.mahout.classifier.df.data.DataTest.testValues()
org.apache.mahout.classifier.df.data.DataUtils.sum(int[])
org.apache.mahout.classifier.df.data.Data.values(int)
org.apache.mahout.classifier.df.data.DescriptorUtils.generateDescriptor(CharSequence)
org.apache.mahout.classifier.df.data.DescriptorUtils.generateDescriptor(Iterable<String>,String)
org.apache.mahout.classifier.df.DecisionForest.classify(Data,double[])
org.apache.mahout.classifier.df.DecisionForest.classify(Data,int[])
org.apache.mahout.classifier.df.DecisionForest.classify(Dataset,Random,Instance)
org.apache.mahout.classifier.df.DecisionForest.classify(Random,Instance)
org.apache.mahout.classifier.df.DecisionForest.DecisionForest()
org.apache.mahout.classifier.df.DecisionForest.DecisionForest(List<Node>,Node)
org.apache.mahout.classifier.df.DecisionForest.getTrees()
org.apache.mahout.classifier.df.DecisionForest.load(Configuration,Path)
org.apache.mahout.classifier.df.DecisionForest.meanMaxDepth()
org.apache.mahout.classifier.df.DecisionForest.meanNbNodes()
org.apache.mahout.classifier.df.DecisionForest.nbNodes()
org.apache.mahout.classifier.df.DecisionForest.read(DataInput)
org.apache.mahout.classifier.df.DecisionForest.readFields(DataInput)
org.apache.mahout.classifier.df.DFUtils.listOutputFiles(FileSystem,Path)
org.apache.mahout.classifier.df.DFUtils.readDoubleArray(DataInput)
org.apache.mahout.classifier.df.DFUtils.readIntArray(DataInput)
org.apache.mahout.classifier.df.DFUtils.readNodeArray(DataInput)
org.apache.mahout.classifier.df.DFUtils.writeArray(DataOutput,double[])
org.apache.mahout.classifier.df.DFUtils.writeArray(DataOutput,int[])
org.apache.mahout.classifier.df.DFUtils.writeArray(DataOutput,Node[])
org.apache.mahout.classifier.df.ErrorEstimate.ErrorEstimate()
org.apache.mahout.classifier.df.ErrorEstimate.errorRate(double[],double[])
org.apache.mahout.classifier.df.ErrorEstimate.errorRate(int[],int[])
org.apache.mahout.classifier.df.ErrorEstimate.nbErrors(int[],int[])
org.apache.mahout.classifier.df.ErrorEstimate.nbPredicted(int[])
org.apache.mahout.classifier.df.mapreduce.Builder.build(int)
org.apache.mahout.classifier.df.mapreduce.Builder.configureJob(Job)
org.apache.mahout.classifier.df.mapreduce.Builder.configureJob(Job,int)
org.apache.mahout.classifier.df.mapreduce.Builder.getDataPath()
org.apache.mahout.classifier.df.mapreduce.Builder.getDatasetPath()
org.apache.mahout.classifier.df.mapreduce.Builder.getOutputPath(Configuration)
org.apache.mahout.classifier.df.mapreduce.Builder.getSeed()
org.apache.mahout.classifier.df.mapreduce.BuildForest.buildForest()
org.apache.mahout.classifier.df.mapreduce.BuildForest.run(String[])
org.apache.mahout.classifier.df.mapreduce.Classifier.Classifier(Path,Path,Path,Path,Configuration)
org.apache.mahout.classifier.df.mapreduce.Classifier.Classifier(Path,Path,Path,Path,Configuration,boolean)
org.apache.mahout.classifier.df.mapreduce.Classifier.CMapper.map(LongWritable,Text,Context)
org.apache.mahout.classifier.df.mapreduce.Classifier.CMapper.setup(Context)
org.apache.mahout.classifier.df.mapreduce.Classifier.CTextInputFormat.isSplitable(JobContext,Path)
org.apache.mahout.classifier.df.mapreduce.Classifier.getAnalyzer()
org.apache.mahout.classifier.df.mapreduce.Classifier.getResults()
org.apache.mahout.classifier.df.mapreduce.Classifier.parseOutput(JobContext)
org.apache.mahout.classifier.df.mapreduce.inmem.InMemBuilder.InMemBuilder(TreeBuilder,Path,Path)
org.apache.mahout.classifier.df.mapreduce.inmem.InMemMapper.initRandom(InMemInputSplit)
org.apache.mahout.classifier.df.mapreduce.inmem.InMemMapper.map(IntWritable,Context)
org.apache.mahout.classifier.df.mapreduce.inmem.InMemMapper.map(IntWritable,NullWritable,Context)
org.apache.mahout.classifier.df.mapreduce.MapredOutput.getPredictions()
org.apache.mahout.classifier.df.mapreduce.MapredOutput.getTree()
org.apache.mahout.classifier.df.mapreduce.MapredOutput.MapredOutput(int[])
org.apache.mahout.classifier.df.mapreduce.MapredOutput.MapredOutput(Node)
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.PartialBuilder(TreeBuilder,Path,Path,Long)
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.PartialBuilder(TreeBuilder,Path,Path,Long,Configuration)
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.processOutput(JobContext,Path,TreeID[],Node[])
org.apache.mahout.classifier.df.mapreduce.partial.PartialBuilder.setStep2(Configuration,boolean)
org.apache.mahout.classifier.df.mapreduce.partial.PartialSequentialBuilder.PartialSequentialBuilder(TreeBuilder,Path,Dataset,long)
org.apache.mahout.classifier.df.mapreduce.TestForest.mapreduce()
org.apache.mahout.classifier.df.mapreduce.TestForest.sequential()
org.apache.mahout.classifier.df.mapreduce.TestForest.testDirectory(Path,DataConverter,DecisionForest,Dataset,List<double[]>,double[],Random)
org.apache.mahout.classifier.df.mapreduce.TestForest.testDirectory(Path,DataConverter,DecisionForest,Dataset,ResultAnalyzer,Random)
org.apache.mahout.classifier.df.mapreduce.TestForest.testFile(Path,Path,DataConverter,DecisionForest,Dataset,List<double[]>,double[],Random)
org.apache.mahout.classifier.df.mapreduce.TestForest.testFile(Path,Path,DataConverter,DecisionForest,Dataset,ResultAnalyzer,Random)
org.apache.mahout.classifier.df.node.CategoricalNode.CategoricalNode(int,double[],Node[])
org.apache.mahout.classifier.df.node.CategoricalNode.classify(Instance)
org.apache.mahout.classifier.df.node.Leaf.equals(Object)
org.apache.mahout.classifier.df.node.Leaf.hashCode()
org.apache.mahout.classifier.df.node.Leaf.Leaf()
org.apache.mahout.classifier.df.node.Leaf.Leaf(double)
org.apache.mahout.classifier.df.node.Leaf.Leaf(int)
org.apache.mahout.classifier.df.node.Leaf.writeNode(DataOutput)
org.apache.mahout.classifier.df.node.NodeTest.testCategoricalNode()
org.apache.mahout.classifier.df.node.NodeTest.testParseNumerical()
org.apache.mahout.classifier.df.node.NodeTest.testReadLeaf()
org.apache.mahout.classifier.df.node.NodeTest.testReadTree()
org.apache.mahout.classifier.df.node.NumericalNode.NumericalNode(int,double,Node,Node)
org.apache.mahout.classifier.df.split.DefaultIgSplit.categoricalIg(Data,int)
org.apache.mahout.classifier.df.split.DefaultIgSplit.numericalIg(Data,int,double)
org.apache.mahout.classifier.df.split.OptIgSplit.categoricalSplit(Data,int)
org.apache.mahout.classifier.df.split.OptIgSplit.computeFrequencies(Data,int,double[])
org.apache.mahout.classifier.df.split.OptIgSplit.initCounts(Data,double[])
org.apache.mahout.classifier.df.split.OptIgSplit.numericalSplit(Data,int)
org.apache.mahout.classifier.df.split.RegressionSplit.computeSplit(Data,int)
org.apache.mahout.classifier.df.split.RegressionSplit.InstanceComparator.compare(Instance,Instance)
org.apache.mahout.classifier.df.split.RegressionSplit.InstanceComparator.InstanceComparator(int)
org.apache.mahout.classifier.df.split.RegressionSplit.variance(double[],double[],double[])
org.apache.mahout.classifier.df.split.Split.getAttr()
org.apache.mahout.classifier.df.split.Split.getIg()
org.apache.mahout.classifier.df.split.Split.getSplit()
org.apache.mahout.classifier.df.split.Split.Split(int,double)
org.apache.mahout.classifier.df.tools.FrequenciesJob.Frequencies.Frequencies()
org.apache.mahout.classifier.df.tools.FrequenciesJob.Frequencies.Frequencies(long,int[])
org.apache.mahout.classifier.df.tools.FrequenciesJob.FrequenciesMapper.setup(Dataset)
org.apache.mahout.classifier.df.tools.FrequenciesJob.FrequenciesReducer.setup(int)
org.apache.mahout.classifier.df.tools.UDistrib.main(String[])
org.apache.mahout.classifier.df.tools.UDistrib.runTool(String,String,String,int)
org.apache.mahout.classifier.RegressionResultAnalyzer.addInstance(double,double)
org.apache.mahout.classifier.RegressionResultAnalyzer.Result.Result(double,double)
org.apache.mahout.classifier.RegressionResultAnalyzer.setInstances(double[][])
org.apache.mahout.classifier.RegressionResultAnalyzer.toString()
org.apache.mahout.df.data.DataConverter.convert(int,CharSequence)
org.apache.mahout.df.data.DataConverter.DataConverter(Dataset)
org.apache.mahout.df.data.DataLoader.generateDataset(String,boolean,FileSystem,Path)
org.apache.mahout.df.data.DataLoader.generateDataset(String,boolean,String[])
org.apache.mahout.df.data.DataLoader.generateDataset(String,FileSystem,Path)
org.apache.mahout.df.data.DataLoader.generateDataset(String,String[])
org.apache.mahout.df.data.DataLoader.loadData(Dataset,FileSystem,Path)
org.apache.mahout.df.data.DataLoader.loadData(Dataset,String[])
org.apache.mahout.df.data.DataLoader.parseString(int,Attribute[],List<String>[],String,CharSequence)
org.apache.mahout.df.data.Dataset.Dataset(Attribute[],List<String>[],String,int)
org.apache.mahout.df.data.Dataset.getLabel(int)
org.apache.mahout.df.data.Dataset.nblabels()
org.apache.mahout.df.data.Dataset.write(DataOutput)
org.apache.mahout.df.data.DataTest.testIdenticalFalse()
org.apache.mahout.df.data.DataTest.testIdenticalLabelFalse()
org.apache.mahout.df.data.DataTest.testIdenticalLabelTrue()
org.apache.mahout.df.data.DataTest.testIdenticalTrue()
org.apache.mahout.df.data.DataTest.testMajorityLabel()
org.apache.mahout.df.data.Instance.getId()
org.apache.mahout.df.data.Instance.getLabel()
org.apache.mahout.df.data.Instance.Instance(int,Vector)
org.apache.mahout.df.data.Instance.Instance(int,Vector,int)
org.apache.mahout.df.data.Instance.Instance(Vector)
org.apache.mahout.df.data.Utils.randomData(Random,int,boolean,int)
org.apache.mahout.df.data.Utils.randomData(Random,int,int)
org.apache.mahout.df.data.Utils.randomDoubles(Random,CharSequence,boolean,int)
org.apache.mahout.df.data.Utils.randomDoubles(Random,CharSequence,int)
org.apache.mahout.df.data.Utils.randomDoubles(Random,int,boolean,int)
org.apache.mahout.df.data.Utils.randomDoubles(Random,int,int)
org.apache.mahout.df.data.Utils.randomDoublesWithSameLabel(Random,String,boolean,int,int)
org.apache.mahout.df.data.Utils.randomDoublesWithSameLabel(Random,String,int,int)
org.apache.mahout.df.data.Utils.randomVector(Random,Attribute[])
org.apache.mahout.df.data.Utils.randomVector(Random,Attribute[],boolean)
org.apache.mahout.df.mapreduce.partial.Step1Mapper.getFirstTreeId()
org.apache.mahout.df.mapreduce.partial.Step1MapperTest.testMapper()
org.apache.mahout.df.node.MockLeaf.getString()
org.apache.mahout.df.node.MockLeaf.getType()
org.apache.mahout.df.split.DefaultIgSplitTest.testEntropy()
org.apache.mahout.df.split.OptIgSplitTest.testComputeSplit()
org.apache.mahout.df.tools.Describe.generateDataset(String,String)
org.apache.mahout.df.tools.Describe.generateDataset(String,String,boolean)
org.apache.mahout.df.tools.Describe.runTool(String,Iterable<String>,String,String)
org.apache.mahout.df.tools.Describe.runTool(String,Iterable<String>,String,String,boolean)
org.apache.mahout.df.tools.Describe.validateOutput(String)
