<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:01:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1911/PIG-1911.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1911] Infinite loop with accumulator function in nested foreach</title>
                <link>https://issues.apache.org/jira/browse/PIG-1911</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Sample script:&lt;/p&gt;

&lt;p&gt;register v_udf.jar;&lt;br/&gt;
a = load &apos;2records&apos; as (f1:chararray,f2:chararray);&lt;br/&gt;
b = group a by f1;&lt;br/&gt;
d = foreach b &lt;/p&gt;
{ sort = order a by f1; 
  generate org.udfs.MyCOUNT(sort) as something ; }
&lt;p&gt;dump d;&lt;/p&gt;

&lt;p&gt;This causes infinite loop if MyCOUNT implements Accumulator interface.&lt;/p&gt;

&lt;p&gt;The workaround is to take the function out of nested foreach into a separate foreach statement.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12501621">PIG-1911</key>
            <summary>Infinite loop with accumulator function in nested foreach</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thejas">Thejas M Nair</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Mar 2011 21:06:11 +0000</created>
                <updated>Mon, 25 Apr 2011 22:27:06 +0100</updated>
                            <resolved>Fri, 8 Apr 2011 20:13:35 +0100</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.8.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13007815" author="vivekp" created="Thu, 17 Mar 2011 05:09:37 +0000"  >&lt;p&gt;In this case pig is calling getValue() and cleanup() methods infinitely. The below is the udf source just in case;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MyCOUNT &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; EvalFunc&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt;  Accumulator&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;&amp;gt;{
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt; exec(Tuple input) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
            DataBag bag = (DataBag)input.get(0);
            Iterator it = bag.iterator();
            &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; cnt = 0;
            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (it.hasNext()){
                    Tuple t = (Tuple)it.next();
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; t.size() &amp;gt; 0 &amp;amp;&amp;amp; t.get(0) != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; )
                            cnt++;
            }
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; cnt;
    }

    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Schema outputSchema(Schema input) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.FieldSchema(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, DataType.LONG)); 
    }
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; intermediateCount = 0L;
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void accumulate(Tuple b) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
            DataBag bag = (DataBag)b.get(0);
            Iterator it = bag.iterator();
            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (it.hasNext()){
                Tuple t = (Tuple)it.next();
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; t.size() &amp;gt; 0 &amp;amp;&amp;amp; t.get(0) != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    intermediateCount += 1;
                }
            }
    }
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void cleanup() {
        intermediateCount = 0L;
    }
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt; getValue() {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; intermediateCount;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13016156" author="thejas" created="Tue, 5 Apr 2011 23:16:35 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1911&quot; title=&quot;Infinite loop with accumulator function in nested foreach&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1911&quot;&gt;&lt;del&gt;PIG-1911&lt;/del&gt;&lt;/a&gt;.08.1.patch  - patch for 0.8 branch.&lt;br/&gt;
Unit tests and test-patch passed.&lt;/p&gt;</comment>
                            <comment id="13017334" author="daijy" created="Fri, 8 Apr 2011 08:56:31 +0100"  >&lt;p&gt;+1, this is definitely a fix. Accumulator will only be used if there is an accumulator UDF in nested plan. So fix inside UDF should be fine.&lt;/p&gt;

&lt;p&gt;Just help me to understand better, I think fix PORelationToExprProject is also possible. Since accumulator only need one extra bag to in order for UDF to invoke getValue(). So after exhaust all batch, send one extra bag, then send EOP, will solve the problem as well. Is that right?&lt;/p&gt;</comment>
                            <comment id="13017485" author="thejas" created="Fri, 8 Apr 2011 16:20:06 +0100"  >&lt;blockquote&gt;&lt;p&gt;Just help me to understand better, I think fix PORelationToExprProject is also possible. Since accumulator only need one extra bag to in order for UDF to invoke getValue(). So after exhaust all batch, send one extra bag, then send EOP, will solve the problem as well. Is that right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I looked at that option first, but the problem is that POUserFunc is expected to be called with isAccumStarted() == false and result.returnStatus == STATUS_OK. In case of a relation like -&lt;br/&gt;
F = foreach IN &lt;/p&gt;
{ SBCOL = order BCOL by $1; FBCOL = filter SBCOL by 1 == 2; generate COUNT(FBCOL.$0);}
&lt;p&gt; FBCOL will have nothing to return.With the approach you mention here - The first call to the plan will be made with isAccumStarted() == true, and PORelationToExprProject will return an empty bag. Another call will be made with isAccumStarted() == false, and this time it will return STATUS_EOP. THis would mean that the udf.cleanup() will not get called. To avoid this, we would need to handle STATUS_EOP differently in POUserFunc.processInput() in accumulative mode. That seemed a little less clean than the approach I finally took.&lt;/p&gt;</comment>
                            <comment id="13017608" author="thejas" created="Fri, 8 Apr 2011 20:13:35 +0100"  >&lt;p&gt;Patch committed to trunk and 0.8 branch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12475536" name="PIG-1911.08.1.patch" size="7061" author="thejas" created="Tue, 5 Apr 2011 23:16:35 +0100"/>
                            <attachment id="12475601" name="PIG-1911.trunk.1.patch" size="6563" author="thejas" created="Wed, 6 Apr 2011 17:07:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Mar 2011 05:09:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165240</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaugf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97245</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>