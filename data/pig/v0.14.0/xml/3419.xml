<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:07:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3419/PIG-3419.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3419] Pluggable Execution Engine </title>
                <link>https://issues.apache.org/jira/browse/PIG-3419</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;In an effort to adapt Pig to work using Apache Tez (&lt;a href=&quot;https://issues.apache.org/jira/browse/TEZ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/TEZ&lt;/a&gt;), I made some changes to allow for a cleaner ExecutionEngine abstraction than existed before. The changes are not that major as Pig was already relatively abstracted out between the frontend and backend. The changes in the attached commit are essentially the barebones changes &amp;#8211; I tried to not change the structure of Pig&apos;s different components too much. I think it will be interesting to see in the future how we can refactor more areas of Pig to really honor this abstraction between the frontend and backend. &lt;/p&gt;

&lt;p&gt;Some of the changes was to reinstate an ExecutionEngine interface to tie together the front end and backend, and making the changes in Pig to delegate to the EE when necessary, and creating an MRExecutionEngine that implements this interface. Other work included changing ExecType to cycle through the ExecutionEngines on the classpath and select the appropriate one (this is done using Java ServiceLoader, exactly how MapReduce does for choosing the framework to use between local and distributed mode). Also I tried to make ScriptState, JobStats, and PigStats as abstract as possible in its current state. I think in the future some work will need to be done here to perhaps re-evaluate the usage of ScriptState and the responsibilities of the different statistics classes. I haven&apos;t touched the PPNL, but I think more abstraction is needed here, perhaps in a separate patch. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12663246">PIG-3419</key>
            <summary>Pluggable Execution Engine </summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="achalsoni81">Achal Soni</assignee>
                                    <reporter username="achalsoni81">Achal Soni</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Aug 2013 18:32:41 +0100</created>
                <updated>Mon, 7 Jul 2014 19:08:08 +0100</updated>
                            <resolved>Fri, 30 Aug 2013 21:05:28 +0100</resolved>
                                    <version>0.12.0</version>
                                    <fixVersion>0.13.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13737092" author="achalsoni81" created="Mon, 12 Aug 2013 18:34:40 +0100"  >&lt;p&gt;Here is the current patch as is, with the changes to /src and /test. Please let me know if there are any questions or other requests. I expect these changes will incite some good discussion about how to achieve a pluggable execution engine!&lt;/p&gt;

</comment>
                            <comment id="13738285" author="dvryaboy" created="Tue, 13 Aug 2013 15:27:22 +0100"  >&lt;p&gt;Hi Achal,&lt;br/&gt;
That&apos;s a large patch.&lt;br/&gt;
Can you give us a roadmap for reading it &amp;#8211; what are the changes, at a high level? It looks like you had to change a bunch of stuff that&apos;s not (at first glance) directly related to exec mode.&lt;/p&gt;

&lt;p&gt;Procedurally:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;please generate the patch using &apos;git diff -no-prefix&apos; since the apache pig master is on svn&lt;/li&gt;
	&lt;li&gt;please post the complete patch to Review Board, for ease of commenting&lt;/li&gt;
	&lt;li&gt;please make sure that all new files have the apache license headers at the top&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks&lt;br/&gt;
-D&lt;/p&gt;</comment>
                            <comment id="13738288" author="dvryaboy" created="Tue, 13 Aug 2013 15:29:19 +0100"  >&lt;p&gt;oh 3 more things &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I thought you found your way around the -y argument? I still see that in there.&lt;br/&gt;
Don&apos;t comment out blocks of code, just delete them&lt;br/&gt;
Add some documentation about creating new Exec Engines to the xml-based docs, or at least post it here. Just having it in javadocs is not sufficient.&lt;/p&gt;</comment>
                            <comment id="13738478" author="julienledem" created="Tue, 13 Aug 2013 17:46:28 +0100"  >&lt;p&gt;Hi Achal&lt;br/&gt;
for large patches, please create a review here: &lt;a href=&quot;https://reviews.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13738881" author="achalsoni81" created="Tue, 13 Aug 2013 22:49:06 +0100"  >&lt;p&gt;Sorry my bad! Was trying to get it out as soon as possible that I brushed over some stuff too fast. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvryaboy&quot; class=&quot;user-hover&quot; rel=&quot;dvryaboy&quot;&gt;Dmitriy V. Ryaboy&lt;/a&gt; I will make these changes later today and post them up. I did actually get around the -y argument, just totally forgot to go back and get rid of that. In the meantime, the Review Board is located here for the current patch: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/13541/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13541/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once I update the patch later today I will post it here with the ReviewBoards as well. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Achal&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13740044" author="achalsoni81" created="Wed, 14 Aug 2013 19:51:57 +0100"  >&lt;p&gt;I have regenerated the patches taking into account some of the suggestions. I think this should cover most of the cases, although I may have missed certain things. I wanted to post these versions of the patch as early as I could so that people can still consume most of the changes while I continue to review the different pieces. &lt;/p&gt;

&lt;p&gt;I have separated the patches into 4 main areas &amp;#8211; the major execution engine changes, the changes to the MR codebase to make it happen, the changes to further abstract ScriptState/other statistics related stuff, and the testing changes. Hopefully this will make things clearer and easier to consume. &lt;/p&gt;</comment>
                            <comment id="13740079" author="achalsoni81" created="Wed, 14 Aug 2013 20:28:21 +0100"  >&lt;p&gt;And here are the reviewboards for each one. &lt;/p&gt;

&lt;p&gt;Main ExecEngine changes: &lt;br/&gt;
&lt;a href=&quot;http://reviews.apache.org/r/13575/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://reviews.apache.org/r/13575/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MR ExecEngine changes:&lt;br/&gt;
&lt;a href=&quot;http://reviews.apache.org/r/13576/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://reviews.apache.org/r/13576/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ScriptState/Statistics changes: &lt;br/&gt;
&lt;a href=&quot;http://reviews.apache.org/r/13577/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://reviews.apache.org/r/13577/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Testing Suite changes:&lt;br/&gt;
&lt;a href=&quot;http://reviews.apache.org/r/13579/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://reviews.apache.org/r/13579/&lt;/a&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Achal&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13744218" author="cheolsoo" created="Mon, 19 Aug 2013 22:06:44 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=achalsoni81&quot; class=&quot;user-hover&quot; rel=&quot;achalsoni81&quot;&gt;Achal Soni&lt;/a&gt;, thank you very much for the great work! Although I am not a Pig old-timer, I have been playing with your patch and have a few high-level comments as follows:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;I love your ExecType interface. What I don&apos;t like is that there are two things called ExecType:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.pig.ExecType
org.apache.pig.backend.executionengine.ExecType
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since you&apos;re introducing the ServiceLoader framework, the enum seems no longer needed at all. Furthermore, eliminating it helps simplify the constructor code of PigContext and PigServer.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Currently, it is a bit hard to review your patch because there are too many changes. To get it committed faster, I suggest we should avoid unnecessary changes and minimize its scope. For example, having the PigServer constructor signature unchanged helps avoid a lot of changes in Test*.java files.&lt;/li&gt;
	&lt;li&gt;Julien already pointed out this in the RB, but your patch accidentally reverts a couple of previous commits. I took them out.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I went ahead and made these changes myself - &lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/9aee192116816ecf993d69a8c2f94abaff7f9739&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. If everyone thinks this is a step forward, I will upload it in a new patch. Please let me know.&lt;/p&gt;</comment>
                            <comment id="13745227" author="cheolsoo" created="Tue, 20 Aug 2013 19:14:59 +0100"  >&lt;p&gt;I have two more comments in ExecutionEngine and MRExecutionEngine as follows:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Can you simplify the checked exceptions in the ExecutionEngine interface? For example,&lt;br/&gt;
From:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PigStats launchPig(LogicalPlan lp, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; grpName, PigContext pc)
    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; PlanException, VisitorException, IOException, ExecException,
    JobCreationException, FrontendException, Exception;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PigStats launchPig(LogicalPlan lp, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; grpName, PigContext pc) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looks like there&apos;s no point of throwing them again in ExecutionEngine because they will be caught as Exception in PigServer anyway. If needed, we should take specific actions per exception in ExecutionEngine.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;As for the setProperty method in ExecutionEngine, do we need to pass a properties? Can we construct a properties with the given key/value pair and call recomputeProperties() internally?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setProperty(Properties properties, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; property, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; value);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Also, as for the setProperty method in MRExecutionEngine, looks like it&apos;s mostly duplicate of recomputeProperties(). Can you just reuse recomputeProperties()?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Julien said you&apos;re working on a new patch. It would be nice if you could incorporate these (of course if you agree with me). Thank you a lot!&lt;/p&gt;</comment>
                            <comment id="13745398" author="julienledem" created="Tue, 20 Aug 2013 21:49:25 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; &lt;br/&gt;
1. Do we really throw Exception ? If yes, then let&apos;s just throw that. If not then let&apos;s instead have FrontEndException, ExecException, IOException. i.e. let&apos;s remove the exceptions that are already included by the highest exception level.&lt;br/&gt;
2. agreed with you. I would expect the execution engine to handle the Properties internally and the signature of this method to be:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public void setProperty(String property, String value);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13745448" author="cheolsoo" created="Tue, 20 Aug 2013 22:22:35 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=julienledem&quot; class=&quot;user-hover&quot; rel=&quot;julienledem&quot;&gt;Julien Le Dem&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do we really throw Exception?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No, we don&apos;t throw Exception to the end user. But currently, PigServer catches them all in a single catch block and sort them out using instanceof calls (see below). Probably we should make ExecutionEngine throw FEE, EE, and IOE and replace instanceof calls with catch blocks in PigServer.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    stats = pigContext.getExecutionEngine().launchPig(lp, jobName, pigContext);
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
    &lt;span class=&quot;code-comment&quot;&gt;// There are a lot of exceptions thrown by the launcher.  If &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// is an ExecException, just let it through.  Else wrap it.
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; ExecException){
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; (ExecException)e;
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; FrontendException) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; (FrontendException)e;
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; errCode = 2043;
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Unexpected error during execution.&quot;&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ExecException(msg, errCode, PigException.BUG, e);
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13746842" author="achalsoni81" created="Wed, 21 Aug 2013 22:06:46 +0100"  >&lt;p&gt;I have taken all the suggestions into account and regenerated a new patch that is hopefully cleaner, smaller, and reflects most of the suggestions. The patch is attached and the review board is the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/13714/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13714/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13746843" author="achalsoni81" created="Wed, 21 Aug 2013 22:07:45 +0100"  >&lt;p&gt;Let me know if there are any pressing changes to this patch!&lt;/p&gt;</comment>
                            <comment id="13746999" author="julienledem" created="Thu, 22 Aug 2013 00:18:20 +0100"  >&lt;p&gt;I have submitted my review. This looks great &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=achalsoni81&quot; class=&quot;user-hover&quot; rel=&quot;achalsoni81&quot;&gt;Achal Soni&lt;/a&gt;!&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; does it look good to you?&lt;br/&gt;
Once Achal has updated his patch I&apos;m willing to commit.&lt;/p&gt;</comment>
                            <comment id="13747021" author="cheolsoo" created="Thu, 22 Aug 2013 00:34:18 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=julienledem&quot; class=&quot;user-hover&quot; rel=&quot;julienledem&quot;&gt;Julien Le Dem&lt;/a&gt;, I haven&apos;t looked at it yet, but I will review it tonight. I will also run full unit tests.&lt;/p&gt;

&lt;p&gt;Btw, I was meeting Mark, Olga, Rohini, and Daniel at LinkedIn this morning. We decided to create a tez branch. Rohini suggested that this patch should go into that branch instead of trunk. Can we agree where we should commit this patch first? Personally, I think this can go into trunk directly since it&apos;s quite general. But there were some concerns.&lt;/p&gt;</comment>
                            <comment id="13747064" author="julienledem" created="Thu, 22 Aug 2013 01:04:06 +0100"  >&lt;p&gt;The point is to be able to implement alternate execution engines without having to fork Pig.&lt;br/&gt;
I think it should go in trunk.&lt;/p&gt;</comment>
                            <comment id="13747065" author="dvryaboy" created="Thu, 22 Aug 2013 01:04:14 +0100"  >&lt;p&gt;I&apos;d like this patch in trunk since it&apos;s not Tez-specific, and allows people to experiment with other runtimes (for example, Spark or Drill).&lt;/p&gt;</comment>
                            <comment id="13747131" author="mwagner" created="Thu, 22 Aug 2013 02:22:25 +0100"  >&lt;p&gt;I&apos;d also be in favor putting this in trunk as opposed to a Tez branch. Although the motivation for this is Tez, I think we would want this patch in Pig even if there wasn&apos;t Tez support.&lt;/p&gt;

&lt;p&gt;A couple short comments for Achal: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;It looks like the build targets that include the META-INF are only executed when building against hadoopversion=23. The META-INF also don&apos;t seem to be included in the pig.jar and pig-withouthadoop.jar that go in the root directory. I tried copying in the correct jars, but it seems like something is still off.&lt;/li&gt;
	&lt;li&gt;The changes to the try/catch blocks in MapReduceLauncher break on 23, because HadoopShims for 23 doesn&apos;t throw an exception where 20 does. Maybe that should be fixed in HadoopShims though.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13747563" author="cheolsoo" created="Thu, 22 Aug 2013 15:45:17 +0100"  >&lt;p&gt;I see 295 failures with &quot;ant clean test&quot;. The number looks scary, but all the failures seem to boil down to two reasons:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;As Mark already mentioned, META-INF is not executed. So many test cases fail with the following error:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
error msg: Unknown exec type: local
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;The removal of PigServer.compilePp() makes many test cases fail with the following error:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.NoSuchMethodException: org.apache.pig.PigServer.compilePp()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;As for indentation, can you please use 4-spaces instead of tabs? Tabs make indentation look funny at several places. A couple of awk/sed commands should do the job. &lt;/p&gt;

&lt;p&gt;Otherwise, looks great to me too. Thank you Achal for the wonderful work!&lt;/p&gt;</comment>
                            <comment id="13747564" author="cheolsoo" created="Thu, 22 Aug 2013 15:46:19 +0100"  >&lt;p&gt;Attached test_failures.txt.&lt;/p&gt;</comment>
                            <comment id="13747966" author="achalsoni81" created="Thu, 22 Aug 2013 23:12:49 +0100"  >&lt;p&gt;Hi all, &lt;/p&gt;

&lt;p&gt;I&apos;ve reuploaded the patch with all of the changes that Julien suggested as well as accounting for the comments from Mark. The test cases should be ok now (hopefully!) as we changed build.xml to package the META-INF folder and I changed the compilePp() issue. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; Can you give this a look when you have time, and run the test suite? I think everything should be fine now. Also if you can tell me what exactly I should be doing for indentation/in what files that&apos;d be great. I seem to have some problems with the whitespace/indentation aspect so some pointers here would be awesome. &lt;/p&gt;

&lt;p&gt;Let me know if anything else seems wrong. &lt;/p&gt;

&lt;p&gt;Achal&lt;/p&gt;</comment>
                            <comment id="13747968" author="achalsoni81" created="Thu, 22 Aug 2013 23:13:43 +0100"  >&lt;p&gt;Here is the ReviewBoard for the new patch : &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/13752&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13752&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13748137" author="cheolsoo" created="Fri, 23 Aug 2013 01:36:12 +0100"  >&lt;p&gt;I will kick off the unit tests with the new patch now. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if you can tell me what exactly I should be doing for indentation/in what files that&apos;d be great.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is not a big deal. Basically, you can run the following command to replace tab chars in your patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
sed -i .orig &apos;/^+/,/$/ s/&amp;lt;tab&amp;gt;/&amp;lt;4 whitespaces&amp;gt;/g&apos; updated-8-22-2013-exec-engine.patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then, the modified patch can be applied with &quot;-l&quot; option (&amp;#45;&amp;#45;ignore-whitespace): &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
patch -l &amp;lt; updated-8-22-2013-exec-engine.patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13748183" author="julienledem" created="Fri, 23 Aug 2013 02:27:16 +0100"  >&lt;p&gt;+1 LGTM&lt;br/&gt;
If test-commit passes I think we can commit to TRUNK&lt;/p&gt;</comment>
                            <comment id="13748657" author="cheolsoo" created="Fri, 23 Aug 2013 17:02:48 +0100"  >&lt;p&gt;All, so here is the list of failing tests:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.pig.test.TestGrunt.testScriptMissingLastNewLine
org.apache.pig.test.TestGrunt.testCheckScriptSyntaxWithSemiColonUDFErr
org.apache.pig.test.TestGrunt.testExplainDot
org.apache.pig.test.TestGrunt.testExplainOut
org.apache.pig.test.TestGrunt.testExplainBrief
org.apache.pig.test.TestGrunt.testExplainEmpty
org.apache.pig.test.TestGrunt.testExplainScript
org.apache.pig.test.TestInputOutputMiniClusterFileValidator.testValidationNeg
org.apache.pig.test.TestJobStats.testOneTaskReport
org.apache.pig.test.TestJobStats.testGetOuputSizeUsingNonFileBasedStorage1
org.apache.pig.test.TestJobStats.testGetOuputSizeUsingNonFileBasedStorage2
org.apache.pig.test.TestJobStats.testGetOuputSizeUsingNonFileBasedStorage3
org.apache.pig.test.TestJobStats.testGetOuputSizeUsingNonFileBasedStorage4
org.apache.pig.test.TestJobStats.testMedianMapReduceTime
org.apache.pig.test.TestJobStats.testGetOuputSizeUsingFileBasedStorage
org.apache.pig.test.TestMRExecutionEngine.testJobConfGeneration
org.apache.pig.test.TestMRExecutionEngine.testJobConfGenerationWithUserConfigs
org.apache.pig.test.TestMacroExpansion.test20
org.apache.pig.test.TestMacroExpansion.test21
org.apache.pig.test.TestMacroExpansion.test22
org.apache.pig.test.TestMacroExpansion.test23
org.apache.pig.test.TestMacroExpansion.test32
org.apache.pig.test.TestMacroExpansion.test33
org.apache.pig.test.TestMacroExpansion.test34
org.apache.pig.test.TestMacroExpansion.test35
org.apache.pig.test.TestMacroExpansion.testCommentInMacro
org.apache.pig.test.TestMacroExpansion.testNegativeNumber
org.apache.pig.test.TestMacroExpansion.typecastTest
org.apache.pig.test.TestMacroExpansion.testFilter
org.apache.pig.test.TestMapSideCogroup.testFailure2
org.apache.pig.test.TestMergeJoinOuter.testFailure
org.apache.pig.test.TestPigRunner.testEmptyFile
org.apache.pig.test.TestScriptLanguage.testSysArguments
org.apache.pig.test.TestShortcuts.testExplainShortcutNoAlias
org.apache.pig.test.TestShortcuts.testExplainShortcutNoAliasDefined
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I prefer fixing them beforehand to fixing them afterward. Although none of these failures is serious (I believe), can we have a couple of more days before committing Achal&apos;s patch? I will make sure it gets committed into trunk because I definitely need it for a Tez branch.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13748873" author="achalsoni81" created="Fri, 23 Aug 2013 20:02:28 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; Thanks a lot for running the test suite! It&apos;s good to see where the patch is failing. I definitely agree that all of these need to be investigated before the patch gets anywhere.&lt;/p&gt;

&lt;p&gt;I have some ideas about a few of the test cases, looks to be some minor stuff with JobStats and the way Explain works now which I have to look into. The rest I can&apos;t really think of off hte top of my head but I&apos;ll give it a shot. &lt;/p&gt;

&lt;p&gt;I&apos;ll report back with some more findings as soon as possible.&lt;/p&gt;</comment>
                            <comment id="13748907" author="rohini" created="Fri, 23 Aug 2013 20:32:09 +0100"  >&lt;p&gt;In the Pig-on-Tez meeting in Linkedin we decided to do Tez work on a branch and that Cheolsoo will initiate conversation thread on mailing list for it and take up the task of creating the branch. Tez is relatively new and unstable so it will be wise to not start with code directly on trunk. Hive is also doing their Tez work on a branch. &lt;/p&gt;

&lt;p&gt;  Cheolsoo had a question as to whether we should commit this to trunk and branch after that. I would prefer &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3419&quot; title=&quot;Pluggable Execution Engine &quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3419&quot;&gt;&lt;del&gt;PIG-3419&lt;/del&gt;&lt;/a&gt; to be also put in the branch and not checked into trunk. It makes lot of changes to the Exceptions thrown, removes public methods etc and that might cause backward incompatibility during runtime with code compiled with previous versions of pig. All that needs to be figured out and fixed. So might not be a good idea to get this patch directly into trunk. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13749014" author="dvryaboy" created="Fri, 23 Aug 2013 22:33:36 +0100"  >&lt;p&gt;Rohini, I want to reiterate that this patch has NO tez dependencies (if it does, that&apos;s a bug). The intention is not to make Tez possible. It&apos;s to make pluggable execution engines possible; and I do not want that functionality to be tied to a tez branch that will be unstable and in heavy development for the foreseeable future. This work will be immediately useful for the Spork (pig on spark) branch, for example.&lt;/p&gt;

&lt;p&gt;Also, it allows people to work with new runtimes &lt;b&gt;without modifying Pig&lt;/b&gt;. So Tez-on-Pig doesn&apos;t even have to be done as a branch of this project, someone can go an experiment completely independently.&lt;/p&gt;

&lt;p&gt;For these reasons, I would like it in trunk.&lt;/p&gt;

&lt;p&gt;You make a great point about the danger of changing exceptions, public methods, etc. I believe that most of these are project-public, and annotated as such. Do you have specific methods you are concerned about? Ideally we would change as little as possible for the end user.&lt;/p&gt;

&lt;p&gt;Dmitriy&lt;/p&gt;</comment>
                            <comment id="13749106" author="olgan" created="Fri, 23 Aug 2013 23:47:35 +0100"  >&lt;p&gt;I think the reason we wanted it on the Tez branch is that it might evolve with Tez implementation and so we would merge the updated code back when Tez is ready. Since there are no plans for any additional backend, is there a need to apply this to trunk sooner rather than later?&lt;/p&gt;</comment>
                            <comment id="13749190" author="dvryaboy" created="Sat, 24 Aug 2013 01:13:07 +0100"  >&lt;p&gt;Olga, first commit to the spork branch is from &lt;b&gt;2012&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dvryaboy/pig&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/dvryaboy/pig&lt;/a&gt;  (the default branch on my github is &quot;spork&quot;).&lt;/p&gt;
</comment>
                            <comment id="13749226" author="julienledem" created="Sat, 24 Aug 2013 02:35:44 +0100"  >&lt;p&gt;The advantage of having the Execution engine abstraction in trunk is it allows running experimental Pig execution engines implementations like Tez or Spark on an official release of Pig without having to build from a specific branch.&lt;br/&gt;
The execution engine implementations themselves are fairly independent of Pig and do not need to  be maintained in a Pig branch.&lt;br/&gt;
If the ExecutionEngine abstraction evolves over time that can be done in Trunk and can be merged independently of the Tez implementation itself.&lt;/p&gt;</comment>
                            <comment id="13749267" author="cheolsoo" created="Sat, 24 Aug 2013 03:39:59 +0100"  >&lt;p&gt;I am uploading a new patch that includes the following changes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Fixes most test cases (issues with JobStats and Explain).&lt;/li&gt;
	&lt;li&gt;Removes &quot;src/META-INF/services/org.apache.pig.backend.executionengine.ExecType&quot; because it&apos;s duplicate. (Probably it was added by mistake.)&lt;/li&gt;
	&lt;li&gt;Renames TestJobStats.java to TestMRJobStats.java since it tests MRJobStats.&lt;/li&gt;
	&lt;li&gt;Fixes a bunch of Java warnings.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The diff from Achal&apos;s last patch can be viewed &lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/2a0b8bd00ae8685cd13d9b5ea08cb4672c71f450&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I just kicked off the unit tests again and will let you know how it goes. Thanks!&lt;/p&gt;</comment>
                            <comment id="13750352" author="olgan" created="Mon, 26 Aug 2013 19:16:11 +0100"  >&lt;p&gt;I don&apos;t have a very strong opinion on this so whatever you guys decide is fine with me.&lt;/p&gt;

&lt;p&gt;I think if it does evolve as part of Tez, at least some changes are likely to sneak into Tez branch without going to trunk so they might diverge for a while but if we are ok to take that chance, that&apos;s fine&lt;/p&gt;</comment>
                            <comment id="13751363" author="cheolsoo" created="Tue, 27 Aug 2013 16:39:06 +0100"  >&lt;p&gt;Uploading a new patch, and the diff from the previous patch can be viewed &lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/d4cc3390040797515099e501f5cf149afcfdc278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now failing test cases are as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.pig.test.TestGrunt.testScriptMissingLastNewLine
org.apache.pig.test.TestMapSideCogroup.testFailure2
org.apache.pig.test.TestMergeJoinOuter.testFailure
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13751787" author="cheolsoo" created="Tue, 27 Aug 2013 23:12:51 +0100"  >&lt;p&gt;I think I fixed all the unit tests. I am uploading a new patch. The diff from the previous one can be viewed &lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/5fadd4aa535dddedc048d1bc13d0b30506cabaf2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13751788" author="cheolsoo" created="Tue, 27 Aug 2013 23:14:31 +0100"  >&lt;p&gt;Kicked off full unit tests now.&lt;/p&gt;</comment>
                            <comment id="13752218" author="cheolsoo" created="Wed, 28 Aug 2013 10:02:18 +0100"  >&lt;p&gt;There was one more fix that I had to make. TestMRExecutionEngine and TestMRJobStats failed when running them in jenkins. The reason was TestMRCompiler didn&apos;t clean up its mini cluster files, so I added a tearDown method to TestMRCompiler &lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/6698ba5252fc792b55c1e268126d1eacb4391c8c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13752785" author="cheolsoo" created="Wed, 28 Aug 2013 20:55:56 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rohini&quot; class=&quot;user-hover&quot; rel=&quot;rohini&quot;&gt;Rohini Palaniswamy&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It makes lot of changes to the Exceptions thrown, removes public methods etc and that might cause backward incompatibility during runtime with code compiled with previous versions of pig.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am listing all the backward incompatible changes made to public API. Hopefully, this helps us estimate the impact.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;PigServer constructor
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PigServer(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; execTypeString) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ExecException, IOException {
-        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;(ExecType.fromString(execTypeString));
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PigServer(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; execTypeString) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; PigException {
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;(addExecTypeProperty(PropertiesUtil.loadDefaultProperties(), execTypeString));
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can revert PigException back to EE and IOE for this constructor (and other new constructors). Not hard to fix.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;PigServer.explain()
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void explain(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; alias,
                         &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; format,
                         &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; verbose,
                         &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; markAsExecute,
                         PrintStream lps,
-                        PrintStream pps,
-                        PrintStream eps) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+                        PrintStream eps,
+                        File dir,
+                        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; suffix) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;The method signature changed. Although it&apos;s possible that someone uses this method in their applications, there is another method that wraps this one (i.e. &lt;tt&gt;public void explain(String alias, PrintStream stream)&lt;/tt&gt;), and that one is more likely to be used.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Name changes of several public classes:
	&lt;ul&gt;
		&lt;li&gt;JobStats to MRJobStats&lt;/li&gt;
		&lt;li&gt;PigStatsUtil to MRPigStatsUtil&lt;/li&gt;
		&lt;li&gt;ScriptState to MRPScriptState&lt;/li&gt;
		&lt;li&gt;HExecutionEngine to MRExecutionEngine&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;PigContext.getExecutionEngine()
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HExecutionEngine getExecutionEngine() {
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ExecutionEngine getExecutionEngine() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Result of the class name change. &lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;SimplePigStats class is moved from &lt;tt&gt;org.apache.pig.tools.pigstats&lt;/tt&gt; to &lt;tt&gt;org.apache.pig.tools.pigstats.mapreduce&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Launcher class is moved from &lt;tt&gt;org.apache.pig.backend.hadoop.executionengine.mapReduceLayer&lt;/tt&gt; to &lt;tt&gt;org.apache.pig.backend.hadoop.executionengine&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;JobControlCompiler constructor
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; JobControlCompiler(PigContext pigContext, Configuration conf) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; JobControlCompiler(PigContext pigContext, Configuration conf) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The IOE was redundant in the first place. So we should remove it.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Here is my estimation:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Major - But we can fix it.&lt;/li&gt;
	&lt;li&gt;Minor - Unlikely used in user code.&lt;/li&gt;
	&lt;li&gt;Minor - Unlikely used in user code.&lt;/li&gt;
	&lt;li&gt;Minor - Unlikely used in user code.&lt;/li&gt;
	&lt;li&gt;Minor - Unlikely used in user code.&lt;/li&gt;
	&lt;li&gt;Minor - Unlikely used in user code.&lt;/li&gt;
	&lt;li&gt;Minor - Unlikely used in user code.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;As long as we fix #1, I think we can go ahead commit the patch to trunk. What do you think? &lt;/p&gt;</comment>
                            <comment id="13753241" author="cheolsoo" created="Thu, 29 Aug 2013 04:03:27 +0100"  >&lt;p&gt;All unit tests pass.&lt;/p&gt;</comment>
                            <comment id="13753843" author="bikassaha" created="Thu, 29 Aug 2013 18:32:46 +0100"  >&lt;p&gt;Folks, FYI, based on recent feedback we have changed the names used in some of the TEZ API&apos;s. It a simple refactoring on the Tez side and should be a simple refactoring fix on the Pig side too. Jira for reference. &lt;a href=&quot;https://issues.apache.org/jira/browse/TEZ-410&quot; title=&quot;Refactor EdgeProperties to be more clear&quot; class=&quot;issue-link&quot; data-issue-key=&quot;TEZ-410&quot;&gt;&lt;del&gt;TEZ-410&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13753863" author="dvryaboy" created="Thu, 29 Aug 2013 18:48:18 +0100"  >&lt;p&gt;Cheolsoo thanks so much for helping with this work!&lt;/p&gt;

&lt;p&gt;I think #1 and #3 are the issues (#3 will affect Ambrose and probably Lipstick). &lt;/p&gt;

&lt;p&gt;We can take care of updating Ambrose if we need to. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=julienledem&quot; class=&quot;user-hover&quot; rel=&quot;julienledem&quot;&gt;Julien Le Dem&lt;/a&gt; do you think this is an important enough semantic change to force advanced clients such as Ambrose to rewrite / recompile? Or should we roll that part back?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bikassaha&quot; class=&quot;user-hover&quot; rel=&quot;bikassaha&quot;&gt;Bikas Saha&lt;/a&gt; thanks for the heads up, we&apos;ll need to update the pig-on-tez branch. Fortunately it doesn&apos;t affect this patch, since it&apos;s framework-independent and has no TEZ references.&lt;/p&gt;</comment>
                            <comment id="13753869" author="bikassaha" created="Thu, 29 Aug 2013 18:53:18 +0100"  >&lt;p&gt;Looks like this jira wasnt the appropriate one to comment on. Is there a different umbrella jira for Pig on Tez that I can track and post comments on?&lt;/p&gt;</comment>
                            <comment id="13753878" author="achalsoni81" created="Thu, 29 Aug 2013 18:58:42 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bikassaha&quot; class=&quot;user-hover&quot; rel=&quot;bikassaha&quot;&gt;Bikas Saha&lt;/a&gt; Thanks for the heads-up Bikas! This JIRA is not concerned with the Tez integration for Pig and is simply the abstraction in Pig to allow for alternate ExecutionEngines in Pig. But will certainly change this on the Tez integration side of stuff.&lt;/p&gt;

&lt;p&gt;Thanks a lot &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; for continuing this! I think everything looks good from my end. I can certainly see why we may want to keep this on a different branch until everything is finalized. Certain things may still need more work. For example, OutputStats is not completed abstracted out, as it still has references to POStore which is a MR implementation construct. ScriptState/PPNL/JobStats may still need more abstraction (especially PPNL) and reworking to incorporate a new ExecutionEngine abstraction. I think what we have done here is the minimum foundation for an abstraction though, and it would be appropriate to put into trunk, but these are not my decisions to make. &lt;/p&gt;

&lt;p&gt;With regard to public methods that were changed, I don&apos;t think most of them are a big deal, besides as Cheolsoo said, the PigServer throwing PigException. I never thought IOException was a good exception to throw, but I think reverting PigServer back to IOException as it is userfacing code is not a big deal. The rest of the method signature changes shouldn&apos;t be worrisome because most of them are internal to the project. &lt;/p&gt;

&lt;p&gt;However, the change from JobStats to MRJobStats, while necessary (as each ExecutionEngine would have it&apos;s own type of JobStats it would present to the end user), could be problematic because it is userfacing code and would probably break people who were previously using JobStats. That I think is the most important thing to keep in mind. The task of making the PPNL and JobStats clearly tied to the ExecutionEngine should be thought through also.&lt;/p&gt;</comment>
                            <comment id="13753912" author="julienledem" created="Thu, 29 Aug 2013 19:30:11 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt;: thanks a lot for looking into this.&lt;/p&gt;

&lt;p&gt;Here are my thoughts:&lt;/p&gt;

&lt;p&gt;1. let&apos;s change it back&lt;/p&gt;

&lt;p&gt;2. 4. 5. 6. 7. are either internal to Pig or necessary to add the execution engine abstraction.&lt;/p&gt;

&lt;p&gt;3.&lt;br/&gt;
JobStats still exists but the MR specific part is split into MRJobStats which extends JobStats&lt;br/&gt;
Same thing for PigStatsUtil and ScriptState. Those classes are not disappearing but the MR specific part is abstracted out.&lt;br/&gt;
HExecutionEngine could be renamed back to what it was but this is again what is becoming the new abstraction.&lt;br/&gt;
Unfortunately tools like Ambrose and Lipstick depend on the MR specific parts of Pig and look at the internals. This patch is a necessary change so that those tools can work independently of the execution engine in the future.&lt;br/&gt;
The changes to Ambrose and Lipstick should be minimal though with this patch. But yes they would suffer from some incompatibility, but again there is no way around it when a tool looks inside the execution engine internals.&lt;/p&gt;

&lt;p&gt;I think we should revert 1. and commit the patch.&lt;/p&gt;
</comment>
                            <comment id="13753956" author="cheolsoo" created="Thu, 29 Aug 2013 20:21:06 +0100"  >&lt;p&gt;I am uploading a new patch that revert the PigServer constructor (#1). The diff can be viewed &lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/a1e46e23ef0842874db6c09769a630ec47f5d259&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. (There are two unrelated minor changes.)&lt;/p&gt;

&lt;p&gt;The new patch is rebased to trunk. Please let me know if anyone has objections. If I don&apos;t hear back, I will commit it to trunk tomorrow. Thanks!&lt;/p&gt;</comment>
                            <comment id="13753985" author="achalsoni81" created="Thu, 29 Aug 2013 20:58:15 +0100"  >&lt;p&gt;I agree with all that is said, but there is no need to rename HExecutionEngine back. It doesn&apos;t semantically make sense and I don&apos;t think that anybody was directly interacting it outside of the test cases?&lt;/p&gt;

&lt;p&gt;Whatever changes to Ambrose and Lipstick should be communicated clearly also. I have noted some issues with PPNL before with regard to abstraction &amp;#8211; namely, Pig provides the MROperPlan to the listeners, which is not relevant in a differen execution engine. Julien suggested this should be fixed in a follow up patch. This will most certainly affect Ambrose and Lipstick so we should be cautious in that regard.&lt;/p&gt;</comment>
                            <comment id="13754235" author="dvryaboy" created="Fri, 30 Aug 2013 01:05:08 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=billgraham&quot; class=&quot;user-hover&quot; rel=&quot;billgraham&quot;&gt;Bill Graham&lt;/a&gt; looping you in for Ambrose.&lt;/p&gt;</comment>
                            <comment id="13754975" author="julienledem" created="Fri, 30 Aug 2013 19:21:14 +0100"  >&lt;p&gt;+1&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; LGTM!&lt;/p&gt;</comment>
                            <comment id="13755077" author="cheolsoo" created="Fri, 30 Aug 2013 21:05:28 +0100"  >&lt;p&gt;Committed to trunk:&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1519062&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1519062&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you Achal!&lt;/p&gt;</comment>
                            <comment id="13764811" author="daijy" created="Wed, 11 Sep 2013 22:32:23 +0100"  >&lt;p&gt;This break the Oozie build, which uses PigStatsUtil.&lt;/p&gt;
{HDFS_BYTES_WRITTEN, MAP_INPUT_RECORDS, MAP_OUTPUT_RECORDS, REDUCE_INPUT_RECORDS, REDUCE_OUTPUT_RECORDS}
&lt;p&gt;. We need to provide a backward compatible way.&lt;/p&gt;</comment>
                            <comment id="13764834" author="daijy" created="Wed, 11 Sep 2013 22:53:19 +0100"  >&lt;p&gt;Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3457&quot; title=&quot;Provide backward compatibility for PigStatsUtil and JobStats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3457&quot;&gt;&lt;del&gt;PIG-3457&lt;/del&gt;&lt;/a&gt; for that.&lt;/p&gt;</comment>
                            <comment id="13767190" author="rohini" created="Sat, 14 Sep 2013 00:47:57 +0100"  >&lt;p&gt;I having second thoughts on having this patch in 0.12 in and wondering whether we should revert this and keep it only in Tez branch. Two reasons for that:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Seeing &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3457&quot; title=&quot;Provide backward compatibility for PigStatsUtil and JobStats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3457&quot;&gt;&lt;del&gt;PIG-3457&lt;/del&gt;&lt;/a&gt; which was my initial concern.&lt;/li&gt;
	&lt;li&gt;Changing interfaces to be backward compatible is very tricky and the workarounds are hacky or ugly. Faced that with &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3255&quot; title=&quot;Avoid extra byte array copies in streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3255&quot;&gt;&lt;del&gt;PIG-3255&lt;/del&gt;&lt;/a&gt;. And this patch introduces lot of changes and new interfaces for the purpose of future work which is yet to take off from POC stages. The interfaces are bound to evolve when actual implementations are done or become different from what is in this patch if we end up finding cleaner abstractions. Putting something in a release which we are not very sure of does not seem like a good idea.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Someone who wants to do experimental work can start off with tez branch since it is experimental work anyways. Basically I just want to keep experimentation code separate from production code since we are talking about releasing Pig 0.12. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13767220" author="dvryaboy" created="Sat, 14 Sep 2013 01:16:52 +0100"  >&lt;p&gt;This is not just for Tez. The point is to enable POC work (in branches, forks, etc) and not have each such attempt redo all the work in this ticket. It&apos;s the same reason we provide things like pluggable LoadFuncs to let people work on things they want to load we didn&apos;t think of loading.&lt;/p&gt;

&lt;p&gt;We should certainly work to stabilize 0.12 and fix issues like &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3457&quot; title=&quot;Provide backward compatibility for PigStatsUtil and JobStats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3457&quot;&gt;&lt;del&gt;PIG-3457&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13767227" author="billgraham" created="Sat, 14 Sep 2013 01:23:11 +0100"  >&lt;p&gt;Would should at least annotate the new interfaces as evolving so we don&apos;t need to evolve them in a backward compatible way just yet.&lt;/p&gt;</comment>
                            <comment id="13767615" author="rohini" created="Sun, 15 Sep 2013 00:21:25 +0100"  >&lt;p&gt;Dmitriy,&lt;br/&gt;
   I am not arguing about adding interfaces to enable other frameworks. If you take the LoadFuncs case, a lot of design and work went into that (&lt;a href=&quot;http://wiki.apache.org/pig/LoadStoreRedesignProposal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/LoadStoreRedesignProposal&lt;/a&gt;) in coming up with and finalizing the interfaces and there were Loaders and Storers changed or written with the design of the new interfaces before the new interfaces were released. In this case we have added the interfaces without doing something like that and putting it in a release. That was my concern. &lt;/p&gt;

&lt;p&gt;As Bill suggests if we mark and agree that the new interfaces are unstable and bound to change and no backward compatibility will be provided, then I am good. Because when we actually get to Tez or Spork implementation (not POC), I am sure these are bound to change or more new methods are required.&lt;/p&gt;</comment>
                            <comment id="13768649" author="dvryaboy" created="Mon, 16 Sep 2013 20:19:38 +0100"  >&lt;p&gt;+1 to marking the interfaces as evolving.&lt;/p&gt;</comment>
                            <comment id="13769734" author="cheolsoo" created="Tue, 17 Sep 2013 18:49:14 +0100"  >&lt;p&gt;I will open a jira to add &quot;unstable&quot; annotations. I am also reviewing &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3457&quot; title=&quot;Provide backward compatibility for PigStatsUtil and JobStats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3457&quot;&gt;&lt;del&gt;PIG-3457&lt;/del&gt;&lt;/a&gt; now.&lt;/p&gt;</comment>
                            <comment id="13782623" author="cheolsoo" created="Tue, 1 Oct 2013 05:29:48 +0100"  >&lt;p&gt;Reverted in 0.12.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12669166">PIG-3464</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12667416">PIG-3453</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12668156">PIG-3457</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12666475">PIG-3446</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12598029" name="execengine.patch" size="63268" author="achalsoni81" created="Wed, 14 Aug 2013 19:52:58 +0100"/>
                            <attachment id="12598032" name="mapreduce_execengine.patch" size="132991" author="achalsoni81" created="Wed, 14 Aug 2013 19:52:58 +0100"/>
                            <attachment id="12598031" name="stats_scriptstate.patch" size="161034" author="achalsoni81" created="Wed, 14 Aug 2013 19:52:58 +0100"/>
                            <attachment id="12599438" name="test_failures.txt" size="16192" author="cheolsoo" created="Thu, 22 Aug 2013 15:45:17 +0100"/>
                            <attachment id="12598030" name="test_suite.patch" size="78632" author="achalsoni81" created="Wed, 14 Aug 2013 19:52:58 +0100"/>
                            <attachment id="12599540" name="updated-8-22-2013-exec-engine.patch" size="372413" author="achalsoni81" created="Fri, 23 Aug 2013 00:57:28 +0100"/>
                            <attachment id="12599781" name="updated-8-23-2013-exec-engine.patch" size="403757" author="cheolsoo" created="Sat, 24 Aug 2013 03:39:59 +0100"/>
                            <attachment id="12600273" name="updated-8-27-2013-exec-engine.patch" size="406584" author="cheolsoo" created="Tue, 27 Aug 2013 23:12:51 +0100"/>
                            <attachment id="12600353" name="updated-8-28-2013-exec-engine.patch" size="407441" author="cheolsoo" created="Wed, 28 Aug 2013 10:02:18 +0100"/>
                            <attachment id="12600638" name="updated-8-29-2013-exec-engine.patch" size="407336" author="cheolsoo" created="Thu, 29 Aug 2013 20:21:06 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Aug 2013 14:27:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343247</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzh1e7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343551</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>