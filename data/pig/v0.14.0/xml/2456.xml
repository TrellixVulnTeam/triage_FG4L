<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:49:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2456/PIG-2456.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2456] Pig should have a pigrc to specify default script cache</title>
                <link>https://issues.apache.org/jira/browse/PIG-2456</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;There should be a way to specify default statements in pig. This is helpful when multiple users are using pig in interactive mode.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12536931">PIG-2456</key>
            <summary>Pig should have a pigrc to specify default script cache</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="prkommireddi">Prashant Kommireddi</assignee>
                                    <reporter username="aniket486">Aniket Mokashi</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jan 2012 01:07:13 +0000</created>
                <updated>Fri, 22 Feb 2013 04:53:59 +0000</updated>
                            <resolved>Thu, 2 Feb 2012 02:18:41 +0000</resolved>
                                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13190380" author="prkommireddi" created="Sat, 21 Jan 2012 12:24:29 +0000"  >&lt;p&gt;Aniket, can you provide an example of this Use Case.&lt;/p&gt;</comment>
                            <comment id="13192824" author="qwertymaniac" created="Wed, 25 Jan 2012 02:58:06 +0000"  >&lt;p&gt;Hive has this, and is very useful to load/add in some user libraries during startup, or to register temp functions/aliases. I agree Pig should have the very same thing.&lt;/p&gt;</comment>
                            <comment id="13192825" author="qwertymaniac" created="Wed, 25 Jan 2012 02:59:13 +0000"  >&lt;p&gt;Though you can use a pig.properties file (passable as &lt;tt&gt;pig -P file&lt;/tt&gt;), which has a &quot;file=&quot; property that can do the same thing.&lt;/p&gt;</comment>
                            <comment id="13192914" author="prkommireddi" created="Wed, 25 Jan 2012 07:37:32 +0000"  >&lt;p&gt;Harsh,&lt;/p&gt;

&lt;p&gt;Pig loads properties from $HOME/.pigrc by default. Additional jars can be registered and UDFs can be qualified from here.&lt;br/&gt;
Additionally, pig.properties and pig-default.properties are loaded if present in Pig&apos;s classpath. &lt;/p&gt;

&lt;p&gt;Are you looking for any other functionality?&lt;/p&gt;</comment>
                            <comment id="13192916" author="aniket486" created="Wed, 25 Jan 2012 07:44:59 +0000"  >&lt;p&gt;How about, a = load &apos;1.txt&apos; using SomeLoader(); and a is available every time I run grunt?&lt;br/&gt;
Btw, pigrc looks interesting! Can you point me to a jira so that I can find its features? &lt;br/&gt;
Thanks,&lt;br/&gt;
Aniket&lt;/p&gt;</comment>
                            <comment id="13192917" author="aniket486" created="Wed, 25 Jan 2012 07:45:04 +0000"  >&lt;p&gt;How about, a = load &apos;1.txt&apos; using SomeLoader(); and a is available every time I run grunt?&lt;br/&gt;
Btw, pigrc looks interesting! Can you point me to a jira so that I can find its features? &lt;br/&gt;
Thanks,&lt;br/&gt;
Aniket&lt;/p&gt;</comment>
                            <comment id="13192918" author="aniket486" created="Wed, 25 Jan 2012 07:45:14 +0000"  >&lt;p&gt;How about, a = load &apos;1.txt&apos; using SomeLoader(); and a is available every time I run grunt?&lt;br/&gt;
Btw, pigrc looks interesting! Can you point me to a jira so that I can find its features? &lt;br/&gt;
Thanks,&lt;br/&gt;
Aniket&lt;/p&gt;</comment>
                            <comment id="13192919" author="aniket486" created="Wed, 25 Jan 2012 07:45:16 +0000"  >&lt;p&gt;How about, a = load &apos;1.txt&apos; using SomeLoader(); and a is available every time I run grunt?&lt;br/&gt;
Btw, pigrc looks interesting! Can you point me to a jira so that I can find its features? &lt;br/&gt;
Thanks,&lt;br/&gt;
Aniket&lt;/p&gt;</comment>
                            <comment id="13192920" author="aniket486" created="Wed, 25 Jan 2012 07:46:14 +0000"  >&lt;p&gt;Apologies, I should upgrade my browser really soon. Sorry for that..&lt;/p&gt;</comment>
                            <comment id="13192922" author="prkommireddi" created="Wed, 25 Jan 2012 07:57:16 +0000"  >&lt;p&gt;These property files are key-value pairs, I believe declaring an alias is not supported.&lt;/p&gt;

&lt;p&gt;Here are a couple JIRAs around pig configs, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-111&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-111&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1381&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-1381&lt;/a&gt;&lt;br/&gt;
You could also take a look at PropertiesUtil.loadDefaultProperties(Properties)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void loadDefaultProperties(Properties properties) {
        loadPropertiesFromFile(properties,
                &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;user.home&quot;&lt;/span&gt;) + &lt;span class=&quot;code-quote&quot;&gt;&quot;/.pigrc&quot;&lt;/span&gt;);
        loadPropertiesFromClasspath(properties, DEFAULT_PROPERTIES_FILE);
        loadPropertiesFromClasspath(properties, PROPERTIES_FILE);
        setDefaultsIfUnset(properties);
        
&lt;span class=&quot;code-comment&quot;&gt;//foo..&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13192931" author="prkommireddi" created="Wed, 25 Jan 2012 08:37:33 +0000"  >&lt;p&gt;Btw, did you check out MACROS (v0.9). Daniel has a nice post describing the same &lt;a href=&quot;http://hortonworks.com/new-apache-pig-features-part-1-macro/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hortonworks.com/new-apache-pig-features-part-1-macro/&lt;/a&gt;&lt;br/&gt;
It pretty much does what you are looking for. &quot;pigrc&quot; is a configuration file, and I would be inclined to keeping programmatic parts outside of config files.&lt;/p&gt;</comment>
                            <comment id="13193201" author="fwiffo" created="Wed, 25 Jan 2012 18:46:22 +0000"  >&lt;p&gt;The idea is to add a new file that contains pig statements that are always executed. This is more akin to the .hiverc in Hive (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1414&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HIVE-1414&lt;/a&gt;) than the pig.properties or .pigrc files that already exists. My use case would be to pre-define a bunch of UDFs:&lt;/p&gt;

&lt;p&gt;REGISTER /usr/lib/pig/contrib/piggybank/java/piggybank.jar;&lt;br/&gt;
DEFINE SequenceFileLoader org.apache.pig.piggybank.storage.SequenceFileLoader();&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;I could also see it being useful to put in common LOAD statements so that you can just start working with the data from grunt.&lt;/p&gt;

&lt;p&gt;I tried setting the file variable in .pigrc and pig.properties, but it didn&apos;t seem to cause the file to be loaded.&lt;/p&gt;

&lt;p&gt;This is somewhat related to macros where I want a default file that is always imported.&lt;/p&gt;</comment>
                            <comment id="13194400" author="prkommireddi" created="Fri, 27 Jan 2012 03:23:12 +0000"  >&lt;p&gt;Makes sense. This is what I think we could do to support this&lt;/p&gt;

&lt;p&gt;1. Create a static method in Main that takes in 1 argument, InputStream and returns a SequenceInputStream which is a composite stream comprised of default file, say &quot;.pigbootup&quot; and the InputStream&lt;br/&gt;
2. All individual components within Main call this function to get a handle on the composite stream by passing it the InputStream it uses (Console, FileInput)&lt;br/&gt;
3. This composite stream is then passed to Grunt.&lt;/p&gt;

&lt;p&gt;Another approach would be to add a new constructor to class Grunt, Grunt(InputStream in, PigContext pig). This constructor will create a composite stream (.pigbootup + console/fileinput), then create a BufferedReader on the composite stream and invoke Grunt(BufferedReader in, PigContext pig)&lt;/p&gt;

&lt;p&gt;Not sure which one of these approach&apos; would be better. &lt;/p&gt;

&lt;p&gt;Any suggestions or other ideas?&lt;/p&gt;</comment>
                            <comment id="13194449" author="prkommireddi" created="Fri, 27 Jan 2012 04:45:22 +0000"  >&lt;p&gt;Changes made to Main.java&lt;/p&gt;</comment>
                            <comment id="13196601" author="daijy" created="Tue, 31 Jan 2012 01:00:27 +0000"  >&lt;p&gt;Looks good. I tried dump/store/explain/describe/illustrate, all works fine. I have some minor suggestions:&lt;br/&gt;
1. It&apos;s better to make pigunit.pig takes .pigbootup as well. pigunit is for user to write their Pig unit test. If user always use .pigbootup, it makes sense he can use that in unit test as well&lt;br/&gt;
2. It also better to make the filename .pigbootup configurable, it would benefit for user to write unit test using approach #1&lt;br/&gt;
3. Adding a test case. With #2, this should be possible&lt;/p&gt;</comment>
                            <comment id="13196612" author="prkommireddi" created="Tue, 31 Jan 2012 01:14:56 +0000"  >&lt;p&gt;Thanks Daniel.&lt;/p&gt;

&lt;p&gt;1. Can you point me to the code/Class&apos; I need to take a look at for enabling this?&lt;br/&gt;
2. Makes sense. So have a property &quot;pig.load.default.statements&quot; that can be specified by user? Is .pigbootup required to be loaded from user&apos;s home directory (like .pigrc) in case &quot;pig.load.default.statements&quot; is not specified?&lt;/p&gt;</comment>
                            <comment id="13196631" author="daijy" created="Tue, 31 Jan 2012 01:44:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;1. Can you point me to the code/Class&apos; I need to take a look at for enabling this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Check org.apache.pig.pigunit.pig.PigServer&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2. Makes sense. So have a property &quot;pig.load.default.statements&quot; that can be specified by user? Is .pigbootup required to be loaded from user&apos;s home directory (like .pigrc) in case &quot;pig.load.default.statements&quot; is not specified?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The property name is fine. It has default value $HOME/.pigbootup in pig-default.properties.&lt;/p&gt;</comment>
                            <comment id="13196665" author="prkommireddi" created="Tue, 31 Jan 2012 02:43:33 +0000"  >&lt;p&gt;Would Utils be a good place to define &quot;getCompositeStream&quot;? It does not seem the best approach to declare a public function in Main and have it called from outside.&lt;/p&gt;</comment>
                            <comment id="13196682" author="daijy" created="Tue, 31 Jan 2012 03:50:42 +0000"  >&lt;p&gt;Yes, Utils should be better.&lt;/p&gt;</comment>
                            <comment id="13197323" author="prkommireddi" created="Tue, 31 Jan 2012 22:21:43 +0000"  >&lt;p&gt;I have modified org.apache.pig.pigunit.pig.PigServer and TestPigTest to add this functionality to PigUnit. New test added &quot;testDefaultBootup()&quot; to TestPigTest.java&lt;/p&gt;

&lt;p&gt;Also, moved &quot;getCompositeStream(InputStream in, Properties properties)&quot; to Utils.java to be used across.&lt;/p&gt;</comment>
                            <comment id="13197326" author="prkommireddi" created="Tue, 31 Jan 2012 22:24:34 +0000"  >&lt;p&gt;Also, user can now specify the bootup file path through configuration property &quot;pig.load.default.statements&quot;. If this property is not found, default location $HOME/.pigbootup will be loaded if present.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; InputStream getCompositeStream(InputStream in, Properties properties) {
	   &lt;span class=&quot;code-comment&quot;&gt;//Load &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; ~/.pigbootup &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not specified by user
&lt;/span&gt;    	&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; bootupFile = properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.load.&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.statements&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;user.home&quot;&lt;/span&gt;) + &lt;span class=&quot;code-quote&quot;&gt;&quot;/.pigbootup&quot;&lt;/span&gt;);
    	&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    	&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; InputStream inputSteam = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(bootupFile));
    	&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SequenceInputStream(inputSteam, in);
    	} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(FileNotFoundException fe) {
    		log.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Default bootup file &quot;&lt;/span&gt; +bootupFile+ &lt;span class=&quot;code-quote&quot;&gt;&quot; not found&quot;&lt;/span&gt;);
    		&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; in;
    	}
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13197633" author="daijy" created="Wed, 1 Feb 2012 07:22:59 +0000"  >&lt;p&gt;Looks good to me. Will commit if tests pass.&lt;/p&gt;</comment>
                            <comment id="13198476" author="daijy" created="Thu, 2 Feb 2012 02:18:41 +0000"  >&lt;p&gt;Unit test pass. test-patch:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 4 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 527 release audit warnings (more than the trunk&apos;s current 523 warnings).&lt;/p&gt;

&lt;p&gt;javadoc warning doesn&apos;t seems related. No new file added, ignore release audit warning.&lt;/p&gt;

&lt;p&gt;Patch committed to trunk.&lt;/p&gt;

&lt;p&gt;Thanks Prashant!&lt;/p&gt;</comment>
                            <comment id="13198485" author="aniket486" created="Thu, 2 Feb 2012 02:30:26 +0000"  >&lt;p&gt;Awesome! This is useful.&lt;/p&gt;</comment>
                            <comment id="13200634" author="russell.jurney" created="Sun, 5 Feb 2012 02:20:50 +0000"  >&lt;p&gt;What do we think about... default pig .pigbootup configuration should import piggybank, and define all its functions to short, callable names?&lt;/p&gt;</comment>
                            <comment id="13200639" author="aniket486" created="Sun, 5 Feb 2012 02:28:48 +0000"  >&lt;p&gt;How about making udf match case-insensitive? Wouldnt that be a better approach? We already have definedFunctions map, we just have to make it case-insensitive. Not sure if that will break something else. Comments?&lt;/p&gt;</comment>
                            <comment id="13200649" author="russell.jurney" created="Sun, 5 Feb 2012 03:38:57 +0000"  >&lt;p&gt;Making UDFs not case sensitive makes sense to me, but is a bigger (potentially) breaking change than lowercasing LOWER/UPPER.&lt;/p&gt;

&lt;p&gt;I say do it.&lt;/p&gt;</comment>
                            <comment id="13200987" author="daijy" created="Mon, 6 Feb 2012 01:09:48 +0000"  >&lt;p&gt;@Russell&lt;br/&gt;
import piggybank can be achieved by -Dpig.additional.jars(&lt;a href=&quot;http://pig.apache.org/docs/r0.9.2/basic.html#register&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.9.2/basic.html#register&lt;/a&gt;) and -Dudf.import.list (&lt;a href=&quot;http://pig.apache.org/docs/r0.9.2/udf.html#eval-functions&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.9.2/udf.html#eval-functions&lt;/a&gt;)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12512078" name="PIG-2456.patch" size="5137" author="prkommireddi" created="Fri, 27 Jan 2012 04:45:22 +0000"/>
                            <attachment id="12512676" name="PIG-2456_2.patch" size="11962" author="prkommireddi" created="Tue, 31 Jan 2012 22:21:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 21 Jan 2012 12:24:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>222526</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaxbj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97709</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>User can specify default Pig statements in ~/.pigbootup. Default statements will prepend to every Pig script and Grunt session. &lt;br/&gt;
&lt;br/&gt;
The default Pig statements filename is configurable via key &amp;quot;pig.load.default.statements&amp;quot;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>