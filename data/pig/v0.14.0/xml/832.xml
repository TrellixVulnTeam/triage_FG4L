<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:56:21 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-832/PIG-832.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-832] Make import list configurable</title>
                <link>https://issues.apache.org/jira/browse/PIG-832</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Currently, it is hardwired in PigContext.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12427133">PIG-832</key>
            <summary>Make import list configurable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Jun 2009 18:20:40 +0100</created>
                <updated>Wed, 24 Mar 2010 22:13:06 +0000</updated>
                            <resolved>Wed, 24 Jun 2009 06:15:09 +0100</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.4.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12721353" author="olgan" created="Thu, 18 Jun 2009 18:25:11 +0100"  >&lt;p&gt;As part of this fix we should also expand the default list to include piggybank functions&lt;/p&gt;</comment>
                            <comment id="12721361" author="milindb" created="Thu, 18 Jun 2009 18:30:28 +0100"  >&lt;p&gt;If we include the piggybank functions in the default import list, we need to make sure that they are compiled and tested in the default build, and that the releases will be blocked due to them not compiling etc. Is that the intention ?&lt;/p&gt;</comment>
                            <comment id="12721371" author="daijy" created="Thu, 18 Jun 2009 18:42:19 +0100"  >&lt;p&gt;How about this syntax:&lt;br/&gt;
Add a new java property: udf.import.list. We can put package name to import to this property. We can put multiple packages, separated by colon. &lt;/p&gt;

&lt;p&gt;User runs pig like this:&lt;br/&gt;
java -Dudf.import.list=com.xxx.udf1:com.xxx.udf2 ......&lt;/p&gt;

&lt;p&gt;For that, user can refer to UDFs in these two packages without specify the package name.&lt;/p&gt;</comment>
                            <comment id="12721373" author="olgan" created="Thu, 18 Jun 2009 18:44:09 +0100"  >&lt;p&gt;In response to Milind. I don&apos;t think we are committing to more support for piggybank. All this does is, if you do use UDFs from piggybank, you don&apos;t need to use full package name.&lt;/p&gt;</comment>
                            <comment id="12721375" author="olgan" created="Thu, 18 Jun 2009 18:44:34 +0100"  >&lt;p&gt;Daniel, your proposal looks good&lt;/p&gt;</comment>
                            <comment id="12721379" author="milindb" created="Thu, 18 Jun 2009 18:53:31 +0100"  >&lt;p&gt;Can we have:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -Dimport.list += com.xxx.udf1 ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That way, I only add/override the default udf import list. Other wise, we will have two variables - import.list, and udf.import.list, and resolving a udf name will have to check both in specific order.&lt;/p&gt;</comment>
                            <comment id="12721387" author="olgan" created="Thu, 18 Jun 2009 19:04:05 +0100"  >&lt;p&gt;Milind, Not quite sure what you are saying. We currently don&apos;t have any way to pass the list in. import.list does not exist in pig as far as I know.  &lt;/p&gt;</comment>
                            <comment id="12721396" author="milindb" created="Thu, 18 Jun 2009 19:22:21 +0100"  >&lt;p&gt;Olga, what I am saying is to have a default import list: which contains default UDFs (tokenize, Max, Min, flatten), followed by piggybank contribs. And the same list can be added to / overridden on the command-line. This has several advantages. Pig built-ins do not have to be reserved words, and can be overridden. For example, recent mails on pig-users have mentioned that tokenize+flatten should be a single udf. This can be done by providing a flatten (which is null), and tokenize, which does tokenize+flatten, and existing scripts will still work. This simplifies pig grammar as well. Users can create udf libraries, and use them with:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -Dimport.list += `cat my-udf-lib.&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt;`
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thoughts ?&lt;/p&gt;</comment>
                            <comment id="12721407" author="daijy" created="Thu, 18 Jun 2009 19:40:41 +0100"  >&lt;p&gt;My thinking is that most users will use build-in UDFs. So it is better to be straight-forward to the majority. One thing is, import list is ordered. We can put the buildin UDFs in the end. So if user provide udf with the same name, Pig takes the user defined udf first. How is that?&lt;/p&gt;</comment>
                            <comment id="12721413" author="milindb" created="Thu, 18 Jun 2009 19:53:18 +0100"  >&lt;p&gt;Instead of a list, if you make it a map (i.e. short name -&amp;gt; fully qualified class name), it will be much easier, as it will guarantee that each name has exactly one udf class associated with it. It will also allow users to use udfs that have class names which are pig reserved words. For example, If I have an existing UDF with a class name such as load or store, I can still use them with a different name like myload, without having to rename the class.&lt;/p&gt;

&lt;p&gt;So, I suggest:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -jar pig.jar -Dimport.list+=MyLoad:com.xxxx.Load,Flatten:com.xxxx.Flatten,... 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I do not specify -Dimport.list on the pig command line, then the default import.list is used.&lt;/p&gt;

&lt;p&gt;Thoughts ?&lt;/p&gt;</comment>
                            <comment id="12721414" author="olgan" created="Thu, 18 Jun 2009 19:55:17 +0100"  >&lt;p&gt;Milind,&lt;/p&gt;

&lt;p&gt;Couple of comments and clarifications:&lt;/p&gt;

&lt;p&gt;(1) Builtin UDFs are not reserved words. (Flatten is reserved but it is not a UDF) The issue we have seen is users creating UDFs that had reserved words in the package name and if the package name is registered as proposed in this JIRa, their problem will go away.&lt;br/&gt;
(2) I don&apos;t think we need to allow to overwrite the defaults. We are not planning to expand the list beyond default distribution (builtins + piggybank.) The plan is to hardwire this values in the code since they are not likely to change&lt;br/&gt;
(3) Our plan is to keep it simple and to just allow users to add packages based on what they use in their UDFs.&lt;/p&gt;</comment>
                            <comment id="12721423" author="olgan" created="Thu, 18 Jun 2009 20:10:14 +0100"  >&lt;p&gt;Also think you are suggesting UDF aliasing on command line which I am not sure is the right place for it. &lt;/p&gt;

&lt;p&gt;The scope of this work is just to make it easier for users to refer to their UDFs.&lt;/p&gt;</comment>
                            <comment id="12721428" author="milindb" created="Thu, 18 Jun 2009 20:39:20 +0100"  >&lt;p&gt;Hardwiring names that are not reserved words is likely to cause more pain in the long run. What Daniel is proposing seems to be right for your assumptions 1, 2, and 3, though. But one can easily think of several use cases where overriding on the command-line eases a lot of pain. Assume that someone writes a new superfast PigStorage UDF, and wants to compare its performance with the default PigStorage provided with Pig. Instead of modifying the entire benchmark suite PigMix to use the new storage UDF, he/she can just make PigStorage point to his own UDF on the commandline and run PigMix. It saves a lot of Pain.&lt;/p&gt;</comment>
                            <comment id="12721456" author="daijy" created="Thu, 18 Jun 2009 21:23:21 +0100"  >&lt;p&gt;Hi, Milind, in the use case you mentioned, he/she can write his own PigStorage, put the jar in the import list. Pig will take user supplied UDF first, thus override the buildin PigStorage. How is this?&lt;/p&gt;</comment>
                            <comment id="12721481" author="olgan" created="Thu, 18 Jun 2009 21:52:38 +0100"  >&lt;p&gt;Milind, we have parameter substitution for what you are mentioning as example.&lt;/p&gt;

&lt;p&gt;My proposal would be to keep this issue strictly for the packaging thing. This will already make a lot of people happy and users asked for just that.&lt;/p&gt;

&lt;p&gt;We can discuss and understand more user requirements regarding aliases in a separate thread. &lt;/p&gt;</comment>
                            <comment id="12721490" author="milindb" created="Thu, 18 Jun 2009 22:08:36 +0100"  >&lt;p&gt;Daniel: For that to work, user&apos;s class will have to be called PigStorage. And also, inserting user&apos;s jars before pig jar for looking up methods can have major unintended consequences. pig.jar should always be the first in the classpath.&lt;/p&gt;

&lt;p&gt;Olga: My use case cannot use parameter substitution, because PigMix scrips does not specify PigStorage as, say, $storage. The solution I proposed is as simple to implement as Daniel&apos;s original proposal (+= is a syntactic sugar. even = can be used with the same effect.), and it fixes a specific ask, and also allows for extensibility. Am I missing something here ?&lt;/p&gt;</comment>
                            <comment id="12721503" author="daijy" created="Thu, 18 Jun 2009 22:28:49 +0100"  >&lt;p&gt;Hi, Milind,&lt;br/&gt;
For your first comment, yes, user&apos;s class have to be PigStorage. For your second comment, we do not put user&apos;s jar before pig.jar. We put their udf search path first. Let&apos;s say user put &quot;-Dudf.import.list=com.xxx.udf1:com.xxx.udf2&quot;, when we see an unknown UDF, we first search in the package &quot;com.xxx.udf1&quot;, then &quot;com.xxx.udf2&quot;, then &quot;org.apache.pig.builtin&quot;. We build this policy in our code. It&apos;s not put user.jar in front of pig.jar.&lt;/p&gt;</comment>
                            <comment id="12721506" author="olgan" created="Thu, 18 Jun 2009 22:32:47 +0100"  >&lt;p&gt;Milind,&lt;/p&gt;

&lt;p&gt;Issue is not the complexity of implementation but that I am not sure we want to support command line aliasing and I want to discuss and understand the use cases for it separately. And we can parameterize PigMix if we needed to - that was just an example of an alternative solution for the issue you specified.&lt;/p&gt;

&lt;p&gt;I looking for a list of requirements - not a solution.&lt;/p&gt;

&lt;p&gt;Another comment is I don&apos;t think the solution you are proposing would work. The way the list is used to by prepending the package name to the function name to see if the function exist. It deos not do anything with function name itself.&lt;/p&gt;</comment>
                            <comment id="12721514" author="milindb" created="Thu, 18 Jun 2009 22:53:22 +0100"  >&lt;p&gt;Olga, specifying a list of packages as a path list will have the same issues as&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.xyz.&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;.*;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in java, where it is considered to be a bad practice. So, in the solution that I have proposed, I am assuming the class name is specified on the commandline and not the package name.&lt;/p&gt;</comment>
                            <comment id="12721519" author="daijy" created="Thu, 18 Jun 2009 23:02:27 +0100"  >&lt;p&gt;Hi, Milind,&lt;br/&gt;
If a user wrote 10 UDFs, I guess he/she does not suppose to put 10 entries in the command line, right?&lt;/p&gt;</comment>
                            <comment id="12721523" author="milindb" created="Thu, 18 Jun 2009 23:08:47 +0100"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;Hi, Milind, If a user wrote 10 UDFs, I guess he/she does not suppose to put 10 entries in the command line, right?&lt;/p&gt;

&lt;p&gt;No, thats why I have a `cat myudflist` allowed on the command-line.&lt;/p&gt;
</comment>
                            <comment id="12721528" author="daijy" created="Thu, 18 Jun 2009 23:22:41 +0100"  >&lt;p&gt;yes, `cat myudflist` is a way to get around. However, in my humble opinion, this syntax is not very intuitive to the ordinary user.  Many users may have the impression that they have to put their UDFs one by one.&lt;/p&gt;</comment>
                            <comment id="12721550" author="milindb" created="Fri, 19 Jun 2009 00:25:55 +0100"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;Pig streaming already uses backquotes for executing external programs. So, users are familiar with this syntax. I believe an ordinary pig user already knows about doing such things in unix shells. But anyway, as Olga said, she is looking for requirements, and not solutions, so, here is a requirement:&lt;/p&gt;

&lt;p&gt;I have two jars: xyz.jar, and abc.jar. I am using two UDFs in my scripts. I want to use function1 from xyz.jar, and function2 from abc.jar. How do I use function2 from abc.jar with full confidence that xyz.jar does not contain a UDF named function2? How do you propose I do that  without modifying a whole bunch of pig scripts that I am testing for my functions ?&lt;/p&gt;

&lt;p&gt;In the solution that I proposed, I can just change function2 mapping by including &quot;-Dimport.list=function2:com.yahoo.milind.function2&quot; on the command-line.&lt;/p&gt;</comment>
                            <comment id="12721551" author="olgan" created="Fri, 19 Jun 2009 00:30:30 +0100"  >&lt;p&gt;You use a fully qualified name for the other one.&lt;/p&gt;

&lt;p&gt;I would like for us to continue on our original plan. It might not solve all the issues but it certainly helps and it is a very small change to the current implementation.&lt;/p&gt;

&lt;p&gt;We can discuss improvements in a separate JIRA.&lt;/p&gt;</comment>
                            <comment id="12721562" author="milindb" created="Fri, 19 Jun 2009 00:47:57 +0100"  >&lt;p&gt;Olga,&lt;/p&gt;

&lt;p&gt;As long the suggested improvements do not result in redundancy / make the original solutions obsolete, its fine. But I believe that the core issue, which is, &quot;how does pig resolve UDFs?&quot;, is not addressed properly in the &quot;small change to current implementation&quot;.&lt;/p&gt;</comment>
                            <comment id="12721563" author="olgan" created="Fri, 19 Jun 2009 00:50:54 +0100"  >&lt;p&gt;I don&apos;t believe this prevents future improvements&lt;/p&gt;</comment>
                            <comment id="12721909" author="daijy" created="Fri, 19 Jun 2009 19:02:24 +0100"  >&lt;p&gt;I submit the patch for the original proposal for now. We can discuss alias things which Milind suggest in a separate case.&lt;/p&gt;</comment>
                            <comment id="12722031" author="hadoopqa" created="Fri, 19 Jun 2009 22:36:20 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12411247/PIG-832-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12411247/PIG-832-1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 786607.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/94/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/94/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/94/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/94/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/94/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/94/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12722109" author="daijy" created="Sat, 20 Jun 2009 02:17:09 +0100"  >&lt;p&gt;Change the patch with a better unit test.&lt;/p&gt;</comment>
                            <comment id="12722138" author="hadoopqa" created="Sat, 20 Jun 2009 05:34:52 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12411291/PIG-832-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12411291/PIG-832-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 786694.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/95/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/95/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/95/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/95/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/95/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/95/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12723142" author="olgan" created="Tue, 23 Jun 2009 16:53:57 +0100"  >&lt;p&gt;Hi Daniel,&lt;/p&gt;

&lt;p&gt;The patch looks good.&lt;/p&gt;

&lt;p&gt;One comment - I think the Yahoo line that you commented out should be removed&lt;/p&gt;

&lt;p&gt;One question - the way this is implemented, the builtins will take precedence over user defined functions in case of the conflict. I think this is the right approach - I think overwriting builting should be explicit via fully qualified names but I wanted to see what others thought.&lt;/p&gt;</comment>
                            <comment id="12723143" author="olgan" created="Tue, 23 Jun 2009 16:54:24 +0100"  >&lt;p&gt;+1 once we answer/resolve issues above&lt;/p&gt;</comment>
                            <comment id="12723443" author="daijy" created="Wed, 24 Jun 2009 06:15:09 +0100"  >&lt;p&gt;Remove the Yahoo line&lt;/p&gt;</comment>
                            <comment id="12723445" author="daijy" created="Wed, 24 Jun 2009 06:20:51 +0100"  >&lt;p&gt;Patch committed&lt;/p&gt;</comment>
                            <comment id="12723554" author="hudson" created="Wed, 24 Jun 2009 14:06:28 +0100"  >&lt;p&gt;Integrated in Pig-trunk #484 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-trunk/484/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-trunk/484/&lt;/a&gt;)&lt;br/&gt;
    : Make import list configurable&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12430154">PIG-883</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12411247" name="PIG-832-1.patch" size="3275" author="daijy" created="Fri, 19 Jun 2009 19:02:24 +0100"/>
                            <attachment id="12411291" name="PIG-832-2.patch" size="7823" author="daijy" created="Sat, 20 Jun 2009 02:17:09 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 18 Jun 2009 17:30:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164385</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyajf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95457</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>