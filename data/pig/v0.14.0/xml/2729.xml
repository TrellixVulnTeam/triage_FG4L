<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:52:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2729/PIG-2729.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2729] Macro expansion does not use pig.import.search.path - UnitTest borked</title>
                <link>https://issues.apache.org/jira/browse/PIG-2729</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;org.apache.pig.test.TestMacroExpansion, in function importUsingSearchPathTest the import statement is provided with the full path to /tmp/mytest2.pig so the pig.import.search.path is never used. I changed the import to &lt;/p&gt;

&lt;p&gt;import &apos;mytest2.pig&apos;;&lt;/p&gt;

&lt;p&gt;and ran the UnitTest again. This time the test failed as expected from my experience from earlier this day trying in vain to get pig eat my pig.import.search.path property! Other properties in the same custom properties file (provided via -propertyFile command line option) like udf.import.list get read without any problem.&lt;/p&gt;</description>
                <environment>&lt;p&gt;pig-0.9.2 and pig-0.10.0, hadoop-0.20.2 from Clouderas distribution cdh3u3 on Kubuntu 12.04 64Bit.&lt;/p&gt;</environment>
        <key id="12558593">PIG-2729</key>
            <summary>Macro expansion does not use pig.import.search.path - UnitTest borked</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="johannesch">Johannes Schwenk</assignee>
                                    <reporter username="johannesch">Johannes Schwenk</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 May 2012 14:39:51 +0100</created>
                <updated>Sun, 6 Jan 2013 23:57:03 +0000</updated>
                            <resolved>Wed, 1 Aug 2012 22:37:42 +0100</resolved>
                                    <version>0.9.2</version>
                    <version>0.10.0</version>
                                    <fixVersion>0.11</fixVersion>
                    <fixVersion>0.10.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13286548" author="johannesch" created="Thu, 31 May 2012 14:09:39 +0100"  >&lt;p&gt;Attached scripts to further illustrate this issue.&lt;/p&gt;

&lt;p&gt;To test this extract to your home. Then execute ./run-me .&lt;/p&gt;</comment>
                            <comment id="13286722" author="johannesch" created="Thu, 31 May 2012 17:34:01 +0100"  >&lt;p&gt;This should fix the issue. I ran the tests in org.apache.pig.test.TestMacroExpansion against this. Something is really borked here, since the tests seem to be depending on each other. The (fixed, see above) test importUsingSearchPathTest now completes successfully. The test importTwoFilesTest fails however, when executed together with the other tests. but also succeeds if run as the only test in the class. Renaming mytest1.pig and mytest2.pig in the test to something different made it pass also, so it might be a cleanup issue.&lt;/p&gt;

&lt;p&gt;So this patch should definitely work, but the tests for the class should be reworked and included in the test/unit-tests file. I will open a separate issue on that.&lt;/p&gt;</comment>
                            <comment id="13286723" author="johannesch" created="Thu, 31 May 2012 17:35:47 +0100"  >&lt;p&gt;Sorry forgot patch! Will resubmit...&lt;/p&gt;</comment>
                            <comment id="13286724" author="johannesch" created="Thu, 31 May 2012 17:36:13 +0100"  >&lt;p&gt;This should fix the issue. I ran the tests in org.apache.pig.test.TestMacroExpansion against this. Something is really borked here, since the tests seem to be depending on each other. The (fixed, see above) test importUsingSearchPathTest now completes successfully. The test importTwoFilesTest fails however, when executed together with the other tests. but also succeeds if run as the only test in the class. Renaming mytest1.pig and mytest2.pig in the test to something different made it pass also, so it might be a cleanup issue.&lt;br/&gt;
So this patch should definitely work, but the tests for the class should be reworked and included in the test/unit-tests file. I will open a separate issue on that.&lt;/p&gt;</comment>
                            <comment id="13286726" author="johannesch" created="Thu, 31 May 2012 17:37:37 +0100"  >&lt;p&gt;I am sorry for all the noise!&lt;/p&gt;</comment>
                            <comment id="13415694" author="rohini" created="Mon, 16 Jul 2012 22:58:45 +0100"  >&lt;p&gt;Johannes,&lt;br/&gt;
   Do you have the updated patch which fixes the unit tests also? The static map in QueryParserDriver which caches the macro files is the reason for the test failure once the importUsingSearchPathTest is corrected.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; srchPath = pigContext.getProperties().getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt;.search.path&quot;&lt;/span&gt;);
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!fname.startsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt;) &amp;amp;&amp;amp; !fname.startsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;) &amp;amp;&amp;amp; srchPath != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+                    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] paths = srchPath.split(&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;);
+                    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; path : paths) {
+                        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; resolvedPath = path + File.separator + fname;
+                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(resolvedPath)).exists()) {
+                            fname = resolvedPath;
+                            &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+                        }
+                    }
+                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  The above code also does not handle &quot;../&quot;. If the script had &quot;import ../readme.pig&quot; and pig.import.search.path was &quot;/x/y&quot;, then /x/y/../readme.pig will be searched for. Also need to remove the redundant QueryParserUtils.getImportScriptAsReader code as getMacroFile will now return a absolute path. &lt;/p&gt;</comment>
                            <comment id="13416353" author="johannesch" created="Tue, 17 Jul 2012 17:48:05 +0100"  >&lt;p&gt;Hi Rohini,&lt;/p&gt;

&lt;p&gt;I attached a new patch that fixes the issue with relative paths. It also includes the patch for TestMacroExpansion. Further I removed the redundant code in QueryParserUtils. The tests in TestQueryParser and TestMacroExpansion all succeed. All tests should be run though, to verify that I have not broken other things...&lt;/p&gt;

&lt;p&gt;As to the failing importTwoFilesTest I mentioned earlier: I cannot reproduce this right now. Could you verify that the tests work as expected Rohini?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Johannes&lt;/p&gt;</comment>
                            <comment id="13416394" author="rohini" created="Tue, 17 Jul 2012 18:40:49 +0100"  >&lt;p&gt;Johannes,&lt;br/&gt;
  You need to do &quot;git diff --no-prefix&quot; to get the patch so that it can be applied on svn. And it would be easier to review if you can also post the patch in reviewboard.&lt;/p&gt;

&lt;p&gt;1) Small nitpick. The paths variable need not be defined outside the if block. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] paths = {};
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (srchPath != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+                    paths = srchPath.split(&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;); &lt;span class=&quot;code-comment&quot;&gt;//Could just be &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] paths = srchPath.split(&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) The problem I mentioned in the previous comment about &quot;../&quot; still exists. You have also removed the f.exists() || f.isAbsolute() || scriptPath.startsWith(&quot;./&quot;) checks. They are required. Now the search will be looking at the wrong paths even if the file existed or was an absolute path and makes the behavior unpredictable. For eg: If there was a statement, import &apos;/dir1/file1.pig&apos; and the pig.import.search.path was &apos;/dir2,/dir3&apos;, then you would be considering files /dir2/dir1/file1.pig and /dir3/dir1/file1.pig. The same thing will happen for relative paths from base dir and ./ and ../. &lt;/p&gt;

&lt;p&gt;3) Doing a canonical path for f.exists() is not required. canonicalize results internally in a native call and would just add overhead.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Rohini&lt;/p&gt;</comment>
                            <comment id="13416975" author="johannesch" created="Wed, 18 Jul 2012 11:14:01 +0100"  >&lt;p&gt;Hi Rohini,&lt;/p&gt;

&lt;p&gt;sorry I didn&apos;t know about svn having problems with git diffs - I will fix that and post patches on reviewboard from now on...&lt;/p&gt;

&lt;p&gt;1. Will fix that.&lt;br/&gt;
2. Sorry, I think I missunderstood you: I somehow thought that you wanted /x/y/../readme.pig beeing resolved to /x/readme.pig for &quot;import &apos;../readme.pig&apos;; if the import path contained /x/y. This is obvoiusly not the case... So the correct behaviour is:&lt;/p&gt;

&lt;p&gt;    1. Check if fname points to an existing file, is absolute, or relative&lt;br/&gt;
        yes =&amp;gt; return localFileRet&lt;br/&gt;
        no =&amp;gt; goto 2.&lt;br/&gt;
    2. For each importPath in pig.import.search.path&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;concatenate: importPath + File.separator + fname&lt;/li&gt;
	&lt;li&gt;check if file exists&lt;br/&gt;
            yes =&amp;gt; return localFileRet&lt;br/&gt;
            no =&amp;gt; continue with 2.&lt;br/&gt;
    3. Return localFileRet for fname.&lt;br/&gt;
    4. While doing 1.-3. throw RuntimeException if an IOException was encountered&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Have I understood this correctly?&lt;/p&gt;

&lt;p&gt;3. Yes, i removed this.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Johannes&lt;/p&gt;</comment>
                            <comment id="13417313" author="rohini" created="Wed, 18 Jul 2012 18:51:49 +0100"  >&lt;p&gt;No worries. For future reference, &lt;a href=&quot;https://cwiki.apache.org/confluence/display/PIG/HowToContribute&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/PIG/HowToContribute&lt;/a&gt; has all the instructions. Its a really nice writeup and I had found it very helpful. &lt;/p&gt;

&lt;p&gt;You are right with 1 and 2. It makes it same as the old logic. I was thinking it would keep it simpler if instead of copying all the logic to getMacroFile method, we could just change the name of QueryParserUtil.getImportScriptAsReader to something like getFileFromSearchImportPath and make it return a file instead of bufferedReader and null instead of FileNotFoundException. That way the logic remains exactly same and we don&apos;t have to worry about missing something.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
QueryParserUtils.java
-    &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; BufferedReader getImportScriptAsReader(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; scriptPath)
-            &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; FileNotFoundException {
+    
+    &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; File getFileFromSearchImportPath(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; scriptPath) {
         
-            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileReader(f));
+            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; f;

-                        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileReader(f1));
+                        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; f1;

-
-        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileNotFoundException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t find the Specified file &quot;&lt;/span&gt;
-                + scriptPath);
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

QueryParserDriver.java getMacroFile():
File localFile = QueryParserUtils.getFileFromSearchImportPath(fname);
localFileRet = localFile == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
 ? FileLocalizer.fetchFile(pigContext.getProperties(), fname)
   : &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FetchFileRet(localFile.getCanonicalFile(), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  And I checked. importTwoFilesTest still fails. I had to make mytest1.pig and mytest2.pig to mytest4.pig and mytest5.pig to get it to pass. The cleaner thing to do would be to clear the cache in QueryParserDriver before each test. But I think this should be ok for now as the cache is private.&lt;/p&gt;

&lt;p&gt; You can verify your patch by running&lt;br/&gt;
ant -Djavac.args=&quot;-Xlint -Xmaxwarns 1000&quot;  clean jar-withouthadoop test -Dtestcase=TestMacroExpansion  -logfile /tmp/log&lt;/p&gt;</comment>
                            <comment id="13419057" author="johannesch" created="Fri, 20 Jul 2012 12:15:47 +0100"  >&lt;p&gt;Hi Rohini,&lt;/p&gt;

&lt;p&gt;I changed the PIG to your suggestion. I would post this on the review board, but I currently get an Error 500 everytime I try to submit. Test cases in TestMacroExpansion all succeed. Could you take a look again please?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Johannes&lt;/p&gt;</comment>
                            <comment id="13419343" author="rohini" created="Fri, 20 Jul 2012 17:55:51 +0100"  >&lt;p&gt;Few comments:&lt;br/&gt;
1) Exception should not be thrown here as it will break Amazon s3 filesystem support.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
File macroFile = QueryParserUtils.getFileFromSearchImportPath(fname);
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (macroFile == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+                    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileNotFoundException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Could not find the specified file &apos;&quot;&lt;/span&gt;
+                                                    + fname + &lt;span class=&quot;code-quote&quot;&gt;&quot;&apos; using &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; search path&quot;&lt;/span&gt;);
+                }
+                localFileRet = FileLocalizer.fetchFile(pigContext.getProperties(),
+                                                       macroFile.getAbsolutePath());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  It should be&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
File localFile = QueryParserUtils.getFileFromSearchImportPath(fname);
localFileRet = localFile == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
 ? FileLocalizer.fetchFile(pigContext.getProperties(), fname)
   : &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FetchFileRet(localFile.getCanonicalFile(), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;   The reason is the macro path could be fully qualified s3 or some other supported file system path. So if we could not find it in the local filesystem with getFileFromSearchImportPath, then FileLocalizer.fetchFile will take care of looking at other filesystems and downloading it locally and returning the local file path. Also it will throw the FileNotFoundException if the file is missing.&lt;/p&gt;

&lt;p&gt;2.  Again for the same reason of s3 support, it is incorrect to use getFileFromSearchImportPath in this code. And getMacroFile already fetches the file.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
FetchFileRet localFileRet = getMacroFile(fname);
File macroFile = QueryParserUtils.getFileFromSearchImportPath(
+                    localFileRet.file.getAbsolutePath());
         &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-            in = QueryParserUtils.getImportScriptAsReader(localFileRet.file.getAbsolutePath());
+            in = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileReader(macroFile));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should be&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
in = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileReader(localFileRet.file));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3. For the tests, can you extract out the common code to a method to cut down on the repetition of code. Something like&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
importUsingSearchPathTest() {
   verifyImportUsingSearchPath(&lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp&quot;&lt;/span&gt;);
}

importUsingSearchPathTest2() {
   verifyImportUsingSearchPath(&lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;./mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp&quot;&lt;/span&gt;);
}

importUsingSearchPathTest3() {
   verifyImportUsingSearchPath(&lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;../mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp&quot;&lt;/span&gt;);
}

importUsingSearchPathTest4() {
   verifyImportUsingSearchPath(&lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/mytest2.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;/foo/bar&quot;&lt;/span&gt;);
}

verifyImportUsingSearchPath(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; macroFilePath, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; importFilePath, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; importSearchPath) {
.....
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4) negtiveUsingSearchPathTest2 and 3 are not very useful, unless some file with same name and garbage text are created in the search path location. That way we can ensure that the right file is being picked up and not the other file.&lt;/p&gt;</comment>
                            <comment id="13420655" author="johannesch" created="Mon, 23 Jul 2012 14:41:07 +0100"  >&lt;p&gt;Hi Rohini,&lt;/p&gt;

&lt;p&gt;thank you very much for your comments! I am still new to the project so some things slip my attention - your advice and patience are much appreciated!&lt;/p&gt;

&lt;p&gt;I attached the new patch incorporating your corrections. Could you take a look again?&lt;/p&gt;

&lt;p&gt;On a side note: Do you know what is the matter with reviews.apache.org? I still always get the &quot;Error 500&quot; message when I try to submit my patch for review.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13420992" author="rohini" created="Mon, 23 Jul 2012 23:10:35 +0100"  >&lt;p&gt;No issues. Even I am new to pig &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I was just applying what I learnt from the previous jira that I was working on about s3 support. &lt;/p&gt;

&lt;p&gt;I uploaded a patch in review board yesterday and it works fine. Not sure what problem you are facing.&lt;/p&gt;

&lt;p&gt;The patch looks good. Still have few comments though. Won&apos;t bother you more. These are the last ones from me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;1) Can we add createFile(&quot;/tmp/mytest2.pig&quot;, garbageMacroContent); as the first line in importUsingSearchPathTest, importUsingSearchPathTest2 and importUsingSearchPathTest3 and createFile(&quot;/foo/bar/tmp/mytest2.pig&quot;, garbageMacroContent); in importUsingSearchPathTest4. Just an additional way to ensure the right file is being picked up.&lt;/p&gt;

&lt;p&gt;2) Delete the mytest3.pig file in negativeUsingSearchPathTest, just in case negativeUsingSearchPathTest2 is executed first and a garbage mytest3.pig file is created. ie:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void negativeUsingSearchPathTest() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
	&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;code-quote&quot;&gt;&quot;mytest3.pig&quot;&lt;/span&gt;).delete();
    assertFalse(verifyImportUsingSearchPath(&lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/mytest3.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;mytest3.pig&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;));
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3) Use Assert.assertFalse instead of assertTrue(!verifyImportUsingSearchPath(..)) in negativeTests.&lt;/p&gt;

&lt;p&gt;4) Minor nitpick. It would be nice to declare the static variables (groupAndCountMacro and garbageMacroContent) in the beginning of the class. Not a big deal though.&lt;/p&gt;</comment>
                            <comment id="13422080" author="johannesch" created="Wed, 25 Jul 2012 09:22:40 +0100"  >&lt;p&gt;I included your corrections and good advice. I think the patch has evolved a lot thanks to you Rohini!&lt;/p&gt;</comment>
                            <comment id="13422496" author="rohini" created="Wed, 25 Jul 2012 19:46:42 +0100"  >&lt;p&gt;Thanks Johannes. My +1. &lt;/p&gt;

&lt;p&gt;I will ask Daniel to review and commit it. Will also ask you to add to the contributors list in jira so that this jira can be assigned to you. &lt;/p&gt;</comment>
                            <comment id="13422978" author="johannesch" created="Thu, 26 Jul 2012 10:22:40 +0100"  >&lt;p&gt;Thanks Rohini!&lt;/p&gt;

&lt;p&gt;Meanwhile I was able to create a review request after a hint on the mailing list.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/6150/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/6150/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13426921" author="daijy" created="Wed, 1 Aug 2012 22:37:42 +0100"  >&lt;p&gt;Patch committed to 0.10 branch. Thanks Johannes, Rohini!&lt;/p&gt;</comment>
                            <comment id="13426930" author="daijy" created="Wed, 1 Aug 2012 22:41:10 +0100"  >&lt;p&gt;Committed to trunk as well.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12537813" name="PIG-2729.patch" size="16982" author="johannesch" created="Wed, 25 Jul 2012 09:22:40 +0100"/>
                            <attachment id="12537565" name="PIG-2729.patch" size="15977" author="johannesch" created="Mon, 23 Jul 2012 14:41:07 +0100"/>
                            <attachment id="12537329" name="PIG-2729.patch" size="12228" author="johannesch" created="Fri, 20 Jul 2012 12:15:47 +0100"/>
                            <attachment id="12536846" name="PIG-2729.patch" size="6120" author="johannesch" created="Tue, 17 Jul 2012 17:48:05 +0100"/>
                            <attachment id="12530385" name="test-macros.tar.gz" size="847" author="johannesch" created="Thu, 31 May 2012 14:09:39 +0100"/>
                            <attachment id="12530407" name="use-search-path-for-imports.patch" size="1464" author="johannesch" created="Thu, 31 May 2012 17:37:37 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Jul 2012 21:58:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>256375</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyazaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98028</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Import search path property pig.import.search.path is now correctly used...</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>