<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:07:59 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1501/PIG-1501.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1501] need to investigate the impact of compression on pig performance</title>
                <link>https://issues.apache.org/jira/browse/PIG-1501</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;We would like to understand how compressing map results as well as well as reducer output in a chain of MR jobs impacts performance. We can use PigMix queries for this investigation.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12469190">PIG-1501</key>
            <summary>need to investigate the impact of compression on pig performance</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yanz">Yan Zhou</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Jul 2010 20:36:28 +0100</created>
                <updated>Fri, 17 Dec 2010 22:44:49 +0000</updated>
                            <resolved>Thu, 26 Aug 2010 18:15:28 +0100</resolved>
                                                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12888972" author="alangates" created="Fri, 16 Jul 2010 01:22:56 +0100"  >&lt;p&gt;Enabling compression directly on BinStorage as is will be bad.  bzip is splittable but very slow, and gzip isn&apos;t splittable.&lt;/p&gt;

&lt;p&gt;To do this we need to look at using SequenceFiles for moving data between MR jobs.  We can have a null key and value type of Tuple and use SequenceFileInput/OutputFormat.  This will enable us to use the block level compression in sequence files.  For now we can continue with the same serialization used in BinStorage, though in the future we may want to change this as well.&lt;/p&gt;</comment>
                            <comment id="12893746" author="yanz" created="Thu, 29 Jul 2010 19:04:16 +0100"  >&lt;p&gt;gzip and lzo2 are tried as the compression codecs;  TFile and RCFile are used as storage formats. The tests are PigMix&apos;s L3 and L11, and a variation of L3 with full projection, hereafter referred as L3_1,  in order to expand the temporary data size. (In some cases, multiple runs are executed, particularly in presence of doubted system fluctuations.)  End-to-end elapsed times are recorded.&lt;/p&gt;

&lt;p&gt;The results are on a 15-node cluster of  2 x Xeon L5420 2.50GHz/16G RAM boxes:&lt;/p&gt;

&lt;p&gt;          uncompressed                TFile(lzo)                  TFile(gzip)          RCFile(lzo2)&lt;br/&gt;
L3        133684504                   19674398                 11513958            18092681&lt;br/&gt;
                 1&apos;40&quot;                              1&apos;45&quot;                           1&apos;40&quot;                     1&apos;56&quot;&lt;br/&gt;
                                                                                                                       18094161&lt;br/&gt;
                                                                                                                         1&apos;46&quot;&lt;/p&gt;

&lt;p&gt;L3_1    3889095541              3697681875            2637742581         3675818160&lt;br/&gt;
                 3&apos;10&quot;                               4&apos;4&quot;                            3&apos;25&quot;                        3&apos;58&quot;&lt;br/&gt;
                                                  3697666122                                             3675816707&lt;br/&gt;
                                                       3&apos;10&quot;                                                            3&apos;22&quot;&lt;br/&gt;
                                                  3697674414&lt;br/&gt;
                                                       3&apos;5&quot;&lt;/p&gt;

&lt;p&gt;L11       25878480                   21368784                 15233146             21112892&lt;br/&gt;
                 1&apos;52&quot;                             1&apos;52&quot;                          1&apos;57&quot;                        1&apos;59&quot;&lt;br/&gt;
                                                                                                                       21112892&lt;br/&gt;
                                                                                                                          1&apos;59&quot;&lt;/p&gt;

&lt;p&gt;A few observations are in order:&lt;/p&gt;

&lt;p&gt;1) L3 has the highest compress ratio; while L3_1 and L11 much lower compression ratio;&lt;br/&gt;
2) gzip compress better compared with LZO2 with a little perf cost;&lt;br/&gt;
3) RC file should have seen much better compression as it&apos;s a columnar store. But the actual difference is marginal. It is probably because of L11&apos;s unique values, and many of  L3_1&apos;s random values like time stamp, plus the presence of map-typed columns. The conclusion from this observation is that compression of temporary intermediate data is not guaranteed to save disk space to a desired degree. It&apos;s subject to temporary data values being compressed upon. As result, this feature should be made configurable;&lt;br/&gt;
4)  The performance implications from these tests seem to be negligible within background noise or within a few percentages of the overall run times. But this is not conclusive yet. Larger and more real life queries would be more suitable for the comparison purpose ;&lt;br/&gt;
5) RCFile as above has not shown clear advantage in terms of better columnar compression ratio. Bu this observation could be data-sensitive.&lt;/p&gt;</comment>
                            <comment id="12893750" author="yanz" created="Thu, 29 Jul 2010 19:12:16 +0100"  >&lt;p&gt;The format in JIRA comment seems to be off mark. I&apos;m attching the test results as an attachment.&lt;/p&gt;</comment>
                            <comment id="12896616" author="yanz" created="Mon, 9 Aug 2010 17:54:17 +0100"  >&lt;p&gt;The data set in the last tests are small such that the performance difference was lost in background noise.  This test case generates more temporary data.&lt;/p&gt;

&lt;p&gt;In summary, lzo generates about 3% compression ration and sees 4x  speed improvement than uncompressed;  gzip generates less than 1% compress ratio but the speed is 1%-2% slower than uncompressed. This observation is in line with the general observation that gzip compresses better but performs worse.&lt;/p&gt;</comment>
                            <comment id="12896620" author="yanz" created="Mon, 9 Aug 2010 17:57:06 +0100"  >&lt;p&gt;Unless there is any objection raised in the coming week, I&apos;ll go with LZO compression on TFile with the default option to disable compression that will be the old behavoir.&lt;/p&gt;</comment>
                            <comment id="12896993" author="alangates" created="Tue, 10 Aug 2010 19:37:01 +0100"  >&lt;p&gt;It&apos;s not surprising that RCFile performs badly here, since in every case every column in the row is used.  This is known to be a bad use case for columnar storage.  While for some data sets the better compression may overcome this, I suspect that in the general case the stitching costs will overwhelm any compression wins (as shown here).&lt;/p&gt;

&lt;p&gt;I&apos;m +1 with going with lzo/Tfile.  As the lzo libs are GPL we cannot ship with that as default.  I wasn&apos;t clear from your last comment which you were proposing as the default.&lt;/p&gt;</comment>
                            <comment id="12897005" author="yanz" created="Tue, 10 Aug 2010 20:11:43 +0100"  >&lt;p&gt;The default is &lt;b&gt;not&lt;/b&gt; using the compression on the intermediate data, which is the existing behavoir.&lt;/p&gt;

&lt;p&gt;For RC file, it is just a bit better in terms of compression ration  than TFile. In terms of performance, the difference is within background noise. Stitching costs should be minimal. Actually, the full &quot;projection&quot; is the biggest advantage of RCFile over other columnar storage like  zebra. I was surprised to see the compression improvement over TFile is marginal. The only cause I can think of is that the compression ratio is too sensitive to the data to pre-determine or even pre-estimate.&lt;/p&gt;

&lt;p&gt;lzo is under GPL. But it appears that Hadoop installation has it, at least in my test cluster.&lt;/p&gt;</comment>
                            <comment id="12897046" author="alangates" created="Tue, 10 Aug 2010 22:21:50 +0100"  >&lt;p&gt;You can install lzo with Hadoop (as Yahoo does on its grids) but you cannot ship lzo with Hadoop or Pig.&lt;/p&gt;</comment>
                            <comment id="12897455" author="thejas" created="Wed, 11 Aug 2010 22:03:47 +0100"  >&lt;p&gt;Why was TFile chosen over SequenceFile ? I am wondering if the additional unused features of TFile (index, metadata) result in any overhead compared to SequenceFile. &lt;/p&gt;</comment>
                            <comment id="12897496" author="yanz" created="Wed, 11 Aug 2010 23:35:12 +0100"  >&lt;p&gt;Please refer to &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-3315&quot; title=&quot;New binary file format&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-3315&quot;&gt;&lt;del&gt;HADOOP-3315&lt;/del&gt;&lt;/a&gt; for overall Sequence File vs TFile comparison. It appears for compressed data, TFile performs better than SeqFile.&lt;/p&gt;</comment>
                            <comment id="12900947" author="yanz" created="Sat, 21 Aug 2010 01:52:29 +0100"  >&lt;p&gt;the compression codec is configurable on gzip or lzo; plus some minor changes&lt;/p&gt;</comment>
                            <comment id="12900950" author="yanz" created="Sat, 21 Aug 2010 01:56:51 +0100"  >&lt;p&gt;The internal Hudson results are as follows:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 9 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javac.  The applied patch generated 162 javac compiler warnings (more than the trunk&apos;s current 156 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 427 release audit warnings (more than the trunk&apos;s current 425 warnings).&lt;/p&gt;

&lt;p&gt;The 6 javac warnings are from the use of a deprecated PigMapReduce.sJobConf field. But that deprecation is for intended for external use only and internal use should be ok.&lt;/p&gt;

&lt;p&gt;The 2 release audit warnings are on two html files, SampleOptimizer.html and org.apache.pig.impl.util.Utils.html.&lt;/p&gt;</comment>
                            <comment id="12902065" author="thejas" created="Tue, 24 Aug 2010 21:58:26 +0100"  >&lt;p&gt;Comments on the patch -&lt;br/&gt;
TFileStorage.java &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getSchema() code that determines schema from data is same across TFileStorage and InterStorage . The code in BinStorage is also same, except that it does uses some deprecated functions. That can be moved to a common util class.   (Yes, I should have moved it to a util class when I created InterStorage)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;TestTmpFileCompression.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;both tests test if TFile is getting used. I think one test can be changed to check if InterStorage gets used when compression is not turned on, or a check can be added to any other existing test case that runs MR job, to see if InterStorage gets used there.&lt;/li&gt;
	&lt;li&gt;log setup code is duplicated between setup and resetLog() . can be moved to common func&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;SampleOptimizer.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The following comment can be updated -&lt;br/&gt;
// check that it is using BinaryStorage.&lt;br/&gt;
to&lt;br/&gt;
// check that it is using the temp file storage format.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;TFileRecordWriter.java ,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the comment in following section does not seem to be valid anymore -
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; TFileRecordWriter(Path file, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; codec, Configuration conf)
+                    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+        &lt;span class=&quot;code-comment&quot;&gt;// hardcoded to use gzip and 1M as block size: may wish to be made configurable&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="12902479" author="yanz" created="Wed, 25 Aug 2010 16:32:41 +0100"  >&lt;p&gt;Address the review comments, code rebasing on the latest trunk.&lt;/p&gt;</comment>
                            <comment id="12902484" author="thejas" created="Wed, 25 Aug 2010 16:53:54 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12902895" author="yanz" created="Thu, 26 Aug 2010 16:14:35 +0100"  >&lt;p&gt;This feature will save HDFS space used to store the intermediate data used by PIG and potentially improve query execution speed. In general, the more intermediate data generated, the more  storage and speedup benefits.&lt;/p&gt;

&lt;p&gt;There are no backward compatibility issues as result of this feature.&lt;/p&gt;

&lt;p&gt;An example is the following &quot;test.pig&quot; script:&lt;/p&gt;

&lt;p&gt;register pigperf.jar;&lt;br/&gt;
A = load &apos;/user/pig/tests/data/pigmix/page_views&apos; using org.apache.pig.test.udf.storefunc.PigPerformanceLoader()&lt;br/&gt;
    as (user, action, timespent:long, query_term, ip_addr, timestamp, estimated_revenue, page_info, page_links);&lt;br/&gt;
B1 = filter A by timespent == 4;&lt;br/&gt;
B = load &apos;/user/pig/tests/data/pigmix/queryterm&apos; as (query_term);&lt;br/&gt;
C = join B1 by query_term, B by query_term using &apos;skewed&apos; parallel 300;&lt;br/&gt;
D = distinct C parallel 300;&lt;br/&gt;
store D into &apos;output.lzo&apos;;&lt;/p&gt;

&lt;p&gt;which is launched as follows:&lt;/p&gt;

&lt;p&gt;java -cp /grid/0/gs/conf/current:/grid/0/jars/pig.jar -Djava.library.path=/grid/0/gs/hadoop/current/lib/native/Linux-i386-32 -Dpig.tmpfilecompression=true -Dpig.tmpfilecompression.codec=lzo org.apache.pig.Main ./test.pig&lt;/p&gt;</comment>
                            <comment id="12902938" author="thejas" created="Thu, 26 Aug 2010 18:15:28 +0100"  >&lt;p&gt;Patch committed to trunk. Thanks Yan!&lt;/p&gt;</comment>
                            <comment id="12904843" author="ashutoshc" created="Wed, 1 Sep 2010 01:06:31 +0100"  >&lt;p&gt;If its not backward-incompatible then is there any specific reason to default pig.tmpfilecompression to false. This seems to be a useful feature, so it should be true by default, no ?&lt;/p&gt;</comment>
                            <comment id="12904848" author="olgan" created="Wed, 1 Sep 2010 01:30:25 +0100"  >&lt;p&gt;Ashutosh,&lt;/p&gt;

&lt;p&gt;The reason it is off by default is because the default compression is gzip which is really slow and most of the time not what you want. Because of the licensing issue with lzo, users need to setup it on their own. Once they do the setup, they can enable the compression.&lt;/p&gt;</comment>
                            <comment id="12904868" author="yanz" created="Wed, 1 Sep 2010 02:44:48 +0100"  >&lt;p&gt;To be more eaccurate, the default compression would be gzip if the compression was made on by default.  Currently, the compression has to be specified and takes no default value. This is to ask user to take full appreciation of pros and cons of either compression method.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12453048" name="PIG-1501.patch" size="58092" author="yanz" created="Wed, 25 Aug 2010 16:32:41 +0100"/>
                            <attachment id="12452690" name="PIG-1501.patch" size="48450" author="yanz" created="Sat, 21 Aug 2010 01:52:29 +0100"/>
                            <attachment id="12451722" name="PIG-1501.patch" size="45990" author="yanz" created="Tue, 10 Aug 2010 23:32:43 +0100"/>
                            <attachment id="12450849" name="compress_perf_data.txt" size="1060" author="yanz" created="Thu, 29 Jul 2010 19:12:16 +0100"/>
                            <attachment id="12451602" name="compress_perf_data_2.txt" size="1250" author="yanz" created="Mon, 9 Aug 2010 17:54:17 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Jul 2010 00:22:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164985</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyar4f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96705</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This feature will save HDFS space used to store the intermediate data used by PIG and potentially improve query execution speed. In general, the more intermediate data generated, the more storage and speedup benefits.&lt;br/&gt;
&lt;br/&gt;
There are no backward compatibility issues as result of this feature.&lt;br/&gt;
&lt;br/&gt;
Two java properties are used to control the behavoir:&lt;br/&gt;
&lt;br/&gt;
pig.tmpfilecompression, default to false, tells if the temporary files should be compressed or not.  If true, then&lt;br/&gt;
&lt;br/&gt;
pig.tmpfilecompression.codec specifies which compression codec to use. Currently, PIG only accepts &amp;quot;gz&amp;quot; and &amp;quot;lzo&amp;quot; as possible values. Since LZO is under GPL license, Hadoop may need to be configured to use LZO codec. Please refer to &lt;a href=&quot;http://code.google.com/p/hadoop-gpl-compression/wiki/FAQ&quot;&gt;http://code.google.com/p/hadoop-gpl-compression/wiki/FAQ&lt;/a&gt; for details.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
An example is the following &amp;quot;test.pig&amp;quot; script:&lt;br/&gt;
&lt;br/&gt;
register pigperf.jar;&lt;br/&gt;
A = load &amp;#39;/user/pig/tests/data/pigmix/page_views&amp;#39; using org.apache.pig.test.udf.storefunc.PigPerformanceLoader()&lt;br/&gt;
as (user, action, timespent:long, query_term, ip_addr, timestamp, estimated_revenue, page_info, page_links);&lt;br/&gt;
B1 = filter A by timespent == 4;&lt;br/&gt;
B = load &amp;#39;/user/pig/tests/data/pigmix/queryterm&amp;#39; as (query_term);&lt;br/&gt;
C = join B1 by query_term, B by query_term using &amp;#39;skewed&amp;#39; parallel 300;&lt;br/&gt;
D = distinct C parallel 300;&lt;br/&gt;
store D into &amp;#39;output.lzo&amp;#39;;&lt;br/&gt;
&lt;br/&gt;
which is launched as follows:&lt;br/&gt;
&lt;br/&gt;
java -cp /path/to/pig/pig.jar -Djava.library.path=/path/to/lzo2/lib/native/Linux-i386-32 -Dpig.tmpfilecompression=true -Dpig.tmpfilecompression.codec=lzo org.apache.pig.Main ./test.pig</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>