<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:08:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2332/PIG-2332.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2332] JsonLoader/JsonStorage</title>
                <link>https://issues.apache.org/jira/browse/PIG-2332</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;A JsonLoader/JsonStorage implementation for Pig. This is based on Alan&apos;s implementation in the book (&lt;a href=&quot;http://ofps.oreilly.com/titles/9781449302641/load_and_store_funcs.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ofps.oreilly.com/titles/9781449302641/load_and_store_funcs.html&lt;/a&gt;). I made some minor changes:&lt;br/&gt;
1. Drop the jackson feature requires 1.01+. Since Hadoop 203+ bundles jackson 1.01, newer feature fails when running on Hadoop 203+.&lt;br/&gt;
2. Using Json format for schema. This borrows Dmitry&apos;s schema implememtation in PigStorage.&lt;br/&gt;
3. Some bug fixes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12528303">PIG-2332</key>
            <summary>JsonLoader/JsonStorage</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="daijy">Daniel Dai</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Oct 2011 18:58:25 +0100</created>
                <updated>Thu, 26 Apr 2012 21:32:55 +0100</updated>
                            <resolved>Wed, 9 Nov 2011 09:12:04 +0000</resolved>
                                                    <fixVersion>0.10.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13133327" author="azaroth" created="Sat, 22 Oct 2011 10:38:38 +0100"  >&lt;p&gt;Hi Daniel, from what I see this provides all the functionalities of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1914&quot; title=&quot;Support load/store JSON data in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1914&quot;&gt;PIG-1914&lt;/a&gt;, am I right?&lt;/p&gt;</comment>
                            <comment id="13136644" author="alangates" created="Thu, 27 Oct 2011 01:36:03 +0100"  >&lt;p&gt;One comment.  I didn&apos;t see any tests that check that it can properly read null data.  It looked like it was writing null data in one of the unit tests.  But I think we should check that it can read it too.  Changing one of the nightly tests to use studenttabnull10k would do it.&lt;/p&gt;

&lt;p&gt;Other than that, look good.  +1.&lt;/p&gt;</comment>
                            <comment id="13136753" author="dvryaboy" created="Thu, 27 Oct 2011 04:49:19 +0100"  >&lt;p&gt;Users will be so happy to see this!&lt;/p&gt;

&lt;p&gt;Giving it a brief read... I am not sure how useful this is if it can&apos;t read generic JSON, but only that stored by JsonStorage. I think the far more common use case is reading data not generated by Pig. You could at least provide an optional constructor that takes a pig schema as an argument and parses it to create the ResourceSchema object; that would make it far more useful (btw, we should have a way of communicating the &quot;load as ..&quot; clause to the loader that isn&apos;t a &quot;maybe, if you implement projection pushdown and we happen to need to push a projection&quot;). Auto-discovery is nice, but &lt;b&gt;some&lt;/b&gt; form of communicating the expected schema is a must for anything called JsonLoader that&apos;s going into the builtin package, IMO.&lt;/p&gt;

&lt;p&gt;You keep a protected ResourceFieldSchema[] &amp;#8211; why not ResourceSchema itself?&lt;/p&gt;

&lt;p&gt;A new parser is created for every tuple. That seems like it should not be needed (you have a comment to that effect). Let&apos;s fix that.&lt;/p&gt;

&lt;p&gt;Logging of bad records: we should put that into counters instead, and maybe log once per task, yeah? Log spam is a job killer.&lt;/p&gt;

&lt;p&gt;Magic strings (&quot;pig.jsonstorage.schema&quot; and the like) should be public final static String.&lt;/p&gt;

&lt;p&gt;We shouldn&apos;t copy+paste javadocs from the interface into the implementation &amp;#8211; javadoc will reproduce the inherited docs if specific ones aren&apos;t provided; the copy+paste approach doesn&apos;t give us anything, but does make it so that if we change the docs down the line, the change won&apos;t be reflected here.&lt;/p&gt;</comment>
                            <comment id="13137302" author="daijy" created="Thu, 27 Oct 2011 18:25:11 +0100"  >&lt;p&gt;Thanks Dmitry, I will address your comments today.&lt;/p&gt;</comment>
                            <comment id="13137355" author="daijy" created="Thu, 27 Oct 2011 19:23:43 +0100"  >&lt;blockquote&gt;&lt;p&gt;Giving it a brief read... I am not sure how useful this is if it can&apos;t read generic JSON, but only that stored by JsonStorage. I think the far more common use case is reading data not generated by Pig. You could at least provide an optional constructor that takes a pig schema as an argument and parses it to create the ResourceSchema object; that would make it far more useful (btw, we should have a way of communicating the &quot;load as ..&quot; clause to the loader that isn&apos;t a &quot;maybe, if you implement projection pushdown and we happen to need to push a projection&quot;). Auto-discovery is nice, but some form of communicating the expected schema is a must for anything called JsonLoader that&apos;s going into the builtin package, IMO.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure. Actually Alan and I discussed about adding auto-discovery, but we decide put that in the future work. Passing a schema to LoadFunc in the case schema file is missing is a good idea. I will add it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You keep a protected ResourceFieldSchema[] &#8211; why not ResourceSchema itself?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t have an opinion on that. Both sounds equal to me. Why do you like ResourceSchema?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A new parser is created for every tuple. That seems like it should not be needed (you have a comment to that effect). Let&apos;s fix that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I couldn&apos;t find the right API to do that. Do you have any hint?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Logging of bad records: we should put that into counters instead, and maybe log once per task, yeah? Log spam is a job killer.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good suggestion. I will add to counter instead. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Magic strings (&quot;pig.jsonstorage.schema&quot; and the like) should be public final static String.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will do&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We shouldn&apos;t copy+paste javadocs from the interface into the implementation &#8211; javadoc will reproduce the inherited docs if specific ones aren&apos;t provided; the copy+paste approach doesn&apos;t give us anything, but does make it so that if we change the docs down the line, the change won&apos;t be reflected here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I copied javadocs from Alan&apos;s code. The code is to demonstrate how to write a Load/StoreFunc, and the comments are so nice and I really want to keep it. I agree put that in javadoc is confusing. I can move that to the regular comment instead of javadoc.&lt;/p&gt;</comment>
                            <comment id="13137380" author="dvryaboy" created="Thu, 27 Oct 2011 19:40:27 +0100"  >&lt;p&gt;Ah I didn&apos;t realize that the comments are from Alan&apos;s code, not from Load/Store Func. &lt;/p&gt;

&lt;p&gt;Let&apos;s just add them as javadocs to the LoadFunc / StoreFunc interfaces.&lt;/p&gt;</comment>
                            <comment id="13137381" author="dvryaboy" created="Thu, 27 Oct 2011 19:42:32 +0100"  >&lt;p&gt;I like ResourceSchema because that leaves us room to add useful things to it that don&apos;t make sense in FieldsSchemas. It&apos;s just a question of using the right level of abstraction.&lt;/p&gt;</comment>
                            <comment id="13137475" author="daijy" created="Thu, 27 Oct 2011 21:18:51 +0100"  >&lt;p&gt;Ok, I will address these in the new patch. Thanks Dmitriy!&lt;/p&gt;</comment>
                            <comment id="13137476" author="daijy" created="Thu, 27 Oct 2011 21:19:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;Hi Daniel, from what I see this provides all the functionalities of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1914&quot; title=&quot;Support load/store JSON data in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1914&quot;&gt;PIG-1914&lt;/a&gt;, am I right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry for late reply. This version is based on the demo code in Alan&apos;s book, and this is the code we committed to maintain in builtin. I took a look of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1914&quot; title=&quot;Support load/store JSON data in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1914&quot;&gt;PIG-1914&lt;/a&gt;, seems &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1914&quot; title=&quot;Support load/store JSON data in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1914&quot;&gt;PIG-1914&lt;/a&gt; read the Json as a Pig map. And this version will read Json according to schema file.&lt;/p&gt;</comment>
                            <comment id="13137510" author="daijy" created="Thu, 27 Oct 2011 21:40:21 +0100"  >&lt;blockquote&gt;&lt;p&gt;Alan: I didn&apos;t see any tests that check that it can properly read null data&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I actually have a test case TestJsonLoaderStorage.testJsonStorage2 for that.&lt;/p&gt;</comment>
                            <comment id="13137763" author="daijy" created="Fri, 28 Oct 2011 00:58:22 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2332&quot; title=&quot;JsonLoader/JsonStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2332&quot;&gt;&lt;del&gt;PIG-2332&lt;/del&gt;&lt;/a&gt;-2.patch address Dmitriy&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13145685" author="daijy" created="Mon, 7 Nov 2011 18:41:31 +0000"  >&lt;p&gt;Hi, Dmitriy, do you want to take a look again?&lt;/p&gt;</comment>
                            <comment id="13145696" author="dvryaboy" created="Mon, 7 Nov 2011 18:46:54 +0000"  >&lt;p&gt;Yep, looking at this as soon as I am done checking the PigStorage changes.&lt;/p&gt;</comment>
                            <comment id="13146520" author="dvryaboy" created="Tue, 8 Nov 2011 20:05:26 +0000"  >&lt;p&gt;+1, looks good.&lt;/p&gt;

&lt;p&gt;Minor note (ok to commit once you fix):&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;schema = new ResourceSchema(org.apache.pig.impl.util.Utils.parseSchema(schemaString))&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think you need to full package here, you already import org.apache.pig.impl.util.Utils&lt;/p&gt;


&lt;p&gt;We should add a flag to enable compression, but we could do that in a separate ticket (at the same time we refactor PigStorage compression handling).&lt;/p&gt;
</comment>
                            <comment id="13146871" author="daijy" created="Wed, 9 Nov 2011 09:09:45 +0000"  >&lt;p&gt;Thanks Dmitriy!&lt;/p&gt;

&lt;p&gt;Attach &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2332&quot; title=&quot;JsonLoader/JsonStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2332&quot;&gt;&lt;del&gt;PIG-2332&lt;/del&gt;&lt;/a&gt;-3.patch to address Dmitriy&apos;s review comments and fix test-patch warnings.&lt;/p&gt;</comment>
                            <comment id="13146873" author="daijy" created="Wed, 9 Nov 2011 09:12:04 +0000"  >&lt;p&gt;Unit test pass. Test-patch result:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 25 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 473 release audit warnings (more than the trunk&apos;s current 461 warnings).&lt;/p&gt;

&lt;p&gt;All new java file has proper header. Other new files are benchmark file and pig script, not able to add release note. Ignore release audit warnings.&lt;/p&gt;

&lt;p&gt;Patch committed to both 0.10 branch and trunk.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12501660">PIG-1914</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12500213" name="PIG-2332-1.patch" size="44144" author="daijy" created="Fri, 21 Oct 2011 18:59:04 +0100"/>
                            <attachment id="12501195" name="PIG-2332-2.patch" size="36555" author="daijy" created="Fri, 28 Oct 2011 00:58:22 +0100"/>
                            <attachment id="12503034" name="PIG-2332-3.patch" size="36707" author="daijy" created="Wed, 9 Nov 2011 09:09:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 22 Oct 2011 09:38:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97930</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy3twf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>56168</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>