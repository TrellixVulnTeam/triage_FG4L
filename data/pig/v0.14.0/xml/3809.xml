<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:53:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3809/PIG-3809.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3809] AddForEach optimization doesn&apos;t set the alias of the added foreach</title>
                <link>https://issues.apache.org/jira/browse/PIG-3809</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;AddForEach inserts a foreach operator into the plan, but it doesn&apos;t set the alias of added foreach. This is usually okay, but if the foreach is followed by a join, the missing alias confuses Pig.&lt;/p&gt;

&lt;p&gt;For eg, consider the following query (dummy example to demonstrate the issue)-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = LOAD &apos;foo&apos; AS (x, y, z);
b = LOAD &apos;bar&apos; AS (i, j, k);
c = JOIN a BY x, b BY i;
d = FOREACH c GENERATE a::x, b::i;
DUMP d;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Without AddForEach optimization, the output schema of &apos;c&apos; will be as follows-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a::x, a::y, a::z, b::i, b::j, b::k
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But since &apos;a::y&apos;, &apos;a::z&apos;, &apos;b::j&apos;, and &apos;b::k&apos; are not used in &apos;d&apos;, a foreach operator will be inserted after a and b. That is-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = LOAD &apos;foo&apos; AS (x, y, z);
? = FOREACH a GENERATE x; -- no alias is set
b = LOAD &apos;bar&apos; AS (i, j, k);
? = FOREACH a GENERATE i; -- no alias is set
c = JOIN ? BY x, ? BY i;
d = FOREACH c GENERATE ?::x, ?::i;
DUMP d;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But due to missing aliases of these added foreach operators, the output schema of join is messed up. In fact, they show up as null, so printing the output schema of join gives &apos;null::x, null::i&apos;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12701291">PIG-3809</key>
            <summary>AddForEach optimization doesn&apos;t set the alias of the added foreach</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cheolsoo">Cheolsoo Park</assignee>
                                    <reporter username="cheolsoo">Cheolsoo Park</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 Mar 2014 17:54:44 +0000</created>
                <updated>Mon, 7 Jul 2014 19:08:07 +0100</updated>
                            <resolved>Sun, 16 Mar 2014 01:39:46 +0000</resolved>
                                                    <fixVersion>0.13.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13933645" author="cheolsoo" created="Thu, 13 Mar 2014 18:00:39 +0000"  >&lt;p&gt;The attached patch sets the alias of added foreach. I set it to the alias of its predecessor (what the foreach is added to) followed by &quot;_foreach&quot;. In my example, the output schema of join will be &quot;a_foreach::x, b_foreach::i&quot;.&lt;/p&gt;</comment>
                            <comment id="13933844" author="kyunghoj" created="Thu, 13 Mar 2014 18:34:07 +0000"  >&lt;p&gt;I became aware of this a few weeks ago, but didn&apos;t know it was a bug. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="13933882" author="kyunghoj" created="Thu, 13 Mar 2014 18:54:38 +0000"  >&lt;p&gt;By the way, I am wondering if there is a case that a user can see &quot;null&quot; or &quot;?&quot; in logical plan. My understanding is that optimization such as AddForEach is applied when PhysicalPlan is generated. Just curious. &lt;/p&gt;</comment>
                            <comment id="13933962" author="cheolsoo" created="Thu, 13 Mar 2014 19:57:00 +0000"  >&lt;p&gt;Hi Kyungho, that&apos;s a fair question. I discovered this issue while using Lipstick that visualizes the DAG graph. Here is the exception that I ran into-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;line 1, column 138&amp;gt; Duplicated alias in schema: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;::account_id
	at org.apache.pig.parser.QueryParserDriver.parseSchema(QueryParserDriver.java:121)
	at org.apache.pig.impl.util.Utils.parseSchema(Utils.java:191)
	at org.apache.pig.impl.util.Utils.getSchemaFromString(Utils.java:182)
	at com.netflix.lipstick.model.Utils.processSchema(Utils.java:53)
	at com.netflix.lipstick.model.operators.P2jLogicalRelationalOperator.setSchemaString(P2jLogicalRelationalOperator.java:325)
	at com.netflix.lipstick.adaptors.LOJsonAdaptor.&amp;lt;init&amp;gt;(LOJsonAdaptor.java:72)
	at com.netflix.lipstick.adaptors.LOJoinJsonAdaptor.&amp;lt;init&amp;gt;(LOJoinJsonAdaptor.java:49)
	at com.netflix.lipstick.P2jPlanGenerator.convertNodeToAdaptor(P2jPlanGenerator.java:177)
	at com.netflix.lipstick.P2jPlanGenerator.convertNodeToP2j(P2jPlanGenerator.java:151)
	at com.netflix.lipstick.P2jPlanGenerator.&amp;lt;init&amp;gt;(P2jPlanGenerator.java:73)
	at org.apache.pig.LipstickPigServer.launchPlan(LipstickPigServer.java:136)
	at org.apache.pig.PigServer.executeCompiledLogicalPlan(PigServer.java:1249)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In fact, anyone can build a tool similar to Lipstick, so I thought that it would be better to fix the root cause in Pig.&lt;/p&gt;</comment>
                            <comment id="13934015" author="rohini" created="Thu, 13 Mar 2014 20:38:02 +0000"  >&lt;p&gt;Wouldn&apos;t it be better to just set foreach.setAlias(op.getAlias()); instead of foreach.setAlias(op.getAlias() + &quot;_foreach&quot;);  ? Any reasons for adding the _foreach? I don&apos;t know how the propagation of the change in alias is done to steps after &quot;d&quot; if there were any. Would be better to check that as well if we are changing the name of the alias.&lt;/p&gt;</comment>
                            <comment id="13934280" author="cheolsoo" created="Thu, 13 Mar 2014 23:17:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rohini&quot; class=&quot;user-hover&quot; rel=&quot;rohini&quot;&gt;Rohini Palaniswamy&lt;/a&gt;, thank you for your comment. I initially thought I should avoid reusing alias names, but there is no real reason to do so.&lt;/p&gt;

&lt;p&gt;Uploading a new patch that reuses the its predecessor&apos;s name.&lt;/p&gt;</comment>
                            <comment id="13934631" author="kyunghoj" created="Fri, 14 Mar 2014 05:19:53 +0000"  >&lt;p&gt;I am not sure if I, not a committer, could chime in more. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I agree with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rohini&quot; class=&quot;user-hover&quot; rel=&quot;rohini&quot;&gt;Rohini Palaniswamy&lt;/a&gt;&apos;s concern, but wouldn&apos;t it be confusing, or even worse, create a problem if two different {{LogicalRelationalOperator}}s have same alias?&lt;/p&gt;</comment>
                            <comment id="13935175" author="cheolsoo" created="Fri, 14 Mar 2014 15:56:25 +0000"  >&lt;p&gt;Reusing aliases should be fine. My understanding is that the main purpose of aliases is to connect logical operators, but in this case, logical operators are already connected by &lt;tt&gt;plan.insertBetween(op, foreach, nextOp);&lt;/tt&gt;. So aliases are mostly for human readability. The data lineage is tracked by internal column uids. If aliases were used somewhere else, I would expect that it caused a bigger problem than this because they&apos;re totally missing as of now. Correct me if I am wrong.&lt;/p&gt;</comment>
                            <comment id="13935573" author="rohini" created="Fri, 14 Mar 2014 20:22:41 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13936372" author="cheolsoo" created="Sun, 16 Mar 2014 01:39:30 +0000"  >&lt;p&gt;Committed to trunk. Thanks Rohini!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12634498" name="PIG-3809-1.patch" size="571" author="cheolsoo" created="Thu, 13 Mar 2014 18:00:39 +0000"/>
                            <attachment id="12634582" name="PIG-3809-2.patch" size="558" author="cheolsoo" created="Thu, 13 Mar 2014 23:17:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Mar 2014 18:34:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>379637</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzn9kn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>379922</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>