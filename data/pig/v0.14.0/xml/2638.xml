<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:03:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2638/PIG-2638.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2638] Optimize BinInterSedes treatment of longs</title>
                <link>https://issues.apache.org/jira/browse/PIG-2638</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;During adventures in BinInterSedes, I noticed that Integers are written in an optimized fashion, but longs are not. Given that, in the general case, we have to write type information anyway, we might as well do the same optimization for Longs. That is to say, given that most longs won&apos;t have 8 bytes of information in them, why should we waste the space of serializing 8 bytes?&lt;/p&gt;

&lt;p&gt;This patch takes its inspiration from varint encoding per these two sources:&lt;br/&gt;
&lt;a href=&quot;http://javasourcecode.org/html/open-source/mahout/mahout-0.5/org/apache/mahout/math/Varint.java.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://javasourcecode.org/html/open-source/mahout/mahout-0.5/org/apache/mahout/math/Varint.java.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/encoding&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://developers.google.com/protocol-buffers/docs/encoding&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though, nicely enough, we don&apos;t actually have to use varints. Since we HAVE to write an 8 byte type header, we might as well include the number of bytes we had to write. I use zig zag encoding so that in the case of negative numbers, we see the benefit.&lt;/p&gt;

&lt;p&gt;This should decrease the amount of serialized long data by a good bit.&lt;/p&gt;

&lt;p&gt;Patch incoming. It passes test-commit in 0.11.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12550080">PIG-2638</key>
            <summary>Optimize BinInterSedes treatment of longs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jcoveney">Jonathan Coveney</assignee>
                                    <reporter username="jcoveney">Jonathan Coveney</reporter>
                        <labels>
                    </labels>
                <created>Sat, 7 Apr 2012 19:10:12 +0100</created>
                <updated>Fri, 22 Feb 2013 04:53:35 +0000</updated>
                            <resolved>Thu, 31 May 2012 18:47:31 +0100</resolved>
                                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13281087" author="jcoveney" created="Tue, 22 May 2012 17:34:27 +0100"  >&lt;p&gt;This is a newer version that is better. I basically just used the same method we use for Ints (where if it&apos;s a byte write a byte, a short white a short, and so on) instead of the previous method. This does mean that for anything larger than an int the whole long will be written, but meh. It&apos;s an improvement, and there is no performance degradation at all, so it&apos;s an easy win IMHO.&lt;/p&gt;

&lt;p&gt;Calipers output:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 New
size    us linear runtime
   5  30.0 =====
  10  55.5 ==========
  15  82.0 ===============
  20 105.4 ====================
  25 135.7 ==========================
  30 156.1 ==============================

Old
   5  30.7 =====
  10  55.5 ==========
  15  79.5 ===============
  20 105.2 ====================
  25 130.4 =========================
  30 156.0 ==============================
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The benchmark was simply serializing a tuple of size x and then immediately deserializing it. As you can see, no difference, and the version with the patch will take up less space on disk.&lt;/p&gt;</comment>
                            <comment id="13283785" author="jcoveney" created="Fri, 25 May 2012 23:28:10 +0100"  >&lt;p&gt;Bump. This bad boy is incremental but has literally no downside. I&apos;m beginning to think we should rip out the custom intermediate and replace it with Kryo but until such a time, I think this is appropriate.&lt;/p&gt;</comment>
                            <comment id="13286316" author="billgraham" created="Thu, 31 May 2012 05:52:13 +0100"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Looks good to me.&lt;/p&gt;</comment>
                            <comment id="13286345" author="ashutoshc" created="Thu, 31 May 2012 06:44:44 +0100"  >&lt;p&gt;Another option is to use VInts and its friends which are used in core hadoop and in other parts of the ecosystem. &lt;a href=&quot;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/io/VIntWritable.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/common/docs/current/api/org/apache/hadoop/io/VIntWritable.html&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="13286758" author="jcoveney" created="Thu, 31 May 2012 18:23:46 +0100"  >&lt;p&gt;Ashutosh,&lt;/p&gt;

&lt;p&gt;Given the way that we currently serialize values, there is actually no gain to using varint, because we are, in all cases, writing a byte value that specifies what is being serialized. In fact we can do better than varint... instead of needing a bit flag at the head of every byte, we can just have something like the follows:&lt;/p&gt;

&lt;p&gt;INT_1BYTE,&lt;br/&gt;
INT_2BYTE,&lt;br/&gt;
INT_3BYTE,&lt;br/&gt;
INT_4BYTE&lt;/p&gt;

&lt;p&gt;and the same analogue for the long. Given that currently there is no way NOT to write that object identification byte, the gain from varint/varlong doesn&apos;t exist, since you can do it more compactly (given what we do) anyway). However, as I work to erase that need (in SchemaTuple, for example), varint/varlong begin to make a lot more sense.&lt;/p&gt;

&lt;p&gt;I think this patch is some really easy low hanging fruit, and in the future I have some ideas around how to greatly improve serialization performance that will be more sweeping.&lt;/p&gt;

&lt;p&gt;Would love your thoughts.&lt;/p&gt;</comment>
                            <comment id="13286772" author="jcoveney" created="Thu, 31 May 2012 18:45:55 +0100"  >&lt;p&gt;Committed, revision 1344830. There are definitely gains in this space, but the big one IMHO is doing intelligent buffering.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12521829" name="PIG-2638-0.patch" size="7712" author="jcoveney" created="Sat, 7 Apr 2012 19:11:42 +0100"/>
                            <attachment id="12528618" name="PIG-2638-1.patch" size="6578" author="jcoveney" created="Tue, 22 May 2012 17:34:27 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 May 2012 04:52:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>234981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyayef:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97884</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>