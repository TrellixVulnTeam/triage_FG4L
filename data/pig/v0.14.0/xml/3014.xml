<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:54:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3014/PIG-3014.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3014] CurrentTime() UDF has undesirable characteristics</title>
                <link>https://issues.apache.org/jira/browse/PIG-3014</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;As part of the explanation of the new DateTime datatype I noticed that we had added a CurrentTime() UDF. The issue with this UDF is that it returns the current time &lt;em&gt;of every exec invocation&lt;/em&gt;, which can lead to confusing results. In &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1431&quot; title=&quot;Current DateTime UDFs: ISONOW(), UNIXNOW()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1431&quot;&gt;&lt;del&gt;PIG-1431&lt;/del&gt;&lt;/a&gt; I proposed a way such that every instance of the same NOW() will return the same time, which I think is better. Would enjoy thoughts.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12613930">PIG-3014</key>
            <summary>CurrentTime() UDF has undesirable characteristics</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jcoveney">Jonathan Coveney</assignee>
                                    <reporter username="jcoveney">Jonathan Coveney</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Oct 2012 18:07:15 +0000</created>
                <updated>Mon, 14 Oct 2013 17:45:52 +0100</updated>
                            <resolved>Fri, 30 Nov 2012 23:54:04 +0000</resolved>
                                                    <fixVersion>0.12.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13490820" author="alangates" created="Mon, 5 Nov 2012 18:50:11 +0000"  >&lt;p&gt;+1.  It&apos;s hard to envision why you&apos;d want the current behavior.&lt;/p&gt;</comment>
                            <comment id="13491090" author="jcoveney" created="Tue, 6 Nov 2012 00:35:21 +0000"  >&lt;p&gt;I&apos;ve attached a fix and a couple light tests. Note that I uncovered &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3032&quot; title=&quot;Issue with DateTime serialization in BinInterSedes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3032&quot;&gt;PIG-3032&lt;/a&gt; while developing this, though this isn&apos;t affected by that bug.&lt;/p&gt;</comment>
                            <comment id="13491270" author="zjshen" created="Tue, 6 Nov 2012 07:27:58 +0000"  >&lt;p&gt;Hi Jonathan,&lt;/p&gt;

&lt;p&gt;thanks for correcting my error. According to you patch, I&apos;ve also some comments.&lt;/p&gt;

&lt;p&gt;As far as I know, getArgToFuncMapping() is called when generating the logic plan, while exec() is called at runtime. Hence the DateTime object generated in getArgToFuncMapping() reflects the timestamp when the pig latin statements are parsed. If there&apos;s several statements containing CurrentTime(), the timestamps will be similar. Please correct me if I&apos;m wrong.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;p&gt;&quot;&lt;br/&gt;
A = load &apos;justSomeRows&apos; using mock.Storage();&lt;br/&gt;
B = foreach A generate *, CurrentTime();&lt;br/&gt;
......&lt;br/&gt;
C = foreach B generate *, CurrentTime();&lt;br/&gt;
&quot;&lt;/p&gt;

&lt;p&gt;In this case, there&apos;re a bunch of statements between B and C. In B, we want to get the timestamp before executing the statements, while in C, want to get the timestamp after executing them. The difference between the two timestamps should reflect the runtime interval instead of the interval between parsing two CurrentTime() UDFs.&lt;/p&gt;

&lt;p&gt;I think the more accurate behavior of CurrentTime() should be generating a unique timestamp for a statement when it is executed.&lt;/p&gt;</comment>
                            <comment id="13491288" author="jcoveney" created="Tue, 6 Nov 2012 07:59:48 +0000"  >&lt;p&gt;Zhijie,&lt;/p&gt;

&lt;p&gt;I think that the semantics in my patch are sufficient. You are correct that in some cases, they might be &quot;closer together&quot; than we might want, but what does that even mean? The semantics are not well specified. What if the optimizer in fact put C before B? What if the optimizer had them run at the same time? What if my cluster happens to be tuned to a certain workload...and so on and so on. I think as long as &quot;now&quot; is defined as &quot;after the script runs,&quot; and as long as it is the same for every value in a given relation that uses it, that&apos;s the only guarantee that we can make. We can document this limitation (i.e. that &quot;now&quot; is a more or less arbitrary value in between the beginning of your script and when it is finished being parsed).&lt;/p&gt;

&lt;p&gt;I suppose there would be some utility in a CurrentTime() where the time is with respect to the beginning of execution, but it could easily suffer from the same issue if it was in a foreach with a really time consuming value, where the &quot;now&quot; value quickly becomes stale. I think the incremental gain is minimal, and the incremental complexity is quite high. If you deeply disagree, though, we can discuss how to do it. I think the following would work: per each instantiation of the UDF, we create two unique files and put them in HDFS (I do not think the distributed cache will work in this specific case, but it may). Those files will be the constructor argument. On first execution, each mapper tries to delete the file. Since delete is atomic, only one should succeed. This is the leader. It will record the current time and serialize it to the second file. We would have to coordinate atomicity...perhaps it could write a magic value at the end of the serialized date time, so all of the mappers would read the file until they read the magic number, and then they&apos;d know it was done.&lt;/p&gt;

&lt;p&gt;This would be pretty complicated for what I see as a minimal gain, but it would probably be a &quot;more correct&quot; now() implementation. I do not know if Hadoop has a more convenient coordination mechanism between mappers (this sort of goes against the whole point).&lt;/p&gt;

&lt;p&gt;I welcome more thoughts&lt;/p&gt;</comment>
                            <comment id="13491301" author="jcoveney" created="Tue, 6 Nov 2012 08:13:46 +0000"  >&lt;p&gt;(as a sidenote, I was thinking about this, and IF (big if) Hadoop can guarantee an atomic write action (I don&apos;t think it can?) then we only need one file. Each mapper can attempt to read it, and if it is empty, it appends the current time, and then it reads the first date time in that file. It would avoid a race condition because of the atomic write action. If writing isn&apos;t atomic though you&apos;d have to abuse some atomic action for coordination, a la delete above. In fact, we could even make this a generic API that let&apos;s you coordinate some runtime value for udf invocations, but once again, it&apos;s not really a pattern we want to encourage).&lt;/p&gt;

&lt;p&gt;Now I sort of want to do this just for the challenge of it...&lt;/p&gt;</comment>
                            <comment id="13491879" author="jcoveney" created="Tue, 6 Nov 2012 22:14:09 +0000"  >&lt;p&gt;I think this patch is a good compromise. I was talking to Bill earlier today and he mentioned that we have in the job conf a timestamp for around when a given job starts. IMHO this is close enough, and it will be the same. Easy peasy.&lt;/p&gt;</comment>
                            <comment id="13494789" author="cheolsoo" created="Sat, 10 Nov 2012 22:49:34 +0000"  >&lt;p&gt;Hi Jonathan,&lt;/p&gt;

&lt;p&gt;I agree with using the job start time. That sounds reasonable to me.&lt;/p&gt;

&lt;p&gt;But I have two comments regarding your patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The Apache license header shouldn&apos;t be removed in &lt;tt&gt;src/org/apache/pig/builtin/CurrentTime.java&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;After applying your patch, &lt;tt&gt;src/org/apache/pig/builtin/CurrentTime.java&lt;/tt&gt; looks like this. Can you please fix indentations?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
     * This is a &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; constructor &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Pig reflection purposes. It should
     * never actually be used.
 */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; CurrentTime() {}

    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; DateTime exec(Tuple input) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isInitialized) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; dateTimeValue = UDFContext.getUDFContext().getJobConf().get(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.job.submitted.timestamp&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (dateTimeValue == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ExecException(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.job.submitted.timestamp was not set!&quot;&lt;/span&gt;);
    }   
            dateTime = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DateTime(&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.parseLong(dateTimeValue));
            isInitialized  = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }   
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; dateTime;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13499503" author="cheolsoo" created="Sat, 17 Nov 2012 19:51:30 +0000"  >&lt;p&gt;I was going to commit the patch after fixing whitespaces.&lt;/p&gt;

&lt;p&gt;But I realized that the new test case &lt;tt&gt;TestCurrentTime&lt;/tt&gt; fails with hadoop-2.0.x.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ERROR 0: pig.job.submitted.timestamp was not set!
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13499933" author="cheolsoo" created="Sun, 18 Nov 2012 22:29:03 +0000"  >&lt;p&gt;Here is how I ended up fixing the test with hadoop-2.0.x:&lt;/p&gt;

&lt;p&gt;from&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;MapReduceLauncher.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Job job : jc.getWaitingJobs()) {
    job.getJobConf().set(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.script.submitted.timestamp&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.toString(scriptSubmittedTimestamp));
    job.getJobConf().set(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.job.submitted.timestamp&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.toString(&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis()));
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;MapReduceLauncher.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Job job : jc.getWaitingJobs()) {
    JobConf jobConfCopy = job.getJobConf();
    jobConfCopy.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.script.submitted.timestamp&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.toString(scriptSubmittedTimestamp));
    jobConfCopy.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.job.submitted.timestamp&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.toString(&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis()));
    job.setJobConf(jobConfCopy);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Apparently, &lt;tt&gt;job.getJobConf()&lt;/tt&gt; returns a different JobConf object each time, so properties that are set by &lt;tt&gt;job.getJobConf().set()&lt;/tt&gt; do not last at all.&lt;/p&gt;

&lt;p&gt;This is quite surprising to me because this means that there are many other properties that are not properly set with hadoop-2.0.x now. I will open another jira to get this issue fixed.&lt;/p&gt;</comment>
                            <comment id="13499939" author="cheolsoo" created="Sun, 18 Nov 2012 22:39:12 +0000"  >&lt;p&gt;Attaching a patch that makes &lt;tt&gt;TestCurrentTime&lt;/tt&gt; pass in both hadoop 20 and 23. I also fixed whitespace and Apache header issues that I mentioned in a previous comment.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13500155" author="rohini" created="Mon, 19 Nov 2012 11:19:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Apparently, job.getJobConf() returns a different JobConf object each time, so properties that are set by job.getJobConf().set() do not last at all.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;  This is got me worried. I don&apos;t see a clone happening in mapreduce code. Were you able to get to the root cause of the behaviour?&lt;/p&gt;</comment>
                            <comment id="13500450" author="jcoveney" created="Mon, 19 Nov 2012 18:10:51 +0000"  >&lt;p&gt;Thanks for fixing my patch over the weekend, Cheolsoo! Feel free to commit, or I can later. The reviewer has become the reviewed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I agree with Rohini that we need to be vigilant about this getJobConf situation.&lt;/p&gt;</comment>
                            <comment id="13503931" author="rohini" created="Mon, 26 Nov 2012 17:49:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t see a clone happening in mapreduce code. Were you able to get to the root cause of the behaviour?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;   I was looking at the wrong version of hadoop code. H23 indeed returns a copy of the JobConf for jobcontrol.Job. Checked that we don&apos;t do a set in other places. Even the submitted.timestamp that was set was not being used in code elsewhere before this case. May be it was just set for debugging purposes. So we should be good with 0.9 and 0.10 for h23. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; JobConf getJobConf() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; JobConf(&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.getJob().getConfiguration());
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt; My +1 as well. &lt;/p&gt;</comment>
                            <comment id="13505929" author="cheolsoo" created="Wed, 28 Nov 2012 21:42:57 +0000"  >&lt;p&gt;Committed to trunk. Thanks Jonathan and Rohini!&lt;/p&gt;</comment>
                            <comment id="13507614" author="julienledem" created="Fri, 30 Nov 2012 19:59:49 +0000"  >&lt;p&gt;I see a failing test:&lt;br/&gt;
org.apache.pig.test.TestBuiltin.testConversionBetweenDateTimeAndString&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.pig.builtin.CurrentTime.exec(CurrentTime.java:41)&lt;br/&gt;
	at org.apache.pig.test.TestBuiltin.testConversionBetweenDateTimeAndString(TestBuiltin.java:450)&lt;/p&gt;</comment>
                            <comment id="13507654" author="cheolsoo" created="Fri, 30 Nov 2012 21:15:03 +0000"  >&lt;p&gt;Hi Julien,&lt;/p&gt;

&lt;p&gt;Sorry for that. It is failing because &lt;tt&gt;TestBuiltin&lt;/tt&gt; is not set &lt;tt&gt;pig.job.submitted.timestamp&lt;/tt&gt;. I will get it fixed now.&lt;/p&gt;</comment>
                            <comment id="13507663" author="cheolsoo" created="Fri, 30 Nov 2012 21:30:04 +0000"  >&lt;p&gt;Attached a patch that fixes &lt;tt&gt;TestBuiltin&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;The CurrentTime() must get called only in the back-end because it reads the value of &quot;pig.job.submitted.timestamp&quot; out of JobConf. But the unit test case was calling it in the front-end, resulting in a NullPointerException.&lt;/p&gt;

&lt;p&gt;Since the test case is not valid, I simply removed it.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13507725" author="rohini" created="Fri, 30 Nov 2012 22:53:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Since the test case is not valid, I simply removed it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1. TestCurrentTime covers CurrentTime udf adequately.&lt;/p&gt;

&lt;p&gt;Just an observation though. All builtin udf tests are in TestBuiltin, but CurrentTime alone has a separate test class with just one test. Should we move that to TestBuiltin?&lt;/p&gt;</comment>
                            <comment id="13507731" author="cheolsoo" created="Fri, 30 Nov 2012 22:58:55 +0000"  >&lt;p&gt;Thanks Rohini.&lt;/p&gt;

&lt;p&gt;In fact, I asked that question on the dev mailing list a while ago:&lt;br/&gt;
&lt;a href=&quot;http://search-hadoop.com/m/OVyoR1Ktpcy/Adding+new+test+cases+to+TestBuiltin.java&amp;amp;subj=Adding+new+test+cases+to+TestBuiltin+java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/OVyoR1Ktpcy/Adding+new+test+cases+to+TestBuiltin.java&amp;amp;subj=Adding+new+test+cases+to+TestBuiltin+java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Julien said that each built-in UDF should have its own test suite, so I followed it in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2881&quot; title=&quot;Add SUBTRACT eval function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2881&quot;&gt;&lt;del&gt;PIG-2881&lt;/del&gt;&lt;/a&gt;. I guess that the same applies to CurrentTime().&lt;/p&gt;

&lt;p&gt;Please anyone correct me if I am wrong.&lt;/p&gt;</comment>
                            <comment id="13507750" author="julienledem" created="Fri, 30 Nov 2012 23:25:26 +0000"  >&lt;p&gt;I think it&apos;s better to have one test class per UDF.&lt;br/&gt;
Usually tests are grouped per class or functional group of classes.&lt;br/&gt;
All builtin UDFs do not make a functional group as they have various different purposes. It just makes a huge Test class which is undesirable.&lt;/p&gt;</comment>
                            <comment id="13507770" author="cheolsoo" created="Fri, 30 Nov 2012 23:54:04 +0000"  >&lt;p&gt;Patch committed to trunk.&lt;/p&gt;</comment>
                            <comment id="13507825" author="rohini" created="Sat, 1 Dec 2012 01:41:38 +0000"  >&lt;p&gt;Ah. I had forgotten about that question. Agree with Julien.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12465692">PIG-1431</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12552192" name="PIG-3014-0.patch" size="7966" author="jcoveney" created="Tue, 6 Nov 2012 00:35:21 +0000"/>
                            <attachment id="12552347" name="PIG-3014-1.patch" size="5596" author="jcoveney" created="Tue, 6 Nov 2012 22:14:09 +0000"/>
                            <attachment id="12554095" name="PIG-3014-2.patch" size="7037" author="cheolsoo" created="Sun, 18 Nov 2012 22:39:12 +0000"/>
                            <attachment id="12555562" name="PIG-3014-3.patch" size="549" author="cheolsoo" created="Fri, 30 Nov 2012 21:30:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Nov 2012 18:50:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>252821</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy730n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75146</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>