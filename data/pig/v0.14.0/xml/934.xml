<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:09:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-934/PIG-934.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-934] Merge join implementation currently does not seek to right point on the right side input based on the offset provided by the index</title>
                <link>https://issues.apache.org/jira/browse/PIG-934</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;We use POLoad to seek into right file which has the following code: &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   public void setUp() throws IOException{

        String filename = lFile.getFileName();

        loader = (LoadFunc)PigContext.instantiateFuncFromSpec(lFile.getFuncSpec());        

        is = FileLocalizer.open(filename, pc);

        loader.bindTo(filename , new BufferedPositionedInputStream(is), this.offset, Long.MAX_VALUE);

    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Between opening the stream and bindTo we do not seek to the right offset. bindTo itself does not perform any seek.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12434075">PIG-934</key>
            <summary>Merge join implementation currently does not seek to right point on the right side input based on the offset provided by the index</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ashutoshc">Ashutosh Chauhan</assignee>
                                    <reporter username="pkamath">Pradeep Kamath</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Aug 2009 19:26:09 +0100</created>
                <updated>Thu, 25 Mar 2010 00:12:46 +0000</updated>
                            <resolved>Wed, 2 Sep 2009 02:14:14 +0100</resolved>
                                    <version>0.4.0</version>
                                    <fixVersion>0.4.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12748070" author="pkamath" created="Wed, 26 Aug 2009 19:30:56 +0100"  >&lt;p&gt;To get an idea of how this seeking in case of regular loads in map tasks, I looked at PigSlice.java, the seek happens in the init() code before bindTo():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void init(DataStorage base) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        ..

        fsis = base.asElement(base.getActiveContainer(), file).sopen();

        fsis.seek(start, FLAGS.SEEK_CUR);

 
        end = start + getLength();


        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (file.endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.bz&quot;&lt;/span&gt;) || file.endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.bz2&quot;&lt;/span&gt;)) {

            is = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CBZip2InputStream(fsis, 9);

        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (file.endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.gz&quot;&lt;/span&gt;)) {

            is = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GZIPInputStream(fsis);

            &lt;span class=&quot;code-comment&quot;&gt;// We can&apos;t tell how much of the underlying stream GZIPInputStream
&lt;/span&gt;
            &lt;span class=&quot;code-comment&quot;&gt;// has actually consumed
&lt;/span&gt;
            end = &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.MAX_VALUE;

        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {

            is = fsis;

        }

        loader.bindTo(file.toString(), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedPositionedInputStream(is,

                start), start, end);

    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think we need a FileLocalizer.sOpenSingleFile() method which can return a SeekableInputStream and we can use that in setup() in POLoad.&lt;br/&gt;
Something along the lines of :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; InputStream open(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fileSpec, PigContext pigContext) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        fileSpec = checkDefaultPrefix(pigContext.getExecType(), fileSpec);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!fileSpec.startsWith(LOCAL_PREFIX)) {
            init(pigContext);
            ElementDescriptor elem = pigContext.getDfs().asElement(fullPath(fileSpec, pigContext));
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; elem.sopen();
        }
        &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            fileSpec = fileSpec.substring(LOCAL_PREFIX.length());
            &lt;span class=&quot;code-comment&quot;&gt;//buffering because we only want buffered streams to be passed to load functions.
&lt;/span&gt;            /*&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedInputStream(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(fileSpec));*/
            init(pigContext);
            ElementDescriptor elem = pigContext.getLfs().asElement(fullPath(fileSpec, pigContext));
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; elem.sopen;
        }
    }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; The above code would only work with single files and not dirs which should be ok for merge join. We should probably set this up with a new constructor in POLoad which also indicates that a single file is being processed.&lt;/p&gt;
</comment>
                            <comment id="12749033" author="ashutoshc" created="Sat, 29 Aug 2009 00:45:50 +0100"  >&lt;p&gt;I think instead of creating a new method, better is to overload FileLocalizer.open() to have a consistent api. &lt;br/&gt;
Currently, there is &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
InputStream open(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fileSpec, PigContext pigContext)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add an Overload method like this and within that fallback to previous method, if there is no need to seek.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
InputStream open(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fileSpec, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; offset, PigContext pigContext){
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (offset == 0)
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; open(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fileSpec, PigContext pigContext);
   &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// first open, then seek and then &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This ensures minimum impact to clients of this api. &lt;/p&gt;

&lt;p&gt;Attaching a patch which does this.&lt;/p&gt;</comment>
                            <comment id="12749036" author="ashutoshc" created="Sat, 29 Aug 2009 00:56:15 +0100"  >&lt;p&gt;Also this doesnt warrant a new constructor in POLoad for seeking.&lt;/p&gt;</comment>
                            <comment id="12749042" author="pkamath" created="Sat, 29 Aug 2009 01:21:27 +0100"  >&lt;p&gt;The reason I thought a separate function with a &quot;singleFile&quot; in the name was needed was because the current FileLocalizer.open() can handle directories and hence returns a DataStorageInputStreamIterator which internally iterates over the underlying multiple streams of the files in the directory. Keeping the same name may give the impression that the same capability is present even for the version which seeks to an offset. Seeking to an offset would only work for a single file - hence maybe have a separate function where the name implies this restriction might be cleaner.&lt;/p&gt;</comment>
                            <comment id="12749188" author="ashutoshc" created="Sat, 29 Aug 2009 22:39:54 +0100"  >&lt;p&gt;&amp;gt;&amp;gt; Seeking to an offset would only work for a single file - hence maybe have a separate function...&lt;/p&gt;

&lt;p&gt;Since open() returns an input stream it is not hard to conceive of usecase when one would want to seek into that stream even when filespec points to a directory or a glob. We have to define the semantics here. What does seeking in a directory/glob means? One reasonable answer is to view all the files in directory/glob as one big logical file and offset as an offset in this logical file and then seek into this file. Something along the lines of :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
iterator = DataStreamIterator
bytesSeen = 0;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(itertor.hasNext()){
  open current file pointed by iterator
  bytesSeen += current file length
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bytesSeen &amp;gt; offset)
    bind to adjusted offset in current file and &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;; 
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;But since there is no requirement for such currently, we can catch the situation when seeking is asked for directory/glob and throw an exception (as is done in this patch).  Later on, if we decide to support it instead of throwing exception, we can implement whatever semantics we decide on. If we create a new function with separate name it will be confusing to do these changes later on. Moreover, if there is a different function, user of the api needs to &quot;know&quot; about it and deal with it (e.g., need of special constructor in POLoad). Presence/absence of offset parameter in argument list I think is a sufficient indicator to tell which version of overloaded open() to call if there is a need for seek. &lt;br/&gt;
Thoughts?&lt;/p&gt;</comment>
                            <comment id="12749196" author="dvryaboy" created="Sat, 29 Aug 2009 23:41:19 +0100"  >&lt;p&gt;Throwing an exception when a seek is past the file boundary seems acceptable to me (and preferable to adding new functions and changing upstream code that shouldn&apos;t care about this detail). Especially since if there is a way to get a consistent ordering among files in a directory, it&apos;s trivial to later update this code to seek past file boundaries and into the next file.&lt;/p&gt;</comment>
                            <comment id="12749669" author="pkamath" created="Tue, 1 Sep 2009 00:04:46 +0100"  >&lt;p&gt;Agree with both the above comments. I was wondering if instead of returning an InputStream, if the code could return a SeekableInputStream it would be usable in other scenarios (like creating a CBZip2InputStream out of it - this would be needed for &lt;a href=&quot;http://issues.apache.org/jira/browse/PIG-930&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/PIG-930&lt;/a&gt; for example). Callers only needing an InputStream would still be able to use the method.&lt;/p&gt;</comment>
                            <comment id="12749768" author="ashutoshc" created="Tue, 1 Sep 2009 06:28:45 +0100"  >&lt;p&gt;Explictly returning SeekableInputStream instead of InputStream in this case is a good idea. Apart from helping &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-930&quot; title=&quot;merge join should handle compressed bz2 sorted files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-930&quot;&gt;PIG-930&lt;/a&gt; it also reinforces the idea that when version of open() with offset parameter is called seek is requested and thus will be performed.  Updated the patch reflecting the same.&lt;/p&gt;</comment>
                            <comment id="12749806" author="hadoopqa" created="Tue, 1 Sep 2009 08:46:56 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12418219/pig-934_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12418219/pig-934_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 806668.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/4/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/4/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/4/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/4/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/4/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/4/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12749822" author="gkesavan" created="Tue, 1 Sep 2009 10:18:49 +0100"  >&lt;p&gt;I resubmitted the patch to hudson as the core tests failed for not finding javac.&lt;/p&gt;</comment>
                            <comment id="12749853" author="hadoopqa" created="Tue, 1 Sep 2009 11:59:11 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12418219/pig-934_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12418219/pig-934_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 806668.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/5/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/5/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/5/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/5/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/5/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/5/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12749901" author="ashutoshc" created="Tue, 1 Sep 2009 14:05:46 +0100"  >&lt;p&gt;All tests passed on my local box. Not sure why they failed on hudson. &lt;/p&gt;</comment>
                            <comment id="12750223" author="pkamath" created="Wed, 2 Sep 2009 02:14:14 +0100"  >&lt;p&gt;Checked that the unit tests works locally on my machine too.&lt;/p&gt;

&lt;p&gt;Patch committed - Thanks Ashutosh!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12418219" name="pig-934_2.patch" size="3603" author="ashutoshc" created="Tue, 1 Sep 2009 06:28:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Aug 2009 23:45:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164475</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyakmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95654</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>