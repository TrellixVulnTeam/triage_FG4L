<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:55:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-514/PIG-514.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-514] COUNT returns no results as a result of two filter statements in FOREACH</title>
                <link>https://issues.apache.org/jira/browse/PIG-514</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;For the following piece of sample code in FOREACH which counts the filtered student records based on record_type == 1 and scores and also on record_type == 0 does not seem to return any results.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;mydata = LOAD &apos;mystudentfile.txt&apos; AS  (record_type,name,age,scores,gpa);
--keep only what we need
mydata_filtered = FOREACH  mydata GENERATE   record_type,  name,  age,  scores ;
--group
mydata_grouped = GROUP mydata_filtered BY  (record_type,age);

myfinaldata = FOREACH mydata_grouped {
     myfilter1 = FILTER mydata_filtered BY record_type == 1 AND age == scores;
     myfilter2 = FILTER mydata_filtered BY record_type == 0;
     GENERATE FLATTEN(group),
-- Only &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; count causes the problem ??
      COUNT(myfilter1) as col2,
      SUM(myfilter2.scores) as col3,
      COUNT(myfilter2) as col4;  };

--these set of statements confirm that the count on the  filters returns 1
--mycountdata = FOREACH mydata_grouped
--{
--      myfilter1 = FILTER mydata_filtered BY record_type == 1 AND age == scores;
--      GENERATE
--      COUNT(myfilter1) as colcount;
--};
--dump mycountdata;

dump myfinaldata;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But if you uncomment the  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; COUNT(myfilter1) as col2, &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;, it seems to work with the following results..&lt;br/&gt;
(0,22,45.0,2L)&lt;br/&gt;
(0,24,133.0,6L)&lt;br/&gt;
(0,25,22.0,1L)&lt;/p&gt;

&lt;p&gt;Also I have tried to verify if this is a issue with the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; COUNT(myfilter1) as col2, &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; returning zero. It does not seem to be the case.&lt;br/&gt;
If &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  dump mycountdata; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; is uncommented it returns:&lt;br/&gt;
(1L)&lt;br/&gt;
(1L)&lt;/p&gt;

&lt;p&gt;I am attaching the tab separated &apos;mystudentfile.txt&apos; file used in this Pig script. Is this an issue with 2 filters in the FOREACH followed by a COUNT on these filters??&lt;/p&gt;</description>
                <environment></environment>
        <key id="12407570">PIG-514</key>
            <summary>COUNT returns no results as a result of two filter statements in FOREACH</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="pkamath">Pradeep Kamath</assignee>
                                    <reporter username="viraj">Viraj Bhat</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 Oct 2008 03:39:26 +0000</created>
                <updated>Thu, 2 May 2013 03:29:23 +0100</updated>
                            <resolved>Wed, 22 Apr 2009 18:11:36 +0100</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.3.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12644202" author="viraj" created="Fri, 31 Oct 2008 03:41:10 +0000"  >&lt;p&gt;Tab separated student file for testing the issue..&lt;/p&gt;</comment>
                            <comment id="12644485" author="pkamath" created="Sat, 1 Nov 2008 03:51:16 +0000"  >&lt;p&gt;The issue is that for each group in the input data, one of the filters always filters out all data and the POFilter returns an POStatus.STATUS_EOP. The POUserFunc sees this EOP and does not call the actual UDF (COUNT() or SUM()) and just sends the EOP to POForeach. The POForeach sees this EOP and just finishes processing that group without outputting any results.&lt;br/&gt;
Ideally for COUNT() and SUM() POUserFunc should send an empty bag as input so that COUNT() can be 0 and SUM can be null. However this issue is also present in the following code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = load &apos;bla&apos;;
b = filter a by 2 == 1; -- &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is just an illustration of an aggressive filter which filters every tuple
c = foreach b generate myudf($0);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the above case also myudf() is never called - is it ok to not call the udf when there is no input to give it (EOP case)? This causes queries like the one in the description to not give the correct COUNT of 0 and SUM of null in cases where the input to them is empty - we need to decide how we should handle this general case (both for aggregate functions like COUNTs and non aggregate functions like myudf())&lt;/p&gt;

&lt;p&gt;One other case of the COUNT problem is:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = load &apos;emptyfile&apos;; -- load an empty file
-- neither of the statements below actually ever get executed
b = group a all;
c = foreach b generate COUNT(a);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When the input data is empty, neither map() nor reduce() gets executed and hence COUNT() never gets called.&lt;/p&gt;</comment>
                            <comment id="12689772" author="viraj" created="Fri, 27 Mar 2009 01:08:32 +0000"  >&lt;p&gt;Another test case: consider the following input file:&lt;/p&gt;

&lt;p&gt;1       1       3&lt;br/&gt;
1       2       3&lt;br/&gt;
2       1       3&lt;br/&gt;
2       1       3&lt;/p&gt;

&lt;p&gt;The pig program is like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
test   = load &apos;test.txt&apos; as (col1: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, col2: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, col3: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;);
test2 = group test by col1;
test3 = foreach test2
{
        filter_one    = filter test by (col2==1);
        filter_notone = filter test by (col2!=1);
        generate group as col1, COUNT(filter_one) as cnt_one, COUNT(filter_notone) as cnt_notone;
};
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output consists of a single line:&lt;br/&gt;
(1,1L,1L)&lt;/p&gt;

&lt;p&gt;But I would expect&lt;br/&gt;
(1,1L,1L)&lt;br/&gt;
(2,2L,0L)&lt;/p&gt;</comment>
                            <comment id="12693981" author="pkamath" created="Tue, 31 Mar 2009 04:34:51 +0100"  >&lt;p&gt;A proposal for fixing this is the following:&lt;/p&gt;

&lt;p&gt;Semantics:&lt;br/&gt;
Relational operators (like filter) inside a foreach  which produce no result tuples will provide an empty bag as output. If this empty bag is input to a udf , the udf will receive an empty bag as its input argument.&lt;/p&gt;

&lt;p&gt;Implementation:&lt;br/&gt;
To achieve the above semantics a change will be needed in POProject (this change could be factored into a new subclass of POProject if that is cleaner). Currently when the leaf ExpressionOperator of an inner plan in POForeach has a relational operator as its input, a POProject is introduced in between which takes tuples from the relational operator into a bag and provides the bag as input to the leaf ExpressionOperator. &lt;br/&gt;
For example a COUNT() with filter as input in a foreach would look like this in the MR plan:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;New For Each(false)[bag] - pradeepk-Mon Mar 30 20:21:50 PDT 2009-53
    |   |
    |   POUserFunc(org.apache.pig.builtin.COUNT)[long] - pradeepk-Mon Mar 30 20:21:50 PDT 2009-52
    |   |
    |   |---Project[bag][*] - pradeepk-Mon Mar 30 20:21:50 PDT 2009-51
    |       |
    |       |---Filter[bag] - pradeepk-Mon Mar 30 20:21:50 PDT 2009-46
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;This POProject will need to maintain internal state to check if it receives no other input and only receives an EOP from its predecessor relational operator (say a POFilter). In such a case, it will need to send an empty bag as its output.&lt;/p&gt;

&lt;p&gt;Expected results for aggregates in such a case (say where a filter in the foreach filters away all records ) will be:&lt;br/&gt;
COUNT - 0&lt;br/&gt;
SUM, MIN, MAX, AVG - null&lt;/p&gt;

&lt;p&gt;Comments/Thoughts?&lt;/p&gt;</comment>
                            <comment id="12699801" author="pkamath" created="Thu, 16 Apr 2009 19:39:10 +0100"  >&lt;p&gt;I am currently working on implementing the above proposal since I have not seen any objections. After making the core changes to implement the above proposal, I validated that it fixed the issue reported here and also in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-739&quot; title=&quot;Filter in foreach seems to drop records resulting in decreased count of records&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-739&quot;&gt;&lt;del&gt;PIG-739&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-710&quot; title=&quot;Filtering bag in nested foreach does not produce expected results&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-710&quot;&gt;&lt;del&gt;PIG-710&lt;/del&gt;&lt;/a&gt;. I need to add a few more changes to make the patch complete - will supply a patch once done.&lt;/p&gt;</comment>
                            <comment id="12701275" author="pkamath" created="Tue, 21 Apr 2009 22:40:43 +0100"  >&lt;p&gt;Attached patch which implements the proposed design. The changes are spread across the following areas:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Parser - in QueryParser.jjt, the condition wherein a relational operator is followed by a Project&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; now marks the Project to be a special Project which would send empty bags to the predecessor on EOP&lt;/li&gt;
	&lt;li&gt;In the LogToPhyTranslationVisitor, based on the presence/absence of the above flag either a PORelationToExprProject is created or a regular POProject is created.&lt;/li&gt;
	&lt;li&gt;PORelationToExprProject is extended from POProject and only overrides the getNext(DataBag) method to send an empty bag on first encountering an EOP and sets state to send an EOP down the next time it is called. However if the POForEach in which this project is present, starts a new set of inputs, this flag is reset in the reset() method&lt;/li&gt;
	&lt;li&gt;PhysicalOperator now has a reset() method for use in the PORelationToExprProject and in limit/sort/distinct operators when limit is present to reset state when new input for the foreach starts.&lt;/li&gt;
	&lt;li&gt;The builtins (SUM/COUNT/MIN/MAX/AVG) now handle empty bags - COUNT gives 0 and the others give null as output (this change includes the type specific implementations of these aggs like IntSum, LongSum etc&lt;/li&gt;
	&lt;li&gt;Test cases to test the empty bag case&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12701323" author="alangates" created="Wed, 22 Apr 2009 00:43:45 +0100"  >&lt;p&gt;In the following code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * @param opsToBeReset the opsToBeReset to set
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setOpsToBeReset(List&amp;lt;PhysicalOperator&amp;gt; opsToBeReset) {
        opsToBeReset = opsToBeReset;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think you want the last line to be this.opstoBeReset = opsToBeReset;&lt;/p&gt;

&lt;p&gt;Other than that, +1.&lt;/p&gt;
</comment>
                            <comment id="12701603" author="pkamath" created="Wed, 22 Apr 2009 18:11:36 +0100"  >&lt;p&gt;Patch committed with the change in previous comment. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12416487">PIG-710</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12421586">PIG-739</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406062" name="PIG-514.patch" size="100128" author="pkamath" created="Tue, 21 Apr 2009 22:40:43 +0100"/>
                            <attachment id="12393123" name="mystudentfile.txt" size="200" author="viraj" created="Fri, 31 Oct 2008 03:41:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 1 Nov 2008 03:51:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164118</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyafpj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94856</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>