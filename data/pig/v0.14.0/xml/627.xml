<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:55:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-627/PIG-627.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-627] PERFORMANCE: multi-query optimization</title>
                <link>https://issues.apache.org/jira/browse/PIG-627</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Currently, if your Pig script contains multiple stores and some shared computation, Pig will execute several independent queries. For instance:&lt;/p&gt;

&lt;p&gt;A = load &apos;data&apos; as (a, b, c);&lt;br/&gt;
B = filter A by a &amp;gt; 5;&lt;br/&gt;
store B into &apos;output1&apos;;&lt;br/&gt;
C = group B by b;&lt;br/&gt;
store C into &apos;output2&apos;;&lt;/p&gt;

&lt;p&gt;This script will result in map-only job that generated output1 followed by a map-reduce job that generated output2. As the resuld data is read, parsed and filetered twice which is unnecessary and costly. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12412877">PIG-627</key>
            <summary>PERFORMANCE: multi-query optimization</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hagleitn">Gunther Hagleitner</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Jan 2009 00:39:23 +0000</created>
                <updated>Wed, 24 Mar 2010 22:10:56 +0000</updated>
                            <resolved>Mon, 4 May 2009 21:51:56 +0100</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.3.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="12665657" author="olgan" created="Wed, 21 Jan 2009 00:47:27 +0000"  >&lt;p&gt;The proposal is as follows:&lt;/p&gt;

&lt;p&gt;(1) No changes in interactive mode. Each store or dump starts a job. Interactive mode is not about efficiency but about ease of use&lt;br/&gt;
(2) In batch mode, a connected set of stores/dumps is executed together. Processing continues on Failures: after the run you can get response that some of the queries in the batch succeeded and some failed. (We need to figure out how to communicate this information to the users. Done files is one of the options.)&lt;/p&gt;

&lt;p&gt;The nice feature of this approach is that it requires no changes on the part of the user. After the change is implemented, some queries will just run faster.&lt;/p&gt;</comment>
                            <comment id="12665669" author="alangates" created="Wed, 21 Jan 2009 01:12:29 +0000"  >&lt;p&gt;I propose to implement this as follows.&lt;/p&gt;

&lt;p&gt;Currently split works by dumping all of its input to disk, and then starting MR jobs for each of it&apos;s outputs.  So if you have a script like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load ...
split A into B, beta ...
C = filter B ...
D = group C ...
E = foreach D ...
store E
gamma = filter beta ...
delta = group gamma ...
epsilon = foreach delta ...
store epsilon
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then A will be loaded and immediately stored by the split.  This output will then be loaded before C, and run to the store E.  Then the output will again be&lt;br/&gt;
loaded for gamma and run to epsilon.&lt;/p&gt;

&lt;p&gt;If instead split was changed to have inner plans like foreach, the the above could be executed as A is loaded and the input passed to split.  Each tuple it&lt;br/&gt;
received it would run through a pipeline that contained C and a separate pipeline that contained gamma.  Separate map reduce jobs would then be started, one to&lt;br/&gt;
handle D-E and one delta-epsilon.  This turns 3 reads of the data into one plus two partials (depending on how selective the two filters are).&lt;/p&gt;

&lt;p&gt;The relevance to the current issue is that queries like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load ..
B = filter A ...
store B ...
C = group B ...
D = foreach C ...
store D;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;would be implicitly converted to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load ..
B = filter A ...
split B into B1, B2;
store B1 ...
C = group B2 ...
D = foreach C ...
store D;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Changes needed to accomplish this:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Add an optimization pass that takes a plan with splits and rearranges it to be contained within the splits plus any subsequent MR jobs.  This may need to be split up between the logical to physical translator and the MR compiler.  It also needs to be able to handle diamonds in the plan, where split data comes back together, either as part of the same MR job or in a later job.&lt;/li&gt;
	&lt;li&gt;Implement a split operator that can contain inner plans.  This is basically a foreach without a generate, and so hopefully much of the code from foreach could be shared or at least stolen.  It will be somewhat different in that it will be able to contain any non-MR boundary forcing task (filter, foreach, dump, store) and not be able to contain distinct or order by.&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="12672464" author="alangates" created="Wed, 11 Feb 2009 00:23:47 +0000"  >&lt;p&gt;See &lt;a href=&quot;http://wiki.apache.org/pig/PigMultiQueryPerformanceSpecification&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/PigMultiQueryPerformanceSpecification&lt;/a&gt; for a more concrete proposal that incorporates and extends the thoughts in the last comment.&lt;/p&gt;</comment>
                            <comment id="12676020" author="hagleitn" created="Mon, 23 Feb 2009 19:08:47 +0000"  >&lt;p&gt;This is for the multiquery branch. It&apos;s phase 1. It contains a lot of infrastructural work to be able to look at entire scripts during evaluation (batch mode). It will look at a script plan and insert splits whenever there is a shared sequence of operations. The split execution is still the same as it was before (load-store bridge).&lt;/p&gt;</comment>
                            <comment id="12676467" author="hagleitn" created="Wed, 25 Feb 2009 01:10:40 +0000"  >&lt;p&gt;This patch includes the multiquery unit test cases.&lt;/p&gt;</comment>
                            <comment id="12676507" author="olgan" created="Wed, 25 Feb 2009 05:19:11 +0000"  >&lt;p&gt;I committed the latest patch. Ran the unit tests and they all passed.&lt;/p&gt;

&lt;p&gt;Couple of issues that need to be addressed:&lt;/p&gt;

&lt;p&gt;(1) PigServer.openIterator, in batch mode, always returns an empty iterator. That will not work if a script has a dump in it.&lt;br/&gt;
(2) PigSever.getStorePlan assumes that each alias maps to a single store. In case of multiple queries that might not be true.&lt;/p&gt;

&lt;p&gt;Thanks Richard and Gunther for your contribution!&lt;/p&gt;</comment>
                            <comment id="12678448" author="hagleitn" created="Tue, 3 Mar 2009 21:18:47 +0000"  >&lt;p&gt;This patch introduces the functionality to support multiple stores in a single MR job. It&apos;s for the multiquery branch and it is needed to unblock concurrent dev on the split operator.&lt;/p&gt;

&lt;p&gt;There aren&apos;t enough unit tests in this patch yet. They will be provided once the split operator can use multi stores (right now, nothing actually uses these stores, so testing is difficult). In order to test the patch, I had temporarily turned multi store on for all queries (even if they only have one store) and then ran all the unit tests. All tests passed.&lt;/p&gt;</comment>
                            <comment id="12679006" author="hagleitn" created="Thu, 5 Mar 2009 00:11:43 +0000"  >&lt;p&gt;Same as the other one except: &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Documented the createStoreFunction method some more.&lt;/li&gt;
	&lt;li&gt;Removed unnecessary fields in the path parsing&lt;/li&gt;
	&lt;li&gt;Moved tear down of stores below extra streaming run (in PigMapBase&apos;s, PigMapReduce&apos;s close function)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12679021" author="pkamath" created="Thu, 5 Mar 2009 01:06:39 +0000"  >&lt;p&gt;I committed   multi-store-0304.patch into the multi-query branch after reviewing the changes.&lt;/p&gt;</comment>
                            <comment id="12679499" author="hagleitn" created="Fri, 6 Mar 2009 05:22:02 +0000"  >&lt;p&gt;This patch is for the multi query branch again. It mostly fixes the problem with certain commands in the script that require immediate execution (in batch mode).&lt;/p&gt;

&lt;p&gt;So if you do stuff like:&lt;/p&gt;

&lt;p&gt;...&lt;br/&gt;
store a into &apos;tmp_foo&apos;;&lt;br/&gt;
...&lt;br/&gt;
rm tmp_foo&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;The rm will trigger execution and the file will be there for you to delete, copyToLocal, move, etc. You can also use the &quot;exec&quot; statement without params in a script now, to force execution of what we&apos;ve seen so far.&lt;/p&gt;

&lt;p&gt;This patch also contains a minor fix with the computation of progress in MR jobs (which I screwed up in the last patch).&lt;/p&gt;
</comment>
                            <comment id="12679500" author="hagleitn" created="Fri, 6 Mar 2009 05:29:43 +0000"  >&lt;p&gt;Oh. I also took out the restriction of the openIterator in batch mode. That was no longer needed.&lt;/p&gt;</comment>
                            <comment id="12679768" author="olgan" created="Fri, 6 Mar 2009 23:49:10 +0000"  >&lt;p&gt;A am reviewing this patch&lt;/p&gt;</comment>
                            <comment id="12679791" author="olgan" created="Sat, 7 Mar 2009 01:13:44 +0000"  >&lt;p&gt;Looks like the patch has been committed but I will add my 2 cents anyways:&lt;/p&gt;

&lt;p&gt;(1) Looks like the test cases only test for success or failure but not for the correctness of results.&lt;br/&gt;
(2) I was not quite sure what we need to executeBatch in grant for every dfs command. We treat those commands differently from pig commands anyways.&lt;/p&gt;</comment>
                            <comment id="12679797" author="rding" created="Sat, 7 Mar 2009 01:52:26 +0000"  >&lt;p&gt;This patch contains the enhanced split operator to support multi-store queries. It instroduces a new MROperPlan adjuster that merges single-load mapper-only MapReduceOper to its predecesor based on the (implicit) split boundary. The goal is to reduce the total number of MR jobs for a given multi-query task.&lt;/p&gt;

&lt;p&gt;This patch is for the multi query branch.&lt;/p&gt;</comment>
                            <comment id="12680724" author="pkamath" created="Wed, 11 Mar 2009 01:39:48 +0000"  >&lt;p&gt;multiquery_0306.patch seems to have a lot of code from the earlier patch ( multi-store-0304.patch). Richard, can you svn up your code base and regenerate the patch with only the changes you intended?&lt;/p&gt;</comment>
                            <comment id="12680925" author="rding" created="Wed, 11 Mar 2009 17:01:00 +0000"  >&lt;p&gt;The multiquery_0306.patch is the right one and doesn&apos;t need to regenerate. Pradeep will review it today. &lt;/p&gt;</comment>
                            <comment id="12680997" author="pkamath" created="Wed, 11 Mar 2009 19:12:25 +0000"  >&lt;p&gt;Sorry about the misunderstanding, I think I looked at a different patch. After reviewing the right patch, here are some comments:&lt;/p&gt;

&lt;p&gt;The patch throws Java Exceptions like IllegalStateException. This should be replaced with the appropriate Exception class (like MRCompilerException) as specified in &lt;a href=&quot;http://wiki.apache.org/pig/PigErrorHandlingFunctionalSpecification&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/PigErrorHandlingFunctionalSpecification&lt;/a&gt;. The exception should be created with the error code, error source and error message constructor. New error codes should be introduced if one of the existing ones in &lt;a href=&quot;http://wiki.apache.org/pig/PigErrorHandlingFunctionalSpecification#head-9f71d78d362c3307711f98ec9db3ee12b55e92f6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/PigErrorHandlingFunctionalSpecification#head-9f71d78d362c3307711f98ec9db3ee12b55e92f6&lt;/a&gt; cannot be used. If new codes are introduced, the wiki table should be updated.&lt;/p&gt;

&lt;p&gt;The following can be used to check for file existence in BinStorage.determineSchema() - only in the case where the file does not exist, null should be returned&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; fileExists(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; filename, DataStorage store)
            &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        ElementDescriptor elem = store.asElement(filename);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; elem.exists() || globMatchesFiles(elem, store);
    }
 &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;   

&lt;p&gt;Instead of introducing a rootsFirst attribute in DependencyOrderWalker, I wonder if we should have a ReverseDependencyOrderWalker since that is what the rootsFirst == false case will be. If we are not visiting roots to leaf, we really are not visiting in a dependency order - so the meaning of dependency order is no longer honored - this can be confusing I think. By explicitly naming the walker ReverseDependencyOrderWalker, the intent of walking from leaves to roots is more clear I think.&lt;/p&gt;

&lt;p&gt;In POSplit currently there is a PhysicalPlan representing the merged inner plans (where all plans are mutually exclusive) and there is also a List&amp;lt;PhysicalPlan&amp;gt; which has the same information in the form of a List. In the rest of pig code, inner plans have always been modelled as List&amp;lt;PhysicalPlan&amp;gt;. For consistency, it is better to just have a List&amp;lt;PhysicalPlan&amp;gt; to represent the inner plans.&lt;/p&gt;</comment>
                            <comment id="12681066" author="rding" created="Wed, 11 Mar 2009 22:32:19 +0000"  >&lt;p&gt;Thanks for reviewing the patch. These are excellent suggestions. I&apos;ll make sure that the changes you proposed will be included in the next patch.&lt;/p&gt;

&lt;p&gt;On exceptions,  when do we use runtime exceptions? I&apos;m trying to use runtime exceptions to indicate programming errors such as precondition violations or internal state errors. &lt;/p&gt;</comment>
                            <comment id="12681085" author="pkamath" created="Wed, 11 Mar 2009 23:14:26 +0000"  >&lt;p&gt;Committed patch per previous comment that the review comments will be addressed in the next patch - thanks Richard for the contribution. &lt;/p&gt;

&lt;p&gt;In general from Pig code we always want to throw known PigExceptions even for programming errors or internal state errors - in these cases, we just use the source of the Exception as PigExcetion.BUG. RuntimeException should be used when we want to throw an exception in a function which cannot throw any exceptions (like in methods from Hadoop API which we are implementing which do not throw any Exception)&lt;/p&gt;</comment>
                            <comment id="12681897" author="rding" created="Fri, 13 Mar 2009 21:08:23 +0000"  >&lt;p&gt; This patch completes the phase 2 development as sepecified in the document &lt;a href=&quot;http://wiki.apache.org/pig/PigMultiQueryPerformanceSpecification:&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/PigMultiQueryPerformanceSpecification:&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Allow multiple stores in single job&lt;/li&gt;
	&lt;li&gt;Merge multiple plans into the split operator&lt;/li&gt;
	&lt;li&gt;Terminate all but one with stores&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;As an example, the Pig script&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load &apos;data&apos; as (a, b, c);
B = filter A by a &amp;gt; 5;
store B into &apos;output1&apos;;
C = group B by b;
store C into &apos;output2&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in the introduction of this bug now results in a single map-reduce job.&lt;/p&gt;

&lt;p&gt;This patch is for the multi query branch.&lt;/p&gt;

</comment>
                            <comment id="12683651" author="hagleitn" created="Thu, 19 Mar 2009 22:20:04 +0000"  >&lt;p&gt;Fixes three issues with explain:&lt;/p&gt;

&lt;p&gt;a) Ceci n&apos;est pas un bug. Splits in interactive mode still need this branch.&lt;br/&gt;
b) explain needs to discard batch iff it was loading a script&lt;br/&gt;
c) Split is now a nested operator (and explain needs to know)&lt;/p&gt;

&lt;p&gt;This patch doesn&apos;t have any overlapped files with Richards last patch.&lt;/p&gt;</comment>
                            <comment id="12688339" author="pkamath" created="Mon, 23 Mar 2009 17:27:02 +0000"  >&lt;p&gt;Comments for Richard&apos;s patch - multiquery-phase2_0313.patch&lt;/p&gt;

&lt;p&gt;In MultiQueryOptimizer:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;what about mr not being map only and with mr splittee? - is this not handled for now?&lt;/li&gt;
	&lt;li&gt;Is the single mapper case and the single map-reduce case when the script has an explicit store &apos;file&apos; and load &apos;file&apos; - if this is so, then in&lt;br/&gt;
mergeOnlyMapperSplittee() and mergeOnlyMapReduceSplittee(), the store is removed - shouldn&apos;t the store remain?   &lt;/li&gt;
	&lt;li&gt;There is common code in mergeOnlyMapperSplittee() and meregOnlyMapReduceSplittee() which should be moved to a function to reduce the code duplication.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Just want to confirm that the multi query optimization is only for map reduce mode - since the optimizer is being called in MapReduceLauncher&lt;/p&gt;

&lt;p&gt;In POForEach when there is POStatus.STATUS_ERR, it is returned to the caller. I noticed that in POSplit, it causes an exception - I think it should return the error whhic would later be caught in the map() or reduce() - a test to make sure errors do get caught and cause failures would be good.&lt;/p&gt;

&lt;p&gt;spawnChildWalker() of ReverseDependencyOrderWalker should return an instance of ReverseDependencyWalker.&lt;/p&gt;

&lt;p&gt;The following comment in BinStorage needs to be clarified:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;        if (!FileLocalizer.fileExists(fileName, storage)) {
            // At compile time in batch mode, the file may not exist
            // (such as intermediate file). Just return null - the
            // same way as we could&apos;s get a valid record from the input. --&amp;gt; does this actually mean &quot;the same way as we would if we did not get a valid record&quot; ?
            return null;
        }
        

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12688356" author="pkamath" created="Mon, 23 Mar 2009 18:02:21 +0000"  >&lt;p&gt;+1 on Gunther&apos;s patch - multiquery_explain_fix.patch. Patch has been committed to the multiquery branch - thanks for the fix Gunther!&lt;/p&gt;</comment>
                            <comment id="12688400" author="rding" created="Mon, 23 Mar 2009 20:12:57 +0000"  >&lt;p&gt;Thanks for reviewing the patch.&lt;/p&gt;

&lt;p&gt;In MultiQueryOptimizer:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;what about mr not being map only and with mr splittee? - is this not handled for now?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;em&gt;Yeah. There are two cases where splittees will not be merged into splitter: (1) splitter is not map only and splittee has reducer, and (2) splittee has multiple roots (loads)&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Is the single mapper case and the single map-reduce case when the script has an explicit store &apos;file&apos; and load &apos;file&apos; - if  this is so, then in mergeOnlyMapperSplittee() and mergeOnlyMapReduceSplittee(), the store is removed - shouldn&apos;t the store remain?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;em&gt;Explicit store/load combination in a script is transformed into an implicit split, hence the store remains&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;There is common code in mergeOnlyMapperSplittee() and meregOnlyMapReduceSplittee() which should be moved to a function to reduce the code duplication.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    &lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Just want to confirm that the multi query optimization is only for map reduce mode - since the optimizer is being called in  MapReduceLauncher&lt;/p&gt;

&lt;p&gt;   &lt;em&gt;Yes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In POForEach when there is POStatus.STATUS_ERR, it is returned to the caller. I noticed that in POSplit, it causes an exception - I think it should return the error whhic would later be caught in the map() or reduce() - a test to make sure errors do get caught and cause failures would be good.&lt;/p&gt;

&lt;p&gt;   &lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;spawnChildWalker() of ReverseDependencyOrderWalker should return an instance of ReverseDependencyWalker.&lt;/p&gt;

&lt;p&gt;   &lt;em&gt;Fixed&lt;/em&gt;&lt;/p&gt;
</comment>
                            <comment id="12688461" author="pkamath" created="Mon, 23 Mar 2009 23:39:03 +0000"  >&lt;p&gt;+1 on Richard&apos;s patch -  multiquery-phase2_0323.patch, patch committed to multiquery branch - thanks for the contribution Richard.&lt;/p&gt;

&lt;p&gt;A general comment for the multiquery work is to introduce some negative test cases (which return POStatus.STATUS_ERR from some operator in the map or reduce plan affected by the multiQuqeryOptimizer)  at some point.&lt;/p&gt;</comment>
                            <comment id="12688875" author="hagleitn" created="Tue, 24 Mar 2009 21:16:42 +0000"  >&lt;p&gt;Merge of trunk (741727:HEAD) into multiquery branch. Aka merge from hell &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I ran all unit tests, the multiquery tests and the nightly tests and everything looks fine (no errors).&lt;/p&gt;
</comment>
                            <comment id="12688905" author="hagleitn" created="Tue, 24 Mar 2009 22:15:31 +0000"  >&lt;p&gt;Seems like the last merge patch didn&apos;t correctly contain the entire new TestFinish.java file. Well, this one does.&lt;/p&gt;</comment>
                            <comment id="12688957" author="pkamath" created="Wed, 25 Mar 2009 00:44:46 +0000"  >&lt;p&gt;+1 - committed patch by Gunther to merge changes in trunk to multiquery branch - thanks for the contribution Gunther.&lt;/p&gt;</comment>
                            <comment id="12689355" author="hagleitn" created="Thu, 26 Mar 2009 04:51:54 +0000"  >&lt;p&gt;This patch addresses an issue with the way we deal with scripts that do:&lt;br/&gt;
{{&lt;/p&gt;
{
...
store a into &apos;foo&apos;;
a = load &apos;foo&apos;;
...
}
&lt;p&gt;}}&lt;/p&gt;

&lt;p&gt;In the logical plan this will end up as a split with one branch storing into &apos;foo&apos; and the other continuing the processing after the load. The actual load is removed.&lt;/p&gt;

&lt;p&gt;This works well but has an unfortunate side effect. If the store/load mark the boundary between two map-reduce jobs the MRCompiler has to insert a tmp store-load bridge - which means that we now end up with two stores.&lt;/p&gt;

&lt;p&gt;This fix detects this case in the optimizing phase after the compilation. It removes the unnecessary store and loads from the other one.&lt;/p&gt;</comment>
                            <comment id="12693955" author="hagleitn" created="Tue, 31 Mar 2009 01:11:44 +0100"  >&lt;p&gt;This patch contains three items:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removes the noop stores as described above&lt;/li&gt;
	&lt;li&gt;Makes load and store paths absolute and canonical&lt;/li&gt;
	&lt;li&gt;Introduces a flag that turns multiquery on and off (default is off)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12694422" author="hagleitn" created="Wed, 1 Apr 2009 09:29:16 +0100"  >&lt;p&gt;This one is the same as before, but:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Added some comments&lt;/li&gt;
	&lt;li&gt;Reversed the multiquery flag (on by default)&lt;/li&gt;
	&lt;li&gt;HBase stuff works without the &quot;hbase://&quot; but will print warning&lt;/li&gt;
	&lt;li&gt;Fixed problem in NoopStoreRemover&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12694859" author="pkamath" created="Thu, 2 Apr 2009 02:37:55 +0100"  >&lt;p&gt;+1, patch committed - thanks for the contribution Gunther.&lt;/p&gt;</comment>
                            <comment id="12695156" author="hagleitn" created="Thu, 2 Apr 2009 23:46:51 +0100"  >&lt;p&gt;This patch takes care of two things:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Cases where in a script you have a store followed by load where the Load/StoreFunc is either not reversible or they are different functions.&lt;/li&gt;
	&lt;li&gt;PlanSetter for physical plans in the JobControlCompiler (right now only the outermost plan&apos;s elements are set)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12695805" author="hagleitn" created="Sun, 5 Apr 2009 04:16:18 +0100"  >&lt;p&gt;Same as above plus:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Fix for explain when a script has execution points inside.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Like:&lt;/p&gt;

&lt;p&gt;{{&lt;/p&gt;
{
a = load ...
...
store a
exec;
b = load ...
...
}
&lt;p&gt;}}&lt;/p&gt;

&lt;p&gt;This will run explain once for each execution block.&lt;/p&gt;</comment>
                            <comment id="12696350" author="pkamath" created="Tue, 7 Apr 2009 03:29:42 +0100"  >&lt;p&gt;+1, patch committed. Thanks for the contribution Gunther!&lt;/p&gt;</comment>
                            <comment id="12696857" author="hagleitn" created="Wed, 8 Apr 2009 02:12:59 +0100"  >&lt;p&gt;Merge latest trunk changes to branch&lt;/p&gt;</comment>
                            <comment id="12696861" author="olgan" created="Wed, 8 Apr 2009 02:28:39 +0100"  >&lt;p&gt;patch reviewed and committed; thanks, Gunther.&lt;/p&gt;</comment>
                            <comment id="12698664" author="hagleitn" created="Tue, 14 Apr 2009 07:33:56 +0100"  >&lt;p&gt;Some fixes in the patch &quot;streaming-fix.patch&quot;:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The split operator wasn&apos;t always playing nicely with the way we run the pipeline one extra time in the mapper&apos;s or reducer&apos;s close function if there&apos;s a stream operator present&lt;/li&gt;
	&lt;li&gt;Moved the MR optimizer that sets &quot;stream in map&quot; and &quot;stream in reduce&quot; to the end of the queue.&lt;/li&gt;
	&lt;li&gt;PhyPlanVisitor forgets to pop some walkers it pushed on the stack. That can result in the NoopFilterRemoval stage failing, because it&apos;s looking in the wrong plan.&lt;/li&gt;
	&lt;li&gt;Setting the jobname by default to the scriptname came in through the last merge, but didn&apos;t work anymore&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12698857" author="pkamath" created="Tue, 14 Apr 2009 18:58:29 +0100"  >&lt;p&gt;+1, Patch committed, thanks Gunther!&lt;/p&gt;</comment>
                            <comment id="12698877" author="hagleitn" created="Tue, 14 Apr 2009 20:00:31 +0100"  >&lt;p&gt;merge-041409.patch contains the latest merge from trunk to branch.&lt;/p&gt;</comment>
                            <comment id="12699113" author="hagleitn" created="Wed, 15 Apr 2009 09:33:40 +0100"  >&lt;p&gt;javadoc changes only. doc-fix.patch contains &quot;fixes&quot; to silence javadoc warnings.&lt;/p&gt;</comment>
                            <comment id="12699518" author="hagleitn" created="Thu, 16 Apr 2009 05:44:18 +0100"  >&lt;p&gt;This patch contains:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Error codes/msg&lt;/li&gt;
	&lt;li&gt;Javadoc changes&lt;/li&gt;
	&lt;li&gt;fix the merge error in parser (&quot;aliases&quot; cmd)&lt;/li&gt;
	&lt;li&gt;updated golden files&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12699990" author="hagleitn" created="Fri, 17 Apr 2009 03:54:17 +0100"  >&lt;p&gt;Fixed some issues with the error handling patch (0415):&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Duplicated error code 2129&lt;/li&gt;
	&lt;li&gt;Unclear string &quot;splitter&quot;&lt;/li&gt;
	&lt;li&gt;Added native exception message to error msg in store operator.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12700320" author="pkamath" created="Fri, 17 Apr 2009 21:42:45 +0100"  >&lt;p&gt;reviewed doc-fix.patch and validated that javadoc warnings are fixed. +1 - committed.&lt;/p&gt;</comment>
                            <comment id="12700925" author="pkamath" created="Mon, 20 Apr 2009 21:39:32 +0100"  >&lt;p&gt;reviewed error_handling_0416.patch for additional changes per comment: &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-627?focusedCommentId=12699990&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12699990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-627?focusedCommentId=12699990&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12699990&lt;/a&gt;. +1, committed after removing the javadoc related changes which were already committed in the previous commit.&lt;/p&gt;</comment>
                            <comment id="12702005" author="pkamath" created="Thu, 23 Apr 2009 18:00:18 +0100"  >&lt;p&gt;All the work till now (phase 1 and phase2) has now been committed to trunk. A tag (pre-multiquery-phase2) was created prior to commiting the multi query work since this a significantly big patch. The tag will serve as a baseline to trace down regressions.&lt;/p&gt;</comment>
                            <comment id="12702177" author="rding" created="Fri, 24 Apr 2009 01:42:45 +0100"  >&lt;p&gt;This patch completes the phase 3 development which merges multiple map-reduce aplittees into a splitter.&lt;/p&gt;

&lt;p&gt;As an example, the Pig script&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load ...
split A into B, beta ...
C = filter B ...
D = group C ...
E = foreach D ...
store E
gamma = filter beta ...
delta = group gamma ...
epsilon = foreach delta ...
store epsilon
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;discussed earlier in this bug now results in a single map-reduce job.&lt;/p&gt;

&lt;p&gt;This patch is for the multi query branch.&lt;/p&gt;</comment>
                            <comment id="12703792" author="alangates" created="Tue, 28 Apr 2009 20:01:50 +0100"  >&lt;p&gt;Checked in multiquery-phase3_0423.patch to multiquery branch.&lt;/p&gt;</comment>
                            <comment id="12705738" author="olgan" created="Mon, 4 May 2009 21:51:56 +0100"  >&lt;p&gt;The code has been merged to the trunk. Thanks Richard and Gunther for contributing this complex and very useful feature!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12405514" name="doc-fix.patch" size="4651" author="hagleitn" created="Wed, 15 Apr 2009 09:33:40 +0100"/>
                            <attachment id="12405614" name="error_handling_0415.patch" size="27585" author="hagleitn" created="Thu, 16 Apr 2009 05:44:18 +0100"/>
                            <attachment id="12405724" name="error_handling_0416.patch" size="27598" author="hagleitn" created="Fri, 17 Apr 2009 03:54:17 +0100"/>
                            <attachment id="12401589" name="file_cmds-0305.patch" size="33849" author="hagleitn" created="Fri, 6 Mar 2009 05:22:01 +0000"/>
                            <attachment id="12403686" name="fix_store_prob.patch" size="26436" author="hagleitn" created="Thu, 26 Mar 2009 04:51:54 +0000"/>
                            <attachment id="12405447" name="merge-041409.patch" size="21065" author="hagleitn" created="Tue, 14 Apr 2009 20:00:31 +0100"/>
                            <attachment id="12403557" name="merge_741727_HEAD__0324.patch" size="605001" author="hagleitn" created="Tue, 24 Mar 2009 21:16:42 +0000"/>
                            <attachment id="12403567" name="merge_741727_HEAD__0324_2.patch" size="609090" author="hagleitn" created="Tue, 24 Mar 2009 22:15:31 +0000"/>
                            <attachment id="12404909" name="merge_trunk_to_branch.patch" size="13667" author="hagleitn" created="Wed, 8 Apr 2009 02:12:59 +0100"/>
                            <attachment id="12401334" name="multi-store-0303.patch" size="79205" author="hagleitn" created="Tue, 3 Mar 2009 21:18:47 +0000"/>
                            <attachment id="12401471" name="multi-store-0304.patch" size="79950" author="hagleitn" created="Thu, 5 Mar 2009 00:11:43 +0000"/>
                            <attachment id="12402169" name="multiquery-phase2_0313.patch" size="88260" author="rding" created="Fri, 13 Mar 2009 21:08:23 +0000"/>
                            <attachment id="12403453" name="multiquery-phase2_0323.patch" size="90073" author="rding" created="Mon, 23 Mar 2009 20:12:57 +0000"/>
                            <attachment id="12406303" name="multiquery-phase3_0423.patch" size="79286" author="rding" created="Fri, 24 Apr 2009 01:42:45 +0100"/>
                            <attachment id="12400785" name="multiquery_0223.patch" size="112146" author="hagleitn" created="Mon, 23 Feb 2009 19:08:47 +0000"/>
                            <attachment id="12400895" name="multiquery_0224.patch" size="149126" author="hagleitn" created="Wed, 25 Feb 2009 01:10:40 +0000"/>
                            <attachment id="12401662" name="multiquery_0306.patch" size="32416" author="rding" created="Sat, 7 Mar 2009 01:52:26 +0000"/>
                            <attachment id="12402606" name="multiquery_explain_fix.patch" size="2843" author="hagleitn" created="Thu, 19 Mar 2009 22:20:03 +0000"/>
                            <attachment id="12404488" name="non_reversible_store_load_dependencies.patch" size="77763" author="hagleitn" created="Thu, 2 Apr 2009 23:46:51 +0100"/>
                            <attachment id="12404660" name="non_reversible_store_load_dependencies_2.patch" size="91869" author="hagleitn" created="Sun, 5 Apr 2009 04:16:18 +0100"/>
                            <attachment id="12404194" name="noop_filter_absolute_path_flag.patch" size="89855" author="hagleitn" created="Tue, 31 Mar 2009 01:11:44 +0100"/>
                            <attachment id="12404310" name="noop_filter_absolute_path_flag_0401.patch" size="127743" author="hagleitn" created="Wed, 1 Apr 2009 09:29:16 +0100"/>
                            <attachment id="12405394" name="streaming-fix.patch" size="10373" author="hagleitn" created="Tue, 14 Apr 2009 07:33:56 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Jan 2009 01:12:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164216</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyah1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95071</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>