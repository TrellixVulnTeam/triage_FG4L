<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:50:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2425/PIG-2425.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2425] Aggregate Warning does not work as expected on Embedding Pig in Java 0.9.1</title>
                <link>https://issues.apache.org/jira/browse/PIG-2425</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Property &quot;aggregate.warning&quot; is not being set by default when running PigServer, embedding Pig in Java.&lt;/p&gt;

&lt;p&gt;I was initially creating a PigServer object this way:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  PigServer pigServer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PigServer(ExecType.MAPREDUCE);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But this generated detailed logs in the log directory. To code around this on the client-side you could do&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Properties properties = PropertiesUtil.loadDefaultProperties();
properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;);
PigServer pigServer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PigServer(ExecType.MAPREDUCE, properties);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The behavior between Pig scripting and Embedded Pig should be similar. Looking at&lt;br/&gt;
the main constructor of PigServer, it looks like &quot;aggregateWarning&quot; is set&lt;br/&gt;
to false if its not loaded in to Properties object.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PigServer(PigContext context, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; connect) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ExecException {
         &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.pigContext = context;
         currDAG = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Graph(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);

         aggregateWarning =
&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;.equalsIgnoreCase(pigContext.getProperties().getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;));
         isMultiQuery =
&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;.equalsIgnoreCase(pigContext.getProperties().getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));

         jobName = pigContext.getProperties().getProperty(
                 PigContext.JOB_NAME,
                 PigContext.JOB_NAME_PREFIX + &lt;span class=&quot;code-quote&quot;&gt;&quot;:DefaultJobName&quot;&lt;/span&gt;);

         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (connect) {
             pigContext.connect();
         }

         addJarsFromProperties();
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I suggest adding &quot;aggregate.warning&quot; to Properties object of PigContext so its picked up across all users of this property (MapReduceLauncher)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PigServer(PigContext context, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; connect) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ExecException {
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.pigContext = context;
        currDAG = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Graph(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);

        aggregateWarning = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;.equalsIgnoreCase(pigContext.getProperties().getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(aggregateWarning) {
        	pigContext.getProperties().setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;);
        }
        	
        isMultiQuery = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;.equalsIgnoreCase(pigContext.getProperties().getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
        
        jobName = pigContext.getProperties().getProperty(
                PigContext.JOB_NAME,
                PigContext.JOB_NAME_PREFIX + &lt;span class=&quot;code-quote&quot;&gt;&quot;:DefaultJobName&quot;&lt;/span&gt;);

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (connect) {
            pigContext.connect();
        }

        addJarsFromProperties();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12534893">PIG-2425</key>
            <summary>Aggregate Warning does not work as expected on Embedding Pig in Java 0.9.1</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="prkommireddi">Prashant Kommireddi</assignee>
                                    <reporter username="prkommireddi">Prashant Kommireddi</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Tue, 13 Dec 2011 01:35:41 +0000</created>
                <updated>Thu, 26 Apr 2012 21:33:00 +0100</updated>
                            <resolved>Fri, 16 Dec 2011 02:45:03 +0000</resolved>
                                    <version>0.9.1</version>
                                    <fixVersion>0.10.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13168988" author="thejas" created="Wed, 14 Dec 2011 02:00:58 +0000"  >&lt;p&gt;To ensure that the default properties are same when commandline or PigServer is used, it would be better to have same function set it from Main.run and PigServer constructor. &lt;/p&gt;

&lt;p&gt;The following section in Main can be moved to a function in PropertiesUtil and get called from PropertiesUtil.loadDefaultProperties. We also need a test case. Can you add one unit test on the lines of testPigProperties in  TestPigServer.java ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;//by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; warning aggregation is on
&lt;/span&gt;            properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;, &quot;&quot;+&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        }

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;//by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; multiquery optimization is on
&lt;/span&gt;            properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;, &quot;&quot;+&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        }

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;//by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; we keep going on error on the backend
&lt;/span&gt;            properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;, &quot;&quot;+&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13169088" author="prkommireddi" created="Wed, 14 Dec 2011 05:16:19 +0000"  >&lt;p&gt;That makes sense. Thejas, about naming does &quot;setDefaultsIfUnset(Properties properties)&quot; sound ok? This would be a private method within PropertiesUtil and called by loadDefaultProperties(Properties properties). &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 /**
     * Sets properties to their &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; values &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not set by Client
     * @param properties
     */
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setDefaultsIfUnset(Properties properties) {
    	&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;//by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; warning aggregation is on
&lt;/span&gt;            properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;, &quot;&quot;+&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        }

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;//by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; multiquery optimization is on
&lt;/span&gt;            properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;, &quot;&quot;+&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        }

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;//by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; we keep going on error on the backend
&lt;/span&gt;            properties.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;, &quot;&quot;+&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13169112" author="prkommireddi" created="Wed, 14 Dec 2011 06:35:18 +0000"  >&lt;p&gt;I would be adding a test case to TestPigServer&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Test
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testDefaultPigProperties() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Throwable {
		File propertyFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.properties&quot;&lt;/span&gt;);

		Properties properties = PropertiesUtil.loadDefaultProperties();
		Assert
		.assertTrue(properties.getProperty(
				&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.exec.reducers.max&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;999&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
		
		PrintWriter out = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PrintWriter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileWriter(propertyFile));
		out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;);
		out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;);
		out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;);
		
		out.close();

		properties = PropertiesUtil.loadDefaultProperties();
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;)
				.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;)
				.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;)
				.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));

		propertyFile.delete();
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13169689" author="prkommireddi" created="Wed, 14 Dec 2011 21:00:36 +0000"  >&lt;p&gt;Slightly modified the test case to add testing with PigServer. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Test
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testDefaultPigProperties() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Throwable {
    	&lt;span class=&quot;code-comment&quot;&gt;//Test with PigServer
&lt;/span&gt;    	PigServer pigServer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PigServer(ExecType.MAPREDUCE);
    	Properties properties = pigServer.getPigContext().getProperties();
    	
    	Assert
		.assertTrue(properties.getProperty(
				&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.exec.reducers.max&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;999&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
    	
		&lt;span class=&quot;code-comment&quot;&gt;//Test with properties file
&lt;/span&gt;		File propertyFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.properties&quot;&lt;/span&gt;);

		properties = PropertiesUtil.loadDefaultProperties();
		
		Assert
		.assertTrue(properties.getProperty(
				&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.exec.reducers.max&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;999&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;).equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
		
		PrintWriter out = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PrintWriter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileWriter(propertyFile));
		out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;);
		out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;);
		out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;);
		
		out.close();

		properties = PropertiesUtil.loadDefaultProperties();
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;aggregate.warning&quot;&lt;/span&gt;)
				.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;opt.multiquery&quot;&lt;/span&gt;)
				.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;));
		Assert.assertTrue(properties.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;stop.on.failure&quot;&lt;/span&gt;)
				.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;));

		propertyFile.delete();
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13170721" author="thejas" created="Fri, 16 Dec 2011 02:45:03 +0000"  >&lt;p&gt;+1. Patch committed to 0.10 branch and trunk.&lt;br/&gt;
Prashant, Thanks for the contribution!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12507112" name="aggregateWarning.patch" size="866" author="prkommireddi" created="Tue, 13 Dec 2011 01:36:55 +0000"/>
                            <attachment id="12507433" name="aggregateWarning2425.txt" size="4644" author="prkommireddi" created="Wed, 14 Dec 2011 21:02:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Dec 2011 02:00:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>220577</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyax5j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97682</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>