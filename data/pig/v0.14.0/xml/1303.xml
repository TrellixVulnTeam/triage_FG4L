<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:00:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1303/PIG-1303.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1303] unable to set outgoing format for org.apache.pig.piggybank.evaluation.util.apachelogparser.DateExtractor</title>
                <link>https://issues.apache.org/jira/browse/PIG-1303</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;I&apos;m unable to set the format of the outgoing date string in the constructor as it&apos;s supposed to work. &lt;br/&gt;
The only way i could change the format was to change the default in the java class and rebuild piggybank.&lt;br/&gt;
Apparently this has something to do with the way pig instantiates DateExtractor, quoting a replier on the mailing list:&lt;/p&gt;

&lt;p&gt;David Vrensk said:&lt;/p&gt;

&lt;p&gt;I ran into the same problem a couple of weeks ago, and&lt;br/&gt;
played around with the code inserting some print/log statements.  It turns&lt;br/&gt;
out that the arguments are only used in the initial constructor calls, when&lt;br/&gt;
the pig process is starting, but once pig reaches the point where it would&lt;br/&gt;
use the udf, it creates new DateExtractors without passing the arguments.&lt;/p&gt;
</description>
                <environment>&lt;p&gt;pig 0.6.0 on a fedora linux machine, jdk 1.6 u11&lt;/p&gt;</environment>
        <key id="12459401">PIG-1303</key>
            <summary>unable to set outgoing format for org.apache.pig.piggybank.evaluation.util.apachelogparser.DateExtractor</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dvryaboy">Dmitriy V. Ryaboy</assignee>
                                    <reporter username="jrussek">Johannes Ru&#223;ek</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Mar 2010 16:59:11 +0000</created>
                <updated>Mon, 14 Feb 2011 23:54:17 +0000</updated>
                            <resolved>Mon, 3 May 2010 20:03:45 +0100</resolved>
                                    <version>0.6.0</version>
                                    <fixVersion>0.7.0</fixVersion>
                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12857392" author="jrussek" created="Thu, 15 Apr 2010 17:35:21 +0100"  >&lt;p&gt;Hello everybody,&lt;br/&gt;
this fixes it for us.&lt;br/&gt;
Apparently due to the Typemagic the FuncSpec that is returned by our EvalFunc.getArgToFuncMapping() which doesn&apos;t contain the constructor arguments is used instead of the perfectly fine one in &quot;func&quot;, which contains the constructor arguments.&lt;br/&gt;
We&apos;ve just copied the arguments from func to matchingSpec to make it work.&lt;br/&gt;
Johannes&lt;/p&gt;</comment>
                            <comment id="12860103" author="hcbusy" created="Fri, 23 Apr 2010 03:35:32 +0100"  >&lt;p&gt;Okay, so, here&apos;s a thought:&lt;/p&gt;

&lt;p&gt;I&apos;m kind of stuck writing the initial/intermed/Final methods for an algebraic EvalFunc that has constructor parameters because I couldn&apos;t pass the parameters in.&lt;/p&gt;


&lt;p&gt;A suggestion is to do this (without being incompatible with previous versions)&lt;/p&gt;

&lt;p&gt;Alter EvalFunc&apos;s profile so that&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class EvalFunc&amp;lt;T&amp;gt;  {

   &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; handleChildConstructorParameters(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;... childConstructor){
      &lt;span class=&quot;code-comment&quot;&gt;// by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; nothing.
&lt;/span&gt;   }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; EvalFunc(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;... constructorParameters){
        handleChildConstructorParameters(constructorParameters);
        ... then &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; everything &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; it used to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;.
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;The reason why this is necessary is because I&apos;ll need to overrite handleChildConstructorParameters in my Algebraic EvalFunc to do some things before the rest of EvalFunc()&apos;s constructor continues. This will help fix this date format problem for Algebraic evalfunc&apos;s.&lt;/p&gt;

</comment>
                            <comment id="12860142" author="dvryaboy" created="Fri, 23 Apr 2010 07:14:53 +0100"  >&lt;p&gt;hc,&lt;br/&gt;
I haven&apos;t gone through the code, but I think we should just try to do the same thing for initial, intermediate, and final functions, in terms of instantiation, as is already being done for the regular EvalFunc, and construct a better FuncSpec. I doubt we need the handleChildConstructorParams function.&lt;/p&gt;</comment>
                            <comment id="12860297" author="hcbusy" created="Fri, 23 Apr 2010 17:04:35 +0100"  >&lt;p&gt;But the problem is that inside the EvalFunc constructor, in case of Algebraic classes, it constructs each of Initial, Intermediate and final which are EvalFunc&apos;s that, in my case, require a parameter to operate correctly.&lt;/p&gt;

&lt;p&gt;If I declare the helper class that represent the initial/intermediate/final &lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HelperClass &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; EvalFunc&amp;lt;Tuple&amp;gt; {
		&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HelperClass() {
			&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;();
		}

		&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Tuple exec(Tuple input) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
			&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; extreme(fieldIndex, sign, input, reporter);
		}

	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where the fieldIndex and sign come from the surrounding class (note the class is not static) then the code crashes. It&apos;s not able to construct the HelperClass with this error&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;could not instantiate &apos;org.apache.pig.piggybank.evaluation.ExtremalTupleByNthField$HelperClass&apos; with arguments &apos;null&apos;&lt;br/&gt;
java.lang.RuntimeException: could not instantiate &apos;org.apache.pig.piggybank.evaluation.ExtremalTupleByNthField$HelperClass&apos; with arguments &apos;null&apos;&lt;br/&gt;
        at org.apache.pig.impl.PigContext.instantiateFuncFromSpec(PigContext.java:498)&lt;br/&gt;
        at org.apache.pig.EvalFunc.getReturnTypeFromSpec(EvalFunc.java:136)&lt;br/&gt;
        at org.apache.pig.EvalFunc.&amp;lt;init&amp;gt;(EvalFunc.java:123)&lt;br/&gt;
        at org.apache.pig.piggybank.evaluation.ExtremalTupleByNthField.&amp;lt;init&amp;gt;(ExtremalTupleByNthField.java:77)&lt;br/&gt;
        at org.apache.pig.piggybank.evaluation.TestExtremalTupleByNthField.testMin(Unknown Source)&lt;br/&gt;
Caused by: java.lang.InstantiationException: org.apache.pig.piggybank.evaluation.ExtremalTupleByNthField$HelperClass&lt;br/&gt;
        at java.lang.Class.newInstance0(Class.java:340)&lt;br/&gt;
        at java.lang.Class.newInstance(Class.java:308)&lt;br/&gt;
        at org.apache.pig.impl.PigContext.instantiateFuncFromSpec(PigContext.java:468)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Basically, I think it&apos;s not able to construct because the class can only be constructed from an instance of ExtremalTupleByNthField.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        ExtremalTupleByNthField etbnf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ExtremalTupleByNthField(&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;max&quot;&lt;/span&gt;);
        etbnf.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ExtremalTupleByNthField.HelperClass();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So my solution to this problem was to make this class static. But make it so that EvalFunc can take a vararg that will eventually contain the actual parameters.&lt;/p&gt;

&lt;p&gt;the handleChildConstructorParameters method in the EvalFunc will construct a string that represents the call into the initial/intermediate/final methods but it contains parameters that came from the ExtremalTupleByNthField.&lt;/p&gt;</comment>
                            <comment id="12860310" author="hcbusy" created="Fri, 23 Apr 2010 17:53:40 +0100"  >&lt;p&gt;Hmm, okay, so let me shorten my problem. Basically the functions &lt;/p&gt;

&lt;p&gt;getInitial, getIntermed, and getFinal in my Algebraic class doesn&apos;t have access to the constructor parameters. The reason is this. in Java, the super() constructor can only be called as the very first thing that the deriving class&apos;s constructor does, so my udfs has constructors that look like this:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ExtremalTupleByNthField(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fieldIndexString, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; order) {
		&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;();
                parameters = &lt;span class=&quot;code-quote&quot;&gt;&quot;(&apos;&quot;&lt;/span&gt;+fieldIndexString+&lt;span class=&quot;code-quote&quot;&gt;&quot;&apos;,&apos;&quot;&lt;/span&gt;+order+&lt;span class=&quot;code-quote&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;
         }
       @Override
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getInitial() {
		&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HelperClass.class.getName()+parameters;
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the problem is EvalFunc() constructor calls the child class&apos;s getInitial() to type check. When it does this, it finds that my getInitial() returns something in complete because the &quot;parameters&quot; member variable hasn&apos;t been initialized yet. This is a pretty mundane problem with java programs and the way to fix it is what I&apos;ve submitted in the patch calling an overridden method in the super()&apos;s constructor.&lt;/p&gt;

&lt;p&gt;I mean, I don&apos;t see any other way to do this, but I&apos;d be willing to work on another implementation if you can suggest one?&lt;/p&gt;
</comment>
                            <comment id="12860317" author="dvryaboy" created="Fri, 23 Apr 2010 18:06:03 +0100"  >&lt;p&gt;Right, I&apos;m with you on what the problem is.&lt;/p&gt;

&lt;p&gt;My suggestion is to look at the FuncSpec of the parent EvalFunc, and if it includes parameters, assume an equivalent FuncSpec should be created for initial, intermediate, and final classes. Essentially do the same thing we do for regular EvalFuncs when they are DEFINEd to use parameterized constructors.&lt;/p&gt;

&lt;p&gt;You would then have to make sure that initial, intermediate, and final classes have the required constructors, but that&apos;s what you&apos;d expect to have to do anyway.&lt;/p&gt;</comment>
                            <comment id="12860320" author="jrussek" created="Fri, 23 Apr 2010 18:28:34 +0100"  >&lt;p&gt;I&apos;m sorry, but is this really the problem with the DateExtractor UDF?&lt;br/&gt;
what i&apos;ve seen during debugging is that it implements getArgToFuncMapping which returns a funcspec without the constructor arguments. I&apos;ve tried to look into it but i didn&apos;t find an easy way to figure the initial constructor arguments out when getArgToFuncMapping is being called.&lt;br/&gt;
also, DateExtractor isn&apos;t even algebraic. i&apos;m not sure, but what&apos;s wrong with keeping the constructor arguments from the first instantiation and apply them to any further ones, may it be algebraic child classes or pig type-specific implementations?&lt;/p&gt;</comment>
                            <comment id="12860323" author="dvryaboy" created="Fri, 23 Apr 2010 18:38:13 +0100"  >&lt;p&gt;Johannes, it&apos;s not, it&apos;s just a related root cause (inconsistent use of UDF constructors)&lt;br/&gt;
Keeping constructor arguments and applying them to all instantiations is exactly what I am advocating.&lt;/p&gt;</comment>
                            <comment id="12860326" author="jrussek" created="Fri, 23 Apr 2010 18:43:12 +0100"  >&lt;p&gt;alright, i got confused &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
+1 then!&lt;/p&gt;</comment>
                            <comment id="12860862" author="dvryaboy" created="Mon, 26 Apr 2010 09:31:55 +0100"  >&lt;p&gt;I think this qualifies as a bug fix and should be applied to 0.7 as well as going forward into 0.8&lt;/p&gt;</comment>
                            <comment id="12860864" author="dvryaboy" created="Mon, 26 Apr 2010 09:36:05 +0100"  >&lt;p&gt;Attached a patch for both regular UDFs and Algebraics. It&apos;s essentially what Johannes posted, I just added a test (but see the rest of this comment), and applied the same logic to Algebraic EvalFunc construction.&lt;/p&gt;

&lt;p&gt;The test only really tests algebraic instantiation; I haven&apos;t been successful in reproducing the normal instantiation problem in test mode (which is probably why it&apos;s gone undetected so far). There&apos;s a test for it in my patch, but it&apos;s a bad one &amp;#8211; the test actually passes even without the patch to the TypeCheckingVisitor.  &lt;/p&gt;

&lt;p&gt;Johannes, could you try applying this patch and let us know if it fixes your DateExtractor problem?&lt;/p&gt;

&lt;p&gt;hc, this patch should unblock you for &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1386&quot; title=&quot;UDF to extend functionalities of MaxTupleBy1stField&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1386&quot;&gt;&lt;del&gt;PIG-1386&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12860922" author="hadoopqa" created="Mon, 26 Apr 2010 14:46:06 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12442837/PIG-1303.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12442837/PIG-1303.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 937570.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/302/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/302/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/302/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/302/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/302/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/302/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12861248" author="hcbusy" created="Tue, 27 Apr 2010 06:35:39 +0100"  >&lt;p&gt;+(google^2)&lt;/p&gt;

&lt;p&gt;that worked!&lt;/p&gt;</comment>
                            <comment id="12861442" author="alangates" created="Tue, 27 Apr 2010 17:12:27 +0100"  >&lt;p&gt;Dmitry, I&apos;ll try to get to reviewing this patch today.&lt;/p&gt;</comment>
                            <comment id="12861639" author="alangates" created="Wed, 28 Apr 2010 02:04:56 +0100"  >&lt;p&gt;Sorry, I didn&apos;t make it to reviewing this today.  I&apos;ll put it at the top of tomorrow&apos;s list.  &lt;/p&gt;

&lt;p&gt;On the 0.7 question, I&apos;m open to that as long as we test it really well.&lt;/p&gt;</comment>
                            <comment id="12861791" author="jrussek" created="Wed, 28 Apr 2010 13:38:22 +0100"  >&lt;p&gt;Dmitriy, i should be able to test your patch on my issues by tomorrow.&lt;/p&gt;</comment>
                            <comment id="12861986" author="alangates" created="Wed, 28 Apr 2010 23:58:28 +0100"  >&lt;p&gt;In general code looks good.  I think we should add a test for a function that uses the argsToFuncMapping mechanism since that&apos;s a totally separate code path from algebraic.&lt;/p&gt;</comment>
                            <comment id="12861992" author="dvryaboy" created="Thu, 29 Apr 2010 00:15:57 +0100"  >&lt;p&gt;Agreed - but as you can see, I added a test like that (testRegularInstantiation), except it always passes, even without the patch. Even though theoretically it shouldn&apos;t. Can you suggest a legitimate way of testing this, barring an actual cluster test? Johannes, maybe you have a testcase that&apos;s reproducible when using the MiniCluster?&lt;/p&gt;</comment>
                            <comment id="12862940" author="alangates" created="Sat, 1 May 2010 01:18:10 +0100"  >&lt;p&gt;I think the testing you&apos;ve done is probably adequate.  We&apos;re looking at trying to start the release process for 0.7 next week, so let&apos;s get this checked in so it can make it.&lt;/p&gt;</comment>
                            <comment id="12863474" author="dvryaboy" created="Mon, 3 May 2010 20:03:45 +0100"  >&lt;p&gt;Committed to 0.7 and trunk. Thanks for the help, Johannes!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12462608">PIG-1386</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12436116">PIG-969</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12441845" name="ASF.LICENSE.NOT.GRANTED--TypeCheckingVisitor.java.diff" size="662" author="jrussek" created="Thu, 15 Apr 2010 17:35:21 +0100"/>
                            <attachment id="12442837" name="PIG-1303.patch" size="9421" author="dvryaboy" created="Mon, 26 Apr 2010 09:30:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Apr 2010 02:35:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>41715</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaown:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>