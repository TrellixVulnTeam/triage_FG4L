<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:55:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3492/PIG-3492.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3492] ColumnPrune dropping used column due to LogicalRelationalOperator.fixDuplicateUids changes not propagating</title>
                <link>https://issues.apache.org/jira/browse/PIG-3492</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;I don&apos;t have a testcase I can upload at the moment, but here&apos;s my observation.&lt;/p&gt;

&lt;p&gt;SplitFilter -&amp;gt; schemaResetter -&amp;gt; LOGenerate.getSchema -&amp;gt; LogicalRelationalOperator.fixDuplicateUids() creating a new UID but that UID is not propagated to the entire plan (since SplitFilter.reportChanges only returns subplan).&lt;/p&gt;

&lt;p&gt;As a result, I am seeing ColumnPruning cutting off those used columns.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12671642">PIG-3492</key>
            <summary>ColumnPrune dropping used column due to LogicalRelationalOperator.fixDuplicateUids changes not propagating</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knoguchi">Koji Noguchi</assignee>
                                    <reporter username="knoguchi">Koji Noguchi</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Oct 2013 19:57:36 +0100</created>
                <updated>Tue, 15 Apr 2014 21:45:01 +0100</updated>
                            <resolved>Wed, 23 Oct 2013 19:15:18 +0100</resolved>
                                    <version>0.11.1</version>
                    <version>0.12.1</version>
                    <version>0.13.0</version>
                                    <fixVersion>0.12.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13783228" author="daijy" created="Tue, 1 Oct 2013 20:05:02 +0100"  >&lt;p&gt;Yes, I also see couple of places fixDuplicateUids is get misused. uid play a vital role in ColumnPruner. So every time we reassign uid, we need to make sure operator has the knowledge how does that uid get generated, and convey it to ColumnPruner.&lt;/p&gt;</comment>
                            <comment id="13786430" author="knoguchi" created="Fri, 4 Oct 2013 19:06:49 +0100"  >&lt;p&gt;We&apos;re only seeing this issue on complicate scripts with hundreds of lines.&lt;br/&gt;
This is the shortest I got.  This test needs to be called with &apos;-t PushUpFilter&apos;.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;pig&amp;gt; cat test.pig
A = load &apos;./test.txt&apos; as (a:int, b:chararray);
B = FOREACH A generate a;
C = GROUP B by a;
D = filter C by group &amp;gt; 0 and group &amp;lt; 100;
E = FOREACH D {
         F = LIMIT B 1 ;
         GENERATE B.a as mya, FLATTEN(F.a) as setting;
    }
G = FOREACH E GENERATE mya, setting as setting;
dump G;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Relation G should contain two columns, &apos;mya&apos; and &apos;setting&apos;.  But result only contains 1 column.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;pig&amp;gt; cat test.txt
3       i
3       i
1       i
2       i
2       i
3       i
pig&amp;gt; pig -x local  -t PushUpFilter ./test.pig
({(1)})
({(2),(2)})
({(3),(3),(3)})
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By skipping ColumnMapKeyPrune or SplitFilter, you get a correct result of &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;pig&amp;gt; pig -x local  -t PushUpFilter -t ColumnMapKeyPrune ./test.pig
or
pig&amp;gt; pig -x local  -t PushUpFilter -t SplitFilter  ./test.pig
({(1)},1)
({(2),(2)},2)
({(3),(3),(3)},3)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explain would show that second column was cut off.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Incorrect case (-t PushUpFilter)
G: (Name: LOStore Schema: mya#60:bag{#59:tuple(a#23:int)})ColumnPrune:InputUids=[63, 60]ColumnPrune:OutputUids=[63, 60]
Correct case (-t PushUpFilter -t SplitFilter)
G: (Name: LOStore Schema: mya#60:bag{#59:tuple(a#23:int)},setting#63:int)ColumnPrune:InputUids=[63, 60]ColumnPrune:OutputUids=[63, 60]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13789719" author="knoguchi" created="Tue, 8 Oct 2013 22:28:05 +0100"  >&lt;p&gt;I see three Jiras that added LogicalRelationalOperator.fixDuplicateUids.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3020&quot; title=&quot;&amp;quot;Duplicate uid in schema&amp;quot; error when joining two relations derived from the same load statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3020&quot;&gt;&lt;del&gt;PIG-3020&lt;/del&gt;&lt;/a&gt; (LOJoin) &quot;Duplicate uid in schema&quot; error when joining two relations derived from the same load statement&quot;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3144&quot; title=&quot;Erroneous map entry alias resolution leading to &amp;quot;Duplicate schema alias&amp;quot; errors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3144&quot;&gt;&lt;del&gt;PIG-3144&lt;/del&gt;&lt;/a&gt; (LOGenerate)  &quot;Erroneous map entry alias resolution leading to &quot;Duplicate schema alias&quot; errors&quot;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3292&quot; title=&quot;Logical plan invalid state: duplicate uid in schema during self-join to get cross product&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3292&quot;&gt;&lt;del&gt;PIG-3292&lt;/del&gt;&lt;/a&gt; (LOCross)   &quot;Logical plan invalid state: duplicate uid in schema during self-join to get cross product&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m skipping &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3292&quot; title=&quot;Logical plan invalid state: duplicate uid in schema during self-join to get cross product&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3292&quot;&gt;&lt;del&gt;PIG-3292&lt;/del&gt;&lt;/a&gt; since Daniel reviewed with the comment&lt;br/&gt;
  &quot;Interplay with ColumnPruner is fine here since nested plan will include entire required plan branch&quot;&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3020&quot; title=&quot;&amp;quot;Duplicate uid in schema&amp;quot; error when joining two relations derived from the same load statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3020&quot;&gt;&lt;del&gt;PIG-3020&lt;/del&gt;&lt;/a&gt; (LOJoin) actually talks about two separate problems.&lt;br/&gt;
(i-1) PigParser failing with &apos;Duplicate schema alias: age&apos;. Only happened in 0.11.&lt;br/&gt;
   This was actually about ImplicitSplitInserter&apos;s new uid not propagating to the top foreach.&lt;br/&gt;
I believe this issue was fixed later by &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3310&quot; title=&quot;ImplicitSplitInserter does not generate new uids for nested schema fields, leading to miscomputations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3310&quot;&gt;&lt;del&gt;PIG-3310&lt;/del&gt;&lt;/a&gt; (&quot;ImplicitSplitInserter does not generate new uids for nested schema fields, leading to miscomputations&quot; fixed only in 0.12).  Confirmed by running a simple test without LogicalRelationalOperator.fixDuplicateUids.&lt;/p&gt;

&lt;p&gt;(i-2) &apos;describe&apos; showing incorrect schema due to duplicate UID.  Happened on 0.10 and 0.11.&lt;br/&gt;
   This was due to &apos;describe&apos; being called without LogicalPlanOptimizer.optimize() which includes some important rules like ImplicitSplitInserter and  DuplicateForEachColumnRewrite.&lt;/p&gt;

&lt;p&gt;(ii)  &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3144&quot; title=&quot;Erroneous map entry alias resolution leading to &amp;quot;Duplicate schema alias&amp;quot; errors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3144&quot;&gt;&lt;del&gt;PIG-3144&lt;/del&gt;&lt;/a&gt;(LOGenerate) issue seems to have started after a completely unrelated Jira,&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2710&quot; title=&quot;Implement Naive CUBE operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2710&quot;&gt;&lt;del&gt;PIG-2710&lt;/del&gt;&lt;/a&gt; &quot;Implement Naive CUBE operator&quot; in 0.11.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;src/org/apache/pig/parser/LogicalPlanBuilder.java

+ 406     private void expandAndResetVisitor(SourceLocation loc,
+ 407       LogicalRelationalOperator lrop) throws ParserValidationException {
+ 408           try {
+ 409               (new ProjectStarExpander(lrop.getPlan())).visit();
+ 410               (new ProjStarInUdfExpander(lrop.getPlan())).visit();
+ 411               new SchemaResetter(lrop.getPlan(), true).visit();
+ 412           } catch (FrontendException e) {
+ 413               throw new ParserValidationException(intStream, loc, e);
+ 414           }
+ 415     }

 934     String buildForeachOp(SourceLocation loc, LOForEach op, String alias, String inputAlias, LogicalPlan innerPlan)
 935     throws ParserValidationException {
 936         op.setInnerPlan( innerPlan );
 937         alias = buildOp( loc, op, alias, inputAlias, null );

-             (new ProjectStarExpander(op.getPlan())).visit(op);
-             (new ProjStarInUdfExpander(op.getPlan())).visit(op);
-             new SchemaResetter(op.getPlan(), true).visit(op);

+938         expandAndResetVisitor(loc, op);
 939         return alias;
 940     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So basically we started traversing the entire plan (visit()) for every operator builds instead of just the operator it&apos;s working on (visit(op)).&lt;br/&gt;
This has caused the &apos;alias&apos; to get updated before LogicalPlanOptimizer.optimize() -&amp;gt; DuplicateForEachColumnRewrite and causing the&lt;br/&gt;
&quot;Duplicate schema alias&quot; error.  Rolling back this change seems to bring back the pre-0.11 behavior.&lt;/p&gt;


&lt;p&gt;Uploading an intial patch. Goal is to take out the LogicalRelationalOperator.fixDuplicateUids. from both &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3020&quot; title=&quot;&amp;quot;Duplicate uid in schema&amp;quot; error when joining two relations derived from the same load statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3020&quot;&gt;&lt;del&gt;PIG-3020&lt;/del&gt;&lt;/a&gt;(LOJoin) and &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3144&quot; title=&quot;Erroneous map entry alias resolution leading to &amp;quot;Duplicate schema alias&amp;quot; errors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3144&quot;&gt;&lt;del&gt;PIG-3144&lt;/del&gt;&lt;/a&gt;(LOGenerate).&lt;/p&gt;

&lt;p&gt;(i-1) For release-0.12: No-op.  For release-0.11: Backport pig-3310.&lt;br/&gt;
(i-2) We can either fix it by forcing compilePp() before describe or moving ImplicitSplitInserter/DuplicateForEachColumnRewrite to PigServer.compile().&lt;br/&gt;
      There is a comment that says&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./src/org/apache/pig/PigServer.java
1692         private void compile(LogicalPlan lp) throws FrontendException  {
....
1699
1700             // TODO: move optimizer here from HExecuteEngine.
1701             // TODO: input/output validation visitor
1702
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;       For now, I&apos;m taking an easy approach of calling compilePp() for describe.&lt;/p&gt;

&lt;p&gt;(ii) I&apos;m rolling back small section of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2710&quot; title=&quot;Implement Naive CUBE operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2710&quot;&gt;&lt;del&gt;PIG-2710&lt;/del&gt;&lt;/a&gt; in src/org/apache/pig/parser/LogicalPlanBuilder.java that was hopefully only for shortening the code and the change in behavior was unintended.&lt;/p&gt;

&lt;p&gt;For now, patch only applies to release 0.12 since it seems like location of LogicalPlanOptimizer.optimize() may change in the near future (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3508&quot; title=&quot;&amp;#39;explain&amp;#39; now showing logical plan BEFORE the necessary optimization (ImplicitSplitInserter, DuplicateForEachColumnRewrite,etc)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3508&quot;&gt;&lt;del&gt;PIG-3508&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13790606" author="knoguchi" created="Wed, 9 Oct 2013 17:55:12 +0100"  >&lt;p&gt;I carelessly uploaded a patch with a typo (and would fail on compile error).&lt;br/&gt;
Running unittest,  but appreciate your feedback.&lt;/p&gt;</comment>
                            <comment id="13792851" author="rohini" created="Fri, 11 Oct 2013 18:34:46 +0100"  >&lt;p&gt;compilePp in dumpSchema makes couple of tests fail returning empty schema.&lt;/p&gt;</comment>
                            <comment id="13797985" author="knoguchi" created="Thu, 17 Oct 2013 16:13:01 +0100"  >&lt;blockquote&gt;&lt;p&gt;compilePp in dumpSchema makes couple of tests fail returning empty schema.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Rohini.  I guess my shortcut didn&apos;t work for some tests...  For 0.11, we might want to take out compilePp hack and keep the rest.  That would at least make 0.11 as good(bad) as 0.10 in terms of the bugs we&apos;re seeing. (&apos;describe&apos; bug would remain but LOGenerate/LOJoin bug fixed)&lt;/p&gt;

&lt;p&gt;Now, for the 0.12 and long term,  Taking the latter approach from my previous comment.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;(i-2) We can either fix it by forcing compilePp() before describe or moving ImplicitSplitInserter/DuplicateForEachColumnRewrite to PigServer.compile().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ImplicitSplitInserter/DuplicateForEachColumnRewrite seem to be an essential part of compilation for correctness and they aren&apos;t really an optimization.   With that assumption, I rewrote them as Visitors and moved them from LogicalPlanOptimizer to PigServer.compile.&lt;/p&gt;

&lt;p&gt;With this change, 38 unit tests started failing.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;5 tests failing with NullPointerException in Illustrate.  I believe this was due to a bug in pig/pen/LineageTrimmingVisitor.java.  Added entry of LOSplitOutput for the fix.&lt;/li&gt;
	&lt;li&gt;1 TestOptimizeLimit failing with typecasting LOLimit to LOForeach.  This was due to change in logical plan having  ImplicitSplitInserter/DuplicateForEachColumnRewrite as default irrespective of the optimizer the test picks.&lt;/li&gt;
	&lt;li&gt;32 failures at TestMultiQueryCompiler/TestMultiQueryLocal since the tests were counting the number of Logical Operators.  Updated the tests after making sure increase is only coming from LOSplit and LOSplitOutput.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Trying to get e2e running with this patch.&lt;/p&gt;</comment>
                            <comment id="13799424" author="knoguchi" created="Fri, 18 Oct 2013 20:17:06 +0100"  >&lt;p&gt;Daniel asked me to summarize the changes.  Here you go.&lt;/p&gt;

&lt;p&gt;(1) Move DuplicateForEachColumnRewrite and ImplicitSplitInserter from LogicalPlanOptimizer to PigServer.compile().&lt;br/&gt;
    Reason: Next visitor, TypeCheckingRelVisitor, was calling resetSchema/getSchema and fields with duplicate UIDs were getting incorrect aliases due to that.  (Execution was fine since LogicalPlanOptimizer.optimize() was eventually called, but not for &apos;describe&apos;.  Also, even temporary, it&apos;s not good to have incorrect aliases assigned to LogicalOperators.&lt;/p&gt;

&lt;p&gt;(2) Fix the test cases that started failing due to (1).&lt;br/&gt;
    (2-1) LineageTrimmingVisitor (used in illustrate) was hitting with NullPointerException since LOSplitOutput was missing in the code.&lt;br/&gt;
    (2-2) TestOptimizeLimit failed due to changed logicalplan causing typecast error.  Fixed.&lt;br/&gt;
    (2-3) Bunch of TestOptimizeLimit tests failed due to new logicalplan including LOSplit and LOSplitOUtput.&lt;/p&gt;

&lt;p&gt;(3) Rolling back changes in LogicalPlanBuilder from pig-2710 since ProjectStarExpander/ProjStarInUdfExpander/ProjStarInUdfExpander used to be called only for the corresponding LogicalOperator but the change started calling them for the entire plan each time.  This change itself fixed (5) and brought back the 0.10 behavior.&lt;/p&gt;

&lt;p&gt;(4) Revert &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3020&quot; title=&quot;&amp;quot;Duplicate uid in schema&amp;quot; error when joining two relations derived from the same load statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3020&quot;&gt;&lt;del&gt;PIG-3020&lt;/del&gt;&lt;/a&gt;. Take out LogicalRelationalOperator.fixDuplicateUids from LOJoin.  Fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3310&quot; title=&quot;ImplicitSplitInserter does not generate new uids for nested schema fields, leading to miscomputations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3310&quot;&gt;&lt;del&gt;PIG-3310&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(5) Revert &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3144&quot; title=&quot;Erroneous map entry alias resolution leading to &amp;quot;Duplicate schema alias&amp;quot; errors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3144&quot;&gt;&lt;del&gt;PIG-3144&lt;/del&gt;&lt;/a&gt;. Take out LogicalRelationalOperator.fixDuplicateUids from LOGenerate.  Fixed by (1) and (3).&lt;/p&gt;</comment>
                            <comment id="13799437" author="knoguchi" created="Fri, 18 Oct 2013 20:38:13 +0100"  >&lt;p&gt;Forgot to add. &lt;/p&gt;

&lt;p&gt;For 0.11, asking if we can consider (3), (4) and (5).  Leaving the &apos;describe&apos; bug.&lt;br/&gt;
For 0.12 and later, asking (1) to (5).&lt;/p&gt;</comment>
                            <comment id="13799728" author="daijy" created="Sat, 19 Oct 2013 02:49:31 +0100"  >&lt;p&gt;Thanks &lt;span class=&quot;error&quot;&gt;&amp;#91;~horaguchi&amp;#93;&lt;/span&gt; for detailed explanation. This patch fixed several issues:&lt;br/&gt;
1. Remove fixDuplicateUids from LOJoin/LOGenerate&lt;br/&gt;
That&apos;s for sure need to be removed. We cannot arbitrary reassign uid. Every operator should have lineage knowledge and be able to trace to input uids which generate a particular output uid. Sometimes we do need to reassign the uid, but if this happens, we need to remember the mapping inside the operator, and update the logic ColumnDependencyVisitor of tracing every output uid to its input uid. &lt;/p&gt;

&lt;p&gt;Take LOJoin for example, each output column is derived from one input column without transformation, so we keep uid unchanged. If input#1 of join has the uid (1, 2, 3), input#2 has the uid (4, 5), the join output will have the uid (1, 2, 3, 4, 5). When ColumnDependencyVisitor try to prune uid 5, we know that is from second column of input#2. In the case we do want to regenerate output uid to (21, 22, 23, 24, 25), join operator need to remember the mapping (1-&amp;gt;21, 2-&amp;gt;22, 3-&amp;gt;23, 4-&amp;gt;24, 5-&amp;gt;25), so that when ColumnDependencyVisitor try to prune uid 25, we know it is from second column of input#2 as well. One example of uid regeneration is LOSplit, which has a field uidMapping to remember the mapping. ColumnDependencyVisitor will make use of this information to trace the lineage. &lt;/p&gt;

&lt;p&gt;As we already mentioned, uid regeneration is already done in LOSplitOutput, so after ImplicitSplitInserter, we shall not have duplicate uids and should not have uid conflict. The issue seen in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3020&quot; title=&quot;&amp;quot;Duplicate uid in schema&amp;quot; error when joining two relations derived from the same load statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3020&quot;&gt;&lt;del&gt;PIG-3020&lt;/del&gt;&lt;/a&gt; is due to a bug in LOSplitOutput uid mapping process as Koji mentioned.&lt;/p&gt;

&lt;p&gt;2. LogicalPlanBuilder.expandAndResetVisitor change&lt;br/&gt;
Not sure what drive the original change, seems there is no reason to visit the whole plan after building one operator. The logical plan is not in a consistent state at this moment, global SchemaResetter might not work&lt;/p&gt;

&lt;p&gt;3. move DuplicateForEachColumnRewrite and ImplicitSplitInserter&lt;br/&gt;
When we design optimizer, we try to include every plan transformation into it. But now I think we may separate it into two part. One is to bring the plan into a valid state, the other is the real optimizer rule. The reason is at validate stage, the plan is still inconsistent and many optimizer rule cannot handle, and the global SchemaReset/UidResetter does not work. We may want to do some refactory and make the separation clear in another Jira. &quot;describe&quot; should happen after validation, but might not need to go through optimizer. Move DuplicateForEachColumnRewrite/ImplicitSplitInserter into compile for now seems to be ok.&lt;/p&gt;

&lt;p&gt;Overall, the patch looks pretty good. It fix above mentioned issue cleanly. We might want to preceed with clear validator/optmizer separation in anther Jira.&lt;/p&gt;

&lt;p&gt;Will commit if tests pass.&lt;/p&gt;</comment>
                            <comment id="13800041" author="knoguchi" created="Sun, 20 Oct 2013 01:06:56 +0100"  >&lt;p&gt;Thanks for the review Daniel.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Thanks &lt;span class=&quot;error&quot;&gt;&amp;#91;~horaguchi&amp;#93;&lt;/span&gt; for detailed explanation. This patch fixed several issues:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Different Koji &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;   It&apos;s &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knoguchi&quot; class=&quot;user-hover&quot; rel=&quot;knoguchi&quot;&gt;Koji Noguchi&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13803081" author="daijy" created="Wed, 23 Oct 2013 19:06:19 +0100"  >&lt;p&gt;Fix some e2e test failures (eg: udf_TOBAGandTOTUPLE_3), also include Koji&apos;s test case in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3492&quot; title=&quot;ColumnPrune dropping used column due to LogicalRelationalOperator.fixDuplicateUids changes not propagating&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3492&quot;&gt;&lt;del&gt;PIG-3492&lt;/del&gt;&lt;/a&gt;-trunk-delta.patch.&lt;/p&gt;</comment>
                            <comment id="13803091" author="daijy" created="Wed, 23 Oct 2013 19:15:18 +0100"  >&lt;p&gt;pig-3492-trunk_04.patch and pig-3492-trunk-delta.patch are committed to both trunk and 0.12 branch. I don&apos;t think we will have additional 0.11 release, so skip 0.11 branch.&lt;/p&gt;

&lt;p&gt;I will open additional Jira to formalize the validator. &lt;/p&gt;

&lt;p&gt;Thanks Koji, that&apos;s a really important fix.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12614280">PIG-3020</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12629602">PIG-3144</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12609890" name="PIG-3492-trunk-delta.patch" size="4977" author="daijy" created="Wed, 23 Oct 2013 19:06:19 +0100"/>
                            <attachment id="12608947" name="pig-3492-trunk_04.patch" size="52394" author="knoguchi" created="Thu, 17 Oct 2013 16:13:01 +0100"/>
                            <attachment id="12607600" name="pig-3492-v0.12_01.patch" size="6184" author="knoguchi" created="Wed, 9 Oct 2013 17:55:12 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 1 Oct 2013 19:05:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>351352</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzif9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>351644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>