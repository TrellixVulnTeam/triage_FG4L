<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:02:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1461/PIG-1461.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1461] support union operation that merges based on column names</title>
                <link>https://issues.apache.org/jira/browse/PIG-1461</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;When the data has schema, it often makes sense to union on column names in schema rather than the position of the columns. &lt;br/&gt;
The behavior of existing union operator should remain backward compatible .&lt;/p&gt;

&lt;p&gt;This feature can be supported using either a new operator or extending union to support &apos;using&apos; clause . I am thinking of having a new operator called either unionschema or merge . Does anybody have any other suggestions for the syntax ?&lt;/p&gt;

&lt;p&gt;example -&lt;/p&gt;

&lt;p&gt;L1 = load &apos;x&apos; as (a,b);&lt;br/&gt;
L2 = load &apos;y&apos; as (b,c);&lt;br/&gt;
U = unionschema L1, L2;&lt;/p&gt;

&lt;p&gt;describe U;&lt;br/&gt;
U: &lt;/p&gt;
{a:bytearray, b:byetarray, c:bytearray}
</description>
                <environment></environment>
        <key id="12467634">PIG-1461</key>
            <summary>support union operation that merges based on column names</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thejas">Thejas M Nair</assignee>
                                    <reporter username="thejas">Thejas M Nair</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Jun 2010 23:15:51 +0100</created>
                <updated>Fri, 17 Dec 2010 22:44:36 +0000</updated>
                            <resolved>Wed, 4 Aug 2010 23:27:05 +0100</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.8.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12881420" author="thejas" created="Tue, 22 Jun 2010 23:33:24 +0100"  >&lt;p&gt;This operator will throw an error if the schema for any of the input relations is undefined.&lt;/p&gt;

&lt;p&gt;Users often need to lookup  the source relation downstream after the &apos;unionschema&apos; operation. It will be convenient to project an additional pseudo column whose value is the name of the input relation.&lt;br/&gt;
ie, the schema of U in description becomes - U : &lt;/p&gt;
{a:bytearray, b:bytearray, c:bytearray, source_relation : chararray }
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This feature does not enable a user to do something that was not possible earlier, it just makes the code more easy to maintain - you don&apos;t have to change the pig query if you have new columns .&lt;br/&gt;
The same results can be obtained using existing pig syntax as shown following query -&lt;/p&gt;

&lt;p&gt;L1 = load &apos;x&apos; as (a,b);&lt;br/&gt;
L2 = load &apos;y&apos; as (b,c);&lt;br/&gt;
F1 = foreach L1 generate a, b, null as c, source_relation as &apos;F1&apos;;&lt;br/&gt;
F2 = foreach L1 generate null as a, b, c, source_relation as &apos;F2&apos;;&lt;br/&gt;
U = union F1, F2;&lt;/p&gt;

&lt;p&gt;Note that, in this query if L1 or L2 schema changes, you will need to change F1 or F2 . &lt;/p&gt;
</comment>
                            <comment id="12881474" author="ashutoshc" created="Wed, 23 Jun 2010 01:10:21 +0100"  >&lt;p&gt;w.r.t language I think&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 U = union L1, L2 using &apos;merge&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;is better then &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
U = unionschema L1,L2;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because U is indeed union with duplicated columns eliminated. User doesn&apos;t need to learn about a new operator. &lt;br/&gt;
Internally for Pig, its better to avoid introducing new physical operator if we can.&lt;/p&gt;</comment>
                            <comment id="12892892" author="thejas" created="Tue, 27 Jul 2010 20:00:29 +0100"  >&lt;p&gt;The syntax - &quot; union ... using &apos;merge&apos; &quot; introduces a new use of the &quot; using &apos;...&apos; &quot; clause. So far this clause has been used to indicate the implementation algorithm and it did not have any impact on the semantics. &lt;br/&gt;
Instead a key word might be better if we are trying to avoid introducing another top level operator, similar to the case of outer joins -   eg - &quot; union onschema L1, L2;&quot;&lt;/p&gt;

&lt;p&gt;More suggestions/opinions on the syntax for this feature are welcome.&lt;/p&gt;
</comment>
                            <comment id="12892903" author="alangates" created="Tue, 27 Jul 2010 20:30:38 +0100"  >&lt;p&gt;+1 on Thejas comment that so far using indicates implementation not semantic change and it&apos;s best to keep it that way.  &quot;union onschema&quot; seems fine, as this seems equivalent to &quot;join outer&quot;.&lt;/p&gt;</comment>
                            <comment id="12893307" author="thejas" created="Wed, 28 Jul 2010 19:57:34 +0100"  >&lt;p&gt;The pseudo column containing the source relation, proposed in the first comment seems unnecessary. If user requires the source information to be available, they can project that in an additional foreach before the union. &lt;/p&gt;
</comment>
                            <comment id="12894994" author="thejas" created="Tue, 3 Aug 2010 20:11:34 +0100"  >&lt;p&gt;Canceling patch because of an issue found while i was creating example for documentation. &lt;/p&gt;</comment>
                            <comment id="12895067" author="hadoopqa" created="Tue, 3 Aug 2010 23:47:25 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12451133/PIG-1461.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12451133/PIG-1461.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 980930.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 405 release audit warnings (more than the trunk&apos;s current 403 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    -1 contrib tests.  The patch failed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/370/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12895082" author="thejas" created="Wed, 4 Aug 2010 00:22:30 +0100"  >&lt;p&gt;Documentation for UNION ONSCHEMA:&lt;/p&gt;

&lt;p&gt;Use the keyword ONSCHEMA with union so that the union is based on column names of the input relations, and not column position. &lt;br/&gt;
If the following requirements are not met, the statement will throw an error :&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;All inputs to the union should have a non null schema.&lt;/li&gt;
	&lt;li&gt;The data type for columns with same name in different input schemas should be compatible. Numeric types are compatible, and if column having same name in different input schemas have different numeric types , an implicit conversion will happen. bytearray type is considered compatible with all other types, a cast will be added to convert to other type. Bags or tuples having different inner schema are considered incompatible.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Example - &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
grunt&amp;gt; L1 = load &apos;f1&apos; using (a : &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, b : &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt;);
grunt&amp;gt; dump L1;
(11,12.0)
(21,22.0)

grunt&amp;gt; L2 = load &apos;f1&apos; using (a : &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, c : chararray);
grunt&amp;gt; dump L2;
(11,a)
(12,b)
(13,c)

grunt&amp;gt; U = union onschema L1, L2;
grunt&amp;gt; describe U ;
U : {a : &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, b : &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt;, c : chararray}

grunt&amp;gt; dump U;
(11,12.0,)
(21,22.0,)
(11,,a)
(12,,b)
(13,,c)


&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12895212" author="hadoopqa" created="Wed, 4 Aug 2010 11:33:02 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12451175/PIG-1461.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12451175/PIG-1461.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 981984.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 407 release audit warnings (more than the trunk&apos;s current 405 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    -1 contrib tests.  The patch failed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/372/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12895308" author="thejas" created="Wed, 4 Aug 2010 17:31:55 +0100"  >&lt;p&gt;Contrib tests pass on my local machine.&lt;br/&gt;
The release audit warnings are from jdiff of javadoc changes.&lt;br/&gt;
Patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12895383" author="olgan" created="Wed, 4 Aug 2010 20:38:48 +0100"  >&lt;p&gt;The patch looks good. A couple of comments:&lt;/p&gt;

&lt;p&gt;(1) Looks like there is a type in the code that loads data for testing:&lt;br/&gt;
w.println(&quot;5\tdef\t3\t&lt;/p&gt;
{(2,a),(2,b)}
&lt;p&gt;]&quot;); - contains an extra &quot;]&quot; at the end&lt;br/&gt;
(2) This is not related to the patch but to the documentation above. Please, add info that UNION supports 2 or more inputs.&lt;br/&gt;
(3) In mergeSchemasByAlias, I think it is safer to make copy of the schema rather than just assigning it for the corner case of 1 schema.&lt;br/&gt;
(4) Need to add a comment about inner bag schema to mergeFieldSchemaFirstLevelSameAlias&lt;br/&gt;
(5) General comment on schema merging - we have completely different code path for posiiton vs. alias based merge. I am worried that we will have subtly different semantics either now or later.&lt;/p&gt;</comment>
                            <comment id="12895414" author="thejas" created="Wed, 4 Aug 2010 21:45:28 +0100"  >&lt;p&gt;Regarding 5, there are some differences in the way schema merge is done in both cases. I have created &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1536&quot; title=&quot;use same logic for merging inner schemas in &amp;quot;default union&amp;quot; and &amp;quot;union onschema&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1536&quot;&gt;&lt;del&gt;PIG-1536&lt;/del&gt;&lt;/a&gt; to discuss/address this  .&lt;br/&gt;
I will make changes to address other comments.&lt;/p&gt;</comment>
                            <comment id="12895430" author="thejas" created="Wed, 4 Aug 2010 22:25:53 +0100"  >&lt;p&gt;Regarding Documentation for UNION ONSCHEMA:  -&lt;br/&gt;
As Olga mentioned, like the default union, &apos;union onschema&apos; also supports 2 or more inputs.&lt;/p&gt;</comment>
                            <comment id="12895448" author="thejas" created="Wed, 4 Aug 2010 23:26:39 +0100"  >&lt;p&gt;Patch with changes as suggested in code review.&lt;/p&gt;</comment>
                            <comment id="12895450" author="thejas" created="Wed, 4 Aug 2010 23:27:04 +0100"  >&lt;p&gt;Patch committed to trunk.&lt;/p&gt;</comment>
                            <comment id="12912703" author="thejas" created="Mon, 20 Sep 2010 21:42:54 +0100"  >&lt;p&gt;Adding release note section of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1610&quot; title=&quot;&amp;#39;union onschema&amp;#39; does handle some cases involving &amp;#39;namespaced&amp;#39; column names in schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1610&quot;&gt;&lt;del&gt;PIG-1610&lt;/del&gt;&lt;/a&gt; to this release note.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12451175" name="PIG-1461.1.patch" size="32171" author="thejas" created="Wed, 4 Aug 2010 00:00:13 +0100"/>
                            <attachment id="12451275" name="PIG-1461.2.patch" size="32842" author="thejas" created="Wed, 4 Aug 2010 23:26:39 +0100"/>
                            <attachment id="12451133" name="PIG-1461.patch" size="29797" author="thejas" created="Tue, 3 Aug 2010 17:25:03 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jun 2010 00:10:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164949</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaqpr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96639</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Documentation for UNION ONSCHEMA:&lt;br/&gt;
&lt;br/&gt;
Use the keyword ONSCHEMA with union so that the union is based on column names of the input relations, and not column position.&lt;br/&gt;
If the following requirements are not met, the statement will throw an error :&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* All inputs to the union should have a non null schema.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* The data type for columns with same name in different input schemas should be compatible. Numeric types are compatible, and if column having same name in different input schemas have different numeric types , an implicit conversion will happen. bytearray type is considered compatible with all other types, a cast will be added to convert to other type. Bags or tuples having different inner schema are considered incompatible.&lt;br/&gt;
&lt;br/&gt;
Example -&lt;br/&gt;
&lt;br/&gt;
grunt&amp;gt; L1 = load &amp;#39;f1&amp;#39; using (a : int, b : float);&lt;br/&gt;
grunt&amp;gt; dump L1;&lt;br/&gt;
(11,12.0)&lt;br/&gt;
(21,22.0)&lt;br/&gt;
&lt;br/&gt;
grunt&amp;gt; L2 = load &amp;#39;f1&amp;#39; using (a : long, c : chararray);&lt;br/&gt;
grunt&amp;gt; dump L2;&lt;br/&gt;
(11,a)&lt;br/&gt;
(12,b)&lt;br/&gt;
(13,c)&lt;br/&gt;
&lt;br/&gt;
grunt&amp;gt; U = union onschema L1, L2;&lt;br/&gt;
grunt&amp;gt; describe U ;&lt;br/&gt;
U : {a : long, b : float, c : chararray}&lt;br/&gt;
&lt;br/&gt;
grunt&amp;gt; dump U;&lt;br/&gt;
(11,12.0,)&lt;br/&gt;
(21,22.0,)&lt;br/&gt;
(11,,a)&lt;br/&gt;
(12,,b)&lt;br/&gt;
(13,,c)&lt;br/&gt;
&lt;br/&gt;
Note:&lt;br/&gt;
- Alias such as &amp;#39;nm::c1&amp;#39; and &amp;#39;c1&amp;#39; in two separate relations specified in &amp;#39;union onschema&amp;#39; are considered mergeable and in the schema of the union, the merged column alias will be &amp;#39;c1&amp;#39;.&lt;br/&gt;
- Alias such as &amp;#39;nm1::c1&amp;#39; and &amp;#39;nm2::c1&amp;#39; in two separate relations specified in &amp;#39;union onschema&amp;#39; will not be merged together, in schema of the union there will be two columns with these names.&lt;br/&gt;
&lt;br/&gt;
Example -&lt;br/&gt;
&lt;br/&gt;
&amp;gt; describe f;&lt;br/&gt;
f: {l1::a: int, l1::b: int, l1::c: int}&lt;br/&gt;
&amp;gt; describe l1;&lt;br/&gt;
l1: {a: int, b: int}&lt;br/&gt;
&lt;br/&gt;
&amp;gt; u = union onschema f,l1;&lt;br/&gt;
&amp;gt; desc u;&lt;br/&gt;
u: {a: int, b: int, l1::c: int} &lt;br/&gt;
&lt;br/&gt;
Like the default union, &amp;#39;union onschema&amp;#39; also supports 2 or more inputs.&lt;br/&gt;
&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>