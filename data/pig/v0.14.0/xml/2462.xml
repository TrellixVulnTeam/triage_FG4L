<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:53:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2462/PIG-2462.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2462] getWrappedSplit is incorrectly returning the first split instead of the current split.</title>
                <link>https://issues.apache.org/jira/browse/PIG-2462</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;If your loader needs information regarding what file is currently is being read (lets say for schema information), currently provides this ability by calling prepareToRead every time we read a new split. This is critical for ComibinedInputFormat as each mapper can read more then one file. In order for the load function to know what file we are currently reading, it should call getWrappedSplit() to get that information. How ever, getWrappedSplit always returns the first split in the list. Code from PigSplit.java:&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This methods returns the actual InputSplit (as returned by the&lt;/li&gt;
	&lt;li&gt;{@link InputFormat}
&lt;p&gt;) which this class is wrapping.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;@return the wrappedSplit&lt;br/&gt;
     */&lt;br/&gt;
    public InputSplit getWrappedSplit() 
{
        return wrappedSplits[0];
    }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Furthermore, in PigRecordReader.java the splitIndex is never incremented when changing from split to split. So in fact, even if getWrappedSplit() wold be changed to return wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;splitIndex&amp;#93;&lt;/span&gt;; it would still return the incorrect index. &lt;/p&gt;

&lt;p&gt;This can be fixed by changing PigRecordReader to increment PigSplit.splitIndex everytime the split chagnes in the following code:&lt;/p&gt;


&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Get the record reader for the next chunk in this CombineFileSplit.&lt;br/&gt;
     */&lt;br/&gt;
    protected boolean initNextRecordReader() throws IOException, InterruptedException {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        if (curReader != null) {&lt;br/&gt;
            curReader.close();&lt;br/&gt;
            curReader = null;&lt;br/&gt;
            if (idx &amp;gt; 0) &lt;/p&gt;
{
                progress += pigSplit.getLength(idx-1);    // done processing so far
            }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        // if all chunks have been processed, nothing more to do.&lt;br/&gt;
        if (idx == pigSplit.getNumPaths()) &lt;/p&gt;
{
            return false;
        }

&lt;p&gt;        // get a record reader for the idx-th chunk&lt;br/&gt;
        try {&lt;/p&gt;


&lt;p&gt;            curReader =  inputformat.createRecordReader(pigSplit.getWrappedSplit(idx), context);&lt;br/&gt;
            LOG.info(&quot;Current split being processed &quot;+pigSplit.getWrappedSplit(idx));&lt;/p&gt;

&lt;p&gt;            if (idx &amp;gt; 0) &lt;/p&gt;
{
                // initialize() for the first RecordReader will be called by MapTask;
                // we&apos;re responsible for initializing subsequent RecordReaders.
                curReader.initialize(pigSplit.getWrappedSplit(idx), context);
                pigSplit.get
                loadfunc.prepareToRead(curReader, pigSplit);
            }
&lt;p&gt;        } catch (Exception e) &lt;/p&gt;
{
            throw new RuntimeException (e);
        }
&lt;p&gt;        idx++;&lt;br/&gt;
        return true;&lt;br/&gt;
    }&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment></environment>
        <key id="12537799">PIG-2462</key>
            <summary>getWrappedSplit is incorrectly returning the first split instead of the current split.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="arov">Alex Rovner</assignee>
                                    <reporter username="arov">Alex Rovner</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Jan 2012 18:12:37 +0000</created>
                <updated>Mon, 23 Jan 2012 07:31:13 +0000</updated>
                            <resolved>Sat, 14 Jan 2012 00:04:34 +0000</resolved>
                                    <version>0.9.1</version>
                    <version>0.11</version>
                                    <fixVersion>0.9.2</fixVersion>
                    <fixVersion>0.10.0</fixVersion>
                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13182722" author="arov" created="Mon, 9 Jan 2012 19:17:07 +0000"  >&lt;p&gt;I am attempting to make a patch. Proposed fixes:&lt;/p&gt;

&lt;p&gt;Add pigSplit.setSplitIndex(idx) before curReader.initialize(pigSplit.getWrappedSplit(idx), context);&lt;/p&gt;

&lt;p&gt;change return wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;; to  return wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;splitIndex&amp;#93;&lt;/span&gt;; in PigSplit.getWrappedSplit();&lt;/p&gt;</comment>
                            <comment id="13183164" author="daijy" created="Tue, 10 Jan 2012 09:27:12 +0000"  >&lt;p&gt;splitIndex is the index of PigSplit, idx keeps track of current InputSplit within PigSplit. I feel changing wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; into wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;idx&amp;#93;&lt;/span&gt; should be enough.&lt;/p&gt;</comment>
                            <comment id="13183269" author="arov" created="Tue, 10 Jan 2012 13:40:16 +0000"  >&lt;p&gt;Attaching patch generated by git format-patch. I couldn&apos;t verify all unit tests since there is currently an issue with them in trunk. Most of the unit tests passed and I have verified this patch with my loader which had the mentioned issue.&lt;/p&gt;</comment>
                            <comment id="13183276" author="arov" created="Tue, 10 Jan 2012 13:46:56 +0000"  >&lt;p&gt;Daniel &amp;#8211; there is no  member idx in PigSplit.java. The index thats supposed to be tracked is splitIndex. Furthermore with combined input format, PigRecordReader does not increment the value of splitIndex when switching the reading from one split to the next even though it does increment and uses this index internally. Therefore if we just change wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; to wrappedSplits&lt;span class=&quot;error&quot;&gt;&amp;#91;splitIndex&amp;#93;&lt;/span&gt; you will still have this issue. I have verified that splitIndex is not modified anywhere except through the constructor in PigSplit.java. &lt;/p&gt;

&lt;p&gt;I have made the needed code changes and have verified them with my loader. Now my log messages from my loader correspond to the log messages from PigRecordReader (originally that was not the case).&lt;/p&gt;</comment>
                            <comment id="13183478" author="daijy" created="Tue, 10 Jan 2012 19:00:28 +0000"  >&lt;p&gt;Yes, you are right. That&apos;s why you pass index from PigRecordReader to PigSplit. Your approach looks right. Except for the name &quot;splitIndex&quot;, we usually refer it to the index of PigSplit itself, not the index of InputSplit inside PigSplit. It&apos;s better to use &quot;idx&quot; to make it less confused. &lt;/p&gt;</comment>
                            <comment id="13183514" author="prkommireddi" created="Tue, 10 Jan 2012 19:50:14 +0000"  >&lt;p&gt;How would this change affect MergeJoinIndexer.java which uses pigSplit.getWrappedSplit() ?&lt;/p&gt;</comment>
                            <comment id="13183528" author="daijy" created="Tue, 10 Jan 2012 20:09:11 +0000"  >&lt;p&gt;We need to test. But I feel get the right split instead 0 should be the right way. Just browse through the code, I didn&apos;t find anything wrong with the change.&lt;/p&gt;</comment>
                            <comment id="13183533" author="prkommireddi" created="Tue, 10 Jan 2012 20:15:50 +0000"  >&lt;p&gt;I did not find anything wrong either by looking at the code, just making sure.&lt;/p&gt;</comment>
                            <comment id="13183688" author="aniket486" created="Tue, 10 Jan 2012 23:16:52 +0000"  >&lt;p&gt;splitIndex&apos;s definition is getting changed here. (its not newly added).&lt;br/&gt;
splitIndex is used for keeping track of Pigsplit itself. While reading records with pigrecordreader, should we really change this index?&lt;/p&gt;

&lt;p&gt;From MergeJoinIndexer code, consider a case where one pigsplit is associate with one wrappedsplit and we have a couple of pigsplit. Before we do wrapperTuple.set(keysCnt+1, pigSplit.getSplitIndex()); on line 179, we do loader.getnext(). I am not very sure about this, but this might down the stack hit PigRecordReader.initNextRecordReader that will reset the splitIndex on pigsplit to 0 for every pigsplit.&lt;/p&gt;

&lt;p&gt;It would be safer to keep the idx on pigsplit as a separate variable and copy down from PigRecordReader as we need.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13183716" author="daijy" created="Tue, 10 Jan 2012 23:45:23 +0000"  >&lt;p&gt;Thanks Aniket, I just realize the patch try to reuse splitIndex. We shall add a new variable idx to PigSplit, it is set by PigRecordReader.initNextRecordReader and consumed by PigSplit.getWrappedSplit, to track the current InputSplit. It has nothing to do with PigSplit.splitIndex.&lt;/p&gt;</comment>
                            <comment id="13183723" author="aniket486" created="Tue, 10 Jan 2012 23:55:02 +0000"  >&lt;p&gt;Hi Daniel,&lt;br/&gt;
Is there a way to work around this issue elegantly? Basically, information on split needs to be available to loadfunc. I can think of getting this at createRecordReader level on the inputformat returned by getInputFormat. But, how do I pass it down elegantly to the loadfunc from there.&lt;br/&gt;
Can you suggest an idea?&lt;br/&gt;
Thanks,&lt;br/&gt;
Aniket&lt;/p&gt;</comment>
                            <comment id="13183741" author="daijy" created="Wed, 11 Jan 2012 00:29:32 +0000"  >&lt;p&gt;Correct me if wrong, but I thought this is exactly the issue we want to solve. LoadFunc will be passed PigSplit in prepareToRead, and we want user call pigSplit.getWrappedSplit() to get split specific information. The problem in current Pig is pigSplit.getWrappedSplit() always get #0 split. So we have this Jira to fix it.&lt;/p&gt;</comment>
                            <comment id="13183748" author="aniket486" created="Wed, 11 Jan 2012 00:41:25 +0000"  >&lt;p&gt;Yes. I am just wondering if there is a way to workaround this (to avoid porting it back in pig). I think pig-user list might be a better place to discuss it. Thanks for your comments.&lt;/p&gt;</comment>
                            <comment id="13184177" author="arov" created="Wed, 11 Jan 2012 16:30:32 +0000"  >&lt;p&gt;One way to avoid this issue is to disable combinedinputformat in your pigs jobs.&lt;/p&gt;

&lt;p&gt;I guess I am a bit confused about the comments on the splitIndex as I am not very familiar with PIG&apos;s code base. Is split index used elsewhere and is not really meant to track the index of the current pigsplit that we are reading? If so, I can certainly change the patch to include another variable &quot;idx&quot; as suggested to keep track of this value.&lt;/p&gt;

&lt;p&gt;How ever judging from the PigInputFormat.getPigSplits code:&lt;br/&gt;
for (int i = 0; i &amp;lt; combinedSplits.size(); i++)&lt;br/&gt;
                pigSplits.add(createPigSplit(combinedSplits.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, inputIndex, targetOps, i, conf));&lt;/p&gt;

&lt;p&gt;Seems like the intention was to use splitIndex to track the current split?&lt;/p&gt;</comment>
                            <comment id="13184301" author="daijy" created="Wed, 11 Jan 2012 19:22:24 +0000"  >&lt;p&gt;Hi, Alex,&lt;br/&gt;
We have two level of split, PigSplit and InputSplit, PigSplit is a wrap of several InputSplit. In PigInputFormat, we combine multiple InputSplit into one PigSplit. splitIndex track current PigSplit, idx track current InputSplit within PigSplit.&lt;/p&gt;</comment>
                            <comment id="13184370" author="arov" created="Wed, 11 Jan 2012 20:38:50 +0000"  >&lt;p&gt;Thanks Daniel for the info. &lt;/p&gt;

&lt;p&gt;Some questions:&lt;br/&gt;
splitIndex within the PigInputFormat tracks the current PigSplit correct?&lt;br/&gt;
What does splitIndex within the PigSplit track? (From my understanding it should track the current wrapped InputSplit)&lt;br/&gt;
There is also inputIndex within PigSplit. Wouldn&apos;t that track the InputSplit index?&lt;/p&gt;

&lt;p&gt;Finally, do we need to introduce an &quot;idx&quot; in PigSplit or my patch would suffice?&lt;/p&gt;</comment>
                            <comment id="13184386" author="daijy" created="Wed, 11 Jan 2012 20:54:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;splitIndex within the PigInputFormat tracks the current PigSplit correct?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;What does splitIndex within the PigSplit track? (From my understanding it should track the current wrapped InputSplit)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is the way PigSplit identify itself&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;There is also inputIndex within PigSplit. Wouldn&apos;t that track the InputSplit index?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If a mapreduce job need more than 1 input (eg, join a, b, we have two input a &amp;amp; b in the same map), inputIndex tracks which input is it&lt;/p&gt;</comment>
                            <comment id="13185097" author="arov" created="Thu, 12 Jan 2012 17:45:45 +0000"  >&lt;p&gt;Attached the changes based on the comments&lt;/p&gt;</comment>
                            <comment id="13185145" author="daijy" created="Thu, 12 Jan 2012 18:59:58 +0000"  >&lt;p&gt;Patch looks good. Test is a little complex, but is possible. We need to add a testcase.&lt;/p&gt;</comment>
                            <comment id="13185171" author="arov" created="Thu, 12 Jan 2012 19:27:23 +0000"  >&lt;p&gt;Is it possible to use CombinedInputFormat in PigUnit?&lt;br/&gt;
Any existing test you can point me to as an example?&lt;/p&gt;</comment>
                            <comment id="13185305" author="daijy" created="Thu, 12 Jan 2012 22:30:45 +0000"  >&lt;p&gt;You will need to write an inputformat, a loadfunc, and use PigUnit to invoke this loadfunc. Unfortunately I cannot find a sample with a custom inputformat in existing tests.&lt;/p&gt;</comment>
                            <comment id="13185478" author="daijy" created="Fri, 13 Jan 2012 08:15:43 +0000"  >&lt;p&gt;I may think too much. We don&apos;t need InputFormat in the test. We only need a LoadFunc. I attached patch with test case.&lt;/p&gt;</comment>
                            <comment id="13185512" author="daijy" created="Fri, 13 Jan 2012 09:17:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2462&quot; title=&quot;getWrappedSplit is incorrectly returning the first split instead of the current split.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2462&quot;&gt;&lt;del&gt;PIG-2462&lt;/del&gt;&lt;/a&gt;-2_0.9.patch is the same patch for 0.9 branch.&lt;/p&gt;</comment>
                            <comment id="13186004" author="daijy" created="Sat, 14 Jan 2012 00:04:34 +0000"  >&lt;p&gt;+1 for patch.&lt;/p&gt;

&lt;p&gt;Unit test pass.&lt;/p&gt;

&lt;p&gt;test-patch:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 3 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 510 release audit warnings (more than the trunk&apos;s current 502 warnings).&lt;/p&gt;

&lt;p&gt;All new file has Apache header, ignore release audit warning.&lt;/p&gt;

&lt;p&gt;Patch committed to 0.9/0.10/trunk.&lt;/p&gt;

&lt;p&gt;Thanks Alex!&lt;/p&gt;</comment>
                            <comment id="13189419" author="yulia" created="Thu, 19 Jan 2012 22:05:27 +0000"  >&lt;p&gt;This bug also exist in pig 0.8&lt;/p&gt;</comment>
                            <comment id="13189477" author="daijy" created="Thu, 19 Jan 2012 23:09:57 +0000"  >&lt;p&gt;Yes, however, we don&apos;t have plan for another 0.8 release. Can you apply the patch to 0.8 branch and build by yourself?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12470197">PIG-1518</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12510527" name="PIG-2462-2.patch" size="7253" author="daijy" created="Fri, 13 Jan 2012 20:42:58 +0000"/>
                            <attachment id="12510529" name="PIG-2462-2_0.9.patch" size="6499" author="daijy" created="Fri, 13 Jan 2012 20:50:27 +0000"/>
                            <attachment id="12510396" name="split_fix_take2.patch" size="3316" author="arov" created="Thu, 12 Jan 2012 17:46:25 +0000"/>
                            <attachment id="12510042" name="splitsfix.patch" size="3162" author="arov" created="Tue, 10 Jan 2012 13:40:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jan 2012 09:27:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>223305</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaxcf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97713</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>