<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:56:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2417/PIG-2417.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2417] Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.</title>
                <link>https://issues.apache.org/jira/browse/PIG-2417</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The goal of Streaming UDFs is to allow users to easily write UDFs in scripting languages with no JVM implementation or a limited JVM implementation.  The initial proposal is outlined here: &lt;a href=&quot;https://cwiki.apache.org/confluence/display/PIG/StreamingUDFs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/PIG/StreamingUDFs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to implement this we need new syntax to distinguish a streaming UDF from an embedded JVM UDF.  I&apos;d propose something like the following (although I&apos;m not sure &apos;language&apos; is the best term to be using):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;define my_streaming_udfs language(&apos;python&apos;) ship(&apos;my_streaming_udfs.py&apos;)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We&apos;ll also need a language-specific controller script that gets shipped to the cluster which is responsible for reading the input stream, deserializing the input data, passing it to the user written script, serializing that script output, and writing that to the output stream.&lt;/p&gt;

&lt;p&gt;Finally, we&apos;ll need to add a StreamingUDF class that extends evalFunc.  This class will likely share some of the existing code in POStream and ExecutableManager (where it make sense to pull out shared code) to stream data to/from the controller script.&lt;/p&gt;

&lt;p&gt;One alternative approach to creating the StreamingUDF EvalFunc is to use the POStream operator directly.  This would involve inserting the POStream operator instead of the POUserFunc operator whenever we encountered a streaming UDF while building the physical plan.  This approach seemed problematic because there would need to be a lot of changes in order to support POStream in all of the places we want to be able use UDFs (For example - to operate on a single field inside of a for each statement).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12534475">PIG-2417</key>
            <summary>Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jeremykarn">Jeremy Karn</assignee>
                                    <reporter username="jeremykarn">Jeremy Karn</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Dec 2011 14:07:25 +0000</created>
                <updated>Mon, 10 Feb 2014 22:01:52 +0000</updated>
                            <resolved>Mon, 23 Sep 2013 16:58:58 +0100</resolved>
                                    <version>0.12.0</version>
                                    <fixVersion>0.12.0</fixVersion>
                                        <due></due>
                            <votes>5</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13166889" author="alangates" created="Sat, 10 Dec 2011 15:11:41 +0000"  >&lt;p&gt;This looks interesting.  Some thoughts regarding the open questions on your wiki.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;We&apos;d want to either update DEFINE or add a new command to support streaming UDFs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We should definitely use DEFINE for this as well.  It seems it should stay as close to the JVM based UDF defines as possible.  I&apos;m wondering if it could follow the same:&lt;/p&gt;

&lt;p&gt;DEFINE &apos;filename&apos; using &amp;lt;language&amp;gt; as &amp;lt;namespace&amp;gt;&lt;/p&gt;

&lt;p&gt;that the JVM based UDFs use, and just add new language tokens that indicate the streaming nature, such as &apos;streaming_python&apos;, &apos;streaming_perl&apos;, etc.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How can we return the output type information back to pig? Perhaps we could support something like the @outputSchema decorator in python at least, and have the controller script gather that information and provide it back to pig in a separate file?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There&apos;s two sides to this, one how you communicate the information through the channel you&apos;re creating, and two how the UDF writer communicates it in his UDF.  The design will need to propose a way for implementations of streaming UDF for various languages to communicate schema information back to Pig.  But how the UDF writer communicates it should be language specific.  Wherever possible it should mimic the choices made in the JVM based implementations.  So a streaming Python implementation should use the same @outputSchema as Jython does.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How can we return the output type information back to pig? Perhaps we could support something like the @outputSchema decorator in python at least, and have the controller script gather that information and provide it back to pig in a separate file?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This should be a Java property for each language implementation.  Something like pig.streaming_udf.executable.python.&lt;/p&gt;

&lt;p&gt;Have you done any prototyping?  I&apos;m curious how the performance of this will compare against the JVM based implementations.  I realize you are doing this to extend functionality, not get performance.&lt;/p&gt;</comment>
                            <comment id="13168097" author="jeremykarn" created="Tue, 13 Dec 2011 03:16:52 +0000"  >&lt;p&gt;Here&apos;s a rough first patch that only works with streaming python UDFs that return a String.  So it doesn&apos;t handle communicating the type information yet and you have to manually copy the python controller script and user scripts into the pig path.&lt;/p&gt;

&lt;p&gt;I went with Alan&apos;s suggestion of modifying the REGISTER command (I think he meant register instead of define) to support streaming_python as a language.&lt;/p&gt;

&lt;p&gt;I haven&apos;t had a chance to do any meaningful performance tests - but as a very rough guide the following simple example running locally took 130 seconds when I used streaming_python and 44 seconds when I used jython.&lt;/p&gt;

&lt;p&gt;Pig:&lt;/p&gt;

&lt;p&gt;REGISTER &apos;test_streaming_udfs.py&apos; using streaming_python as test;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = LOAD &apos;excite.log.bz2&apos; AS (user_id:chararray, timestamp:chararray, query:chararray);

B = FOREACH A GENERATE test.shorten(user_id) as new_user_id:chararray, timestamp, query;

STORE B INTO &apos;short_ids&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Python:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
def shorten(word):
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; word[:6]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13170589" author="alangates" created="Thu, 15 Dec 2011 23:45:10 +0000"  >&lt;p&gt;Jeremy,&lt;/p&gt;

&lt;p&gt;For the patch to apply in an SVN environment, you need to generate it with &apos;git diff --no-prefix&apos;.&lt;/p&gt;</comment>
                            <comment id="13170623" author="jeremykarn" created="Fri, 16 Dec 2011 00:32:12 +0000"  >&lt;p&gt;Ah, ok.  I&apos;ve generated this last patch with --no-prefix.  &lt;/p&gt;

&lt;p&gt;It includes the previous code changes as well as:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;code to pass the input schema from Pig to Python&lt;/li&gt;
	&lt;li&gt;Python code to deserialize the input from Standard Input into Python types&lt;/li&gt;
	&lt;li&gt;Python unit tests for the Python controller script.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m not really sure the best way to include the python unit tests.  Right now I have them in test/python/streaming/test_controller.py but in order to run them you need to copy that file into the same directory as the controller file.&lt;/p&gt;</comment>
                            <comment id="13175415" author="jeremykarn" created="Fri, 23 Dec 2011 13:16:46 +0000"  >&lt;p&gt;This latest patch (streaming2.patch) contains all of the functionality necessary for writing streaming UDFs.&lt;/p&gt;

&lt;p&gt;Registering python files still works as outlined above.&lt;/p&gt;

&lt;p&gt;Declaring the output schema of your python udf uses an outputSchema decorator (so the same syntax used for jython udfs).  When the user registers the file and pig scans for functions it also looks for the outputSchema decorator and only registers functions that have it.  The schema string from the decorator is passed to the StreamingUDF instance(s) so that it knows what output schema to expect from the streaming process. &lt;/p&gt;

&lt;p&gt;Performance:&lt;/p&gt;

&lt;p&gt;I haven&apos;t done exhaustive testing, profiling, or tuning but right now it looks like small data sets using standalone hadoop are about 2-3 times slower using python streaming udfs instead of jython udfs.&lt;/p&gt;

&lt;p&gt;Running similar scripts on a small data set but on a cluster improves a bit and the python streaming udfs are twice as slow.&lt;/p&gt;

&lt;p&gt;When you move up to much larger data sets and run on the cluster I&apos;m seeing python streaming udfs being around 50% slower than equivalent jython udfs.&lt;/p&gt;

&lt;p&gt;The code still has a few bugs and I need to add unit tests for the Pig changes I&apos;ve made but I&apos;d definitely appreciate any feedback on what&apos;s already done.&lt;/p&gt;</comment>
                            <comment id="13182996" author="jeremykarn" created="Tue, 10 Jan 2012 01:45:26 +0000"  >&lt;p&gt;This patch includes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Better passing of null values to/from the udf&lt;/li&gt;
	&lt;li&gt;3 character delimiters when serializing input/output to/from udf (to avoid conflicts when the delimiters are in the data).&lt;/li&gt;
	&lt;li&gt;Improved performance&lt;/li&gt;
	&lt;li&gt;Fix to illustrate so that it works with streaming udfs.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In terms of performance I ran tests with 4 scripts using both streaming python and jython udfs.  With 3 of the scripts the streaming python was faster (5%, 7%, and 33% faster) and in 1 case the streaming python was 80% slower.&lt;/p&gt;

&lt;p&gt;The script with the poor performance involved passing really big tuples to the udf (one tuple serialized to a 30 meg string).&lt;/p&gt;</comment>
                            <comment id="13211600" author="russell.jurney" created="Sun, 19 Feb 2012 23:37:19 +0000"  >&lt;p&gt;I&apos;m going to try this out.&lt;/p&gt;</comment>
                            <comment id="13562925" author="alangates" created="Fri, 25 Jan 2013 19:17:47 +0000"  >&lt;p&gt;Patch no longer applies cleanly to trunk.&lt;/p&gt;</comment>
                            <comment id="13588832" author="jeremykarn" created="Wed, 27 Feb 2013 21:59:58 +0000"  >&lt;p&gt;I&apos;ve attached a new patch that applies onto trunk.  It needs updating in a number of places before its ready to be merged but it looks like I&apos;m not going to have a chance to do that in the near future.  If someone else wants to take a stab at cleaning it up and getting it ready for trunk that would be great and feel free to email me with any questions.&lt;/p&gt;</comment>
                            <comment id="13588955" author="russell.jurney" created="Thu, 28 Feb 2013 00:17:47 +0000"  >&lt;p&gt; I&apos;ll do clean-up,  plz advise.&lt;/p&gt;</comment>
                            <comment id="13588969" author="jeremykarn" created="Thu, 28 Feb 2013 00:34:02 +0000"  >&lt;p&gt;Jonathan Coveney had expressed interest at looking at the streaming python work we&apos;ve done so this patch is just to get our code available for people to look at.  I updated the code to work on trunk but I had to do it in a quick and dirty way.  Here&apos;s a list of some specific things I know need some work (and there are probably a few more I haven&apos;t thought of but that would come out in review):&lt;/p&gt;

&lt;p&gt;1. In the serialization/deserialization code I don&apos;t support any of the new data types added to pig since 0.9.  &lt;/p&gt;

&lt;p&gt;2. When I first wrote this code I pulled some common logic out of ExecutableManager into a class called StreamingUtil.  ExecutableManager has changed enough since 0.9 that it wasn&apos;t straightforward to figure out how it should work now so there&apos;s some duplicated logic in StreamingUtil and ExecutableManager.&lt;/p&gt;

&lt;p&gt;3. There&apos;s some Mortar specific wording in a couple of places and a couple of places in StreamingUDF where I&apos;m handling the cases that come up with how we run Pig/Hadoop but that might need to be more generic/robust to work for everyone out of the box.&lt;/p&gt;

&lt;p&gt;4. There&apos;s some exception handling decisions and some code for capturing standard output from the UDF for illustrate that might not make much sense without the rest of our illustrate changes.&lt;/p&gt;

&lt;p&gt;5. It might make sense to use a more efficient serialization/deserialization method.  I tried to use the existing code (just adding code to handle cases that didn&apos;t work before) but its probably not the most efficient approach.  I&apos;m not sure if this is something that would need to be tackled now or if it could be a future enhancement.&lt;/p&gt;</comment>
                            <comment id="13590420" author="jcoveney" created="Fri, 1 Mar 2013 10:49:58 +0000"  >&lt;p&gt;Russell,&lt;/p&gt;

&lt;p&gt;If you want to take first stab at cleanup that would be excellent (especially adding tests and some documentation so people know how to use it). You can take note of any deeper technical Pig stuff that needs to be worked on, and then I can take over that portion.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13748947" author="jeremykarn" created="Fri, 23 Aug 2013 21:05:53 +0100"  >&lt;p&gt;Here&apos;s an updated patch that I think should be ready for review (review board coming soon).&lt;/p&gt;

&lt;p&gt;Aside from the streaming python udfs this patch also contains some logic for capturing output from the python process that doesn&apos;t do much.  However, I&apos;m hoping to get a patch up soon with Mortar&apos;s illustrate changes and that will take advantage of the captured output.&lt;/p&gt;

&lt;p&gt;One thing thats still outstanding is documentation changes.  Should I just add a section similar to &lt;a href=&quot;http://pig.apache.org/docs/r0.11.1/udf.html#python-udfs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.11.1/udf.html#python-udfs&lt;/a&gt; for streaming python?&lt;/p&gt;
</comment>
                            <comment id="13748957" author="jeremykarn" created="Fri, 23 Aug 2013 21:20:22 +0100"  >&lt;p&gt;Here&apos;s the review board: &lt;a href=&quot;https://reviews.apache.org/r/13781/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13781/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13758198" author="jeremykarn" created="Wed, 4 Sep 2013 20:06:48 +0100"  >&lt;p&gt;Latest patch just has a couple small changes so that it applies cleanly after &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3419&quot; title=&quot;Pluggable Execution Engine &quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3419&quot;&gt;&lt;del&gt;PIG-3419&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13761061" author="jeremykarn" created="Sat, 7 Sep 2013 16:34:10 +0100"  >&lt;p&gt;Latest patch has changes from code review.  I still need to add e2e tests.&lt;/p&gt;</comment>
                            <comment id="13762227" author="jeremykarn" created="Mon, 9 Sep 2013 21:14:58 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-e2e.patch contains e2e tests for streaming python (mostly just copied from the jython tests).&lt;/p&gt;</comment>
                            <comment id="13769970" author="daijy" created="Tue, 17 Sep 2013 22:12:38 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeremykarn&quot; class=&quot;user-hover&quot; rel=&quot;jeremykarn&quot;&gt;Jeremy Karn&lt;/a&gt;&lt;br/&gt;
With &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3255&quot; title=&quot;Avoid extra byte array copies in streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3255&quot;&gt;&lt;del&gt;PIG-3255&lt;/del&gt;&lt;/a&gt; check in, do you want to add this optimization? Also can you respond to my comments in review board.&lt;/p&gt;</comment>
                            <comment id="13769981" author="jeremykarn" created="Tue, 17 Sep 2013 22:18:00 +0100"  >&lt;p&gt;I&apos;ll update the patch (probably tomorrow) to take advantage of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3255&quot; title=&quot;Avoid extra byte array copies in streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3255&quot;&gt;&lt;del&gt;PIG-3255&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think the only outstanding comment in the review board is how the logging works with Hadoop2.  I&apos;m hoping to get a chance to test that in the next couple of days.&lt;/p&gt;</comment>
                            <comment id="13770005" author="daijy" created="Tue, 17 Sep 2013 22:31:07 +0100"  >&lt;p&gt;Thanks. Wish to check this in before branch.&lt;/p&gt;</comment>
                            <comment id="13771291" author="jeremykarn" created="Wed, 18 Sep 2013 22:59:11 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-9.patch contains everything including the e2e tests.  I&apos;ve incorporated the changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3255&quot; title=&quot;Avoid extra byte array copies in streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3255&quot;&gt;&lt;del&gt;PIG-3255&lt;/del&gt;&lt;/a&gt;.  I wasn&apos;t able to test against a Hadoop2 cluster but it looks like hadoop.log.dir is still a valid property there and I&apos;ve made the logic around determining the log directory a little more robust.&lt;/p&gt;</comment>
                            <comment id="13771397" author="daijy" created="Thu, 19 Sep 2013 00:40:04 +0100"  >&lt;p&gt;Running e2e tests on Hadoop 2, hit the following stack on map side:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:338)
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.processPlan(POForEach.java:378)
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getNextTuple(POForEach.java:298)
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.runPipeline(PigGenericMapBase.java:282)
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:277)
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:64)
	at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:145)
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:763)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:339)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:162)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:396)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1477)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:157)
Caused by: java.lang.NullPointerException
	at org.apache.pig.impl.builtin.StreamingUDF.getControllerPath(StreamingUDF.java:252)
	at org.apache.pig.impl.builtin.StreamingUDF.constructCommand(StreamingUDF.java:183)
	at org.apache.pig.impl.builtin.StreamingUDF.startUdfController(StreamingUDF.java:147)
	at org.apache.pig.impl.builtin.StreamingUDF.initialize(StreamingUDF.java:140)
	at org.apache.pig.impl.builtin.StreamingUDF.exec(StreamingUDF.java:130)
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:330)
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNextInteger(POUserFunc.java:379)
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:321)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I will try to take a look tonight.&lt;/p&gt;</comment>
                            <comment id="13771459" author="jeremykarn" created="Thu, 19 Sep 2013 01:42:25 +0100"  >&lt;p&gt;My guess is that is caused by the code in StreamingUDF at line 157:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        Configuration conf = UDFContext.getUDFContext().getJobConf();
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; jarPath = conf.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;mapred.jar&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m not sure how that should work with Hadoop 2.&lt;/p&gt;</comment>
                            <comment id="13771653" author="daijy" created="Thu, 19 Sep 2013 08:16:36 +0100"  >&lt;p&gt;Yes, &quot;mapred.jar&quot; does not physically exist in Hadoop 2:&lt;br/&gt;
jarPath: /tmp/hadoop-yarn/staging/daijy/.staging/job_1379571725164_0007/job.jar&lt;br/&gt;
&apos;/tmp/hadoop-yarn/staging/daijy/.staging/job_1379571725164_0007/job.jar&apos; does not exist&lt;/p&gt;

&lt;p&gt;But I think job.jar should be already in classpath. I will try it tomorrow.&lt;/p&gt;</comment>
                            <comment id="13771893" author="jeremykarn" created="Thu, 19 Sep 2013 14:40:38 +0100"  >&lt;p&gt;The jar path is being used to figure out where the appropriate python files are on the cluster nodes.  We need to know where controller.py is to start the python controller process and then we need to pass in the directory of controller.py and pig_util.py (the PATH_TO_FILE_CACHE option) so that the controller can add that directory to the python path.&lt;/p&gt;
</comment>
                            <comment id="13772464" author="daijy" created="Fri, 20 Sep 2013 00:31:15 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-9-1.patch include an ugly fix to make Hadoop 2 working. Still need some refinement.&lt;/p&gt;</comment>
                            <comment id="13772544" author="jeremykarn" created="Fri, 20 Sep 2013 02:13:15 +0100"  >&lt;p&gt;Thanks Daniel.  &lt;/p&gt;

&lt;p&gt;I also just attached &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-9-2.patch which updates the tests to use the serialize/deserialize methods created in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3255&quot; title=&quot;Avoid extra byte array copies in streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3255&quot;&gt;&lt;del&gt;PIG-3255&lt;/del&gt;&lt;/a&gt; instead of the deprecated versions.&lt;/p&gt;</comment>
                            <comment id="13773228" author="daijy" created="Fri, 20 Sep 2013 18:38:34 +0100"  >&lt;p&gt;There is one more issue in the Hadoop 2: job.jar does not get unjared before launching map/reduce, so controller.py cannot find the udf script. Seems we need one more step to unjar script files before invoking controller.py.&lt;/p&gt;

&lt;p&gt;I&apos;d like to commit this patch before we branch 0.12. There still several holes to get stream udf work under Hadoop2, I would suggest commit the patch first, mark e2e tests as not valid in hadoop 2, then fix them after branch. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13773632" author="jeremykarn" created="Sat, 21 Sep 2013 01:35:33 +0100"  >&lt;p&gt;I agree.  &lt;/p&gt;

&lt;p&gt;If we get this committed and open a new jira for the hadoop2 problems, that&apos;ll give me a bit of time to set up a hadoop2 cluster and work out any kinks.&lt;/p&gt;</comment>
                            <comment id="13774664" author="daijy" created="Mon, 23 Sep 2013 16:58:58 +0100"  >&lt;p&gt;Committed &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-9.patch + &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-9-2.patch. Also disabled SteamingUDF e2e tests and unit tests for Hadoop 2. Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3478&quot; title=&quot;Make StreamingUDF work for Hadoop 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3478&quot;&gt;&lt;del&gt;PIG-3478&lt;/del&gt;&lt;/a&gt; to fix Streaming UDF for Hadoop 2.&lt;/p&gt;</comment>
                            <comment id="13774699" author="jeremykarn" created="Mon, 23 Sep 2013 17:32:08 +0100"  >&lt;p&gt;Thanks for all of your help Daniel!&lt;/p&gt;</comment>
                            <comment id="13776884" author="rohini" created="Wed, 25 Sep 2013 00:01:32 +0100"  >&lt;p&gt;I see compilation fails with 4 similar errors in TestStreamingUDF.java when running it on Linux. Works fine on Mac. &lt;/p&gt;

&lt;p&gt; test/org/apache/pig/impl/builtin/TestStreamingUDF.java:287: error: unmappable character for encoding UTF8&lt;/p&gt;

&lt;p&gt;From javac documentation:&lt;br/&gt;
-encoding encoding&lt;br/&gt;
Set the source file encoding name, such as EUC-JP and UTF-8. If -encoding is not specified, the platform default converter is used.&lt;/p&gt;

&lt;p&gt;Not sure what the platform defaults exactly are in MAC, as inside a java program file.encoding and Charset.defaultCharset() are UTF8. Either we should specify -encoding in the ant javac invocation or fix the test to use \uxxxx. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;,&lt;br/&gt;
   Does it compile fine on Windows?&lt;/p&gt;</comment>
                            <comment id="13776931" author="daijy" created="Wed, 25 Sep 2013 00:44:21 +0100"  >&lt;p&gt;I compiled on both my RHEL6 and Windows, seems fine for me. We can change the javadoc anyway to fix the issue.&lt;/p&gt;</comment>
                            <comment id="13777997" author="jeremykarn" created="Wed, 25 Sep 2013 20:51:45 +0100"  >&lt;p&gt;I can&apos;t reproduce the problem but I think &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-unicode.patch should fix the encoding issue.&lt;/p&gt;</comment>
                            <comment id="13778025" author="rohini" created="Wed, 25 Sep 2013 21:22:11 +0100"  >&lt;p&gt;+1 for &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2417&quot; title=&quot;Streaming UDFs -  allow users to easily write UDFs in scripting languages with no JVM implementation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2417&quot;&gt;&lt;del&gt;PIG-2417&lt;/del&gt;&lt;/a&gt;-unicode.patch. That worked. Committed to 0.12 and trunk. Thanks Jeremy.&lt;/p&gt;</comment>
                            <comment id="13897089" author="russell.jurney" created="Mon, 10 Feb 2014 22:01:52 +0000"  >&lt;p&gt;What work remains to get this working on YARN? I need it to work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12638067">PIG-3255</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12571279" name="PIG-2417-4.patch" size="111913" author="jeremykarn" created="Wed, 27 Feb 2013 21:59:26 +0000"/>
                            <attachment id="12599706" name="PIG-2417-5.patch" size="157223" author="jeremykarn" created="Fri, 23 Aug 2013 21:05:53 +0100"/>
                            <attachment id="12601437" name="PIG-2417-6.patch" size="155826" author="jeremykarn" created="Wed, 4 Sep 2013 20:06:10 +0100"/>
                            <attachment id="12601668" name="PIG-2417-7.patch" size="176169" author="jeremykarn" created="Thu, 5 Sep 2013 21:12:18 +0100"/>
                            <attachment id="12601981" name="PIG-2417-8.patch" size="156890" author="jeremykarn" created="Sat, 7 Sep 2013 16:33:45 +0100"/>
                            <attachment id="12604156" name="PIG-2417-9-1.patch" size="1844" author="daijy" created="Fri, 20 Sep 2013 00:35:40 +0100"/>
                            <attachment id="12604176" name="PIG-2417-9-2.patch" size="32773" author="jeremykarn" created="Fri, 20 Sep 2013 02:12:08 +0100"/>
                            <attachment id="12603921" name="PIG-2417-9.patch" size="173121" author="jeremykarn" created="Wed, 18 Sep 2013 22:56:59 +0100"/>
                            <attachment id="12602202" name="PIG-2417-e2e.patch" size="15157" author="jeremykarn" created="Mon, 9 Sep 2013 21:13:51 +0100"/>
                            <attachment id="12605089" name="PIG-2417-unicode.patch" size="1193" author="jeremykarn" created="Wed, 25 Sep 2013 20:51:08 +0100"/>
                            <attachment id="12507623" name="streaming.patch" size="44975" author="jeremykarn" created="Fri, 16 Dec 2011 00:27:12 +0000"/>
                            <attachment id="12508535" name="streaming2.patch" size="117681" author="jeremykarn" created="Fri, 23 Dec 2011 13:14:42 +0000"/>
                            <attachment id="12509992" name="streaming3.patch" size="101299" author="jeremykarn" created="Tue, 10 Jan 2012 01:44:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 10 Dec 2011 15:11:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>220197</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyax47:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97676</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>