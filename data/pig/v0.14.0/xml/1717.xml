<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:54:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1717/PIG-1717.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1717] pig needs to call setPartitionFilter if schema is null but getPartitionKeys is not</title>
                <link>https://issues.apache.org/jira/browse/PIG-1717</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;I&apos;m writing a loader that works with hive style partitioning e.g. /logs/type1/daydate=2010-11-01&lt;br/&gt;
The loader does not know the schema upfront and this is something that the user adds in the script using the AS clause.&lt;/p&gt;

&lt;p&gt;The problem is that this user defined schema is not available to the loader, so the loader cannot return any schema, the Loader does know what the partition keys are and pig needs in some way to know about these partition keys. &lt;/p&gt;

&lt;p&gt;Currently if the schema is null pig never calls the LoadMetaData:getPartitionKeys method or the setPartitionFilter method.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12479719">PIG-1717</key>
            <summary>pig needs to call setPartitionFilter if schema is null but getPartitionKeys is not</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gerritjvv">Gerrit Jansen van Vuuren</assignee>
                                    <reporter username="gerritjvv">Gerrit Jansen van Vuuren</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Nov 2010 15:41:37 +0000</created>
                <updated>Thu, 4 Aug 2011 01:34:36 +0100</updated>
                            <resolved>Thu, 3 Feb 2011 20:03:28 +0000</resolved>
                                    <version>0.9.0</version>
                                    <fixVersion>0.9.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12975196" author="dvryaboy" created="Mon, 27 Dec 2010 04:01:55 +0000"  >&lt;p&gt;Gerrit,&lt;br/&gt;
This is a bit tangential, but it seems like you could write a LoadMetadata to get this info for the HiveRC classes.&lt;br/&gt;
In fact I bet something like that already exists in Howl.&lt;/p&gt;</comment>
                            <comment id="12975232" author="gerritjvv" created="Mon, 27 Dec 2010 11:36:29 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The problem I&apos;m facing is the following: &lt;br/&gt;
  Load function can tell pig the schema through LoadMetadata&lt;br/&gt;
  But the default way in pig to define a schema is inside the script &amp;#8211;  a = LOAD &apos;input&apos; as (schema)&lt;br/&gt;
  In this case the Load function has no way of knowing the schema and cannot validate of modify it e.g. to add partition keys.&lt;/p&gt;

&lt;p&gt;The HiveRC classes already have the LoadMetaData implemented and gets around the  above problem by having the user specify the schema in the Load function Constructor. .eg. a = LOAD &apos;input&apos; using HiveColumnarLoader(&apos;schema&apos;), no as clause should be used here.&lt;br/&gt;
The loader can then tell pig what the partition keys are because:&lt;br/&gt;
  (1) The loader now returns a Schema&lt;br/&gt;
  (2) and as a result of this pig calls the getPartitionKeys method on the LoadMetadata&lt;/p&gt;

&lt;p&gt;The problem with this approach is that the user always has to define the schema in the constructor and cannot use the as clause. The problem is not when the LoadFunction returns a schema (e.g. from howl or other) but rather when the user specifies a schema in the as clause which feels more normal in pig.&lt;/p&gt;

&lt;p&gt;There are three possible solutions that I see for this:&lt;br/&gt;
 (A)  Create a new interface or extend the LoadMetadata with a method that pig calls to inform the Load function of the as clause schema.&lt;br/&gt;
         e.g. setUserDefinedSchema(ResourceSchema schema)&lt;br/&gt;
         Pros: its clear in the code&lt;br/&gt;
         Cons:  breaks backwards compatibility&lt;/p&gt;

&lt;p&gt; (B) Have pig set a variable in the UDFContext/PigContext the as Clause Schema e.g. context.set(&apos;userDefinedSchema&apos;, asClauseSchema:ResourceSchemaRerialised)&lt;br/&gt;
       Pros: does not break backwards compatibility, any load function can check this method before returning on getSchema&lt;br/&gt;
       Cons: needs good docs or else nobody will know of this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt; (C) have pig always call the getPartitiionKeys on LoadMetadata even if schema is null from the Load function. And have pig add the partition keys to the schema always.&lt;br/&gt;
       Pros: does not break backwards compatibility.&lt;br/&gt;
       Cons: The LoadFunction still has no way of knowing the user defined as clause schema. More complicated than option (B)&lt;/p&gt;


&lt;p&gt;I would go for option B as this gives the greatest flexibility without requiring great code changes.&lt;/p&gt;
</comment>
                            <comment id="12975234" author="gerritjvv" created="Mon, 27 Dec 2010 11:39:41 +0000"  >&lt;p&gt;I can do the implementation for option (B) this week.&lt;/p&gt;

&lt;p&gt;with the end of year and holidays I&apos;ve not been able to  work on this.&lt;/p&gt;</comment>
                            <comment id="12976023" author="gerritjvv" created="Thu, 30 Dec 2010 12:18:52 +0000"  >&lt;p&gt;Patch changes the org.apache.pig.impl.logicalLayer.LOLoad class by adding one method and adding to the setSchema method code that will store the Schema to the Configuration instance supplied with this class.&lt;/p&gt;

&lt;p&gt;1 test is provided with a test loader that verifies that a loader is able to read this schema set by the LOLoad instance.&lt;/p&gt;</comment>
                            <comment id="12976025" author="gerritjvv" created="Thu, 30 Dec 2010 12:20:49 +0000"  >&lt;p&gt;This patch implements option B.&lt;/p&gt;

&lt;p&gt;The only query I have is that the schema is set with key = $&lt;/p&gt;
{alias}
&lt;p&gt;.scriptSchema&lt;br/&gt;
The value scriptSchema is hardcoded in the LOLoad class.&lt;/p&gt;

&lt;p&gt;Where would be a good place to put this constant?&lt;/p&gt;</comment>
                            <comment id="12976993" author="alangates" created="Mon, 3 Jan 2011 22:44:11 +0000"  >&lt;p&gt;We do not see using the AS clause in LOAD as the preferred way to do schemas in Pig Latin.  For some cases it is, such as ad hoc queries over one time data sets.  But for regularly processed data we assume that the schema will be specified instead by the loader via the LoadMetadata interface.  Hence this is how Howl (the metadata project that will work with Pig, Hive, and Map Reduce) will interact with Pig.  It will expect the user not to give a schema in the AS clause.&lt;/p&gt;

&lt;p&gt;The LoadMetadata interface was designed with the assumption that the user was either in the ad-hoc research world (throw this data on a grid and run a few quick Pig Latin scripts against it) or the pipeline world (run the same pipeline everyday to process your data) and thus there&apos;s a clear distinction between the needs for both.  But it seems your use case straddles these two.  You want the ad-hoc schema but the known partitioning.  I&apos;m guessing your reasoning for this is you want to read Hive data without connecting to its metastore, correct?&lt;/p&gt;

&lt;p&gt;I don&apos;t like option B because I don&apos;t like hidden environment variables that are really part of the interface.  I agree option A is difficult because it is not backward compatible.  And it is hard to justify breaking compatibility for something that at the moment looks like a corner case.  Option C is definitely out since we cannot have Pig adding keys to schemas when it has no idea whether it should or not.  Before I vote for either A or B I want to make sure I understand your use case and that you really need this.&lt;/p&gt;</comment>
                            <comment id="12977048" author="gerritjvv" created="Tue, 4 Jan 2011 00:44:40 +0000"  >&lt;p&gt;The need to have the AS clause schema (script schema) available in the LoadFunc actually comes from the AllLoader, but I&apos;ve had the same frustration with when writing the HiveColumnarLoader. What the AllLoader does (apart from loading LoadFunc&apos;s based on configured extensions) is provide generic support for path name key value partitioning, and modifies the schema to add these partitioning values to both the schema and returned Tuple.  Currently it will try to get the Schema from the LoadFunc, but the problem comes into play when this LoadFunc  does not return a Schema e.g. LzoTextLoader or PigStorage, then there is only one option left for the AllLoader and that is to throw an Exception because otherwise the partitioning logic will not work as expected. &lt;/p&gt;

&lt;p&gt;My reason for requiring this is: &lt;br/&gt;
 As you&apos;ve mentioned users have two use cases, ad hocs and pipe-line. For pipe line queries I agree that its better using a metadata repository like howl. But for add hocs queries missing the ability the know the AS clause schema in pig means that custom loaders can only support the pipe line type queries and cannot provide for the adhocs. &lt;/p&gt;
</comment>
                            <comment id="12979808" author="alangates" created="Mon, 10 Jan 2011 22:25:52 +0000"  >&lt;p&gt;Ideally I would like to pick A, since that is the clean solution.  But we don&apos;t want to break this interface in the next release.  Given that, I&apos;d say we go with B and document that in the future when we need to change that interface anyway we would also like to make this change.  Thoughts?  Objections?&lt;/p&gt;</comment>
                            <comment id="12979846" author="gerritjvv" created="Mon, 10 Jan 2011 23:19:30 +0000"  >&lt;p&gt;I agree, option A would be ideal, but code backwards compatibility is more important here. I think also that this doesn&apos;t violate clean architecture to much (just a little &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  ), but  serve&apos;s to make this part of schema handling visible to Load functions.&lt;/p&gt;

&lt;p&gt;So the patch for Option B is already attached, but I&apos;ll change the javadoc so that it refers to this JIRA for reference. &lt;br/&gt;
Should I add a patch including the information to the Pig UDF Manual?&lt;/p&gt;</comment>
                            <comment id="12979847" author="olgan" created="Mon, 10 Jan 2011 23:19:49 +0000"  >&lt;p&gt;Seems reasonable.&lt;/p&gt;</comment>
                            <comment id="12979902" author="ashutoshc" created="Tue, 11 Jan 2011 01:33:56 +0000"  >&lt;p&gt;@Gerrit,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The problem is that this user defined schema is not available to the loader, so the loader cannot return any schema, the Loader does know what the partition keys are and pig needs in some way to know about these partition keys. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How does your loader know about partition keys? Is it hard-coded, through some conf variable or looking at path string ?&lt;/p&gt;</comment>
                            <comment id="12980025" author="gerritjvv" created="Tue, 11 Jan 2011 09:56:11 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The Loader looks at the path for key=value patterns and use the left hand side as the partition key. The AllLoader for example scans for the first available (non hidden) file and moves upwards in its path hierarchy for key=value pairs, this enables it to dynamically build the partition keys without needing to scan the whole directory tree.&lt;br/&gt;
I assumes that for a group of log files the partition scheme is the same. This is reasonable to assume (for me at least) and I think any hive partition scheme for a table is uniform (per table).&lt;/p&gt;

&lt;p&gt;There are indeed three problems here: &lt;br/&gt;
 (1) Loader needs to communicate the partition keys to pig for LoadFunc Path filtering (more efficient than row by row filtering on partitions).&lt;br/&gt;
 (2) Loader needs some way (for adhoc style queries) to know the script schema.&lt;br/&gt;
 (3) Even if the Loader can communicate the partition keys to pig if these are not available in the schema itself there is no variable name that the user can use to filter/use on this key.&lt;/p&gt;

&lt;p&gt;For adhoc style queries having the script schema available to the LoadFunc solves the above three problems, because the Loader can dynamically add the partition keys to the schema (solving 2, 3), and return a Schema to pig (solving 1).&lt;/p&gt;

</comment>
                            <comment id="12980249" author="ashutoshc" created="Tue, 11 Jan 2011 18:49:07 +0000"  >&lt;p&gt;Sounds good. I was wondering if you already know about your partitioning keys and their values (from path string) then using hadoop path globbing (of FileInputFormat) will be the fastest way to get partition pruning without the need of all the extra code and requiring Pig to push filters to the loaders etc.  But looks like in your usecase you still need to get the filter expressions which may occur later on in pig scripts. Option B sounds ok as short term solution. &lt;/p&gt;</comment>
                            <comment id="12980720" author="gerritjvv" created="Wed, 12 Jan 2011 14:04:22 +0000"  >
&lt;p&gt;Yes I&apos;ve used hadoop path globbing, but it has its own problems e.g. &lt;br/&gt;
   If the files are three levels down in a partitioning scheme e.g. /mylog/year=2011/month=01/day=01/hour=00 then the file globbing has to be /mylog/year=2011/month=01/day*/hour*/* &lt;br/&gt;
   Its doable but not friendly when writing the scripts and its very easy to forget to add the extra * in for each level.&lt;/p&gt;

&lt;p&gt; And apart from that having the ability for script writers to filter by partitions as if they were just another column in the schema is a great advantage; keeps things simpler, they don&apos;t need to think or learn about file globbing, scripts are also much cleaner and its easy to read what the script is doing.&lt;/p&gt;

&lt;p&gt;Thanks for the approval.  I&apos;ll redo a patch with the required comments and references to this JIRA, then try and find an obvious place to insert the information into the WIKI page and make a patch for that also.&lt;/p&gt;

</comment>
                            <comment id="12981012" author="alangates" created="Wed, 12 Jan 2011 23:25:50 +0000"  >&lt;p&gt;A couple of comments on the patch:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;You implemented this in org.apache.pig.impl.logicalLayer.LOLoad.  As of 0.8 we started using the code under newplan as our default logical plan.  So you should have changed org.apache.pig.impl.newplan.logical.relational.LOLoad instead.  I think your changes will move across pretty much intact.  Sorry for the confusion, we should label those old files as deprecated.&lt;/li&gt;
	&lt;li&gt;Is there any condition in which scriptSchema could be null?  What happens when you try to serialize a null string?&lt;/li&gt;
&lt;/ol&gt;

</comment>
                            <comment id="12981044" author="alangates" created="Thu, 13 Jan 2011 00:29:22 +0000"  >&lt;p&gt;Let me clarify my last comment.  We are still in the middle of transitioning from the logical plans under impl.logicalLayer to the ones under newplan.  So your code will work for a time.  Without changes to the newplan implementation it will quit working once we finish the translation.  So you should add it there as well, not just to the impl.logicalLayer implementation.&lt;/p&gt;</comment>
                            <comment id="12981757" author="gerritjvv" created="Fri, 14 Jan 2011 13:45:35 +0000"  >&lt;p&gt;This patch contains edits to &lt;/p&gt;

&lt;p&gt;org.apache.pig.newplan.logical.relational.LOLoad&lt;br/&gt;
org.apache.pig.impl.logicalLayer.LOLoad&lt;/p&gt;

&lt;p&gt;The schema is serialized and added to the Configuration instance available in these classes.&lt;br/&gt;
The current Schema type is &lt;br/&gt;
org.apache.pig.impl.logicalLayer.schema.Schema&lt;/p&gt;

&lt;p&gt;I&apos;ve also added a helper method to Utils that LoadFunc implementations can use without needing to remember the property name etc.&lt;/p&gt;</comment>
                            <comment id="12983899" author="alangates" created="Wed, 19 Jan 2011 22:10:48 +0000"  >&lt;p&gt;Latest patch looks good.  I&apos;ll run it through the unit tests and test-patch.&lt;/p&gt;</comment>
                            <comment id="12984315" author="alangates" created="Thu, 20 Jan 2011 18:16:27 +0000"  >&lt;p&gt;I saw several unit test failures:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.pig.parser.TestLogicalPlanGenerator FAILED&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.pig.parser.TestQueryLexer&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 5, Failures: 0, Errors: 4, Time elapsed: 0.95 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.pig.test.TestNewPlanFilterRule FAILED&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0.241 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.pig.test.TestNewPlanLogicalOptimizer FAILED&lt;/p&gt;

&lt;p&gt;Results of test-patch&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 7 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 485 release audit warnings (more than the trunk&apos;s current 482 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll attach the test logs and the results from the test-patch run.&lt;/p&gt;</comment>
                            <comment id="12984323" author="alangates" created="Thu, 20 Jan 2011 18:36:39 +0000"  >&lt;p&gt;testlog.tgz contains all the logs from the test run.  You can look at the logs for the tests that failed.&lt;/p&gt;

&lt;p&gt;patchReleaseAuditWarnings shows the results of running release audit on your patch, versus the results in trunkReleaseAuditWarnings.  The best way to use this is to diff the two and see where there are errors in the patch one that aren&apos;t in the trunk one. &lt;/p&gt;

&lt;p&gt;The added javadoc warning that test-patch complained about is:&lt;/p&gt;

&lt;p&gt;/home/gates/src/pig/1717-tp/trunk/src/org/apache/pig/impl/util/Utils.java:107: warning - @return tag has no arguments.&lt;/p&gt;</comment>
                            <comment id="12984464" author="gerritjvv" created="Thu, 20 Jan 2011 23:27:45 +0000"  >&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;I&apos;ll have a look at it and fix the test.&lt;/p&gt;</comment>
                            <comment id="12984495" author="gerritjvv" created="Fri, 21 Jan 2011 00:03:36 +0000"  >&lt;p&gt;Hi,&lt;br/&gt;
I  found the problem. It seems that in the newplan LOLoad is created with Configuration null. The configuration reference can only be passed via the constructor, and I assumed this would always be none null &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. &lt;/p&gt;

&lt;p&gt;I&apos;ll add the check, but should the Configuration instance be null here? &lt;/p&gt;</comment>
                            <comment id="12984897" author="daijy" created="Fri, 21 Jan 2011 19:52:57 +0000"  >&lt;p&gt;Configuration in LOLoad should not be null in regular path. However, in the test, we may pass null for convenience. You can change the test to pass the right configuration to LOLoad construct in those tests.&lt;/p&gt;</comment>
                            <comment id="12989167" author="gerritjvv" created="Tue, 1 Feb 2011 11:46:36 +0000"  >&lt;p&gt;Hi, &lt;br/&gt;
finally I got to do this.&lt;br/&gt;
What I did was add in a check in the LOLoad for conf == null, this will allow any current tests that pass the conf as null to succeed. &lt;/p&gt;</comment>
                            <comment id="12989327" author="alangates" created="Tue, 1 Feb 2011 18:51:42 +0000"  >&lt;p&gt;Re-running test-patch and unit tests.&lt;/p&gt;</comment>
                            <comment id="12989329" author="alangates" created="Tue, 1 Feb 2011 18:54:42 +0000"  >&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 7 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 509 release audit warnings (more than the trunk&apos;s current 507 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;As far as I can tell the release audit complaints are just because two new files got added which made changes in the jdiff output, so we can ignore those.&lt;/p&gt;</comment>
                            <comment id="12990269" author="alangates" created="Thu, 3 Feb 2011 20:03:28 +0000"  >&lt;p&gt;All unit tests passed.  Patch checked in.  Thanks Gerrit for your work on this.&lt;/p&gt;</comment>
                            <comment id="12990496" author="gerritjvv" created="Fri, 4 Feb 2011 09:50:25 +0000"  >&lt;p&gt;Thanks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12467164" name="PIG-1717.patch" size="8259" author="gerritjvv" created="Thu, 30 Dec 2010 12:18:52 +0000"/>
                            <attachment id="12468369" name="PIG-1717.v1.patch" size="12012" author="gerritjvv" created="Fri, 14 Jan 2011 13:45:35 +0000"/>
                            <attachment id="12469916" name="PIG-1717.v2.patch" size="12975" author="gerritjvv" created="Tue, 1 Feb 2011 11:44:48 +0000"/>
                            <attachment id="12468874" name="patchReleaseAuditWarnings.txt.gz" size="116570" author="alangates" created="Thu, 20 Jan 2011 18:36:39 +0000"/>
                            <attachment id="12468875" name="testlog.tgz" size="3007" author="alangates" created="Thu, 20 Jan 2011 18:36:39 +0000"/>
                            <attachment id="12468876" name="trunkReleaseAuditWarnings.txt.gz" size="116910" author="alangates" created="Thu, 20 Jan 2011 18:36:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Dec 2010 04:01:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>66333</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyatbj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97061</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1717&quot; title=&quot;pig needs to call setPartitionFilter if schema is null but getPartitionKeys is not&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1717&quot;&gt;&lt;strike&gt;PIG-1717&lt;/strike&gt;&lt;/a&gt;.v2.patch</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>