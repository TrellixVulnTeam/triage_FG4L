<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:03:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-760/PIG-760.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-760] Serialize schemas for PigStorage() and other storage types.</title>
                <link>https://issues.apache.org/jira/browse/PIG-760</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;I&apos;m finding PigStorage() really convenient for storage and data interchange because it compresses well and imports into Excel and other analysis environments well.&lt;/p&gt;

&lt;p&gt;However, it is a pain when it comes to maintenance because the columns are in fixed locations and I&apos;d like to add columns in some cases.&lt;/p&gt;

&lt;p&gt;It would be great if load PigStorage() could read a default schema from a .schema file stored with the data and if store PigStorage() could store a .schema file with the data.&lt;/p&gt;

&lt;p&gt;I have tested this out and both Hadoop HDFS and Pig in -exectype local mode will ignore a file called .schema in a directory of part files.&lt;/p&gt;

&lt;p&gt;So, for example, if I have a chain of Pig scripts I execute such as:&lt;/p&gt;

&lt;p&gt;A = load &apos;data-1&apos; using PigStorage() as ( a: int , b: int );&lt;/p&gt;

&lt;p&gt;store A into &apos;data-2&apos; using PigStorage();&lt;/p&gt;

&lt;p&gt;B = load &apos;data-2&apos; using PigStorage();&lt;/p&gt;

&lt;p&gt;describe B;&lt;/p&gt;

&lt;p&gt;describe B should output something like &lt;/p&gt;
{ a: int, b: int }</description>
                <environment></environment>
        <key id="12422417">PIG-760</key>
            <summary>Serialize schemas for PigStorage() and other storage types.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dvryaboy">Dmitriy V. Ryaboy</assignee>
                                    <reporter username="ciemo">David Ciemiewicz</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Apr 2009 23:44:27 +0100</created>
                <updated>Fri, 14 May 2010 07:45:34 +0100</updated>
                            <resolved>Wed, 16 Dec 2009 20:38:05 +0000</resolved>
                                                    <fixVersion>0.7.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12697625" author="alangates" created="Thu, 9 Apr 2009 20:56:27 +0100"  >&lt;p&gt;We don&apos;t want to change PigStorage, as it is the default load/store function and heavily used by people who don&apos;t want or need&lt;br/&gt;
schemas.  However, we could subclass PigStorage with a new load/store function PigStorageSchema.  This function would only need&lt;br/&gt;
to add the logic to read/write the schema and communicate it to the Pig front end.&lt;/p&gt;</comment>
                            <comment id="12697631" author="ciemo" created="Thu, 9 Apr 2009 21:10:54 +0100"  >&lt;p&gt;Sure, you could do that, create PigStorageSchema.&lt;/p&gt;

&lt;p&gt;The thing is, I don&apos;t think it is necessary and it is possible to do this in a &quot;backward&quot; compatible way.&lt;/p&gt;

&lt;p&gt;First, if the user specifies a LOAD ... AS clause schema, then PigStorage could simply use that &quot;casting&quot; to override what is in the .schema.  Of course, PigStorage might want to warn that there is an override at run time or do a &quot;smart&quot; warning only if there are incompatible differences between the serialized schema and the explicit AS clause schema.&lt;/p&gt;

&lt;p&gt;Next, is there really any harm in creating the serialized shema file on each and every STORE?&lt;/p&gt;

&lt;p&gt;Finally, why sub class when we could parameterize?&lt;/p&gt;

&lt;p&gt;In other words, instead of writing:&lt;/p&gt;

&lt;p&gt;store A into &apos;file&apos; using PigStorageSchema();&lt;/p&gt;

&lt;p&gt;Why not do:&lt;/p&gt;

&lt;p&gt;store A into &apos;file&apos; using PigStorage(&apos;schema=yes&apos;);  &amp;#8211; redundant schema=yes is default&lt;/p&gt;

&lt;p&gt;I think it would be more useful to have single classes with parameterized options than a proliferation of classes.&lt;/p&gt;

&lt;p&gt;Or, better yet, why can&apos;t I just define the behavior of PigStorage() for all of the instances in my script:&lt;/p&gt;

&lt;p&gt;define PigStorage PigStorage(&lt;br/&gt;
        &apos;sep=\t&apos;,&lt;br/&gt;
        &apos;schema=yes&apos;,&lt;br/&gt;
        &apos;erroronmissingcolumn=no&apos;&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;I have recently done similar things for other functions and it turns out to be a nice way of capturing &quot;global&quot; parameterizations for cleaner Pig code.&lt;/p&gt;

</comment>
                            <comment id="12697634" author="ciemo" created="Thu, 9 Apr 2009 21:17:16 +0100"  >&lt;p&gt;Also, one other thing, along with the schema file, it would be useful to have a header file written out as well.&lt;/p&gt;

&lt;p&gt;While the serialized schema file might contain:&lt;/p&gt;

{ a: int, b: int }

&lt;p&gt;the serialized header file would contain:&lt;/p&gt;

&lt;p&gt;a&amp;lt;tab&amp;gt;b&amp;lt;newline&amp;gt;&lt;/p&gt;

&lt;p&gt;based on what ever the separator value for PigStorage() happens to be.&lt;/p&gt;

&lt;p&gt;This way when people need to take results and import them into Excel, R, JMP, or other systems for analysis, the could just do:&lt;/p&gt;

&lt;p&gt;hadoop fs -cat results/.header results/* &amp;gt; results.txt&lt;/p&gt;

&lt;p&gt;and results.txt would contain:&lt;/p&gt;

&lt;p&gt;a       b&lt;br/&gt;
1       2&lt;br/&gt;
2       3&lt;/p&gt;

&lt;p&gt;greatly simplifying the process without having to create a schema to headers conversion program.&lt;/p&gt;</comment>
                            <comment id="12763294" author="eissonnie" created="Thu, 8 Oct 2009 00:03:45 +0100"  >&lt;p&gt;Any new development on this issue? I&apos;m finding it painful to have to modify the input schema to all &quot;child&quot; pig scripts anytime I modify my &quot;root&quot; pig script. I was thinking of developing something quick and then I figured someone might have done something or I  could help the overall effort.&lt;br/&gt;
Please let me know.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12765603" author="alangates" created="Wed, 14 Oct 2009 17:00:03 +0100"  >&lt;p&gt;At this point no one has contributed a PigStorageSchema as suggested above.  We remain open to such a contribution if someone has the time.  &lt;/p&gt;</comment>
                            <comment id="12765626" author="dvryaboy" created="Wed, 14 Oct 2009 17:56:54 +0100"  >&lt;p&gt;This would be a nice proof-of-concept task for the new Load/StoreMetadata interfaces, as it removes the complexity of dealing with something like Owl.&lt;/p&gt;</comment>
                            <comment id="12767355" author="dvryaboy" created="Mon, 19 Oct 2009 16:36:58 +0100"  >
&lt;p&gt;I am attaching a preliminary patch for this issue.&lt;/p&gt;

&lt;p&gt;It implements a new Load/StoreFunc PigStorageSchema that inherits from PigStorage and performs schema serialization into JSON; currently it only works for flat schemas (a JSON parser limitation that can probably be overcome with a bit of elbow grease). It also only works in MR mode due to limitations on the StoreFunc interface (in local mode, there is no way I am aware of to get the directory name you are writing to from the StoreFunc &amp;#8211; in MR mode I am able to get it from the JobConf).&lt;/p&gt;

&lt;p&gt;It also writes the headers as described above, but at the moment does not provide nice constructors (like the ones suggested by David) to allow one to turn functionality on/off. &lt;/p&gt;

&lt;p&gt;Implementation notes:&lt;/p&gt;

&lt;p&gt;I chose Jackson for JSON parsing because that&apos;s what Avro uses, so once Avro is used in Pig, we won&apos;t have two parsers that do the same thing.&lt;br/&gt;
I didn&apos;t modify the zip targets in build.xml to package the Avro libs, so if you want to use PigStorageSchema, you will want to register build/ivy/lib/Pig/jackson-mapper-asl-1.0.1.jar and build/ivy/lib/Pig/jackson-core-asl-1.0.1.jar.&lt;/p&gt;

&lt;p&gt;This patch also uses a number of the interfaces (MetadataLoader/Writer, ResourceStatistics, ResourceSchema) from the Load/Store redesign proposal. I simply dumped them into org.apache.pig &amp;#8211; we may want to come up with an appropriate package.&lt;/p&gt;

&lt;p&gt;As expected, implementing this raised a number of issues with the interfaces as proposed, most notably the need for getters and setters in order to enable Java tools that work with POJOs to interact with these interfaces.&lt;/p&gt;

&lt;p&gt;I indulged in some Class.cast trickery in DataType to avoid large swaths of copy+paste code. Despite what the patch appears to say, the changes to determineFieldSchema are really fairly minimal, I just made it work on Object and ResourceFieldSchemas at the same time.&lt;/p&gt;</comment>
                            <comment id="12767357" author="dvryaboy" created="Mon, 19 Oct 2009 16:40:27 +0100"  >&lt;p&gt;One more note on the patch &amp;#8211; the bits that read/write the JSON schema are in a separate class, which implements MetadataLoader and MetadataWriter. That means that it would be fairly trivial to add this functionality to Load/Store Funcs other than PigStorage.&lt;/p&gt;</comment>
                            <comment id="12767605" author="hadoopqa" created="Tue, 20 Oct 2009 00:06:25 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12422565/pigstorageschema.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12422565/pigstorageschema.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 826110.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 410 javac compiler warnings (more than the trunk&apos;s current 408 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 15 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/101/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/101/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/101/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/101/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/101/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/101/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12767651" author="dvryaboy" created="Tue, 20 Oct 2009 02:27:43 +0100"  >&lt;p&gt;Hmm.. I&apos;ll check out the javac warnings.&lt;/p&gt;

&lt;p&gt;What do I do if I disagree with 14 out of 15 Findbugs warnings?  It wants me to copy objects in getters/setters, but I don&apos;t think that&apos;s necessary for this case. Commiters?&lt;/p&gt;

&lt;p&gt;Also &amp;#8211; if someone gave me the ability to assign Jiras to myself, that would be great...&lt;/p&gt;</comment>
                            <comment id="12767862" author="alangates" created="Tue, 20 Oct 2009 17:26:59 +0100"  >&lt;p&gt;I don&apos;t take javac or findbugs warnings as final truth.  If you can give a good reason why the warning is wrong, not relevant, or you&apos;ve chosen to take that risk to get some other benefit (such as you&apos;re not doing instanceof before a cast for performance and you believe the risk acceptable) then put that in comments and suppress the warning in the code.&lt;/p&gt;</comment>
                            <comment id="12768933" author="dvryaboy" created="Thu, 22 Oct 2009 23:03:59 +0100"  >&lt;p&gt;New patch to address findbugs and make the classes a little nicer to use.&lt;/p&gt;

&lt;p&gt;Made internal fields protected, since having them public &lt;b&gt;and&lt;/b&gt; having getters/setters didn&apos;t really make sense.&lt;/p&gt;

&lt;p&gt;Setters now return &quot;this&quot;, so that they can be chained.&lt;/p&gt;

&lt;p&gt;Array setters make a copy of the passed in array.  Getters return the internal array, so it&apos;s still possible to shoot oneself in the foot (as findbugs points out), but side-effecting those arrays is the intended use case.&lt;/p&gt;

&lt;p&gt;Still flat-schemas only, haven&apos;t gotten around to wrestling the Jackson Parser on this one. David &amp;#8211; do you need nested schemas?&lt;/p&gt;

&lt;p&gt;Submitting as a patch so that Hudson can have a go. Would appreciate code comments, especially with regards to the interfaces (and changes I made to them) from the Load/Store redesign proposal. &lt;/p&gt;

&lt;p&gt;We probably want to hold off on commiting this until the new interfaces settle in a bit.&lt;/p&gt;</comment>
                            <comment id="12768948" author="ciemo" created="Thu, 22 Oct 2009 23:42:13 +0100"  >&lt;p&gt;@Dimitry:&lt;/p&gt;

&lt;p&gt;&amp;gt; Still flat-schemas only, haven&apos;t gotten around to wrestling the Jackson Parser on this one. David - do you need nested schemas?&lt;/p&gt;

&lt;p&gt;No, at this time, and for the foreseeable future, I do not need nested schemes (hierarchical schemes) in relationship to PigStorage.&lt;/p&gt;

&lt;p&gt;In general, PigStorage users are doing single atomic value per column. So your current implementation sounds like it will suffice for now, with appropriate caveats in any docs.&lt;/p&gt;

&lt;p&gt;BTW, is there a pointer to documentation of the .pig_schema file likes like.  Guess there should be one for .pig_header too. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12768956" author="dvryaboy" created="Fri, 23 Oct 2009 00:00:05 +0100"  >&lt;p&gt;David,&lt;/p&gt;

&lt;p&gt;If / when I get complex schemas to work, this could theoretically be promoted to PigStorage proper, which would be cool. For now, if you try to deserialize a complex schema, everything blows up.. So that&apos;s not so good (especially since I let you serialize complex schemas! Actually maybe I should turn that off).&lt;/p&gt;

&lt;p&gt;I&apos;ll add some docs on the next iteration, good call.  Briefly &amp;#8211; it&apos;s a JSON representation of the ResourceSchema, as described on the LoadStore redesign proposal: &lt;a href=&quot;http://wiki.apache.org/pig/LoadStoreRedesignProposal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/LoadStoreRedesignProposal&lt;/a&gt; . Once you know what the fields are, it&apos;s pretty easy to read; the one complexity is that types are represented using constants from the DataType class, which are not publicly documented.&lt;/p&gt;</comment>
                            <comment id="12769141" author="hadoopqa" created="Fri, 23 Oct 2009 10:09:32 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12422958/pigstorageschema-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12422958/pigstorageschema-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 828891.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 403 javac compiler warnings (more than the trunk&apos;s current 401 warnings).&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/112/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/112/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/112/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/112/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/112/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/112/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12769435" author="dvryaboy" created="Fri, 23 Oct 2009 21:49:12 +0100"  >&lt;p&gt;The Javac warnings are about JobConf deprecation. There is a separate patch in the queue to turn this warning off until migration to the new APIs is finished.&lt;/p&gt;</comment>
                            <comment id="12770573" author="alangates" created="Tue, 27 Oct 2009 17:05:26 +0000"  >&lt;p&gt;I know I&apos;m wandering dangerously close to being fanatical here, but I really dislike taking a struct, making all the members private/protected, and then adding getters and setters.  If some tools need getters and setters, feel free to add them.  But please leave the members public.&lt;/p&gt;

&lt;p&gt;I notice you snuck in your names for LoadMetadata and StoreMetadata.  I&apos;m fine with motions to change the names.  But let&apos;s get everyone to agree on the new names before we start using them.&lt;/p&gt;

&lt;p&gt;On the StoreMetadata interface, Pradeep had some thoughts on getting rid of it, as he felt all the necessary information could be communicated in StoreFunc.allFinished().  He should be publishing an update to the load/store redesign wiki ( &lt;a href=&quot;http://wiki.apache.org/pig/LoadStoreRedesignProposal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/LoadStoreRedesignProposal&lt;/a&gt; ) soon.  He also wanted to change LoadMetadata.getSchema() to take a location so that the loader could find the file.&lt;/p&gt;

&lt;p&gt;Other changes all look good.  &lt;/p&gt;

&lt;p&gt;One general thought.  I want to figure out how to keep the ResourceStatistics object flexible enough that it&apos;s easy to add new statistics to it.  One thought I&apos;d had previously (I can&apos;t remember if we discussed this or not) was to add a Map&amp;lt;String, Object&amp;gt; to it.  That way we can add new stats between versions of the object.  Once the stats are accepted as valid and take hold, they could be moved into the object proper.  Upside of this is its flexible.  Downside is we risk devolving into an unknown properties object and every stat has to go through a transition.  Thoughts?&lt;/p&gt;</comment>
                            <comment id="12770618" author="dvryaboy" created="Tue, 27 Oct 2009 19:43:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;If some tools need getters and setters, feel free to add them. But please leave the members public. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll revert the change.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I notice you snuck in your names for LoadMetadata and StoreMetadata. I&apos;m fine with motions to change the names. But let&apos;s get everyone to agree on the new names before we start using them.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah I kind of figured we&apos;ll get to discuss again if I do that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. It seems like we didn&apos;t really reach a final decision last time.  Are we sure the only time it might be reasonable to read or write metadata are during Loads and Stores? I am not. I can envision future uses where the &quot;storage&quot; is some ephemeral state that we have operating reporting stats into to enable adaptive optimizations.   Also, and I know I am nitpicking, &quot;LoadMetadata&quot; is an instruction, where&apos;s &quot;MetadataLoader&quot; is a thing. Same with &quot;StoreMetadata&quot; and MetadataStorer (but storer isn&apos;t a real word so I chose Writer..).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On the StoreMetadata interface, Pradeep had some thoughts on getting rid of it, as he felt all the necessary information could be communicated in StoreFunc.allFinished(). He should be publishing an update to the load/store redesign wiki ( &lt;a href=&quot;http://wiki.apache.org/pig/LoadStoreRedesignProposal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/LoadStoreRedesignProposal&lt;/a&gt; ) soon. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was envisioning the setStatistics() and setSchema() methods as methods used to alter state, whereas allFinished()  essentially does the job of flushing whatever is needed (you&apos;ll notice I fake an allFinished() method in my finish() implementation by simply checking if any other task has started creating the necessary file yet &amp;#8211; a suboptimal workaround, but the best that can be done with the current interface).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;He also wanted to change LoadMetadata.getSchema() to take a location so that the loader could find the file.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A location by itself my not be sufficient &amp;#8211; for example for the JsonMetadata implementation, I need the DataStorage as well. &lt;br/&gt;
I solved that by passing the location and storage into JsonMetadata&apos;s constructor. &lt;br/&gt;
There is something to be said for being able to reuse the same MetadataLoader to load schemas for multiple locations, however. Assuming we can&apos;t come up with any scenarios where by the time we need to get the schema, we no longer have the location &amp;#8211; but we might have created the MetadataLoader beforehand, and set the internal location at that time &amp;#8211; I agree with the change.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One thought I&apos;d had previously (I can&apos;t remember if we discussed this or not) was to add a Map&amp;lt;String, Object&amp;gt; to it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I have a feeling we did discuss this, or something like this, possibly in a different context, but I can&apos;t find the mention either.   I am not sure what we would gain by this &amp;#8211; the only consumers of stats would be various optimizers/compilers/translators, right? So they would need to be updated to deal with new stats, and code that propagates / estimates stats down a logical plan would need to get updated, whenever a new statistic is added. That sounds pretty extensive. If we instead assume that any field is nullable (or, if collection, can be empty), and make sure that all missing fields are filled in as nulls/empties when the stat objects are deserialized, we should be ok with upgrades.&lt;/p&gt;</comment>
                            <comment id="12776065" author="dvryaboy" created="Tue, 10 Nov 2009 20:25:52 +0000"  >&lt;p&gt;Alan et al &amp;#8211;&lt;br/&gt;
Would this to be considered for trunk and 0.6, assuming I bring it up to parity with the interfaces as they are currently defined in the Load/Store redesign branch?  Or do you want to wait for the redesign to be complete before this can go in (naturally, I prefer the former)?&lt;/p&gt;</comment>
                            <comment id="12776086" author="alangates" created="Tue, 10 Nov 2009 21:29:20 +0000"  >&lt;p&gt;The issue is we want to break interfaces once, so we don&apos;t want to introduce any of the interfaces now.  The load/store redesign obviously won&apos;t be going into 0.6.  The other issue is that any classes and interfaces introduced now in the redesign are inherently unstable.  So even if we just sneak in ResourceSchema and ResourceStatistics, which won&apos;t break anything, I doubt they&apos;ll look the same once the redesign is done.  And I certainly don&apos;t want to be bound to any backward compatibility for those classes between 0.6 and the redesign.&lt;/p&gt;

&lt;p&gt;I suggest that you build your own version of these classes and use them in your load/store functions and your optimizer.  Then when the redesign comes out, your code can switch.  As we&apos;d change the classes anyway, I don&apos;t think you&apos;re creating any extra work for yourself.&lt;/p&gt;</comment>
                            <comment id="12782758" author="dvryaboy" created="Thu, 26 Nov 2009 06:01:24 +0000"  >&lt;p&gt;The updated patch moves PigStorageSchema to the piggybank (I feel it needs to include proper handling of complex structures before it can be considered a builtin).  Also updated the various interfaces from the Load/Store redesign to match latest spec.&lt;/p&gt;
</comment>
                            <comment id="12782759" author="dvryaboy" created="Thu, 26 Nov 2009 06:06:58 +0000"  >&lt;p&gt;Argh. I totally missed Alan&apos;s comment before creating this new patch.&lt;/p&gt;

&lt;p&gt;To address Alan&apos;s concerns: the patch doesn&apos;t break any current interfaces, just adds a few new ones, which aren&apos;t &quot;public&quot;.  I can commit to updating this issue as the definitions of the interfaces change. Where my implementation of the spec differs from the code in the load-store redesign branch, I believe it&apos;s because I am actually writing code that uses stats and schema loaders, and these changes should be considered for the branch.&lt;/p&gt;</comment>
                            <comment id="12782978" author="hadoopqa" created="Thu, 26 Nov 2009 21:13:06 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12426186/pigstorageschema_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12426186/pigstorageschema_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 884235.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/61/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/61/testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/61/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/61/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12783008" author="hadoopqa" created="Fri, 27 Nov 2009 01:52:58 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12426245/pigstorageschema_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12426245/pigstorageschema_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 884235.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/62/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/62/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/62/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/62/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/62/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/62/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12783160" author="dvryaboy" created="Fri, 27 Nov 2009 20:12:06 +0000"  >&lt;p&gt;New version of patch, should be warning-free.&lt;/p&gt;</comment>
                            <comment id="12783188" author="hadoopqa" created="Sat, 28 Nov 2009 00:06:48 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12426297/pigstorageschema_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12426297/pigstorageschema_4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 884235.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/64/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/64/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/64/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/64/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/64/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/64/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12783890" author="alangates" created="Mon, 30 Nov 2009 22:24:51 +0000"  >&lt;p&gt;Is this patch ready to be reviewed with and checked in, or is it still in the development stages?&lt;/p&gt;</comment>
                            <comment id="12783911" author="dvryaboy" created="Mon, 30 Nov 2009 22:40:03 +0000"  >&lt;p&gt;Ready&lt;/p&gt;</comment>
                            <comment id="12783979" author="alangates" created="Tue, 1 Dec 2009 01:18:45 +0000"  >&lt;p&gt;Question for other pig committers:&lt;/p&gt;

&lt;p&gt;Dmitry proposes with this patch to include and begin using some of the load-store redesign changes (see &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-966&quot; title=&quot;Proposed rework for LoadFunc, StoreFunc, and Slice/r interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-966&quot;&gt;&lt;del&gt;PIG-966&lt;/del&gt;&lt;/a&gt;).  Specifically, he includes versions of ResourceSchema, ResourceStatistcs, LoadMetadata, and StoreMetadata.  Currently these are also being implemented on the load-store-redesign branch with the assumption that they&apos;ll be rolled into trunk for the 0.7 (or possibly a later) release.  He wants to include these new classes in this patch because he is using it for the cost based optimizer he is working on.&lt;/p&gt;

&lt;p&gt;Are we ok with introducing these classes now since we know they are still under development and thus not yet stable?  I am if it is done with the stipulation that they will certainly change before they are officially released.  To make this clear to developers, I suggest moving them into a package org.apache.pig.experimental to make clear that fact they are not yet stable.  Thoughts?&lt;/p&gt;</comment>
                            <comment id="12783995" author="pkamath" created="Tue, 1 Dec 2009 01:39:22 +0000"  >&lt;p&gt;I agree that these classes should go into org.apache.pig.experimental as part of this patch - the only issue I see is when eventually the load-store-redesign branch&apos;s changes are merged back to trunk the code in this patch will need to use the right package to refer to the classes implemented in core pig - with this patch committed we will need a reminder to make this change later - do we need a companion jira to track that?&lt;/p&gt;</comment>
                            <comment id="12784436" author="alangates" created="Tue, 1 Dec 2009 21:17:51 +0000"  >&lt;p&gt;When I run the unit tests in piggybank, the new TestPigStorageSchema fails.  I&apos;ve attached the output of the test.&lt;/p&gt;</comment>
                            <comment id="12784441" author="dvryaboy" created="Tue, 1 Dec 2009 21:25:49 +0000"  >&lt;p&gt;Right.. now that PigStorageSchema is in the piggybank, I need to use the full package name when referring to it. &lt;br/&gt;
I&apos;ll update this ticket with a fix, and move the new interfaces to experimental.&lt;br/&gt;
This probably won&apos;t happen until next week.&lt;/p&gt;</comment>
                            <comment id="12788029" author="dvryaboy" created="Wed, 9 Dec 2009 10:55:59 +0000"  >&lt;p&gt;Moved the Load/StoreMetadata, ResourceSchema, and ResourceStats to o.a.p.experimental&lt;br/&gt;
Modified pig latin in unit test to reference PigStorageSchema by its package (piggybank).&lt;/p&gt;
</comment>
                            <comment id="12788265" author="hadoopqa" created="Wed, 9 Dec 2009 19:45:25 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12427459/pigstorageschema_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12427459/pigstorageschema_5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 888704.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12788300" author="dvryaboy" created="Wed, 9 Dec 2009 20:42:13 +0000"  >&lt;p&gt;The core test failure is in junit.framework &amp;#8211; doesn&apos;t seem related. Can someone confirm this is just Hudson acting out? Here&apos;s the error report: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/testReport/junit.framework/TestSuite$1/warning/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/109/testReport/junit.framework/TestSuite$1/warning/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The javadoc fix is trivial, holding off uploading a patch in case I need to do something about the junit test failure.&lt;/p&gt;</comment>
                            <comment id="12789011" author="alangates" created="Thu, 10 Dec 2009 23:16:22 +0000"  >&lt;p&gt;I&apos;ll take a look.&lt;/p&gt;</comment>
                            <comment id="12791079" author="alangates" created="Wed, 16 Dec 2009 00:19:55 +0000"  >&lt;p&gt;I reran the test, it looks fine.  &lt;/p&gt;

&lt;p&gt;Given that LoadMetadata et al has moved to experimental and PigStorageSchema to PiggyBank it doesn&apos;t seem to me that JsonMetadata belongs in builtin.  Are you ok with me moving it to experimental as part of applying the patch?&lt;/p&gt;</comment>
                            <comment id="12791445" author="dvryaboy" created="Wed, 16 Dec 2009 16:43:59 +0000"  >&lt;p&gt;Fixed javadoc, moved JsonMetadata to experimental.&lt;/p&gt;</comment>
                            <comment id="12791570" author="alangates" created="Wed, 16 Dec 2009 20:38:05 +0000"  >&lt;p&gt;patch7 checked in.  Thanks Dmitriy for your work on this, including being willing to make several revisions.&lt;/p&gt;</comment>
                            <comment id="12791612" author="hadoopqa" created="Wed, 16 Dec 2009 21:59:20 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12428185/pigstorageschema_7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12428185/pigstorageschema_7.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 890596.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/131/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/131/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/131/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/131/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/131/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/131/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12426580" name="TEST-org.apache.pig.piggybank.test.TestPigStorageSchema.txt" size="36988" author="alangates" created="Tue, 1 Dec 2009 21:17:51 +0000"/>
                            <attachment id="12422958" name="pigstorageschema-2.patch" size="52155" author="dvryaboy" created="Thu, 22 Oct 2009 23:03:59 +0100"/>
                            <attachment id="12422565" name="pigstorageschema.patch" size="50434" author="dvryaboy" created="Mon, 19 Oct 2009 16:36:58 +0100"/>
                            <attachment id="12426245" name="pigstorageschema_3.patch" size="62147" author="dvryaboy" created="Thu, 26 Nov 2009 21:51:18 +0000"/>
                            <attachment id="12426297" name="pigstorageschema_4.patch" size="61881" author="dvryaboy" created="Fri, 27 Nov 2009 20:12:06 +0000"/>
                            <attachment id="12427459" name="pigstorageschema_5.patch" size="62448" author="dvryaboy" created="Wed, 9 Dec 2009 10:54:09 +0000"/>
                            <attachment id="12428185" name="pigstorageschema_7.patch" size="63452" author="dvryaboy" created="Wed, 16 Dec 2009 16:43:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Apr 2009 19:56:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>41736</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyail3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95322</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>