<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:05:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1891/PIG-1891.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1891] Enable StoreFunc to make intelligent decision based on job success or failure</title>
                <link>https://issues.apache.org/jira/browse/PIG-1891</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;We are in the process of using PIG for various data processing and component integration. Here is where we feel pig storage funcs lack:&lt;/p&gt;

&lt;p&gt;They are not aware if the over all job has succeeded. This creates a problem for storage funcs which needs to &quot;upload&quot; results into another system:&lt;/p&gt;

&lt;p&gt;DB, FTP, another file system etc.&lt;/p&gt;

&lt;p&gt;I looked at the DBStorage in the piggybank (&lt;a href=&quot;http://svn.apache.org/viewvc/pig/trunk/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/DBStorage.java?view=markup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/pig/trunk/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/DBStorage.java?view=markup&lt;/a&gt;) and what I see is essentially a mechanism which for each task does the following:&lt;/p&gt;

&lt;p&gt;1. Creates a recordwriter (in this case open connection to db)&lt;br/&gt;
2. Open transaction.&lt;br/&gt;
3. Writes records into a batch&lt;br/&gt;
4. Executes commit or rollback depending if the task was successful.&lt;/p&gt;

&lt;p&gt;While this aproach works great on a task level, it does not work at all on a job level. &lt;/p&gt;

&lt;p&gt;If certain tasks will succeed but over job will fail, partial records are going to get uploaded into the DB.&lt;/p&gt;

&lt;p&gt;Any ideas on the workaround? &lt;/p&gt;

&lt;p&gt;Our current workaround is fairly ugly: We created a java wrapper that launches pig jobs and then uploads to DB&apos;s once pig&apos;s job is successful. While the approach works, it&apos;s not really integrated into pig.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12500961">PIG-1891</key>
            <summary>Enable StoreFunc to make intelligent decision based on job success or failure</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="initialcontext">Eli Reisman</assignee>
                                    <reporter username="arov">Alex Rovner</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Wed, 9 Mar 2011 23:20:58 +0000</created>
                <updated>Tue, 18 Feb 2014 23:22:45 +0000</updated>
                            <resolved>Fri, 7 Sep 2012 22:30:01 +0100</resolved>
                                    <version>0.10.0</version>
                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13004873" author="alangates" created="Wed, 9 Mar 2011 23:33:29 +0000"  >&lt;p&gt;It sounds like what you want is a way for the storage function to inject code into OutputCommitter.cleanupJob.  (See &lt;a href=&quot;http://hadoop.apache.org/common/docs/r0.20.2/api/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/common/docs/r0.20.2/api/index.html&lt;/a&gt; for details.  This is a final task that Hadoop runs after all reduces have finished.)  &lt;/p&gt;

&lt;p&gt;At this point since this is already offered by Hadoop&apos;s OutputFormat we have left these things there, rather than mimic the interface in Pig.  So the way to do this would be to have the OutputFormat you are using return an OutputCommitter that would do the commit (or whatever) in cleanupJob.  You do not have to write a whole new OutputFormat for this.  You can extend whatever OutputFormat you are using and the associated OutputCommitter it returns.  Your extended OutputFormat should return your OutputCommitter in getOutputCommitter.  Your OutputCommitter should only change cleanupJob, which should call super.cleanupJob and then do whatever you want to do.&lt;/p&gt;</comment>
                            <comment id="13005091" author="arov" created="Thu, 10 Mar 2011 14:56:39 +0000"  >&lt;p&gt;Alan,&lt;/p&gt;

&lt;p&gt;Thank you for the information. From what you are describing it&apos;s exactly what we are looking for. We are going to try to take that approach and will let you know how it goes. &lt;br/&gt;
Thanks!&lt;/p&gt;</comment>
                            <comment id="13005240" author="arov" created="Thu, 10 Mar 2011 18:53:44 +0000"  >&lt;p&gt;Alan,&lt;/p&gt;

&lt;p&gt;After a bit of investigation, even though what you have described can be achieved through the OutputCommitter it still seems that it would be much easier if the store func would have a &quot;commit&quot; method which is called once the job is final. This would significantly simplify writing a store func.&lt;/p&gt;

&lt;p&gt;Currently if you take the OutputCommitter approach you would have to some how make the Commiter aware of what you want to do upon commit. This would mean that if you want to create SFTP store and DB store you would need to create your own StoreFunc, OutputFormat, RecordWriter and Outputcommiter. Seems a bit of an overkill for such a simple tasks?&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13005707" author="alangates" created="Fri, 11 Mar 2011 16:30:18 +0000"  >&lt;p&gt;When we redesigned the load and store interfaces in 0.7 we made a design decision to not duplicate Hadoop functionality, but to be as thin a layer as possible.  Of course where there are things everyone will want to do, it makes sense to make those easier and deal with a little duplication.  My sense is that this is not one of those cases.  But if we see many others voting for this feature, I could be convinced that this would make sense.  I will leave this JIRA open for now to see how others vote.  Though I will change the priority to minor.&lt;/p&gt;

&lt;p&gt;I will also forward this information to Corrine (who writes our docs).  She may want to include it in her section on store functions.&lt;/p&gt;</comment>
                            <comment id="13196425" author="jghoman" created="Mon, 30 Jan 2012 21:17:33 +0000"  >&lt;p&gt;We&apos;re facing a similar issue and would also vote to add this functionality.  A cleanupOnSuccess method seems like the most reasonable place to keep code like this.&lt;/p&gt;</comment>
                            <comment id="13198527" author="daijy" created="Thu, 2 Feb 2012 04:43:47 +0000"  >&lt;p&gt;Hi, Jakob,&lt;br/&gt;
Just make sure you realize there is a cleanupOnFailure in StoreFunc. So you want a symmetric hook when job success? OutputFormat.CleanupJob does not help?&lt;/p&gt;</comment>
                            <comment id="13212661" author="arov" created="Tue, 21 Feb 2012 15:32:18 +0000"  >&lt;p&gt;Correct just like we have cleanupOnFailure. We should have a cleanupOnSuccess.&lt;/p&gt;</comment>
                            <comment id="13212672" author="srosenberg" created="Tue, 21 Feb 2012 15:46:29 +0000"  >&lt;p&gt;I wanted to chime in.  I agree with Jakob except I&apos;d name this callback &apos;postProcess&apos;.  It&apos;s a very easy change to sneak in without any impact on existing code.&lt;/p&gt;

&lt;p&gt;a) Introduce new interface, say &apos;StoreFuncOnSuccess&apos; with the method &apos;void postProcess(String location, Job job) throws IOException;&lt;/p&gt;

&lt;p&gt;b) Modify PigServer.launchPlan to invoke &apos;postProcess&apos;.&lt;/p&gt;

&lt;p&gt;I think this feature is a must have for complex storage UDFs.&lt;/p&gt;</comment>
                            <comment id="13212800" author="billgraham" created="Tue, 21 Feb 2012 18:52:10 +0000"  >&lt;p&gt;This would be a useful feature and I&apos;ve wanted to have it in the past. I don&apos;t think this really warrants yet another interface though. StoreFuncInterface already has cleanupOnFailure so it makes sense for it to have something like onSuccess as well. It could be an empty method in StoreFunc, which I&apos;d expect more people currently extend.&lt;/p&gt;</comment>
                            <comment id="13419698" author="initialcontext" created="Sat, 21 Jul 2012 01:06:28 +0100"  >&lt;p&gt;A first attempt at the cleanupOnSuccess() solution proposed in the comment thread. And a first attempt at contributing to Pig &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13429456" author="jghoman" created="Mon, 6 Aug 2012 22:33:22 +0100"  >&lt;p&gt;This looks good to me.  +1 on the patch, for what it&apos;s worth.  This is what we&apos;re looking for.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=billgraham&quot; class=&quot;user-hover&quot; rel=&quot;billgraham&quot;&gt;Bill Graham&lt;/a&gt;, how does this look to you?&lt;/p&gt;</comment>
                            <comment id="13433396" author="alangates" created="Mon, 13 Aug 2012 19:36:50 +0100"  >&lt;p&gt;I don&apos;t see where cleanupOnSuccess is invoked by the system, so I assume the purpose of this patch is to propose the change to the interface, not to actually implement the functionality yet.  On this assumption, the patch looks ok except for one issue:  StoreFunc is a public stable class.  You can&apos;t change the name of publicly available methods.  Changing cleanupOnFailure to cleanupImpl breaks backwards compatibility.&lt;/p&gt;

</comment>
                            <comment id="13434569" author="initialcontext" created="Tue, 14 Aug 2012 23:05:08 +0100"  >&lt;p&gt;I&apos;ll take a look at where the framework should call it. Its been a while but as I recall the cleanupImpl is called from within the same old cleanupFailure that was already there, still in place. I moved the code to cleanupImpl so I could also call it from cleanupSuccess as the function was the same, only the context of the call differs. I suppose when people override these methods there might be more differences. I&apos;ll take a look at the code today, and try to have another patch up ASAP. Thanks again, if there&apos;s anything else I&apos;ve overlooked please let me know.&lt;/p&gt;

</comment>
                            <comment id="13434716" author="initialcontext" created="Wed, 15 Aug 2012 02:03:40 +0100"  >&lt;p&gt;Hey Alan, what do you think of this?&lt;/p&gt;

&lt;p&gt;It restores cleanupOnFailureImpl (why is this exposed in the interface at all, btw?) and does not attempt to implement cleanupOnSuccess, just adds it where relevant. This way users can implement it themselves if they need it in their StoreFunc.&lt;/p&gt;

&lt;p&gt;Also: would you look at the way it is wired into PigServer#launchPlan() I&apos;m giving it the same args that cleanupOnFailure() gets but I&apos;m not certain this is the information a user would want it to receive. I expect if they do implement cleanupOnSuccess, these args will provide the data to delete? In the DB example here in this thread, will the data already have been successfully loaded to DB by the user code,and this merely has to erase unneeded files the data was stored in during processing steps after the fact? Would cleanupOnSuccess include the &apos;load to database&apos; and &apos;erase leftover files&apos; code together?&lt;/p&gt;

&lt;p&gt;Anyway, thanks, let me know if this is what we need or I&apos;m on the right track, thanks again.&lt;/p&gt;</comment>
                            <comment id="13435476" author="arov" created="Wed, 15 Aug 2012 21:11:56 +0100"  >&lt;p&gt;Thanks Eli. Looks pretty good to me. &lt;/p&gt;

&lt;p&gt;Alan &amp;#8211; Do you have any comments?&lt;/p&gt;</comment>
                            <comment id="13435479" author="arov" created="Wed, 15 Aug 2012 21:13:55 +0100"  >&lt;p&gt;I also want to mention that this additional call will be useful in HCatalog. As of now there is some workaround to get the same behavior.&lt;/p&gt;</comment>
                            <comment id="13441371" author="alangates" created="Fri, 24 Aug 2012 19:34:21 +0100"  >&lt;p&gt;Looks reasonable.  I&apos;ll run the tests on it.&lt;/p&gt;</comment>
                            <comment id="13442699" author="alangates" created="Mon, 27 Aug 2012 21:34:22 +0100"  >&lt;p&gt;This adds a failure in TestLoadStoreFuncLifeCycle and TestMacroExpansion.  &lt;/p&gt;

&lt;p&gt;In TestLoadStoreFuncLifeCycle the failure is because it re-instantiates the store function again.  Julien had put in tests to make sure the number of instantiation stays down.  After talking with him he said he thought this patch was fine, so you can bump up the instantiation number it checks for from 3 to 4.  &lt;/p&gt;

&lt;p&gt;I&apos;m not clear what&apos;s driving the failure in TestMacroExpansion.&lt;/p&gt;

&lt;p&gt;I&apos;ll run the e2e tests as well as post results.&lt;/p&gt;
</comment>
                            <comment id="13442760" author="alangates" created="Mon, 27 Aug 2012 23:10:43 +0100"  >&lt;p&gt;Never mind on TestMacroExpansion.  I see that is failing in trunk as well.&lt;/p&gt;</comment>
                            <comment id="13445156" author="initialcontext" created="Thu, 30 Aug 2012 19:17:10 +0100"  >&lt;p&gt;I can try to avoid the re-instantiation if you like, or bump the test value, whatever is best. And you&apos;re comfortable the other test issue is something else? This passed the test suite for me that that was a while back, and I&apos;m not extremely knowledgeable on all the areas of the code I&apos;m touching here. Hope to be soon &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13446772" author="initialcontext" created="Sat, 1 Sep 2012 19:44:32 +0100"  >&lt;p&gt;This alters the test to allow up to 4 instantiations as Alan mentioned. If there&apos;s a better solution to this issue, let me know. Thanks again!&lt;/p&gt;</comment>
                            <comment id="13446793" author="initialcontext" created="Sat, 1 Sep 2012 20:58:20 +0100"  >&lt;p&gt;Now when I run my local machine tests with &apos;ant test-commit&apos; on &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1891&quot; title=&quot;Enable StoreFunc to make intelligent decision based on job success or failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1891&quot;&gt;&lt;del&gt;PIG-1891&lt;/del&gt;&lt;/a&gt;-3.patch + trunk, I get this error (and only this error):&lt;/p&gt;


&lt;p&gt;Testcase: testNumSamples took 22.016 sec&lt;br/&gt;
	FAILED&lt;br/&gt;
expected:&amp;lt;47&amp;gt; but was:&amp;lt;42&amp;gt;&lt;br/&gt;
junit.framework.AssertionFailedError: expected:&amp;lt;47&amp;gt; but was:&amp;lt;42&amp;gt;&lt;br/&gt;
	at org.apache.pig.test.TestPoissonSampleLoader.testNumSamples(TestPoissonSampleLoader.java:125)&lt;/p&gt;


&lt;p&gt;I did not alter then number of allowed instantiations in the TestLoadStoreFuncLifeCycle test for loads, just stores, so perhaps this set off a ripple effect of other problems, its odd that the fail is in a loader. But I am unsure if this is directly related to this patch or an existing problem you guys know about so i thought I&apos;d post here before hunting it down. Thanks again!&lt;/p&gt;</comment>
                            <comment id="13450999" author="alangates" created="Fri, 7 Sep 2012 22:30:01 +0100"  >&lt;p&gt;Patch checked in.  Thanks Eli.&lt;/p&gt;</comment>
                            <comment id="13451372" author="initialcontext" created="Sat, 8 Sep 2012 18:19:58 +0100"  >&lt;p&gt;Thanks for your patience! I hope to dig into juicier slices of ham very soon!&lt;/p&gt;</comment>
                            <comment id="13464338" author="dvryaboy" created="Thu, 27 Sep 2012 01:59:36 +0100"  >&lt;p&gt;Alan, Eli &amp;#8211; this is not a backwards compatible change. Anything that implements StoreFuncInterface but does not extend StoreFunc now breaks. At the very least, this fact should be explicitly documented in the release notes (better yet, not having this method wouldn&apos;t kill things).&lt;/p&gt;</comment>
                            <comment id="13464364" author="initialcontext" created="Thu, 27 Sep 2012 03:07:07 +0100"  >&lt;p&gt;Good point. I was assigned this JIRA to get introduced to Pig originally,&lt;br/&gt;
and did not know the controversy adding this functionality would generate!&lt;br/&gt;
I am fine with whatever fix or documentation you guys feel is relevant.&lt;/p&gt;

&lt;p&gt;On Wed, Sep 26, 2012 at 6:01 PM, Dmitriy V. Ryaboy (JIRA)&lt;/p&gt;
</comment>
                            <comment id="13464398" author="dvryaboy" created="Thu, 27 Sep 2012 04:55:52 +0100"  >&lt;p&gt;I&apos;m just grouchy cause I can&apos;t move a class of jobs till we fix a StoreFunc in Elephant-Bird &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Appreciate you doing the work, this is a good feature! It&apos;s actually documented as an incompatible feature (in release notes on this ticket, and by having the patch listed under &quot;incompatible changes&quot; in CHANGES.txt). So procedurally speaking, it&apos;s fine.&lt;/p&gt;

&lt;p&gt;We can probably have a guard around this issue by checking if the class has a declared method &quot;cleanupOnSuccess&quot;, which would restore backwards compatibility.&lt;/p&gt;</comment>
                            <comment id="13464500" author="billgraham" created="Thu, 27 Sep 2012 07:39:35 +0100"  >&lt;p&gt;Eli, in other places in the code we&apos;ll surround the call to a newly introduced method with a catch of NoSuchMethodError FYI. That would help in this case.&lt;/p&gt;</comment>
                            <comment id="13464869" author="alangates" created="Thu, 27 Sep 2012 17:46:15 +0100"  >&lt;p&gt;This is my bad.  I figured most people extended StoreFunc rather than implemented StoreFuncInterface.  I can add do a patch to fix it.&lt;/p&gt;</comment>
                            <comment id="13465194" author="initialcontext" created="Thu, 27 Sep 2012 23:47:31 +0100"  >&lt;p&gt;I&apos;d be happy to try to wrap the calls in try/catch on a new JIRA if you like. If you guys would rather have someone else take a swipe at this, or there&apos;s more to the fix and it needs a new JIRA by someone that can describe the problem/fix better than I, thats fine with me too.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12609411">PIG-2935</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12695822">PIG-3770</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12537432" name="PIG-1891-1.patch" size="9727" author="initialcontext" created="Sat, 21 Jul 2012 01:51:04 +0100"/>
                            <attachment id="12540989" name="PIG-1891-2.patch" size="9288" author="initialcontext" created="Wed, 15 Aug 2012 02:03:40 +0100"/>
                            <attachment id="12543442" name="PIG-1891-3.patch" size="9961" author="initialcontext" created="Sat, 1 Sep 2012 19:44:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Mar 2011 23:33:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165230</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxwd8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12632</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This adds a new method, cleanupOnSuccess, to the StoreFunc interface, and thus will cause backward compatibility issues for users who directly implement this interface.  Most store functions implement StoreFuncImpl, which will shield them from this issue as it implements the new method.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>