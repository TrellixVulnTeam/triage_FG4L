<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:11:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-796/PIG-796.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-796] support  conversion from numeric types to chararray</title>
                <link>https://issues.apache.org/jira/browse/PIG-796</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description></description>
                <environment></environment>
        <key id="12424405">PIG-796</key>
            <summary>support  conversion from numeric types to chararray</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ashutoshc">Ashutosh Chauhan</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 May 2009 18:31:26 +0100</created>
                <updated>Wed, 24 Mar 2010 22:11:00 +0000</updated>
                            <resolved>Thu, 4 Jun 2009 18:49:08 +0100</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.3.0</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12708281" author="sms" created="Tue, 12 May 2009 02:07:51 +0100"  >&lt;p&gt;Pig supports conversion of numeric types to chararray. The issue being talked about in this jira is about conversion of types that come out of maps. Currently, Pig assumes that bytearray is the type of the value. However, when users use non-bytearray types, (like Double, Integer, etc.), then conversions fail. Pig is expecting a bytearray and finds a different type, resulting in ClassCastException.&lt;/p&gt;

&lt;p&gt;An example to illustrate the point. In the script below, the user is explicitly casting the value to a chararray. If the map returns an Integer or a Double, then Pig will bail out with a ClassCastException.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
foreach input generate (chararray)mymap#&apos;key&apos; as myvalue;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A proposal to address this issue.&lt;/p&gt;

&lt;p&gt;Instead of bailing out, Pig should examine the type of the value. Depending on the expected type (implicit/explicit casts), perform a conversion. These changes are localized to the POCast.java The implication of this change is a possible slower performance that can be minimized by caching the value type.&lt;/p&gt;

&lt;p&gt;On a side note, this issue plays a role in the larger issue of handling unknown types. That is a much bigger topic.&lt;/p&gt;</comment>
                            <comment id="12714209" author="ashutoshc" created="Thu, 28 May 2009 23:52:12 +0100"  >&lt;p&gt;Since Pig allows values in a map to be of different types caching the type may not be safe. There are two possible alternatives:&lt;/p&gt;

&lt;p&gt;a) Find type by introspection every time. This will ensure we are always correct and can handle all cases (including when values in maps are of different types). This though will incur a performance overhead for every cast call.&lt;br/&gt;
b) Find the type first time and then cache it for subsequent calls. When encountered with different type Pig will bail out with a ClassCastException. This will avoid performance overhead but Pig will die when values in maps are of different types.&lt;/p&gt;

&lt;p&gt;In this performance Vs &quot;handling all cases&quot; trade-off wondering which route should we go ?  &lt;/p&gt;</comment>
                            <comment id="12714212" author="olgan" created="Fri, 29 May 2009 00:03:40 +0100"  >&lt;p&gt;I think we should be safe and check type for every value&lt;/p&gt;</comment>
                            <comment id="12714224" author="alangates" created="Fri, 29 May 2009 00:30:42 +0100"  >&lt;p&gt;Can options a and b not be combined?  Could we cache the type the first time, and if we see the ClassCastException then attempt to infer the type, caching whatever we see for the next time?  This will benefit users who have all or most of their values of the same type, since we won&apos;t be introspecting every time.  It will penalize users who&apos;s values switch frequently (as exceptions are very slow), but it will still work.  I&apos;m guessing the former is much more common than the latter.&lt;/p&gt;</comment>
                            <comment id="12714233" author="milindb" created="Fri, 29 May 2009 00:57:48 +0100"  >&lt;p&gt;Can&apos;t the user simply do:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
foreach input generate (chararray)((&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)mymap#&apos;key&apos;) as myvalue;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Minimizing implicit casting is a good thing (tm) anyway.&lt;/p&gt;</comment>
                            <comment id="12714234" author="sms" created="Fri, 29 May 2009 01:03:18 +0100"  >&lt;p&gt;Milind,&lt;/p&gt;

&lt;p&gt;This issue is in the backend. Users can do what you suggest in the front-end.&lt;/p&gt;</comment>
                            <comment id="12714278" author="milindb" created="Fri, 29 May 2009 03:47:08 +0100"  >&lt;p&gt;So, can we live with the classcastexception generated by the front end ? I recall reading somewhere that pigs do what they are told. If they are told to do things that are even impossible for humans to comprehend, i.e. somehow interpret a byte array to be an integer, and then to convert them to strings, how would they cope up ?&lt;/p&gt;

&lt;p&gt;IMHO, eliminating such implicit casts would reduce complexity of pig, and would fit in the pig philosphy. But that means being able to convert everything to a chararray at most. If someone request a chararray cast of a bytearray, give them a hex representation, and have them write a UDF to convert hex string to string (i.e. toInt(&apos;0x&apos;+myvalue) in the above code.)&lt;/p&gt;

&lt;p&gt;thoughts ?&lt;/p&gt;</comment>
                            <comment id="12714279" author="milindb" created="Fri, 29 May 2009 03:48:05 +0100"  >&lt;p&gt;Modifying my earlier comment:&lt;/p&gt;

&lt;p&gt;&amp;gt; So, can we live with the classcastexception generated by the front end ?&lt;/p&gt;

&lt;p&gt;I meant the back end of course.&lt;/p&gt;</comment>
                            <comment id="12714283" author="sms" created="Fri, 29 May 2009 04:32:40 +0100"  >&lt;p&gt;Milind,&lt;/p&gt;

&lt;p&gt;You are generalizing a specific problem. Pig can convert a byte array to an integer and then to a string as long as the byte array is convertible to an integer. The problem being discussed is for bytes that come out of a Map. The title of this jira is incorrect as I have pointed out in my first comment.&lt;/p&gt;

&lt;p&gt;Regarding ClassCastExceptions, Pig fails and the script aborts; Here, I am excluding less than a handful of cases where we do not bail out.&lt;/p&gt;</comment>
                            <comment id="12714526" author="yhan" created="Fri, 29 May 2009 18:36:31 +0100"  >&lt;p&gt;I have the same idea that Alan proposed. I agree the common case is most values are of the same type. Caching the type and change the cached type only when catch the ClassCastException would be the most efficient way.&lt;/p&gt;</comment>
                            <comment id="12714647" author="ashutoshc" created="Sat, 30 May 2009 02:25:44 +0100"  >&lt;p&gt;This patch implements the fix as suggested by Alan.&lt;/p&gt;</comment>
                            <comment id="12715304" author="ashutoshc" created="Tue, 2 Jun 2009 00:38:12 +0100"  >&lt;p&gt;updated patch.&lt;/p&gt;

&lt;p&gt;This patch fixes the following issue: Sometimes (e.g. when values coming out of map lookup) Pig assumes type of element as ByteArray when actually it is of some other type. In such cases request for a Cast fails. &lt;/p&gt;

&lt;p&gt;This patch first finds out the actual type of element before casting it (specifically when Pig thinks its ByteArray) and then do the cast. It also caches the type. When type changes ClassCastException is raised which gets caught and cast is then tried again. Cached value of type is also updated. This ensures that type is not determined on each cast call as well as handling of casts when types changes from one call to the next.     &lt;/p&gt;</comment>
                            <comment id="12715325" author="pkamath" created="Tue, 2 Jun 2009 02:34:08 +0100"  >&lt;p&gt;A few comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In TestPOCast.java the variables can be named as something like &quot;opWithInputTypeAsByteArray&quot; for the POCast objects since the intent is not so clear with the current names&lt;/li&gt;
	&lt;li&gt;In POCast.java you can check for the realType inside the catch clause rather than before trying to cast to ByteArray. This way, if the cast to ByteArray is always successful, we will not be incurring the overhead of the if(realType==null) check&lt;/li&gt;
	&lt;li&gt;In POCast.java, you can avoid catching ExecException and checking for errorCode == 1071. Since the getNext() call in POCast already throws ExecException, you can just let ExecExceptions from DataType.toXXX() methods bubble out.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12715406" author="hadoopqa" created="Tue, 2 Jun 2009 08:43:02 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12409612/796.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12409612/796.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 780722.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 225 javac compiler warnings (more than the trunk&apos;s current 224 warnings).&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/66/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/66/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/66/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/66/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/66/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/66/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12715967" author="ashutoshc" created="Wed, 3 Jun 2009 17:06:55 +0100"  >&lt;p&gt;Updated patch incorporating suggested changes.&lt;/p&gt;</comment>
                            <comment id="12716110" author="hadoopqa" created="Thu, 4 Jun 2009 01:29:17 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12409785/pig-796.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12409785/pig-796.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 781599.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/70/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/70/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/70/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/70/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/70/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/70/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12716341" author="pkamath" created="Thu, 4 Jun 2009 18:49:07 +0100"  >&lt;p&gt;Patch commited - thanks for contributing Ashutosh!&lt;/p&gt;</comment>
                            <comment id="12716871" author="hudson" created="Sat, 6 Jun 2009 12:40:21 +0100"  >&lt;p&gt;Integrated in Pig-trunk #465 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-trunk/465/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-trunk/465/&lt;/a&gt;)&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12417225">PIG-724</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12409612" name="796.patch" size="72302" author="ashutoshc" created="Tue, 2 Jun 2009 00:38:12 +0100"/>
                            <attachment id="12409785" name="pig-796.patch" size="57456" author="ashutoshc" created="Wed, 3 Jun 2009 17:06:55 +0100"/>
                            <attachment id="12409442" name="pig-796.patch" size="136408" author="ashutoshc" created="Sat, 30 May 2009 02:25:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 12 May 2009 01:07:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164353</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaj0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95391</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>