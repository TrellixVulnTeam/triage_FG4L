<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:58:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3461/PIG-3461.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3461] Rewrite PartitionFilterOptimizer to make it work for all the cases</title>
                <link>https://issues.apache.org/jira/browse/PIG-3461</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Current algorithm for Partition Filter pushdown identification fails in several corner cases. We need to rewrite its logic so that it works in all cases and does the maximum possible filter pushdown.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12668882">PIG-3461</key>
            <summary>Rewrite PartitionFilterOptimizer to make it work for all the cases</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aniket486">Aniket Mokashi</assignee>
                                    <reporter username="aniket486">Aniket Mokashi</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 Sep 2013 21:38:42 +0100</created>
                <updated>Wed, 21 May 2014 04:16:27 +0100</updated>
                            <resolved>Tue, 24 Sep 2013 20:05:27 +0100</resolved>
                                    <version>0.11.1</version>
                                    <fixVersion>0.12.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13769973" author="aniket486" created="Tue, 17 Sep 2013 22:13:38 +0100"  >&lt;p&gt;Some extra code (EvalFunc) got added to the patch mistakenly. I will resubmit a refactored patch soon. Canceling the patch in meantime.&lt;/p&gt;</comment>
                            <comment id="13770466" author="aniket486" created="Wed, 18 Sep 2013 06:55:05 +0100"  >&lt;p&gt;RB: &lt;a href=&quot;https://reviews.apache.org/r/14196/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/14196/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13774108" author="cheolsoo" created="Sun, 22 Sep 2013 23:42:27 +0100"  >&lt;p&gt;(Apache RB is not responsive now, so I am leaving comments here.)&lt;/p&gt;

&lt;p&gt;Excellent work, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aniket486&quot; class=&quot;user-hover&quot; rel=&quot;aniket486&quot;&gt;Aniket Mokashi&lt;/a&gt;! Your code is a lot more readable and maintainable! I just have few minor comments as follows:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Can you make the old visitor default and the new one optional in 0.12? I think that&apos;s safer given we haven&apos;t tested the new code enough. Do you agree?&lt;/li&gt;
	&lt;li&gt;Can you annotate the old visitor class (and its unit test) as deprecated so that we can delete them perhaps in 0.13?&lt;/li&gt;
	&lt;li&gt;Can you make FilterExtractor extend PlanVisitor? It doesn&apos;t seem necessary, but I find it helpful to view it in the type hierarchy of PlanVisitor in IDE.&lt;/li&gt;
	&lt;li&gt;Please remove trailing whites paces.&lt;/li&gt;
	&lt;li&gt;Lastly, I have a question about backward incompatibility.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
* Flag to use old PartitionFilterOptimizer in &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; NewPartitionFilterOptimizer is not backwards compatible
* (A known &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; is &lt;span class=&quot;code-quote&quot;&gt;&quot;filter a by 1 == 0&quot;&lt;/span&gt;).
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As far as I understand, your visitor is simply superior to the old one. (i.e. more filter expressions can be pushed down.) Is there any filter expression that used to be pushed down is no longer pushed down? The &quot;1 == 0&quot; case in your comment is pushed down now while it wasn&apos;t before, so I see it more as an improvement than a backward incompatibility. I am trying to understand whether there are real backward incompatibilities before I deploy your code in production.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Thank you very much!&lt;/p&gt;</comment>
                            <comment id="13774111" author="cheolsoo" created="Sun, 22 Sep 2013 23:49:53 +0100"  >&lt;p&gt;Forgot to mention that your patch no longer applies nicely because I committed &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3471&quot; title=&quot;Add a base abstract class for ExecutionEngine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3471&quot;&gt;&lt;del&gt;PIG-3471&lt;/del&gt;&lt;/a&gt;. Please rebase it to trunk. (I am sorry &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;</comment>
                            <comment id="13774305" author="aniket486" created="Mon, 23 Sep 2013 06:44:49 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can you make the old visitor default and the new one optional in 0.12? I think that&apos;s safer given we haven&apos;t tested the new code enough. Do you agree?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I prefer having the new optimizer as default. That way we can make sure everyone migrates to the new code instead hiding that against a flag. Reverting to old behavior should only happen if there bugs/corner cases.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Can you annotate the old visitor class (and its unit test) as deprecated so that we can delete them perhaps in 0.13?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Definitely.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Can you make FilterExtractor extend PlanVisitor? It doesn&apos;t seem necessary, but I find it helpful to view it in the type hierarchy of PlanVisitor in IDE.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;FilterExtractor is not a PlanVisitor actually. It can have applications even outside of the optimizer framework and hence I do not want to tie it to visitor framework. The code needs to be strictly recursive (aka depth first) instead of the visitor pattern. PColFilterExtractor also extends PlanVisitor for namesake and does not use any of its features.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Please remove trailing whites paces.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will do.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is there any filter expression that used to be pushed down is no longer pushed down.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That should not be the case.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The &quot;1 == 0&quot; case in your comment is pushed down now while it wasn&apos;t before, so I see it more as an improvement than a backward incompatibility.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;True. I agree with you. However, I have seen people use filter a by 1==0 as a no-op load-and-drop data operation. That won&apos;t work anymore with Loader&apos;s that implement LoadMetadata. There are no known incompatibilities with this fix. But, since more stuff is getting pushed to the loaders, you might need to make sure your loaders have the correct logic for all cases (eg- 1==0, long expressions etc.)&lt;/p&gt;
</comment>
                            <comment id="13774308" author="aniket486" created="Mon, 23 Sep 2013 06:45:34 +0100"  >&lt;p&gt;I will rebase and submit a new patch (with CR changes) shortly.&lt;/p&gt;</comment>
                            <comment id="13774318" author="cheolsoo" created="Mon, 23 Sep 2013 07:07:29 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I prefer having the new optimizer as default. That way we can make sure everyone migrates to the new code instead hiding that against a flag. Reverting to old behavior should only happen if there bugs/corner cases.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure. This doesn&apos;t make any difference to me because I am going to explicitly enable the new optimizer in the pig.properties file regardlessly. The reason why I asked is I thought it would be nicer if early adopters (Twitter, Yahoo, Netflix, etc) could stabilize it first before opening it to the community. Some conner cases/bugs might surprise users who do not follow JIRAs. Does this make sense?&lt;/p&gt;
</comment>
                            <comment id="13774321" author="aniket486" created="Mon, 23 Sep 2013 07:19:51 +0100"  >&lt;p&gt;That makes sense. However, wider adoption would help us stabilize this code path faster. I see more risk with the Loaders that implement LoadPushDown interface compared to having corner cases/bugs in this code itself. So, its better to get more coverage sooner.&lt;/p&gt;</comment>
                            <comment id="13774324" author="cheolsoo" created="Mon, 23 Sep 2013 07:24:05 +0100"  >&lt;p&gt;Alright, sir. I do not object.&lt;/p&gt;</comment>
                            <comment id="13775655" author="aniket486" created="Mon, 23 Sep 2013 22:00:35 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt;! I have uploaded the new patch and updated RB accordingly.&lt;/p&gt;</comment>
                            <comment id="13775989" author="cheolsoo" created="Tue, 24 Sep 2013 05:46:19 +0100"  >&lt;p&gt;+1. LGTM!&lt;/p&gt;

&lt;p&gt;When you commit, can you please add the new property to &quot;conf/pig.properties&quot; with some comment? For eg,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# Set &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; option to &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you need to use the old partition filter optimizer. But note it will be deprecated in the &lt;span class=&quot;code-keyword&quot;&gt;future&lt;/span&gt;.
# pig.exec.useOldPartitionFilterOptimize=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we should document it somewhere even though we&apos;ll remove it in the next release.&lt;/p&gt;</comment>
                            <comment id="13775993" author="aniket486" created="Tue, 24 Sep 2013 05:58:56 +0100"  >&lt;p&gt;That makes sense. I will add the documentation to pig.properties and I will commit to trunk + pig-0.12 branch.&lt;/p&gt;</comment>
                            <comment id="13776636" author="aniket486" created="Tue, 24 Sep 2013 20:05:20 +0100"  >&lt;p&gt;Committed to trunk and 0.12 branch. Thanks again &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; for reviewing!&lt;/p&gt;</comment>
                            <comment id="13791070" author="cheolsoo" created="Thu, 10 Oct 2013 02:17:59 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aniket486&quot; class=&quot;user-hover&quot; rel=&quot;aniket486&quot;&gt;Aniket Mokashi&lt;/a&gt;, can you take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3510&quot; title=&quot;New filter extractor fails with more than one filter statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3510&quot;&gt;&lt;del&gt;PIG-3510&lt;/del&gt;&lt;/a&gt;? I discovered it after deploying this new partition filter optimizer to production today. It seems that optimization rules are applied in a different order than before. Particularly in my case, MergeFilter used to come &lt;b&gt;before&lt;/b&gt; PartionFilterPushDown, but now it comes &lt;b&gt;after&lt;/b&gt; NewPartitionFilterPushDown. I didn&apos;t expect this side effect, but it seems like a serious regression.&lt;/p&gt;</comment>
                            <comment id="13791186" author="aniket486" created="Thu, 10 Oct 2013 05:31:14 +0100"  >&lt;p&gt;Yes. Good catch. I moved the optimizer before FilterLogicExpressionSimplifier to leverage its features. Didn&apos;t realize that it would regress in this scenario. We need to move it down where PartitionFilterOptimizer is applied. Attaching a patch right now. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;, how should we apply it to 0.12 branch?&lt;/p&gt;</comment>
                            <comment id="13791907" author="daijy" created="Thu, 10 Oct 2013 20:43:22 +0100"  >&lt;p&gt;Please commit to 0.12 branch. Seems some filter condition cannot push to the loader. Do we think this serious enough to reroll the 0.12.0 RC?&lt;/p&gt;</comment>
                            <comment id="13791933" author="cheolsoo" created="Thu, 10 Oct 2013 21:07:59 +0100"  >&lt;p&gt;I just committed &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3510&quot; title=&quot;New filter extractor fails with more than one filter statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3510&quot;&gt;&lt;del&gt;PIG-3510&lt;/del&gt;&lt;/a&gt; to 0.12 branch. &lt;/p&gt;

&lt;p&gt;Regarding seriousness, this doesn&apos;t make jobs fail, but it definitely has production impact since it makes jobs run longer. I would vote for another RC, but if we can release 0.12.1 soon enough after 0.12.0 is out, that&apos;ll be fine too.&lt;/p&gt;</comment>
                            <comment id="13791961" author="aniket486" created="Thu, 10 Oct 2013 21:37:09 +0100"  >&lt;p&gt;I think its serious enough to reroll the rc. Otherwise, we&apos;ll have to document that anyone using 0.12.0 should use the pig.exec.useOldPartitionFilterOptimizer flag.&lt;/p&gt;</comment>
                            <comment id="13792120" author="daijy" created="Fri, 11 Oct 2013 00:48:48 +0100"  >&lt;p&gt;That should only affect user who write the filter condition separately in two filter statement. And there is no correctness issue and user has a clear workaround. So I don&apos;t feel it is that critical. Plus, I don&apos;t think 0.12.1 will take too long, since we need to include &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3492&quot; title=&quot;ColumnPrune dropping used column due to LogicalRelationalOperator.fixDuplicateUids changes not propagating&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3492&quot;&gt;&lt;del&gt;PIG-3492&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3480&quot; title=&quot;TFile-based tmpfile compression crashes in some cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3480&quot;&gt;&lt;del&gt;PIG-3480&lt;/del&gt;&lt;/a&gt; soon. I would say let&apos;s put it into 0.12.1.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12681677">PIG-3594</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12645276">PIG-3300</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12673140">PIG-3510</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12603664" name="PIG-3461-2.patch" size="18363" author="aniket486" created="Tue, 17 Sep 2013 21:51:48 +0100"/>
                            <attachment id="12603759" name="PIG-3461-4.patch" size="68713" author="aniket486" created="Wed, 18 Sep 2013 06:54:51 +0100"/>
                            <attachment id="12604667" name="PIG-3461-6.patch" size="70811" author="aniket486" created="Mon, 23 Sep 2013 21:58:54 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 22 Sep 2013 22:42:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>348814</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzhznj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>349112</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>