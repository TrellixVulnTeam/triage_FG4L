<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:50:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1386/PIG-1386.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1386] UDF to extend functionalities of MaxTupleBy1stField</title>
                <link>https://issues.apache.org/jira/browse/PIG-1386</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Based on this conversation:&lt;/p&gt;

&lt;p&gt;totally, go for it, it&apos;d be pretty straightforward to add this&lt;br/&gt;
functionality.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Hide quoted text -&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;On Tue, Apr 20, 2010 at 6:45 PM, hc busy &amp;lt;hc.busy@gmail.com&amp;gt; wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; Hey, while we&apos;re on the subject, and I have your attention, can we&lt;br/&gt;
&amp;gt; re-factor&lt;br/&gt;
&amp;gt; the UDF MaxTupleByFirstField to take constructor?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; &lt;b&gt;define customMaxTuple ExtremalTupleByNthField(n, &apos;min&apos;);&lt;/b&gt;&lt;br/&gt;
&amp;gt; &lt;b&gt;G = group T by id;&lt;/b&gt;&lt;br/&gt;
&amp;gt; *M = foreach T generate customMaxTuple(T);&lt;br/&gt;
&amp;gt; *&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Where n is the nth field, and the second parameter allows us to specify&lt;br/&gt;
&amp;gt; &quot;min&quot;, &quot;max&quot;, &quot;median&quot;,  etc...&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Does this seem like something useful to everyone?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; On Tue, Apr 20, 2010 at 6:34 PM, hc busy &amp;lt;hc.busy@gmail.com&amp;gt; wrote:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; What about making them part of the language using symbols?&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; instead of&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; foreach T generate Tuple($0, $1, $2), Bag($3, $4, $5), $6, $7;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; have language support&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; foreach T generate ($0, $1, $2), {$3, $4, $5}, $6, $7;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; or even:&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; foreach T generate ($0, $1, $2), {$3, $4, $5}, &lt;a href=&quot;#$7, $8#$9&quot;&gt;$6#$7, $8#$9&lt;/a&gt;, $10, $11;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; Is there reason not to do the second or third other than being more&lt;br/&gt;
&amp;gt; &amp;gt; complicated?&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; Certainly I&apos;d volunteer to put the top implementation in to the util&lt;br/&gt;
&amp;gt; &amp;gt; package and submit them for builtin&apos;s, but the latter syntactic candies&lt;br/&gt;
&amp;gt; &amp;gt; seems more natural..&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; On Tue, Apr 20, 2010 at 5:24 PM, Alan Gates &amp;lt;gates@yahoo-inc.com&amp;gt; wrote:&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; The grouping package in piggybank is left over from back when Pig&lt;br/&gt;
&amp;gt; allowed&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; users to define grouping functions (0.1).  Functions like these should&lt;br/&gt;
&amp;gt; go in&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; evaluation.util.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; However, I&apos;d consider putting these in builtin (in main Pig) instead.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;  These are things everyone asks for and they seem like a reasonable&lt;br/&gt;
&amp;gt; addition&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; to the core engine.  This will be more of a burden to write (as we&apos;ll&lt;br/&gt;
&amp;gt; hold&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; them to a higher standard) but of more use to people as well.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; Alan.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt; On Apr 19, 2010, at 12:53 PM, hc busy wrote:&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;  Some times I wonder... I mean, somebody went to the trouble of making a&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; path&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; called&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; org.apache.pig.piggybank.grouping&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; (where it seems like this code belong), but didn&apos;t check in any java&lt;br/&gt;
&amp;gt; code&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; into that package.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; Any comment about where to put this kind of utility classes?&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; On Mon, Apr 19, 2010 at 12:07 PM, Andrey S &amp;lt;octo47@gmail.com&amp;gt; wrote:&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;  2010/4/19 hc busy &amp;lt;hc.busy@gmail.com&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  That&apos;s just the way it is right now, you can&apos;t make bags or tuples&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; directly... Maybe we should have some UDF&apos;s in piggybank for these:&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; toBag()&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; toTuple(); --which is kinda like exec(Tuple in)&lt;/p&gt;
{return in;}
&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; TupleToBag(); --some times you need it this way for some reason.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;  Ok. I place my current code here, may be later I make a patch (if&lt;br/&gt;
&amp;gt; such&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; implementation is acceptable of course).&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.EvalFunc;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.data.BagFactory;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.data.DataBag;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.data.Tuple;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.data.TupleFactory;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import java.io.IOException;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; /**&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; * Convert any sequence of fields to bag with specified count of&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; fields&amp;lt;br&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; * Schema: count:int, fld1 &lt;span class=&quot;error&quot;&gt;&amp;#91;, fld2, fld3, fld4... &amp;#93;&lt;/span&gt;.&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; * Output: count=2, then &lt;/p&gt;
{ (fld1, fld2) , (fld3, fld4) ... }
&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; *&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; * @author astepachev&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; */&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; public class ToBag extends EvalFunc&amp;lt;DataBag&amp;gt; {&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  public BagFactory bagFactory;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  public TupleFactory tupleFactory;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  public ToBag() &lt;/p&gt;
{
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      bagFactory = BagFactory.getInstance();
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      tupleFactory = TupleFactory.getInstance();
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  }
&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  @Override&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  public DataBag exec(Tuple input) throws IOException {&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      if (input.isNull())&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;          return null;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      final DataBag bag = bagFactory.newDefaultBag();&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      final Integer couter = (Integer) input.get(0);&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      if (couter == null)&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;          return null;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      Tuple tuple = tupleFactory.newTuple();&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      for (int i = 0; i &amp;lt; input.size() - 1; i++) {&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;          if (i % couter == 0) &lt;/p&gt;
{
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;              tuple = tupleFactory.newTuple();
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;              bag.add(tuple);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;          }
&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;          tuple.append(input.get(i + 1));&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      }&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      return bag;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  }&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; }&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.ExecType;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.apache.pig.PigServer;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.junit.Before;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import org.junit.Test;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import java.io.IOException;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import java.net.URISyntaxException;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import java.net.URL;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; import static org.junit.Assert.assertTrue;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; /**&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; * @author astepachev&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; */&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; public class ToBagTest {&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  PigServer pigServer;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  URL inputTxt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  @Before&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  public void init() throws IOException, URISyntaxException &lt;/p&gt;
{
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      pigServer = new PigServer(ExecType.LOCAL);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      inputTxt =
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; this.getClass().getResource(&quot;bagTest.txt&quot;).toURI().toURL();
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  }
&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  @Test&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  public void testSimple() throws IOException &lt;/p&gt;
{
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      pigServer.registerQuery(&quot;a = load &apos;&quot; + inputTxt.toExternalForm()
&amp;gt; +
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; &quot;&apos; using PigStorage(&apos;,&apos;) &quot; +
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;              &quot;as (id:int, a:chararray, b:chararray, c:chararray,
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; d:chararray);&quot;);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      pigServer.registerQuery(&quot;last = foreach a generate flatten(&quot; +
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; ToBag.class.getName() + &quot;(2, id, a, id, b, id, c));&quot;);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      pigServer.deleteFile(&quot;target/pigtest/func1.txt&quot;);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      pigServer.store(&quot;last&quot;, &quot;target/pigtest/func1.txt&quot;);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;      assertTrue(pigServer.fileSize(&quot;target/pigtest/func1.txt&quot;) &amp;gt; 0);
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;  }
&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt; }&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12462608">PIG-1386</key>
            <summary>UDF to extend functionalities of MaxTupleBy1stField</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hcbusy">hc busy</assignee>
                                    <reporter username="hcbusy">hc busy</reporter>
                        <labels>
                            <label>ExtremalTupleByNthField</label>
                            <label>MaxTupleBy1stField</label>
                            <label>algorithm</label>
                            <label>comparable</label>
                            <label>one-pass</label>
                            <label>udf</label>
                    </labels>
                <created>Wed, 21 Apr 2010 06:11:29 +0100</created>
                <updated>Fri, 17 Dec 2010 22:44:10 +0000</updated>
                            <resolved>Thu, 5 Aug 2010 01:59:10 +0100</resolved>
                                    <version>0.6.0</version>
                                    <fixVersion>0.8.0</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12859206" author="hcbusy" created="Wed, 21 Apr 2010 06:28:03 +0100"  >&lt;p&gt;Here&apos;s a first stab.&lt;/p&gt;</comment>
                            <comment id="12859207" author="hcbusy" created="Wed, 21 Apr 2010 06:29:32 +0100"  >&lt;p&gt;The patch&lt;/p&gt;</comment>
                            <comment id="12859291" author="hadoopqa" created="Wed, 21 Apr 2010 11:37:48 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12442396/PIG-1386-trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12442396/PIG-1386-trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 935968.&lt;/p&gt;

&lt;p&gt;    -1 @author.  The patch appears to contain 1 @author tags which the Pig community has agreed to not allow in code contributions.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 537 release audit warnings (more than the trunk&apos;s current 535 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/297/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12860065" author="hcbusy" created="Fri, 23 Apr 2010 00:34:06 +0100"  >&lt;p&gt;checked to be sure the unittest builds and runs.&lt;/p&gt;</comment>
                            <comment id="12860068" author="hcbusy" created="Fri, 23 Apr 2010 00:35:38 +0100"  >&lt;p&gt;resubmitting patch for the build system to check.&lt;/p&gt;</comment>
                            <comment id="12860104" author="hcbusy" created="Fri, 23 Apr 2010 03:38:03 +0100"  >&lt;p&gt;I&apos;m having trouble writing this UDF because of the bug similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1303&quot; title=&quot;unable to set outgoing format for org.apache.pig.piggybank.evaluation.util.apachelogparser.DateExtractor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1303&quot;&gt;&lt;del&gt;PIG-1303&lt;/del&gt;&lt;/a&gt;; Here&apos;s my comment to that ticket below. It seems that by doing this, it allows me to pass on the constructor parameters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Okay, so, here&apos;s a thought:&lt;br/&gt;
I&apos;m kind of stuck writing the initial/intermed/Final methods for an algebraic EvalFunc that has constructor parameters because I couldn&apos;t pass the parameters in.&lt;/p&gt;

&lt;p&gt;A suggestion is to do this (without being incompatible with previous versions)&lt;/p&gt;

&lt;p&gt;Alter EvalFunc&apos;s profile so that&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class EvalFunc&amp;lt;T&amp;gt;  {

   &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; handleChildConstructorParameters(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;... childConstructor){
      &lt;span class=&quot;code-comment&quot;&gt;// by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; nothing.
&lt;/span&gt;   }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; EvalFunc(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;... constructorParameters){
        handleChildConstructorParameters(constructorParameters);
        ... then &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; everything &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; it used to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;.
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The reason why this is necessary is because I&apos;ll need to overrite handleChildConstructorParameters in my Algebraic EvalFunc to do some things before the rest of EvalFunc()&apos;s constructor continues. This will help fix this date format problem for Algebraic evalfunc&apos;s.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="12860108" author="hcbusy" created="Fri, 23 Apr 2010 04:06:43 +0100"  >&lt;p&gt;a92218b0c641363439af8f2d9e5ecbc0&lt;/p&gt;</comment>
                            <comment id="12860121" author="hadoopqa" created="Fri, 23 Apr 2010 05:47:38 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12442629/PIG-1386-trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12442629/PIG-1386-trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 937095.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 530 release audit warnings (more than the trunk&apos;s current 528 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/301/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12860325" author="hcbusy" created="Fri, 23 Apr 2010 18:41:44 +0100"  >&lt;p&gt;oops, posted to the wrong ticket:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hmm, okay, so let me shorten my problem. Basically the functions getInitial(), getIntermed(), and getFinal() in my Algebraic class doesn&apos;t have access to the constructor parameters. The reason is this. in Java, the super() constructor can only be called as the very first thing that the deriving class&apos;s constructor does, so my udfs has constructors that look like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ExtremalTupleByNthField(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fieldIndexString, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; order) {
		&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;();
                parameters = &lt;span class=&quot;code-quote&quot;&gt;&quot;(&apos;&quot;&lt;/span&gt;+fieldIndexString+&lt;span class=&quot;code-quote&quot;&gt;&quot;&apos;,&apos;&quot;&lt;/span&gt;+order+&lt;span class=&quot;code-quote&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;
         }
       @Override
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getInitial() {
		&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HelperClass.class.getName()+parameters;
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But the problem is EvalFunc() constructor initializes the EvalFunc as returned by getInitial() to type check. When it does this, it finds that my getInitial() returns something incomplete because the &quot;parameters&quot; member variable hasn&apos;t been initialized yet. This is a pretty mundane problem with java programs and the way to fix it is what I&apos;ve submitted in the patch calling an overridden method in the super()&apos;s constructor.&lt;/p&gt;

&lt;p&gt;I mean, I don&apos;t see any other way to do this, but I&apos;d be willing to work on another implementation if you can suggest one?&lt;/p&gt;

&lt;/blockquote&gt;</comment>
                            <comment id="12860332" author="hcbusy" created="Fri, 23 Apr 2010 18:59:52 +0100"  >&lt;p&gt;25ce97367cadfd2ea4be379c6f5c351d&lt;/p&gt;

&lt;p&gt;Clean up documentation and refactor to unify parsing of constructor arguments in the two classes.&lt;/p&gt;</comment>
                            <comment id="12860490" author="hcbusy" created="Sat, 24 Apr 2010 07:34:24 +0100"  >&lt;p&gt;Okay, here&apos;s an alternative. What if we did this instead:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class EvalFunc{
...
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; parameters=&quot;&quot;;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; EvalFunc(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;... constructorParameters){
        
    	StringBuilder sb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringBuilder();
    	&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(constructorParameters!=&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; constructorParameters.length&amp;gt;0){
    		&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; o:constructorParameters){
    		sb.append(&apos;,&apos;);
    		sb.append(&apos;\&apos;&apos;);
    		sb.append(o.toString());
    		sb.append(&apos;\&apos;&apos;);}
    		parameters=&lt;span class=&quot;code-quote&quot;&gt;&quot;(&quot;&lt;/span&gt;+sb.substring(1)+&lt;span class=&quot;code-quote&quot;&gt;&quot;)&quot;&lt;/span&gt;;
    	}
        ... &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt; of evalfunc constructor.
&lt;/span&gt;...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and my getInitial is implemented thusly:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	@Override
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getInitial() {
		&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HelperClass.class.getName() + parameters;
	}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12860491" author="hcbusy" created="Sat, 24 Apr 2010 07:35:31 +0100"  >&lt;p&gt;163812d67299dd4b44470c854c80f2a8&lt;/p&gt;

&lt;p&gt;redo without the addition of the helper function.&lt;/p&gt;</comment>
                            <comment id="12861250" author="hcbusy" created="Tue, 27 Apr 2010 06:38:21 +0100"  >&lt;p&gt;1873fb8d75f7362df343615f623a7390&lt;/p&gt;

&lt;p&gt;Added documentation, added a bunch of unit tests to test the functionalities that the documentation claims to have. cleaned up to revert to not requiring change to EvalFunc&apos;s constructor. Added ASF license text.&lt;/p&gt;</comment>
                            <comment id="12861457" author="hcbusy" created="Tue, 27 Apr 2010 18:10:54 +0100"  >&lt;p&gt;e503949c4f5f2667657ee02872aff5ce&lt;/p&gt;

&lt;p&gt;Additional documentation and examples.&lt;/p&gt;</comment>
                            <comment id="12861490" author="hcbusy" created="Tue, 27 Apr 2010 19:44:56 +0100"  >&lt;p&gt;da673ab2d584faf903e8b49b63a03ade&lt;/p&gt;

&lt;p&gt;spell check the documentation&lt;/p&gt;</comment>
                            <comment id="12861544" author="hadoopqa" created="Tue, 27 Apr 2010 22:14:26 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12442926/PIG-1386-trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12442926/PIG-1386-trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 937570.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 537 release audit warnings (more than the trunk&apos;s current 535 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/305/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12861588" author="hadoopqa" created="Tue, 27 Apr 2010 23:26:04 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12442973/PIG-1386-trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12442973/PIG-1386-trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 937570.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/303/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/303/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/303/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/303/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/303/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/303/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12894720" author="olgan" created="Mon, 2 Aug 2010 22:34:44 +0100"  >&lt;p&gt;Is this ready to be committed?&lt;/p&gt;</comment>
                            <comment id="12895498" author="olgan" created="Thu, 5 Aug 2010 01:59:10 +0100"  >&lt;p&gt;patch committed. Thanks hc busy!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12459401">PIG-1303</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12442986" name="PIG-1386-trunk.patch" size="18962" author="hcbusy" created="Tue, 27 Apr 2010 19:44:56 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Apr 2010 10:37:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164879</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyapuv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96500</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>