<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:59:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2541/PIG-2541.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2541] Automatic record provenance (source tagging) for PigStorage</title>
                <link>https://issues.apache.org/jira/browse/PIG-2541</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;There are a lot of interests in knowing where the data comes from when loading from a directory (or a set of directories). One can do it manually (see &lt;a href=&quot;https://cwiki.apache.org/confluence/display/PIG/FAQ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/PIG/FAQ&lt;/a&gt;). But it will be more convenient for users if we implement this in the PigStorage with a command line option (e.g., pig.source.tagging=true/false) to turn it on/off. By default it will be off.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12542986">PIG-2541</key>
            <summary>Automatic record provenance (source tagging) for PigStorage</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="prkommireddi">Prashant Kommireddi</assignee>
                                    <reporter username="rding">Richard Ding</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Feb 2012 02:24:14 +0000</created>
                <updated>Thu, 26 Apr 2012 21:32:45 +0100</updated>
                            <resolved>Thu, 1 Mar 2012 03:03:45 +0000</resolved>
                                    <version>0.9.1</version>
                                    <fixVersion>0.10.0</fixVersion>
                    <fixVersion>0.11</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13210004" author="dvryaboy" created="Fri, 17 Feb 2012 02:46:20 +0000"  >&lt;p&gt;Good call.&lt;br/&gt;
If you are working on implementing this, can I ask that instead of appending to a tuple, you wrap the normal pigStorage tuple with one that adds the column on demand? &lt;br/&gt;
That&apos;ll make potential tuple memory optimizations that don&apos;t deal well with strings work (not to mention that you can keep only one copy of each source tag in ram, instead of keeping one for each tuple).&lt;/p&gt;</comment>
                            <comment id="13210008" author="prkommireddi" created="Fri, 17 Feb 2012 02:58:48 +0000"  >&lt;p&gt;This would be a nice add. The option could be provided similar to current options (schema, noschema) &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2143&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2143&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13210011" author="prkommireddi" created="Fri, 17 Feb 2012 03:02:01 +0000"  >&lt;p&gt;Richard, I started working on this but I can stop if you would like to take this up &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13210017" author="ashutoshc" created="Fri, 17 Feb 2012 03:09:09 +0000"  >&lt;p&gt;Isn&apos;t this one of the usecases for penny? Its in contrib/penny&lt;/p&gt;</comment>
                            <comment id="13210044" author="prkommireddi" created="Fri, 17 Feb 2012 04:14:24 +0000"  >&lt;p&gt;Initial patch (need to add test cases). Regression test with TestPigStorage is fine. Also, I added the final component of Path to each tuple. Does not make much sense to append cluster (HDFS location).&lt;/p&gt;</comment>
                            <comment id="13210058" author="dvryaboy" created="Fri, 17 Feb 2012 05:05:14 +0000"  >&lt;p&gt;Prashant,&lt;br/&gt;
Nice start!&lt;/p&gt;

&lt;p&gt;I think this needs more work to make it work with cases when people use a loaded schema (the reported schema will be wrong). &lt;/p&gt;

&lt;p&gt;Is appending to the end the right thing to do? Putting it in front ensures we know where to expect it. Without a schema, PigStorage can produce variable-length tuples depending on the number of entries it sees in a row. That will make source tag&apos;s ordinal float about.&lt;/p&gt;

&lt;p&gt;Minor code/style comments: please make static final vars all caps. Also please make sure the tabulation is strictly 4 spaces (a few lines looks off &amp;#8211; tabs?). Just set your IDE settings to enforce this.&lt;/p&gt;

&lt;p&gt;Also the final patch should include the new parameters in Javadoc, not just in populateValidOptions().&lt;/p&gt;

&lt;p&gt;D&lt;/p&gt;
</comment>
                            <comment id="13210090" author="prkommireddi" created="Fri, 17 Feb 2012 06:06:53 +0000"  >&lt;p&gt;Thanks Dmitriy for the review.&lt;/p&gt;

&lt;p&gt;1. I will look at the case of loaded schema. I wonder how regression passed, may be I should take a closer look at the test cases.&lt;/p&gt;

&lt;p&gt;2. Great point, I had the exact same thought while coding it but decided against adding path to the front. Reason being with this feature we would want users to not make changes to existing scripts other than adding this capability. For any scripts written with positional references; adding path to the front would involve shifting all those references. &lt;/p&gt;

&lt;p&gt;May be add another feature (incorporate into Pig syntax or have a UDF, GETLASTCOLUMN() ) to be able to parse the last column from a Tuple? That actually makes for a nice feature which can be used in cases schema is unknown/variable.&lt;/p&gt;

&lt;p&gt;3. Will make the code style and Javadoc changes.&lt;/p&gt;</comment>
                            <comment id="13210630" author="prkommireddi" created="Fri, 17 Feb 2012 22:45:35 +0000"  >&lt;p&gt;Dmitriy, &lt;/p&gt;

&lt;p&gt;I was thinking some more about storing schema. In what case would schema for &quot;source path&quot; need to be registered under the hood? I would assume a user will always need to reference &quot;source path&quot; before using it, in which case storing schema would occur as is done currently?&lt;/p&gt;</comment>
                            <comment id="13211147" author="dvryaboy" created="Sat, 18 Feb 2012 22:30:51 +0000"  >&lt;p&gt;Prashant, I am thinking of the case when a loaded schema is something like (a:int, b:int) but, due to loading with &quot;using PigStorage(&apos;\t&apos;, &apos;-useSchema -pig.source.tagging=true&apos;), the schema expected by the user is (a:int, b:int, source_tag:chararray). Since the loader doesn&apos;t report this modified schema, the user won&apos;t be able to access the new field. I suspect regression wasn&apos;t caught because you didn&apos;t test both options combined, and only used them separately.&lt;/p&gt;

&lt;p&gt;This should &quot;just work&quot; on the storage, as opposed to loader, side, I don&apos;t think there&apos;s a problem there as long as the loader side is fixed.&lt;/p&gt;

&lt;p&gt;Regarding position of the tag &amp;#8211; I really think putting it in the beginning is better. As I described above, putting it on the end leads to straight-up unpredictable results in some circumstances; avoiding that situation takes precedence (in my mind) over convenience of modifying existing scripts (which will need to be modified anyway to take advantage of this.. so in for a penny, in for a pound).&lt;/p&gt;</comment>
                            <comment id="13211174" author="prkommireddi" created="Sun, 19 Feb 2012 01:11:00 +0000"  >&lt;p&gt;This gets tricky now (if I understand correctly), consider the sequence (please note the following is keeping in mind the current way of appending source_tag to end)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1. A = load &apos;input&apos; using PigStorage(&apos;\t&apos;, &apos;-tagsource&apos;);    &lt;span class=&quot;code-comment&quot;&gt;// schema is undefined at &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; point
&lt;/span&gt;
2. B = FOREACH A GENERATE (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)$0 as col1, (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)$1 as col2, (chararray)$2 as source_tag; &lt;span class=&quot;code-comment&quot;&gt;// schema: (col1:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, col2:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, source_tag:chararray)
&lt;/span&gt;
3. C = GROUP B BY source_tag;

.
.
.
.

n. STORE N INTO &apos;intermediate&apos; using PigStorage(&apos;\t&apos;, &apos;-schema&apos;);  &lt;span class=&quot;code-comment&quot;&gt;//Schema, lets say: (source_tag: chararray, cnt: &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, the user wants to read &apos;intermediate&apos; using schema, and also know the (new) source path(s). &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--Mentioning -schema is not required here, included just &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; clarity.
A = load &apos;intermediate&apos; using PigStorage(&apos;\t&apos;, &apos;-schema -tagsource&apos;);  &lt;span class=&quot;code-comment&quot;&gt;//Schema: (source_tag:chararray, cnt:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, source_tag:chararray)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There would be a conflict in auto-loading &apos;source_tag&apos; in the above case. I think de-coupling &apos;schema&apos; from &apos;tagsource&apos; would be a nice alternative, as the input path is not part of &quot;real data&quot;. It is a derived field which could be treated differently from actual data contained within input files. So the user always expects the right schema for first n-1 columns, with nth column being the source_tag for which schema does not really need to be auto-loaded? Similar to how it would work if one had extended PigStorage to implement source tagging.&lt;/p&gt;

&lt;p&gt;I completely agree with you on the pain of appending source_tag to the end, its less predictable than at the start. However, things would get complicated in terms of maintainence when users want to switch between using and not using source tagging. It would be great to minimize reference repositioning changes for production jobs (error-prone, might result in large number of script changes if fields are not referenced via an alias). &lt;/p&gt;

&lt;p&gt;Lastly, I am leaning towards the &apos;append&apos; approach but fine with either one. We just need to make sure this is an easy to use/adopt feature.&lt;/p&gt;</comment>
                            <comment id="13212305" author="rding" created="Tue, 21 Feb 2012 02:26:32 +0000"  >&lt;p&gt;Prashant,&lt;/p&gt;

&lt;p&gt;Thanks for working on this. &lt;/p&gt;

&lt;p&gt;Here are a couple of things we need:&lt;/p&gt;

&lt;p&gt;1. Make sure that the source tag is in the loader&apos;s output schema &lt;br/&gt;
2. Avoid data bloat by not simply appending the paths &lt;/p&gt;

&lt;p&gt;-Richard &lt;/p&gt;</comment>
                            <comment id="13212941" author="prkommireddi" created="Tue, 21 Feb 2012 20:51:35 +0000"  >&lt;p&gt;Hi Richard,&lt;/p&gt;

&lt;p&gt;What do you mean by &quot;Avoid data bloat by not simply appending the paths&quot; ?&lt;/p&gt;

&lt;p&gt;Dmitriy, what do you think about my comments above? &lt;/p&gt;</comment>
                            <comment id="13212964" author="dvryaboy" created="Tue, 21 Feb 2012 21:23:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;So the user always expects the right schema for first n-1 columns, with nth column being the source_tag for which schema does not really need to be auto-loaded?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think it works that way. You can&apos;t access a field that&apos;s not declared in a non-null schema.&lt;/p&gt;</comment>
                            <comment id="13213084" author="prkommireddi" created="Tue, 21 Feb 2012 22:58:44 +0000"  >&lt;p&gt;In which case I will plan on adding source tag at the start. Auto-loading &apos;source_tag&apos; when schema is needed can be done, however we need to think about the case when there might be a conflict between auto-loaded &apos;source-tag&apos; and an already available &apos;source_tag&apos; in the schema.&lt;/p&gt;

&lt;p&gt;One way is to look for source_tag in schema and if present append an id to the auto loaded source_tag, something like &apos;source_tag_001&apos;. However, this is not ideal performance-wise, and will cause confusion.&lt;/p&gt;</comment>
                            <comment id="13214181" author="daijy" created="Thu, 23 Feb 2012 01:36:14 +0000"  >&lt;p&gt;Here are my thoughts:&lt;br/&gt;
1. As Dmitriy said, we need to include this column in getSchema.&lt;br/&gt;
2. Hive name this column INPUT_&lt;em&gt;FILE&lt;/em&gt;_NAME, we can follow this convention, no need to invent something new.&lt;br/&gt;
3. Usually user don&apos;t care about the input file name for intermediate file, name conflict should be rare. I would like to fail out when this happen to make the patch simpler(believe parser already do the name conflict check).&lt;/p&gt;</comment>
                            <comment id="13215008" author="prkommireddi" created="Thu, 23 Feb 2012 20:17:29 +0000"  >&lt;p&gt;Thanks Daniel. I have a patch ready as per the above discussion.&lt;/p&gt;</comment>
                            <comment id="13215872" author="prkommireddi" created="Fri, 24 Feb 2012 20:15:52 +0000"  >&lt;p&gt;Can any of the reviewers please take a look at the patch when possible.&lt;/p&gt;</comment>
                            <comment id="13215880" author="daijy" created="Fri, 24 Feb 2012 20:25:30 +0000"  >&lt;p&gt;I will take a look today or tomorrow.&lt;/p&gt;</comment>
                            <comment id="13217078" author="daijy" created="Mon, 27 Feb 2012 06:57:17 +0000"  >&lt;p&gt;Looks good. We do need test cases.&lt;/p&gt;</comment>
                            <comment id="13217124" author="prkommireddi" created="Mon, 27 Feb 2012 09:15:39 +0000"  >&lt;p&gt;Thanks Daniel, I will put up a patch with test cases soon.&lt;/p&gt;</comment>
                            <comment id="13217774" author="prkommireddi" created="Tue, 28 Feb 2012 01:02:39 +0000"  >&lt;p&gt;Daniel, I have attached test cases on this patch. &lt;/p&gt;</comment>
                            <comment id="13219758" author="daijy" created="Thu, 1 Mar 2012 03:03:46 +0000"  >&lt;p&gt;Unit tests pass. test-patch:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 3 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 533 release audit warnings (more than the trunk&apos;s current 530 warnings).&lt;/p&gt;

&lt;p&gt;javac and release audit warning is unrelated. &lt;/p&gt;

&lt;p&gt;Patch committed to trunk, thanks Prashant!&lt;/p&gt;</comment>
                            <comment id="13249706" author="prkommireddi" created="Mon, 9 Apr 2012 07:54:00 +0100"  >&lt;p&gt;Daniel, can we include this in 0.10 release? I am trying not to have a custom build just for this patch if it can be a part of 0.10 altogether. This is a really useful feature and would be great to have this out for users sooner rather than later.&lt;/p&gt;</comment>
                            <comment id="13249714" author="daijy" created="Mon, 9 Apr 2012 08:20:11 +0100"  >&lt;p&gt;Committed to 0.10 branch as per requested by Prashant. Also commit document update.&lt;/p&gt;</comment>
                            <comment id="13249728" author="prkommireddi" created="Mon, 9 Apr 2012 09:09:56 +0100"  >&lt;p&gt;Thanks Daniel!&lt;/p&gt;</comment>
                            <comment id="13249729" author="prkommireddi" created="Mon, 9 Apr 2012 09:10:05 +0100"  >&lt;p&gt;Thanks Daniel!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12521916" name="PIG-2541.doc.patch" size="1405" author="daijy" created="Mon, 9 Apr 2012 08:20:10 +0100"/>
                            <attachment id="12514946" name="PIG-2541.patch" size="2588" author="prkommireddi" created="Fri, 17 Feb 2012 04:14:23 +0000"/>
                            <attachment id="12515799" name="PIG-2541_2.patch" size="6996" author="prkommireddi" created="Thu, 23 Feb 2012 20:17:29 +0000"/>
                            <attachment id="12516248" name="PIG-2541_3.patch" size="10802" author="prkommireddi" created="Tue, 28 Feb 2012 01:02:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 17 Feb 2012 02:46:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>228272</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaxpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97771</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>We add a new option -tagsource to PigStorage. With this flag, we can get the INPUT_FILE_NAME as the first column of the output data. eg:&lt;br/&gt;
&lt;br/&gt;
a = load &amp;#39;1.txt&amp;#39; using PigStorage(&amp;#39;\t&amp;#39;, &amp;#39;-tagsource&amp;#39;);</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>