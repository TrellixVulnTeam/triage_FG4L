<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:01:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2970/PIG-2970.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2970] Nested foreach getting incorrect schema when having unrelated inner query</title>
                <link>https://issues.apache.org/jira/browse/PIG-2970</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;While looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2968&quot; title=&quot;ColumnMapKeyPrune fails to prune a subtree inside foreach&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2968&quot;&gt;&lt;del&gt;PIG-2968&lt;/del&gt;&lt;/a&gt;, hit a weird error message.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ cat -n test/foreach2.pig
     1  daily = load &apos;nyse&apos; as (exchange, symbol);
     2  grpd = group daily by exchange;
     3  unique = foreach grpd {
     4          sym = daily.symbol;
     5          uniq_sym = distinct sym;
     6          --ignoring uniq_sym result
     7          generate group, daily;
     8  };
     9  describe unique;
    10  zzz = foreach unique generate group;
    11  explain zzz;

% pig -x local -t ColumnMapKeyPrune test/foreach2.pig
...
unique: {symbol: bytearray}

2012-10-12 16:55:44,226 [main] ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1025: 
&amp;lt;file test/foreach2.pig, line 10, column 30&amp;gt; Invalid field projection. Projected field [group] does not exist in schema: symbol:bytearray.
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment></environment>
        <key id="12611632">PIG-2970</key>
            <summary>Nested foreach getting incorrect schema when having unrelated inner query</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="knoguchi">Koji Noguchi</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Oct 2012 21:58:03 +0100</created>
                <updated>Wed, 19 Mar 2014 18:44:11 +0000</updated>
                            <resolved>Thu, 2 May 2013 01:46:08 +0100</resolved>
                                    <version>0.10.0</version>
                                    <fixVersion>0.12.0</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13475418" author="knoguchi" created="Sat, 13 Oct 2012 00:09:18 +0100"  >&lt;p&gt;Parser assumes foreach&apos;s innerPlan has a single generate op as sink.  When this fails, it is returning an incorrect schema.  Attaching a patch that moves all the unrelated ops to LOGenerate.&lt;/p&gt;

&lt;p&gt;My understanding of pig is weak.  Appreciate if someone can take a careful look. Thanks.&lt;/p&gt;</comment>
                            <comment id="13475423" author="azaroth" created="Sat, 13 Oct 2012 00:13:59 +0100"  >&lt;p&gt;Haven&apos;t had time to look at the patch, but I guess it is related to &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2119&quot; title=&quot;DuplicateForEachColumnRewrite makes assumptions about the position of LOGGenerate in the plan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2119&quot;&gt;&lt;del&gt;PIG-2119&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I thought we had solved it though.&lt;/p&gt;</comment>
                            <comment id="13487965" author="rohini" created="Wed, 31 Oct 2012 17:06:16 +0000"  >&lt;p&gt;Gianmarco,&lt;br/&gt;
 Thanks for the pointer. They are related. The plan for your example in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2219&quot; title=&quot;Pig tests fail if ${user.home}/pigtest/conf does not already exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2219&quot;&gt;&lt;del&gt;PIG-2219&lt;/del&gt;&lt;/a&gt; gets generated as &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;a = load &apos;b.txt&apos; AS (id:chararray, num:int);
b = group a by id;
c = foreach b { 
  d = order a by num DESC;
  n = COUNT(a);
  e = limit d 1;
  generate n;
}

|---c: (Name: LOForEach Schema: id#1:chararray,num#2:int)
    |   |
    |   e: (Name: LOLimit Schema: id#1:chararray,num#2:int)
    |   |
    |   |---d: (Name: LOSort Schema: id#1:chararray,num#2:int)
    |       |   |
    |       |   num:(Name: Project Type: int Uid: 2 Input: 0 Column: 1)
    |       |
    |       |---a: (Name: LOInnerLoad[1] Schema: id#1:chararray,num#2:int)
    |   
    |   (Name: LOGenerate[false] Schema: #6:long)
    |   |   |
    |   |   (Name: UserFunc(org.apache.pig.builtin.COUNT) Type: long Uid: 6)
    |   |   |
    |   |   |---a:(Name: Project Type: bag Uid: 3 Input: 0 Column: (*))
    |   |
    |   |---a: (Name: LOInnerLoad[1] Schema: id#1:chararray,num#2:int)

For the query in this example:
|---c: (Name: LOForEach Schema: v1#2:bytearray)
        |   |
        |   e: (Name: LODistinct Schema: v1#2:bytearray)
        |   |
        |   |---d: (Name: LOForEach Schema: v1#2:bytearray)
        |       |   |
        |       |   (Name: LOGenerate[false] Schema: v1#2:bytearray)
        |       |   |   |
        |       |   |   v1:(Name: Project Type: bytearray Uid: 2 Input: 0 Column: (*))
        |       |   |
        |       |   |---(Name: LOInnerLoad[1] Schema: v1#2:bytearray)
        |       |
        |       |---a: (Name: LOInnerLoad[1] Schema: id#1:bytearray,v1#2:bytearray)
        |   
        |   (Name: LOGenerate[false,false] Schema: group#1:bytearray,a#3:bag{#5:tuple(id#1:bytearray,v1#2:bytearray)})
        |   |   |
        |   |   group:(Name: Project Type: bytearray Uid: 1 Input: 0 Column: (*))
        |   |   |
        |   |   a:(Name: Project Type: bag Uid: 3 Input: 1 Column: (*))
        |   |
        |   |---(Name: LOInnerLoad[0] Schema: group#1:bytearray)
        |   |
        |   |---a: (Name: LOInnerLoad[1] Schema: id#1:bytearray,v1#2:bytearray)


&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem is Schema for ForEach gets set based on the first leaf. In your case, Schema for both the leaves contained the same required fields and so there was no error. In Koji&apos;s case the schema is different for both the leaves and hence the error. &lt;/p&gt;

&lt;p&gt;Koji,&lt;br/&gt;
   Connecting both the separate nodes just to get the schema correct changes the schema in such a way that it is not dangling anymore. My take on this is that we should move the DanglingNestedNodeRemover (which was wrote to handle this scenario) from HExecutionEngine to LogicalPlanBuilder.buildForeachOp() before the SchemaResetter is called through expandAndResetVisitor, so that the dangling node is removed during construction itself and the correct schema is set by SchemaResetter. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13488197" author="azaroth" created="Wed, 31 Oct 2012 20:29:07 +0000"  >&lt;p&gt;If it works and does not interfere with other parts of the plan building, I think this is a good approach.&lt;/p&gt;</comment>
                            <comment id="13489491" author="knoguchi" created="Fri, 2 Nov 2012 15:40:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;(from &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2119&quot; title=&quot;DuplicateForEachColumnRewrite makes assumptions about the position of LOGGenerate in the plan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2119&quot;&gt;&lt;del&gt;PIG-2119&lt;/del&gt;&lt;/a&gt;) LOGenerate is the only sink in nested plan. This is one of the basic assumption we made throughout logical plan&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can we revisit this assumption to &apos;sink in nested plan includes a single LOGenerate and optional dangling nodes&apos;?  Attaching a patch that replaces foreach.getInnerPlan().getSinks().get(0) to foreach.findGenearate() that I added.  Would something like this work?&lt;/p&gt;

</comment>
                            <comment id="13489562" author="rohini" created="Fri, 2 Nov 2012 17:24:43 +0000"  >&lt;p&gt;Koji,&lt;br/&gt;
   The idea seems to be to keep the dangling nodes intact in the plan and do a search for LOGenerate node in LOForeach every time we are trying to get it from LOForEach. I don&apos;t prefer this approach much. If something is not used, it is better to discard it instead of keeping it and stepping around it all the time. The approach might work but not sure what it achieves or gives any benefit. Also it is not efficient. I would prefer to stay with the original assumption of LOGenerate is the only sink in nested plan. It keeps the plan simple, clean and sticks to the intent of the execution. Can you give more info on why you would like to keep the dangling nodes in the plan?&lt;/p&gt;</comment>
                            <comment id="13489578" author="knoguchi" created="Fri, 2 Nov 2012 17:42:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can you give more info on why you would like to keep the dangling nodes in the plan?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Even if we move DanglingNestedNodeRemover to earlier stage as suggested, isn&apos;t there always a risk of some other optimization rewrite creating another danglingnested nodes?  Instead of getting rid of them every time it pops up, I thought we can clean them up later in code for optimization purposes (and not for correctness).&lt;/p&gt;


</comment>
                            <comment id="13489586" author="rohini" created="Fri, 2 Nov 2012 17:46:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;Even if we move DanglingNestedNodeRemover to earlier stage as suggested, isn&apos;t there always a risk of some other optimization rewrite creating another danglingnested nodes&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;   If an optimization rewrite is causing a dangling node then it is doing something wrong. We should fix that to not create dangling nodes instead of having another step to remove it later.  &lt;/p&gt;</comment>
                            <comment id="13489602" author="knoguchi" created="Fri, 2 Nov 2012 18:03:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;for optimization purposes (and not for correctness).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I guess I&apos;m wanting to treat DanglingNestedNodeRemover as equivalent of ColumnMapKeyPrune such that it&apos;s turned on for performance purposes but could be turned off and still produces the same (correct) results. &lt;/p&gt;

&lt;p&gt;As for, &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;it is not efficient. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t think it adds any noticeable overhead and also it&apos;s only at compile time.&lt;/p&gt;</comment>
                            <comment id="13500981" author="snnn" created="Tue, 20 Nov 2012 10:39:53 +0000"  >&lt;p&gt;I encountered the same problem.&lt;br/&gt;
The test data file is a text file, each line contains a integer number.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;app_admin@test14 data&amp;#93;&lt;/span&gt;$ more /tmp/data/data1.txt &lt;br/&gt;
1&lt;br/&gt;
2&lt;br/&gt;
3&lt;br/&gt;
4&lt;br/&gt;
5&lt;br/&gt;
6&lt;/p&gt;

&lt;p&gt;The pig script:&lt;/p&gt;

&lt;p&gt;a =  load &apos;/tmp/data/data1.txt&apos; USING PigStorage()  as (id);&lt;br/&gt;
g = group a by id;&lt;br/&gt;
d = foreach g &lt;/p&gt;
{
b1 = FILTER a by id &amp;gt; 1;
b2 = FILTER a by id &amp;gt; 2;
b3 = FILTER a by id &amp;gt; 3;
GENERATE COUNT(b1.id) as c1 ,COUNT(b2.id) as c2 ;
}

&lt;p&gt;describe d;&lt;/p&gt;

&lt;p&gt;the result is : d: &lt;/p&gt;
{id: bytearray}</comment>
                            <comment id="13624126" author="daijy" created="Fri, 5 Apr 2013 23:16:38 +0100"  >&lt;p&gt;I feel the fix is too complex. &quot;explain&quot; can figure out the right schema but &quot;describe&quot; cannot. The difference is &quot;explain&quot; does the optimization but &quot;describe&quot; does not. We only need to bring the optimization to &quot;describe&quot; to fix the issue. I attach a temporary fix, but we only need &quot;optimization&quot; part of &quot;compilePp&quot;. So a better fix is separate &quot;compilePp&quot; and only do the optimization part before &quot;describe&quot;. I will attach a patch shortly.&lt;/p&gt;</comment>
                            <comment id="13624221" author="daijy" created="Sat, 6 Apr 2013 01:18:36 +0100"  >&lt;p&gt;Koji also point to me the query cannot run. That&apos;s because DanglingNestedNodeRemover runs too late. In &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2970&quot; title=&quot;Nested foreach getting incorrect schema when having unrelated inner query&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2970&quot;&gt;&lt;del&gt;PIG-2970&lt;/del&gt;&lt;/a&gt;-1.patch, I did the following:&lt;br/&gt;
1. Move DanglingNestedNodeRemover before all other logical plan adjustment&lt;br/&gt;
2. Make sure &quot;describe&quot; go through optimizor&lt;/p&gt;

&lt;p&gt;Most of the code is restructure. I separate HExecutionEngine.compile into three function unit. In &quot;describe&quot;, we only need the first unit.&lt;/p&gt;</comment>
                            <comment id="13624741" author="daijy" created="Sun, 7 Apr 2013 07:25:12 +0100"  >&lt;p&gt;Some unit test fail with &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2970&quot; title=&quot;Nested foreach getting incorrect schema when having unrelated inner query&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2970&quot;&gt;&lt;del&gt;PIG-2970&lt;/del&gt;&lt;/a&gt;-1.patch. Actually we cannot do optimization when do describe. Optimizor will move operators around and distort the schema. Attach a more conservative patch which move DanglingNestedNodeRemover earlier. All unit tests pass with &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2970&quot; title=&quot;Nested foreach getting incorrect schema when having unrelated inner query&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2970&quot;&gt;&lt;del&gt;PIG-2970&lt;/del&gt;&lt;/a&gt;-2.patch.&lt;/p&gt;</comment>
                            <comment id="13644834" author="rohini" created="Mon, 29 Apr 2013 21:34:11 +0100"  >&lt;p&gt;+1. &lt;/p&gt;</comment>
                            <comment id="13647142" author="daijy" created="Thu, 2 May 2013 01:46:08 +0100"  >&lt;p&gt;Patch committed to trunk.&lt;/p&gt;</comment>
                            <comment id="13939975" author="daijy" created="Tue, 18 Mar 2014 23:44:42 +0000"  >&lt;p&gt;When working on &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3807&quot; title=&quot;Pig creates wrong schema after dereferencing nested tuple fields with sorts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3807&quot;&gt;&lt;del&gt;PIG-3807&lt;/del&gt;&lt;/a&gt;, realize no matter how we push up DanglingNestedNodeRemover, we will still invoke getSchema in LogicalPlanBuilder. &lt;span class=&quot;error&quot;&gt;&amp;#91;~horaguchi&amp;#93;&lt;/span&gt; is right, we shall iterate inner plan sinks to find LOGenerate. This is applicable to LOForeach.getSchema(). After DanglingNestedNodeRemover, it is safe to assume LOGenerate is the only sink, so we don&apos;t need to sprawl the change to optimizer. I will bring some of Koji&apos;s change in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3807&quot; title=&quot;Pig creates wrong schema after dereferencing nested tuple fields with sorts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3807&quot;&gt;&lt;del&gt;PIG-3807&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13940661" author="knoguchi" created="Wed, 19 Mar 2014 16:52:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Koji Horaguchi is right, we shall iterate inner plan sinks to find LOGenerate. This is applicable to LOForeach.getSchema(). After DanglingNestedNodeRemover, it is safe to assume LOGenerate is the only sink, so we don&apos;t need to sprawl the change to optimizer. I will bring some of Koji&apos;s change in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3807&quot; title=&quot;Pig creates wrong schema after dereferencing nested tuple fields with sorts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3807&quot;&gt;&lt;del&gt;PIG-3807&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Daniel, but a different Koji again.  It&apos;s &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knoguchi&quot; class=&quot;user-hover&quot; rel=&quot;knoguchi&quot;&gt;Koji Noguchi&lt;/a&gt;. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13940816" author="daijy" created="Wed, 19 Mar 2014 18:44:11 +0000"  >&lt;p&gt;Oh, sorry &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knoguchi&quot; class=&quot;user-hover&quot; rel=&quot;knoguchi&quot;&gt;Koji Noguchi&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12598004">PIG-2802</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12577304" name="PIG-2970-0.patch" size="566" author="daijy" created="Fri, 5 Apr 2013 23:16:38 +0100"/>
                            <attachment id="12577334" name="PIG-2970-1.patch" size="6652" author="daijy" created="Sat, 6 Apr 2013 01:18:36 +0100"/>
                            <attachment id="12577431" name="PIG-2970-2.patch" size="4290" author="daijy" created="Sun, 7 Apr 2013 07:25:12 +0100"/>
                            <attachment id="12548981" name="pig-2970-trunk-v01.txt" size="2317" author="knoguchi" created="Sat, 13 Oct 2012 00:09:18 +0100"/>
                            <attachment id="12551874" name="pig-2970-trunk-v02.txt" size="10671" author="knoguchi" created="Fri, 2 Nov 2012 15:40:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Oct 2012 23:13:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248119</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy3g53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>53931</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>