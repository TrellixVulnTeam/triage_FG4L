<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:50:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3359/PIG-3359.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3359] Register Statements and Param Substitution in Macros</title>
                <link>https://issues.apache.org/jira/browse/PIG-3359</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;There are some gaps in the functionality of macros that I&apos;ve made a patch to address. The goal is to provide everything you&apos;d need to make reusable algorithms libraries.&lt;/p&gt;

&lt;p&gt;1. You can&apos;t register udfs inside a macro&lt;br/&gt;
2. Paramater substitutions aren&apos;t done inside macros&lt;br/&gt;
3. Resources (including macros) should not be redundantly acquired if they are already present.&lt;/p&gt;

&lt;p&gt;Rohini&apos;s patch &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3204&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-3204&lt;/a&gt; should address problem 3 where Pig reparses everything every time it reads a line, but there still would be a problem if two separate files import the same macro / udf file.&lt;/p&gt;

&lt;p&gt;To get this working, I moved methods for registering jars/udfs and param substitution from PigServer to PigContext so they can be accessed in QueryParserDriver which processes macros (QPD was already passed a PigContext reference). Is that ok?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12654011">PIG-3359</key>
            <summary>Register Statements and Param Substitution in Macros</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jpacker">Jonathan Packer</assignee>
                                    <reporter username="jpacker">Jonathan Packer</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Jun 2013 21:59:40 +0100</created>
                <updated>Mon, 14 Oct 2013 17:45:51 +0100</updated>
                            <resolved>Tue, 6 Aug 2013 06:45:57 +0100</resolved>
                                                    <fixVersion>0.12.0</fixVersion>
                                    <component>parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13689663" author="jpacker" created="Thu, 20 Jun 2013 22:04:07 +0100"  >&lt;p&gt;This is my first take at a patch that fixes the problems described above. I&apos;ll make a code review request on Review Board as well.&lt;/p&gt;</comment>
                            <comment id="13689704" author="jpacker" created="Thu, 20 Jun 2013 22:32:38 +0100"  >&lt;p&gt;A few notes:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3359&quot; title=&quot;Register Statements and Param Substitution in Macros&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3359&quot;&gt;&lt;del&gt;PIG-3359&lt;/del&gt;&lt;/a&gt;_test.tar.gz has a pigscript and other files which test registering udfs and parameter substitutions inside macros to demonstrate how this works.&lt;/p&gt;

&lt;p&gt;I haven&apos;t been able to upload my diff to ReviewBoard because I generated it with git and I think RB wants something svn-specific. Is there some way I can get git to generate something acceptable?&lt;/p&gt;

&lt;p&gt;I haven&apos;t written full unit-tests yet; I&apos;d be happy to write them if people are ok with the code changes in general.&lt;/p&gt;

&lt;p&gt;Finally, there was a problem with unrelated classes FieldSchemaResetter and ExpressionUidResetter which were not declared in their own files, which seemed to break trunk. I moved the former into its own file since it was used by two other classes, and the latter into an inner class in UidResetter and that seemed to fix it. Let me know if anyone has a better idea of what these things are or where they&apos;re supposed to go.&lt;/p&gt;</comment>
                            <comment id="13691325" author="cheolsoo" created="Sun, 23 Jun 2013 03:24:44 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I haven&apos;t been able to upload my diff to ReviewBoard because I generated it with git and I think RB wants something svn-specific. Is there some way I can get git to generate something acceptable?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You can upload git-generated diff to RB. You should specify pig-git as repository instead of pig. Please upload your patch to RB.&lt;/p&gt;</comment>
                            <comment id="13696848" author="jpacker" created="Mon, 1 Jul 2013 15:36:45 +0100"  >&lt;p&gt;Hi, I uploaded the diff to RB: &lt;a href=&quot;https://reviews.apache.org/r/12062/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/12062/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13703711" author="cheolsoo" created="Tue, 9 Jul 2013 20:57:32 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jpacker&quot; class=&quot;user-hover&quot; rel=&quot;jpacker&quot;&gt;Jonathan Packer&lt;/a&gt;, I have one question for you.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I moved some methods from PigServer to PigContext, which QPD has an instance of.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why can&apos;t you construct a PigServer instance w/ PigContext inside QPD instead of moving those methods? That seems like a pattern being used at several places. For example,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;GroovyScriptEngine.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    PigServer pigServer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PigServer(context, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; groovyJar = getJarPath(groovy.util.GroovyScriptEngine.class);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != groovyJar) {
        pigServer.registerJar(groovyJar);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To me, &quot;pigServer.registerCode()&quot; reads better than &quot;pigContext.registerCode()&quot;, so I prefer not moving them to PigContext. What do you think? Please feel free to disagree with me.&lt;/p&gt;</comment>
                            <comment id="13706070" author="jpacker" created="Thu, 11 Jul 2013 19:22:21 +0100"  >&lt;p&gt;Hi, thanks for taking a look at this. I simply wasn&apos;t aware of that pattern--I&apos;ve uploaded an updated patch with registerCode and registerJar moved back to PigServer. I think it&apos;s a bit weird that PigServer instantiates QPD which then instantiates a new PigServer, but I agree its better to be consistent with what&apos;s already there.&lt;/p&gt;

&lt;p&gt;doParamSubstitution(...) I kept moved into PigContext because the param lists are stored there. I noticed in some code paths PigContext wasn&apos;t being informed of which parameters were being used (ex. GruntParser has its own param substitution method for some reason?) so I wanted to make sure at least that each time doParamSubstitution was called it would update the params List object.&lt;/p&gt;

&lt;p&gt;Finally, the updated patch adds global param substitutions in macros. The use case is as follows: a macro file defines a java evalfunc udf with a constructor argument, which needs to be configurable by the main pigscript. In my case, this was for a K-Nearest-Neighbors udf; I wanted to be able to specify K.&lt;/p&gt;

&lt;p&gt;Thanks for bearing with me--this is my first time touching the main Pig codebase outside of Piggybank and I&apos;m still trying to grasp the overall architecture.&lt;/p&gt;</comment>
                            <comment id="13706134" author="dreambird" created="Thu, 11 Jul 2013 20:23:11 +0100"  >&lt;p&gt;Hi, Jonathan, few questions:&lt;/p&gt;

&lt;p&gt;1. how to use existing script to test issue 3 (Resources (including macros) should not be redundantly acquired if they are already present.) ? nested_macro.pig and macro_with_register.pig doesn&apos;t have macros with same name. Do you mean by import the same file twice instead?&lt;/p&gt;

&lt;p&gt;2. what do you mean by issue 2 (Paramater substitutions aren&apos;t done inside macros) will this change effect anything if macro and pig script are in the same file?&lt;/p&gt;

&lt;p&gt;3. the test you added duplicatedImportTest() should follow the negative test case format (expecting a exception and verify the error message is the same as expected), please see the example like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;TestMacroExpansion.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// macro doesn&apos;t contain &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; alias
&lt;/span&gt;    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void negativeTest6() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Throwable {
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; macro = &lt;span class=&quot;code-quote&quot;&gt;&quot;define group_and_count (A,C) returns B {\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    B = JOIN $A BY $B, $C BY user;\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;};\n&quot;&lt;/span&gt;;
        
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; script = 
            &lt;span class=&quot;code-quote&quot;&gt;&quot;alpha = load &apos;users&apos; as (user, age, zip);\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;beta = load &apos;links&apos; as (user, link, view);\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;gamma = group_and_count (alpha,beta);\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;store gamma into &apos;byuser&apos;;\n&quot;&lt;/span&gt;;
        
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; expectedErr = &lt;span class=&quot;code-quote&quot;&gt;&quot;Reason: Macro &apos;group_and_count&apos; missing &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; alias: B&quot;&lt;/span&gt;;
        
        validateFailure(macro + script, expectedErr);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13708193" author="cheolsoo" created="Mon, 15 Jul 2013 02:47:13 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jpacker&quot; class=&quot;user-hover&quot; rel=&quot;jpacker&quot;&gt;Jonathan Packer&lt;/a&gt;, thank you for updating the patch.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think it&apos;s a bit weird that PigServer instantiates QPD which then instantiates a new PigServer, but I agree its better to be consistent with what&apos;s already there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I have thought about this more. What if you don&apos;t call &lt;tt&gt;registerJars&lt;/tt&gt; and &lt;tt&gt;registerCode&lt;/tt&gt; in QPD at all? Instead can&apos;t you just pass filenames to PigServer via PigContext? Then, after QPD finishes parsing, PigServer can call these methods to register them by itself. Currently, jars are only registered in the PigServer constructor (i.e. addJarsFromProperties()), but we can register additional jars after parsing is done. Similarly, we can register scripts after parsing is done.&lt;/p&gt;

&lt;p&gt;The reasons why I am obsessed with de-coupling these methods from QPD is because I think it&apos;s good to keep a clear distinction between parser and server. Sorry if I am asking too much. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Thanks!&lt;/p&gt;</comment>
                            <comment id="13708920" author="cheolsoo" created="Mon, 15 Jul 2013 21:23:45 +0100"  >&lt;p&gt;I also made some comments in RB:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/12062/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/12062/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am really looking forward to these new features. That said, I am still struggling with thinking through the best way to implement them. As you know, parameter substitution code is not well organized, and I hope that we don&apos;t make it worse. We should seriously consider refactoring it if needed. Please let me know what you think.&lt;/p&gt;</comment>
                            <comment id="13711597" author="jpacker" created="Wed, 17 Jul 2013 21:48:36 +0100"  >&lt;p&gt;Updated RB: &lt;a href=&quot;https://reviews.apache.org/r/12062/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/12062/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comments below&lt;/p&gt;</comment>
                            <comment id="13711632" author="jpacker" created="Wed, 17 Jul 2013 22:11:13 +0100"  >&lt;p&gt;Cheolsoo, I updated patch to address your comments in RB. Johnny, my replies to your questions are at the bottom of this comment.&lt;/p&gt;

&lt;p&gt;Cheolsoo,&lt;/p&gt;

&lt;p&gt;There was a comment where you noted that ParamLoader was being called repeatedly. To address this, and a lot of other messiness with param substitution, I did a refactoring so all methods that substitute parameters call PigContext&apos;s doParamSubstitution(), which instantiates and manages ParamSubstitutionPreprocessor. This ensures consistent behavior between the param substitution called in Main, GruntParser, and several other places, and solves the ParamLoader problem. Managed by PigContext, the loading of parameters is separated from substitution itself, is not repeated when substitution is done many times (i.e. for macros).&lt;/p&gt;

&lt;p&gt;As for registerJars and registerCode, I got stuck. I understand your concern about separating parser and server. But QPD returns a LogicalPlan, and I&apos;m pretty sure that the LP generation needs the UDF output schemas to be defined, which requires the UDFs to be registered. I think this could be fixed by splitting the AST generation from the LP generation and allowing PigServer to register resources requested by macros in between the two. But that seems like a big change and I don&apos;t want the scope of this patch to expand too much.&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

&lt;p&gt;Johnny,&lt;/p&gt;

&lt;p&gt;To answer your questions:&lt;br/&gt;
1) The query parser seems to be reparsing everything every time it reads a new line of Pig code. So the same macros are parsed over and over. This patch caches the AST&apos;s from the first parsing, so when a new line of the Pig script is parsed, the macro is not re-parsed. Also in terms of actually fetching the files, the import sequence goes &quot;test.pig&quot; imports &quot;macros_1.pig&quot; imports &quot;macros_2.pig&quot;; when &quot;test.pig&quot; imports &quot;macros_2.pig&quot; in the next line, it has already been acquired, so it is not loaded. Same idea for udfs, jars. I&apos;m not sure how best to test this within Pig without a mocking framework to intercept when QPD parses a macro and ensure it is not doing it repeatedly. Any ideas?&lt;/p&gt;

&lt;p&gt;2) It should not, since param substitution in the main pigscript happens before macro expansion. This is just to propagate the parameters to imported macro files.&lt;/p&gt;

&lt;p&gt;3) duplicatedImportTest is not supposed to fail; the duplicated import should just be ignored. This is silly within one pigscript, but the it makes sense in the test.pig/macros_1.pig/macros_2.pig example I described above, since both test and macros_1 should be able to import macros_2.&lt;/p&gt;</comment>
                            <comment id="13712643" author="cheolsoo" created="Thu, 18 Jul 2013 19:44:33 +0100"  >&lt;p&gt;Hi Jonathan, thank you very much for the update and detailed explanation. I am reviewing your patch now.&lt;/p&gt;

&lt;p&gt;Btw, your patch doesn&apos;t compile. I fixed the errors by myself and will continue reviewing it. In the meantime, do you mind uploading a new patch?&lt;/p&gt;</comment>
                            <comment id="13713073" author="cheolsoo" created="Fri, 19 Jul 2013 00:22:32 +0100"  >&lt;p&gt;I love what you did for parameter substitution code. Thank you! As for registerJars and registerCode, you&apos;re totally right. Let&apos;s leave it as is. I made some additional comments in RB.&lt;/p&gt;

&lt;p&gt;I am running full unit tests and seeing several failures (not surprising since you&apos;re making quite a few changes). I will post the full list of test failures once completed.&lt;/p&gt;</comment>
                            <comment id="13713669" author="cheolsoo" created="Fri, 19 Jul 2013 14:53:20 +0100"  >&lt;p&gt;I see 51 test failures and am attaching the full list of test case.&lt;/p&gt;

&lt;p&gt;I ran the unit tests with this repo:&lt;br/&gt;
&lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/tree/PIG-3359&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/piaozhexiu/apache-pig/tree/PIG-3359&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13714132" author="jpacker" created="Fri, 19 Jul 2013 23:01:59 +0100"  >&lt;p&gt;Latest patch should fix the unit-tests failures and address latest comments on RB.&lt;/p&gt;</comment>
                            <comment id="13714627" author="cheolsoo" created="Sun, 21 Jul 2013 05:10:17 +0100"  >&lt;p&gt;Great! I just confirmed all unit tests pass now. Thank you!&lt;/p&gt;

&lt;p&gt;I have one last suggestion. Can you make this changes?&lt;br/&gt;
&lt;a href=&quot;https://github.com/piaozhexiu/apache-pig/commit/9e7c9ec9b70fa902ad4adc1dcf337762a8a14d3a&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/piaozhexiu/apache-pig/commit/9e7c9ec9b70fa902ad4adc1dcf337762a8a14d3a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While doing more testing, I discovered few more corner cases (see my comments on RB) that break your implementation. In addition, I realized that there is no need to re-implement the doParamSubstitutionForMacroFile() method after all. So I made the above changes to your patch, and your test scripts still work.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13715318" author="jpacker" created="Mon, 22 Jul 2013 16:58:12 +0100"  >&lt;p&gt;Latest patch should fix corner cases from RB. I kept doParamSubstitutionForMacros because the regular parser from PigScriptParser.jj did not work for the following macro file:&lt;/p&gt;

&lt;p&gt;/*&lt;br/&gt;
%default BINARY_FUNC &apos;divide&apos;&lt;br/&gt;
*/&lt;br/&gt;
/* a comment */ %default BINARY_FUNC &apos;multiply&apos;&lt;/p&gt;

&lt;p&gt;REGISTER &apos;udfs.py&apos; USING jython AS udfs;&lt;/p&gt;

&lt;p&gt;DEFINE ApplyBinaryFunc(data)&lt;br/&gt;
RETURNS funced &lt;/p&gt;
{
    $funced = FOREACH $data GENERATE udfs.$BINARY_FUNC($0, $1);
}
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;DEFINE MacroThatAppliesCross(data1, data2)&lt;br/&gt;
RETURNS crossed &lt;/p&gt;
{
    $crossed = CROSS $data1, $data2;
}
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;It does not substitute $BINARY_FUNC inside the macro. I don&apos;t know how the .jj files work but it looks complicated, and I think my latest regex solution, while admittedly hacky, should handle 95%+ of situations (including these test macros).&lt;/p&gt;</comment>
                            <comment id="13715426" author="cheolsoo" created="Mon, 22 Jul 2013 18:36:57 +0100"  >&lt;p&gt;Hey Jonathan, thanks for the update!&lt;/p&gt;

&lt;p&gt;I think we need a test suite that covers all the new functionalities that you&apos;re adding. Without it, you and I can&apos;t be on the same page. Do you mind adding either e2e test cases or unit test cases?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not substitute $BINARY_FUNC inside the macro. I don&apos;t know how the .jj files work but it looks complicated, and I think my latest regex solution, while admittedly hacky, should handle 95%+ of situations (including these test macros).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I can reproduce the issue, and I totally agree that we should get it working. Can we think about this more? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13717689" author="jpacker" created="Tue, 23 Jul 2013 23:10:06 +0100"  >&lt;p&gt;Sure thing. I don&apos;t think I&apos;ll be able to get to this until the weekend, but I&apos;ll write some unit tests and see if I can get the .jj parser working with macros.&lt;/p&gt;</comment>
                            <comment id="13724402" author="jpacker" created="Tue, 30 Jul 2013 21:51:44 +0100"  >&lt;p&gt;Sorry for the delay! I updated the patch and replaced the regex hack with a small tweak to PigMacro.java that got it working with the existing parser (so I didn&apos;t have to touch that thankfully). I also added 6 unit-tests for the issues this JIRA is supposed to address.&lt;/p&gt;</comment>
                            <comment id="13725462" author="cheolsoo" created="Wed, 31 Jul 2013 18:31:36 +0100"  >&lt;p&gt;Looks great! Let me run the unit tests today. I am also going to test with some of production scripts. Thank you so much!&lt;/p&gt;</comment>
                            <comment id="13727988" author="cheolsoo" created="Fri, 2 Aug 2013 20:28:16 +0100"  >&lt;p&gt;All the unit tests pass. I also tested with some of production scripts and verified that &quot;pig -dryrun&quot; generates the same output. Awesome!&lt;/p&gt;

&lt;p&gt;1. The only difference that I see is that a lot more warnings are printed when there are many macro files. For example,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-08-02 19:05:46,158 [main] WARN  org.apache.pig.tools.parameters.PreprocessorContext - Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; GCI_SOURCE_NETFLIX_SEASONS. Using value 1
2013-08-02 19:05:46,158 [main] WARN  org.apache.pig.tools.parameters.PreprocessorContext - Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; GCI_ATTRIBUTE_ORIGINAL_COUNTRY. Using value 1
2013-08-02 19:05:46,158 [main] WARN  org.apache.pig.tools.parameters.PreprocessorContext - Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; GCI_ATTRIBUTE_SEASON_SEQUENCE_NBR. Using value 5
2013-08-02 19:05:46,158 [main] WARN  org.apache.pig.tools.parameters.PreprocessorContext - Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; GCI_ATTRIBUTE_RELEASE_YEAR. Using value 6
2013-08-02 19:05:46,158 [main] WARN  org.apache.pig.tools.parameters.PreprocessorContext - Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; GCI_ATTRIBUTE_EPISODE_COUNT. Using value 8
2013-08-02 19:05:46,158 [main] WARN  org.apache.pig.tools.parameters.PreprocessorContext - Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; GCI_ATTRIBUTE_TITLE_TYPE. Using value 20
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This makes sense because you load params every time when importing a macro file. Can you please lower the log level to debug for these messages? This may unnecessarily scare the user.&lt;/p&gt;

&lt;p&gt;2. Can you update the doc? I think you can simply remove the following lines from the &lt;a href=&quot;http://pig.apache.org/docs/r0.11.0/cont.html#macros&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;macro section&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
- Macros can only contain Pig Latin statements. The REGISTER statement is not supported. The shell commands (used with Grunt) are not supported.
- Parameter substitution cannot be used inside of macros. Parameters should be explicitly passed to macros and parameter substitution used only at the top level.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can add your examples too, but I will let you decide on that. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I will commit this as soon as you update your patch. Thanks a lot! &lt;/p&gt;</comment>
                            <comment id="13728018" author="cheolsoo" created="Fri, 2 Aug 2013 20:55:21 +0100"  >&lt;p&gt;On a second thought, I think we should change the condition for the warnings as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (param_val.containsKey(key)) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (param_val.containsKey(key) &amp;amp;&amp;amp; !param_val.get(key).equals(val)) {
             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (overwrite) {
                 log.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Warning : Multiple values found &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + key + &lt;span class=&quot;code-quote&quot;&gt;&quot;. Using value &quot;&lt;/span&gt; + val);
             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We shouldn&apos;t lower the log level. Instead, we should print it only if there are multiple values for the same key. Do you agree?&lt;/p&gt;</comment>
                            <comment id="13730232" author="jpacker" created="Tue, 6 Aug 2013 02:00:38 +0100"  >&lt;p&gt;Updated the patch.&lt;/p&gt;

&lt;p&gt;There&apos;s a slight complication with the handling of the warnings in that &quot;val&quot; passed to those functions in PreprocessorContext is the raw string, which might not be the same as the val put into param_val. I added a separate hashtable &quot;param_source&quot; to keep track of this original argument, and if it&apos;s seen again to skip it instead of logging the warning.&lt;/p&gt;

&lt;p&gt;Also updated the docs.&lt;/p&gt;</comment>
                            <comment id="13730376" author="cheolsoo" created="Tue, 6 Aug 2013 06:29:40 +0100"  >&lt;p&gt;+1. I will commit it.&lt;/p&gt;</comment>
                            <comment id="13730392" author="cheolsoo" created="Tue, 6 Aug 2013 06:46:55 +0100"  >&lt;p&gt;Thank you Jonathan for the excellent work! Look forward to many more!&lt;/p&gt;</comment>
                            <comment id="13730929" author="cheolsoo" created="Tue, 6 Aug 2013 17:42:23 +0100"  >&lt;p&gt;Committed to trunk:&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1510858&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1510858&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12588915" name="PIG-3359-v1.diff" size="35497" author="jpacker" created="Thu, 20 Jun 2013 22:04:07 +0100"/>
                            <attachment id="12591886" name="PIG-3359-v2.diff" size="35132" author="jpacker" created="Thu, 11 Jul 2013 19:22:21 +0100"/>
                            <attachment id="12593194" name="PIG-3359-v3-test-failures.txt" size="3239" author="cheolsoo" created="Fri, 19 Jul 2013 14:53:20 +0100"/>
                            <attachment id="12592848" name="PIG-3359-v3.diff" size="62122" author="jpacker" created="Wed, 17 Jul 2013 21:48:36 +0100"/>
                            <attachment id="12593279" name="PIG-3359-v4.diff" size="58346" author="jpacker" created="Fri, 19 Jul 2013 23:01:59 +0100"/>
                            <attachment id="12593538" name="PIG-3359-v5.diff" size="59568" author="jpacker" created="Mon, 22 Jul 2013 16:58:12 +0100"/>
                            <attachment id="12595038" name="PIG-3359-v6.diff" size="64776" author="jpacker" created="Tue, 30 Jul 2013 21:51:44 +0100"/>
                            <attachment id="12596256" name="PIG-3359-v7.diff" size="69627" author="jpacker" created="Tue, 6 Aug 2013 02:00:38 +0100"/>
                            <attachment id="12588926" name="PIG-3359_test.tar.gz" size="258936" author="jpacker" created="Thu, 20 Jun 2013 22:32:38 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 23 Jun 2013 02:24:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>334288</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzfibr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>334614</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Register statements and parameter substitutions can be used inside macro now.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>