<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:47:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2317/PIG-2317.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2317] Ruby/Jruby UDFs</title>
                <link>https://issues.apache.org/jira/browse/PIG-2317</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;It should be possible to write UDFs in Ruby. These UDFs will be registered in the same way as python and javascript UDFs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12526391">PIG-2317</key>
            <summary>Ruby/Jruby UDFs</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jcoveney">Jonathan Coveney</assignee>
                                    <reporter username="thedatachef">Jacob Perkins</reporter>
                        <labels>
                            <label>0.10_blocker</label>
                    </labels>
                <created>Sun, 9 Oct 2011 21:57:18 +0100</created>
                <updated>Thu, 26 Apr 2012 21:32:59 +0100</updated>
                            <resolved>Tue, 3 Apr 2012 09:02:09 +0100</resolved>
                                                    <fixVersion>0.10.0</fixVersion>
                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13123783" author="thedatachef" created="Sun, 9 Oct 2011 22:14:48 +0100"  >&lt;p&gt;Here&apos;s the current way the patch works.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;myudfs.rb&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hello_world_outputschema = &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
def hello_world
  &lt;span class=&quot;code-quote&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
end

complex_outputschema = &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray,num:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
def complex(word)
  [word,word.length]
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There really aren&apos;t many nice options for attaching metadata (output schema information) to a function in ruby so I went with the above convention.&lt;/p&gt;

&lt;p&gt;And from Pig:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;foo.pig&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
register &apos;myudfs.rb&apos; using jruby as myudfs;
A = LOAD &apos;somedata.tsv&apos; AS (word:chararray);
B = FOREACH A GENERATE myudfs.hello_world(), myudfs.complex(word);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13124619" author="alangates" created="Tue, 11 Oct 2011 01:50:50 +0100"  >&lt;p&gt;I&apos;m reviewing this patch.&lt;/p&gt;</comment>
                            <comment id="13125499" author="alangates" created="Wed, 12 Oct 2011 01:26:04 +0100"  >&lt;p&gt;I haven&apos;t finished testing this, but it looks good after my initial review.&lt;/p&gt;

&lt;p&gt;One issue I found is that JrubyScriptEngine.run should throw UnsupportedMethodException.  This method is for when embedding Pig in a scripting language is supported, which your patch doesn&apos;t do.&lt;/p&gt;


</comment>
                            <comment id="13125527" author="dvryaboy" created="Wed, 12 Oct 2011 02:23:35 +0100"  >&lt;p&gt;Awesome!&lt;/p&gt;

&lt;p&gt;I&apos;m confused by JRuby&apos;s 3-way licensing. Is it ok to bundle this with Pig?&lt;/p&gt;

</comment>
                            <comment id="13126223" author="jcoveney" created="Wed, 12 Oct 2011 23:54:25 +0100"  >&lt;p&gt;As far as how to specify schema, another option would be to have a class function &quot;schema&quot; which sets the schema for the following function definition.&lt;/p&gt;

&lt;p&gt;schema &quot;str:chararray&quot;&lt;br/&gt;
def hello_world&lt;br/&gt;
  &quot;hello world&quot;&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;schema &quot;word:chararray,num:long&quot;&lt;br/&gt;
def complex(word)&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;word,word.length&amp;#93;&lt;/span&gt;&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;or even (the probably easier to code, and both could be support)&lt;/p&gt;

&lt;p&gt;def hello_world&lt;br/&gt;
  &quot;hello world&quot;&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;def complex(word)&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;word,word.length&amp;#93;&lt;/span&gt;&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;schema :hello_world, &quot;str:chararray&quot;&lt;br/&gt;
schema :complex, &quot;word:chararray,num:long&quot;&lt;/p&gt;

&lt;p&gt;I don&apos;t think this would be super hard, I&apos;d be willing to help make it work if you guys think it&apos;d be easier or more elegant&lt;/p&gt;</comment>
                            <comment id="13126226" author="jcoveney" created="Wed, 12 Oct 2011 23:58:22 +0100"  >&lt;p&gt;Woops, formatting got whacked.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
schema &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
def hello_world
  &lt;span class=&quot;code-quote&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
end

schema &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray,num:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
def complex(word)
  [word,word.length]
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
def hello_world
  &lt;span class=&quot;code-quote&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
end

def complex(word)
  [word,word.length]
end

schema :hello_world, &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
schema :complex, &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray,num:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13127270" author="jcoveney" created="Fri, 14 Oct 2011 05:37:57 +0100"  >&lt;p&gt;Here is a modified version of the Jruby patch. It builds off of the excellent work Jacob did, but simplified greatly the function registration and the method invocation.&lt;/p&gt;

&lt;p&gt;There are two supported forms, which can be mix and matched. They generally mirror the python form.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray&quot;&lt;/span&gt;
def helloworld
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &apos;Hello, World&apos;
end

outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray,num:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
def complex word
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; [word.to_s,word.length]
end

outputSchemaFunction :squareSchema
def square num
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; num**2
end

def squareSchema input
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; input
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
def helloworld
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &apos;Hello, World&apos;
end

def complex word
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; [word.to_s,word.length]
end

def square num
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; num**2
end

def squareSchema input
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; input
end

outputSchema :helloworld, &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray&quot;&lt;/span&gt;
outputSchema :complex, &lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray,num:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
outputSchemaFunction :square, :squareSchema
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is one key difference, though, which is that this version only registers functions with an explicit schema. While it does mean that you need a schema for every function, I think it more cleanly allows for people to write scripts where there are helper functions.&lt;/p&gt;

&lt;p&gt;Please let me know what you think. Oh, I also split out the JavaScript, Python, and Ruby scripting tests into different files...the ruby and python ones take long enough and are substantial enough that it is annoying to have to run them all at once to test a change just to the ruby implementation.&lt;/p&gt;</comment>
                            <comment id="13127271" author="jcoveney" created="Fri, 14 Oct 2011 05:46:18 +0100"  >&lt;p&gt;Woops, git has spoiled me. This should be the real patch.&lt;/p&gt;</comment>
                            <comment id="13127665" author="thedatachef" created="Fri, 14 Oct 2011 17:18:21 +0100"  >&lt;p&gt;Looks like the patch doesn&apos;t apply to branch 0.9 anymore. PigContext no longer has a method &apos;addScriptFile&apos; that takes two arguments. This breaks the way required libraries are shipped with the job jar.&lt;/p&gt;

&lt;p&gt;Also, @Jonathan, Awesome work! Good to have someone with a bit more java experience to pick up where I left off &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;The one minor concern I have is that with your patch a ruby script containing udfs can&apos;t be evaluated outside the context of the script engine. That is, I cant interpret it on the command line without adding the module and class definition that you define in JrubyScriptEngine.java. It&apos;s pretty minor but it sure would be nice to be able to test and debug a udf completely independently of Pig itself.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;
</comment>
                            <comment id="13127732" author="jcoveney" created="Fri, 14 Oct 2011 18:52:38 +0100"  >&lt;p&gt;My pleasure to help &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Hmm, I think it&apos;s worth seeing if we can do this without breaking 0.9 compatibility...a lot of shops aren&apos;t even on 0.9 yet, so requiring 0.10 is gonna severely limiting potential users.&lt;/p&gt;

&lt;p&gt;I see your issue on the ruby script end and agree...and I think there are a couple of solutions.&lt;/p&gt;

&lt;p&gt;1) we explicitly make people extend a class in order to write a UDF. Then, we could just give them a gem that defines all of this stuff, and they can require &apos;pigudf&apos; or whatever.&lt;br/&gt;
2) we provide a ruby function which does the wrapping for the user, and then they can run it... so you type &quot;gimmeruby myudfs.rb&quot; &lt;/p&gt;

&lt;p&gt;The second approach is much simpler and would still let people test things independent of pig. The first approach seems to me the &quot;right&quot; approach. Also, it&apos;d have the nice side effect that you could easily extend it to manipulate pig objects on the ruby end more easily. For example: right now, while technically you could create your own schema objects in jruby...good luck (all of the scripting UDFs suffer from this). It&apos;d be pretty nasty, because you&apos;d be creating a bunch of java objects and whatnot. But we could easily just extend it in the gem and bam, provide utilities like that...&lt;/p&gt;

&lt;p&gt;Anything else pinging around your brain?&lt;/p&gt;</comment>
                            <comment id="13127879" author="thedatachef" created="Fri, 14 Oct 2011 22:37:52 +0100"  >&lt;p&gt;I like the idea of a gem, especially from the added utilities standpoint. The one thing I&apos;d like to avoid with a gem though is creating a dsl and instead keeping the syntax as obvious as possible. Extending a class feels right:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;concat.rb&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
require &apos;pigudf&apos;

class Concat &amp;lt; PigUdf
  def output_schema
    &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
  end

  def eval str
    str + str
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but leads to lots of extra lines of code when all I really wanted to do was concat two strings...&lt;/p&gt;

&lt;p&gt;I would rather see something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;concat.rb&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
require &apos;pigudf&apos;

Concat = PigUdf.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; |str|
  str + str
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which is a dead simple class in ruby:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;pigudf.rb&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class PigUdf  
  def self.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; output_schema, &amp;amp;blk
    &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;
      @@output_schema = output_schema
      @@blk = blk

      def output_schema
        @@output_schema
      end
      
      def eval *args
        @@blk.call(*args)
      end      
    end    
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also suspect that, with everything wrapped in a class, the java side of things becomes even simpler. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13127979" author="jcoveney" created="Sat, 15 Oct 2011 00:25:23 +0100"  >&lt;p&gt;I think that this looks really excellent. Very ruby. I think we should allow the simpler syntax, but then also allow a more robust syntax for people who want it.&lt;/p&gt;

&lt;p&gt;Wrapping things in a class should simplify things a lot, especially because we can make helper methods and whatnot to facilitate everything.&lt;/p&gt;

&lt;p&gt;I&apos;d also like to have the more robust syntax for people who want it, something like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class MyUdfs &amp;lt; PigUdf
  outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
  def helloworld
    &lt;span class=&quot;code-quote&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;
  end

  filterFunc
  def amihappy
    &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;also it could support&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
NoImNot = PigUdf.filterFunc &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; |x|
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; !x
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The benefit of the latter being brevity, the benefit of the former being that you can have easier helper functions etc.&lt;/p&gt;

&lt;p&gt;also, and this is something the other scripting languages haven&apos;t tackled but I think we could do it pretty easily, and it would make it so that serious people could make efficient udfs&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class Count &amp;lt; AlgPigUdf
  def initial t
  end

  def intermed t
  end

  def &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; t
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;another syntax&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Count = PigUdf.algebraic &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; |udf|
  udf.initial :func1
  udf.intermed :func2
  udf.&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; :func3
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, one issue that comes up here that didn&apos;t come up otherwise was the fact that in the previous example, we knew exactly what the class was called (since we wrapped their code in it). Now we don&apos;t. However, we are having them require the gem, so we&apos;d ideally want a way to know the classes that they defined, and other fun. We could of course do the same trick of wrapping them in a class, but then you have the same issue, so ideally it&apos;d be something all ruby, where after running all of these things, there are functions defined in the gem that give you information on the classes, how to invoke them, etc (ie all the stuff pig needs, but conveniently exposed in ruby so that the user can manipulate it as well). But my ideal would being able to do something like&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
PigUdf.getClasses &lt;span class=&quot;code-comment&quot;&gt;//returns a list of the defined classes
&lt;/span&gt;PigUdf.getFunctions(className) &lt;span class=&quot;code-comment&quot;&gt;//returns a dictionary of the defined functions, and their schema&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And more, who knows.&lt;/p&gt;

&lt;p&gt;If you can think of a more ruby-esque syntax that allows this (I&apos;m sure you can &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, do tell. It&apos;d be easy for PigUdf.new, but different for the subclasses.&lt;/p&gt;

&lt;p&gt;Love your thoughts.&lt;/p&gt;</comment>
                            <comment id="13128325" author="jcoveney" created="Sun, 16 Oct 2011 03:19:31 +0100"  >&lt;p&gt;Ok, so I had some time (and by had some time I mean didn&apos;t stop working for the past however many hours), and I sat down and tried to do this.&lt;/p&gt;

&lt;p&gt;This code is REALLY rough, but I&apos;d rather start a dialogue around a) the design and b) the implementation. I&apos;m sure I did some dumb stuff and would love to hear it.&lt;/p&gt;

&lt;p&gt;GIGANTIC NOTE: the Algebraic piece is EXTREMELY buggy. Right now it&apos;s mainly just a proof of concept: it gets heap space errors right and left. I included it mainly in the hope that people could eyeball it and tell me if there is anything dumb I&apos;m doing...short of that I need to just rest a bit and give it some fresh eyeballs, and I&apos;ll use yourkit to profile it. But there&apos;s something weird going on somewhere, perhaps with the Ruby runtime environment running in parallel..&lt;/p&gt;

&lt;p&gt;Also, I know that you are more of a Ruby guy than I am, Jacob, so you can take a look at that end of things.&lt;/p&gt;

&lt;p&gt;Would there be any other features/syntax that would simplify things for poeple? As is it&apos;s pretty concise&lt;/p&gt;

&lt;p&gt;Non design to do:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;make it compatible with 0.9.0&lt;/li&gt;
	&lt;li&gt;clean it up (I really need to organize the code and see what needs to be ripped into other classes)&lt;/li&gt;
	&lt;li&gt;write tests&lt;/li&gt;
	&lt;li&gt;figure out&lt;/li&gt;
	&lt;li&gt;put in logic that will opportunistically run the intermediate function on the intermediate output (how does Pig normally make this choice?)&lt;/li&gt;
	&lt;li&gt;add an accumulator interface (it would be minimal work with what I already have)&lt;/li&gt;
	&lt;li&gt;need to have a better way to provide the tuple/databag abstraction in Ruby. The current method is pretty nasty to work with, and you get functions that receive [[&lt;span class=&quot;error&quot;&gt;&amp;#91;element&amp;#93;&lt;/span&gt;]], and whatnot (you&apos;ll see that in my code)&lt;/li&gt;
	&lt;li&gt;tear into my code/design&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13128705" author="jcoveney" created="Mon, 17 Oct 2011 08:11:18 +0100"  >&lt;p&gt;I made some fixes. The Algebraic stuff is still whacked, some sort of weird memory thing is going on, not sure what or why... but it works with small small data sets, so at least as a proof of concept is is ok. Hoping to use yourkit to figure it out. Will continue soon.&lt;/p&gt;</comment>
                            <comment id="13129210" author="dvryaboy" created="Mon, 17 Oct 2011 22:16:28 +0100"  >&lt;p&gt;Jonathan, can you inline the latest on how jruby udfs are supposed to be created? It&apos;s a bit confusing to read this ticket as you guys are working out the right interface. My understanding is that with the latest patch the memory woes on algebraics are solved, right?&lt;/p&gt;

&lt;p&gt;-D&lt;/p&gt;</comment>
                            <comment id="13129347" author="jcoveney" created="Tue, 18 Oct 2011 00:54:09 +0100"  >&lt;p&gt;Ok! I have made a lot of progress in this. Algebraic Ruby UDF&apos;s are WORKING, you just have to make sure to set -Xmx 1024m (or more). Pigs are not lean creatures &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;My to do&apos;s:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Allow for in-line UDFs&lt;/li&gt;
	&lt;li&gt;Expose an accumulator interface (should be easy peasy)&lt;/li&gt;
	&lt;li&gt;Think of a better way to handle DataBags in Ruby, given that currently tuples and databags are the same structure... I think I know what to do, but need to ruminate.&lt;/li&gt;
	&lt;li&gt;Make it compatible with 0.9.1 at least&lt;/li&gt;
	&lt;li&gt;Write tests (is there a way to force a UDF which imeplements Algebraic and Accumulator to be run as an Accumulator UDF, or a normal EvalFunc? this is important for testing)&lt;/li&gt;
	&lt;li&gt;Anything you guys thing would be useful&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One thing that I did to get this to work was to generate an abstract &quot;AccEvalFunc&quot; and &quot;AlgEvalFunc,&quot; where if you define the pieces of that interface, you get the lower levels for free. So in the case of the ruby algebraic UDF, by simply defining &quot;initial&quot; &quot;intermed&quot; and &quot;final,&quot; you get accumulator and exec for free and don&apos;t have to putz around defining them. I think this should at least go in the piggybank, but it needs some eyeballs and suggestions.&lt;/p&gt;

&lt;p&gt;To allay confusion, I&apos;m going to inline &quot;pigruby.rb&quot; and explain how it works.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
require &apos;PigUdf&apos;

Helloworld=PigUdf.evalfunc(&lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray&quot;&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;code-quote&quot;&gt;&quot;Hello, world&quot;&lt;/span&gt;
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;First off, it&apos;s important to require &apos;PigUdf&apos; so ruby can work it&apos;s magic. In order to facilitate easy Udf definitions, you can declare functions in this way. You cannot have a schema which refers to a function, however, and the Udf name MUST begin with a capital letter.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Complex=PigUdf.evalfunc(&lt;span class=&quot;code-quote&quot;&gt;&quot;word:chararray,num:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; |word|
  [word.to_s,word.length]
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Conveniently, you can ask for as many parameters as you like. Varargs aren&apos;t supported yet, and it&apos;s not super high on the list but if you want it, let me know.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Divbythree=PigUdf.filterfunc &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; |num|
  num%3==0
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Much like an evalfunc, you can easy make a filterfunc.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class Myudfs &amp;lt; PigUdf
  outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
  def cumsum num
    @x||=0
    @x+=num
  end
  
  outputSchemaFunction :squareSchema
  def square num
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; num**2
  end

  def squareSchema input
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; input
  end
  
  filterFunc
  def divbytwo input
    input%2==0
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more complicated udfs, declaring a class that extends PigUdf is the way to go. In order to declare a UDF, you have to declare it&apos;s schema. There are two options: outputSchema &quot;schema&quot; will set that schema for the next function you define, and register it as a udf. or you can do outputSchema :funcname, &quot;schema&quot; to register funcname as a udf and schema as it&apos;s schema. If your function has a schema dependent on the input, then you can use outputSchemaFunction :funcname, and the next defined function will be registered as a udf with funcname as it&apos;s schema function. Or as above, you can do outputSchemaFunction :functoregister, :funcname. If you do filterFunc, the next function is a filterFunc.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class COUNT &amp;lt; AlgPigUdf
  outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;

  class Initial
    def exec item
      1
    end
  end
  
  class Intermed
    def exec items
      items.flatten.inject(:+)
    end
  end
  
  class Final &amp;lt; Intermed
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the algebraic interface. The class name will be the UDF name in Pig.&lt;/p&gt;

&lt;p&gt;Initial&apos;s exec function will be passed one item at a time. You do not have to deal with the tuple that contains a bag that contains a tuple that contains an item madness.&lt;/p&gt;

&lt;p&gt;Intermed&apos;s exec function will be passed a &quot;databag&quot; that contains &quot;tuples,&quot; which means it will be a list of lists of items (which is why I flatten items before summing). you return the item, and it will be put in a tuple for you.&lt;/p&gt;

&lt;p&gt;Final&apos;s exec function will do the exact same thing as Intermed, and the output just won&apos;t be wrapped in a TUple. this is why in the examples, it just extends Intermed.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class SUM &amp;lt; AlgPigUdf
  outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
  
  class Initial
    def exec item
      item
    end
  end
  
  class Intermed
    def exec items
      items.flatten.inject(:+)
    end
  end
  
  class Final &amp;lt; Intermed
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This example works exactly like the above, except it sums the values, and not the rows.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class WORDCOUNT &amp;lt; AlgPigUdf
  outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;

  class Initial
    def exec item
      item ? item.split.length : 0
    end
  end

  class Intermed
    def exec items
      items.flatten.inject(:+)
    end
  end

  class Final &amp;lt; Intermed
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Of course, what would any example be without a word count example.&lt;/p&gt;

&lt;p&gt;Please let me know if you run into bugs, or have any suggestions on the code itself, the interface, etc.&lt;/p&gt;</comment>
                            <comment id="13129977" author="thedatachef" created="Tue, 18 Oct 2011 20:45:16 +0100"  >&lt;p&gt;Combiners from ruby? I like it.&lt;/p&gt;

&lt;p&gt;Here&apos;s some stylistic nitpicking more than anything. Ruby people are very particular.&lt;/p&gt;

&lt;p&gt;1) Ruby people in general hate camel case for anything except class names. So, &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
require &apos;PigUdf&apos;

# ...
outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should become:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
require &apos;pigudf&apos;

# ...
output_schema &lt;span class=&quot;code-quote&quot;&gt;&quot;str:chararray&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m really not kidding.&lt;/p&gt;

&lt;p&gt;2) I would argue for &apos;PigUDF&apos; as opposed to &apos;PigUdf&apos; if only because UDF is an acronym.&lt;/p&gt;

&lt;p&gt;3) There is tab completion in the universe now. As such we should spell things like &apos;AlgPigUdf&apos; out as &apos;AlgebraicPigUDF&lt;/p&gt;

&lt;p&gt;I&apos;ll look into making it compatible with 0.9.1, specifically with regards to the &apos;addScriptFile&apos; issue.&lt;/p&gt;</comment>
                            <comment id="13130342" author="jcoveney" created="Wed, 19 Oct 2011 05:09:24 +0100"  >&lt;p&gt;I agree on the style points, and will implement accordingly.&lt;/p&gt;

&lt;p&gt;As far as the Algebraic UDF&apos;s, I can simplify them greatly. The nested structure was largely a vestige of an initial, poor implementation.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class SUM &amp;lt; AlgebraicPigUDF
  outputSchema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
  
  def initial item
    item
  end

  def intermed items
    items.flatten.inject(:+)
  end

  def &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; items
    intermed items
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Extremely compact.&lt;/p&gt;

&lt;p&gt;Another fun thing that could be a boon to doing serious analysis in a scripting language (as something similar could no doubt be done in Jython): I am working on making a native ruby object that wraps the DataBag. There are a couple of hacky ways of doing it, but I&apos;m hoping to do one in a real, fast way. It should ideally allow us to avoid materializing bags into memory in scripting languages.&lt;/p&gt;</comment>
                            <comment id="13132036" author="jcoveney" created="Thu, 20 Oct 2011 22:05:48 +0100"  >&lt;p&gt;So! Made some new changes. There is now an accumulator interface.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class SUM2 &amp;lt; AccumulatorPigUDF
  output_schema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;

  def exec items
    @sum||=0
    @sum+=items.flatten.inject(:+)
  end

  def get
    @sum
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One interesting thing about the accumulator interface is that all of the state is handled inside of the ruby class...so if you want intermediate objects, it&apos;s all there. The cleanup step is just throwing away the class, and then it will be reinstantiated if the interface is invoked again.&lt;/p&gt;

&lt;p&gt;Algebraic UDFs are easier than ever.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class SUM &amp;lt; AlgebraicPigUDF
  output_schema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
  
  def initial item
    item
  end
  
  def intermed items
    items.flatten.inject(:+)
  end
  
  def &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; items
    intermed items
  end
end

class WORDCOUNT &amp;lt; AlgebraicPigUDF
  output_schema &lt;span class=&quot;code-quote&quot;&gt;&quot;val:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;

  def initial item
    item ? item.split.length : 0
  end

  def intermed items
    items.flatten.inject(:+)
  end
  
  def &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; items
    intermed items
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One of the more exciting changes (to me...) is that I have added DataBags as a native ruby object, so it&apos;s super easy to use them. If you do include the pigudf package, you can do &quot;DataBag.new.&quot; Examples of how to use it follow:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
jruby -J-Xmx1024m -S irb
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this ensures that you have enough heap space&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
require &apos;pigudf&apos;
db=DataBag.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;a is now a databag! to test that it spills properly, we do...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
(0..10000000).each {|x| db.add(x)}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On my computer, with the heap size we specified, it spilled once. But it spills! Also, a note: arrays still convert to tuples, and a bag can either accept ONE argument, or an array of arguments. The one argument thing is a convenience function. I will probably make it a varargs for conciseness. But that means you can do&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.add(1)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.add([1])
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After running the each above, you get:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ree-1.8.7-2010.02 :009 &amp;gt; db.size()
 =&amp;gt; 10000001
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nice! I need to look into how to get JRuby to generate better docs, but if you look at RubyDataBag.java in the patch you can see the api (anything marked with @JRubyMethod). I&apos;ll summarize here.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
DataBag.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;, DataBag.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; db
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;DataBag has two initializers: the default initializer just creates an empty databag, and the second takes a databag and copies it over. There is also&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.add_all db2, db.copy db2
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which pulls all of the data out of the given DataBag or RubyDataBag.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.to_s,db.to_string,db.inspect
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;return a string view. if you do db.to_s(true), you&apos;ll also see the contents (useful for debugging)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.size,db.length
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;number of elements in the bag&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.add(elem) or db.add([e1,e2,e3])
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Add the elements to the bag&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.distinct?, db.is_distinct?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;returns if the bag is distinct&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.sorted?, db.is_sorted?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;returns if the bag is sorted&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.clear
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;clears the databag&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.empty?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;returns if the bag is empty&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.each
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;One thing that I did with the DataBag implementation is that I had it include Enumerable, and implement each. This means that all of the fun commands you like to use in ruby like map and so on should work... also, for convenient, I implement a flatten command&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.flatten or db.flat_each
 =&amp;gt; #&amp;lt;Enumerable::Enumerator:0x8939ec3 @__args__=[], @__object__=[DataBag: size: 10000001], @__method__=:flat_each&amp;gt; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;what this does is create an object that accepts .each &lt;/p&gt;
{block}
&lt;p&gt;, but will flatten the value out of the Tuple before passing it to the block. This allows you to efficiently do things like db.flatten.inject(:+), because it is pulling the element out of the tuple on each block invocation instead of doing the naive thing which would be to create an array of the output. One thing to keep in mind though is that this only pulls out the first argument. I guess I could change that. Am undecided.&lt;/p&gt;

&lt;p&gt;And lastly, there is...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.iterator
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;returns a BagIterator. This is basically a simplifed access point that is very similar to bag, except with less power.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.get, db.getNext, db.get_next
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
db.has_next?, db.hasNext, db.has_next, db.next?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and it supports the exact same map semantics as bag does.&lt;/p&gt;

&lt;p&gt;Phew! Ok. Definitely would love feedback. I&apos;m going to work on making UDFs in-line, and need to write tests....&lt;/p&gt;</comment>
                            <comment id="13179093" author="alangates" created="Tue, 3 Jan 2012 22:42:30 +0000"  >&lt;p&gt;I&apos;ve been reviewing and playing with this patch over the last week.  I have a few comments, and then questions since I can&apos;t get it to work in the e2e tests.  I&apos;ll attach my changes in a new patch.&lt;/p&gt;

&lt;p&gt;Comments:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;In JRubyScriptEngine.registerFunctions, line 130, why is canonicalName forced to the result from LongJRubyAccumulatorEvalFunc and the following switch statement commented out?  This looks like a mistake.&lt;/li&gt;
	&lt;li&gt;In JrubyUtils.pigToRuby, converting a databytearray to a String will mangle binary data.  I don&apos;t know if Ruby has a binary type or supports a byte type.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Issue I&apos;m seeing:&lt;/p&gt;

&lt;p&gt;When I try to run the new e2e tests I&apos;ve added, they abort with the following error message:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Pig Stack Trace
---------------
ERROR 2999: Unexpected internal error. (NoMethodError) undefined method `outputSchemaFunction&apos; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; main:&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;

org.jruby.embed.EvalFailedException: (NoMethodError) undefined method `outputSchemaFunction&apos; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; main:&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;
    at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:127)
    at org.apache.pig.scripting.jruby.JrubyScriptEngine$RubyFunctions.getFromCache(JrubyScriptEngine.java:80)
    at org.apache.pig.scripting.jruby.JrubyScriptEngine$RubyFunctions.getEvalFunctions(JrubyScriptEngine.java:95)
    at org.apache.pig.scripting.jruby.JrubyScriptEngine.registerFunctions(JrubyScriptEngine.java:115)
    at org.apache.pig.PigServer.registerCode(PigServer.java:525)
    at org.apache.pig.tools.grunt.GruntParser.processRegister(GruntParser.java:421)
    at org.apache.pig.tools.pigscript.parser.PigScriptParser.parse(PigScriptParser.java:419)
    at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:188)
    at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:164)
    at org.apache.pig.tools.grunt.Grunt.exec(Grunt.java:84)
    at org.apache.pig.Main.run(Main.java:589)
    at org.apache.pig.Main.main(Main.java:148)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.hadoop.util.RunJar.main(RunJar.java:156)
Caused by: org.jruby.exceptions.RaiseException: (NoMethodError) undefined method `outputSchemaFunction&apos; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; main:&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can run the same tests by doing:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -D-Dtests.to.run=&quot;-t RubyUDFs_1&quot; test-e2e-local&lt;/p&gt;

&lt;p&gt;This will run just the first RubyUDF test in local mode.&lt;/p&gt;</comment>
                            <comment id="13180139" author="jcoveney" created="Thu, 5 Jan 2012 02:39:25 +0000"  >&lt;p&gt;Alan,&lt;/p&gt;

&lt;p&gt;Thank you very much for your comments, and for adding tests (which it was sorely lacking). Point 1 is indeed an error...this is an artifact of when I was getting the whole canonicalName piece working, and wanted to force it to a Long to isolate errors. The switch should be working now.&lt;/p&gt;

&lt;p&gt;To point 2, there are a couple of ways that we can handle it. One would be to create a DataByteArray class in Ruby which would allow us to do whatever we wanted. Ruby, natively, does not have a binary type...what people usually do, AFAIK (someone with deeper knowledge of ruby can chime in), is pack data into strings. Since we&apos;re using JRuby, we can expose things however we like. I&apos;ll think on an elegant solution but you are right, we need to do something else.&lt;/p&gt;

&lt;p&gt;It is a goal of mine to get momentum going again to push this through, so thank you very much for taking a look and adding the tests. I will get to work figuring out why they are failing and update these comments.&lt;/p&gt;</comment>
                            <comment id="13218520" author="jcoveney" created="Tue, 28 Feb 2012 19:30:46 +0000"  >&lt;p&gt;Phew! Ok, the tests now run. There was quite a bit of bug fixing that went in, both in the ruby library &apos;pigudf&apos;, as well as in the UDFs themselves (they are cleaned up a bit). I added support for DataByteArrays, as well as support making it a lot easier to concatenate them together and whatnot.&lt;/p&gt;

&lt;p&gt;As far as things I&apos;d like to do...&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&apos;d like to make a much more natural way to interact with Schema objects from the Ruby side. Right now you can return a schema and stuff, but goooood luck actually trying to manipulate the object &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; (it&apos;s possibly but it&apos;d be ugly) I imagine the jython scripting suffers from this as well&lt;/li&gt;
	&lt;li&gt;Need to fix the enumerator interface on the DataBag and BagIterator. This is pending some help from the JRuby folk.&lt;/li&gt;
	&lt;li&gt;In general, need to balance making the API&apos;s look like their Java counterparts, but with the nice conveniences that JRuby can offer so that UDFs can be really concise and easy&lt;/li&gt;
	&lt;li&gt;I&apos;d like to get rid of the need for pigudf.rb and implement it all in Java. This is the least priority, though, because the current implementation works, and it is absolutely idiomatic in jruby to implement libraries in jruby, so the above is more important.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks again for the tests, Alan. They were really key. It should pass them now. I&apos;ll ruminate on other good ones to add.&lt;/p&gt;</comment>
                            <comment id="13218716" author="jiraposter@reviews.apache.org" created="Tue, 28 Feb 2012 23:49:59 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1294756 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/bin/pig 1294756 &lt;br/&gt;
  trunk/ivy.xml 1294756 &lt;br/&gt;
  trunk/ivy/libraries.properties 1294756 &lt;br/&gt;
  trunk/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyUtils.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyBagIterator.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyExampleA.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyExampleB.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1294756 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1294756 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1294756 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1294756 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13221123" author="alangates" created="Fri, 2 Mar 2012 18:13:45 +0000"  >&lt;p&gt;Once &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2548&quot; title=&quot;Support for providing parameters to python script&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2548&quot;&gt;&lt;del&gt;PIG-2548&lt;/del&gt;&lt;/a&gt; is checked in we should modify this patch to have the same behavior of accepting command line arguments.  Or we can do it as a separate JIRA if this one gets in first.&lt;/p&gt;</comment>
                            <comment id="13221149" author="jcoveney" created="Fri, 2 Mar 2012 18:53:51 +0000"  >&lt;p&gt;Alan,&lt;/p&gt;

&lt;p&gt;Does that ticket really apply? It seems only to deal with jython as a control flow language, not jython as a UDF language.&lt;/p&gt;

&lt;p&gt;That said, if we want to use jruby as a control language I think that that&apos;s a great idea, but one that should probably be explored separately &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Am I misunderstanding?&lt;/p&gt;</comment>
                            <comment id="13221650" author="alangates" created="Sat, 3 Mar 2012 17:24:07 +0000"  >&lt;p&gt;Jonathan, you&apos;re right, I&apos;m confusing the two.  So this ticket doesn&apos;t apply.&lt;/p&gt;</comment>
                            <comment id="13221720" author="jiraposter@reviews.apache.org" created="Sat, 3 Mar 2012 22:27:56 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/#review5601&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#review5601&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Thanks Jonathan for this contribution. A lot of good stuff in there.&lt;br/&gt;
Please add comments when using Ruby specific mechanisms in there (child classes notification, Class naming after the variable it is affected to, ...) so that less Ruby savvy contributors can follow.&lt;/p&gt;


&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12179&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12179&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    maybe you need to separate the top level ruby script to be used outside of pig and the one used inside using includes?&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12208&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12208&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    please add doc on public functions&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12180&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12180&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    @function_to_register&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;GETCLASSFROMOBJECT&amp;quot;&amp;#93;&lt;/span&gt; could be replaced by a member @current_get_class_from_object&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12214&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12214&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you could define a class for this&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12209&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12209&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;please add a comment explain the mechanism that names the class after the variable it is assigned to.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12210&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12210&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Add a comment to explain that classes inheriting PigUdf will automatically get registered here.&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12211&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12211&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would add a separate field for schema func instead of this convention.&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12181&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12181&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would throw an exception if both @schema and @functions_to_register&lt;span class=&quot;error&quot;&gt;&amp;#91;id&amp;#93;&lt;/span&gt; are set.&lt;/p&gt;



&lt;p&gt;trunk/pigudf.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12182&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12182&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You could call it RegisterDescendentsUDF or a similar name as this is a based class for UDFs.&lt;br/&gt;
    The descendents registration is common to the PigUDF as well. Do you want to unify the class hierarchy? &lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12184&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12184&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ruby.getClass(&quot;DataBag&quot;) could be done only once&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12183&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12183&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    throw an Exception here&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12185&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12185&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would override OutputSchema instead. In the case of a bag you are losing the schema of the Tuple inside the bag.&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12212&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12212&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If you can add the name of the function in the message that would help with debugging.&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12186&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you could factor out the function calling and bag instantiated code.&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12215&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12215&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    some of the ruby calling logic and exception catching could be factored in this class&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12187&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Override outputSchema instead like you did for EvalFunc&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12213&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12213&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    private&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12189&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12189&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    check for the varargs case&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12190&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12190&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you should throw an exception here&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12217&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    It is very similar to JrubyEvalFunc. You can factor out more of this code.&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12216&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12216&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    private&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12218&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12218&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    turn these comments into javadoc&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12192&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this will strip the inner schema of bags and tuples. See comments about overriding outputSchema&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyUtils.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12219&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12219&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    please add javadoc to public methods&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12193&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12193&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    add javadoc&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyBagIterator.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12194&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12194&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    please make it private and at the top &lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12195&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12195&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    add javadoc&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12196&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12196&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    make it private&lt;br/&gt;
    1 is a perfectly good value. it does not need to be unique.&lt;br/&gt;
    Changing the serialVersionUID value will make the serialized data format incompatible.&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12197&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12197&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    in this case addAll would replace the current content. Is it intended ?&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12220&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12220&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    want to remove it ?&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12198&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    internalDB.add(JrubyUtils.rubyToPig((RubyArray)elem));&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12199&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12199&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you could call runtime.getClass(&quot;DataBag&quot;).getClass(&quot;BagIterator&quot;) once at the beginning&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12200&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12200&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    add spaces around operator and prefer the normalized &quot;if&quot; with { }&lt;/p&gt;

&lt;p&gt;    if () &lt;/p&gt;
{
    //
    }



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12201&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12201&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    flattten with 3 Ts? It&apos;s going to be really flat.&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12202&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12202&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    make this a javadoc comment&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12203&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12203&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    private&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12204&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12204&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    space after comma&lt;/p&gt;



&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12205&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12205&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    give meaningful names to parameters&lt;/p&gt;



&lt;p&gt;trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12221&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12221&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What about keeping only the one parameter ouptutSchema and outputSchemaFunctions?&lt;br/&gt;
    Users would just use the function right before defining the UDF.&lt;/p&gt;

&lt;p&gt;      outputSchema &quot;word:chararray&quot;&lt;br/&gt;
      def concat input, input2&lt;br/&gt;
        return input + input2&lt;br/&gt;
      end&lt;/p&gt;



&lt;p&gt;trunk/test/org/apache/pig/test/TestUDF.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/#comment12222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#comment12222&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if this value is known you may as well compare each value to the known constant instead of comparing to the previous value.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Julien&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-02-28 22:02:52, Jonathan Coveney wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-02-28 22:02:52)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/ScriptEngine.java 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/bin/pig 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/ivy.xml 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/ivy/libraries.properties 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/pigudf.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyUtils.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyBagIterator.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyExampleA.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyExampleB.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/build.xml 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/conf/default.conf 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/drivers/TestDriverPig.pm 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/tests/nightly.conf 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13227957" author="daijy" created="Mon, 12 Mar 2012 21:55:25 +0000"  >&lt;p&gt;I tried the latest patch. Find couple of issues in e2e tests in mapreduce mode. I attach &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;-8_plus.patch on top of Jonathan&apos;s patch. Here is what I did:&lt;br/&gt;
1. The original patch ship way too much files to the backend, my job.jar is larger than 20G. I fix it by only ship necessary ruby files&lt;br/&gt;
2. ruby.jar will be registered automatically only when ruby UDF is used, same mechanism as jython UDF&lt;br/&gt;
3. drop the dependency of pigudf.rb on pig.jar. All pig classes is assumed to be in classpath&lt;br/&gt;
4. pigudf.rb will be shipped automatically if ruby UDF is used&lt;br/&gt;
5. bin/pig and e2e test changes to support the above changes&lt;/p&gt;

&lt;p&gt;Other than these, patch looks good. +1 for commit once Julien&apos;s comments are addressed.&lt;/p&gt;</comment>
                            <comment id="13228154" author="jcoveney" created="Tue, 13 Mar 2012 02:49:51 +0000"  >&lt;p&gt;Awesome Daniel, those were some key changes. Going to try and get to Julien&apos;s review soon. Excited to get this in.&lt;/p&gt;</comment>
                            <comment id="13233708" author="jiraposter@reviews.apache.org" created="Tue, 20 Mar 2012 20:11:36 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Thanks Jonathan for this contribution. A lot of good stuff in there.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Please add comments when using Ruby specific mechanisms in there (child classes notification, Class naming after the variable it is affected to, ...) so that less Ruby savvy contributors can follow.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m going to update the JIRA with some of the broader comments.&lt;/p&gt;

&lt;p&gt;My todo at this point is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Polish up the Javadocs (I should probably add @params and whatnot)&lt;/li&gt;
	&lt;li&gt;Clean up the naming convention in the Ruby API defined in Java&lt;/li&gt;
	&lt;li&gt;Add more test coverage (I added a couple big features, they need to be used more in the e2e tests especially)&lt;/li&gt;
	&lt;li&gt;Add varargs support&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That said, the tests pass and it seems to work. The API feels quite clean to me.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86324#file86324line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86324#file86324line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ruby.getClass(&quot;DataBag&quot;) could be done only once&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It could, but there is a caveat: the Ruby runtime HAS to be identical within calls, or you&apos;re going to run into huge issues. The getClass call isn&apos;t particularly heinous, and I think it&apos;s cleaner to leave in. For the time being, all of the Ruby runtimes are identical, but in the future there may be multiple (a different runtime per UDF or per script registered), so this is safer.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/pigudf.rb, line 110&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line110&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line110&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You could call it RegisterDescendentsUDF or a similar name as this is a based class for UDFs.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The descendents registration is common to the PigUDF as well. Do you want to unify the class hierarchy?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed, I renamed it&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/pigudf.rb, line 87&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line87&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line87&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I would add a separate field for schema func instead of this convention.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I split it out into another class like you suggested&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/pigudf.rb, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     - please add a comment explain the mechanism that names the class after the variable it is assigned to.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;added a ton of comments&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/pigudf.rb, line 26&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line26&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line26&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     you could define a class for this&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/pigudf.rb, line 6&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86320#file86320line6&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     maybe you need to separate the top level ruby script to be used outside of pig and the one used inside using includes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was able to clean this up significantly in multiple ways. Will document how in the JIRA.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java, line 65&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86324#file86324line65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86324#file86324line65&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I would override OutputSchema instead. In the case of a bag you are losing the schema of the Tuple inside the bag.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wisdom of the ages. Done &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java, line 86&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86325#file86325line86&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86325#file86325line86&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     some of the ruby calling logic and exception catching could be factored in this class&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed...the win felt small, I will take this into account, but it&apos;s not a priority&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java, line 60&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86326#file86326line60&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86326#file86326line60&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     check for the varargs case&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll make varargs a top priority for the next round of changes... didn&apos;t seem super pressing atm, but maybe it is.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java, line 15&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86327#file86327line15&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86327#file86327line15&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It is very similar to JrubyEvalFunc. You can factor out more of this code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suppose this begs the question of why we even have FilterFunc anymore, given that it just extends EvalFunc&amp;lt;Boolean&amp;gt; now. I treated it separately because I wasn&apos;t sure about that (I could just make FilterFuncs EvalFunc&amp;lt;Boolean&amp;gt;s and be done with it)... it seems like something we should change in Pig (ie abolish FilterFuncs). But if FilterFunc is treater separately, I want the two classes... I suppose I could pull out the functionality, and should, but I&apos;d like to have some resolution on that, because it&apos;ll guide how I do so.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java, line 107&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86328#file86328line107&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86328#file86328line107&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     this will strip the inner schema of bags and tuples. See comments about overriding outputSchema&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you avoid this with Algebraic UDFs? Fixed for Accumulators&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/RubyBagIterator.java, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86331#file86331line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86331#file86331line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     please make it private and at the top&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t even ned it, I think&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java, line 40&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86332#file86332line40&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86332#file86332line40&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     make it private&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     1 is a perfectly good value. it does not need to be unique.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Changing the serialVersionUID value will make the serialized data format incompatible.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;you&apos;re correct. I think this was an artifact from a previous implementation and isn&apos;t actually necessary. good to know, though...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java, line 104&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86332#file86332line104&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86332#file86332line104&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     in this case addAll would replace the current content. Is it intended ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good call. It was a bug. I removed addAll and just made the functionality a part of add.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java, line 149&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86332#file86332line149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86332#file86332line149&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     you could call runtime.getClass(&quot;DataBag&quot;).getClass(&quot;BagIterator&quot;) once at the beginning&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I eliminated BagIterator, it didn&apos;t seem necessary. That said, re: the getClass calls, see above.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86333#file86333line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86333#file86333line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     give meaningful names to parameters&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;the issue with ruby parameters is that a lot of the functions can take multiple types, etc, and the meaning changes depending. I could handle this a couple of ways.&lt;/p&gt;

&lt;p&gt;1) in the case where there is only one option, use that&lt;br/&gt;
2) make better use of @param javadoc&lt;br/&gt;
3) in the case where there are multiple possibilities, make sure to explicitly create an object that is named to reflect what it is supposed to be&lt;/p&gt;

&lt;p&gt;Would appreciate your thoughts on the matter&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-03-03 22:26:58, Julien Le Dem wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb, line 32&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/4091/diff/1/?file=86341#file86341line32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff/1/?file=86341#file86341line32&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What about keeping only the one parameter ouptutSchema and outputSchemaFunctions?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Users would just use the function right before defining the UDF.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;       outputSchema &quot;word:chararray&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;       def concat input, input2&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;         return input + input2&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;       end&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;it&apos;d be good to test both, agreed&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/#review5601&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/#review5601&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-02-28 22:02:52, Jonathan Coveney wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-02-28 22:02:52)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/ScriptEngine.java 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/bin/pig 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/ivy.xml 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/ivy/libraries.properties 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/pigudf.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/JrubyUtils.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyBagIterator.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyExampleA.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/src/org/apache/pig/scripting/jruby/RubyExampleB.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/build.xml 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/conf/default.conf 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/drivers/TestDriverPig.pm 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/tests/nightly.conf 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13233724" author="jiraposter@reviews.apache.org" created="Tue, 20 Mar 2012 20:43:35 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-20 20:42:48.606378)&lt;/p&gt;


&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/pig 1303128 &lt;br/&gt;
  trunk/build.xml 1303128 &lt;br/&gt;
  trunk/ivy.xml 1303128 &lt;br/&gt;
  trunk/ivy/libraries.properties 1303128 &lt;br/&gt;
  trunk/src/PigService.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/jruby/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1303128 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubySchema.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1303128 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1303128 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1303128 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1303128 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13233743" author="jcoveney" created="Tue, 20 Mar 2012 21:01:40 +0000"  >&lt;p&gt;OK! I just uploaded a new diff (which incorporates Daniel&apos;s changes). It may be possible to undo some of that, actually... I&apos;ll explain some of the big new changes. First, a todo list:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Need to add more e2e tests&lt;/li&gt;
	&lt;li&gt;Need to add more traditional tests&lt;/li&gt;
	&lt;li&gt;Need to make the Javadocs more robust with @params and whatnot&lt;/li&gt;
	&lt;li&gt;Need to add varargs support (this is the only feature that is missing, AFAIK)&lt;/li&gt;
	&lt;li&gt;I have some TODO&apos;s littered about...need to clean those up&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In general, there is a LOT more commenting, and I tried to be super explicit on the Ruby side of things.&lt;/p&gt;

&lt;p&gt;I significantly cleaned up and simplified pigudf.rb, taking into account comments from Julien. I simplified the mechanisms at play as far as I could.&lt;/p&gt;

&lt;p&gt;pigudf.rb is in src/main/jruby/&lt;/p&gt;

&lt;p&gt;Now, in order to get access to the Pig library, all you have to do is &quot;require &apos;pig&apos;&quot;, which imho is awesome: you just require pig, and you get everything! It&apos;s super clean. The unclean part of it is the way it works. If you do &quot;require &apos;name.jar&apos;&quot;, then JRuby looks for NameService.java in the base of the jar. If you do &quot;require &apos;path/to/name.jar&apos;&quot;, it&apos;ll look for path.to.NameService.java. Either way, this is the reason why I had to add src/PigService.java. IMHO the win is worth it, as it is super clean. In JRuby 1.7.0 there is a proposal to use the jar manifest to deal with this, and it&apos;s something I&apos;ve brought up with them and something that will happen. 1.7 should also remove the need for a hack described below.&lt;/p&gt;

&lt;p&gt;I got rid of the BagIterator, as it didn&apos;t make much sense. In this implementation, it makes more sense just to iterate on the DataBag object in Ruby directly, as it hides the pain (this pattern is repeated in Schema).&lt;/p&gt;

&lt;p&gt;HACK ALERT: for people who know ruby, generally if you include &apos;Enumerable&apos;, and implement each, you can do &quot;obj.each&quot; and it will give you an enumerator object. This is useful for chaining together functions that enumerate over the object and change it in some way. Either way, JRuby 1.6.7 has a method that provides exactly this functionality...but they forgot to give it public permissions (it&apos;s just static enumeratorize(Blahblahblah)). I worked hard to try and get around the need for this, but it does it so cleanly and doing it any other way is such a pain (I haven&apos;t found a good one), that I used reflection to get around the permissions. I felt ok doing this because the 1.7.0 branch makes this explicitly public &amp;#8211; it was just an oversight.&lt;/p&gt;

&lt;p&gt;Accumulator now uses outputSchema, as it always should have.&lt;/p&gt;

&lt;p&gt;One (surprisingly long) addition is a Ruby interface for Schema objects! It protects the user from the Schema/FieldSchema divide, and makes it really easy to mix String schema declarations and a Schema object that is input. I will post more depth about this later, but I think my time would be better served fixing the javadocs and the tests atm.&lt;/p&gt;</comment>
                            <comment id="13237389" author="jcoveney" created="Sat, 24 Mar 2012 01:31:37 +0000"  >&lt;p&gt;This is it!&lt;/p&gt;

&lt;p&gt;Could it have better test coverage? Perhaps, good sir. But this is it. Full javadoc coverage (let me know if its lacking anywhere), real feature completeness (most of the aforementioned tests are for features people will only find out about when I die and they are revealed in my well), including...&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;native and super easy schemas!&lt;/li&gt;
	&lt;li&gt;varargs!&lt;/li&gt;
	&lt;li&gt;ruby 1.9!&lt;/li&gt;
	&lt;li&gt;accumulators! algebraics!&lt;/li&gt;
	&lt;li&gt;customs schemas everywhere!&lt;/li&gt;
	&lt;li&gt;and much much more!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now I need some eyes on it, and I&apos;ll work on more tests and more testing... but yeah.&lt;/p&gt;</comment>
                            <comment id="13237390" author="jiraposter@reviews.apache.org" created="Sat, 24 Mar 2012 01:33:23 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-24 01:33:02.389407)&lt;/p&gt;


&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;I incorporated a ton of Julien&apos;s comments, added a lot of javadocs, and rounded out the completeness. More fully featured and tastier than ever.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/pig 1304676 &lt;br/&gt;
  trunk/build.xml 1304676 &lt;br/&gt;
  trunk/ivy.xml 1304676 &lt;br/&gt;
  trunk/ivy/libraries.properties 1304676 &lt;br/&gt;
  trunk/src/PigudfService.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/jruby/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1304676 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubySchema.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/tools/counters/PigCounterHelper.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13238575" author="jcoveney" created="Mon, 26 Mar 2012 18:27:04 +0100"  >&lt;p&gt;Small update to RubySchema. Allows setting the name of a Schema from Ruby.&lt;/p&gt;</comment>
                            <comment id="13238576" author="jiraposter@reviews.apache.org" created="Mon, 26 Mar 2012 18:28:27 +0100"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-26 17:28:16.350869)&lt;/p&gt;


&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;A small update that gives RubySchema&apos;s the ability to manipulate the alias&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/tools/counters/PigCounterHelper.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1304676 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubySchema.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1304676 &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/jruby/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/PigudfService.java PRE-CREATION &lt;br/&gt;
  trunk/bin/pig 1304676 &lt;br/&gt;
  trunk/build.xml 1304676 &lt;br/&gt;
  trunk/ivy.xml 1304676 &lt;br/&gt;
  trunk/ivy/libraries.properties 1304676 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13238784" author="daijy" created="Mon, 26 Mar 2012 21:28:52 +0100"  >&lt;p&gt;Seems I still need a small patch to make e2e tests work. I attach &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;-10_plus.patch. Also seems you miss AppendIndex.java in the patch.&lt;/p&gt;</comment>
                            <comment id="13239011" author="jcoveney" created="Tue, 27 Mar 2012 00:41:33 +0100"  >&lt;p&gt;I&apos;ve included the missing file.&lt;/p&gt;

&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;Can you include what error you&apos;re getting? As is, there should be no issue as long as the pig udf has &quot;require &apos;pigudf&apos;&quot;. We are now packaging pigudf.rb in the jar file, and when they do &quot;require &apos;pigudf&apos;&quot; the PigudfService.java class will pull in all of the required files.&lt;/p&gt;

&lt;p&gt;I have no problem running the tests without your patch so I&apos;d like to get to the bottom of that. It&apos;s possible I have something else on my classpath or something.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
Jon&lt;/p&gt;</comment>
                            <comment id="13239015" author="jiraposter@reviews.apache.org" created="Tue, 27 Mar 2012 00:44:25 +0100"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-26 23:42:23.147374)&lt;/p&gt;


&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/PigudfService.java PRE-CREATION &lt;br/&gt;
  trunk/bin/pig 1304676 &lt;br/&gt;
  trunk/build.xml 1304676 &lt;br/&gt;
  trunk/ivy.xml 1304676 &lt;br/&gt;
  trunk/ivy/libraries.properties 1304676 &lt;br/&gt;
  trunk/src/main/jruby/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1304676 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubySchema.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/tools/counters/PigCounterHelper.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/java/org/apache/pig/test/udf/evalfunc/AppendIndex.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13239017" author="daijy" created="Tue, 27 Mar 2012 00:49:17 +0100"  >&lt;p&gt;The error I see is Pig does not ship jruby.jar. We shall put it into scriptJars if jruby is used. Also putting pigudf.rb into pig.jar does not mean it will ship to backend, we need to explicitly add it.&lt;/p&gt;</comment>
                            <comment id="13239038" author="jcoveney" created="Tue, 27 Mar 2012 01:10:29 +0100"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;As always, thanks for your input. This patch reflects your comments.&lt;/p&gt;</comment>
                            <comment id="13239042" author="jiraposter@reviews.apache.org" created="Tue, 27 Mar 2012 01:11:26 +0100"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-27 00:11:05.270583)&lt;/p&gt;


&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/pig 1304676 &lt;br/&gt;
  trunk/build.xml 1304676 &lt;br/&gt;
  trunk/ivy.xml 1304676 &lt;br/&gt;
  trunk/ivy/libraries.properties 1304676 &lt;br/&gt;
  trunk/src/PigudfService.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/jruby/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1304676 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyFilterFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubySchema.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/tools/counters/PigCounterHelper.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1304676 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/java/org/apache/pig/test/udf/evalfunc/AppendIndex.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13239265" author="jcoveney" created="Tue, 27 Mar 2012 08:10:46 +0100"  >&lt;p&gt;Incorporated Daniel&apos;s wisdom, and removed the separate FilterFunc (unnecessary now that Boolean is a type). Some other random small fixes.&lt;/p&gt;</comment>
                            <comment id="13239266" author="jiraposter@reviews.apache.org" created="Tue, 27 Mar 2012 08:11:36 +0100"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4091/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-27 07:11:17.441864)&lt;/p&gt;


&lt;p&gt;Review request for pig, Julien Le Dem and Alan Gates.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is the reviewboard for the following:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2317&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/pig 1305733 &lt;br/&gt;
  trunk/build.xml 1305733 &lt;br/&gt;
  trunk/ivy.xml 1305733 &lt;br/&gt;
  trunk/ivy/libraries.properties 1305733 &lt;br/&gt;
  trunk/src/PigudfService.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/jruby/pigudf.rb PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/AlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/ScriptEngine.java 1305733 &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAccumulatorEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyAlgebraicEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyEvalFunc.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/JrubyScriptEngine.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/PigJrubyLibrary.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataBag.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubyDataByteArray.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/scripting/jruby/RubySchema.java PRE-CREATION &lt;br/&gt;
  trunk/src/org/apache/pig/tools/counters/PigCounterHelper.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/build.xml 1305733 &lt;br/&gt;
  trunk/test/e2e/pig/conf/default.conf 1305733 &lt;br/&gt;
  trunk/test/e2e/pig/conf/local.conf 1305733 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/TestDriverPig.pm 1305733 &lt;br/&gt;
  trunk/test/e2e/pig/drivers/Util.pm 1305733 &lt;br/&gt;
  trunk/test/e2e/pig/tests/nightly.conf 1305733 &lt;br/&gt;
  trunk/test/e2e/pig/udfs/java/org/apache/pig/test/udf/evalfunc/AppendIndex.java PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/morerubyudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/e2e/pig/udfs/ruby/scriptingudfs.rb PRE-CREATION &lt;br/&gt;
  trunk/test/org/apache/pig/test/TestUDF.java 1294756 &lt;br/&gt;
  trunk/test/org/apache/pig/test/utils/HelperEvalFuncUtils.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/4091/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4091/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;e2e tests can be run as follows:&lt;/p&gt;

&lt;p&gt;ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; test-e2e-deploy-local&lt;br/&gt;
ant -Dharness.hadoop.home=&amp;lt;path_to_hadoop&amp;gt; -Dharness.old.pig=&amp;lt;path_to_old_pig&amp;gt; -Dtests.to.run=&quot;-t RubyUDFs&quot; test-e2e-local&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;
</comment>
                            <comment id="13239288" author="daijy" created="Tue, 27 Mar 2012 08:47:19 +0100"  >&lt;p&gt;e2e tests run for me. However, one other test which runs before fail:&lt;/p&gt;

&lt;p&gt;register &apos;udf2.rb&apos; using jruby as myfuncs;&lt;br/&gt;
a = load &apos;student.txt&apos; using PigStorage() as (name, age:int, gpa:double);&lt;br/&gt;
b = foreach a generate myfuncs.squaresquare(age);&lt;br/&gt;
dump b;&lt;/p&gt;

&lt;p&gt;udf2.rb:&lt;br/&gt;
require &apos;pigudf&apos;&lt;br/&gt;
require &apos;morerubyudfs&apos;&lt;/p&gt;

&lt;p&gt;class TestUDFs &amp;lt; PigUdf&lt;br/&gt;
    def squaresquare(num)&lt;br/&gt;
        return Myudfs.square(num)**2 if num&lt;br/&gt;
    end&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;morerubyudfs.rb:&lt;br/&gt;
require &apos;pigudf&apos;&lt;br/&gt;
class Myudfs &amp;lt; PigUdf&lt;br/&gt;
    def Myudfs.square(num)&lt;br/&gt;
        return num**2 if num&lt;br/&gt;
    end&lt;/p&gt;

&lt;p&gt;    def Myudfs.cube(num)&lt;br/&gt;
        return num**3 if num&lt;br/&gt;
    end&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;libsToShip() get morerubyudfs.rb as relative path before, but now I get absolute path. I will trace more tomorrow.&lt;/p&gt;</comment>
                            <comment id="13239290" author="jcoveney" created="Tue, 27 Mar 2012 08:56:03 +0100"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;a) Is that from a separate test you&apos;re running? I don&apos;t see that in my directory.&lt;br/&gt;
b) What is your command for running it? Are you running it locally, or in m/r mode?&lt;/p&gt;

&lt;p&gt;I&apos;m just curious why we get different results when running... but I really appreciate your help in getting this production ready.&lt;/p&gt;</comment>
                            <comment id="13239325" author="russell.jurney" created="Tue, 27 Mar 2012 09:58:38 +0100"  >&lt;p&gt;Lots of patches... what is the process to use if people want to help test this?&lt;/p&gt;</comment>
                            <comment id="13239595" author="jcoveney" created="Tue, 27 Mar 2012 17:17:11 +0100"  >&lt;p&gt;Russell: each pass (excluding a couple of the _plus patches), is the full patch. So you just download the patch, put it in the base directory of a clean-esque pig folder, and do &quot;patch -p0 &amp;lt; &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;_13.patch&quot;&lt;/p&gt;

&lt;p&gt;At that point, you can register a script as:&lt;/p&gt;

&lt;p&gt;register &apos;udf2.rb&apos; using jruby as myfuncs;&lt;/p&gt;

&lt;p&gt;And so on. Check out: test/e2e/pig/udfs/ruby/ for two scripts used in the e2e tests.&lt;/p&gt;

&lt;p&gt;Let me rebase a version for a clean apply against 0.10... I wasn&apos;t sure if we were going to have this be in the RC so I&apos;ve been working against trunk. It should apply fine against 0.10, just a little offset stuff, so I&apos;ll do that in a little and attach it...but let me know if what I said above doesn&apos;t work or make sense once I do.&lt;/p&gt;</comment>
                            <comment id="13239779" author="jcoveney" created="Tue, 27 Mar 2012 19:14:33 +0100"  >&lt;p&gt;Russell, I&apos;ve attached a patch that should apply cleanly to 0.10. From the base pig directory, do &quot;patch -p0 &amp;lt; &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;_13_0.10.patch&quot; and let me know how it works for you!&lt;/p&gt;</comment>
                            <comment id="13239802" author="daijy" created="Tue, 27 Mar 2012 19:37:33 +0100"  >&lt;blockquote&gt;&lt;p&gt;a) Is that from a separate test you&apos;re running? I don&apos;t see that in my directory.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a separate test I create, which has recursive inclusion&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;b) What is your command for running it? Are you running it locally, or in m/r mode?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;bin/pig rubytest.pig&lt;br/&gt;
m/r&lt;/p&gt;</comment>
                            <comment id="13239807" author="jcoveney" created="Tue, 27 Mar 2012 19:43:14 +0100"  >&lt;p&gt;Any desire to include that test in the e2e? I can take it on me to do so, if you like.&lt;/p&gt;

&lt;p&gt;Thanks Daniel&lt;/p&gt;</comment>
                            <comment id="13239817" author="daijy" created="Tue, 27 Mar 2012 19:49:13 +0100"  >&lt;p&gt;That will be great!&lt;/p&gt;</comment>
                            <comment id="13239828" author="jcoveney" created="Tue, 27 Mar 2012 19:56:28 +0100"  >&lt;p&gt;Cool, just attach it and I&apos;ll go to town.&lt;/p&gt;</comment>
                            <comment id="13239835" author="daijy" created="Tue, 27 Mar 2012 20:01:49 +0100"  >&lt;p&gt;It&apos;s in my previous comments. I attach recursiveinclusion.tar.gz to make it more clear.&lt;/p&gt;</comment>
                            <comment id="13239946" author="daijy" created="Tue, 27 Mar 2012 21:57:40 +0100"  >&lt;p&gt;Seems it is related to ruby 1.9 change. If I use 1.8, I can ship the correct ruby dependencies (though fail due to syntax incompatibility later)&lt;/p&gt;</comment>
                            <comment id="13240620" author="jcoveney" created="Wed, 28 Mar 2012 19:46:10 +0100"  >&lt;p&gt;This includes Daniel&apos;s test, and it works on my computer. the 0.10 patch is nearly identical, just rebased on 0.10.&lt;/p&gt;</comment>
                            <comment id="13240715" author="daijy" created="Wed, 28 Mar 2012 21:43:35 +0100"  >&lt;p&gt;Here is what I get for RubyUDFs_14:&lt;br/&gt;
org.jruby.embed.EvalFailedException: (LoadError) no such file to load &amp;#8211; ./libexec/ruby/morerubyudfs&lt;br/&gt;
        at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:132)&lt;br/&gt;
        at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1263)&lt;br/&gt;
        at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1294)&lt;br/&gt;
        at org.apache.pig.scripting.jruby.JrubyScriptEngine$RubyFunctions.getFromCache(JrubyScriptEngine.java:103)&lt;br/&gt;
        at org.apache.pig.scripting.jruby.JrubyScriptEngine$RubyFunctions.getFunctions(JrubyScriptEngine.java:119)&lt;br/&gt;
        at org.apache.pig.scripting.jruby.JrubyEvalFunc.initialize(JrubyEvalFunc.java:87)&lt;br/&gt;
        at org.apache.pig.scripting.jruby.JrubyEvalFunc.exec(JrubyEvalFunc.java:103)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:225)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:284)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:320)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.processPlan(POForEach.java:332)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getNext(POForEach.java:284)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.runPipeline(PigGenericMapBase.java:271)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:266)&lt;br/&gt;
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:64)&lt;br/&gt;
        at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)&lt;br/&gt;
        at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:764)&lt;br/&gt;
        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)&lt;br/&gt;
        at org.apache.hadoop.mapred.Child$4.run(Child.java:255)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at javax.security.auth.Subject.doAs(Subject.java:396)&lt;br/&gt;
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1083)&lt;br/&gt;
        at org.apache.hadoop.mapred.Child.main(Child.java:249)&lt;br/&gt;
Caused by: org.jruby.exceptions.RaiseException: (LoadError) no such file to load &amp;#8211; ./libexec/ruby/morerubyudfs&lt;/p&gt;</comment>
                            <comment id="13241335" author="jcoveney" created="Thu, 29 Mar 2012 17:01:42 +0100"  >&lt;p&gt;Hmm, that&apos;s vexing. I was getting that information, but now I am not. Are you running the test in local mode, or in M/R mode?&lt;/p&gt;</comment>
                            <comment id="13241449" author="daijy" created="Thu, 29 Mar 2012 19:02:52 +0100"  >&lt;p&gt;MR mode. Are you able to check what&apos;s in your job.jar? Do you have morerubyudfs.rb in job.jar or /home/xxx/pig/morerubyudfs.rb?&lt;/p&gt;</comment>
                            <comment id="13242842" author="daijy" created="Sat, 31 Mar 2012 00:19:06 +0100"  >&lt;p&gt;I think it&apos;s fine to check in the patch minus RubyUDFs_14, we can open a Jira to track recursive inclusion later.&lt;/p&gt;</comment>
                            <comment id="13244319" author="jcoveney" created="Mon, 2 Apr 2012 17:46:41 +0100"  >&lt;p&gt;I agree, Daniel. We can document any such limitations and open JIRA&apos;s to enhance them. Currently I can think of this...anything else we should clean up later?&lt;/p&gt;

&lt;p&gt;And separately, in JRuby news, I should probably open up a JIRA about doing control flow in JRuby&lt;/p&gt;</comment>
                            <comment id="13244388" author="daijy" created="Mon, 2 Apr 2012 19:02:59 +0100"  >&lt;p&gt;Sounds good. Let&apos;s try to commit it today.&lt;/p&gt;</comment>
                            <comment id="13244711" author="daijy" created="Mon, 2 Apr 2012 23:04:19 +0100"  >&lt;p&gt;What is PigudfService.java doing? Who&apos;s using it?&lt;/p&gt;</comment>
                            <comment id="13244735" author="jcoveney" created="Mon, 2 Apr 2012 23:17:22 +0100"  >&lt;p&gt;PigudfService.java is what allows &quot;require &apos;pigudf&apos;&quot; to work. Given that pig.jar is on the classpath, when in JRuby you type &quot;require x&quot; it looks for x.jar in the classpath, and will load everything. This makes it so that user doesn&apos;t have to do &quot;required &apos;long/path/to/pigudf.rb&apos;&quot;&lt;/p&gt;</comment>
                            <comment id="13244839" author="daijy" created="Tue, 3 Apr 2012 00:43:08 +0100"  >&lt;p&gt;Do we need to tell JRuby to lookup PigudfService? Or JRuby will automatically pickup all BasicLibraryService?&lt;/p&gt;</comment>
                            <comment id="13244915" author="daijy" created="Tue, 3 Apr 2012 02:58:45 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2317&quot; title=&quot;Ruby/Jruby UDFs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2317&quot;&gt;&lt;del&gt;PIG-2317&lt;/del&gt;&lt;/a&gt;_15.patch fix some minor issues and findbugs/javac warnings. All tests pass for me. I am going to commit the patch soon.&lt;/p&gt;</comment>
                            <comment id="13245040" author="daijy" created="Tue, 3 Apr 2012 08:36:07 +0100"  >&lt;p&gt;Another minor fix to make rpm distribution work.&lt;/p&gt;</comment>
                            <comment id="13245045" author="daijy" created="Tue, 3 Apr 2012 08:53:16 +0100"  >&lt;p&gt;The same patch for 0.10.&lt;/p&gt;</comment>
                            <comment id="13245047" author="daijy" created="Tue, 3 Apr 2012 09:02:14 +0100"  >&lt;p&gt;test-patch:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 18 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javac.  The applied patch generated 915 javac compiler warnings (more than the trunk&apos;s current 0 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;All relavent javac warnings are fixed. javadoc warning is not related.&lt;/p&gt;

&lt;p&gt;Patch committed to 0.10/trunk.&lt;/p&gt;

&lt;p&gt;Great job, Jonathan!&lt;/p&gt;

&lt;p&gt;We need to open additional Jira:&lt;br/&gt;
1. make recursive inclusion work&lt;br/&gt;
2. Add main function for JRuby&lt;/p&gt;</comment>
                            <comment id="13245056" author="dvryaboy" created="Tue, 3 Apr 2012 09:22:08 +0100"  >&lt;p&gt;Congrats Jonathan! Huge.&lt;/p&gt;

&lt;p&gt;To add to Daniel&apos;s list:&lt;/p&gt;

&lt;p&gt;3. Documentation.&lt;/p&gt;</comment>
                            <comment id="13245564" author="daijy" created="Tue, 3 Apr 2012 19:21:12 +0100"  >&lt;p&gt;Document is in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2601&quot; title=&quot;Additional document for 0.10&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2601&quot;&gt;&lt;del&gt;PIG-2601&lt;/del&gt;&lt;/a&gt;. Can anyone review it?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12546719">PIG-2598</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12543885">PIG-2551</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12433483">PIG-928</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12519771" name="PIG-2317-10.patch" size="192029" author="jcoveney" created="Sat, 24 Mar 2012 01:31:37 +0000"/>
                            <attachment id="12520002" name="PIG-2317-10_plus.patch" size="1261" author="daijy" created="Mon, 26 Mar 2012 21:28:52 +0100"/>
                            <attachment id="12519977" name="PIG-2317-11.patch" size="193793" author="jcoveney" created="Mon, 26 Mar 2012 18:27:04 +0100"/>
                            <attachment id="12520038" name="PIG-2317-12.patch" size="195619" author="jcoveney" created="Tue, 27 Mar 2012 00:41:54 +0100"/>
                            <attachment id="12520073" name="PIG-2317-13.patch" size="195507" author="jcoveney" created="Tue, 27 Mar 2012 08:10:42 +0100"/>
                            <attachment id="12520040" name="PIG-2317-13.patch" size="195910" author="jcoveney" created="Tue, 27 Mar 2012 01:10:27 +0100"/>
                            <attachment id="12520039" name="PIG-2317-13.patch" size="195910" author="jcoveney" created="Tue, 27 Mar 2012 01:10:27 +0100"/>
                            <attachment id="12516379" name="PIG-2317-8.patch" size="95064" author="jcoveney" created="Tue, 28 Feb 2012 19:30:46 +0000"/>
                            <attachment id="12518098" name="PIG-2317-8_plus.patch" size="6301" author="daijy" created="Mon, 12 Mar 2012 21:55:25 +0000"/>
                            <attachment id="12519122" name="PIG-2317-9.patch" size="143482" author="jcoveney" created="Tue, 20 Mar 2012 20:43:54 +0000"/>
                            <attachment id="12520168" name="PIG-2317_13_0.10.patch" size="20933" author="jcoveney" created="Tue, 27 Mar 2012 19:14:33 +0100"/>
                            <attachment id="12520298" name="PIG-2317_14.patch" size="197537" author="jcoveney" created="Wed, 28 Mar 2012 19:46:10 +0100"/>
                            <attachment id="12520299" name="PIG-2317_14_0.10.patch" size="21504" author="jcoveney" created="Wed, 28 Mar 2012 19:46:10 +0100"/>
                            <attachment id="12521092" name="PIG-2317_15.patch" size="194475" author="daijy" created="Tue, 3 Apr 2012 02:58:45 +0100"/>
                            <attachment id="12521115" name="PIG-2317_16.10.patch" size="196635" author="daijy" created="Tue, 3 Apr 2012 08:53:13 +0100"/>
                            <attachment id="12521113" name="PIG-2317_16.patch" size="196640" author="daijy" created="Tue, 3 Apr 2012 08:36:05 +0100"/>
                            <attachment id="12499468" name="PigUdf.rb" size="3447" author="jcoveney" created="Tue, 18 Oct 2011 00:54:09 +0100"/>
                            <attachment id="12499268" name="PigUdf.rb" size="3485" author="jcoveney" created="Mon, 17 Oct 2011 08:11:18 +0100"/>
                            <attachment id="12498372" name="jruby_scripting.patch" size="30095" author="thedatachef" created="Sun, 9 Oct 2011 21:58:50 +0100"/>
                            <attachment id="12498978" name="jruby_scripting_2_real.patch" size="86323" author="jcoveney" created="Fri, 14 Oct 2011 05:46:18 +0100"/>
                            <attachment id="12499191" name="jruby_scripting_3.patch" size="109259" author="jcoveney" created="Sun, 16 Oct 2011 03:19:31 +0100"/>
                            <attachment id="12499267" name="jruby_scripting_4.patch" size="107998" author="jcoveney" created="Mon, 17 Oct 2011 08:11:18 +0100"/>
                            <attachment id="12499467" name="jruby_scripting_5.patch" size="103880" author="jcoveney" created="Tue, 18 Oct 2011 00:54:09 +0100"/>
                            <attachment id="12499948" name="jruby_scripting_6.patch" size="122049" author="jcoveney" created="Thu, 20 Oct 2011 22:05:48 +0100"/>
                            <attachment id="12509346" name="jruby_scripting_7.patch" size="133203" author="alangates" created="Tue, 3 Jan 2012 22:43:50 +0000"/>
                            <attachment id="12499946" name="pigjruby.rb" size="1393" author="jcoveney" created="Thu, 20 Oct 2011 22:05:48 +0100"/>
                            <attachment id="12499469" name="pigjruby.rb" size="1288" author="jcoveney" created="Tue, 18 Oct 2011 00:54:09 +0100"/>
                            <attachment id="12499269" name="pigjruby.rb" size="1690" author="jcoveney" created="Mon, 17 Oct 2011 08:11:18 +0100"/>
                            <attachment id="12499947" name="pigudf.rb" size="3576" author="jcoveney" created="Thu, 20 Oct 2011 22:05:48 +0100"/>
                            <attachment id="12520177" name="recursiveinclusion.tar.gz" size="904" author="daijy" created="Tue, 27 Mar 2012 20:01:49 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Oct 2011 00:50:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>51022</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyawnb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97600</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>