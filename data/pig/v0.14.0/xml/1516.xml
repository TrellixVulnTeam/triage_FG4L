<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:00:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1516/PIG-1516.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1516] finalize in bag implementations causes pig to run out of memory in reduce </title>
                <link>https://issues.apache.org/jira/browse/PIG-1516</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;&lt;b&gt;Problem:&lt;/b&gt;&lt;br/&gt;
pig bag implementations that are subclasses of DefaultAbstractBag, have finalize methods implemented. As a result, the garbage collector moves them to a finalization queue, and the memory used is freed only after the finalization happens on it.&lt;br/&gt;
If the bags are not finalized fast enough, a lot of memory is consumed by the finalization queue, and pig runs out of memory. This can happen if large number of small bags are being created.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
The finalize function exists for the purpose of deleting the spill files that are created when the bag is too large. But if the bags are small enough, no spill files are created, and there is no use of the finalize function.&lt;br/&gt;
 A new class that holds a list of files will be introduced (FileList). This class will have a finalize method that deletes the files. The bags will no longer have finalize methods, and the bags will use FileList instead of ArrayList&amp;lt;File&amp;gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Possible workaround for earlier releases:&lt;/b&gt;&lt;br/&gt;
Since the fix is going into 0.8, here is a workaround -&lt;br/&gt;
Disabling the combiner will reduce the number of bags getting created, as there will not be the stage of combining intermediate merge results. But I would recommend disabling it only if you have this problem as it is likely to slow down the query .&lt;br/&gt;
To disable combiner, set the property: -Dpig.exec.nocombiner=true&lt;/p&gt;</description>
                <environment></environment>
        <key id="12470043">PIG-1516</key>
            <summary>finalize in bag implementations causes pig to run out of memory in reduce </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thejas">Thejas M Nair</assignee>
                                    <reporter username="thejas">Thejas M Nair</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Jul 2010 21:12:14 +0100</created>
                <updated>Fri, 17 Dec 2010 22:44:57 +0000</updated>
                            <resolved>Tue, 3 Aug 2010 18:44:46 +0100</resolved>
                                    <version>0.7.0</version>
                                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12891784" author="thejas" created="Fri, 23 Jul 2010 21:45:47 +0100"  >&lt;p&gt;Regarding the workaround - I would recommend disabling the combiner only if other steps such as increasing the heap size or increasing the number of reducers do not help.&lt;/p&gt;</comment>
                            <comment id="12892176" author="ankur" created="Mon, 26 Jul 2010 06:25:35 +0100"  >&lt;p&gt;The solution to have the finalize method AT ALL for the purpose of deleting files when object is garbage collected is NOT a good one. Generally speaking using finalizers to release non-memory resources like file handles should be avoided as it has an insidious bug. From the article on &quot;Object finalization and Cleanup&quot; - &lt;a href=&quot;http://www.javaworld.com/jw-06-1998/jw-06-techniques.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.javaworld.com/jw-06-1998/jw-06-techniques.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;Don&apos;t rely on finalizers to release non-memory resources&quot;&lt;/p&gt;

&lt;p&gt;An example of an object that breaks this rule is one that opens a file in its constructor and closes the file in its finalize() method. Although this design seems neat, tidy, and symmetrical, it potentially creates an insidious bug. A Java program generally will have only a finite number of file handles at its disposal. When all those handles are in use, the program won&apos;t be able to open any more files.  &lt;/p&gt;</comment>
                            <comment id="12892375" author="dvryaboy" created="Mon, 26 Jul 2010 18:17:19 +0100"  >&lt;p&gt;Another workaround for the meantime:&lt;/p&gt;

&lt;p&gt;One can introduce a SmallBagFactory that inherits from BagFactory and produces SmallBags which implement DataBag() without a finalize, and does not implement the file spilling behavior.  SmallBagFactory would return SmallBags when bagFactory.newDefaultBag() is called. Then, provide the system properties pig.data.bag.factory.name and pig.data.bag.factory.jar in pig.properties to point to the new classes. &lt;/p&gt;

&lt;p&gt;Naturally, one has to be certain that databags won&apos;t need to spill to disk when doing this...&lt;/p&gt;


&lt;p&gt;Ankur &amp;#8211; so what are you suggesting as a fix that avoids finalize? &lt;/p&gt;</comment>
                            <comment id="12892423" author="scott_carey" created="Mon, 26 Jul 2010 20:24:41 +0100"  >&lt;p&gt;You avoid finalize() by using a WeakReference. There is no situation that you can&apos;t substitute a weak reference for a finalizer, other than object resurrection which is a really bad idea.&lt;/p&gt;

&lt;p&gt;finalize() should be avoided for any case that might create many objects.  Its OK to ask the GC to deal with a small number of objects that themselves don&apos;t hold many resources.  Its bad form to use finalize() in any case where throughput is high or the object is potentially large.  It will kill performance and  thrash GC.&lt;/p&gt;

&lt;p&gt;Extend WeakReference and put the things you need to clean up in it as member variables. Those should also have a strong reference from the bag  the WeakReference should be strongly referenced from the Bag too.   When the Bag is GC&apos;d the objects of interest will no longer have any reference to them other than the WeakReference, and the WeakReference will no longer be strongly referenced.  The WeakReference will be placed onto a Queue of your choosing, and you can then process the queue and access the data required to do any cleanup. &lt;/p&gt;

&lt;p&gt;Unlike a finalizer, the actual object is released when GC happens and does not linger.  Only the WeakReference and what it holds onto remains, and you get notified (via the queue) when the object is gone.  Therefore, you have control over your resources and do not rely on the JVM to run the finalizer. &lt;/p&gt;

&lt;p&gt;I have seen performance improvements of ~10x due to moving high volume finalizers to a weak reference queue implementation, along with significantly lower memory consumption.&lt;/p&gt;</comment>
                            <comment id="12892556" author="thejas" created="Tue, 27 Jul 2010 01:13:45 +0100"  >&lt;p&gt;I haven&apos;t removed the use of finalize in this patch,  but with the patch the number of objects with finalize() method that get created should be much smaller, and if all the bags used in a query are small enough, there will not be any such objects created. &lt;br/&gt;
Even in case of large bags that spill to disk, since finalize() is not a method of the bags, the tuples in the bags can be freed by GC without waiting on finalization.&lt;br/&gt;
This should stop queries from running out of memory because of of the wait on finalize().&lt;/p&gt;

&lt;p&gt;The creation of spill files happens only if the bag is very large, and the processing of the tuples in those bags is likely to give enough time for the finalization thread to catch up. &lt;/p&gt;

&lt;p&gt;The changes - &lt;br/&gt;
1. As I proposed in the solution, the finalize has been removed from DefaultAbstractBag and its subclasses, and a FileList class with a finalize is used as container for the list of spill files.&lt;br/&gt;
2. Removed the finalize() method in InternalCachedBag.CachedBagIterator . It was used to call close on DataInputStream. The DataInputStream contains a FileInputStream which would have non-memory resources to be freed. But the FileInputStream already has a finalize() method, so the finalize() method in InternalCachedBag.CachedBagIterator is unnecessary.&lt;br/&gt;
3. In the bags that have code to pre-merge files when there are large number of spill files, the files that have been merged into larger files are deleted.&lt;/p&gt;


&lt;p&gt;Using WeakReferences as Scott suggested, we can get rid of the finalization completely. I have created a separate jira for that - &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1519&quot; title=&quot;Stop relying on finalize() to delete files, close filehandles in bag implementations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1519&quot;&gt;PIG-1519&lt;/a&gt; .&lt;/p&gt;</comment>
                            <comment id="12893439" author="thejas" created="Thu, 29 Jul 2010 01:17:54 +0100"  >&lt;p&gt;New patch with fix for findbugs warnings.&lt;br/&gt;
I have also run large queries that spill to disk to test the changes in handling of mSpillFiles. &lt;/p&gt;</comment>
                            <comment id="12893589" author="hadoopqa" created="Thu, 29 Jul 2010 12:45:34 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12450778/PIG-1516.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12450778/PIG-1516.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 980276.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 402 release audit warnings (more than the trunk&apos;s current 400 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    -1 contrib tests.  The patch failed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/364/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12894586" author="thejas" created="Mon, 2 Aug 2010 17:22:09 +0100"  >&lt;p&gt;The core and contrib tests pass on my machine.&lt;br/&gt;
The release audit warning is about javadoc html files.&lt;br/&gt;
Patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12894945" author="ashutoshc" created="Tue, 3 Aug 2010 18:16:39 +0100"  >&lt;p&gt;+1. Changes look good.&lt;/p&gt;</comment>
                            <comment id="12894954" author="thejas" created="Tue, 3 Aug 2010 18:44:46 +0100"  >&lt;p&gt;Committed to trunk.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12450778" name="PIG-1516.2.patch" size="17331" author="thejas" created="Thu, 29 Jul 2010 01:17:54 +0100"/>
                            <attachment id="12450540" name="PIG-1516.patch" size="15776" author="thejas" created="Tue, 27 Jul 2010 01:13:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Jul 2010 05:25:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164999</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyar9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96728</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>