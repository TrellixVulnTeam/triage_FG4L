<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:06:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3967/PIG-3967.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3967] Grunt fail if we running more statement after first store</title>
                <link>https://issues.apache.org/jira/browse/PIG-3967</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;We will hit output validation fail. The issue is caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3545&quot; title=&quot;Seperate validation rules from optimizer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3545&quot;&gt;&lt;del&gt;PIG-3545&lt;/del&gt;&lt;/a&gt;. We change PigServer.Graph.validateQuery() to invoke LogicalPlan.validate(), which will do the output validation. In Grunt mode, even after the first store, we will compile the entire statement cache, so the first store will be in the logical plan, validate on output fail. &lt;/p&gt;

&lt;p&gt;This makes datagenerator of Pigmix fail.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12717208">PIG-3967</key>
            <summary>Grunt fail if we running more statement after first store</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="daijy">Daniel Dai</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 May 2014 05:16:14 +0100</created>
                <updated>Mon, 7 Jul 2014 19:07:53 +0100</updated>
                            <resolved>Fri, 30 May 2014 01:29:12 +0100</resolved>
                                                    <fixVersion>0.13.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14012066" author="daijy" created="Thu, 29 May 2014 05:54:10 +0100"  >&lt;p&gt;Add test case.&lt;/p&gt;</comment>
                            <comment id="14012505" author="cheolsoo" created="Thu, 29 May 2014 17:32:47 +0100"  >&lt;ol&gt;
	&lt;li&gt;Can we avoid setting a boolean flag &lt;em&gt;before&lt;/em&gt; and &lt;em&gt;after&lt;/em&gt; validateQuery()? Why don&apos;t we set a boolean flag inside the Grunt constructor instead? Perhaps name it as &lt;tt&gt;inGrunt&lt;/tt&gt; since it might come handy for other purposes?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+                pigContext.inGruntValidation = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
                 validateQuery();
+                pigContext.inGruntValidation = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;The unit test fails for me-
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.pig.impl.plan.VisitorException: ERROR 6000:
&amp;lt;line 2, column 0&amp;gt; Output Location Validation Failed &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;: &apos;file:&lt;span class=&quot;code-comment&quot;&gt;///Users/cheolsoop/workspace/pig-apache/output More info to follow:
&lt;/span&gt;Output directory file:/Users/cheolsoop/workspace/pig-apache/output already exists
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; &lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14012508" author="cheolsoo" created="Thu, 29 May 2014 17:34:37 +0100"  >&lt;p&gt;Oh nevermind about #2. I had &lt;tt&gt;output&lt;/tt&gt; dir in my workspace...&lt;/p&gt;</comment>
                            <comment id="14012539" author="cheolsoo" created="Thu, 29 May 2014 18:01:30 +0100"  >&lt;p&gt;Actually, can you change &lt;tt&gt;output&lt;/tt&gt; to something like &lt;tt&gt;tempDir/testGruntValidation&lt;/tt&gt; in the test case? The &lt;tt&gt;tempDir&lt;/tt&gt; is deleted by &lt;tt&gt;TestPigServer.tearDown()&lt;/tt&gt;, so this seems better than create/delete &lt;tt&gt;output&lt;/tt&gt; in the pwd.&lt;/p&gt;

&lt;p&gt;When running the test more than one time, I found &lt;tt&gt;output&lt;/tt&gt; doesn&apos;t get cleaned if the test case fails. In fact, we should always clean it up.&lt;/p&gt;</comment>
                            <comment id="14012615" author="daijy" created="Thu, 29 May 2014 18:51:42 +0100"  >&lt;p&gt;Comment#1: the problem is even in Grunt mode, there are two different cases: validateQuery happens when replaying every statement in cache, in which we need to disable output validation; When the real LogicalPlan is constructed, it removes previous LOStore (Graph.skipStores), and after this, the output validation should happen. A flag in Grunt does not distinguish these two cases.&lt;/p&gt;

&lt;p&gt;Comment#2: Sure, I will change the test to use tempDir.&lt;/p&gt;</comment>
                            <comment id="14013125" author="cheolsoo" created="Fri, 30 May 2014 01:07:51 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;, thank you for the explanation. If that&apos;s the case, let&apos;s pass a boolean param to &lt;tt&gt;LogicalPlan.validate()&lt;/tt&gt;. So instead we can do the following-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/src/org/apache/pig/PigServer.java b/src/org/apache/pig/PigServer.java
index 0b2285e..d7ec664 100644
--- a/src/org/apache/pig/PigServer.java
+++ b/src/org/apache/pig/PigServer.java
@@ -1677,12 +1677,12 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class PigServer {
             }
         }

-        void validateQuery() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; FrontendException {
+        &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void validateQuery() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; FrontendException {
             &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; query = buildQuery();
             QueryParserDriver parserDriver = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; QueryParserDriver( pigContext, scope, fileNameMap );
             &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                 LogicalPlan plan = parserDriver.parse( query );
-                plan.validate(pigContext, scope);
+                plan.validate(pigContext, scope, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
             } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(FrontendException ex) {
                 scriptCache.remove( scriptCache.size() -1 );
                 &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; ex;
@@ -1741,7 +1741,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class PigServer {
         }

         &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void compile() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-            lp.validate(pigContext, scope);
+            lp.validate(pigContext, scope, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
             currDAG.postProcess();
         }

diff --git a/src/org/apache/pig/newplan/logical/relational/LogicalPlan.java b/src/org/apache/pig/newplan/logical/relational/LogicalPlan.java
index dbbd5d1..b753121 100644
--- a/src/org/apache/pig/newplan/logical/relational/LogicalPlan.java
+++ b/src/org/apache/pig/newplan/logical/relational/LogicalPlan.java
@@ -165,8 +165,9 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class LogicalPlan &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BaseOperatorPlan {

         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.toString(hos.getHashCode().asInt());
     }
-
-    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void validate(PigContext pigContext, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; scope) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; FrontendException {
+
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void validate(PigContext pigContext, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; scope, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; skipInputOutputValidation)
+            &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; FrontendException {

         &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DanglingNestedNodeRemover(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;).visit();
         &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ColumnAliasConversionVisitor(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;).visit();
@@ -204,7 +205,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class LogicalPlan &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BaseOperatorPlan {
         &lt;span class=&quot;code-comment&quot;&gt;// compute whether output data is sorted or not
&lt;/span&gt;         &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SortInfoSetter(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;).visit();

-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(pigContext.inExplain || pigContext.inDumpSchema)) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(skipInputOutputValidation || pigContext.inExplain || pigContext.inDumpSchema)) {
             &lt;span class=&quot;code-comment&quot;&gt;// Validate input/output file
&lt;/span&gt;             &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InputOutputFileValidatorVisitor(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, pigContext).visit();
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;My main concern is that if you set a boolean flag to true and false before and after a method call, it will make someone wonder about the logic. It certainly did to me.&lt;/p&gt;

&lt;p&gt;I can upload a patch that includes my suggestions. Let me know.&lt;/p&gt;</comment>
                            <comment id="14013131" author="cheolsoo" created="Fri, 30 May 2014 01:17:20 +0100"  >&lt;p&gt;Here is the patch that includes my both suggestions. Feel free to reject it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Verified that it passes the test case, and Grunt doesn&apos;t fail running more than one stores.&lt;/p&gt;</comment>
                            <comment id="14013144" author="daijy" created="Fri, 30 May 2014 01:29:12 +0100"  >&lt;p&gt;The suggested patch looks good to me. Thanks Cheolsoo!&lt;/p&gt;

&lt;p&gt;Patch committed to trunk and 0.13 branch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12719037">PIG-3991</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12647291" name="PIG-3967-1.patch" size="1919" author="daijy" created="Thu, 29 May 2014 05:17:06 +0100"/>
                            <attachment id="12647295" name="PIG-3967-2.patch" size="3673" author="daijy" created="Thu, 29 May 2014 05:54:10 +0100"/>
                            <attachment id="12647491" name="PIG-3967-suggestion.patch" size="5639" author="cheolsoo" created="Fri, 30 May 2014 01:17:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 May 2014 16:32:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>395412</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzpxn3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>395540</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>