<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:58:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3268/PIG-3268.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3268] Case statement support</title>
                <link>https://issues.apache.org/jira/browse/PIG-3268</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Currently, Pig has no support for case statement. To mimic it, users often use nested bincond operators. However, that easily becomes unreadable when there are multiple levels of nesting.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = LOAD &apos;1.txt&apos; USING PigStorage(&apos;,&apos;) AS (i:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;);
b = FOREACH a GENERATE (
    i % 3 == 0 ? &apos;3n&apos; : (i % 3 == 1 ? &apos;3n + 1&apos; : &apos;3n + 2&apos;)
);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This can be re-written much more nicely using case statement as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = LOAD &apos;1.txt&apos; USING PigStorage(&apos;,&apos;) AS (i:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;);
b = FOREACH a GENERATE (
    CASE i % 3
        WHEN 0 THEN &apos;3n&apos;
        WHEN 1 THEN &apos;3n + 1&apos;
        ELSE        &apos;3n + 2&apos;
    END
);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I propose that we implement case statement in the following manner:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Add built-in UDFs that take expressions as args. Take for example the aforementioned case statement, we can define a UDF such as &lt;tt&gt;builtInUdf(i % 3, 0, &apos;3n&apos;, 1, &apos;3n + 1&apos;, &apos;3n + 2&apos;)&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Add syntactical sugar for these built-in UDFs.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In fact, I burrowed this idea from &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-164&quot; title=&quot;Support CASE statement using GenericUDF&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-164&quot;&gt;&lt;del&gt;HIVE-164&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;One downside of this approach is that all the possible args schemas of these UDFs must be pre-computed. Specifically, we need to populate the full list of possible args schemas in &lt;tt&gt;EvalFunc.getArgToFuncMapping&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;In particular, since we obviously cannot support infinitely long args, it is necessary to impose a limit on the size of when branches. For now, I arbitrarily chose 50, but it can be easily changed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12641228">PIG-3268</key>
            <summary>Case statement support</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cheolsoo">Cheolsoo Park</assignee>
                                    <reporter username="cheolsoo">Cheolsoo Park</reporter>
                        <labels>
                    </labels>
                <created>Sun, 7 Apr 2013 04:12:17 +0100</created>
                <updated>Mon, 14 Oct 2013 17:46:31 +0100</updated>
                            <resolved>Thu, 18 Apr 2013 17:22:29 +0100</resolved>
                                    <version>0.11</version>
                                    <fixVersion>0.12.0</fixVersion>
                                    <component>internal-udfs</component>
                    <component>parser</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13624606" author="cheolsoo" created="Sun, 7 Apr 2013 04:17:38 +0100"  >&lt;p&gt;Attached is a patch that implements my proposal. I haven&apos;t added unit tests yet.&lt;/p&gt;

&lt;p&gt;Please let me know if anyone has an opinion. Thanks!&lt;/p&gt;</comment>
                            <comment id="13625566" author="cheolsoo" created="Mon, 8 Apr 2013 18:25:28 +0100"  >&lt;p&gt;Added unit tests.&lt;/p&gt;

&lt;p&gt;ReviewBoard request: &lt;a href=&quot;https://reviews.apache.org/r/10341/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/10341/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13627088" author="aniket486" created="Tue, 9 Apr 2013 21:49:43 +0100"  >&lt;p&gt;I spoke to Cheolsoo offline on the changes required. Cheolsoo can you upload the new patch when you are ready.&lt;/p&gt;</comment>
                            <comment id="13627422" author="cheolsoo" created="Wed, 10 Apr 2013 04:12:34 +0100"  >&lt;p&gt;Uploading the patch.&lt;/p&gt;

&lt;p&gt;I took a completely new approach after discussion with Aniket. Instead of using built-in UDFs, I am converting CASE statement to nested BinCondExpression in LogicalPlanGenerator. So there is no longer a limit on number of when branches.&lt;/p&gt;

&lt;p&gt;Thanks Aniket for the suggestion!&lt;/p&gt;</comment>
                            <comment id="13628163" author="cheolsoo" created="Wed, 10 Apr 2013 20:39:47 +0100"  >&lt;p&gt;I found an interesting bug in my patch. When I project case expression with column refs, the return value of case expression is incorrect. I am debugging it now. &lt;/p&gt;</comment>
                            <comment id="13628299" author="aniket486" created="Wed, 10 Apr 2013 22:42:13 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;-cheolsoo&amp;#93;&lt;/span&gt;, I think you need to construct your tree from left to right-&lt;br/&gt;
case c when c1 then e1 when c2 then e2 else e3 should be translated to (c=c1? e1 : (c=c2 ? e2 : e3)) instead of (c=c2 ? (c=c1 ? e1 : e3 ): e2)). case is evaluated from left to right (aka top to bottom). &lt;/p&gt;</comment>
                            <comment id="13628478" author="cheolsoo" created="Thu, 11 Apr 2013 01:15:02 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aniket486&quot; class=&quot;user-hover&quot; rel=&quot;aniket486&quot;&gt;Aniket Mokashi&lt;/a&gt;, thank you for your comment, but that&apos;s not my issue. In your example, I build (c=c2 ? e2 : (c=c1 ? e1 : e3)).&lt;/p&gt;

&lt;p&gt;Let me explain my issue with an example.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = LOAD &apos;1.txt&apos; USING PigStorage(&apos;,&apos;) AS (i:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;);
B = FOREACH A GENERATE i, ( -- Note I have an extra column &lt;span class=&quot;code-quote&quot;&gt;&quot;i&quot;&lt;/span&gt; besides CASE expression
    CASE (i % 3)
        WHEN 0 THEN &apos;3n&apos;
        WHEN 1 THEN &apos;3n+1&apos;
        ELSE        &apos;3n+2&apos;
    END
);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This fails with the following error:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.pig.backend.executionengine.ExecException: ERROR 0: Exception &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; executing [Mod (Name: Mod[&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;] - scope-9 Operator Key: scope-9) children: [[POProject (Name: Project[&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;][*] - scope-7 Operator Key: scope-7) children: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; at []], [ConstantExpression (Name: Constant(3) - scope-8 Operator Key: scope-8) children: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; at []]] at []]: java.lang.ClassCastException: org.apache.pig.data.BinSedesTuple cannot be &lt;span class=&quot;code-keyword&quot;&gt;cast&lt;/span&gt; to java.lang.&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When I compare explain of CASE against that of manually written nested bin operators, I can only see the following difference:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;CASE&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
|   |---Equal To[&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;] - scope-11
|   |   |
|   |   |---Mod[&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;] - scope-9
|   |   |   |
|   |   |   |---Project[&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;][*] - scope-7 &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; line
&lt;/span&gt;|   |   |   |
|   |   |   |---Constant(3) - scope-8
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Bincond&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
|   |---Equal To[&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;] - scope-11
|   |   |
|   |   |---Mod[&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;] - scope-9
|   |   |   |
|   |   |   |---Project[&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;][1] - scope-7 &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; line
&lt;/span&gt;|   |   |   |
|   |   |   |---Constant(3) - scope-8
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I am puzzled why &quot;i&quot; in &quot;(i % 3)&quot; is translated to &quot;Project&lt;span class=&quot;error&quot;&gt;&amp;#91;int&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;*&amp;#93;&lt;/span&gt;&quot; in CASE, whereas it is &quot;Project&lt;span class=&quot;error&quot;&gt;&amp;#91;int&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&quot; in nested bin operators.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13629610" author="cheolsoo" created="Fri, 12 Apr 2013 01:07:07 +0100"  >&lt;p&gt;The problem was that one LogicalExpression object (case expr) was shared by multiple BinCondExpression objects (when exprs).&lt;/p&gt;

&lt;p&gt;To fix it, I clone 1st expression following CASE token and insert it before every when expression in QueryParser. Then, I construct a new LogicalExpression object per BinCondExpression in LogicalPlanGenerator.&lt;/p&gt;

&lt;p&gt;In shorts,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
CASE e1
  WHEN e2 THEN e3
  WHEN e4 THEN e5
  ELSE e6
END
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=&amp;gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
^(CASE e1, e2, e3, e1, e4, e5, e6) &lt;span class=&quot;code-comment&quot;&gt;// Note that there are two e1&apos;s.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=&amp;gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
e1 == e4 ? e5 : (e1 == e2 ? e3 : e6)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I updated unit tests. I also verified that the explain output of case statement is identical to that of hand-written nested bincond expressions.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13635298" author="cheolsoo" created="Thu, 18 Apr 2013 17:21:20 +0100"  >&lt;p&gt;All unit tests pass. I rebased the patch and added WHEN, THEN, ELSE, and END to the whitelist. I am updating the patch for the record.&lt;/p&gt;</comment>
                            <comment id="13635302" author="cheolsoo" created="Thu, 18 Apr 2013 17:22:29 +0100"  >&lt;p&gt;Committed to trunk. Thank you Aniket for reviewing the patch!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12650526">PIG-3342</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12643272">PIG-3280</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12577572" name="PIG-3268-2.patch" size="47968" author="cheolsoo" created="Mon, 8 Apr 2013 18:25:28 +0100"/>
                            <attachment id="12577943" name="PIG-3268-3.patch" size="15379" author="cheolsoo" created="Wed, 10 Apr 2013 04:12:34 +0100"/>
                            <attachment id="12577946" name="PIG-3268-4.patch" size="15246" author="cheolsoo" created="Wed, 10 Apr 2013 04:49:10 +0100"/>
                            <attachment id="12578324" name="PIG-3268-5.patch" size="17141" author="cheolsoo" created="Fri, 12 Apr 2013 01:07:07 +0100"/>
                            <attachment id="12578334" name="PIG-3268-6.patch" size="17602" author="cheolsoo" created="Fri, 12 Apr 2013 02:43:03 +0100"/>
                            <attachment id="12579357" name="PIG-3268-7.patch" size="17668" author="cheolsoo" created="Thu, 18 Apr 2013 17:21:20 +0100"/>
                            <attachment id="12577424" name="PIG-3268.patch" size="25824" author="cheolsoo" created="Sun, 7 Apr 2013 04:17:38 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Apr 2013 20:49:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzdch3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321989</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Pig now supports CASE expression. It can be used in a place of any expression. For example,&lt;br/&gt;
bar = FOREACH foo GENERATE (&lt;br/&gt;
&amp;nbsp;&amp;nbsp;CASE i % 3&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHEN 0 THEN &amp;#39;3n&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHEN 1 THEN &amp;#39;3n+1&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ELSE &amp;#39;3n+2&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;END&lt;br/&gt;
);&lt;br/&gt;
&lt;br/&gt;
Note that CASE is now a reserved keyword, and thus, it can no longer be used as a name of column or field.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>