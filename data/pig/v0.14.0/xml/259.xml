<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:10:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-259/PIG-259.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-259] allow store to overwrite existing directroy</title>
                <link>https://issues.apache.org/jira/browse/PIG-259</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;we have users who are asking for a flag to overwrite existing directory&lt;/p&gt;</description>
                <environment></environment>
        <key id="12397706">PIG-259</key>
            <summary>allow store to overwrite existing directroy</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12436093">PIG-966</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nezihyigitbasi">Nezih Yigitbasi</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Fri, 6 Jun 2008 19:17:37 +0100</created>
                <updated>Mon, 7 Jul 2014 19:07:58 +0100</updated>
                            <resolved>Tue, 4 Feb 2014 20:01:41 +0000</resolved>
                                                    <fixVersion>0.13.0</fixVersion>
                                        <due></due>
                            <votes>3</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12603263" author="pi_song" created="Sat, 7 Jun 2008 02:20:39 +0100"  >&lt;p&gt;Can we just add &quot;FORCE_WRITE&quot; keyword? Is that appropriate?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
STORE X INTO &apos;/tmp/data1&apos; FORCE_WRITE ?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12603636" author="olgan" created="Mon, 9 Jun 2008 19:17:56 +0100"  >&lt;p&gt;I agree that it should be on per store basis so it should be attached to store command. Whether it should be FORCE_WRITE or OVERWRITE or another keyword, I don&apos;t have a strong opinion on.&lt;/p&gt;</comment>
                            <comment id="12829554" author="zjffdu" created="Thu, 4 Feb 2010 09:40:51 +0000"  >&lt;p&gt;I choose the keyword &quot;overwrite&quot; to indicate user want to overwrite the file.&lt;/p&gt;

&lt;p&gt;The following is the implementation details:&lt;br/&gt;
1. Add an variable isOverWrite in LOStore&lt;br/&gt;
2. In the InputOutputFileValidator, delete the destination file first if you use the &quot;overwrite&quot; keyword.&lt;/p&gt;
</comment>
                            <comment id="12829697" author="alangates" created="Thu, 4 Feb 2010 18:58:17 +0000"  >&lt;p&gt;A few comments and questions on this:&lt;/p&gt;

&lt;p&gt;1) We should make this work against the load/store branch instead of trunk.  We&apos;re hoping to merge load/store into trunk in a week or two, so it makes more sense to put it there.  This will also have implications for load/store.  One, it will need to communicate to the new validate function that it&apos;s ok if the file (or whatever is being overwritten) exists.  Two, load implementations will need to handle removing the file (or whatever) if necessary.  For example, PigStorage will need to handle removing the file so MR doesn&apos;t complain.&lt;/p&gt;

&lt;p&gt;2) Should we have overwrite be a keyword (as originally proposed and in the patch) or should it be string, like hints in join?  I don&apos;t have a strong opinion one way or another but I think it&apos;s worth considering which we want.&lt;/p&gt;

&lt;p&gt;3) Is the semantic of overwrite that it saves whether the file is there or not, or that it&apos;s an error if the file is not there to write?  Write whether there or not makes more sense to me, but I wanted to make sure we all agree on it.&lt;/p&gt;

&lt;p&gt;4) What happens when a user requests overwrite and the job fails before it runs?  In the current implementation the file will be removed up front, so any planning errors will still result in the file being removed.  Also, the file will be removed up front, even if the job remains in Hadoop&apos;s queue for a long time waiting to run.  At the very least, I think Pig should delay removing the file until it is ready to launch the job so that type checking errors or whatever don&apos;t result in the file being removed when the job is not run.&lt;/p&gt;</comment>
                            <comment id="12829728" author="hadoopqa" created="Thu, 4 Feb 2010 19:42:03 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12434801/Pig_259.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12434801/Pig_259.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 906326.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/192/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/192/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/192/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/192/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/192/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/192/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12829981" author="zjffdu" created="Fri, 5 Feb 2010 06:58:43 +0000"  >&lt;p&gt;Response to Alan regarding his comments,&lt;/p&gt;

&lt;p&gt;1. I put the logic of deleting output file in JobControlCompiler, then it is easy for me to delay the deletion util the dependent job is done.&lt;/p&gt;

&lt;p&gt;2. I prefer using keywords rather than string, because if using string, the following statement: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; store a into &apos;output&apos; &apos;overwrite&apos;; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  has two consecutive string, it looks a little weird in my opinion.&lt;/p&gt;

&lt;p&gt;3. I think the semantic of overwrite is the same as it is in file system. In file system, when we overwrite file using java api, it won&apos;t complain even the file does not exist&lt;/p&gt;
</comment>
                            <comment id="12829982" author="zjffdu" created="Fri, 5 Feb 2010 07:00:09 +0000"  >&lt;p&gt;Alan,&lt;/p&gt;

&lt;p&gt;Should I create a new sub task under Pig-966 ? or is there any way to move this task under Pig-966 ?&lt;/p&gt;</comment>
                            <comment id="12830161" author="alangates" created="Fri, 5 Feb 2010 16:48:04 +0000"  >&lt;p&gt;Changes look good.  This patch is still against trunk.  Was your plan to apply this to trunk and then provide a different patch for load/store redesign or just to take this patch and change it to work against load/store?  I think the latter is better, as it avoids the need to undo this patch when we merge in load/store.  If you want to be able to apply the patch now to trunk (without checking it in) we can still leave your existing patch on this JIRA and only commit a patch against load/store redesign.&lt;/p&gt;

&lt;p&gt;As for attaching this to load/store, you can click on the edit link on the left side and this will take you to a page where you can make it a sub-task of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-966&quot; title=&quot;Proposed rework for LoadFunc, StoreFunc, and Slice/r interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-966&quot;&gt;&lt;del&gt;PIG-966&lt;/del&gt;&lt;/a&gt;.  (You may not have had this edit link before, as I had forgotten to add you to the list of committers on JIRA.  I fixed that, so you should see the link now.)&lt;/p&gt;</comment>
                            <comment id="12830170" author="zjffdu" created="Fri, 5 Feb 2010 17:11:10 +0000"  >&lt;p&gt;Thanks, Alan. I have moved it under Pig-966. And the new patch is for load-store-redesign branch not for trunk.&lt;/p&gt;</comment>
                            <comment id="12831205" author="alangates" created="Tue, 9 Feb 2010 00:14:14 +0000"  >&lt;p&gt;Sorry, I missed that it was already for load-store redesign.&lt;/p&gt;

&lt;p&gt;In the new load/store scheme we can&apos;t assume that outputs are files.  So putting a DFS remove statement into JobControlCompiler won&apos;t be the right way to do this.  What does overwrite mean when we&apos;re storing to HBase instead of DFS?  It seems that this needs to be defined on the per store function basis, which implies it needs to somehow be part of the store function interface.  This could be done by adding a boolean to validate or by adding a new method to the StoreFunc interface to overwrite.&lt;/p&gt;
</comment>
                            <comment id="12831212" author="dvryaboy" created="Tue, 9 Feb 2010 00:20:48 +0000"  >&lt;p&gt;Doesn&apos;t the StoreFunc take care of resource creation/validation in LSR?&lt;br/&gt;
If so, no new method is needed (since as you say, what exactly it means is indeterminate). StoreFuncs that want to can use initialization variables to determine their behavior (eg: store into &apos;/my/path&apos; using PigStorage(&apos;\t&apos;, &apos;-overwrite:true, -writeHeader:true, -writeSchema:false&apos;);&lt;/p&gt;</comment>
                            <comment id="12831222" author="alangates" created="Tue, 9 Feb 2010 00:45:57 +0000"  >&lt;p&gt;If we make overwrite part of the language (as the JIRA proposes and Jeff&apos;s patch implements) then we need to make it part of the interface, at least to inform the store func that overwrite was set.  Are you suggesting that individual store funcs that want to support overwrite instead support it as an argument and not make it a part of the language?&lt;/p&gt;</comment>
                            <comment id="12831237" author="dvryaboy" created="Tue, 9 Feb 2010 01:07:26 +0000"  >&lt;p&gt;Yeah I think it makes more sense on that level.&lt;br/&gt;
I think it&apos;s worth our while to add it to PigStorage and any other built-in engines though.&lt;br/&gt;
Otherwise it&apos;s not clear what the overwrite keyword means. If it&apos;s HBase, does it mean drop the table and overwrite? Or delete old values when there is an old confilct? Does that mean we don&apos;t delete them otherwise? What about appends? &lt;/p&gt;

&lt;p&gt;This request made more sense when Pig maintained strong control over file creation and such, but now that it&apos;s pushed into IOFormats, I think it&apos;s ok to push this functionality there as well.&lt;/p&gt;

&lt;p&gt;It&apos;s just a lot of stuff I think we don&apos;t want to be in the business of creating interfaces for. Different storage engines have different options for what they can and can&apos;t do.&lt;/p&gt;</comment>
                            <comment id="12831481" author="zjffdu" created="Tue, 9 Feb 2010 15:11:09 +0000"  >&lt;p&gt;Response to Alan,&lt;/p&gt;

&lt;p&gt;I agree that it makes more sense to do the overwrite in StoreFunc, and I notice that there&apos;s a JIAR &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1216&quot; title=&quot;New load store design does not allow Pig to validate inputs and outputs up front&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1216&quot;&gt;&lt;del&gt;PIG-1216&lt;/del&gt;&lt;/a&gt; which is related with this.&lt;/p&gt;
</comment>
                            <comment id="12831484" author="zjffdu" created="Tue, 9 Feb 2010 15:18:21 +0000"  >&lt;p&gt;Response to Dmitriy,&lt;/p&gt;

&lt;p&gt;Thanks for your suggestion of implementing overwrite on the StoreFunc level rather than on language level. I can bug in this. AndI think another advantage of putting it in StoreFunc is that it&apos;s more flexible than putting it in language. We have more control on StoreFunc than pig latin. &lt;/p&gt;
</comment>
                            <comment id="12831487" author="zjffdu" created="Tue, 9 Feb 2010 15:23:13 +0000"  >&lt;p&gt;Sorry, I mean I can buy in your suggestion.&lt;/p&gt;</comment>
                            <comment id="12831628" author="olgan" created="Tue, 9 Feb 2010 19:52:09 +0000"  >&lt;p&gt;+1 on passing the information in the constructor. Since we need the store function to to the validation, we don&apos;t have control over the semantics and it is better not to have constructs in the language whose semantics are not well defined.&lt;/p&gt;

&lt;p&gt;One thing we need to provide to the store function writer is guidence on when the information they get in the constructor can be acted on. &lt;/p&gt;</comment>
                            <comment id="12838224" author="zjffdu" created="Thu, 25 Feb 2010 07:38:10 +0000"  >&lt;p&gt;This patch is for trunk (since LSRD has already been merged into trunk). &lt;/p&gt;

&lt;p&gt;I&apos;ve put the overwrite logic into StoreFuncInterface. Add two methods &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isOverWrite();
    
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void deleteOldOutput(POStore store, PigContext context) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The second parameter of PigStorage is for overwrite option. It can be &apos;overwrite&apos; or &apos;force_write&apos;. Both is OK.&lt;/p&gt;</comment>
                            <comment id="12838321" author="hadoopqa" created="Thu, 25 Feb 2010 12:22:35 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12436962/Pig_259_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12436962/Pig_259_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 916065.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/221/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/221/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/221/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/221/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/221/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/221/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12838355" author="zjffdu" created="Thu, 25 Feb 2010 14:32:12 +0000"  >&lt;p&gt;Refine the patch.&lt;br/&gt;
1. resolve the warning of javadoc and findbug&lt;br/&gt;
2. method refactoring, refactor method &quot;deleteOldOutput&quot; to &quot;cleanupOutput&quot; in StoreFuncInterface&lt;/p&gt;</comment>
                            <comment id="12838430" author="alangates" created="Thu, 25 Feb 2010 17:20:20 +0000"  >&lt;p&gt;Based on comments from Dmitry, Olga, and you above I thought there was agreement that this should be store function specific, and not part of the interface.  So changes to PigStorage to allow a second constructor arg that means overwrite would be good.  But your latest patch returns to changes to the interface.  Did you decide against doing it inside specific store functions?  If so, why?&lt;/p&gt;</comment>
                            <comment id="12838656" author="zjffdu" created="Fri, 26 Feb 2010 01:09:47 +0000"  >&lt;p&gt;Alan,&lt;/p&gt;

&lt;p&gt;In the patch I created a PigStorage constructor with a second argument indicate whether to overwrite. And the reason I change the StoreFuncInterface is that I&apos;d like the users who want to create customized StoreFunc has the option to support overwrite.&lt;/p&gt;

&lt;p&gt;Besides I need the overwrite information in InputOutputFileVisitor and JobControlCompiler, But in these two classes I only can get StoreFuncInterface. One way to work around is to check the class whether it is PigStorage, and then cast it to PigStorage, but it seems to me not so friendly and extensible. &lt;/p&gt;</comment>
                            <comment id="12839737" author="hadoopqa" created="Mon, 1 Mar 2010 16:24:15 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12437000/Pig_259_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12437000/Pig_259_4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 916793.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/216/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/216/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12839887" author="alangates" created="Mon, 1 Mar 2010 22:14:04 +0000"  >&lt;p&gt;Thanks for the explanation, now I understand what you&apos;re doing.  I&apos;d like to make one more suggestion.  Could we do this in a separate interface that store functions could choose to implement?  One of our goals with &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-966&quot; title=&quot;Proposed rework for LoadFunc, StoreFunc, and Slice/r interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-966&quot;&gt;&lt;del&gt;PIG-966&lt;/del&gt;&lt;/a&gt; was to make the easy case of store functions easy, and put less commonly used features in separate interfaces.  This way implementing a new store function is less of a burden.  So could we add an interface like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; OverwritingLoadFunc {

    
    /**
     * whether the implementation support overwrite
     * 
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isOverWrite();
    
    /**
     * cleanup the old output &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you want to overwrite
     * 
     * @param store, the store information you would like to delete
     * @param context, used &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; deletion operation
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void cleanupOutput(POStore store, PigContext context) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, I&apos;m guessing your cleanupOutput method will need a Job and a store location (like the recently added cleanupOnFailure call, see &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1265&quot; title=&quot;Change LoadMetadata and StoreMetadata to use Job instead of Configuraiton and add a cleanupOnFailure method to StoreFuncInterface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1265&quot;&gt;&lt;del&gt;PIG-1265&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="12839926" author="olgan" created="Mon, 1 Mar 2010 23:53:51 +0000"  >&lt;p&gt;I am wondering if this is an issue we need to resolve in Pig at all. Openning new interfaces is costly and something we would need to maintain for a long time. Are the use cases strong enough to pay the cost?&lt;/p&gt;</comment>
                            <comment id="12840178" author="zjffdu" created="Tue, 2 Mar 2010 14:29:32 +0000"  >&lt;p&gt;I also think it make sense to have the StoreFuncInterface contain the overwriting interface. For users it is easy to understand the interface and easy to maintenance.&lt;/p&gt;</comment>
                            <comment id="12840703" author="zjffdu" created="Wed, 3 Mar 2010 15:46:27 +0000"  >&lt;p&gt;Actually I have different thoughts about the class hierarchy structure of LoadFunc and StoreFunc, I will attach some diagram to illustrate my idea int Pig-966 later.&lt;/p&gt;</comment>
                            <comment id="12863469" author="olgan" created="Mon, 3 May 2010 19:49:46 +0100"  >&lt;p&gt;Jeff, are you still planning to work on this issue for 0.8.0 release or should we unlink it?&lt;/p&gt;</comment>
                            <comment id="12891792" author="olgan" created="Fri, 23 Jul 2010 21:57:23 +0100"  >&lt;p&gt;Unlinking since there is no activity since early may. Jeff, please, feel free to link in if you still planning to work on it for 0.8 release&lt;/p&gt;</comment>
                            <comment id="12892621" author="zjffdu" created="Tue, 27 Jul 2010 03:56:30 +0100"  >&lt;p&gt;Olga, Sorry, I am afraid I have no time to commit this issue before the release of 0.8. I move it to 0.9&lt;/p&gt;</comment>
                            <comment id="12993761" author="olgan" created="Fri, 11 Feb 2011 23:30:53 +0000"  >&lt;p&gt;Jeff, are you still planning to work on this for 0.9?&lt;/p&gt;</comment>
                            <comment id="12993881" author="zjffdu" created="Sat, 12 Feb 2011 11:07:02 +0000"  >&lt;p&gt;Yes, I will attach the patch for the latest trunk asap&lt;/p&gt;</comment>
                            <comment id="13001661" author="olgan" created="Wed, 2 Mar 2011 21:25:25 +0000"  >&lt;p&gt;Hi Jeff, It has been a couple of weeks so I just wanted to check with you on this. We would really like to get all new features on in the next couple of weeks to leave sufficient time for testing before the release. Let me know if you still want to keep it attached to 0.9 release&lt;/p&gt;</comment>
                            <comment id="13016530" author="olgan" created="Wed, 6 Apr 2011 21:57:38 +0100"  >&lt;p&gt;Unlinking from the release since there is no activities and we are moving to the stabilization part of the release&lt;/p&gt;</comment>
                            <comment id="13454218" author="azaroth" created="Wed, 12 Sep 2012 19:33:58 +0100"  >&lt;p&gt;Canceling because the patch is stale and there has been no activity in 1 year.&lt;/p&gt;</comment>
                            <comment id="13889066" author="nezihyigitbasi" created="Sun, 2 Feb 2014 21:28:01 +0000"  >&lt;p&gt;Seems like no one is working on this, so I assigned this task to myself and gave it a shot. Following Alan&apos;s comments I introduced a new OverwritingStoreFunc interface, added additional unit tests and all tests pass now. Can you guys please review?&lt;/p&gt;</comment>
                            <comment id="13890029" author="daijy" created="Mon, 3 Feb 2014 22:37:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nezihyigitbasi&quot; class=&quot;user-hover&quot; rel=&quot;nezihyigitbasi&quot;&gt;Nezih Yigitbasi&lt;/a&gt;, thanks for the patch. Couple of comments:&lt;br/&gt;
1. Formatting: please use 4 space instead of tab&lt;br/&gt;
2. TestPigStorage.java: PigStorage(&apos;,&apos;, &apos;&amp;#45;overwrite true&apos;) =&amp;gt; PigStorage(&apos;,&apos;, &apos;--overwrite true&apos;), -long_option only works in older version of common-cli&lt;br/&gt;
3. InputOutputFileValidator.java: I get a org.apache.hadoop.fs.FileAlreadyExistsException instead of org.apache.hadoop.mapred.FileAlreadyExistsException in Hadoop 2&lt;br/&gt;
4. PigOutputFormat.java: Seems we already did the cleanup in JobControlCompiler, any reason do it again here?&lt;/p&gt;</comment>
                            <comment id="13890098" author="nezihyigitbasi" created="Mon, 3 Feb 2014 23:21:59 +0000"  >&lt;p&gt;Daniel,&lt;br/&gt;
Thanks for the feedback.&lt;br/&gt;
1. Updated formatting.&lt;br/&gt;
2. Updated.&lt;br/&gt;
3. Updated and made sure that unit tests also pass with -Dhadoopversion=23&lt;br/&gt;
4. We do not do cleanup here. What we do is check whether store func is an OverwritingStoreFunc and decide whether we should call checkOutputSpecs. checkOutputSpecs() call fails when the directory already exists, that&apos;s why we need to bypass that check for OverwritingStoreFunc.&lt;/p&gt;</comment>
                            <comment id="13890971" author="daijy" created="Tue, 4 Feb 2014 18:24:44 +0000"  >&lt;p&gt;Thanks for the update. Another several comments:&lt;br/&gt;
1. PigOutputFormat.java: Remove &quot;PigStorage ps = (PigStorage) sFunc;&quot;, we cannot assume sFunc is PigStorage&lt;br/&gt;
2. InputOutputFileValidator.java: Shall we skip checkOutputSpecs when overwrite happens? There is nothing wrong to capture FileAlreadyExistsException exception, but since you skip checkOutputSpecs in PigOutputFormat, it seems better to do it consistently&lt;br/&gt;
3. Another tab in PigStorage.java: &quot;protected ResourceSchema schema&quot;&lt;/p&gt;</comment>
                            <comment id="13891051" author="nezihyigitbasi" created="Tue, 4 Feb 2014 19:19:10 +0000"  >&lt;p&gt;Daniel,&lt;br/&gt;
Thanks for the comments.&lt;br/&gt;
1. Good catch.&lt;br/&gt;
2. Updated PigOutputFormat to be consistent with InputOutputFileValidator. Both do checks now.&lt;br/&gt;
3. Fixed.&lt;/p&gt;</comment>
                            <comment id="13891117" author="daijy" created="Tue, 4 Feb 2014 20:01:41 +0000"  >&lt;p&gt;Also add some comment to OverwritingStoreFunc. +1.&lt;/p&gt;

&lt;p&gt;Patch committed to trunk. Thanks Nezih!&lt;/p&gt;</comment>
                            <comment id="13891145" author="nezihyigitbasi" created="Tue, 4 Feb 2014 20:15:04 +0000"  >&lt;p&gt;Daniel, one question. Do you think the isOverwrite() method in the OverwritingStoreFunc interface necessary? If a store func. implements this interface it is very likely that it will return true in isOverwrite(). Maybe we should remove that method, what do you think?&lt;/p&gt;</comment>
                            <comment id="13891158" author="daijy" created="Tue, 4 Feb 2014 20:25:32 +0000"  >&lt;p&gt;Yes, good point. Let&apos;s remove the method to keep interface simpler.&lt;/p&gt;</comment>
                            <comment id="13891263" author="nezihyigitbasi" created="Tue, 4 Feb 2014 21:50:19 +0000"  >&lt;p&gt;When I removed the isOverwritable method tests failed. Because, the user tells us whether to overwrite or not, and using that flag we determine to catch file not found problems during validation. That is, implementing the interface is not enough to catch file not found problems during validation (user says &quot;-overwrite false&quot; but we only check whether PigStorage implements the OverwritingStoreFunc and ignore his input), so we need a flag that tells us user&apos;s input. To make the intent clearer I changed the name of OverwritingStoreFunc to OverwritableStoreFunc and changed the name of the method from &quot;isOverwrite&quot; to &quot;shouldOverwrite&quot;, also added some javadoc.&lt;/p&gt;</comment>
                            <comment id="13891303" author="daijy" created="Tue, 4 Feb 2014 22:21:03 +0000"  >&lt;p&gt;Sounds good. Since the patch is committed, can you upload the delta patch?&lt;/p&gt;</comment>
                            <comment id="13891345" author="nezihyigitbasi" created="Tue, 4 Feb 2014 22:52:11 +0000"  >&lt;p&gt;Daniel, delta patch added. Thanks for the review.&lt;/p&gt;</comment>
                            <comment id="13891440" author="daijy" created="Tue, 4 Feb 2014 23:43:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-259&quot; title=&quot;allow store to overwrite existing directroy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-259&quot;&gt;&lt;del&gt;PIG-259&lt;/del&gt;&lt;/a&gt;.9.patch committed. Thanks Nezih!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12626563" name="PIG-259.5.patch" size="15085" author="nezihyigitbasi" created="Sun, 2 Feb 2014 21:28:01 +0000"/>
                            <attachment id="12626775" name="PIG-259.6.patch" size="15324" author="nezihyigitbasi" created="Mon, 3 Feb 2014 23:26:22 +0000"/>
                            <attachment id="12626940" name="PIG-259.7.patch" size="15587" author="nezihyigitbasi" created="Tue, 4 Feb 2014 19:19:10 +0000"/>
                            <attachment id="12626986" name="PIG-259.8.patch" size="16308" author="nezihyigitbasi" created="Tue, 4 Feb 2014 21:50:19 +0000"/>
                            <attachment id="12627007" name="PIG-259.9.patch" size="10849" author="nezihyigitbasi" created="Tue, 4 Feb 2014 22:52:11 +0000"/>
                            <attachment id="12434801" name="Pig_259.patch" size="7463" author="zjffdu" created="Thu, 4 Feb 2010 09:40:51 +0000"/>
                            <attachment id="12434933" name="Pig_259_2.patch" size="12456" author="zjffdu" created="Fri, 5 Feb 2010 06:48:57 +0000"/>
                            <attachment id="12436962" name="Pig_259_3.patch" size="11640" author="zjffdu" created="Thu, 25 Feb 2010 07:39:48 +0000"/>
                            <attachment id="12437000" name="Pig_259_4.patch" size="11906" author="zjffdu" created="Thu, 25 Feb 2010 14:32:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 7 Jun 2008 01:20:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>163904</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaclz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94354</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>