<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:01:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-774/PIG-774.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-774] Pig does not handle Chinese characters (in both the parameter subsitution using -param_file or embedded in the Pig script) correctly</title>
                <link>https://issues.apache.org/jira/browse/PIG-774</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;I created a very small test case in which I did the following.&lt;/p&gt;

&lt;p&gt;1) Created a UTF-8 file which contained a query string in Chinese and wrote it to HDFS. I used this dfs file as an input for the tests.&lt;br/&gt;
2) Created a parameter file which also contained the same query string as in Step 1.&lt;br/&gt;
3) Created a Pig script which takes in the parametrized query string and hard coded Chinese character.&lt;br/&gt;
================================================================&lt;br/&gt;
Pig script: chinese_data.pig&lt;br/&gt;
================================================================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
rmf chineseoutput;
I = load &apos;/user/viraj/chinese.txt&apos; using PigStorage(&apos;\u0001&apos;);

J = filter I by $0 == &apos;$querystring&apos;;
--J = filter I by $0 == &apos; &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&apos;;

store J into &apos;chineseoutput&apos;;
dump J;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=================================================================&lt;/p&gt;

&lt;p&gt;Parameter file: nextgen_paramfile&lt;br/&gt;
=================================================================&lt;br/&gt;
queryid=20090311&lt;br/&gt;
querystring=&apos;   &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&apos;&lt;br/&gt;
=================================================================&lt;/p&gt;

&lt;p&gt;Input file: /user/viraj/chinese.txt&lt;br/&gt;
=================================================================&lt;br/&gt;
shell$ hadoop fs -cat /user/viraj/chinese.txt&lt;br/&gt;
        &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&lt;br/&gt;
=================================================================&lt;/p&gt;

&lt;p&gt;I ran the above set of inputs in the following ways:&lt;/p&gt;

&lt;p&gt;Run 1:&lt;br/&gt;
=================================================================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -cp pig.jar:/home/viraj/hadoop-0.18.0-dev/conf/ -Dhod.server=&apos;&apos; org.apache.pig.Main -param_file nextgen_paramfile chinese_data.pig
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=================================================================&lt;br/&gt;
2009-04-22 01:31:35,703 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-7&amp;#93;&lt;/span&gt; WARN  org.apache.hadoop.mapred.JobClient - Use GenericOptionsParser for parsing the&lt;br/&gt;
arguments. Applications should implement Tool for the same.&lt;br/&gt;
2009-04-22 01:31:40,700 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher -&lt;br/&gt;
0% complete&lt;br/&gt;
2009-04-22 01:31:50,720 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher -&lt;br/&gt;
100% complete&lt;br/&gt;
2009-04-22 01:31:50,720 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher -&lt;br/&gt;
Success!&lt;br/&gt;
=================================================================&lt;/p&gt;

&lt;p&gt;Run 2: removed the parameter substitution in the Pig script instead used the following statement.&lt;br/&gt;
=================================================================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
J = filter I by $0 == &apos; &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=================================================================&lt;br/&gt;
java -cp pig.jar:/home/viraj/hadoop-0.18.0-dev/conf/ -Dhod.server=&apos;&apos; org.apache.pig.Main chinese_data_withoutparam.pig&lt;br/&gt;
=================================================================&lt;br/&gt;
2009-04-22 01:35:22,402 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-7&amp;#93;&lt;/span&gt; WARN  org.apache.hadoop.mapred.JobClient - Use GenericOptionsParser for parsing the&lt;br/&gt;
arguments. Applications should implement Tool for the same.&lt;br/&gt;
2009-04-22 01:35:27,399 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher -&lt;br/&gt;
0% complete&lt;br/&gt;
2009-04-22 01:35:32,415 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher -&lt;br/&gt;
100% complete&lt;br/&gt;
2009-04-22 01:35:32,415 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher -&lt;br/&gt;
Success!&lt;br/&gt;
=================================================================&lt;/p&gt;

&lt;p&gt;In both cases:&lt;br/&gt;
=================================================================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
shell $ hadoop fs -ls /user/viraj/chineseoutput
Found 2 items
drwxr-xr-x   - viraj supergroup          0 2009-04-22 01:37 /user/viraj/chineseoutput/_logs
-rw-r--r--   3 viraj supergroup          0 2009-04-22 01:37 /user/viraj/chineseoutput/part-00000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=================================================================&lt;/p&gt;

&lt;p&gt;Additionally tried the dry-run option to figure out if the parameter substitution was occurring properly.&lt;br/&gt;
=================================================================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -cp pig.jar:/home/viraj/hadoop-0.18.0-dev/conf/ -Dhod.server=&apos;&apos; org.apache.pig.Main -param_file nextgen_paramfile -r chinese_data.pig
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=================================================================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
shell$ file chinese_data.pig.substituted 
chinese_data.pig.substituted: ASCII text
shell$ cat chinese_data.pig.substituted 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
rmf chineseoutput;
I = load &apos;/user/viraj/chinese.txt&apos; using PigStorage(&apos;\u0001&apos;);

J = filter I by $0 == &apos; ??????  ??????????????????????????????&apos;;

store J into &apos;chineseoutput&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;=================================================================&lt;br/&gt;
This issue has to do with the parser not handling UTF-8 data. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12423432">PIG-774</key>
            <summary>Pig does not handle Chinese characters (in both the parameter subsitution using -param_file or embedded in the Pig script) correctly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="viraj">Viraj Bhat</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Apr 2009 03:43:11 +0100</created>
                <updated>Wed, 24 Mar 2010 22:10:57 +0000</updated>
                            <resolved>Mon, 18 May 2009 20:09:36 +0100</resolved>
                                    <version>0.0.0</version>
                                    <fixVersion>0.3.0</fixVersion>
                                    <component>grunt</component>
                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12701359" author="viraj" created="Wed, 22 Apr 2009 03:51:49 +0100"  >&lt;p&gt;Input file, Pig Script and Parameter File&lt;/p&gt;</comment>
                            <comment id="12702445" author="alangates" created="Fri, 24 Apr 2009 18:05:54 +0100"  >&lt;p&gt;Two lines of change are needed to fix this:&lt;br/&gt;
1. In QueryParser.jjt, introduce a new option for handling unicode&lt;br/&gt;
2. In the LogicalPlanBuilder, use the getBytes method with the UTF-8&lt;br/&gt;
charset&lt;/p&gt;

&lt;p&gt;These changes also need to be propagated to the remaining&lt;br/&gt;
JavaCC parsers.  Then testing will need to be done.  Estimate 3-5 days of work.&lt;/p&gt;

&lt;p&gt;Reference:&lt;br/&gt;
&lt;a href=&quot;http://www.xrce.xerox.com/competencies/content-analysis/tools/publis/javacc_unicode.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.xrce.xerox.com/competencies/content-analysis/tools/publis/javacc_unicode.pdf&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12702533" author="ciemo" created="Fri, 24 Apr 2009 21:31:17 +0100"  >&lt;p&gt;A somewhat related bug is JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-755&quot; title=&quot;Difficult to debug parameter substitution problems based on the error messages when running in local mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-755&quot;&gt;&lt;del&gt;PIG-755&lt;/del&gt;&lt;/a&gt; - the difficulty of debugging issues related to passed parameters.&lt;/p&gt;

&lt;p&gt;If Pig produced an output file of the code with parameter substitutions made, we could have more rapidly isolated the problem.&lt;/p&gt;</comment>
                            <comment id="12702538" author="sms" created="Fri, 24 Apr 2009 21:40:48 +0100"  >&lt;p&gt;In order to obtain the substituted pig script use the -dryrun switch. By default, the substituted pig script is not stored on disk.&lt;/p&gt;</comment>
                            <comment id="12702620" author="viraj" created="Sat, 25 Apr 2009 00:31:35 +0100"  >&lt;p&gt;One workaround for this issue is using the FilterFunc, which reads its filter list from a file written on HDFS.&lt;/p&gt;

&lt;p&gt;Care has to be taken in the FilterFunc UDF, to invoke the BufferedReader to read UTF8 data.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class FILTERFROMFILE &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; FilterFunc{
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; FilterListFileName = &quot;&quot;;
   
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void init() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {

     Properties props = ConfigurationUtil.toProperties(PigInputFormat.sJob);
     InputStream is = FileLocalizer.openDFSFile(FilterListFileName, props);
     BufferedReader reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(is,&lt;span class=&quot;code-quote&quot;&gt;&quot;UTF8&quot;&lt;/span&gt;));
   
   }

   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt; exec(Tuple input) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        init();
        &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; the matching here
&lt;/span&gt;        
   }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pig code to instantiate the filter function UDF&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
register pigudf/myfilterfunc.jar;

define MATCHQUERY FILTERFROMFILE(&apos;/user/viraj/chinesedata&apos;);

rmf chineseoutput;

I = load &apos;/user/viraj/testchinese&apos; using PigStorage(&apos;\u0001&apos;) as (teststring:chararray);

J = filter I by MATCHQUERY(teststring);

store J into &apos;chineseoutput&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12702621" author="viraj" created="Sat, 25 Apr 2009 00:33:42 +0100"  >&lt;p&gt;Ciemo, as stated in the original problem description there is a  &apos;-r&apos; switch for achieving the same.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -cp pig.jar:/home/viraj/hadoop-0.18.0-dev/conf/ -Dhod.server=&apos;&apos; org.apache.pig.Main -param_file nextgen_paramfile -r chinese_data.pig
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12702656" author="daijy" created="Sat, 25 Apr 2009 07:16:52 +0100"  >&lt;p&gt;As Alan said, adding option to QueryParser.jjt and ParamLoader.jj will do the trick. Probably we do not need to hardcode &quot;UTF8&quot; into getBytes. If the OS encoding is UTF8 (LANG=UTF-8), getBytes generates byte array using OS encoding, which is UTF8. If the OS is native encoding (LANG=GB2312), getBytes generate byte array of native encoding, then JavaCharStream will interpret the input stream as native encoding also, so everything goes fine.&lt;/p&gt;

&lt;p&gt;One thing I want to point out. On UTF8 OS, everything is perfect. However, on legacy system with native encoding, PigStorage treats all input/output file UTF8, which is reasonable because all data files come from or go to hadoop backend for which UTF8 is highly desired. However, these input/output files cannot be read by &quot;vi&quot; on OS with native encoding. Most applications (eg: vi, cat) interpret input file using OS encoding. In addition, if we do a Pig dump on such OS, we will see UTF8 output stream which is messy. Script files and parameter files are local and most users will use vi to edit. We shall interpret script files and parameter files as OS encoding. &lt;/p&gt;

&lt;p&gt;utf8_parser-1.patch is a preliminary patch. Viraj, can you give a try?&lt;/p&gt;

&lt;p&gt;Also we need to fix jline. It does not deal with multibyte characters well now.&lt;/p&gt;</comment>
                            <comment id="12703007" author="daijy" created="Mon, 27 Apr 2009 08:04:15 +0100"  >&lt;p&gt;Currently Jline does not handle backspace correctly for multibyte characters. When we hit backspace in a UTF8 encoding OS, only partial character will be deleted. If the OS encoding is native, the situation is even worse, Jline will throw an exception for multibyte character entered. This problem is inherent in Jline and all applications utilize JLine share this problem. I will try to fix it in Jline, however, fixing this problem is out of the scope of Pig. So currently, we will have to live with these problem:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Multibyte character inputing is not supportted if OS encoding is native&lt;/li&gt;
	&lt;li&gt;Backspace handling is incorrect if line contains multibyte characters and OS encoding is UTF8&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Interstingly, under Cygwin, Jline works fine. The above problem are only for Unix.&lt;/p&gt;</comment>
                            <comment id="12703937" author="viraj" created="Wed, 29 Apr 2009 02:17:07 +0100"  >&lt;p&gt;Daniel, &lt;br/&gt;
 Thanks again for your patch, I worked with Pradeep and changed the parser code to invoke that behavior you suggested and then filed Jira &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-774&quot; title=&quot;Pig does not handle Chinese characters (in both the parameter subsitution using -param_file or embedded in the Pig script) correctly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-774&quot;&gt;&lt;del&gt;PIG-774&lt;/del&gt;&lt;/a&gt;. &lt;br/&gt;
Here is one problem that I faced..&lt;br/&gt;
Suppose I have a script like this, known as chinese_data.pig&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
rmf chineseoutput;
%&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; querystring &apos;myquery&apos;;
I = load &apos;/user/viraj/chinese.txt&apos; using PigStorage(&apos;\u0001&apos;);

--dump I;

J = filter I by $0 == &apos;$querystring&apos;;
--J = filter I by $0 == &apos;       &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&apos;;

--store J into &apos;chineseoutput&apos;;
dump J;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have a parameter file known as &quot;nextgen_paramfile&quot; which contains the $querystring variable..&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
querystring=&lt;span class=&quot;code-quote&quot;&gt;&quot;   &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I run the above script and parameter file as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -cp pig.jar:/home/viraj/hadoop-0.18.0-dev/conf/ -Dhod.server=&apos;&apos; org.apache.pig.Main -param_file nextgen_paramfile chinese_data.pig
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I get the following error:&lt;br/&gt;
================================================================================&lt;br/&gt;
2009-04-29 01:05:14,979 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.HExecutionEngine - Connecting to hadoop file system at: hdfs://localhost:9000&lt;br/&gt;
2009-04-29 01:05:16,328 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.HExecutionEngine - Connecting to map-reduce job tracker at: localhost:9001&lt;br/&gt;
2009-04-29 01:05:16,907 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.PigServer - Create a new graph.&lt;br/&gt;
2009-04-29 01:05:17,794 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1000: Error during parsing. Lexical error at line 7, column 33.  Encountered: &quot;\u6b4c&quot; (27468), after : &quot;&lt;br/&gt;
================================================================================&lt;br/&gt;
I realized that it was something to do with the commented line in the pig script. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--J = filter I by $0 == &apos;       &#27468;&#25163;    &#39321;&#28207;&#24773;&#29309;&#22899;&#20154;&#24515;&#28436;&#21809;&#26371;&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why is that so, I am attaching the pig_*log on this Jira.&lt;/p&gt;

&lt;p&gt;Additionally I found that the parameter substitution is happening correctly when I run the script as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -cp pig.jar:/home/viraj/hadoop-0.18.0-dev/conf/ -Dhod.server=&apos;&apos; org.apache.pig.Main -param_file nextgen_paramfile -r chinese_data.pig
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The substituted file, chinese_data.pig.substituted is correct.&lt;/p&gt;

&lt;p&gt;Viraj&lt;/p&gt;</comment>
                            <comment id="12703938" author="viraj" created="Wed, 29 Apr 2009 02:19:24 +0100"  >&lt;p&gt;Pig Error Log&lt;/p&gt;</comment>
                            <comment id="12703974" author="daijy" created="Wed, 29 Apr 2009 04:31:21 +0100"  >&lt;p&gt;Hi, Viraj,&lt;br/&gt;
I see the problem. I should add javacc option to PigScriptParser.jj as well. I attach utf8_parser-2.patch, can you try again? In my previous run I removed the commented line in your script so I didn&apos;t see this problem.&lt;/p&gt;</comment>
                            <comment id="12703977" author="viraj" created="Wed, 29 Apr 2009 04:41:14 +0100"  >&lt;p&gt;I modified the file PigScriptParser.jj,  and it works.&lt;/p&gt;</comment>
                            <comment id="12704391" author="olgan" created="Wed, 29 Apr 2009 23:53:32 +0100"  >&lt;p&gt;Daniel, could you add unit tests for this? Thanks&lt;/p&gt;</comment>
                            <comment id="12705489" author="daijy" created="Mon, 4 May 2009 06:35:05 +0100"  >&lt;p&gt;utf8.patch include:&lt;br/&gt;
1. utf8 fix for QueryParser.jjt, ParamLoader.jj, PigScriptParser.jj&lt;br/&gt;
2. unit test&lt;br/&gt;
3. change java source code encoding from ISO-8859-1 to utf8 (in build.xml)&lt;br/&gt;
4. change DataByteArray, always use utf8 as string encoding in DataByteArray (even if OS encoding is native, we assume data file is alway utf8 encoding)&lt;/p&gt;

&lt;p&gt;Unit test pass on both utf8 system and native encoding system.&lt;/p&gt;</comment>
                            <comment id="12705750" author="olgan" created="Mon, 4 May 2009 22:11:03 +0100"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;I don&apos;t think we can assume that bytearray data is encouded with UTF8. we can be processing images or other binary data.&lt;/p&gt;</comment>
                            <comment id="12705799" author="daijy" created="Mon, 4 May 2009 23:33:52 +0100"  >&lt;p&gt;Hi, Olga, &lt;br/&gt;
I actually assume only textural data inside bytearray as UTF8. The functions I change are DataByteArray.DataByteArray(String s) and DataByteArray.toString(), which are the functions to convert String to/from byte array. If image or other binary data, we will not need to convert them to/from a String, so they will be fine.&lt;/p&gt;</comment>
                            <comment id="12705820" author="olgan" created="Tue, 5 May 2009 00:13:19 +0100"  >&lt;p&gt;sorry, Daniel, I misunderstood you comment. The patch looks good, please commit.&lt;/p&gt;</comment>
                            <comment id="12710388" author="olgan" created="Mon, 18 May 2009 16:45:44 +0100"  >&lt;p&gt;Daniel, was this change committed? Can the JIRA be closed?&lt;/p&gt;</comment>
                            <comment id="12710454" author="daijy" created="Mon, 18 May 2009 20:09:36 +0100"  >&lt;p&gt;Yes, the patch is committed. Thanks&lt;/p&gt;</comment>
                            <comment id="12710619" author="viraj" created="Tue, 19 May 2009 06:53:06 +0100"  >&lt;p&gt;Hi Daniel,&lt;br/&gt;
 For this patch to work, is it important  to set:&lt;/p&gt;

&lt;p&gt;LESSCHARSET to utf-8&lt;/p&gt;

&lt;p&gt;LANG to en_US.utf8&lt;/p&gt;

&lt;p&gt;I am observing that the dry run using pig -r does not yield the right parameter substitution, if we do not have these variables set. &lt;/p&gt;

&lt;p&gt;They are not set by default on the RH-EL 5.0&lt;/p&gt;

&lt;p&gt;You have mentioned this in your earlier comments!!&lt;/p&gt;

&lt;p&gt;Thanks Viraj&lt;/p&gt;</comment>
                            <comment id="12710628" author="daijy" created="Tue, 19 May 2009 07:14:10 +0100"  >&lt;p&gt;You get the point, Viraj. &lt;/p&gt;

&lt;p&gt;Actually we can have two different configurations:&lt;br/&gt;
1. LANG=UTF8, all data files, script files, parameter files are UTF8&lt;br/&gt;
2. LANG=GB2321, data files are UTF8; script files, parameter files are GB2321&lt;br/&gt;
However, for RH-EL default settings, LANG=POSIX, which does not work well for Chinese characters. &lt;/p&gt;

&lt;p&gt;So for simplicity, we can have everything UTF8 (case 1). This is the default setting for Ubuntu. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12445472">PIG-1187</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406087" name="chinese.txt" size="39" author="viraj" created="Wed, 22 Apr 2009 03:51:49 +0100"/>
                            <attachment id="12406088" name="chinese_data.pig" size="228" author="viraj" created="Wed, 22 Apr 2009 03:51:49 +0100"/>
                            <attachment id="12406089" name="nextgen_paramfile" size="197" author="viraj" created="Wed, 22 Apr 2009 03:51:49 +0100"/>
                            <attachment id="12406726" name="pig_1240967860835.log" size="812" author="viraj" created="Wed, 29 Apr 2009 02:19:24 +0100"/>
                            <attachment id="12407131" name="utf8.patch" size="8347" author="daijy" created="Mon, 4 May 2009 06:35:05 +0100"/>
                            <attachment id="12406423" name="utf8_parser-1.patch" size="915" author="daijy" created="Sat, 25 Apr 2009 07:16:51 +0100"/>
                            <attachment id="12406736" name="utf8_parser-2.patch" size="1375" author="daijy" created="Wed, 29 Apr 2009 04:31:21 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 Apr 2009 17:05:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164335</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyair3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95349</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>