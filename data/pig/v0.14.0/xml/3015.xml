<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:54:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3015/PIG-3015.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3015] Rewrite of AvroStorage</title>
                <link>https://issues.apache.org/jira/browse/PIG-3015</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The current AvroStorage implementation has a lot of issues: it requires old versions of Avro, it copies data much more than needed, and it&apos;s verbose and complicated. (One pet peeve of mine is that old versions of Avro don&apos;t support Snappy compression.)&lt;/p&gt;

&lt;p&gt;I rewrote AvroStorage from scratch to fix these issues. In early tests, the new implementation is significantly faster, and the code is a lot simpler. Rewriting AvroStorage also enabled me to implement support for Trevni (as TrevniStorage).&lt;/p&gt;

&lt;p&gt;I&apos;m opening this ticket to facilitate discussion while I figure out the best way to contribute the changes back to Apache.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12613954">PIG-3015</key>
            <summary>Rewrite of AvroStorage</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jadler">Joseph Adler</assignee>
                                    <reporter username="jadler">Joseph Adler</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Oct 2012 21:14:48 +0000</created>
                <updated>Mon, 14 Oct 2013 17:45:55 +0100</updated>
                            <resolved>Fri, 28 Jun 2013 23:58:40 +0100</resolved>
                                                    <fixVersion>0.12.0</fixVersion>
                                        <due></due>
                            <votes>6</votes>
                                    <watches>33</watches>
                                                                <comments>
                            <comment id="13486427" author="cheolsoo" created="Mon, 29 Oct 2012 22:19:19 +0000"  >&lt;p&gt;Hi Joseph,&lt;/p&gt;

&lt;p&gt;Thank you very much for opening the jira. I have recently worked on AvroStorage by myself, and I totally agree with you. Since you already have code to contribute, this is even better. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;As part of re-write, I would also like to propose to migrate AvroStorge from Piggybank to the core Pig. I have 2 reasons for this:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;AvroStorage is widely used, so it makes sense to include it in the core Pig rather than in Piggybank.&lt;/li&gt;
	&lt;li&gt;Until migration is complete, we can maintain both versions (new one in core Pig and old one in Piggybank) to avoid breaking backward compatibility. Another motivation for re-write to me is to clean up funny options that the current AvroStorage has. So I think that it&apos;s unavoidable to break backward compatibility.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I asked this question on the &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/pig-user/201208.mbox/%3C27EE5059-F811-4E19-B1A3-951B4BB3BDDF%40hortonworks.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;user mailing list&lt;/a&gt; a while ago, and nobody disagreed. But please let me know if anyone has objections.&lt;/p&gt;


&lt;p&gt;To start with, I am wondering if you can post your code as a patch to this jira and the review board. Assuming that we&apos;re going to move AvroStorage to the core Pig, you can probably create a new package called &quot;org.apache.pig.backend.hadoop.avro&quot; and add your code there. If you could break your patch into smaller pieces and attach them to sub-tasks of this jira, that would be helpful too. &lt;/p&gt;

&lt;p&gt;Please let me know what you think.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13486489" author="jadler" created="Mon, 29 Oct 2012 23:23:50 +0000"  >&lt;p&gt;Here&apos;s the working version: &lt;a href=&quot;https://github.com/josephadler/fast-avro-storage&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/josephadler/fast-avro-storage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I can break that up into multiple Jira tickets, though that feels like a lot of extra work; I threw away all the existing code and started from scratch. I do think it&apos;s reasonable to separate AvroStorage and TrevniStorage for now (though they are very closely related)&lt;/p&gt;</comment>
                            <comment id="13486662" author="cheolsoo" created="Tue, 30 Oct 2012 05:28:33 +0000"  >&lt;p&gt;Thanks for the link.&lt;/p&gt;

&lt;p&gt;You can upload the entire code as a single patch if you prefer. I suggested only because big patches usually take longer to be reviewed and committed, but I will review this one at least.&lt;/p&gt;</comment>
                            <comment id="13487179" author="jadler" created="Tue, 30 Oct 2012 20:13:01 +0000"  >&lt;p&gt;Just reading through the discussion on the user list.&lt;/p&gt;

&lt;p&gt;I&apos;ll check out trunk, refactor/rename as needed, make sure it passes existing tests, fix bugs, then submit the patches. That will probably take me a few days to do.&lt;/p&gt;

&lt;p&gt;Additionally, I&apos;d like to get a few things correct the first time. Specifically, I&apos;m trying to figure out how to deal with the plethora of possible options for load/store functions. I want to make sure that I cover all the important use cases regarding schemas. Here&apos;s the list that I came up with:&lt;/p&gt;

&lt;p&gt;LoadFunc:&lt;br/&gt;
(1) Read the schema from the input file(s)&lt;br/&gt;
  (a) Just pick the schema from the most recent file&lt;br/&gt;
  (b) Check all the files to make sure the schemas are compatible&lt;br/&gt;
(2) Use a schema manually provided by the user&lt;/p&gt;

&lt;p&gt;StoreFunc:&lt;br/&gt;
(1) Automatically translate the Pig schema to an Avro Schema&lt;br/&gt;
(2) Use a schema manually provided by the user&lt;br/&gt;
  (a) Allow the user to name the records and name space&lt;br/&gt;
  (b) Automatically pick a record and namespace name&lt;/p&gt;</comment>
                            <comment id="13487592" author="cheolsoo" created="Wed, 31 Oct 2012 06:59:04 +0000"  >&lt;p&gt;Hi Joseph,&lt;/p&gt;

&lt;p&gt;The list of options that you described looks like a good start. I think that we should definitely start with a small set of options, but it may be a good idea to keep in mind what options we eventually want to add. So here are my questions:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;LoadFunc&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(a) Just pick the schema from the most recent file&lt;br/&gt;
(b) Check all the files to make sure the schemas are compatible&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I haven&apos;t checked out your repository, so please correct me if I am wrong. I assume that your storage converts Avro schema to Pig schema during the load? If so, how do you convert multiple (compatible but different) schemas to one Pig schema? The current storage has an option called &apos;multiple_schemas&apos; to merge multiple schemas into one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(2) Use a schema manually provided by the user&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Do we need this option for LoadFunc? Is this for when the input Avro files do not have an embedded schema?&lt;/p&gt;

&lt;p&gt;Does your storage also have limits on unions and recursive records like the current storage? In fact, recursive records are now supported by &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2875&quot; title=&quot;Add recursive record support to AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2875&quot;&gt;&lt;del&gt;PIG-2875&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How about corrupted files? Currently, we have an option to skip corrupted files (ignore_bad_files) instead of failing on them.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;StoreFunc&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(2) Use a schema manually provided by the user&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The current storage provides three ways of specifying the output schema:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;A JSON string can be given (option: schema).&lt;/li&gt;
	&lt;li&gt;The schema of an existing Avro file (.avro) can be used (option: same).&lt;/li&gt;
	&lt;li&gt;An Avro schema file (.avsc) can be used (option: schema_file).&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Are you going to support the same?&lt;/p&gt;

&lt;p&gt;How about multiple stores with different output schemas? Currently, the current storage has the &apos;index&apos; option that allows the user to specify different output schemas for each store.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13487954" author="jadler" created="Wed, 31 Oct 2012 16:56:37 +0000"  >&lt;p&gt;Before addressing the questions, I wanted to propose a naming schema for the load and store functions. To be consistent with other Pig UDFs, I think it makes more sense to use different function names rather than passing different types of arguments to the UDF. Can I propose something like this:&lt;/p&gt;

&lt;p&gt;LoadFuncs:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;AvroStorage. May be instantiated with zero, one, or two arguments. If called with no arguments, the function will load the schema from the most recent data file found in the specified path and use that schema. If called with one argument, the argument will be a String that specifies the input schema. The String may either contain the schema definition, may be a URI that refers to the location of the input schema in a file, or may be an example data file from which to read the schema. If two arguments are specified, the first argument refers to the type of the output records (the name of the type) and the second argument may be either a JSON string, a URI for a schema definition file, or a URI for an example file that contains the definition of that type.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; This function does not check schema compatibility of input files or allow recursive schema definitions. Fails when corrupted files are encountered.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;AvroStorage.AllowRecursive. Same as above, except this function does not check schema compatibility of input files but does allow recursive schema definitions. Recursively defined records are just defined as schemaless tuples in the Pig Schema.&lt;/li&gt;
	&lt;li&gt;AvroStorage.IgnoreCorrupted Same as above, except this function will not allow recursive schema definitions, but will not fail on corrupted input files.&lt;/li&gt;
	&lt;li&gt;AvroStorage.AllowRecursiveAndIgnoreCorrupted Same as above, except this function allows recursive definitions and does not fail on corrupted input files.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;StoreFunc:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;AvroStorage. May be instantiated with zero, one, or two arguments; the meaning of the arguments can be inferred from how they are specified. If called with no arguments, the function will translate the pig schema to an Avro schema, use a default name for the record types, and not assign a namespace to the records. If called with one argument, the argument will be a String that may specify the output schema, or may specify the record name for the output records. If the string specifies the schema definition, may be a URI that refers to the location of the input schema in a file, or may be an example data file from which to reuse the schema. If two arguments are specified, they may refer to the name and namespace for the output records. Alternately, the first argument may refer to the type of the output records (the name of the schema), and the second argument may be either a JSON string, a URI for a schema definition file, or a URI for an example file that contains the definition of that type.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Answers to questions:&lt;/p&gt;

&lt;p&gt;LoadFunc 1a: Yes, the storage function will convert avro schemas to pig schemas, and vice versa. &lt;/p&gt;

&lt;p&gt;I haven&apos;t tried to convert multiple &quot;compatible but different&quot; schemas to one pig schema. I believe that if you manually supply a schema to the function that is a superset of all the schemas in the input data, the underlying Avro libraries will take care of this for you... though this brings up another question: what does &quot;compatible&quot; mean in this case? Personally, I do not think that the core Pig library should attempt to resolve this problem for users; I think it is best for users to load files with different load functions, cast and rename fields as appropriate in pig code, then take a union of the values. It&apos;s possible to miss real (and important) errors if Pig does a lot of type conversions and manipulations under the covers.&lt;/p&gt;

&lt;p&gt;LoadFunc 2: I think this is necessary for a few reasons: It&apos;s faster to supply a schema manually (the Pig run time doesn&apos;t have to read files from HDFS at planning time to detect the schema). By specifying the schema, you can also specify a subset of fields to de-serialize, reducing the size of the input data. Finally, by specifying a schema manually, you can read a set of files with compatible but different schemas.&lt;/p&gt;

&lt;p&gt;I think &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2875&quot; title=&quot;Add recursive record support to AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2875&quot;&gt;&lt;del&gt;PIG-2875&lt;/del&gt;&lt;/a&gt; is a design mistake. If I had been involved in the project, I would have argued hard against this. You can&apos;t specify a recursive schema in Pig, so why allow users to load files with recursive schemas in Pig? It is possible to load recursively defined records into pig, but that seems like a recipe for confusion and errors. By default, recursive schema definitions should result in an error, or at least a warning message. I&apos;d propose that this be allowed only as an option.&lt;/p&gt;

&lt;p&gt;Storefunc 2a:&lt;/p&gt;

&lt;p&gt;I don&apos;t think it&apos;s hard to specfiy those three options. It&apos;s probably OK for the StoreFunc to allow the user to specify either a schema, a URI that refers to a schema file, or a URI that refers to an example file, then for the function to figure out what the argument means and do the right thing. &lt;/p&gt;

&lt;p&gt;Can you explain the use case for multiple stores with different output schemas? I&apos;m having a hard time understanding why it makes sense to do something complicated like that.&lt;/p&gt;
</comment>
                            <comment id="13488201" author="cheolsoo" created="Wed, 31 Oct 2012 20:33:31 +0000"  >&lt;p&gt;Hi Joseph,&lt;/p&gt;

&lt;p&gt;1) Using different functions sounds OK to me, but couldn&apos;t we handle them via args using CommandLineParser? IMHO, this is simpler and more scalable. Another advantage of using CommandLineParser is that we don&apos;t have to infer the meaning of arguments based on the number of arguments. Other built-in storages (e.g. HBaseStorage) use CommandLineParser, so why don&apos;t we do the same to provide the universal syntax to the user across the project? Thoughts?&lt;/p&gt;

&lt;p&gt;2) Multiple schema support&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this brings up another question: what does &quot;compatible&quot; mean in this case?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Please refer to the rules listed in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2579?focusedCommentId=13446546&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13446546&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PIG-2579&lt;/a&gt;. I did this because it asked by several people. The use case is that people define Avro schemas, but they evolve over time. Since the AvroStorage used to assume that all the input files have the exactly the same schema, they couldn&apos;t load them. &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2579&quot; title=&quot;Support for multiple input schemas in AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2579&quot;&gt;&lt;del&gt;PIG-2579&lt;/del&gt;&lt;/a&gt; was trying to address that inconvenience. Do you think that we should include a similar functionality as an option in the new storage?&lt;/p&gt;

&lt;p&gt;3) Recursive record support&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can&apos;t specify a recursive schema in Pig, so why allow users to load files with recursive schemas in Pig? By default, recursive schema definitions should result in an error, or at least a warning message. I&apos;d propose that this be allowed only as an option.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed (and guilty &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;). In fact, this was a feature request from one of my customers. The rationale was that people couldn&apos;t change their already-defined recursive schemas, but they wanted to do some processing on non-recursive parts of data. Providing it as an option sound good to me.&lt;/p&gt;

&lt;p&gt;4) Multiple store support&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you explain the use case for multiple stores with different output schemas? I&apos;m having a hard time understanding why it makes sense to do something complicated like that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think that I wasn&apos;t clear. All I wanted to say is that if we have more than one relation to store in a script, we should be able to do it.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
set1 = load &apos;input1.txt&apos; using PigStorage() as ( ... );
store set1 into &apos;set1&apos; using org.apache.pig.piggybank.storage.avro.AvroStorage(&apos;index&apos;, &apos;1&apos;);

set2 = load &apos;input2.txt&apos; using PigStorage() as ( ... );
store set2 into &apos;set2&apos; using org.apache.pig.piggybank.storage.avro.AvroStorage(&apos;index&apos;, &apos;2&apos;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The current storage supports multiple stores via the &apos;index&apos; option. In fact, this is very hacky, and we should get rid of it. Nevertheless, I wanted to know if this will be still supported. On a second thought, I think that your proposal already implies multiple store support because:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The output schema will be derived from the Pig schema per store, or&lt;/li&gt;
	&lt;li&gt;The user will specify the output schema per store.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So I don&apos;t see any problem.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13489794" author="mtnaseef" created="Fri, 2 Nov 2012 22:16:54 +0000"  >&lt;p&gt;We are very excited about this direction, as we were considering a private re-write to AvroStorage for some of the issues you are addressing. I want to +1 passing the schema into the LoadFunc. The old AvroStorage is very slow and a resource hog when we have a directory hierarchy to scan - even when we set the no_schema_check property. Furthermore, we occasionally have issues with pig jobs picking the old schema when we have a schema update. Manually specifying the schema would fix this (option 1a should cover this as well) and give us more flexibility in defining the data we want pig to pull from a file.&lt;/p&gt;</comment>
                            <comment id="13489800" author="cheolsoo" created="Fri, 2 Nov 2012 22:34:43 +0000"  >&lt;p&gt;Hi Mike, thanks for your opinion. I agree that passing the input schema into the LoadFunc is a good improvement.&lt;/p&gt;

&lt;p&gt;Please feel free to comment on other issues too. Hopefully, we can resolve as many issues as possible while re-writing AvroStorage.&lt;/p&gt;
</comment>
                            <comment id="13490824" author="alangates" created="Mon, 5 Nov 2012 18:55:16 +0000"  >&lt;p&gt;+1 for moving it into Pig proper.  Avro is a common format and it makes sense to guarantee support for it in Pig.&lt;/p&gt;</comment>
                            <comment id="13491073" author="jadler" created="Tue, 6 Nov 2012 00:14:02 +0000"  >&lt;p&gt;Started working on this now. Two questions&lt;/p&gt;

&lt;p&gt;(1) I&apos;m a new contributor. What&apos;s the best way to organize the code within Pig? I have a lot of helper classes and methods, and would like to put different classes in different files to maximize readability. Should I put the helper classes in an existing package (org.apache.pig.impl.builtin seems like the closest match, though still not quite right), create a new package for the helper classes, or do something else? I couldn&apos;t find documentation on the best way to do this.&lt;/p&gt;

&lt;p&gt;(2) Here&apos;s what I came up with for options: the first argument is either an explicit schema or specifies the record names if a schema is automatically generated. The second argument is a list of options (like in PigStorage):&lt;/p&gt;

&lt;p&gt;&amp;lt;li&amp;gt;&amp;lt;code&amp;gt;-namespace&amp;lt;/code&amp;gt; Namespace for an automatically generated output schema.&amp;lt;/li&amp;gt;&lt;br/&gt;
&amp;lt;li&amp;gt;&amp;lt;code&amp;gt;-ignoreerrors&amp;lt;/code&amp;gt; Tells function to ignore errors in input files.&amp;lt;/li&amp;gt;&lt;br/&gt;
&amp;lt;li&amp;gt;&amp;lt;code&amp;gt;-schemafile&amp;lt;/code&amp;gt; Specifies URL for avro schema file from which to read the input schema (can be local file, hdfs, url, etc).&amp;lt;/li&amp;gt;&lt;br/&gt;
&amp;lt;li&amp;gt;&amp;lt;code&amp;gt;-examplefile&amp;lt;/code&amp;gt; Specifies URL for avro data file  from which to copy the input schema (can be local file, hdfs, url, etc).&amp;lt;/li&amp;gt;&lt;/p&gt;

&lt;p&gt;I considered providing an explicit option to provide a schema with a &quot;-schema&quot; flag, but would have had to do something much more complicated to correctly parse the options if an option could include a JSON schema. (Plus, I don&apos;t think the meaning of the argument will be ambiguous: it will either be a valid JSON object describing a schema or valid name.)&lt;/p&gt;</comment>
                            <comment id="13491231" author="cheolsoo" created="Tue, 6 Nov 2012 06:04:30 +0000"  >&lt;p&gt;Hi Joseph,&lt;/p&gt;

&lt;p&gt;To answer your questions:&lt;/p&gt;

&lt;p&gt;1) If I am not mistaken, o.a.p.impl.builtin is for internal built-in UDFs. I don&apos;t know exactly what your helper classes are like, but would o.a.p.impl.util be a better place?&lt;/p&gt;

&lt;p&gt;Looking at the package tree, I also noticed that there is an *.impl.util package for each sub-component of Pig. So if your helper classes are AvroStorage-specific, you may want to create two new packages called o.a.p.hadoop.avro and o.a.p.hadoop.avro.util, and add AvroStorage to hadoop.avro and helper classes to hadoop.avro.util respectively.&lt;/p&gt;

&lt;p&gt;Please anyone correct me if I am wrong here. I am a new committer. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2) What you propose sounds good to me.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13491741" author="jadler" created="Tue, 6 Nov 2012 19:28:02 +0000"  >&lt;p&gt;I put the code in o.a.impl.util. Not a big deal to move it later if that&apos;s the preferred style.&lt;/p&gt;</comment>
                            <comment id="13492680" author="russell.jurney" created="Wed, 7 Nov 2012 20:35:09 +0000"  >&lt;p&gt;I agree that we should replace the old AvroStorage with this one, and that we should make AvroStorage a builtin.&lt;/p&gt;

&lt;p&gt;However, I don&apos;t think its acceptable to break backwards-compatibility with the existing AvroStorage, and having two implementations at once seems confusing. It would be best to extend this implementation with those features required to maintain compatibility with the Piggybank AvroStorage before committing it as a builtin.&lt;/p&gt;

&lt;p&gt;It sounds like you&apos;re on top of this, Joe and Chelsoo &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ll be a tester.&lt;/p&gt;</comment>
                            <comment id="13493010" author="cheolsoo" created="Thu, 8 Nov 2012 07:00:03 +0000"  >&lt;p&gt;Hi Russell,&lt;/p&gt;

&lt;p&gt;Thank you very much for offering help. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, I don&apos;t think its acceptable to break backwards-compatibility with the existing AvroStorage, and having two implementations at once seems confusing. It would be best to extend this implementation with those features required to maintain compatibility with the Piggybank AvroStorage before committing it as a builtin.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure, we can wait until completing the new AvroStorage before commit it, and I won&apos;t insist to maintain two versions of AvroStorage if that&apos;s confusing to others.&lt;/p&gt;

&lt;p&gt;But given that the new AvroStorage will have different options from the current AvroStorage, it seems unavoidable to introduce some backward incompatibility. For example, Joseph&apos;s proposal for new options are very different from those of the current AvroStorage. Would that be acceptable?&lt;/p&gt;</comment>
                            <comment id="13493049" author="russell.jurney" created="Thu, 8 Nov 2012 08:59:16 +0000"  >&lt;p&gt;The existing method of storing to multiple locations is so strange... let&apos;s call that part a bug fix? We can enable storing to more than one place without the weird argument workaround using the new outputSchema interface, can&apos;t we?&lt;/p&gt;</comment>
                            <comment id="13493550" author="jadler" created="Thu, 8 Nov 2012 22:15:13 +0000"  >&lt;p&gt;I hate breaking backwards compatibility. (One of the reaons for doing the rewrite is that Avro broke backwards compatibility.) But I think we have some good reasons to do so here:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Options for AvroStorage are very different than options for other storage functions in Pig. In moving AvroStorage to builtin, it makes sense for AvroStorage to behave as close as possible to PigStorage, etc.&lt;/li&gt;
	&lt;li&gt;The huge number of crazy options make the code slow and complicated.&lt;/li&gt;
	&lt;li&gt;There are good workarounds for many changes in the options. For example, all the weird stuff about selecting a schema using an index could be easily changed to explicit schema definitions.&lt;/li&gt;
	&lt;li&gt;It gets harder to make changes with time. This is probably the best opportunity to make the options simpler and clearer.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13493555" author="russell.jurney" created="Thu, 8 Nov 2012 22:20:29 +0000"  >&lt;p&gt;Actually, I reverse my position. Get this in builtin as soon as possible. Give ppl one pig version to get off the pipe and then we kill the old one&lt;/p&gt;

&lt;p&gt;Ship it.&lt;/p&gt;</comment>
                            <comment id="13496363" author="jadler" created="Tue, 13 Nov 2012 17:46:18 +0000"  >&lt;p&gt;Progress update: I merged in the code, and am now working on test cases. I plan to submit the patches for review later this week.&lt;/p&gt;

&lt;p&gt;Right now, I am working on unit tests for AvroStorage. Because AvroStorage is so complicated, I am trying to find ways to make the test cases easier to manage. (I don&apos;t like seeing a single test file with dozens of distinct test cases, and dozens of test data files in one directory). I feel like it&apos;s too hard to understand what&apos;s being tested and what&apos;s not being tested, and too hard to maintain the tests. AvroStorage is very complicated, and I think it&apos;s worth changing the test strategy to be more methodical and rigorous. Here&apos;s what I&apos;m proposing:&lt;/p&gt;

&lt;p&gt;(1) Test files will be kept in different directories by file type: schema (AVSC) files, raw text input files, json formatted input files, uncompressed avro files, deflate compressed avro files, snappy compressed avro files, uncompressed avro output files, deflate compressed avro output files, snappy compressed output files. &lt;br/&gt;
(2) Test pig scripts will be kept in discrete files, with parameters as file names. I&apos;ll modify the test runner to set the runtime parameters correctly. (I think this increases the readability of the test cases and also helps with debugging; you can always type &quot;java -cp pig.jar org.apache.pig.Main -x local -f test_file&quot; to run the files outside the test harness and see what happens)&lt;br/&gt;
(3) I&apos;m thinking about modifying the build process to compile human readable files (in JSON format) into avro files before running the tests.&lt;/p&gt;

&lt;p&gt;What do you guys think?&lt;/p&gt;</comment>
                            <comment id="13496378" author="cheolsoo" created="Tue, 13 Nov 2012 18:12:24 +0000"  >&lt;p&gt;Hi Joseph,&lt;/p&gt;

&lt;p&gt;Thanks for the update. I support what you&apos;re proposing. I appreciate your effort to clean up the code. Just to be clear, I have the following questions:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Test pig scripts will be kept in discrete files, with parameters as file names. I&apos;ll modify the test runner to set the runtime parameters correctly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ideally, all Pig unit test should be written this way. Currently, Pig queries are hard-coded in the test code, which is not very nice. But changing it is going to be a long-term effort. Your changes for this jira will be isolated in &lt;tt&gt;TestAvroStorage&lt;/tt&gt;, won&apos;t they? If not, can you please provide more detail? I am just trying to understand the scope of your proposal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&apos;m thinking about modifying the build process to compile human readable files (in JSON format) into avro files before running the tests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This will be fully automated in the current framework (ant + junit), so I can run &lt;tt&gt;ant test -Dtestcase=TestAvroStorage&lt;/tt&gt; to run unit test cases, right? One exception for this might be a test case for corrupted  Avro files I guess.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13496730" author="jadler" created="Wed, 14 Nov 2012 01:17:42 +0000"  >&lt;p&gt;Just TestAvroStorage, yes. I&apos;m not trying to rewrite the whole test system, just clean up the AvroStorage tests. And yes, I&apos;d want to either make an exception for corrupted Avro files or have a job that corrupts the files. &lt;/p&gt;</comment>
                            <comment id="13498485" author="jadler" created="Fri, 16 Nov 2012 00:49:18 +0000"  >&lt;p&gt;Here is a patch with a working implementation (plus new unit tests and a bash script to generate the test data files; just run the bash script in the test/org/apache/pig/builtin/avro directory to generate all the avro files needed for testing)&lt;/p&gt;</comment>
                            <comment id="13498487" author="jadler" created="Fri, 16 Nov 2012 00:50:45 +0000"  >&lt;p&gt;Here&apos;s the generated patch file.&lt;/p&gt;</comment>
                            <comment id="13498579" author="cheolsoo" created="Fri, 16 Nov 2012 03:45:44 +0000"  >&lt;p&gt;Hi Joseph,&lt;/p&gt;

&lt;p&gt;First of all, thank you so much!&lt;/p&gt;

&lt;p&gt;Secondly, considering the size of the patch, would you mind uploading it to the RB? This will encourage more people to review it.&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can choose pig-git to upload a diff file from the github repository.&lt;/p&gt;

&lt;p&gt;Thirdly, I haven&apos;t fully read the patch yet and will do once it&apos;s uploaded on the RB. But I have a few minor comments as below:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Can you please add the Apache license header to every new file?&lt;/li&gt;
	&lt;li&gt;Can you please remove @author tags?&lt;/li&gt;
	&lt;li&gt;Can you please replace &lt;tt&gt;System.err.println()&lt;/tt&gt; with &lt;tt&gt;common.logging.log&lt;/tt&gt;?&lt;/li&gt;
	&lt;li&gt;Our indentation convention is 4 spaces and no tabs. You used 2 spaces, and I see 2 tabs in &lt;tt&gt;directory_test.pig&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Lastly, your bash script probably should be replaced by a python script (or another cross-platform script) because there is an on-going effort of porting Pig to Windows (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2793&quot; title=&quot;Make Pig Work on Windows without Cygwin&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2793&quot;&gt;&lt;del&gt;PIG-2793&lt;/del&gt;&lt;/a&gt;). In particular, TestAvroStorage is added to the unit test suites, this will be an issue. Please feel free to open a sub-task for converting it to Python if you&apos;d like to get help.&lt;/p&gt;</comment>
                            <comment id="13499348" author="jadler" created="Sat, 17 Nov 2012 05:28:51 +0000"  >&lt;p&gt;I have made all the changes that you suggested (including rewriting the script that builds test cases in Python) and have uploaded the new version to the RB: &lt;a href=&quot;https://reviews.apache.org/r/8104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8104/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13500875" author="russell.jurney" created="Tue, 20 Nov 2012 07:02:23 +0000"  >&lt;p&gt;Suggest to check out the work Jon did in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2614&quot; title=&quot;AvroStorage crashes on LOADING a single bad error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2614&quot;&gt;&lt;del&gt;PIG-2614&lt;/del&gt;&lt;/a&gt;. One bad record out of a billion killing a job is almost always absurd.&lt;/p&gt;</comment>
                            <comment id="13501340" author="jadler" created="Tue, 20 Nov 2012 18:00:46 +0000"  >&lt;p&gt;I just took at look at &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2614&quot; title=&quot;AvroStorage crashes on LOADING a single bad error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2614&quot;&gt;&lt;del&gt;PIG-2614&lt;/del&gt;&lt;/a&gt;. It looks like the &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2614&quot; title=&quot;AvroStorage crashes on LOADING a single bad error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2614&quot;&gt;&lt;del&gt;PIG-2614&lt;/del&gt;&lt;/a&gt; patch will be compatible with this patch; &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2614&quot; title=&quot;AvroStorage crashes on LOADING a single bad error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2614&quot;&gt;&lt;del&gt;PIG-2614&lt;/del&gt;&lt;/a&gt; simply counts errors as values are read from a LoadFunc. Am I missing something? I&apos;d be happy to drop the option to ignore bad records; I think that would make the options for this function cleaner and easier to understand.&lt;/p&gt;</comment>
                            <comment id="13501345" author="cheolsoo" created="Tue, 20 Nov 2012 18:13:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2614&quot; title=&quot;AvroStorage crashes on LOADING a single bad error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2614&quot;&gt;&lt;del&gt;PIG-2614&lt;/del&gt;&lt;/a&gt; lets the user configure the following properties: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; BAD_RECORD_THRESHOLD_CONF_KEY = &lt;span class=&quot;code-quote&quot;&gt;&quot;pig.piggybank.storage.avro.bad.record.threshold&quot;&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; BAD_RECORD_MIN_COUNT_CONF_KEY = &lt;span class=&quot;code-quote&quot;&gt;&quot;pig.piggybank.storage.avro.bad.record.min&quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I agree with replacing &lt;tt&gt;-ignoreerrors&lt;/tt&gt; with these properties.&lt;/p&gt;</comment>
                            <comment id="13503923" author="thelabdude" created="Mon, 26 Nov 2012 17:40:46 +0000"  >&lt;p&gt;Can this patch be applied to Pig 0.10?&lt;/p&gt;</comment>
                            <comment id="13506099" author="jadler" created="Thu, 29 Nov 2012 00:56:33 +0000"  >&lt;p&gt;Hi Timothy:&lt;/p&gt;

&lt;p&gt;I have not tried the patch with Pig 0.10, but I don&apos;t know of any reason why it would not work. Give it a spin and let us know what happens.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Joe&lt;/p&gt;</comment>
                            <comment id="13508957" author="cheolsoo" created="Mon, 3 Dec 2012 19:24:17 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;Sorry for the delay. I made some comments in the RB. Please let me know what you think.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13509296" author="jadler" created="Mon, 3 Dec 2012 23:00:41 +0000"  >&lt;p&gt;I made most of the recommended changes (thanks for looking this over), and have a follow up question:&lt;/p&gt;

&lt;p&gt;I have always assumed that AvroStorage was designed to be used with Hadoop sequence files that contained a series of records, so I implemented AvroStorage to only work with a file in this format. Are there cases where the highest level schema for a file will be another type? If so... what does that mean for pig? Is there one record per file?&lt;/p&gt;

&lt;p&gt;Here&apos;s a specific example: suppose that we have this schema:&lt;/p&gt;

{&quot;name&quot; : &quot;IntArray&quot;, &quot;type&quot; : &quot;array&quot;, &quot;items&quot; : &quot;int&quot;}

&lt;p&gt;Suppose that we have 3 files to load, each with this schema, each containing an array of 10 integers. Should we load this into pig as a single bag with 30 integers? A bag containing three bags (each, in turn, containing 10 integers)? Or reject this file entirely?&lt;/p&gt;</comment>
                            <comment id="13509399" author="jadler" created="Tue, 4 Dec 2012 01:09:20 +0000"  >&lt;p&gt;replacing with revised patch&lt;/p&gt;</comment>
                            <comment id="13509400" author="jadler" created="Tue, 4 Dec 2012 01:10:28 +0000"  >&lt;p&gt;Revised patch; reflects comments and suggestions from review board&lt;/p&gt;</comment>
                            <comment id="13509402" author="jadler" created="Tue, 4 Dec 2012 01:11:19 +0000"  >&lt;p&gt;Revised patch (compiles together all changes)&lt;/p&gt;</comment>
                            <comment id="13509964" author="cheolsoo" created="Tue, 4 Dec 2012 19:50:31 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;Thanks for your prompt response!&lt;/p&gt;

&lt;p&gt;To answer your questions,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have always assumed that AvroStorage was designed to be used with Hadoop sequence files that contained a series of records, so I implemented AvroStorage to only work with a file in this format. Are there cases where the highest level schema for a file will be another type? If so... what does that mean for pig? Is there one record per file?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a good question, and I see your argument. But this will be very different from what the current AvroStorage does. Currently, a non-record type is automatically wrapped in a tuple. For example, &quot;1&quot; is loaded as (1) in Pig. If a file includes multiple values, they are loaded as multiple tuples as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;avro&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
cheolsoo@localhost:~/workspace/avro $java -jar avro-tools-1.5.4.jar getschema multiple_int.avro 
&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;
cheolsoo@localhost:~/workspace/avro $java -jar avro-tools-1.5.4.jar tojson multiple_int.avro 
1
2
3
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;pig&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
in = LOAD &apos;multiple_int.avro&apos; USING org.apache.pig.piggybank.storage.avro.AvroStorage();
DUMP in;
(1)
(2)
(3)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Agreed that we can tell users that the top-level schema must be a record type, but I am afraid that people might not agree. In my experience, people tend to think that every valid Avro file should be able to be loaded by AvroStorage. Granted, there exist some restrictions (e.g. recursive records and unions), but even these restrictions have been loosened recently. Unless there is a convincing reason to not, I think that we should keep it that way.&lt;/p&gt;

&lt;p&gt;In many cases, people already have data pipeline in place (e.g. Flume produces Avro files =&amp;gt; Pig consumes Avro files), and it is not guaranteed that the top-level schema is always a record type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&apos;s a specific example: suppose that we have this schema:&lt;br/&gt;
{&quot;name&quot; : &quot;IntArray&quot;, &quot;type&quot; : &quot;array&quot;, &quot;items&quot; : &quot;int&quot;}&lt;br/&gt;
Suppose that we have 3 files to load, each with this schema, each containing an array of 10 integers. Should we load this into pig as a single bag with 30 integers? A bag containing three bags (each, in turn, containing 10 integers)? Or reject this file entirely?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Currently, they are loaded as 3 tuples, and each tuple contains a bag of 10 integers.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
({(1),(2), ... ,(10)})
({(1),(2), ... ,(10)})
({(1),(2), ... ,(10)})
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13509992" author="jadler" created="Tue, 4 Dec 2012 20:23:13 +0000"  >&lt;p&gt;I think that approach makes sense; each object in a file should be wrapped in a Tuple. Suppose that a file example.avro contained the data:&lt;/p&gt;

  {[1, 2, 3, 4, 5]}
  {[6, 7, 8, 9, 10]}

&lt;p&gt;and had this schema: &lt;/p&gt;
{&quot;name&quot; : &quot;IntArray&quot;, &quot;type&quot; : &quot;array&quot;, &quot;items&quot; : &quot;int&quot;}
&lt;p&gt;, and we loaded this as&lt;/p&gt;

&lt;p&gt;  A = LOAD &apos;example.avro&apos; USING AvroStorage;&lt;/p&gt;

&lt;p&gt;The bag A would have the Pig schema A:{(IntArray:&lt;/p&gt;
{(int)}
&lt;p&gt;)}; it would contain two tuples, which would in turn each contain one bag of integers. Does that sound correct? If so, I&apos;ll go implement that.&lt;/p&gt;</comment>
                            <comment id="13510033" author="cheolsoo" created="Tue, 4 Dec 2012 21:15:29 +0000"  >&lt;p&gt;Yes, it does. Thank you, sir!&lt;/p&gt;</comment>
                            <comment id="13510372" author="johannesch" created="Wed, 5 Dec 2012 09:18:51 +0000"  >&lt;p&gt;First of all I want to say many thanks Joseph, for all the great work on this so far! This will be very useful for my work. &lt;/p&gt;

&lt;p&gt;By the way: You certainly know of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2684&quot; title=&quot;:: in field name causes AvroStorage to fail&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2684&quot;&gt;PIG-2684&lt;/a&gt; about the existing AvroStorage implementation havin problems with &amp;lt;code&amp;gt;&amp;lt;alias_name&amp;gt;::&amp;lt;/code&amp;gt; prefix that is added by pigs join operations? What is your solution to this issue in the new implementation?&lt;/p&gt;</comment>
                            <comment id="13510629" author="jadler" created="Wed, 5 Dec 2012 17:51:05 +0000"  >&lt;p&gt;Hi Johannes,&lt;/p&gt;

&lt;p&gt;As you probably know, the Avro specification limits the set of valid characters in names (see &lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#Names&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#Names&lt;/a&gt;). Names must&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;start with &lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z_&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;subsequently contain only &lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z0-9_&amp;#93;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So double colons aren&apos;t allowed. &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2684&quot; title=&quot;:: in field name causes AvroStorage to fail&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2684&quot;&gt;PIG-2684&lt;/a&gt; proposes using namespaces as the solution. I think that&apos;s a poor choice; namespaces are often used for other purposes. Specifically, names spaces are essential if you are writing complicated data processing software that processes multiple types of avro serialized objects. In my experience, the avro schema and protocol compilers produce much better, more usable code if you use name spaces.&lt;/p&gt;

&lt;p&gt;There are two good workarounds:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The Pig user can rename variables in a bag before storing the bag using AvroStorage&lt;/li&gt;
	&lt;li&gt;The Pig user can manually specify the output schema before storing the bag with AvroStorage&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, here&apos;s a specific suggestion:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;By default, throw an exception if the pig schema contains a name with a double-colon and the user does not specify an output schema&lt;/li&gt;
	&lt;li&gt;Add an option to AvroStorage to transform double colons to something else. (Maybe double underscores? Maybe storing them in the namespace?)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What do you think?&lt;/p&gt;
</comment>
                            <comment id="13510966" author="jadler" created="Thu, 6 Dec 2012 00:26:53 +0000"  >&lt;p&gt;I added support for files that don&apos;t have records, added option for dealing with double colons in variable names.&lt;/p&gt;</comment>
                            <comment id="13526069" author="jadler" created="Fri, 7 Dec 2012 01:16:17 +0000"  >&lt;p&gt;Added test cases for TrevniStorage (and made sure the test cases all pass)&lt;/p&gt;</comment>
                            <comment id="13526132" author="russell.jurney" created="Fri, 7 Dec 2012 04:17:13 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3059&quot; title=&quot;Global configurable minimum &amp;#39;bad record&amp;#39; thresholds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3059&quot;&gt;PIG-3059&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13527885" author="johannesch" created="Mon, 10 Dec 2012 11:37:48 +0000"  >&lt;p&gt;Hi Joseph, &lt;/p&gt;

&lt;p&gt;I agree, that it would be best to have an option for automatic handling of double-colons in names. I think it would be better to use the namespace, since replacing them with underscores could leed to confusion since underscores are an allowed character in names. How do you handle identical names with different namespaces when you load data?&lt;/p&gt;</comment>
                            <comment id="13529208" author="russell.jurney" created="Tue, 11 Dec 2012 18:42:53 +0000"  >&lt;p&gt;The patch only applies at p1, not p0. Isn&apos;t p0 supposed to work?&lt;/p&gt;</comment>
                            <comment id="13529215" author="russell.jurney" created="Tue, 11 Dec 2012 18:51:46 +0000"  >&lt;p&gt;What Avro version does this expect? I build and I am still on 1.5.3, which seems wrong?&lt;/p&gt;</comment>
                            <comment id="13529223" author="russell.jurney" created="Tue, 11 Dec 2012 19:04:52 +0000"  >&lt;p&gt;I saw here: &lt;a href=&quot;https://github.com/josephadler/fast-avro-storage/blob/master/pom.xml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/josephadler/fast-avro-storage/blob/master/pom.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;that I should use this avro jar: &lt;a href=&quot;http://www.trieuvan.com/apache/avro/avro-1.7.3/avro-src-1.7.3.tar.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.trieuvan.com/apache/avro/avro-1.7.3/avro-src-1.7.3.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Proceeding with testing with workaround, recommend patching pom.xml (although this is in another JIRA, right?)&lt;/p&gt;</comment>
                            <comment id="13529255" author="jadler" created="Tue, 11 Dec 2012 19:37:58 +0000"  >&lt;p&gt;I&apos;d recommend using 1.7.3, unless you have a compelling reason to use an older Avro version. There have been several significant bug fixes.&lt;/p&gt;</comment>
                            <comment id="13529286" author="russell.jurney" created="Tue, 11 Dec 2012 20:02:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1218&quot; title=&quot;Avro 1.7.3 fails to build &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1218&quot;&gt;AVRO-1218&lt;/a&gt; has me blocked. I&apos;m going to edit build.xml in your patch?&lt;/p&gt;</comment>
                            <comment id="13529293" author="jadler" created="Tue, 11 Dec 2012 20:10:32 +0000"  >&lt;p&gt;Ivy should be able to pull the jar from a maven repo. Do you need to build your own Avro jar from source?&lt;/p&gt;</comment>
                            <comment id="13529304" author="russell.jurney" created="Tue, 11 Dec 2012 20:16:19 +0000"  >&lt;p&gt;Ivy is pulling 1.5.3 atm. Editing.&lt;/p&gt;</comment>
                            <comment id="13529306" author="russell.jurney" created="Tue, 11 Dec 2012 20:18:08 +0000"  >&lt;p&gt;I see, had to edit ivy/libraries.properties to 1.7.3 instead of 1.5.3. Suggest to include in your patch.&lt;/p&gt;</comment>
                            <comment id="13529312" author="cheolsoo" created="Tue, 11 Dec 2012 20:28:20 +0000"  >&lt;p&gt;The current patch already includes that change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/ivy/libraries.properties b/ivy/libraries.properties
index bfbbbc0..1e7fbc8 100644
--- a/ivy/libraries.properties
+++ b/ivy/libraries.properties
@@ -16,7 +16,7 @@
 #These are the versions of our dependencies (in alphabetical order)
 apacheant.version=1.7.1
 automaton.version=1.11-8
-avro.version=1.5.3
+avro.version=1.7.2
 commons-beanutils.version=1.7.0
 commons-cli.version=1.0
 commons-codec.version=1.4
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13529334" author="russell.jurney" created="Tue, 11 Dec 2012 21:04:49 +0000"  >&lt;p&gt;Strange. I am not able to apply that and get that result. I&apos;ll try downloading and applying again. Hmmmmmm...&lt;/p&gt;

&lt;p&gt;Having this problem loading my emails:&lt;/p&gt;

&lt;p&gt;grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/avro-1.7.3.jar&lt;br/&gt;
grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/json-simple-1.1.jar&lt;br/&gt;
grunt&amp;gt; REGISTER /me/Software/pig-trunk/contrib/piggybank/java/piggybank.jar&lt;br/&gt;
grunt&amp;gt; &lt;br/&gt;
grunt&amp;gt; rmf /tmp/sent_counts.avro&lt;br/&gt;
grunt&amp;gt; &lt;br/&gt;
grunt&amp;gt; messages = LOAD &apos;/me/Data/test_inbox&apos; USING AvroStorage();&lt;br/&gt;
2012-12-11 13:01:41,690 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - ERROR 2998: Unhandled internal error. org/apache/avro/io/DatumReader&lt;br/&gt;
2012-12-11 13:01:41,690 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - java.lang.NoClassDefFoundError: org/apache/avro/io/DatumReader&lt;br/&gt;
	at java.lang.Class.forName0(Native Method)&lt;br/&gt;
	at java.lang.Class.forName(Class.java:247)&lt;br/&gt;
	at org.apache.pig.impl.PigContext.resolveClassName(PigContext.java:510)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanBuilder.validateFuncSpec(LogicalPlanBuilder.java:1206)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanBuilder.buildFuncSpec(LogicalPlanBuilder.java:1194)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanGenerator.func_clause(LogicalPlanGenerator.java:4766)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanGenerator.load_clause(LogicalPlanGenerator.java:3183)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanGenerator.op_clause(LogicalPlanGenerator.java:1315)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanGenerator.general_statement(LogicalPlanGenerator.java:799)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanGenerator.statement(LogicalPlanGenerator.java:517)&lt;br/&gt;
	at org.apache.pig.parser.LogicalPlanGenerator.query(LogicalPlanGenerator.java:392)&lt;br/&gt;
	at org.apache.pig.parser.QueryParserDriver.parse(QueryParserDriver.java:184)&lt;br/&gt;
	at org.apache.pig.PigServer$Graph.validateQuery(PigServer.java:1581)&lt;br/&gt;
	at org.apache.pig.PigServer$Graph.registerQuery(PigServer.java:1554)&lt;br/&gt;
	at org.apache.pig.PigServer.registerQuery(PigServer.java:526)&lt;br/&gt;
	at org.apache.pig.tools.grunt.GruntParser.processPig(GruntParser.java:991)&lt;br/&gt;
	at org.apache.pig.tools.pigscript.parser.PigScriptParser.parse(PigScriptParser.java:412)&lt;br/&gt;
	at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:194)&lt;br/&gt;
	at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:170)&lt;br/&gt;
	at org.apache.pig.tools.grunt.Grunt.run(Grunt.java:69)&lt;br/&gt;
	at org.apache.pig.Main.run(Main.java:535)&lt;br/&gt;
	at org.apache.pig.Main.main(Main.java:154)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.apache.hadoop.util.RunJar.main(RunJar.java:156)&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: org.apache.avro.io.DatumReader&lt;br/&gt;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)&lt;br/&gt;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)&lt;br/&gt;
	... 27 more&lt;/p&gt;

&lt;p&gt;Details also at logfile: /private/tmp/pig_1355258041691.log&lt;/p&gt;

&lt;p&gt;The schema is: &lt;/p&gt;

&lt;p&gt;Avro Schema: {&quot;fields&quot;: [&lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;message_id&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;thread_id&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;], &quot;name&quot;: &quot;in_reply_to&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;], &quot;name&quot;: &quot;subject&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;], &quot;name&quot;: &quot;body&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;], &quot;name&quot;: &quot;date&quot;}
&lt;p&gt;, {&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, {&quot;items&quot;: [&quot;null&quot;, {&quot;fields&quot;: [&lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;real_name&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;address&quot;}
&lt;p&gt;], &quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;from&quot;}], &quot;type&quot;: &quot;array&quot;}], &quot;name&quot;: &quot;froms&quot;}, {&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, {&quot;items&quot;: [&quot;null&quot;, {&quot;fields&quot;: [&lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;real_name&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;address&quot;}
&lt;p&gt;], &quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;to&quot;}], &quot;type&quot;: &quot;array&quot;}], &quot;name&quot;: &quot;tos&quot;}, {&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, {&quot;items&quot;: [&quot;null&quot;, {&quot;fields&quot;: [&lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;real_name&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;address&quot;}
&lt;p&gt;], &quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;cc&quot;}], &quot;type&quot;: &quot;array&quot;}], &quot;name&quot;: &quot;ccs&quot;}, {&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, {&quot;items&quot;: [&quot;null&quot;, {&quot;fields&quot;: [&lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;real_name&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;address&quot;}
&lt;p&gt;], &quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;bcc&quot;}], &quot;type&quot;: &quot;array&quot;}], &quot;name&quot;: &quot;bccs&quot;}, {&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, {&quot;items&quot;: [&quot;null&quot;, {&quot;fields&quot;: [&lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;real_name&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;doc&quot;: &quot;&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;], &quot;name&quot;: &quot;address&quot;}
&lt;p&gt;], &quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;reply_to&quot;}], &quot;type&quot;: &quot;array&quot;}], &quot;name&quot;: &quot;reply_tos&quot;}], &quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;Email&quot;}&lt;/p&gt;

&lt;p&gt;And just to get really meta... here is a JSON output of my Avro serialized emails... one from this list: &lt;/p&gt;

&lt;p&gt;{u&apos;bccs&apos;: None,&lt;br/&gt;
 u&apos;body&apos;: u&apos;\r\n    [ &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=13447110#comment-13447110&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2661?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=13447110#comment-13447110&lt;/a&gt; ] \r\n\r\nDmitriy V. Ryaboy commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;:\r\n----------------------------------------\r\n\r\nor, you know, stick a key in MemCache. #whyishadoopsohard\r\n                \r\n&amp;gt; Pig uses an extra job for loading data in Pigmix L9\r\n&amp;gt; ---------------------------------------------------\r\n&amp;gt;\r\n&amp;gt;                 Key: &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;\r\n&amp;gt;                 URL: &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661rn&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2661\r\n&lt;/a&gt;&amp;gt;             Project: Pig\r\n&amp;gt;          Issue Type: Improvement\r\n&amp;gt;    Affects Versions: 0.9.0\r\n&amp;gt;            Reporter: Jie Li\r\n&amp;gt;            Assignee: Jie Li\r\n&amp;gt;         Attachments: &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.0.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.1.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.2.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.3.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.4.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.5.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.6.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.7.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.8.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;.plan.txt\r\n&amp;gt;\r\n&amp;gt;\r\n&amp;gt; See &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-200?focusedCommentId=13260155&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13260155rnrn--rnThis&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-200?focusedCommentId=13260155&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13260155\r\n\r\n--\r\nThis&lt;/a&gt; message is automatically generated by JIRA.\r\nIf you think it was sent incorrectly, please contact your JIRA administrators\r\nFor more information on JIRA, see: &lt;a href=&quot;http://www.atlassian.com/software/jirarn&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.atlassian.com/software/jira\r\n&lt;/a&gt;&apos;,&lt;br/&gt;
 u&apos;ccs&apos;: None,&lt;br/&gt;
 u&apos;date&apos;: u&apos;2012-09-03T15:22:07&apos;,&lt;br/&gt;
 u&apos;froms&apos;: [&lt;/p&gt;
{u&apos;address&apos;: u&apos;jira@apache.org&apos;,
             u&apos;real_name&apos;: u&apos;Dmitriy V. Ryaboy (JIRA)&apos;}
&lt;p&gt;],&lt;br/&gt;
 u&apos;in_reply_to&apos;: u&apos;52638020.7802.1335237294825.JavaMail.tomcat@hel.zones.apache.org&apos;,&lt;br/&gt;
 u&apos;message_id&apos;: u&apos;762728135.29484.1346646127701.JavaMail.jiratomcat@arcas&apos;,&lt;br/&gt;
 u&apos;reply_tos&apos;: [&lt;/p&gt;
{u&apos;address&apos;: u&apos;dev@pig.apache.org&apos;, u&apos;real_name&apos;: None}
&lt;p&gt;],&lt;br/&gt;
 u&apos;subject&apos;: u&apos;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Commented&amp;#93;&lt;/span&gt; (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2661&quot; title=&quot;Pig uses an extra job for loading data in Pigmix L9&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2661&quot;&gt;PIG-2661&lt;/a&gt;) Pig uses an extra job for loading\r\n data in Pigmix L9&apos;,&lt;br/&gt;
 u&apos;thread_id&apos;: u&apos;1400097807569590118&apos;,&lt;br/&gt;
 u&apos;tos&apos;: [&lt;/p&gt;
{u&apos;address&apos;: u&apos;pig-dev@hadoop.apache.org&apos;, u&apos;real_name&apos;: None}
&lt;p&gt;]}&lt;/p&gt;</comment>
                            <comment id="13529484" author="russell.jurney" created="Tue, 11 Dec 2012 23:34:24 +0000"  >&lt;p&gt;I got a clean clone of trunk and applied the patch, then attempt to load the file again:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/avro-1.7.2.jar
grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/avro-ipc-1.7.2.jar
grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/avro-mapred-1.7.2.jar
grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/avro-tools-1.7.2.jar
grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/trevni-avro-1.7.2.jar
grunt&amp;gt; REGISTER /me/Software/pig-trunk/build/ivy/lib/Pig/json-simple-1.1.jar
grunt&amp;gt; REGISTER /me/Software/pig-trunk/contrib/piggybank/java/piggybank.jar
grunt&amp;gt; 
grunt&amp;gt; 
grunt&amp;gt; messages = LOAD &apos;/me/Data/test_inbox&apos; USING AvroStorage();
2012-12-11 15:32:36,989 [main] ERROR org.apache.pig.tools.grunt.Grunt - ERROR 2998: Unhandled internal error. org/apache/avro/io/DatumReader
2012-12-11 15:32:36,989 [main] ERROR org.apache.pig.tools.grunt.Grunt - java.lang.NoClassDefFoundError: org/apache/avro/io/DatumReader
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at org.apache.pig.impl.PigContext.resolveClassName(PigContext.java:510)
	at org.apache.pig.parser.LogicalPlanBuilder.validateFuncSpec(LogicalPlanBuilder.java:1206)
	at org.apache.pig.parser.LogicalPlanBuilder.buildFuncSpec(LogicalPlanBuilder.java:1194)
	at org.apache.pig.parser.LogicalPlanGenerator.func_clause(LogicalPlanGenerator.java:4766)
	at org.apache.pig.parser.LogicalPlanGenerator.load_clause(LogicalPlanGenerator.java:3183)
	at org.apache.pig.parser.LogicalPlanGenerator.op_clause(LogicalPlanGenerator.java:1315)
	at org.apache.pig.parser.LogicalPlanGenerator.general_statement(LogicalPlanGenerator.java:799)
	at org.apache.pig.parser.LogicalPlanGenerator.statement(LogicalPlanGenerator.java:517)
	at org.apache.pig.parser.LogicalPlanGenerator.query(LogicalPlanGenerator.java:392)
	at org.apache.pig.parser.QueryParserDriver.parse(QueryParserDriver.java:184)
	at org.apache.pig.PigServer$Graph.validateQuery(PigServer.java:1581)
	at org.apache.pig.PigServer$Graph.registerQuery(PigServer.java:1554)
	at org.apache.pig.PigServer.registerQuery(PigServer.java:526)
	at org.apache.pig.tools.grunt.GruntParser.processPig(GruntParser.java:991)
	at org.apache.pig.tools.pigscript.parser.PigScriptParser.parse(PigScriptParser.java:412)
	at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:194)
	at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:170)
	at org.apache.pig.tools.grunt.Grunt.run(Grunt.java:69)
	at org.apache.pig.Main.run(Main.java:535)
	at org.apache.pig.Main.main(Main.java:154)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:156)
Caused by: java.lang.ClassNotFoundException: org.apache.avro.io.DatumReader
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 27 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13529485" author="russell.jurney" created="Tue, 11 Dec 2012 23:35:51 +0000"  >&lt;p&gt;Pardon the comment blitz:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Russells-MacBook-Pro:pig-trunk rjurney$ grep -iR &apos;org.apache.avro.io.DatumReader&apos; *
PIG-3015.patch:+import org.apache.avro.io.DatumReader;
PIG-3015.patch:+import org.apache.avro.io.DatumReader;
Binary file build/classes/org/apache/pig/builtin/AvroStorage.class matches
Binary file build/classes/org/apache/pig/impl/util/avro/AvroArrayReader.class matches
Binary file build/classes/org/apache/pig/impl/util/avro/AvroRecordReader.class matches
Binary file build/ivy/lib/Pig/avro-1.7.2.jar matches
Binary file build/ivy/lib/Pig/avro-tools-1.7.2.jar matches
Binary file build/pig-0.12.0-SNAPSHOT-withdependencies.jar matches
Binary file contrib/piggybank/java/build/classes/org/apache/pig/piggybank/storage/avro/AvroStorage.class matches
Binary file contrib/piggybank/java/build/classes/org/apache/pig/piggybank/storage/avro/PigAvroRecordReader.class matches
Binary file pig.jar matches
src/org/apache/pig/impl/util/avro/AvroArrayReader.java:import org.apache.avro.io.DatumReader;
src/org/apache/pig/impl/util/avro/AvroRecordReader.java:import org.apache.avro.io.DatumReader;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m puzzled... checking my classpath.&lt;/p&gt;</comment>
                            <comment id="13529538" author="russell.jurney" created="Wed, 12 Dec 2012 01:15:33 +0000"  >&lt;p&gt;Nothing I do, even after mosts tests pass on the latest patch, can get around this error. I&apos;ll check back.&lt;/p&gt;</comment>
                            <comment id="13530543" author="cheolsoo" created="Thu, 13 Dec 2012 00:39:45 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;Can you please add the missing files to the patch?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.io.FileNotFoundException: data/json/recordsWithDoubleUnderscores.json (No such file or directory)
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.io.FileNotFoundException: data/json/arrays.json (No such file or directory)
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.io.FileNotFoundException: data/json/arraysAsOutputByPig.json (No such file or directory)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I can&apos;t run your test cases.&lt;/p&gt;</comment>
                            <comment id="13534212" author="jadler" created="Mon, 17 Dec 2012 19:36:01 +0000"  >&lt;p&gt;My apologies; forgot to add those to the patch. Replaced the patch version.&lt;/p&gt;</comment>
                            <comment id="13537146" author="cheolsoo" created="Thu, 20 Dec 2012 16:48:27 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;I found a few errors with the new patch.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;python createtests.py fails with the following errors:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
creating data/avro/deflate/records.avro
sh: data/avro/deflate/records.avro: No such file or directory
creating data/avro/deflate/recordsAsOutputByPig.avro
sh: data/avro/deflate/recordsAsOutputByPig.avro: No such file or directory
creating data/avro/snappy/records.avro
sh: data/avro/snappy/records.avro: No such file or directory
creating data/avro/snappy/recordsAsOutputByPig.avro
sh: data/avro/snappy/recordsAsOutputByPig.avro: No such file or directory
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;These errors are due to a typo at line 85 in &lt;tt&gt;createtests.py&lt;/tt&gt;: &quot;&lt;tt&gt;data/avro/&lt;/tt&gt;&quot; should be &quot;&lt;tt&gt;data/avro/compressed/&lt;/tt&gt;&quot;.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;After fixing this typo, I get the following failures in &lt;tt&gt;TestAvroStorage&lt;/tt&gt;:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Testcase: testStoreSnappyCompressedRecords took 4.439 sec
    FAILED
Testcase: testLoadDeflateCompressedRecords took 0.007 sec
    FAILED
Testcase: testStoreDeflateCompressedRecords took 3.557 sec
    FAILED
Testcase: testLoadSnappyCompressedRecords took 0.004 sec
    FAILED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;These errors are due to typos in &lt;tt&gt;TestAvroStorage.java&lt;/tt&gt;: &quot;&lt;tt&gt;data/avro/deflate/&lt;/tt&gt;&quot; and &quot;&lt;tt&gt;data/avro/snappy/&lt;/tt&gt;&quot; should be &quot;&lt;tt&gt;data/avro/compressed/deflate/&lt;/tt&gt;&quot; and &quot;&lt;tt&gt;data/avro/compressed/sanppy/&lt;/tt&gt;&quot; respectively.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Lastly, I realized that &lt;tt&gt;createtest.py&lt;/tt&gt; doesn&apos;t generate the input avro file for &lt;tt&gt;testPartialLoadGlob&lt;/tt&gt;, and I saw your comment:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Please copy and run &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; command manually (doesn&apos;t work correctly from python right now... arg...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In fact, I haven&apos;t been able to fix this myself yet. When I run the command manually, &lt;tt&gt;testPartialLoadGlob&lt;/tt&gt; passes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13537174" author="jadler" created="Thu, 20 Dec 2012 17:23:10 +0000"  >&lt;p&gt;Revised patch to include bug fixes (thanks Cheolsoo Park!)&lt;/p&gt;</comment>
                            <comment id="13538919" author="cheolsoo" created="Sat, 22 Dec 2012 21:54:14 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;I am attaching a patch that replaces &lt;tt&gt;createtests.py&lt;/tt&gt; with Java code in &lt;tt&gt;TestAvroStorage.java&lt;/tt&gt;. I did this for two reasons:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Problem with generating &lt;tt&gt;evenFileNameTestDirectoryCounts.avro&lt;/tt&gt;. Using Avro Tool API addresses it.&lt;/li&gt;
	&lt;li&gt;Better integration with JUnit. Now we can run the unit test with a single command (&lt;tt&gt;ant clean test -Dtestcase=TestAvroStorage&lt;/tt&gt;). This auto-generates and delete input files before and after each test run.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please let me know what you think.&lt;/p&gt;</comment>
                            <comment id="13538986" author="cheolsoo" created="Sun, 23 Dec 2012 07:49:10 +0000"  >&lt;p&gt;I am attaching a new patch that includes the following fixes:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;tt&gt;hadoop-core.jar&lt;/tt&gt; is pulled as it&apos;s a dependency of &lt;tt&gt;trevni-core.jar&lt;/tt&gt;. This causes compile errors with hadoop-2.0.x. I fixed this as follows:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &amp;lt;dependency org=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro&quot;&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;trevni-avro&quot;&lt;/span&gt; rev=&lt;span class=&quot;code-quote&quot;&gt;&quot;${avro.version}&quot;&lt;/span&gt;
+      conf=&lt;span class=&quot;code-quote&quot;&gt;&quot;compile-&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;;checkstyle-&amp;gt;master&quot;&lt;/span&gt;&amp;gt;
+      &amp;lt;exclude org=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.hadoop&quot;&lt;/span&gt; module=&lt;span class=&quot;code-quote&quot;&gt;&quot;hadoop-core&quot;&lt;/span&gt;/&amp;gt;
+    &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;avro-tools.jar&lt;/tt&gt; contains hadoop classes such as Configuration. This causes compile errors with hadoop-2.0.x. I fixed this as follows:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &amp;lt;dependency org=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro&quot;&lt;/span&gt; name=&lt;span class=&quot;code-quote&quot;&gt;&quot;avro-tools&quot;&lt;/span&gt; rev=&lt;span class=&quot;code-quote&quot;&gt;&quot;${avro.version}&quot;&lt;/span&gt;
+      conf=&lt;span class=&quot;code-quote&quot;&gt;&quot;test-&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;&amp;gt;
+      &amp;lt;artifact name=&lt;span class=&quot;code-quote&quot;&gt;&quot;nodeps&quot;&lt;/span&gt; type=&lt;span class=&quot;code-quote&quot;&gt;&quot;jar&quot;&lt;/span&gt;/&amp;gt;
+    &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt; Now I can run &lt;tt&gt;TestAvroStorage&lt;/tt&gt; with &lt;tt&gt;-Dhadoopversion=23&lt;/tt&gt;, but all test cases currently fail. I haven&apos;t investigated yet.&lt;/p&gt;</comment>
                            <comment id="13539142" author="cheolsoo" created="Mon, 24 Dec 2012 00:52:32 +0000"  >&lt;p&gt;I am uploading a new patch that includes the following changes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I forgot to pass the &lt;tt&gt;--codec&lt;/tt&gt; option to the Avro tool when generating compressed &lt;tt&gt;.avro&lt;/tt&gt; files, so I fixed it.&lt;/li&gt;
	&lt;li&gt;I found that the unit test fails with MR2 because &lt;tt&gt;mapred.output.compress&lt;/tt&gt; is set to &lt;tt&gt;true&lt;/tt&gt; while &lt;tt&gt;mapred.output.compression.codec&lt;/tt&gt; is not set.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ERROR 0: &apos;mapred.output.compress&apos; is set but no value is specified &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;mapred.output.compression.codec&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What&apos;s worse is that any test cases that run after &lt;tt&gt;testStoreSnappyCompressedRecords&lt;/tt&gt; fails for the same reason. Apparently, this property remains enabled and affects other test cases. For now, I removed the following line from &lt;tt&gt;identity_codec.pig&lt;/tt&gt;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
SET mapred.output.compress &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With this change, I can actually run test jobs, but they still fail. The reason is because output files do not match with expected ones. I didn&apos;t investigate why this happens with MR2.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Lastly, I also found that the current patch does not implement compression support. The test cases such as &lt;tt&gt;testStoreSnappyCompressedRecords&lt;/tt&gt; and &lt;tt&gt;testStoreDeflateCompressedRecords&lt;/tt&gt; do not check &lt;tt&gt;avro.codec&lt;/tt&gt;. Please correct me if I am wrong.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13543455" author="jadler" created="Fri, 4 Jan 2013 00:26:45 +0000"  >&lt;p&gt;Hi Cheolsoo,&lt;/p&gt;

&lt;p&gt;You&apos;re totally right; I don&apos;t check the compression properties. I know that the avro mapred library does check those parameters (org.apache.avro.mapred.AvroOutPutFormat), but I don&apos;t use that output format. Fixing and testing, will follow up with a patch.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Joe&lt;/p&gt;</comment>
                            <comment id="13544109" author="jadler" created="Fri, 4 Jan 2013 19:03:39 +0000"  >&lt;p&gt;Added fixes for compression (and other metadata)&lt;/p&gt;</comment>
                            <comment id="13544116" author="cheolsoo" created="Fri, 4 Jan 2013 19:10:43 +0000"  >&lt;p&gt;Hi Joe, I think you forgot to add new files to the patch. Do you mind uploading the patch again? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13544132" author="jadler" created="Fri, 4 Jan 2013 19:20:19 +0000"  >&lt;p&gt;Oops, this one contains the changes.&lt;/p&gt;</comment>
                            <comment id="13544222" author="russell.jurney" created="Fri, 4 Jan 2013 20:21:25 +0000"  >&lt;p&gt;Joe, some comments on handling errors in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3059&quot; title=&quot;Global configurable minimum &amp;#39;bad record&amp;#39; thresholds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3059&quot;&gt;PIG-3059&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Regarding Avro, in reading &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/file/DataFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/file/DataFileReader.java&lt;/a&gt; - it looks like you can still sync to the next record under most bad reads. We should do so.&lt;/p&gt;

&lt;p&gt;You&apos;re right about a bad sync halting things, but in the case of a bad sync - you might try advancing by some amount using seek() and then sync&apos;ing again? I think this would work. I could be wrong, but in looking how seeks work - I think that would be ok. Kinda neat, maybe? Worst case, we would only throw out inputsplits on a bad sync(), not a bad read(). length() should help, as might pastSync(), skip() and available()&lt;/p&gt;</comment>
                            <comment id="13544248" author="jadler" created="Fri, 4 Jan 2013 20:57:22 +0000"  >&lt;p&gt;Hi Russ,&lt;/p&gt;

&lt;p&gt;I think you&apos;re right... it looks like you could do something like this in AvroRecordReader.nextKeyValue:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; nextKeyValue() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException {

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (reader.pastSync(end)) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    }

    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      currentRecord = reader.next(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(schema));
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NoSuchElementException e) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {
      reader.sync(reader.tell()+1);
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; ioe;
    }

    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me test this out to make sure it runs correctly on uncorrupted files. Would you mind creating a corrupted test file that I can use for testing?&lt;/p&gt;</comment>
                            <comment id="13545579" author="cheolsoo" created="Mon, 7 Jan 2013 02:00:18 +0000"  >&lt;p&gt;I am uploading a test program that I wrote. What it does are:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Reads an Avro file and prints out records to stdout.&lt;/li&gt;
	&lt;li&gt;Each time when it prints out records, it also prints out the current sync position (i.e. tell()).&lt;/li&gt;
	&lt;li&gt;When encountering an exception during a next(), it does sync(tell() + 1).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Unfortunately, it doesn&apos;t seem that Avro files have sync positions between records. Instead, it only has a single sync position at the end of file.&lt;/p&gt;

&lt;p&gt;You can run my program as follows:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Untar Test.tar.gz:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bad.avro
good.avro
Main.java
Test.jar
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;There are two Avro files: good.avro and bad.avro:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;good.avro&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -jar avro-tool.jar tojson good.avro
&lt;span class=&quot;code-quote&quot;&gt;&quot;0&quot;&lt;/span&gt;
...
&lt;span class=&quot;code-quote&quot;&gt;&quot;999&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;bad.avro&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java -jar avro-tool.jar tojson bad.avro
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; org.apache.avro.AvroRuntimeException: java.io.IOException: Invalid sync!
	at org.apache.avro.file.DataFileStream.hasNext(DataFileStream.java:210)
	at org.apache.avro.tool.DataFileReadTool.run(DataFileReadTool.java:64)
	at org.apache.avro.tool.Main.run(Main.java:74)
	at org.apache.avro.tool.Main.main(Main.java:63)

The Test.tar.gz contains the following files:
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;Run &quot;java -jar Test.jar good.avro&quot; gives the following output:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
lengh(): 3969
tell(): 3969
next(): 0
...
next(): 999
tell(): 3969
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As can be seen, the sync position never changes between records.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Run &quot;java -jar Test.jar bad.avro&quot; gives the following output:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
lengh(): 3969
tell(): 3969
hasNext() or next() failed
tell(): 3970
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The sync(tell()+1) sets the sync position to past the end of file, so it ends the program.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In summary, I don&apos;t think that we can recover from a bad sync() in Avro. Please correct me if my test program has a bug.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13545611" author="russell.jurney" created="Mon, 7 Jan 2013 03:35:14 +0000"  >&lt;p&gt;Linking to &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3059&quot; title=&quot;Global configurable minimum &amp;#39;bad record&amp;#39; thresholds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3059&quot;&gt;PIG-3059&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13545612" author="russell.jurney" created="Mon, 7 Jan 2013 03:39:41 +0000"  >&lt;p&gt;I just asked user@avro.apache.org how to recover from bad records when using DataFileReader.&lt;/p&gt;</comment>
                            <comment id="13546164" author="jadler" created="Mon, 7 Jan 2013 19:07:12 +0000"  >&lt;p&gt;Hi Cheolsoo:&lt;/p&gt;

&lt;p&gt;What size file are you using? You can configure the sync interval with the parameter avro.mapred.sync.interval (defined in org.apache.avro.mapred.AvroOutputFormat), and implemented in my latest patch (the one from last week).&lt;/p&gt;

&lt;p&gt;&amp;#8211; Joe&lt;/p&gt;</comment>
                            <comment id="13546183" author="cheolsoo" created="Mon, 7 Jan 2013 19:23:48 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;My file is pretty small. It makes sense that the sync interval is configurable. &lt;/p&gt;

&lt;p&gt;Please let me try to set the interval and run another test.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13546362" author="cheolsoo" created="Mon, 7 Jan 2013 22:40:14 +0000"  >&lt;p&gt;OK, I made two changes to my test program:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Set the sync interval to 32 bytes (32 bytes seems to be the possible minimum interval unless I misunderstood the Avro source code).&lt;/li&gt;
	&lt;li&gt;Increased the file size to ~10mb.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I can see sync points are added after every 32 bytes or so. I also see tell() returns increasing values with the good file.&lt;/p&gt;

&lt;p&gt;I am mimicking a bad file by deleting a random byte in a sync point. Running &lt;tt&gt;avro-tool tojson&lt;/tt&gt; gives me an invalid sync exception after reading to that corrupted sync point, so I guess that the bad file is created correctly.&lt;/p&gt;

&lt;p&gt;However, I cannot still recover from a bad read. I catches an exception from next() and do sync(tell() + 1). The next tell() seems to correctly return the next valid sync point. But next() still fails. In fact, it continues to fail until it hits the end of the file.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
next(): 9999
tell(): 82133
hasNext() or next() failed 
tell(): 82196
hasNext() or next() failed 
tell(): 82250
...
hasNext() or next() failed
tell(): 10424205
hasNext() or next() failed
tell(): 10424258
end of the file
tell(): 10424259
past the end of the file
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I am uploading my test program. &lt;tt&gt;TestInput.java&lt;/tt&gt; generates input files, and &lt;tt&gt;Test.java&lt;/tt&gt; runs the test.&lt;/p&gt;

&lt;p&gt;Does anyone have an idea what I am doing wrong?&lt;/p&gt;</comment>
                            <comment id="13546714" author="scott@richrelevance.com" created="Tue, 8 Jan 2013 09:00:12 +0000"  >&lt;p&gt;Try corrupting the file at a point inside the data block instead of inside&lt;br/&gt;
the sync marker.  The ability to recover from a corrupted file was added&lt;br/&gt;
in response to corrupted data, not corrupted sync.&lt;/p&gt;


</comment>
                            <comment id="13547011" author="cheolsoo" created="Tue, 8 Jan 2013 17:01:18 +0000"  >&lt;p&gt;Hi Scott,&lt;/p&gt;

&lt;p&gt;Thank you very much. That makes sense. After several tries and errors, I managed to &quot;correctly&quot; corrupt a data block and was able to verify the recovery.&lt;/p&gt;

&lt;p&gt;The output from &apos;java-tool.jar tojson bad.avro&apos; is as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Caused by: java.io.IOException: Block read partially, the data may be corrupt
	at org.apache.avro.file.DataFileStream.hasNext(DataFileStream.java:194)
	... 3 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The output from my test program is as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
next(): 685
tell(): 8196
next(): 686
tell(): 8196
hasNext() or next() failed
tell(): 8240
next(): 2656
tell(): 16432
next(): 2657
tell(): 16432
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The data are sequential integers (0 ~ 1M). Here is the number of lost integers due to a single corrupted data block with different sync intervals:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Sync interval in bytes&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Num. of lost values&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;32&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1970&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;16,000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5389&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;In summary,&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Avro can recover from a data block corruption but cannot from a sync marker corruption.&lt;/li&gt;
	&lt;li&gt;The amount of data loss depends on the sync interval. By default, it&apos;s 16KB, but it can vary from 32 to 2^30 bytes. The greater the sync interval is, the more data loss is.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I am attaching my test program and input files if anyone&apos;s interested.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13547088" author="cutting" created="Tue, 8 Jan 2013 18:28:16 +0000"  >&lt;p&gt;&amp;gt; Avro can recover from a data block corruption but cannot from a sync marker corruption.&lt;/p&gt;

&lt;p&gt;BTW, I think that&apos;s probably a bug in Avro&apos;s Java implementation that (separately) we should fix.&lt;/p&gt;</comment>
                            <comment id="13549323" author="russell.jurney" created="Thu, 10 Jan 2013 02:59:41 +0000"  >&lt;p&gt;Make note of lack of Trevni Boolean support: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1229&quot; title=&quot;Trevni should support Boolean fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1229&quot;&gt;&lt;del&gt;AVRO-1229&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13551502" author="jadler" created="Fri, 11 Jan 2013 20:46:23 +0000"  >&lt;p&gt;Just got bitten by &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2266&quot; title=&quot;bug with input file joining optimization in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2266&quot;&gt;&lt;del&gt;PIG-2266&lt;/del&gt;&lt;/a&gt; while doing some performance testing with this ticket. I&apos;m going to add that fix to this patch so that AvroStorage and TrevniStorage actually work.&lt;/p&gt;</comment>
                            <comment id="13551569" author="cheolsoo" created="Fri, 11 Jan 2013 22:08:42 +0000"  >&lt;p&gt;Hi Joe,&lt;/p&gt;

&lt;p&gt;Do you mind attaching the fix in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2266&quot; title=&quot;bug with input file joining optimization in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2266&quot;&gt;&lt;del&gt;PIG-2266&lt;/del&gt;&lt;/a&gt; as a separate patch? I will review and commit it right away. I just think that putting everything into a single patch will slow down progress.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Cheolsoo&lt;/p&gt;</comment>
                            <comment id="13556725" author="russell.jurney" created="Thu, 17 Jan 2013 23:17:26 +0000"  >&lt;p&gt;Plz note, Avro will have Boolean soon:  &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1229&quot; title=&quot;Trevni should support Boolean fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1229&quot;&gt;&lt;del&gt;AVRO-1229&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13559223" author="sms" created="Tue, 22 Jan 2013 00:01:05 +0000"  >&lt;p&gt;Created and linked &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1235&quot; title=&quot;Avro does not handle corrupt records&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1235&quot;&gt;AVRO-1235&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13561977" author="jadler" created="Thu, 24 Jan 2013 21:04:26 +0000"  >&lt;p&gt;Some additional bug fixes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Now correctly identifies recursive schema definitions&lt;/li&gt;
	&lt;li&gt;TrevniStorage was not correctly flushing output buffers before closing, causing files to be corrupted&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13563944" author="cheolsoo" created="Sun, 27 Jan 2013 22:32:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt;, thank you for the update. I just made very minor changes to the patch as follows:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Took out &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2266&quot; title=&quot;bug with input file joining optimization in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2266&quot;&gt;&lt;del&gt;PIG-2266&lt;/del&gt;&lt;/a&gt; and posted it in a separate patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2266&quot; title=&quot;bug with input file joining optimization in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2266&quot;&gt;&lt;del&gt;PIG-2266&lt;/del&gt;&lt;/a&gt;. I will commit it after running tests.&lt;/li&gt;
	&lt;li&gt;Parameterized the snappy version in build.xml and ivy.xml.&lt;/li&gt;
	&lt;li&gt;Down-graded Avro version to 1.7.3. I noticed that you bumped it to 1.7.4-SNAPSHOT, but when I tried your patch, 1.7.4-SNAPSHOT didn&apos;t exist on the Maven repo. Did you want Avro 1.7.4-SNAPSHOT because of recent updates in Avro?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13564926" author="jadler" created="Tue, 29 Jan 2013 00:59:23 +0000"  >&lt;p&gt;Sorry, didn&apos;t mean to submit a patch with Avro 1.7.4-SNAPSHOT. I added a couple optimizations to Trevni so that the performance was comparable with Avro. (I&apos;ll submit that patch to Avro.)&lt;/p&gt;</comment>
                            <comment id="13568753" author="cheolsoo" created="Fri, 1 Feb 2013 14:15:37 +0000"  >&lt;p&gt;I think the patch is very close to being committed. Two main obstacles are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Tests do not pass with Hadoop-2.0.x (i.e. ant clean test -Dtestcase=TestAvroStorage -Dhadoopversion=23).&lt;/li&gt;
	&lt;li&gt;Documentation is missing.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I will give another shot on debugging #1 when I get more time, but any help would be appreciated!&lt;/p&gt;</comment>
                            <comment id="13569048" author="russell.jurney" created="Fri, 1 Feb 2013 20:31:18 +0000"  >&lt;p&gt;I&apos;ll start testing this again.&lt;/p&gt;</comment>
                            <comment id="13569190" author="jadler" created="Fri, 1 Feb 2013 22:48:01 +0000"  >&lt;p&gt;Let me know what help you need. I can work on the documentation as well. Is early next week enough time? (Also, check out Avro-1241. I couldn&apos;t get adequate performance without it.)&lt;/p&gt;</comment>
                            <comment id="13569397" author="cheolsoo" created="Sat, 2 Feb 2013 02:29:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt;, if you could add documentation, that would be awesome!&lt;/p&gt;</comment>
                            <comment id="13576019" author="jadler" created="Mon, 11 Feb 2013 19:28:08 +0000"  >&lt;p&gt;Added description of AvroStorage and TrevniStorage to documentation. (Not finished editing yet, but wanted to share what I&apos;d written so far.)&lt;/p&gt;</comment>
                            <comment id="13577185" author="jadler" created="Tue, 12 Feb 2013 23:48:24 +0000"  >&lt;p&gt;I think the method setLocation for AvroStoage is marked as &quot;final.&quot; Does anyone object to removing the &quot;final&quot; modifier? &lt;/p&gt;</comment>
                            <comment id="13580116" author="russell.jurney" created="Sun, 17 Feb 2013 03:34:05 +0000"  >&lt;p&gt;Which patch should I be testing?&lt;/p&gt;</comment>
                            <comment id="13580118" author="cheolsoo" created="Sun, 17 Feb 2013 04:13:55 +0000"  >&lt;p&gt;Hi Russell,&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-7.patch is the latest patch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-8.patch is a doc patch. In fact, I will rename it since it&apos;s confusing.&lt;/p&gt;
</comment>
                            <comment id="13580119" author="cheolsoo" created="Sun, 17 Feb 2013 04:15:17 +0000"  >&lt;p&gt;Renaming &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-8.patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-doc.patch.&lt;/p&gt;</comment>
                            <comment id="13580341" author="russell.jurney" created="Mon, 18 Feb 2013 00:16:33 +0000"  >&lt;p&gt;Pre-req for &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3111&quot; title=&quot;ToAvro to convert any Pig record to an Avro bytearray&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3111&quot;&gt;PIG-3111&lt;/a&gt; which will refer to this in its implementation.&lt;/p&gt;</comment>
                            <comment id="13580359" author="russell.jurney" created="Mon, 18 Feb 2013 01:24:27 +0000"  >&lt;p&gt;Initial experience is very positive, making me highly motivated to getting Pig 0.12 out in 3 months or so if possible?&lt;/p&gt;</comment>
                            <comment id="13580360" author="russell.jurney" created="Mon, 18 Feb 2013 01:25:38 +0000"  >&lt;p&gt;illustrate fails &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="13580386" author="russell.jurney" created="Mon, 18 Feb 2013 03:36:47 +0000"  >&lt;p&gt;Loading data without going to Piggybank is amazing. However, Trevnistorage fails to store my emails, schema:&lt;/p&gt;

&lt;p&gt;You can reproduce this data with your own gmail emails (just need a few) with these instructions: &lt;a href=&quot;https://github.com/rjurney/Agile_Data_Code/tree/master/ch03&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/rjurney/Agile_Data_Code/tree/master/ch03&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;grunt&amp;gt; describe emails&lt;br/&gt;
emails: {message_id: chararray,thread_id: chararray,in_reply_to: chararray,subject: chararray,body: chararray,date: chararray,from: (real_name: chararray,address: chararray),tos: &lt;/p&gt;
{to: (real_name: chararray,address: chararray)}
&lt;p&gt;,ccs: &lt;/p&gt;
{cc: (real_name: chararray,address: chararray)}
&lt;p&gt;,bccs: &lt;/p&gt;
{bcc: (real_name: chararray,address: chararray)}
&lt;p&gt;,reply_tos: {reply_to: (real_name: chararray,address: chararray)}}&lt;/p&gt;

&lt;p&gt;Error:&lt;/p&gt;

&lt;p&gt;2013-02-17 18:03:31,574 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-6&amp;#93;&lt;/span&gt; INFO  org.apache.hadoop.mapred.MapTask - io.sort.mb = 100&lt;br/&gt;
2013-02-17 18:03:31,680 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-6&amp;#93;&lt;/span&gt; INFO  org.apache.hadoop.mapred.MapTask - data buffer = 79691776/99614720&lt;br/&gt;
2013-02-17 18:03:31,680 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-6&amp;#93;&lt;/span&gt; INFO  org.apache.hadoop.mapred.MapTask - record buffer = 262144/327680&lt;br/&gt;
2013-02-17 18:03:31,699 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-6&amp;#93;&lt;/span&gt; INFO  org.apache.pig.data.SchemaTupleBackend - Key &lt;span class=&quot;error&quot;&gt;&amp;#91;pig.schematuple&amp;#93;&lt;/span&gt; was not set... will not generate code.&lt;br/&gt;
2013-02-17 18:03:31,713 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-6&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce$Map - Aliases being processed per job phase (AliasName&lt;span class=&quot;error&quot;&gt;&amp;#91;line,offset&amp;#93;&lt;/span&gt;): M: emails&lt;span class=&quot;error&quot;&gt;&amp;#91;2,9&amp;#93;&lt;/span&gt;,null&lt;span class=&quot;error&quot;&gt;&amp;#91;-1,-1&amp;#93;&lt;/span&gt;,null&lt;span class=&quot;error&quot;&gt;&amp;#91;-1,-1&amp;#93;&lt;/span&gt;,token_records&lt;span class=&quot;error&quot;&gt;&amp;#91;-1,-1&amp;#93;&lt;/span&gt;,doc_word_totals&lt;span class=&quot;error&quot;&gt;&amp;#91;5,18&amp;#93;&lt;/span&gt;,1-84&lt;span class=&quot;error&quot;&gt;&amp;#91;5,27&amp;#93;&lt;/span&gt; C: doc_word_totals&lt;span class=&quot;error&quot;&gt;&amp;#91;5,18&amp;#93;&lt;/span&gt;,1-84&lt;span class=&quot;error&quot;&gt;&amp;#91;5,27&amp;#93;&lt;/span&gt; R: doc_word_totals&lt;span class=&quot;error&quot;&gt;&amp;#91;5,18&amp;#93;&lt;/span&gt;&lt;br/&gt;
2013-02-17 18:03:31,748 &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-6&amp;#93;&lt;/span&gt; WARN  org.apache.hadoop.mapred.LocalJobRunner - job_local_0001&lt;br/&gt;
org.apache.pig.backend.executionengine.ExecException: ERROR 0: Exception while executing [POUserFunc (Name: POUserFunc(org.apache.pig.builtin.LuceneTokenize)&lt;span class=&quot;error&quot;&gt;&amp;#91;bag&amp;#93;&lt;/span&gt; - scope-19 Operator Key: scope-19) children: null at []]: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:370)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.processPlan(POForEach.java:378)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getNext(POForEach.java:298)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.processInput(PhysicalOperator.java:314)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange.getNext(POPreCombinerLocalRearrange.java:126)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.processInput(PhysicalOperator.java:314)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getNext(POForEach.java:242)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.processInput(PhysicalOperator.java:314)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.getNext(POLocalRearrange.java:263)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.runPipeline(POSplit.java:254)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.processPlan(POSplit.java:236)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit.getNext(POSplit.java:228)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.runPipeline(PigGenericMapBase.java:283)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:278)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase.map(PigGenericMapBase.java:64)&lt;br/&gt;
	at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)&lt;br/&gt;
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:764)&lt;br/&gt;
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)&lt;br/&gt;
	at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:212)&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.lucene.analysis.standard.std31.StandardTokenizerImpl31.zzRefill(StandardTokenizerImpl31.java:795)&lt;br/&gt;
	at org.apache.lucene.analysis.standard.std31.StandardTokenizerImpl31.getNextToken(StandardTokenizerImpl31.java:1002)&lt;br/&gt;
	at org.apache.lucene.analysis.standard.StandardTokenizer.incrementToken(StandardTokenizer.java:180)&lt;br/&gt;
	at org.apache.lucene.analysis.standard.StandardFilter.incrementToken(StandardFilter.java:49)&lt;br/&gt;
	at org.apache.lucene.analysis.core.LowerCaseFilter.incrementToken(LowerCaseFilter.java:54)&lt;br/&gt;
	at org.apache.lucene.analysis.util.FilteringTokenFilter.incrementToken(FilteringTokenFilter.java:50)&lt;br/&gt;
	at org.apache.pig.builtin.LuceneTokenize.exec(LuceneTokenize.java:70)&lt;br/&gt;
	at org.apache.pig.builtin.LuceneTokenize.exec(LuceneTokenize.java:51)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:336)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:380)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:341)&lt;br/&gt;
	... 18 more&lt;br/&gt;
2013-02-17 18:03:31,811 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - HadoopJobId: job_local_0001&lt;br/&gt;
2013-02-17 18:03:31,811 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Processing aliases 1-84,doc_word_totals,emails,token_records&lt;br/&gt;
2013-02-17 18:03:31,811 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - detailed locations: M: emails&lt;span class=&quot;error&quot;&gt;&amp;#91;2,9&amp;#93;&lt;/span&gt;,null&lt;span class=&quot;error&quot;&gt;&amp;#91;-1,-1&amp;#93;&lt;/span&gt;,null&lt;span class=&quot;error&quot;&gt;&amp;#91;-1,-1&amp;#93;&lt;/span&gt;,token_records&lt;span class=&quot;error&quot;&gt;&amp;#91;-1,-1&amp;#93;&lt;/span&gt;,doc_word_totals&lt;span class=&quot;error&quot;&gt;&amp;#91;5,18&amp;#93;&lt;/span&gt;,1-84&lt;span class=&quot;error&quot;&gt;&amp;#91;5,27&amp;#93;&lt;/span&gt; C: doc_word_totals&lt;span class=&quot;error&quot;&gt;&amp;#91;5,18&amp;#93;&lt;/span&gt;,1-84&lt;span class=&quot;error&quot;&gt;&amp;#91;5,27&amp;#93;&lt;/span&gt; R: doc_word_totals&lt;span class=&quot;error&quot;&gt;&amp;#91;5,18&amp;#93;&lt;/span&gt;&lt;br/&gt;
2013-02-17 18:03:31,813 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - 0% complete&lt;br/&gt;
2013-02-17 18:03:31,817 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; WARN  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Ooops! Some job has failed! Specify -stop_on_failure if you want Pig to stop immediately on failure.&lt;br/&gt;
2013-02-17 18:03:31,817 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - job job_local_0001 has failed! Stop running all dependent jobs&lt;br/&gt;
2013-02-17 18:03:31,817 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - 100% complete&lt;br/&gt;
2013-02-17 18:03:31,818 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.pigstats.PigStatsUtil - 1 map reduce job(s) failed!&lt;br/&gt;
2013-02-17 18:03:31,818 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.tools.pigstats.SimplePigStats - Detected Local mode. Stats reported below may be incomplete&lt;br/&gt;
2013-02-17 18:03:31,819 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.tools.pigstats.SimplePigStats - Script Statistics: &lt;/p&gt;

&lt;p&gt;HadoopVersion	PigVersion	UserId	StartedAt	FinishedAt	Features&lt;br/&gt;
1.0.3	0.12.0-SNAPSHOT	rjurney	2013-02-17 18:03:31	2013-02-17 18:03:31	HASH_JOIN,GROUP_BY&lt;/p&gt;

&lt;p&gt;Failed!&lt;/p&gt;

&lt;p&gt;Failed Jobs:&lt;br/&gt;
JobId	Alias	Feature	Message	Outputs&lt;br/&gt;
job_local_0001	1-84,doc_word_totals,emails,token_records	MULTI_QUERY,COMBINER	Message: Job failed! Error - NA	&lt;/p&gt;

&lt;p&gt;Input(s):&lt;br/&gt;
Failed to read data from &quot;/me/Data/test_mbox&quot;&lt;/p&gt;

&lt;p&gt;Output(s):&lt;/p&gt;

&lt;p&gt;Job DAG:&lt;br/&gt;
job_local_0001	-&amp;gt;	null,&lt;br/&gt;
null	-&amp;gt;	null,null,&lt;br/&gt;
null	-&amp;gt;	null,&lt;br/&gt;
null	-&amp;gt;	null,&lt;br/&gt;
null	-&amp;gt;	null,&lt;br/&gt;
null&lt;/p&gt;


&lt;p&gt;2013-02-17 18:03:31,819 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Failed!&lt;/p&gt;</comment>
                            <comment id="13581460" author="jadler" created="Tue, 19 Feb 2013 17:27:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=russell.jurney&quot; class=&quot;user-hover&quot; rel=&quot;russell.jurney&quot;&gt;Russell Jurney&lt;/a&gt;: ]Reading through the stack trace that you posted, it does not look like the null pointer exception was occurring in TrevniStorage. (It looks like it was occurring in the Tokenizer). Does your script work correctly if you use it with another format, like PigStorage?&lt;/p&gt;
</comment>
                            <comment id="13581497" author="jadler" created="Tue, 19 Feb 2013 18:22:41 +0000"  >&lt;p&gt;Added support for Pig dates to AvroStorage and TrevniStorage (they&apos;re translated to longs when storing values). Also added a new test case.&lt;/p&gt;</comment>
                            <comment id="13593838" author="cheolsoo" created="Tue, 5 Mar 2013 19:58:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt;, sorry for the late reply, but you seem to have forgotten to include &quot;with_dates.pig&quot; in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-9.patch. Do you mind uploading it?&lt;/p&gt;

&lt;p&gt;In addition, all the ivy changes are not included in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-9.patch, which I will include in a new patch.&lt;/p&gt;</comment>
                            <comment id="13593840" author="cheolsoo" created="Tue, 5 Mar 2013 19:59:28 +0000"  >&lt;p&gt;Attaching &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-10.patch that put back the ivy changes.&lt;/p&gt;</comment>
                            <comment id="13594031" author="jadler" created="Tue, 5 Mar 2013 22:33:54 +0000"  >&lt;p&gt;Missing test file (not a patch)&lt;/p&gt;</comment>
                            <comment id="13596584" author="cheolsoo" created="Thu, 7 Mar 2013 23:58:31 +0000"  >&lt;p&gt;I got unit tests working with both hadoop 20 and 23. In fact, the problem was very simple. The option parser code was not correct (i.e. CommandLine.getOptionValue() takes the option name not the long option name.), and thus, the &quot;namespace&quot; of output Avro files was not set properly.&lt;/p&gt;

&lt;p&gt;What&apos;s surprised me was that how come this issue only showed up with hadoop23. We need better test coverage.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-11.patch includes the following changes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Fixed the option parser code.&lt;/li&gt;
	&lt;li&gt;Removed commented-out code.&lt;/li&gt;
	&lt;li&gt;Added &quot;with_dates.pig&quot;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13596695" author="cheolsoo" created="Fri, 8 Mar 2013 02:01:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-doc-2.patch fixes &quot;ant docs&quot; errors.&lt;/p&gt;</comment>
                            <comment id="13600212" author="aklish" created="Tue, 12 Mar 2013 17:30:51 +0000"  >&lt;p&gt;For Multiple Schema Support, I don&apos;t think we should follow the rules in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2579&quot; title=&quot;Support for multiple input schemas in AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2579&quot;&gt;&lt;del&gt;PIG-2579&lt;/del&gt;&lt;/a&gt;.  While this was a good first attempt&lt;br/&gt;
at supporting multiple data files with different schemas, it has problems:&lt;/p&gt;

&lt;p&gt;1) The rules only support schema evolution for flat records.  Nested records are not supported.&lt;br/&gt;
2) The AVRO specification already defines a set of rules for schema evolution.  In fact, it already has code inside GenericDatumReader that will resolve data between two different schemas.&lt;br/&gt;
We should be using that logic instead of writing logic that only works in very limited situations.&lt;br/&gt;
3) The idea of a merged schema is not as powerful as letting the user define the &apos;table&apos; schema they expect the data to conform to.  I would recommend  looking at how LinkedIn added support for AVRO to Hive.  Every partition can have a different schema, but there is a single &apos;table&apos; schema.  Hive will map the file/partition schema(s) to the &apos;table&apos; schema using the logic already inside AVRO.  &lt;/p&gt;</comment>
                            <comment id="13600231" author="jadler" created="Tue, 12 Mar 2013 17:43:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aklish&quot; class=&quot;user-hover&quot; rel=&quot;aklish&quot;&gt;Aaron Klish&lt;/a&gt;: I agree completely.&lt;/p&gt;

&lt;p&gt;I don&apos;t think this version of AvroStorage does anything special with  multiple schemas. If you don&apos;t specify a schema, it picks the schema from the most recently written Avro file. If you do specify a schema, it uses that schema. Provided that you follow the rules for evolving schemas, everything should work correctly.&lt;/p&gt;</comment>
                            <comment id="13600270" author="cheolsoo" created="Tue, 12 Mar 2013 18:09:21 +0000"  >&lt;p&gt;Here is what I am going to do. I will try to commit this patch as it is now because the patches are getting huge. I just need +1 from another committer to commit them because I modified the patches.&lt;/p&gt;

&lt;p&gt;Then, I will open follow up jiras to implement missing features including multiple schema support, etc. We can continue our discussion there.&lt;/p&gt;

&lt;p&gt;Does this make sense to everyone?&lt;/p&gt;</comment>
                            <comment id="13600638" author="russell.jurney" created="Tue, 12 Mar 2013 23:56:32 +0000"  >&lt;p&gt;Makes sense. Lets get this in.&lt;/p&gt;</comment>
                            <comment id="13600645" author="dvryaboy" created="Wed, 13 Mar 2013 00:08:59 +0000"  >&lt;p&gt;Serious question: is there a reason to put this in Pig rather than keep elsewhere, where you can iterate without being tied to Pig&apos;s release cycle?&lt;/p&gt;</comment>
                            <comment id="13600648" author="jghoman" created="Wed, 13 Mar 2013 00:16:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Serious question: is there a reason to put this in Pig rather than keep elsewhere, where you can iterate without being tied to Pig&apos;s release cycle?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Having tried that with the Avro Serde/Haivvreo, I&apos;d say the code is better treated as part of Hive since it&apos;s wasn&apos;t getting the correct amount of attention it deserved in github.  There&apos;s a definite cost to keeping the components in sync, but there&apos;s a strong benefit to making it easy for people to interact with Avro through Pig right out of the box.&lt;/p&gt;</comment>
                            <comment id="13600649" author="cheolsoo" created="Wed, 13 Mar 2013 00:17:15 +0000"  >&lt;p&gt;The main reason is because Avro is a file format that Pig should support, and it&apos;s more convenient to use it if AvroStorage is a built-in storage. Here is the discussion in the past:&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/pig-user/201208.mbox/%3C27EE5059-F811-4E19-B1A3-951B4BB3BDDF%40hortonworks.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/pig-user/201208.mbox/%3C27EE5059-F811-4E19-B1A3-951B4BB3BDDF%40hortonworks.com%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13604910" author="fredrec" created="Mon, 18 Mar 2013 06:59:59 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;This looks very nice, I am really looking forward for it to be released.&lt;/p&gt;

&lt;p&gt;Does it make sense to have an option to include the input file path with each tuple (like -tagsource in PigStorage) ?&lt;/p&gt;

&lt;p&gt;I understand that this would add one more item to an already long list of options. But there are some real use cases needing this feature and it would make AvroStorage more similar to PigStorage.&lt;/p&gt;</comment>
                            <comment id="13605579" author="jadler" created="Mon, 18 Mar 2013 20:18:50 +0000"  >&lt;p&gt;I like the -tagsource option idea. Should we allow the user to provide a name for the &quot;tag source&quot; field? (If we picked a name like &quot;tagSource,&quot; and there was already a field in the avro Schema called &quot;tagSource&quot;, I&apos;m concerned that we&apos;d have to deal with that conflict. I think it would be cleaner to let the end user resolve the naming issue.)&lt;/p&gt;</comment>
                            <comment id="13605589" author="prkommireddi" created="Mon, 18 Mar 2013 20:29:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt; note the &quot;tagsource&quot; option on PigStorage is deprecated in 0.12 and replaced with &quot;tagFile&quot;. Additionally, there is an option &quot;tagPath&quot; for getting the entire path and not just the filename. See &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2857&quot; title=&quot;Add a -tagPath option to PigStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2857&quot;&gt;&lt;del&gt;PIG-2857&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13606484" author="jcoveney" created="Tue, 19 Mar 2013 16:41:51 +0000"  >&lt;p&gt;Joseph, as gratitude for the effort you&apos;ve put into this, I spent a chunk of my day giving it some eyes. Thank you for this! It also is timely, as I need to be ramping up on avro myself, so good stuff. I gave some comments in the RB, though nothing major, mostly style stuff, some error handling, etc. Except a +1 soon &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think it should be in the main Pig branch.&lt;/p&gt;

&lt;p&gt;As an aside, what is the plan w.r.t. Pig types that are not Avro types?&lt;/p&gt;</comment>
                            <comment id="13632347" author="jadler" created="Tue, 16 Apr 2013 00:15:09 +0100"  >&lt;p&gt;Sorry to have taken so long to reply. &lt;/p&gt;

&lt;p&gt;I map any Pig type to a union of an Avro Type and Null. Here are the type mappings that I implemented:&lt;/p&gt;

&lt;p&gt;Bag -&amp;gt; Array&lt;br/&gt;
Big Chararray -&amp;gt; String&lt;br/&gt;
Byte Array -&amp;gt; Bytes&lt;br/&gt;
Chararray -&amp;gt; String&lt;br/&gt;
Datetime -&amp;gt; Long&lt;br/&gt;
Double -&amp;gt; Double&lt;br/&gt;
Float -&amp;gt; Float&lt;br/&gt;
Integer -&amp;gt; Int&lt;br/&gt;
Map -&amp;gt; Map&lt;br/&gt;
Null -&amp;gt; Null&lt;br/&gt;
Tuple -&amp;gt; Record&lt;/p&gt;

&lt;p&gt;Byte, Error, Generic Writable, Internal Map, Unknown aren&apos;t mapped to anything yet. Do we need to store these as well?&lt;/p&gt;</comment>
                            <comment id="13645815" author="rohini" created="Tue, 30 Apr 2013 19:26:47 +0100"  >&lt;p&gt;Joseph,&lt;br/&gt;
  Thanks for the good work. Planning to go over it more in detail this week. At a glance, had the question why doesn&apos;t AvroStorage (even the old one) implement LoadPushDown (for column pruning) ? If it&apos;s just a miss we can create a separate jira for it.&lt;/p&gt;</comment>
                            <comment id="13645823" author="jadler" created="Tue, 30 Apr 2013 19:35:39 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rohini&quot; class=&quot;user-hover&quot; rel=&quot;rohini&quot;&gt;Rohini Palaniswamy&lt;/a&gt;: Great question. I definitely implemented that interface in an earlier version; I&apos;m not sure what happened to the code. Let me go through the patches to figure that one out.&lt;/p&gt;</comment>
                            <comment id="13645826" author="jadler" created="Tue, 30 Apr 2013 19:38:58 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rohini&quot; class=&quot;user-hover&quot; rel=&quot;rohini&quot;&gt;Rohini Palaniswamy&lt;/a&gt; OK, looks like I implemented the helper functions, and implemented the functionality for Trevni, but didn&apos;t implement it for AvroStorage. Will follow up with a patch.&lt;/p&gt;</comment>
                            <comment id="13645928" author="rohini" created="Tue, 30 Apr 2013 21:16:16 +0100"  >&lt;p&gt;Thanks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Would be very nice to have it. Just saw that Jonathan had asked the same question earlier in his review comments.&lt;/p&gt;</comment>
                            <comment id="13659573" author="pmazak" created="Thu, 16 May 2013 15:24:14 +0100"  >&lt;p&gt;One simple workaround for us was to override AvroStorage&apos;s checkSchema this way.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * In Pig script &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;:
 * REGISTER &apos;lib/&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.jar&apos;
 * DEFINE AvroStorage com.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.JoinableAvroStorage;
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class JoinableAvroStorage &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; AvroStorage {
  
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void checkSchema(ResourceSchema s) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.checkSchema(s);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SchemaParseException spe) {
      ResourceFieldSchema[] pigFields = s.getFields();
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; pigFields.length; i++) {
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; outname = pigFields[i].getName();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outname.contains(&lt;span class=&quot;code-quote&quot;&gt;&quot;::&quot;&lt;/span&gt;)) {
          &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; newOutname = outname.split(&lt;span class=&quot;code-quote&quot;&gt;&quot;::&quot;&lt;/span&gt;)[1];
          pigFields[i].setName(newOutname);
        }
      }
      &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.checkSchema(s);
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13661067" author="jadler" created="Fri, 17 May 2013 22:36:41 +0100"  >&lt;p&gt;Incremental patch that adds support for push down projections, fixed some bugs with options, gets all the test cases working again&lt;/p&gt;</comment>
                            <comment id="13662128" author="jadler" created="Mon, 20 May 2013 17:40:01 +0100"  >&lt;p&gt;I&apos;m getting confused by the names of the diffs. This one is a diff from trunk, as of now.&lt;/p&gt;</comment>
                            <comment id="13691340" author="cheolsoo" created="Sun, 23 Jun 2013 05:14:24 +0100"  >&lt;p&gt;I updated the patch again hoping that this will be committed - &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-22June2013.diff.&lt;/p&gt;

&lt;p&gt;The patch that Joe uploaded (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3015&quot; title=&quot;Rewrite of AvroStorage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3015&quot;&gt;&lt;del&gt;PIG-3015&lt;/del&gt;&lt;/a&gt;-20May2013.diff) was missing a couple of test files and included few unnecessary changes. I added missing files and cleaned up the patch a bit. The unit tests pass in Hadoop 20 and 23.&lt;/p&gt;

&lt;p&gt;AFAICT, most comments in the jira have been incorporated, so I think we should commit this patch. I am maintaining the code in my private repo at work now, but I&apos;d love to see this going in...&lt;/p&gt;</comment>
                            <comment id="13695279" author="dvryaboy" created="Fri, 28 Jun 2013 07:10:44 +0100"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;if we find more stuff, we can open other jiras. Let&apos;s get this into trunk.&lt;/p&gt;</comment>
                            <comment id="13695548" author="cheolsoo" created="Fri, 28 Jun 2013 17:28:58 +0100"  >&lt;p&gt;Thank you Dmitriy! I will commit it today!&lt;/p&gt;</comment>
                            <comment id="13695893" author="cheolsoo" created="Fri, 28 Jun 2013 23:58:40 +0100"  >&lt;p&gt;It&apos;s committed to trunk!&lt;/p&gt;

&lt;p&gt;Thank you Joe for the great contribution! Thanks everyone who reviewed/tested the patch!&lt;/p&gt;</comment>
                            <comment id="13716634" author="ahireanup" created="Tue, 23 Jul 2013 18:29:35 +0100"  >&lt;p&gt;Shouldn&apos;t we loose the timezone information if we convert datetime to long ?&lt;/p&gt;

&lt;p&gt;After going through the jira for datetime, it appears that datetime-&amp;gt;long  wasn&apos;t supported to avoid timezone information loss. &lt;/p&gt;

&lt;p&gt;Thanks !!&lt;/p&gt;</comment>
                            <comment id="13716673" author="cheolsoo" created="Tue, 23 Jul 2013 19:12:18 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ahireanup&quot; class=&quot;user-hover&quot; rel=&quot;ahireanup&quot;&gt;Anup Ahire&lt;/a&gt;, can you please open a separate jira? We can address your concern there.&lt;/p&gt;</comment>
                            <comment id="13717641" author="ahireanup" created="Tue, 23 Jul 2013 22:25:02 +0100"  >&lt;p&gt;Done.&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3391&quot; title=&quot;Issue with DateTime-&amp;gt; Long conversion in New AvroStorage()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3391&quot;&gt;PIG-3391&lt;/a&gt; Thanks!!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12521482">PIG-2266</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12628639">AVRO-1235</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12616892">PIG-3059</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12625590">PIG-3111</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12630438">AVRO-1241</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12625590">PIG-3111</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12504731">AVRO-806</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12630438">AVRO-1241</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12611990">HIVE-3585</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12572154" name="PIG-3015-10.patch" size="163374" author="cheolsoo" created="Tue, 5 Mar 2013 19:59:28 +0000"/>
                            <attachment id="12572646" name="PIG-3015-11.patch" size="162737" author="cheolsoo" created="Thu, 7 Mar 2013 23:58:31 +0000"/>
                            <attachment id="12583694" name="PIG-3015-12.patch" size="16693" author="jadler" created="Fri, 17 May 2013 22:36:41 +0100"/>
                            <attachment id="12562250" name="PIG-3015-2.patch" size="156922" author="cheolsoo" created="Sat, 22 Dec 2012 21:54:14 +0000"/>
                            <attachment id="12583849" name="PIG-3015-20May2013.diff" size="183071" author="jadler" created="Mon, 20 May 2013 17:40:01 +0100"/>
                            <attachment id="12589285" name="PIG-3015-22June2013.diff" size="186628" author="cheolsoo" created="Sun, 23 Jun 2013 05:14:24 +0100"/>
                            <attachment id="12562266" name="PIG-3015-3.patch" size="157406" author="cheolsoo" created="Sun, 23 Dec 2012 07:49:10 +0000"/>
                            <attachment id="12562301" name="PIG-3015-4.patch" size="167302" author="cheolsoo" created="Mon, 24 Dec 2012 01:04:30 +0000"/>
                            <attachment id="12563343" name="PIG-3015-5.patch" size="156904" author="jadler" created="Fri, 4 Jan 2013 19:20:19 +0000"/>
                            <attachment id="12566372" name="PIG-3015-6.patch" size="164168" author="jadler" created="Thu, 24 Jan 2013 21:04:26 +0000"/>
                            <attachment id="12566691" name="PIG-3015-7.patch" size="164261" author="cheolsoo" created="Sun, 27 Jan 2013 22:32:17 +0000"/>
                            <attachment id="12569973" name="PIG-3015-9.patch" size="157655" author="jadler" created="Tue, 19 Feb 2013 18:22:41 +0000"/>
                            <attachment id="12572675" name="PIG-3015-doc-2.patch" size="13462" author="cheolsoo" created="Fri, 8 Mar 2013 02:01:10 +0000"/>
                            <attachment id="12569703" name="PIG-3015-doc.patch" size="13357" author="cheolsoo" created="Sun, 17 Feb 2013 04:15:17 +0000"/>
                            <attachment id="12563778" name="Test.java" size="2349" author="cheolsoo" created="Tue, 8 Jan 2013 17:01:18 +0000"/>
                            <attachment id="12563777" name="TestInput.java" size="1064" author="cheolsoo" created="Tue, 8 Jan 2013 17:01:18 +0000"/>
                            <attachment id="12563779" name="bad.avro" size="2995712" author="cheolsoo" created="Tue, 8 Jan 2013 17:01:18 +0000"/>
                            <attachment id="12563780" name="good.avro" size="2995711" author="cheolsoo" created="Tue, 8 Jan 2013 17:01:18 +0000"/>
                            <attachment id="12572184" name="with_dates.pig" size="439" author="jadler" created="Tue, 5 Mar 2013 22:33:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 29 Oct 2012 22:19:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>252880</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy74kf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75550</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>