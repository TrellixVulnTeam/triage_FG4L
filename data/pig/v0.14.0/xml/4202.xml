<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:04:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-4202/PIG-4202.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-4202] Reset UDFContext state before OutputCommitter invocations in Tez</title>
                <link>https://issues.apache.org/jira/browse/PIG-4202</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;We switch to use UDFContext.isFrontend in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-4187&quot; title=&quot;Fix Orc e2e tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-4187&quot;&gt;&lt;del&gt;PIG-4187&lt;/del&gt;&lt;/a&gt;. However, it does not work as expected in local mode. This causes some local mode test fail (TestOrcStoragePushdown.createInputData).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12744136">PIG-4202</key>
            <summary>Reset UDFContext state before OutputCommitter invocations in Tez</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12666475">PIG-3446</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rohini">Rohini Palaniswamy</assignee>
                                    <reporter username="daijy">Daniel Dai</reporter>
                        <labels>
                    </labels>
                <created>Thu, 25 Sep 2014 22:25:32 +0100</created>
                <updated>Fri, 21 Nov 2014 05:59:09 +0000</updated>
                            <resolved>Mon, 29 Sep 2014 22:24:51 +0100</resolved>
                                                    <fixVersion>0.14.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14148386" author="rohini" created="Thu, 25 Sep 2014 23:07:27 +0100"  >&lt;p&gt;You can add check for jconf.get(&quot;mapreduce.job.dir&quot;) == null instead of introducing a new setting for isFrontEnd(). Can we also go back to isUDFConfEmpty()?  UDFContext.destroy() in PigProcessor.close() should take care of resetting UDFContext on container reuse. If it does not we need to fix that. &lt;/p&gt;</comment>
                            <comment id="14148412" author="rohini" created="Thu, 25 Sep 2014 23:37:15 +0100"  >&lt;p&gt;Actually, that did not work. Let me try something else&lt;/p&gt;</comment>
                            <comment id="14148420" author="daijy" created="Thu, 25 Sep 2014 23:42:07 +0100"  >&lt;p&gt;The change is made to fix Orc_3. It seems OutputCommitter still get stale UDFContext even we clean it up in PigProcessor.close:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Caused by: java.lang.NullPointerException
        at org.apache.pig.impl.util.orc.OrcUtils.createObjectInspector(OrcUtils.java:645)
        at org.apache.pig.builtin.OrcStorage.setStoreLocation(OrcStorage.java:240)
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.setLocation(PigOutputFormat.java:169)
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.setUpContext(PigOutputCommitter.java:116)
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.getCommitters(PigOutputCommitter.java:90)
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputCommitter.&amp;lt;init&amp;gt;(PigOutputCommitter.java:71)
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigOutputFormat.getOutputCommitter(PigOutputFormat.java:292)
        at org.apache.tez.mapreduce.committer.MROutputCommitter.getOutputCommitter(MROutputCommitter.java:136)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14148740" author="daijy" created="Fri, 26 Sep 2014 05:36:37 +0100"  >&lt;p&gt;The issue is because PigOutputCommitter.commitJob is invoked after PigProcessor.close. So after PigProcessor.close clean up the UDFContext, PigOutputCommitter.commitJob set it up with the previous config. &lt;/p&gt;</comment>
                            <comment id="14150938" author="rohini" created="Sun, 28 Sep 2014 05:04:48 +0100"  >&lt;p&gt;Container reuse on task is fine and PigProcessor.close() cleanup is working as expected. It is when the DAG container gets reused for the second DAG, that the state setup by PigOutputCommitter.commitJob of previous DAG is not cleaned up. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bikassaha&quot; class=&quot;user-hover&quot; rel=&quot;bikassaha&quot;&gt;Bikas Saha&lt;/a&gt;,&lt;br/&gt;
      Do we have some API like ProcessorFrameworkInterface.close() on a plugin that can be implemented for a DAG to cleanup any static state when it terminates? I could not find any. &lt;/p&gt;</comment>
                            <comment id="14151251" author="bikassaha" created="Mon, 29 Sep 2014 00:00:00 +0100"  >&lt;p&gt;Sorry. I am not able to follow the problem here. What is the sequence of events that causes this? Is this happening in the task (during task commit) or the AM (during job commit)? Cannot give a sane answer without understanding whats happening.&lt;/p&gt;</comment>
                            <comment id="14151612" author="rohini" created="Mon, 29 Sep 2014 13:02:08 +0100"  >&lt;p&gt;AM (job commit). All static variables/thread locals are cleared up in PigProcessor.close(). So we don&apos;t have any problem with container reuse of tasks. But nothing of that sort is done with AM and so we are facing issues when AM container is reused and if there are static variables initialized with the OutputCommitter.&lt;/p&gt;</comment>
                            <comment id="14151783" author="rohini" created="Mon, 29 Sep 2014 16:19:33 +0100"  >&lt;p&gt;Workaround patch till we have a API in Tez to cleanup for container reuse on DAG termination.&lt;/p&gt;</comment>
                            <comment id="14151903" author="daijy" created="Mon, 29 Sep 2014 18:07:54 +0100"  >&lt;p&gt;Why we create a diverge in tez? We can do the clean up in PigOutputCommitter and no harm for MR.&lt;/p&gt;</comment>
                            <comment id="14151905" author="rohini" created="Mon, 29 Sep 2014 18:10:36 +0100"  >&lt;p&gt;hmm. Thought will keep it separate if there are more things to be cleaned up. Will keep it in PigOutputCommitter for now. If anything comes up we can have a new class. By then I hope Tez folks provide an API for it.&lt;/p&gt;</comment>
                            <comment id="14151916" author="bikassaha" created="Mon, 29 Sep 2014 18:19:44 +0100"  >&lt;p&gt;To be clear, committer are per vertex in Tez and not per DAG. So there is no concept of a DAG level committer setup/close. If Pig has static variable issues then they may show up if/when Pig writes multiple HDFS outputs in different vertices of the same DAG.&lt;/p&gt;

&lt;p&gt;In Tez the OutputCommitter interface, from which all committers are expected to derive, has an initialize() method that is called upon Vertex initialization. Could PigOutputCommitter clear its static vars in that method? If not, could PigOutputCommitter clear its static vars in the setupJob() method (this is an MR OutputCommitter API). Again, given that committers are per vertex, this could have implications for multiple vertices writing output that needs commit.&lt;/p&gt;</comment>
                            <comment id="14151948" author="daijy" created="Mon, 29 Sep 2014 18:46:54 +0100"  >&lt;p&gt;We do ask for a vertex level hook not a DAG level. Pig uses static variable and we clean it up in AbstractLogicalIOProcessor.close. Now it seems AbstractLogicalIOProcessor.close is not the right place. We can do clean up in initialize(), we can also do a second cleanup in OutputCommitter, but the fact there is no hook for such cleanup is not intuitive and other people will fall into the same pitfall.&lt;/p&gt;</comment>
                            <comment id="14151964" author="bikassaha" created="Mon, 29 Sep 2014 19:04:11 +0100"  >&lt;p&gt;To be clear, none of my above comment was for processors. It was for the OutputCommitter API in Tez which runs in the AM per vertex per output. The lifecycle is committer.initialize()&lt;del&gt;&amp;gt;committer&lt;/del&gt;&amp;gt;setupOutputs()&lt;del&gt;&amp;gt;committer&lt;/del&gt;&amp;gt;commitOutput(). In the absence of side effects commitOutput() is the equivalent of close(). We can add a new committer.close() which would be called immediately after committer.commitOutput(). So its value is not clear. Does PigOutputCommitter derive from OutputCommitter in Tez?&lt;/p&gt;

&lt;p&gt;Questions to understand this better. Are there any issues in cleaning up within commitOutput() after commit operations have completed? Do multiple committers in a vertex (vertex with multiple HDFS outputs) or multiple outputs in different vertices work today? If yes, then why are the statics not causing a problem?&lt;/p&gt;</comment>
                            <comment id="14151995" author="daijy" created="Mon, 29 Sep 2014 19:18:32 +0100"  >&lt;p&gt;Pig has a single PigOutputCommitter derived from mapreduce.OutputCommitter even when there are multiple HDFS outputs. PigOutputCommitter is a wrapper, and it will invoke individual OutputCommitter sequentially. We only experience static variable issue with PigOutputCommitter itself. If the wrapped OutputCommitter has its own static variable, yes, they might have some issues as well.&lt;/p&gt;</comment>
                            <comment id="14152161" author="rohini" created="Mon, 29 Sep 2014 20:51:47 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;,&lt;br/&gt;
   I am getting errors with MR in local mode in TestOrcStorage if I put it in PigOutputCommitter. So went with the separate Committer for Tez. Also made changes to it to reset UDFContext before and after setupJob, commitJob and abortJob as Tez calls them sequentially for different outputs. &lt;/p&gt;</comment>
                            <comment id="14152267" author="daijy" created="Mon, 29 Sep 2014 21:52:30 +0100"  >&lt;p&gt;+1. It is a little weird we get errors if we reuse PigOutputCommitter. But from Bikas&apos; comment, we might need to diverge PigOutputCommitter in the future to invoke a cleanup hook anyway.&lt;/p&gt;</comment>
                            <comment id="14152322" author="rohini" created="Mon, 29 Sep 2014 22:24:51 +0100"  >&lt;p&gt;Committed to 0.14 and trunk. Thanks for the review Daniel.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12671318" name="PIG-4202-1.patch" size="2497" author="daijy" created="Thu, 25 Sep 2014 22:28:04 +0100"/>
                            <attachment id="12671799" name="PIG-4202-2.patch" size="16006" author="rohini" created="Mon, 29 Sep 2014 16:19:33 +0100"/>
                            <attachment id="12671858" name="PIG-4202-3.patch" size="16394" author="rohini" created="Mon, 29 Sep 2014 20:51:47 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Sep 2014 22:07:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzud27:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>