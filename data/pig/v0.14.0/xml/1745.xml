<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:11:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1745/PIG-1745.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1745] Disable converting bytes loading from BinStorage</title>
                <link>https://issues.apache.org/jira/browse/PIG-1745</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;If we load bytes from BinStorage, we don&apos;t actually know how we get these bytes originally, and we will not have a way to cast those bytes. Ideally we shall encode caster into BinStorage data file, but we are not there yet. Currrently bytesToXXX methods for BinStorage is wrong and it results unexpected errors. Eg.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = load &apos;1.txt&apos; as (a0, a1, a2);
store a into &apos;1.bin&apos; as BinStorage();

a = load &apos;1.bin&apos; using BinStorage as (a0, a1, a2);
b = foreach a generate (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)a0;
dump b;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code will run but produce wrong data. It&apos;s less confusing if we throw an exception in this case.&lt;/p&gt;

&lt;p&gt;Release Notes:&lt;br/&gt;
Pig will throw exception in the case we want to convert bytes loading from BinStorage&lt;/p&gt;</description>
                <environment></environment>
        <key id="12480724">PIG-1745</key>
            <summary>Disable converting bytes loading from BinStorage</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="daijy">Daniel Dai</reporter>
                        <labels>
                    </labels>
                <created>Tue, 23 Nov 2010 19:58:48 +0000</created>
                <updated>Thu, 4 Aug 2011 01:34:49 +0100</updated>
                            <resolved>Mon, 6 Dec 2010 06:56:03 +0000</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.9.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12966289" author="dvryaboy" created="Thu, 2 Dec 2010 21:33:30 +0000"  >&lt;p&gt;Daniel,&lt;br/&gt;
check out how I addressed a very similar problem in the HBase loader &amp;#8211; I have a default caster, and allow a user to specify one using a constructor if necessary. I think that&apos;s cleaner than adding and extra storage class.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/pig/blob/trunk/src/org/apache/pig/backend/hadoop/hbase/HBaseStorage.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/pig/blob/trunk/src/org/apache/pig/backend/hadoop/hbase/HBaseStorage.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12966302" author="daijy" created="Thu, 2 Dec 2010 22:12:15 +0000"  >&lt;p&gt;Yes, I think it is good, in that we can also allow other caster. But different from HBaseStorage, I don&apos;t want to make UTF8StorageConverter special, we require full qualified caster class name in the constructor parameter, unless this class is in org.apache.pig.builtin. &lt;/p&gt;</comment>
                            <comment id="12966336" author="daijy" created="Thu, 2 Dec 2010 23:04:19 +0000"  >&lt;p&gt;Attach another patch addressing comments from Dmitriy and Thejas.&lt;/p&gt;</comment>
                            <comment id="12966364" author="thejas" created="Fri, 3 Dec 2010 00:50:40 +0000"  >&lt;p&gt;+1 &lt;br/&gt;
please commit after test-patch and unit tests succeed.&lt;/p&gt;</comment>
                            <comment id="12967104" author="daijy" created="Mon, 6 Dec 2010 06:56:03 +0000"  >&lt;p&gt;test-patch:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 overall. &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 @author. The patch does not contain any @author tags.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 tests included. The patch appears to include 2 new or modified tests.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 javadoc. The javadoc tool did not generate any warning messages.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 javac. The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 findbugs. The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 release audit. The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;Unit test:&lt;br/&gt;
pass&lt;/p&gt;

&lt;p&gt;end-to-end test:&lt;br/&gt;
pass&lt;/p&gt;</comment>
                            <comment id="13017345" author="mridulm@yahoo-inc.com" created="Fri, 8 Apr 2011 09:29:17 +0100"  >&lt;p&gt;Since this is a backwardly incompatible change, some release notes indicating how users can continue to rely on earlier behavior (when the data being casted is indeed a long in the example in desc) would be good - assuming it is still possible to do so.&lt;br/&gt;
If it is totally removed as an option, it is very unfortunate and drastically diminishes the value of BinStorage.&lt;/p&gt;</comment>
                            <comment id="13017660" author="daijy" created="Fri, 8 Apr 2011 22:33:59 +0100"  >&lt;blockquote&gt;&lt;p&gt;Since this is a backwardly incompatible change, some release notes indicating how users can continue to rely on earlier behavior (when the data being casted is indeed a long in the example in desc) would be good - assuming it is still possible to do so.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I moved these Jiras to the right section in CHANGES.txt&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If it is totally removed as an option, it is very unfortunate and drastically diminishes the value of BinStorage.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What do you mean &quot;removed as an option&quot;? This option will not be removed.&lt;/p&gt;</comment>
                            <comment id="13017717" author="olgan" created="Fri, 8 Apr 2011 23:35:56 +0100"  >&lt;p&gt;Just to clarify what is happenning (and we are adding information to the 0.9 documentation)&lt;/p&gt;

&lt;p&gt;The way to get previous functionality is to specify a converter for BinStorage to use to do the casts:&lt;/p&gt;

&lt;p&gt;a = load &apos;g/part*&apos; using BinStorage(&apos;Utf8StorageConverter&apos;) as (id, d:bag&lt;/p&gt;
{t:(v, s)}
&lt;p&gt;);&lt;br/&gt;
b = foreach a generate (double)id, flatten(d);&lt;br/&gt;
dump b;&lt;/p&gt;

&lt;p&gt;The UTF8StorageConverter is provided by default in Pig.&lt;/p&gt;

&lt;p&gt;We are require users to specify the converter explicitely to make sure that wrong results are not returned in case the data is not in the format UTF8Converter can understand.&lt;/p&gt;
</comment>
                            <comment id="13017836" author="mridulm@yahoo-inc.com" created="Sat, 9 Apr 2011 12:26:12 +0100"  >
&lt;p&gt;@Daniel Dai: By &quot;removed as an option&quot;, I meant whether the ability to cast to arbitrary schema was removed or not. Olga clarified that.&lt;/p&gt;

&lt;p&gt;@Olga : Glad to see there is a way to achieve the functionality I was looking for.&lt;br/&gt;
But passing classname as a parameter seems fragile behavior if the intention is to get an instance of LoadCaster.&lt;br/&gt;
How would we handle cases for other loaders which require similar functionality (just as with BinStorage, it is not practical to assume all loaders can implement LoadCaster &apos;well&apos;) ? Mirror similar idiom ?&lt;br/&gt;
Exposing implementation dependent constructor arguments for things like this is not extensible in long run if the deficiency is due to pig interface requirements. A more general way to plug it in would be better (and more easily verifiable by pig).&lt;/p&gt;</comment>
                            <comment id="13017989" author="dvryaboy" created="Sun, 10 Apr 2011 01:02:35 +0100"  >&lt;p&gt;Mridul: the same idiom is used in HBaseStorage. &lt;/p&gt;

&lt;p&gt;Can you suggest a better idiom or interface?&lt;/p&gt;</comment>
                            <comment id="13018243" author="mridulm@yahoo-inc.com" created="Mon, 11 Apr 2011 09:46:46 +0100"  >
&lt;p&gt;As of now, as we have more loaders - sherpa, fish, hive, etc - which require similar functionality which is already duplicated by BinStorage, hbase, etc : all of them will end up exposing details of this nature directly to the user : that too in ways which are validated differently by each (not to mention duplication of code).&lt;/p&gt;

&lt;p&gt;load and store func&apos;s are getting overloaded with functionalitywhich is not directly (but cosmetically) related to their operation : like in this case, where we tie casting to the loader - but configure it &quot;externally&quot; with the loader acting as a delegate for it.&lt;br/&gt;
Instead of each loader reinventing and exposing similar (or different) idioms, would be better to abstract this away into pig : either as a grammar construct or as something else with reasonable smart default provided by the loader (getDefaultLoadCaster instead of getLoadCaster ?).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12460756">PIG-1341</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12455344">PIG-1222</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12460300" name="PIG-1745-1.patch" size="8727" author="daijy" created="Tue, 23 Nov 2010 20:01:22 +0000"/>
                            <attachment id="12465001" name="PIG-1745-2.patch" size="13330" author="daijy" created="Tue, 30 Nov 2010 22:40:03 +0000"/>
                            <attachment id="12465178" name="PIG-1745-3.patch" size="13597" author="daijy" created="Thu, 2 Dec 2010 23:07:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Dec 2010 21:33:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>66255</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyathr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97089</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1. Converting bytes loading from BinStorage() will now result an error.&lt;br/&gt;
2. If user clearly knows the caster for the BinStorage, he/she can pass the caster class name to the construct of BinStorage. For example, if data is load from PigStorage (or other LoadFunc using Utf8StorageConverter) and store using BinStorage, user can pass &amp;quot;org.apache.pig.builtin.Utf8StorageConverter&amp;quot; to  the construct of BinStorage (or pass &amp;quot;Utf8StorageConverter&amp;quot;, since we will search for &amp;quot;org.apache.pig.builtin&amp;quot; package by default). By doing this, converting bytes to other type will still work.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>