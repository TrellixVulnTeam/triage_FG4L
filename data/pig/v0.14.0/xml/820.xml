<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:54:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-820/PIG-820.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-820] PERFORMANCE:  The RandomSampleLoader should be changed to allow it subsume another loader</title>
                <link>https://issues.apache.org/jira/browse/PIG-820</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Currently a sampling job requires that data already be stored in BinaryStorage format, since RandomSampleLoader extends BinaryStorage.  For order by this&lt;br/&gt;
has mostly been acceptable, because users tend to use order by at the end of their script where other MR jobs have already operated on the data and thus it&lt;br/&gt;
is already being stored in BinaryStorage.  For pig scripts that just did an order by, an entire MR job is required to read the data and write it out&lt;br/&gt;
in BinaryStorage format.&lt;/p&gt;

&lt;p&gt;As we begin work on join algorithms that will require sampling, this requirement to read the entire input and write it back out will not be acceptable.&lt;br/&gt;
Join is often the first operation of a script, and thus is much more likely to trigger this useless up front translation job.&lt;/p&gt;

&lt;p&gt;Instead RandomSampleLoader can be changed to subsume an existing loader, using the user specified loader to read the tuples while handling the skipping&lt;br/&gt;
between tuples itself.  This will require the subsumed loader to implement a Samplable Interface, that will look something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; SamplableLoader &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; LoadFunc {
    
    /**
     * Skip ahead in the input stream.
     * @param n number of bytes to skip
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; number of bytes actually skipped.  The &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; semantics are
     * exactly the same as {@link java.io.InpuStream#skip(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)}
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; skip(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; n) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
    
    /**
     * Get the current position in the stream.
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; position in the stream.
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getPosition() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The MRCompiler would then check if the loader being used to load data implemented the SamplableLoader interface.  If so, rather than create an initial MR&lt;br/&gt;
job to do the translation it would create the sampling job, having RandomSampleLoader use the user specified loader.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12426409">PIG-820</key>
            <summary>PERFORMANCE:  The RandomSampleLoader should be changed to allow it subsume another loader</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ashutoshc">Ashutosh Chauhan</assignee>
                                    <reporter username="alangates">Alan Gates</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 May 2009 01:58:14 +0100</created>
                <updated>Wed, 24 Mar 2010 22:13:06 +0000</updated>
                            <resolved>Tue, 7 Jul 2009 18:28:05 +0100</resolved>
                                    <version>0.3.0</version>
                    <version>0.4.0</version>
                                    <fixVersion>0.4.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12722279" author="ashutoshc" created="Sun, 21 Jun 2009 00:54:58 +0100"  >&lt;p&gt;In addition to explanation above SampleOptimizer is introduced which visits the compiled MR plan to detect this pattern (MR operator containing only load-store followed by MR operator containing sampling job in map plan). If this pattern is present, SampleOptimizer deletes the unnecessary predecessor MR operator and replaces the POLoad of sampling job with RandomSampleLoader which uses the loader of its predecessor. &lt;/p&gt;</comment>
                            <comment id="12722280" author="ashutoshc" created="Sun, 21 Jun 2009 00:57:47 +0100"  >&lt;p&gt;Submitting for both 0.3 and 0.4 branches.&lt;/p&gt;</comment>
                            <comment id="12722286" author="hadoopqa" created="Sun, 21 Jun 2009 02:44:50 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12411325/pig-820.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12411325/pig-820.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 786694.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/96/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/96/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/96/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/96/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/96/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/96/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12722706" author="ashutoshc" created="Mon, 22 Jun 2009 18:44:48 +0100"  >&lt;p&gt;In the patch RandomSampleLoader is marked as serializable and loader field in it is marked as transient. Since loader is  initialized in constructor and is used later on findbugs is complaining : &quot;This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class.However, since the field is marked as transient and not set in readObject or readResolve, it will contain the default value in any deserialized instance of the class. &quot; However there is no need for RandomSampleLoader to implement Serializable anyway (and thus loader to be marked as transient) because loader is reconstructed from FunSpec later on. Because of this reason, both PigStorage and BinStorage also doesnt implement serializable. Will be submitting a new patch with the required changes.&lt;/p&gt;</comment>
                            <comment id="12722792" author="ashutoshc" created="Mon, 22 Jun 2009 21:13:58 +0100"  >&lt;p&gt;Patch which fixes findbugs warning.&lt;/p&gt;</comment>
                            <comment id="12722793" author="ashutoshc" created="Mon, 22 Jun 2009 21:15:04 +0100"  >&lt;p&gt;Submitting to hudson&lt;/p&gt;</comment>
                            <comment id="12722797" author="ashutoshc" created="Mon, 22 Jun 2009 21:20:24 +0100"  >&lt;p&gt;Missed test files. &lt;/p&gt;</comment>
                            <comment id="12722801" author="ashutoshc" created="Mon, 22 Jun 2009 21:22:11 +0100"  >&lt;p&gt;Resubmitting patch.&lt;/p&gt;</comment>
                            <comment id="12723204" author="alangates" created="Tue, 23 Jun 2009 18:43:10 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12723240" author="pkamath" created="Tue, 23 Jun 2009 19:32:03 +0100"  >&lt;p&gt;Some review comments:&lt;br/&gt;
In SampleOptimizer.java, &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      LoadFunc lf = (LoadFunc)PigContext.instantiateFuncFromSpec(predLoad.getLFile().getFuncName());
 should be changed to 
      LoadFunc lf = (LoadFunc)PigContext.instantiateFuncFromSpec(predLoad.getLFile().getFuncSpec());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is so that we correctly handle loaders which do not have default constuctor. FuncSpec encapsulates both the classname and constructor arguments and hence would handle both loaders which only have default constructor and those which only have constructor with args.&lt;/p&gt;

&lt;p&gt;Similarly&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      
fs = new FileSpec(predFs.getFileName(), new FuncSpec(predFs.getFuncName()));
should be changed to
      fs = new FileSpec(predFs.getFileName(), predFs.getFuncSpec());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Likewise, the constructor of RandomSampleLoader should take a FuncSpec object as its first argument to represent the loader classname and constructor args. So this will require callers who create RandomSampleLoader to create it with correct funcspec objects.&lt;/p&gt;


</comment>
                            <comment id="12723316" author="ashutoshc" created="Tue, 23 Jun 2009 22:42:48 +0100"  >&lt;p&gt;Thanks Alan and Pradeep for the review.&lt;/p&gt;

&lt;p&gt;Will be incorporating SampleOptimizer changes. &lt;br/&gt;
Constructor of RandomSampleLoader can only take string args since it is instantiated from FuncSpec on backend. So, cant make changes to types of RandomSampleLoader constructor argument. However, instead of String having classname of loader , String version of FuncSpec can be used so that loader with correct constructor gets instantiated.&lt;/p&gt;

&lt;p&gt;Will be uploading a new patch soon.&lt;/p&gt;</comment>
                            <comment id="12723321" author="ashutoshc" created="Tue, 23 Jun 2009 22:52:45 +0100"  >&lt;p&gt;Will be uploading a new patch.&lt;/p&gt;</comment>
                            <comment id="12723394" author="ashutoshc" created="Wed, 24 Jun 2009 02:10:31 +0100"  >&lt;p&gt;Due to change in LoadFunc interface as a part of &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-734&quot; title=&quot;Non-string keys in maps&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-734&quot;&gt;&lt;del&gt;PIG-734&lt;/del&gt;&lt;/a&gt; commit, my patch won&apos;t apply cleanly on trunk anymore. Will merge with trunk and regenerate the patch again.&lt;/p&gt;</comment>
                            <comment id="12724204" author="pkamath" created="Thu, 25 Jun 2009 20:12:34 +0100"  >&lt;p&gt;In SampleOptimizer the following should change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// First argument is name of loader function to subsume, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; we want to set &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;                           
&lt;/span&gt;         &lt;span class=&quot;code-comment&quot;&gt;// ourselves.
&lt;/span&gt;         rslargs[0] = predFs.getFuncName();
to
        &lt;span class=&quot;code-comment&quot;&gt;// First argument is name of loader function with constructor args to subsume, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; we want to set &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;                           
&lt;/span&gt;         &lt;span class=&quot;code-comment&quot;&gt;// ourselves.
&lt;/span&gt;         rslargs[0] = predFs.getFuncSpec().toString();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12724632" author="hadoopqa" created="Fri, 26 Jun 2009 18:41:37 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12411723/pig-820_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12411723/pig-820_v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 788174.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/102/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/102/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/102/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/102/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/102/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/102/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12724717" author="pkamath" created="Fri, 26 Jun 2009 22:15:26 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12724769" author="hadoopqa" created="Sat, 27 Jun 2009 01:32:29 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12411945/pig-820_v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12411945/pig-820_v6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 788174.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/104/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/104/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/104/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/104/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/104/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/104/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12725602" author="hudson" created="Tue, 30 Jun 2009 13:43:57 +0100"  >&lt;p&gt;Integrated in Pig-trunk #490 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-trunk/490/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-trunk/490/&lt;/a&gt;)&lt;br/&gt;
    : Change RandomSampleLoader to take a LoadFunc instead of extending BinStorage.  Added new Samplable interface for loaders to implement allowing them to be used by RandomSampleLoader.&lt;/p&gt;</comment>
                            <comment id="12725695" author="alangates" created="Tue, 30 Jun 2009 17:53:16 +0100"  >&lt;p&gt;v6 of the patch checked in.  Thanks Ashutosh.&lt;/p&gt;</comment>
                            <comment id="12726798" author="ashutoshc" created="Fri, 3 Jul 2009 06:47:27 +0100"  >&lt;p&gt;Samplable interface introduced as a part of this patch enforces the contract of implementing getPosition() and next() on the loaders implementing it. An additional requirement for a loader to be a sampler is that they should correctly handle getNext() without knowing the position in the file. Current patch doesn&apos;t include this contract as a part of interface. That should be a part of the interface.&lt;br/&gt;
Reopening the jira because of this issue.&lt;/p&gt;</comment>
                            <comment id="12727827" author="ashutoshc" created="Mon, 6 Jul 2009 23:55:14 +0100"  >&lt;p&gt;Submitting the patch for review. Currently running tests. Will update the jira with the result.&lt;/p&gt;</comment>
                            <comment id="12727834" author="pkamath" created="Tue, 7 Jul 2009 00:40:26 +0100"  >&lt;p&gt;Review comments - two observations:&lt;/p&gt;

&lt;p&gt;1. In PigStorage the skip() implementation should do an extra skip(1) if the byte at n-1 is not -1 (i.e. after skipping n-1, if the stream is not at EOF, there should be a skip(1), so that n bytes are skipped in all).&lt;/p&gt;

&lt;p&gt;2. The comment for  getSampledTuple() contains:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   /** 
	* Get the next sampled tuple from the stream. 
	* Those loaders which can appropriately &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the next tuple after 
	* skipping in the stream(e.g. BinStorage) can in turn call their getNext()
	* &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; implementing &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method. Those who cannot (e.g. PigStorage) need to
	* provide their own implementation.
	* Samplers must call &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method to get next tuple and should never directly call
	* underlying loader&apos;s getNext() method.
	* @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the next tuple after skipping or &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there are no more tuples
	* to be processed.
	*/

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The comment can be updated to be explicit about the context in which getSampledTuple() would be called- something along the lines of &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;getSampledTuple() method will be called after a call to skip(). Hence the loader implementation would have to handle the case wherein the current read position 
in the stream is not at the beginning of a record and correctly give the next tuple starting from the current read position. In particular, the implementation would need to handle the following cases:
1) The current read position for the input stream is at the beginning of the stream - in this case getSampledTuple() should return the tuple repesenting the first tuple in the stream
2) The current read position for the input stream is in the middle of a record - in this case getSampledTuple() should return the tuple representing the next record by reading forward in the stream
3) The current read position for the input stream is exactly at the beginning of a record - in this case getSampledTuple() should return the tuple representing the record at current read position
4) The current read position for the input stream is beyond end of file - in this case getSampledTuple() should return null
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To keep the comment from being very verbose, the implementation details (whether to delegate to getNext() or not) can be omitted.&lt;/p&gt;</comment>
                            <comment id="12727879" author="ashutoshc" created="Tue, 7 Jul 2009 03:17:00 +0100"  >&lt;p&gt;Thanks Pradeep for the review. skip(1) is not required because reading a byte (by calling in.read()) would result in pointer getting advanced by 1. I updated that comment in the interface noting the fact that loader implementing the interface should not assume that current read position is at the beginning of a tuple. &lt;/p&gt;</comment>
                            <comment id="12727907" author="hadoopqa" created="Tue, 7 Jul 2009 05:29:10 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12412695/pig-820_v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12412695/pig-820_v8.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 791048.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/114/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/114/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/114/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/114/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/114/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-minerva.apache.org/114/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12728161" author="ashutoshc" created="Tue, 7 Jul 2009 16:55:32 +0100"  >&lt;p&gt;The patch includes no unit tests as no new functionality is added or modified.&lt;/p&gt;</comment>
                            <comment id="12728203" author="pkamath" created="Tue, 7 Jul 2009 18:28:05 +0100"  >&lt;p&gt;Patch committed - thanks Ashutosh!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12411325" name="pig-820.patch" size="31698" author="ashutoshc" created="Sun, 21 Jun 2009 00:54:58 +0100"/>
                            <attachment id="12411446" name="pig-820_v2.patch" size="23260" author="ashutoshc" created="Mon, 22 Jun 2009 21:13:58 +0100"/>
                            <attachment id="12411448" name="pig-820_v3.patch" size="31734" author="ashutoshc" created="Mon, 22 Jun 2009 21:21:18 +0100"/>
                            <attachment id="12411580" name="pig-820_v4.patch" size="31944" author="ashutoshc" created="Tue, 23 Jun 2009 23:42:23 +0100"/>
                            <attachment id="12411723" name="pig-820_v5.patch" size="31944" author="ashutoshc" created="Wed, 24 Jun 2009 23:26:41 +0100"/>
                            <attachment id="12411945" name="pig-820_v6.patch" size="31959" author="ashutoshc" created="Fri, 26 Jun 2009 19:14:44 +0100"/>
                            <attachment id="12412665" name="pig-820_v7.patch" size="4029" author="ashutoshc" created="Mon, 6 Jul 2009 23:55:14 +0100"/>
                            <attachment id="12412695" name="pig-820_v8.patch" size="3800" author="ashutoshc" created="Tue, 7 Jul 2009 03:17:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Jun 2009 23:54:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164376</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaja7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95435</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>