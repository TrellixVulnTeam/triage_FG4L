<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:51:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1551/PIG-1551.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1551] Improve dynamic invokers to deal with no-arg methods and array parameters</title>
                <link>https://issues.apache.org/jira/browse/PIG-1551</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1354&quot; title=&quot;UDFs for dynamic invocation of simple Java methods&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1354&quot;&gt;&lt;del&gt;PIG-1354&lt;/del&gt;&lt;/a&gt; introduced a set of UDFs that can be used to dynamically wrap simple Java methods in a UDF, so that users don&apos;t need to create trivial wrappers if they are ok sacrificing some speed.&lt;/p&gt;

&lt;p&gt;This issue is to extend the set of methods that can be wrapped this way to include methods that do not take any arguments, and methods that take arrays of &lt;/p&gt;
{int,long,float,double,string}
&lt;p&gt; as arguments. &lt;br/&gt;
Arrays are expected to be represented by bags in Pig. Notably, this allows users to wrap statistical functions in o.a.commons.math.stat.StatUtils . &lt;/p&gt;</description>
                <environment></environment>
        <key id="12472053">PIG-1551</key>
            <summary>Improve dynamic invokers to deal with no-arg methods and array parameters</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dvryaboy">Dmitriy V. Ryaboy</assignee>
                                    <reporter username="dvryaboy">Dmitriy V. Ryaboy</reporter>
                        <labels>
                    </labels>
                <created>Fri, 20 Aug 2010 02:18:52 +0100</created>
                <updated>Fri, 17 Dec 2010 22:45:09 +0000</updated>
                            <resolved>Tue, 24 Aug 2010 22:15:43 +0100</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12900549" author="dvryaboy" created="Fri, 20 Aug 2010 02:22:04 +0100"  >&lt;p&gt;Patch attached.&lt;/p&gt;</comment>
                            <comment id="12901656" author="rding" created="Tue, 24 Aug 2010 00:03:36 +0100"  >
&lt;p&gt;In Invoker.java, there is a typo:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; LONG_ARRAY_CLASS = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[0].getClass();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;also in unPrimitivize method, this code seems unnecessary:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (klass.equals(DOUBLE_ARRAY_CLASS)) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; DOUBLE_ARRAY_CLASS;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise the patch looks good.&lt;/p&gt;</comment>
                            <comment id="12901750" author="dvryaboy" created="Tue, 24 Aug 2010 07:43:27 +0100"  >&lt;p&gt;Attaching patch that fixes the two errors Richard pointed out.&lt;/p&gt;</comment>
                            <comment id="12901992" author="rding" created="Tue, 24 Aug 2010 19:05:37 +0100"  >
&lt;p&gt;The typo is still there:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; LONG_ARRAY_CLASS = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;[0].getClass();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It seems what you want is &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; LONG_ARRAY_CLASS = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;[0].getClass();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so it&apos;s consistent with other array classes.&lt;/p&gt;

&lt;p&gt;This does raise a question about array parameters: the first form applies to methods like &lt;em&gt;amethod(Long[] nums)&lt;/em&gt;, while the second supports methods like &lt;em&gt;amethod(long[] nums)&lt;/em&gt;. And they are not exchangeable. &lt;/p&gt;</comment>
                            <comment id="12902026" author="dvryaboy" created="Tue, 24 Aug 2010 20:20:42 +0100"  >&lt;p&gt;Ugh. Thank you for catching that &amp;#8211; fixed, and added a test to make sure it stays fixed.&lt;/p&gt;

&lt;p&gt;The particular set of methods I needed this for used primitives, so that&apos;s what I did. It&apos;s a bit tricky to add support for Long, Double, etc arrays, as I would have to check all combinations of possible method signatures when seeing things like (int[], int[], int[]) &amp;#8211; it becomes fairly ugly code.. Do you think this is particularly compelling? I can&apos;t really think of methods that take arrays of Number classes; usually, if you start using Numbers, you are also using Collections, not plain arrays.&lt;/p&gt;</comment>
                            <comment id="12902042" author="rding" created="Tue, 24 Aug 2010 20:55:02 +0100"  >&lt;p&gt;+1.&lt;/p&gt;

&lt;p&gt;I&apos;m fine with arrays of primitive types. I can&apos;t think of a Java method that uses an array of object Long as a parameter.&lt;/p&gt;</comment>
                            <comment id="12902076" author="dvryaboy" created="Tue, 24 Aug 2010 22:15:43 +0100"  >&lt;p&gt;Commited.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12452597" name="PIG-1551.patch" size="16941" author="dvryaboy" created="Fri, 20 Aug 2010 02:22:04 +0100"/>
                            <attachment id="12452900" name="PIG_1551.2.patch" size="16810" author="dvryaboy" created="Tue, 24 Aug 2010 07:43:27 +0100"/>
                            <attachment id="12452956" name="PIG_1551.3.patch" size="17183" author="dvryaboy" created="Tue, 24 Aug 2010 20:20:42 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 23 Aug 2010 23:03:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>41710</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyarnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96791</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>The idea is simple: frequently, Pig users need to use a simple function that is already provided by standard Java libraries, but for which a UDF has not been written. Dynamic Invokers allow a Pig programmer to refer to Java functions without having to wrap them in custom Pig UDFs, at the cost of doing some Java reflection on every function call.&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
DEFINE UrlDecode InvokeForString(&amp;#39;java.net.URLDecoder.decode&amp;#39;, &amp;#39;String String&amp;#39;);&lt;br/&gt;
encoded_strings = LOAD &amp;#39;encoded_strings.txt&amp;#39; as (encoded:chararray);&lt;br/&gt;
decoded_strings = FOREACH encoded_strings GENERATE UrlDecode(encoded, &amp;#39;UTF-8&amp;#39;);&lt;br/&gt;
{code}&lt;br/&gt;
&lt;br/&gt;
Currently, Dynamic Invokers can be used for any static function that accepts no arguments or some combination of Strings, ints, longs, doubles, floats, or arrays of same, and returns a String, an int, a long, a double, or a float. Primitives only for the numbers, no capital-letter numeric classes as arguments. Depending on the return type, a specific kind of Invoker must be used: InvokeForString, InvokeForInt, InvokeForLong, InvokeForDouble, or InvokeForFloat.&lt;br/&gt;
&lt;br/&gt;
The DEFINE keyword is used to bind a keyword to a Java method, as above. The first argument to the InvokeFor* constructor is the full path to the desired method. The second argument is a space-delimited ordered list of the classes of the method arguments. This can be omitted or an empty string if the method takes no arguments. Valid class names are String, Long, Float, Double, and Int. Invokers can also work with array arguments, represented in Pig as DataBags of single-tuple elements. Simply refer to string[], for example. Class names are not case-sensitive.&lt;br/&gt;
&lt;br/&gt;
The ability to use invokers on methods that take array arguments makes methods like those in org.apache.commons.math.stat.StatUtils available for processing the results of grouping your datasets, for example. This is very nice, but a word of caution: the resulting UDF will of course not be optimized for Hadoop, and the very significant benefits one gains from implementing the Algebraic and Accumulative interfaces are lost here. Be careful with this one.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>