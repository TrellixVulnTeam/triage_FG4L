<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:55:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3902/PIG-3902.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3902] PigServer creates cycle</title>
                <link>https://issues.apache.org/jira/browse/PIG-3902</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Under certain conditions PigServer creates a cycle in the logical plan. Consider the following pseudocode:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load from &apos;A&apos; using F1;
...process...
B = store X into &apos;B&apos; using F2;
C = load from &apos;B&apos; using F3;
...process...
D = store Y into &apos;A&apos; using F1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PigServer will, in ordinary cases, notice that an output path is equal to an input path, and, if there&apos;s no path from the input to the output, make the input a dependency of the output. However, PigServer orders the loads and stores arbitrarily during that logic. Sometimes, in the code above, C is correctly wired as a dependency of B and, since that creates a path from A to D, A won&apos;t be made a dependency of D and we&apos;re good. On occasion though, the ordering being arbitrary, A is wired as a dependency of D. That&apos;s no good. To be fair, it&apos;s not actually a cycle, since when A is wired to D, there&apos;s a path between C and B so the cycle won&apos;t actually get created. But it&apos;s still a broken plan.&lt;/p&gt;

&lt;p&gt;The offending PigServer code: &lt;a href=&quot;https://github.com/apache/pig/blob/branch-0.11/src/org/apache/pig/PigServer.java#L1678-L1693&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/pig/blob/branch-0.11/src/org/apache/pig/PigServer.java#L1678-L1693&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here&apos;s some actual pig code that should reproduce the broken plan. Notice I had to use a store function that wouldn&apos;t check the output. If you&apos;re just using PigStorage this won&apos;t be reproducible since you can&apos;t write to the same location you read from in that case.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load &apos;$A&apos; as (line:chararray);
A = foreach A generate flatten(TOKENIZE(LOWER(line))) as token;
store A into &apos;$B&apos;;
B = load &apos;$B&apos; as (token:chararray);
B = filter B by SIZE(token) &amp;gt; 3;
store B into &apos;$A&apos; using org.apache.pig.piggybank.storage.DBStorage(&apos;com.mysql.jdbc.Driver&apos;, &apos;dbc:mysql:&lt;span class=&quot;code-comment&quot;&gt;//localhost/test&apos;, &apos;INSERT INTO foobar (token) VALUES(?)&apos;);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As far as a fix goes... I&apos;d love some input. I&apos;ve got some workarounds in mind for the specific use case that brought this up, but the general problem is more difficult. &lt;/p&gt;

&lt;p&gt;As an aside, there&apos;s other issues with the PigServer code referenced above. For example, it should almost certainly be using the full path (after LoadFunc/StoreFunc.relativeToAbsolutePath) no? Try storing to a relative path then loading from the absolute representation of that path in the same script... Also, why isn&apos;t it checking the FuncSpec as well as the location? Just trying to open up the discussion.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12709088">PIG-3902</key>
            <summary>PigServer creates cycle</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thedatachef">Jacob Perkins</assignee>
                                    <reporter username="thedatachef">Jacob Perkins</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Apr 2014 17:15:03 +0100</created>
                <updated>Mon, 7 Jul 2014 19:07:57 +0100</updated>
                            <resolved>Sat, 10 May 2014 23:48:17 +0100</resolved>
                                    <version>0.13.0</version>
                                    <fixVersion>0.13.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13973111" author="thedatachef" created="Thu, 17 Apr 2014 17:16:05 +0100"  >&lt;p&gt;Here&apos;s the lipstick representation of the broken plan using the code provided.&lt;/p&gt;</comment>
                            <comment id="13973384" author="thedatachef" created="Thu, 17 Apr 2014 21:47:21 +0100"  >&lt;p&gt;I&apos;m not happy with this fix as it relies on location in the script. However, when writing a pig script by hand, a developer most often (in fact I can&apos;t think of a reason I wouldn&apos;t do it this way) puts the store &lt;em&gt;before&lt;/em&gt; the load that relies on it in the script. &lt;/p&gt;</comment>
                            <comment id="13975660" author="cheolsoo" created="Mon, 21 Apr 2014 16:55:30 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thedatachef&quot; class=&quot;user-hover&quot; rel=&quot;thedatachef&quot;&gt;Jacob Perkins&lt;/a&gt;, your patch breaks the following tests. The area of code that you&apos;re modifying seems to affect multi query optimization. Can you take a look?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryBasic.testMultiQueryWithCoGroup_2 	3.7 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryCompiler.testMultiQueryWithCoGroup 	0.13 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryCompiler.testMultiQueryWithIntermediateStores 	0.1 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryCompiler.testStoreOrder 	0.18 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryCompiler.testUnnecessaryStoreRemoval 	0.13 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryCompiler.testUnnecessaryStoreRemovalCollapseSplit 	0.14 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestMultiQueryLocal.testStoreOrder 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Canceling the patch for now.&lt;/p&gt;</comment>
                            <comment id="13975836" author="thedatachef" created="Mon, 21 Apr 2014 19:26:54 +0100"  >&lt;p&gt;Without the location in the script/query being a reliable proxy for order there&apos;s really no other way I can think of to fix this. Currently, a workaround is to manually place an exec statement in the script to force the plans to be executed in the right order. This is unfortunate because, as far as I can tell, computation isn&apos;t shared across exec statements.&lt;/p&gt;</comment>
                            <comment id="13987888" author="thedatachef" created="Fri, 2 May 2014 17:44:39 +0100"  >&lt;p&gt;This goes deep. I updated the LogicalPlanBuilder such that, when building a load op, it checks the plan that&apos;s been generated &quot;so far&quot; for stores that match the location the load references. If so it links them. &lt;/p&gt;

&lt;p&gt;Some of the multiquery compilation code exploited the &amp;lt;i&amp;gt;bug&amp;lt;/i&amp;gt; that plan.getSinks() always returned the stores. You could get away with that before the &quot;postProcess&quot; method on PigServer got called because loads were not yet linked to the stores they depended on. Hence, all the stores were leaves of the plan. However, with this patch that bug exploitation will no longer work. In order to get the loads you&apos;ll have to get the operators of the plan explicitly and create a list of stores. Presumably this happens elsewhere but I only ran the multiquery tests with my patch.&lt;/p&gt;</comment>
                            <comment id="13989739" author="cheolsoo" created="Mon, 5 May 2014 18:27:06 +0100"  >&lt;blockquote&gt;&lt;p&gt;Presumably this happens elsewhere but I only ran the multiquery tests with my patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Here are unit test failures-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestGrunt.testIllustrate 	0.23 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestNativeMapReduce.testNativeMRJobSimple 	1 min 27 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestNativeMapReduce.testNativeMRJobMultiStoreOnPred 	1 min 26 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestPigStorage.testSchemaConversion2 	6.6 sec	1
&amp;gt;&amp;gt;&amp;gt; org.apache.pig.test.TestPigStorage.testSchemaConversion 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13989975" author="thedatachef" created="Mon, 5 May 2014 22:05:54 +0100"  >&lt;p&gt;Added test, fixed latest round of unit test failures. Should be good to go now. &lt;/p&gt;</comment>
                            <comment id="13992400" author="cheolsoo" created="Thu, 8 May 2014 02:00:42 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thedatachef&quot; class=&quot;user-hover&quot; rel=&quot;thedatachef&quot;&gt;Jacob Perkins&lt;/a&gt;, thank you for the patch. Overall looks good to me. I ran full unit tests and verified there&apos;s no failure.&lt;/p&gt;

&lt;p&gt;I have few minor comments as follows-&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Can you rebase your patch to trunk? We always commit a patch into trunk and, if necessary, we back-port it into a branch. The fixVersion should be also 0.13.&lt;/li&gt;
	&lt;li&gt;Can you add a comment that explains what your unit test is for? Possibly, you can describe how it fails in-deterministically without the fix.&lt;/li&gt;
	&lt;li&gt;In several places, you&apos;re extracting a type of operators from operator plan through a loop. Since this is a common thing to do, I am wondering whether you can write a helper function for that. I have two suggestions-
	&lt;ol&gt;
		&lt;li&gt;Write a function to &lt;a href=&quot;https://github.com/apache/pig/blob/trunk/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/util/PlanHelper.java#L124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PlanHelper.getPhysicalOperators(PhysicalPlan plan, Class&amp;lt;C&amp;gt; opClass)&lt;/a&gt; for LogicalPlan, or&lt;/li&gt;
		&lt;li&gt;Use Guava &lt;a href=&quot;http://docs.guava-libraries.googlecode.com/git-history/v11.0.2/javadoc/com/google/common/collect/Iterables.html#filter(java.lang.Iterable, java.lang.Class)&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Iterables.filter(Iterable&amp;lt;?&amp;gt; unfiltered, Class&amp;lt;T&amp;gt; type)&lt;/a&gt;.&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
	&lt;li&gt;In PigServer#skipStores(), can&apos;t you change processedStores to LOStore collection? Currently, countExecutedStores() constructs a LOStore collection and counts it. Then, skipStores() constructs another LOStore collection and skips as many LOStores as processedStores. Why not keep the original LOStore collection constructed by countExecutedStores() and remove its entries from plan in skipStores()? I might be misunderstanding the logic.&lt;/li&gt;
	&lt;li&gt;In the following code, can&apos;t you use FileSpec#equals() instead of String#compareTo()?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ifile = op.getFileSpec().getFileName();
+            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ofile = store.getFileSpec().getFileName();
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ofile.compareTo(ifile) == 0) { &lt;span class=&quot;code-comment&quot;&gt;// --&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (load.getFileSpec().equals(store.getFileSpec())) {
&lt;/span&gt;+                inputAliases.add( store.getAlias() );
+            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;Please remove trailing whitespaces and tabs.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13993100" author="thedatachef" created="Thu, 8 May 2014 21:57:54 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt; Regarding #5, FileSpec encapsulates both the location uri as well as the FuncSpec. There are several cases where there is a load that depends on a store where the two FuncSpecs could be different. I do think it should actually be the &lt;del&gt;full&lt;/del&gt; path resolved via the Load or Store func&apos;s &apos;relativeToAbsolutePath&apos; method, but I&apos;d rather address that with a separate jira.&lt;/p&gt;

&lt;p&gt;I&apos;ll submit another patch soon that addresses the other points. Thanks!&lt;/p&gt;</comment>
                            <comment id="13993749" author="thedatachef" created="Fri, 9 May 2014 18:48:56 +0100"  >&lt;p&gt;Latest patch. Added a utility function for getting operators of a specific type from the logical plan. Builds against trunk.&lt;/p&gt;</comment>
                            <comment id="13993831" author="cheolsoo" created="Fri, 9 May 2014 20:04:28 +0100"  >&lt;p&gt;Great! I&apos;ll run unit tests with the new patch and commit it. Thank you Jacob!&lt;/p&gt;</comment>
                            <comment id="13994322" author="cheolsoo" created="Sat, 10 May 2014 23:48:17 +0100"  >&lt;p&gt;All unit tests passed. Committed to trunk.&lt;/p&gt;

&lt;p&gt;I made one minor change to the final patch. I replaced &lt;tt&gt;ifile.compareTo(ofile) == 0&lt;/tt&gt; with &lt;tt&gt;ifile.equals(ofile)&lt;/tt&gt; for clarity. According to the &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#compareTo(java.lang.String)&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;javadoc&lt;/a&gt;, &lt;tt&gt;compareTo returns 0 exactly when the equals(Object) method would return true&lt;/tt&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12640652" name="broken-plan.png" size="136001" author="thedatachef" created="Thu, 17 Apr 2014 17:16:05 +0100"/>
                            <attachment id="12640704" name="cycle.diff" size="798" author="thedatachef" created="Thu, 17 Apr 2014 21:47:38 +0100"/>
                            <attachment id="12644138" name="multiquery-20140509.diff" size="16554" author="thedatachef" created="Fri, 9 May 2014 18:48:56 +0100"/>
                            <attachment id="12643427" name="multiquery-cycle.diff" size="19807" author="thedatachef" created="Mon, 5 May 2014 22:05:54 +0100"/>
                            <attachment id="12643070" name="multiquery-cycle.diff" size="4105" author="thedatachef" created="Fri, 2 May 2014 17:45:17 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Apr 2014 15:55:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387411</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzolbr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387673</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>