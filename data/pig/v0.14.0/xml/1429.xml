<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:58:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1429/PIG-1429.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1429] Add Boolean Data Type to Pig</title>
                <link>https://issues.apache.org/jira/browse/PIG-1429</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Pig needs a Boolean data type.  Pig-1097 is dependent on doing this.  &lt;/p&gt;

&lt;p&gt;I volunteer.  Is there anything beyond the work in src/org/apache/pig/data/ plus unit tests to make this work?  &lt;/p&gt;

&lt;p&gt;This is a candidate project for Google summer of code 2011. More information about the program can be found at &lt;a href=&quot;http://wiki.apache.org/pig/GSoc2011&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/GSoc2011&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12465690">PIG-1429</key>
            <summary>Add Boolean Data Type to Pig</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zjshen">Zhijie Shen</assignee>
                                    <reporter username="russell.jurney">Russell Jurney</reporter>
                        <labels>
                            <label>boolean</label>
                            <label>gsoc2011</label>
                            <label>pig</label>
                            <label>type</label>
                    </labels>
                <created>Sat, 29 May 2010 01:51:16 +0100</created>
                <updated>Thu, 26 Apr 2012 21:32:44 +0100</updated>
                            <resolved>Thu, 18 Aug 2011 18:25:55 +0100</resolved>
                                    <version>0.7.0</version>
                                    <fixVersion>0.10.0</fixVersion>
                                    <component>data</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                    <timeoriginalestimate seconds="28800">8h</timeoriginalestimate>
                            <timeestimate seconds="28800">8h</timeestimate>
                                        <comments>
                            <comment id="12873211" author="dvryaboy" created="Sat, 29 May 2010 02:15:55 +0100"  >&lt;p&gt;Have at it, Sir.&lt;/p&gt;</comment>
                            <comment id="12873362" author="russell.jurney" created="Sun, 30 May 2010 04:08:19 +0100"  >&lt;p&gt;Broken patch that adds boolean type.&lt;/p&gt;</comment>
                            <comment id="12873363" author="russell.jurney" created="Sun, 30 May 2010 04:10:56 +0100"  >&lt;p&gt;Did the work I think is required based on Alan&apos;s comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1314&quot; title=&quot;Add DateTime Support to Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1314&quot;&gt;&lt;del&gt;PIG-1314&lt;/del&gt;&lt;/a&gt; and help from Dmitriy.  It builds - I still have to add tests (may be the only way to fix this), but I&apos;m hoping someone can ID my problem.  I keep getting the exception below.  Anyone know where I should look?  I&apos;ve traced this through, and nothing stands out.&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;org.apache.pig.backend.executionengine.ExecException: ERROR 2055: Received Error while processing the map plan.&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.runPipeline(PigMapBase.java:261)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.map(PigMapBase.java:228)&lt;br/&gt;
	at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.map(PigMapBase.java:53)&lt;br/&gt;
	at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)&lt;br/&gt;
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:621)&lt;br/&gt;
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:305)&lt;br/&gt;
	at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:177)&lt;br/&gt;
2010-05-29 20:04:25,363 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - HadoopJobId: job_local_0001&lt;br/&gt;
2010-05-29 20:04:29,866 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - 100% complete&lt;br/&gt;
2010-05-29 20:04:29,866 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - 1 map reduce job(s) failed!&lt;br/&gt;
2010-05-29 20:04:29,868 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Failed to produce result in: &quot;file:/tmp/temp-537038699/tmp-381529216&quot;&lt;br/&gt;
2010-05-29 20:04:29,868 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Records written : Unable to determine number of records written&lt;br/&gt;
2010-05-29 20:04:29,868 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Bytes written : Unable to determine number of bytes written&lt;br/&gt;
2010-05-29 20:04:29,868 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Spillable Memory Manager spill count : 0&lt;br/&gt;
2010-05-29 20:04:29,869 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Proactive spill count : 0&lt;br/&gt;
2010-05-29 20:04:29,869 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Failed!&lt;br/&gt;
2010-05-29 20:04:29,872 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.hadoop.metrics.jvm.JvmMetrics - Cannot initialize JVM Metrics with processName=JobTracker, sessionId= - already initialized&lt;br/&gt;
2010-05-29 20:04:29,876 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1066: Unable to open iterator for alias A&lt;br/&gt;
2010-05-29 20:04:29,876 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - org.apache.pig.impl.logicalLayer.FrontendException: ERROR 1066: Unable to open iterator for alias A&lt;br/&gt;
	at org.apache.pig.PigServer.openIterator(PigServer.java:663)&lt;br/&gt;
	at org.apache.pig.tools.grunt.GruntParser.processDump(GruntParser.java:598)&lt;br/&gt;
	at org.apache.pig.tools.pigscript.parser.PigScriptParser.parse(PigScriptParser.java:291)&lt;br/&gt;
	at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:165)&lt;br/&gt;
	at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:141)&lt;br/&gt;
	at org.apache.pig.tools.grunt.Grunt.run(Grunt.java:76)&lt;br/&gt;
	at org.apache.pig.Main.main(Main.java:410)&lt;br/&gt;
Caused by: java.io.IOException: Job terminated with anomalous status FAILED&lt;br/&gt;
	at org.apache.pig.PigServer.openIterator(PigServer.java:657)&lt;br/&gt;
	... 6 more&lt;/p&gt;
</comment>
                            <comment id="12873474" author="russell.jurney" created="Sun, 30 May 2010 20:27:06 +0100"  >&lt;p&gt;Did some more work, have a new patch... seems the problem is in PigMapBase.runPipeline:&lt;/p&gt;

&lt;p&gt;    protected void runPipeline(PhysicalOperator leaf) throws IOException, InterruptedException {&lt;br/&gt;
        while(true){&lt;br/&gt;
            String foo = &quot;&quot;; String bar = &quot;&quot;;&lt;br/&gt;
            Result res = leaf.getNext(DUMMYTUPLE);&lt;/p&gt;

&lt;p&gt;res is NULL, so it dies.  &lt;/p&gt;

&lt;p&gt;The leaf is: (Name: A: New For Each(false,false)&lt;span class=&quot;error&quot;&gt;&amp;#91;bag&amp;#93;&lt;/span&gt; - 1-13 Operator Key: 1-13)&lt;/p&gt;</comment>
                            <comment id="12873514" author="russell.jurney" created="Mon, 31 May 2010 02:04:09 +0100"  >&lt;p&gt;Attached patch can LOAD/DUMP a boolean type &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/biggrin.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;ll work on more tests, but it roughly works.&lt;/p&gt;</comment>
                            <comment id="12873629" author="russell.jurney" created="Mon, 31 May 2010 12:54:58 +0100"  >&lt;p&gt;Some more work to be done with operators.&lt;/p&gt;</comment>
                            <comment id="12876326" author="alangates" created="Mon, 7 Jun 2010 18:40:03 +0100"  >&lt;p&gt;Is this patch ready for review or does it need more work?&lt;/p&gt;</comment>
                            <comment id="12877544" author="russell.jurney" created="Thu, 10 Jun 2010 20:38:12 +0100"  >&lt;p&gt;The patch needs more work.  Should knock it out in the next couple weeks.&lt;/p&gt;</comment>
                            <comment id="12880731" author="russell.jurney" created="Mon, 21 Jun 2010 07:48:16 +0100"  >&lt;p&gt;I&apos;ll be able to wrap this up next weekend.&lt;/p&gt;</comment>
                            <comment id="12892474" author="olgan" created="Mon, 26 Jul 2010 22:23:34 +0100"  >&lt;p&gt;Hi Russel, are you still planning to wrap this up before Pig 0.8.0 release?&lt;/p&gt;</comment>
                            <comment id="12904694" author="olgan" created="Tue, 31 Aug 2010 18:45:44 +0100"  >&lt;p&gt;Unlinking because we are branching for release today&lt;/p&gt;</comment>
                            <comment id="13006667" author="daijy" created="Mon, 14 Mar 2011 22:12:10 +0000"  >&lt;p&gt;Hi, Russell, are you still working on this issue?&lt;/p&gt;</comment>
                            <comment id="13009273" author="azaroth" created="Mon, 21 Mar 2011 18:39:45 +0000"  >&lt;p&gt;Hi,&lt;br/&gt;
I was considering applying for this project.&lt;br/&gt;
From what I know of Pig&apos;s codebase, the refactoring effort would be large.&lt;br/&gt;
There will be changes throughout the whole code as a new datatype is introduced and most of the code is based on a switch pattern.&lt;/p&gt;

&lt;p&gt;Is the code produced up to know still synced with trunk or should the patch be started over?&lt;/p&gt;

&lt;p&gt;Maybe the original author of the patch is a better candidate for this project &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13009302" author="daijy" created="Mon, 21 Mar 2011 19:05:21 +0000"  >&lt;p&gt;Hi, Gianmarco, &lt;br/&gt;
We didn&apos;t hear back from original author for a while, so we assume he will not be able to continue working on this issue. That&apos;s why we put it as a GSOC project. &lt;/p&gt;

&lt;p&gt;As for the refactoring, IMHO, I don&apos;t see a major refactoring point, but there are code changes all around places. The hard part is not missing a place, rather than a complete refactoring.&lt;/p&gt;</comment>
                            <comment id="13066358" author="zjshen" created="Sat, 16 Jul 2011 04:49:12 +0100"  >&lt;p&gt;Does anyone have the opinion of casting DataByteArray to Boolean?&lt;/p&gt;

&lt;p&gt;1. DataByteArray can represent a numeric value, such that non-zero value should be converted to True.&lt;br/&gt;
2. DataByteArray can also represent a string, such that the &quot;true&quot; string should be converted to True.&lt;/p&gt;

&lt;p&gt;However, these two cases conflicts to some extent. a raw DataByteArray can be simultaneously translated into a non-zero numeric or a non-&quot;true&quot; string. Then, it is hard to say whether it should be converted to True or False.&lt;/p&gt;</comment>
                            <comment id="13066365" author="daijy" created="Sat, 16 Jul 2011 06:56:06 +0100"  >&lt;p&gt;I would vote for string &quot;true&quot;/&quot;false&quot;(regardless case), otherwise null, for Utf8StorageConverter.&lt;/p&gt;</comment>
                            <comment id="13066469" author="zjshen" created="Sat, 16 Jul 2011 18:22:47 +0100"  >&lt;p&gt;So how about treating DataByteArray as a string, and using Boolean.valueOf(String s) of JDK to decide True/False.&lt;/p&gt;</comment>
                            <comment id="13066476" author="dvryaboy" created="Sat, 16 Jul 2011 18:48:36 +0100"  >&lt;p&gt;We already have a public bytesToBoolean method in Utf8StorageConverter and should keep its behavior (which is precisely this). In fact, looks like DataReaderWriter (used by BinStorage) already supports booleans, also as strings.&lt;/p&gt;

&lt;p&gt;This does mean we are being really inefficient in storing booleans in our binary format. BinInterSedes also does this, even though it could be flipping to INTEGER_0. This would be preferable, I think, at least for the internal data formats.&lt;/p&gt;</comment>
                            <comment id="13069966" author="zjshen" created="Sat, 23 Jul 2011 15:41:45 +0100"  >&lt;p&gt;If we decide to treat bytes as string and then convert to a boolean value, we should convert a boolean value to the bytes of &quot;true&quot; and &quot;false&quot; on the other way. Otherwise, the casting is not reversible. Do you agree this? Though the boolean storage seems not efficient.&lt;/p&gt;</comment>
                            <comment id="13070196" author="zjshen" created="Sun, 24 Jul 2011 15:31:32 +0100"  >&lt;p&gt;Attached is the temporal non-working patch to update my progress. I&apos;ve added boolean cast to many places in the runtime code. I still need to check I&apos;ve touched every place. The test code hasn&apos;t been well explored yet. The following is the type casting rule:&lt;/p&gt;

&lt;p&gt;1. From Boolean to other types&lt;/p&gt;

&lt;p&gt;      Integer Long Float Double DataByteArray String&lt;br/&gt;
True  1       1L   1.0F  1.0D   &quot;true&quot;        &quot;true&quot;&lt;br/&gt;
False 0       0L   0.0F  0.0D   &quot;false&quot;       &quot;false&quot;&lt;/p&gt;

&lt;p&gt;2. From other types to Boolean&lt;/p&gt;

&lt;p&gt;Integer       non-0 -&amp;gt; True    0 -&amp;gt; False&lt;br/&gt;
Long          non-0L -&amp;gt; True   0L -&amp;gt; False&lt;br/&gt;
Float         non-0.0F -&amp;gt; True 0.0F -&amp;gt; False&lt;br/&gt;
Double        non-0.0D -&amp;gt; True 0.0D -&amp;gt; False&lt;br/&gt;
DataByteArray &quot;true&quot; &lt;del&gt;&amp;gt; True   non&lt;/del&gt;&quot;true&quot; -&amp;gt; False&lt;br/&gt;
String        &quot;true&quot; &lt;del&gt;&amp;gt; True   non&lt;/del&gt;&quot;true&quot; -&amp;gt; False&lt;/p&gt;

&lt;p&gt;I still have some puzzles with the code:&lt;/p&gt;

&lt;p&gt;1. In PigPerformanceLoader.Caster.bytesToBag(byte[] b, ResourceFieldSchema fs), there is a piece of code as follows&lt;/p&gt;

&lt;p&gt;switch (b&lt;span class=&quot;error&quot;&gt;&amp;#91;start&amp;#93;&lt;/span&gt;) &lt;/p&gt;
{
case 105: t.set(0, bytesToInteger(copy)); break;
case 108: t.set(0, bytesToLong(copy)); break;
case 102: t.set(0, bytesToFloat(copy)); break;
case 100: t.set(0, bytesToDouble(copy)); break;
case 115: t.set(0, bytesToCharArray(copy)); break;
case 109: t.set(0, bytesToMap(copy)); break;
case 98: t.set(0, bytesToBag(copy, null)); break;
default: throw new RuntimeException(&quot;unknown type &quot; + b[start]);
}

&lt;p&gt;Where does the number come? What should I assign to Boolean?&lt;/p&gt;

&lt;p&gt;2. Similarly, in QueryLexer.tokens, what is the rule to assigne a value to a token? Again what should be assigned to Boolean?&lt;/p&gt;</comment>
                            <comment id="13070419" author="azaroth" created="Mon, 25 Jul 2011 11:38:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;2. Similarly, in QueryLexer.tokens, what is the rule to assigne a value to a token? Again what should be assigned to Boolean?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Zhijie,&lt;/p&gt;

&lt;p&gt;QueryLexer.tokens is generated automatically by ANTLR, so you should not touch it.&lt;br/&gt;
What you should do is to modify QueryLexer.g in order to include a BOOLEAN token declaration (like INTEGER or FLOAT).&lt;br/&gt;
Also, you should modify QueryParser.g and all the other grammar (.g) files to accept boolean expressions.&lt;/p&gt;</comment>
                            <comment id="13076012" author="zjshen" created="Tue, 2 Aug 2011 04:04:14 +0100"  >&lt;p&gt;The boolean type nearly works with the newest patch, though I still have a number of issues to check and test cases to add.&lt;/p&gt;

&lt;p&gt;In this patch, I&apos;ve modified the parser so that boolean expression is recognized in the pig command statements (including the constant value &quot;ture&quot; and &quot;false&quot;). Meanwhile, loading or storing boolean value into storage is supported as well. In addition, I modified the casting rules so that other types can be casted to boolean and boolean can be casted to other types.&lt;/p&gt;

&lt;p&gt;Since the code related to data type is widely spread in the project. I need further investigation to ensure there is no missing part.&lt;/p&gt;</comment>
                            <comment id="13078605" author="daijy" created="Wed, 3 Aug 2011 07:45:23 +0100"  >&lt;p&gt;Hi, Zhijie, patch in generally looks good. I tested load simple boolean data, load nested boolean data, cast into boolean, cast into complex boolean, all works. Here is my review comments:&lt;br/&gt;
1. Conversion from string/bytearray -&amp;gt; boolean, only &quot;true&quot; ignore case will return true, otherwise return false. This is the behavior of Boolean.valueOf. I am fine with it, not sure how others in community think of&lt;br/&gt;
2. Conversion from number -&amp;gt; boolean. Actually I&apos;d like to disable it. If we do allow it, we need to do consistently. You did it in caster, but TypeCheckingExpVisitor does not handle it. &lt;br/&gt;
3. POCast.java:382, &quot;Note: NOT part of the LoadCaster interface&quot;, byteToBoolean is in interface in patch&lt;br/&gt;
4. CastUtil.java: 195, why do we catch NumberFormatException?&lt;br/&gt;
5. POCast.java:169, typo:&quot;Cannot determine how to convert the bytearray to int&quot;&lt;br/&gt;
6. Tests is not added, right?&lt;/p&gt;</comment>
                            <comment id="13078639" author="zjshen" created="Wed, 3 Aug 2011 09:18:58 +0100"  >&lt;p&gt;Hi Daniel, thanks for your review. I&apos;m adding the test cases, which should be available soon.&lt;/p&gt;

&lt;p&gt;For the second comment, I also hesitate to support the conversion between boolean and number, because the primitive types of Java doesn&apos;t support such kind of conversion. Temporally, I just followed the choice of the reporter of this issue. I&apos;d like to hear the community&apos;s opinions.&lt;/p&gt;

&lt;p&gt;For the third comment, would you please explain it again? It seems not very clear to me. Thanks!&lt;/p&gt;</comment>
                            <comment id="13078852" author="zjshen" created="Wed, 3 Aug 2011 18:05:17 +0100"  >&lt;p&gt;I just found there is one more issue to deal with: sort by a boolean column.&lt;/p&gt;</comment>
                            <comment id="13078885" author="daijy" created="Wed, 3 Aug 2011 18:56:49 +0100"  >&lt;p&gt;Yes, you are right, you will need to add PigBooleanArrayWritableComparator, PigGroupingBooleanWritableComparator, PigBooleanRawComparator, NullableIntWritable. Fortunately raw tuple comparator (BinInterSedesTupleRawComparator, DefaultTupleRawComparator) already handle boolean. You will need to add test case to test order by boolean, group by boolean, join by boolean.&lt;/p&gt;</comment>
                            <comment id="13078999" author="thejas" created="Wed, 3 Aug 2011 21:39:58 +0100"  >&lt;p&gt;My opinion on what should be the behavior for casts to/from boolean -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;explicit cast from numeric types and chararray to boolean and vice versa should be allowed&lt;/li&gt;
	&lt;li&gt;implicit conversions from boolean to other types in arithmetic/boolean expressions should not be done. This is similar to the behavior in case of chararray.&lt;/li&gt;
	&lt;li&gt;The cast from a string (bytearray/chararray) to boolean should be false only if the string is &apos;false&apos;. If the value is not &apos;true&apos; or &apos;false&apos; (case insensitive), I think it is better to return null, and increment the counter that keeps track of conversion errors.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13079035" author="olgan" created="Wed, 3 Aug 2011 22:21:01 +0100"  >&lt;p&gt;Hi Thejas,&lt;/p&gt;

&lt;p&gt;Your first point makes sense. I am not clear why you want to disallow conversion the other way. BTW strings allow conversions to numeric both ways: &lt;a href=&quot;http://pig.apache.org/docs/r0.9.0/basic.html#cast&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.9.0/basic.html#cast&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13079043" author="thejas" created="Wed, 3 Aug 2011 22:33:20 +0100"  >&lt;p&gt;Olga,&lt;br/&gt;
I was referring to only implicit conversions. I meant to say that implicit conversions should be not be done for boolean both ways. Implicit conversions are not done for strings. &lt;/p&gt;</comment>
                            <comment id="13079065" author="olgan" created="Wed, 3 Aug 2011 23:04:01 +0100"  >&lt;p&gt;Oh, I missed that one was explicit and one was implicit - I was looking for symmetry &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13079455" author="zjshen" created="Thu, 4 Aug 2011 17:36:48 +0100"  >&lt;p&gt;Hi Thejas,&lt;/p&gt;

&lt;p&gt;I agree with you on the first two points. For the third one, since conversion from number to boolean is a surjective function (Z -&amp;gt; &lt;/p&gt;
{true, false}, R -&amp;gt; {true, false}
&lt;p&gt;), would it be better to construct a surjective function (&lt;/p&gt;
{all strings}
&lt;p&gt; -&amp;gt; &lt;/p&gt;
{true, false}
&lt;p&gt;) as well to ensure consistency?&lt;/p&gt;

&lt;p&gt;Usually, the string that is neither &quot;true&quot; nor &quot;false&quot; is meaningless to be converted into boolean, but it is not necessarily a error. User applications should know the context better, thus how about leaving this issue to them? If they want to use string to represent boolean type, they can only use &quot;true&quot; and &quot;false&quot; to avoid ambiguity. And Pig just follows the same behavior Boolean.valueOf().&lt;/p&gt;</comment>
                            <comment id="13079553" author="thejas" created="Thu, 4 Aug 2011 21:01:28 +0100"  >&lt;p&gt;Zhijie,&lt;br/&gt;
I doubt if there are going to be use cases where users actually want a string like &apos;xyz&apos; to be converted to false. I think it is more likely to happen because of user error such as applying the cast on a wrong column. Converting it to null and incrementing the conversion error counter will help the user find such an error sooner. &lt;br/&gt;
I don&apos;t think the consistency with numeric conversion is as important  because the logic for numeric conversion anyway different.&lt;/p&gt;</comment>
                            <comment id="13080093" author="daijy" created="Fri, 5 Aug 2011 18:17:42 +0100"  >&lt;p&gt;Hi, Zhijie,&lt;br/&gt;
Discussed with Thejas, here is the things we agree on:&lt;br/&gt;
1. For string-&amp;gt;boolean: we&apos;d like &quot;true&quot;=&amp;gt;TRUE, &quot;false&quot;=&amp;gt;FALSE (ignore case), otherwise null&lt;br/&gt;
2. For numeric type-&amp;gt;boolean: zero=&amp;gt;FALSE, non-zero=&amp;gt;TRUE&lt;br/&gt;
3. We only do string&amp;lt;=&amp;gt;boolean, numerical&amp;lt;=&amp;gt;boolean in explicit cast (POCast) and LoadStoreCaster (UTF8StoreageConverter). We don&apos;t do implicit cast for this (no need extensive change in TypeCheckingExpVisitor)&lt;/p&gt;</comment>
                            <comment id="13081517" author="zjshen" created="Tue, 9 Aug 2011 09:31:18 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The newly attached patch is ready for submission.&lt;/p&gt;

&lt;p&gt;In this patch, I&apos;ve updated the logic of converting String to Boolean according to Thejas&apos;s and Daniel&apos;s comments, added boolean comparator for sorting by boolean column, unified the type name of Boolean to &quot;bool&quot;, and modified some other minor issues. Additionally, I&apos;ve added the test cases.&lt;/p&gt;

&lt;p&gt;Please have me to verify the patch. Thanks indeed!&lt;/p&gt;</comment>
                            <comment id="13082766" author="daijy" created="Thu, 11 Aug 2011 00:33:50 +0100"  >&lt;p&gt;I was impressed by the completeness of the patch. Good job, Zhijie! The comments before were properly addressed. There are several more comments:&lt;br/&gt;
1. package test.org.apache.pig.test.utils.dotGraph.parser is generated by javacc, it should not be included in patch&lt;/p&gt;

&lt;p&gt;2. I saw in golden files, we already have boolean type in some of the nodes, except we are using &quot;boolean&quot; instead of &quot;bool&quot;. I wonder if we need to change the name. We can use &quot;boolean&quot; instead of &quot;bool&quot; as the name, thus no backward compatibility issue&lt;/p&gt;

&lt;p&gt;3. Utf8StorageConverter.java:359, the comments here is no longer applicable&lt;/p&gt;

&lt;p&gt;4. I don&apos;t understand the change in contrib/zebra/src/java/org/apache/hadoop/zebra/schema/SchemaParser.jjt, why we add &quot;t = &amp;lt;&amp;gt;&quot;?&lt;/p&gt;

&lt;p&gt;5. I don&apos;t understand some of the test case you change, if you can give a brief description each testcase you changed (like TestTypeCheckingValidatorNewLP:test implicit cast, TestConversions:test bytes&amp;lt;=&amp;gt;boolean conversion), that would help. Also I don&apos;t see any end-to-end tests(something similar to TestForEachNestedPlanLocal in your nested cross patch). We shall add the following end-to-end test: read boolean input, read a tuple containing boolean type, group/order by boolean&lt;/p&gt;</comment>
                            <comment id="13083081" author="zjshen" created="Thu, 11 Aug 2011 13:03:37 +0100"  >&lt;p&gt;Hi Daniel,&lt;/p&gt;

&lt;p&gt;Thanks for your review, I&apos;ve fixed 1, 3, 4. For 5, I&apos;ll add the comments and some end-to-end tests. For 2, if we want to stick to &quot;boolean&quot; as the name of Boolean Type, we&apos;d better revise the grammar: changing from &quot;bool&quot; keyword to &quot;boolean&quot;. Otherwise, Utils.getSchemaFromString() will be broken if the supplied schema string uses &quot;bool&quot;. And the name used in Pig Latin commands should be consistent to that in the displayed plan/schema.&lt;/p&gt;</comment>
                            <comment id="13083219" author="daijy" created="Thu, 11 Aug 2011 17:48:43 +0100"  >&lt;p&gt;You are right. But I mean change the keyword to &quot;boolean&quot; as well.&lt;/p&gt;</comment>
                            <comment id="13084638" author="zjshen" created="Sat, 13 Aug 2011 17:40:31 +0100"  >&lt;p&gt;Hi Daniel,&lt;/p&gt;

&lt;p&gt;Attached is the latest version of the patch. I&apos;ve tried to fix most of the your comments. In this patch, I&apos;ve changed and unified the name of Boolean type to &quot;boolean&quot; instead of &quot;bool&quot;. I&apos;ve added some brief comments for some test cases that I created. Additionally, I&apos;ve added an end-to-end cast to show sorting by the boolean value column. However, I found that two other mentioned end-to-end cases have already been part of TestDataModel. Please have a look to see whether it is ready for submit.&lt;/p&gt;</comment>
                            <comment id="13086137" author="zjshen" created="Wed, 17 Aug 2011 05:55:40 +0100"  >&lt;p&gt;I&apos;ve polished the patch by eliminating unnecessary changes and excluding the unrelated files.&lt;/p&gt;</comment>
                            <comment id="13087125" author="daijy" created="Thu, 18 Aug 2011 18:19:28 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1429&quot; title=&quot;Add Boolean Data Type to Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1429&quot;&gt;&lt;del&gt;PIG-1429&lt;/del&gt;&lt;/a&gt;_6.patch include some minor change in parser, and fix issues in test-patch.&lt;/p&gt;</comment>
                            <comment id="13087129" author="daijy" created="Thu, 18 Aug 2011 18:25:55 +0100"  >&lt;p&gt;test-patch result:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 45 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javac.  The applied patch generated 968 javac compiler warnings (more than the trunk&apos;s current 954 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 444 release audit warnings (more than the trunk&apos;s current 431 warnings).&lt;/p&gt;

&lt;p&gt;All new javac warnings are in parser generated code. The only new file PigBooleanRawComparator.java has the proper header.&lt;/p&gt;

&lt;p&gt;Patch committed to trunk. Great job, Zhijie!&lt;/p&gt;</comment>
                            <comment id="13087502" author="zjshen" created="Fri, 19 Aug 2011 04:59:54 +0100"  >&lt;p&gt;Thanks for your help, Daniel!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12441002">PIG-1097</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12459893">PIG-1314</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12459893">PIG-1314</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12487643" name="PIG-1429_1.patch" size="25967" author="zjshen" created="Sun, 24 Jul 2011 15:31:32 +0100"/>
                            <attachment id="12488852" name="PIG-1429_2.patch" size="39825" author="zjshen" created="Tue, 2 Aug 2011 04:04:14 +0100"/>
                            <attachment id="12489822" name="PIG-1429_3.patch" size="214182" author="zjshen" created="Tue, 9 Aug 2011 09:31:18 +0100"/>
                            <attachment id="12490342" name="PIG-1429_4.patch" size="124745" author="zjshen" created="Sat, 13 Aug 2011 17:40:31 +0100"/>
                            <attachment id="12490607" name="PIG-1429_5.patch" size="97581" author="zjshen" created="Wed, 17 Aug 2011 05:55:40 +0100"/>
                            <attachment id="12490817" name="PIG-1429_6.patch" size="98403" author="daijy" created="Thu, 18 Aug 2011 18:19:28 +0100"/>
                            <attachment id="12445897" name="working_boolean.patch" size="23559" author="russell.jurney" created="Mon, 31 May 2010 02:04:09 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 29 May 2010 01:15:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49706</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaqcf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Introduce boolean as first class Pig data type. You can use &amp;quot;boolean&amp;quot; anywhere Pig expecting a data type. For example:&lt;br/&gt;
a = load &amp;#39;input&amp;#39; as (a0:boolean, a1:tuple(a10:boolean, a11:int), a2);&lt;br/&gt;
b = foreach a generate a0, a1, (boolean)a2;&lt;br/&gt;
c = group b by a2; -- group by a boolean field&lt;br/&gt;
&lt;br/&gt;
When UTF8StorageConvert converts bytes into boolean, it expects &amp;quot;true&amp;quot; (ignore case) to be TRUE and &amp;quot;false&amp;quot; (ignore case) to be FALSE, otherwise, we get null. For example:&lt;br/&gt;
a = load &amp;#39;input&amp;#39; as (a0:boolean);&lt;br/&gt;
&lt;br/&gt;
input file:&lt;br/&gt;
true         -- we get TRUE&lt;br/&gt;
True        -- we get TRUE&lt;br/&gt;
FALSE    -- we get FALSE&lt;br/&gt;
1             -- we get null&lt;br/&gt;
&lt;br/&gt;
We also change the interface LoadCaster/StoreCaster to include boolean type.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>boolean type pig</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>