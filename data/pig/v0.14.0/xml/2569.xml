<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:02:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2569/PIG-2569.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2569] Fix org.apache.pig.test.TestInvoker.testSpeed</title>
                <link>https://issues.apache.org/jira/browse/PIG-2569</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;the Pig unit test org.apache.pig.test.TestInvoker.testSpeed pass sometimes and fail sometimes. I think this test need further polish, look at the code:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;@Test
    public void testSpeed() throws IOException, SecurityException, ClassNotFoundException, NoSuchMethodException {
        EvalFunc&amp;lt;Double&amp;gt; log = new Log();
        Tuple tup = tf_.newTuple(1);
        long start = System.currentTimeMillis();
        for (int i=0; i &amp;lt; 1000000; i++) {
            tup.set(0, (double) i);
            log.exec(tup);
        }
        long staticSpeed = (System.currentTimeMillis()-start);
        start = System.currentTimeMillis();
        log = new InvokeForDouble(&quot;java.lang.Math.log&quot;, &quot;Double&quot;, &quot;static&quot;);
        for (int i=0; i &amp;lt; 1000000; i++) {
            tup.set(0, (double) i);
            log.exec(tup);
        }
        long dynamicSpeed = System.currentTimeMillis()-start;
        System.err.println(&quot;Dynamic to static ratio: &quot;+((float) dynamicSpeed)/staticSpeed);
        assertTrue( ((float) dynamicSpeed)/staticSpeed &amp;lt; 5);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I understand this test is trying to prevent the initicialization time of InvokeForDouble doesn&apos;t take too long, but the ratio 5 is hardcoded, and there is no solid logic behind it why it is 5. For my understand, when the server resouce is low, ratio could be larger than 5, but it doesn&apos;t mean code has problem. For our case, the code never change, but it pass in the first run, but fail in the second run.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12545013">PIG-2569</key>
            <summary>Fix org.apache.pig.test.TestInvoker.testSpeed</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aklochkov">Andrey Klochkov</assignee>
                                    <reporter username="dreambird">Johnny Zhang</reporter>
                        <labels>
                    </labels>
                <created>Sat, 3 Mar 2012 00:37:57 +0000</created>
                <updated>Thu, 30 May 2013 01:17:59 +0100</updated>
                            <resolved>Sat, 4 Aug 2012 00:09:50 +0100</resolved>
                                    <version>0.9.2</version>
                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13222684" author="dvryaboy" created="Mon, 5 Mar 2012 22:28:08 +0000"  >&lt;p&gt;When I wrote that test, the ratio was more like two, and the idea behind hardcoding 5 was that if it&apos;s that slow, it&apos;s not worth using and we should rethink. &lt;/p&gt;

&lt;p&gt;I am curious why it just started failing for people &amp;#8211; the code&apos;s been around for a year, and I got reports of the test failing here and in Elephant Bird a week apart. Is there a new Java build that drastically slowed down reflection or something?&lt;/p&gt;

&lt;p&gt;What is your java environment?&lt;/p&gt;</comment>
                            <comment id="13222695" author="dreambird" created="Mon, 5 Mar 2012 22:36:34 +0000"  >&lt;p&gt;The Java build I am using is JDK6u26.&lt;/p&gt;</comment>
                            <comment id="13427781" author="aklochkov" created="Fri, 3 Aug 2012 01:53:07 +0100"  >&lt;p&gt;This test fails for me when code coverage calculation is enabled, it happens permanently on my MacBook 2.26GHz with Sun JDK 1.6.0_33-b03-424. The ratio calculated by test is between 5 and 6 in this case.&lt;/p&gt;

&lt;p&gt;How about excluding this test explicitly when Clover is enabled?&lt;/p&gt;

&lt;p&gt;Johnny, could it be the case that Clover was enabled when you were hitting the problem? &lt;/p&gt;</comment>
                            <comment id="13427790" author="dreambird" created="Fri, 3 Aug 2012 02:13:01 +0100"  >&lt;p&gt;Andrey, yes Clover is enabled when test was running. I think it is a good idea to disable this test when Clover is enabled, in build.xml&lt;/p&gt;</comment>
                            <comment id="13427845" author="aklochkov" created="Fri, 3 Aug 2012 06:36:22 +0100"  >&lt;p&gt;Attaching patch. The test was moved into a separate class to be able to disable it in build.xml when Clover is enabled. &lt;/p&gt;</comment>
                            <comment id="13428421" author="dvryaboy" created="Fri, 3 Aug 2012 23:12:47 +0100"  >&lt;p&gt;Can you guys confirm that the test passes with Clover disabled?&lt;/p&gt;</comment>
                            <comment id="13428424" author="aklochkov" created="Fri, 3 Aug 2012 23:22:38 +0100"  >&lt;p&gt;Per my observations, with Clover disabled the ratio is ~2 or less. When Clover is enabled, it&apos;s between 5 and 6. I applied the fix in our fork of Pig and haven&apos;t seen failures in our CI after that (with Clover enabled). &lt;/p&gt;</comment>
                            <comment id="13428450" author="dvryaboy" created="Sat, 4 Aug 2012 00:09:50 +0100"  >&lt;p&gt;Committed to trunk. Thanks Andrey!&lt;/p&gt;</comment>
                            <comment id="13669915" author="aniket486" created="Thu, 30 May 2013 01:17:59 +0100"  >&lt;p&gt;With java version 1.6.0_45+, the ratio is almost about 4-5, so the test fails sometimes. It could be JVM problem. Do we need this test in pig?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12538997" name="PIG-2569.patch" size="5349" author="aklochkov" created="Fri, 3 Aug 2012 06:35:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Mar 2012 22:28:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>230199</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxwof3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14443</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>