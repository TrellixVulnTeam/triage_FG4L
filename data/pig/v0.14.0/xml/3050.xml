<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:01:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3050/PIG-3050.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3050] Fix FindBugs multithreading warnings</title>
                <link>https://issues.apache.org/jira/browse/PIG-3050</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;There was a race condition reported when running Pig in local mode on the user mailing list. This motivated me to fix potential multithreading bugs that can be identified by FindBugs.&lt;/p&gt;

&lt;p&gt;FindBugs identifies the following potential bugs:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Mutable static field&lt;/li&gt;
	&lt;li&gt;Inconsistent synchronization&lt;/li&gt;
	&lt;li&gt;Incorrect lazy initialization of static field&lt;/li&gt;
	&lt;li&gt;Incorrect lazy initialization and update of static field&lt;/li&gt;
	&lt;li&gt;Unsynchronized get method, synchronized set method&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;There are in total 1153 warnings that FindBugs complains, but they&apos;re outside of the scope of this jira.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12616178">PIG-3050</key>
            <summary>Fix FindBugs multithreading warnings</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cheolsoo">Cheolsoo Park</assignee>
                                    <reporter username="cheolsoo">Cheolsoo Park</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Nov 2012 01:58:01 +0000</created>
                <updated>Mon, 14 Oct 2013 17:46:44 +0100</updated>
                            <resolved>Thu, 27 Dec 2012 04:53:27 +0000</resolved>
                                    <version>0.11</version>
                                    <fixVersion>0.12.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13498303" author="jcoveney" created="Thu, 15 Nov 2012 20:17:37 +0000"  >&lt;p&gt;For context, when you say multithreading do you mean running two Pig jobs in the same VM, or something else?&lt;/p&gt;</comment>
                            <comment id="13498368" author="cheolsoo" created="Thu, 15 Nov 2012 21:47:08 +0000"  >&lt;p&gt;Hi Jonathan,&lt;/p&gt;

&lt;p&gt;There are two things:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Single Pig job in local mode (LocalJobRunner).&lt;/li&gt;
	&lt;li&gt;Multiple Pig jobs in the same VM as you mentioned.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The direct motivation for this ticket is (1), but I am doing some experiments with (2) where I execute multiple jobs in a single VM.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13534169" author="cheolsoo" created="Mon, 17 Dec 2012 19:01:44 +0000"  >&lt;p&gt;Attached is a patch that fixes the following issues:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mutual static field
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;PhysicalOperator.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; PigProgressable reporter;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There was a reported race condition due to this static field (For details, see &lt;a href=&quot;http://search-hadoop.com/m/2OdLNRMwXa2/Intermittent+NullPointerException&amp;amp;subj=Intermittent+NullPointerException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;). Since &lt;tt&gt;reporter&lt;/tt&gt; should be local to thread, I converted it to ThreadLocal.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Inconsistent synchronization
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;POStream.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Result getNext(Tuple t) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ExecException {
    ...
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(initialized) {
       ...
    }
    ...
}
...
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Result getNextHelper(Tuple t) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ExecException {
    ...
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;) {
       ...
       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!initialized) {
          ...
       }
       ...
       initialized = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
       ...
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Synchronized access to &lt;tt&gt;initialized&lt;/tt&gt; is performed inside &lt;tt&gt;getNextHelper()&lt;/tt&gt;, but unsynchronized access was performed inside &lt;tt&gt;getNext()&lt;/tt&gt;. I added a synchronized getter method and used that method inside &lt;tt&gt;getNext()&lt;/tt&gt;.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Incorrect lazy initialization of static field
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;SpillableMemoryManager.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; SpillableMemoryManager getInstance() {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (manager == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        manager = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpillableMemoryManager();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; manager;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;FindBugs says, &quot;Because the compiler may reorder instructions, threads are not guaranteed to see a completely initialized object if the method can be called by multiple threads.&quot; So I declared &lt;tt&gt;manager&lt;/tt&gt; as volatile.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Incorrect lazy initialization and update of static field
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;SchemaTupleBackend.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void initialize(Configuration jConf, PigContext pigContext, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isLocal) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (stb != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;SchemaTupleBackend has already been initialized&quot;&lt;/span&gt;);
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        SchemaTupleFrontend.lazyReset(pigContext);
        SchemaTupleFrontend.reset();
        stb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaTupleBackend(jConf, isLocal);
        stb.copyAndResolve();
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;FindBugs says, &quot;After the field is set, the object stored into that location is further updated. The setting of the field is visible to other threads as soon as it is set. If further accesses in the method that set the field serve to initialize the object, then you have a very serious multithreading bug.&quot; So I moved the assignment to the end of the method after all initialization is done.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Unsynchronized get method, synchronized set method
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;PigHadoopLogger.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void setReporter(PigStatusReporter rep) {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.reporter = rep;
}
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; getAggregate() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; aggregate;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I made &lt;tt&gt;getAggregate()&lt;/tt&gt; synchronized.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13539828" author="cheolsoo" created="Thu, 27 Dec 2012 04:53:27 +0000"  >&lt;p&gt;Thank you for the review in the RB, Santhosh!&lt;br/&gt;
(&lt;a href=&quot;https://reviews.apache.org/r/8649/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8649/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I committed it to trunk.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12561332" name="PIG-3050.patch" size="16387" author="cheolsoo" created="Mon, 17 Dec 2012 19:01:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 15 Nov 2012 20:17:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>257927</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyefhj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>118205</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>