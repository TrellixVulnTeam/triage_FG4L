<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:00:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1309/PIG-1309.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1309] Sort Merge Cogroup</title>
                <link>https://issues.apache.org/jira/browse/PIG-1309</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;In never ending quest to make Pig go faster, we want to parallelize as many relational operations as possible. Its already possible to do Group-by( &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-984&quot; title=&quot;PERFORMANCE: Implement a map-side group operator to speed up processing of ordered data &quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-984&quot;&gt;&lt;del&gt;PIG-984&lt;/del&gt;&lt;/a&gt; ) and Joins( &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-845&quot; title=&quot;PERFORMANCE: Merge Join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-845&quot;&gt;&lt;del&gt;PIG-845&lt;/del&gt;&lt;/a&gt; , &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-554&quot; title=&quot;Fragment Replicate Join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-554&quot;&gt;&lt;del&gt;PIG-554&lt;/del&gt;&lt;/a&gt; ) purely in map-side in Pig. This jira is to add map-side implementation of Cogroup in Pig. Details to follow.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12459695">PIG-1309</key>
            <summary>Sort Merge Cogroup</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ashutoshc">Ashutosh Chauhan</assignee>
                                    <reporter username="ashutoshc">Ashutosh Chauhan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Mar 2010 18:46:29 +0000</created>
                <updated>Fri, 17 Dec 2010 22:43:57 +0000</updated>
                            <resolved>Fri, 9 Jul 2010 18:49:57 +0100</resolved>
                                                    <fixVersion>0.7.0</fixVersion>
                    <fixVersion>0.8.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12847510" author="ashutoshc" created="Fri, 19 Mar 2010 18:48:10 +0000"  >&lt;p&gt;Preliminary patch to discuss the approach. Not ready for inclusion yet.&lt;/p&gt;</comment>
                            <comment id="12847589" author="alangates" created="Fri, 19 Mar 2010 21:31:38 +0000"  >&lt;p&gt;Here&apos;s a write up on the design behind this:  &lt;a href=&quot;http://wiki.apache.org/pig/MapSideCogroup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/MapSideCogroup&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12847604" author="alangates" created="Fri, 19 Mar 2010 21:56:12 +0000"  >&lt;p&gt;Comments:&lt;/p&gt;

&lt;p&gt;A liberal dose of comments would help greatly in understanding what the various helper methods are doing.&lt;/p&gt;

&lt;p&gt;You use LocalRearrange to split the keys and values.  What&apos;s the overhead of that?  Would it be more efficient to factor the key splitting code out of LR and share it between LR and here?&lt;/p&gt;

&lt;p&gt;I don&apos;t understand the need for pullTuplesFromSideLoaders().  In setup() you put one tuple from each input into the heap.  Then you pull from the heap until you see a key change.  But I don&apos;t understand the next step.  At key change you call pullTuplesFromSideLoaders().  But if you&apos;ve been adding into the heap as you pull tuples there&apos;s no need to pull anything from the side loaders at this point.  All you should need to do is package up the bags you&apos;ve build and return them as your tuple.&lt;/p&gt;

&lt;p&gt;Also, it appears your using pullTuplesFromSideLoaders() to fill the heap.  You shouldn&apos;t be pulling all tuples for a current key from side loaders, as you&apos;re likely to miss tuples with keys that are in the side loaders but not in the main loader.  The algorithm should be that as you pull a tuple from the heap, you place the next tuple from that same stream into the heap.  The heap will guarantee that your tuples come out in order.&lt;/p&gt;</comment>
                            <comment id="12849462" author="ashutoshc" created="Wed, 24 Mar 2010 21:40:21 +0000"  >&lt;p&gt;Did offline review with Alan. Found a subtle bug in POMergeCogroup#getNext(). Fixed that and added more tests. Still need to tidy up things at few places. Looking for suggestion for better test cases that cover all the edge cases. &lt;/p&gt;</comment>
                            <comment id="12851187" author="ashutoshc" created="Tue, 30 Mar 2010 01:54:45 +0100"  >&lt;p&gt;Getting closer. Running through hudson to find out if it breaks anything.&lt;/p&gt;</comment>
                            <comment id="12851323" author="hadoopqa" created="Tue, 30 Mar 2010 10:09:47 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12440159/pig-1309_1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12440159/pig-1309_1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 928950.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 88 javac compiler warnings (more than the trunk&apos;s current 87 warnings).&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/258/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/258/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/258/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/258/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/258/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/258/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12851655" author="alangates" created="Wed, 31 Mar 2010 00:24:57 +0100"  >&lt;p&gt;I&apos;m not clear on the need for the typedComparator logic in MapReduceOper.  Can you explain why that&apos;s necessary?&lt;/p&gt;</comment>
                            <comment id="12851661" author="ashutoshc" created="Wed, 31 Mar 2010 00:54:45 +0100"  >&lt;p&gt;To build index, we sample every split and get an index entry corresponding to the split. After sampling all the index entries are sorted and then index is written to disk. When I first wrote MergeJoin I wasn&apos;t able to figure out how to use hadoop sorting to sort the index. So, there is a comment in MRCompiler for that:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;// Sorting of index can possibly be achieved by using Hadoop sorting 
// between map and reduce instead of Pig doing sort. If that is so, 
// it will simplify lot of the code below.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now I figured it out &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; By default, if LocalRearranges produce key of type tuple Pig supplies raw binary comparators (PigTupleWritableComparator) to hadoop to compare tuples, which ignores the semantics of tuple. We need to override that behavior to make Pig supply correct version of tuple comparator (PigTupleRawComparator).  We need to communicate this info to JobControlCompiler from MRCompiler. So, I am doing the same through MapReduceOper object. &lt;/p&gt;

&lt;p&gt;As a nice side-effects of this &lt;br/&gt;
a) code in MRCompiler is indeed simplified now&lt;br/&gt;
b) We got rid of extra index sorting inside reducer. &lt;/p&gt;</comment>
                            <comment id="12851979" author="alangates" created="Wed, 31 Mar 2010 18:27:59 +0100"  >&lt;p&gt;Cool.  Thanks for the explanation.  Code looks good, +1.&lt;/p&gt;</comment>
                            <comment id="12852566" author="ashutoshc" created="Thu, 1 Apr 2010 22:45:59 +0100"  >&lt;p&gt;Updated the patch to fix test failures, javac warnings and more comments.&lt;/p&gt;

&lt;p&gt;Result of test-patch on latest patch:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 9 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec] 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Result of test-commit:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;test-commit:
    [mkdir] Created dir: /homes/chauhana/scratch/latest/build/test/logs
    [junit] Running org.apache.pig.test.TestAdd
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.036 sec
	:
	:
    [junit] Running org.apache.pig.test.TestTypeCheckingValidatorNoSchema
    [junit] Tests run: 13, Failures: 0, Errors: 0, Time elapsed: 0.165 sec
BUILD SUCCESSFUL
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Patch checked in trunk.&lt;/p&gt;</comment>
                            <comment id="12854993" author="yanz" created="Thu, 8 Apr 2010 17:46:39 +0100"  >&lt;p&gt;Zebra&apos;s test case for this feature needs to be added to the 0.7 branch if and when this feature is to be supported therein. I have created a JIRA, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1367&quot; title=&quot;[zebra] Map-side Cogroup Test case is needed on 0.7 if the feature is supported in 0.7&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1367&quot;&gt;&lt;del&gt;PIG-1367&lt;/del&gt;&lt;/a&gt;,  for tracking this addition should it become necessary. The test case is actually part of the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1315&quot; title=&quot;[Zebra] Implementing OrderedLoadFunc interface for Zebra TableLoader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1315&quot;&gt;&lt;del&gt;PIG-1315&lt;/del&gt;&lt;/a&gt; that is committed as whole to the trunk but committed to the 0.7 branch without that test case.&lt;/p&gt;</comment>
                            <comment id="12884788" author="ashutoshc" created="Fri, 2 Jul 2010 20:23:09 +0100"  >&lt;p&gt;Backport of merge cogroup for 0.7 branch. Since, hudson can test only for trunk. Manually ran all the tests, all passed.&lt;/p&gt;</comment>
                            <comment id="12886043" author="rding" created="Wed, 7 Jul 2010 20:30:29 +0100"  >&lt;p&gt;+1. Please commit to 0.7 branch.&lt;/p&gt;</comment>
                            <comment id="12886795" author="ashutoshc" created="Fri, 9 Jul 2010 18:49:57 +0100"  >&lt;p&gt;Patch checked-in to 0.7 branch as well.&lt;/p&gt;</comment>
                            <comment id="12905859" author="mridulm@yahoo-inc.com" created="Fri, 3 Sep 2010 12:38:44 +0100"  >
&lt;p&gt;Condition (1) refers to only explicit (user specified) statements right ?&lt;br/&gt;
Not implicit project introduced by pig to conform to schema ?&lt;/p&gt;


&lt;p&gt;Regards,&lt;br/&gt;
Mridul&lt;/p&gt;


</comment>
                            <comment id="12905935" author="ashutoshc" created="Fri, 3 Sep 2010 16:24:33 +0100"  >&lt;p&gt;Correct. Condition(1) is implied only for user specified statements.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12448592" name="PIG_1309_7.patch" size="97488" author="ashutoshc" created="Fri, 2 Jul 2010 20:23:09 +0100"/>
                            <attachment id="12439314" name="mapsideCogrp.patch" size="56123" author="ashutoshc" created="Fri, 19 Mar 2010 18:48:10 +0000"/>
                            <attachment id="12440159" name="pig-1309_1.patch" size="84531" author="ashutoshc" created="Tue, 30 Mar 2010 01:54:45 +0100"/>
                            <attachment id="12440542" name="pig-1309_2.patch" size="95041" author="ashutoshc" created="Thu, 1 Apr 2010 22:45:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 19 Mar 2010 21:31:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164809</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaozb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96358</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>With this patch, it is now possible to perform map-side cogroup if data is sorted and loader implements certain interfaces. Primary algorithm is based on sort-merge join with additional restrictions. &lt;br/&gt;
&lt;br/&gt;
Following preconditions must be met to use this feature: &lt;br/&gt;
1) No other operations can be done between load and cogroup statements. &lt;br/&gt;
2) Data must be sorted on join keys for all tables in ASC order. &lt;br/&gt;
3) Nulls are considered smaller then everything. So, if data contains null keys, they should occur before anything else. &lt;br/&gt;
4) Left-most loader must implement {CollectableLoader} interface as well as {OrderedLoadFunc}. &lt;br/&gt;
5) All other loaders must implement IndexableLoadFunc. &lt;br/&gt;
6) Type information must be provided in schema for all the loaders.&lt;br/&gt;
&lt;br/&gt;
Note that Zebra loader satisfies all of these conditions, so can be used out of box. &lt;br/&gt;
&lt;br/&gt;
Similar conditions apply to map-side outer joins (using merge) (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1353&quot; title=&quot;Map-side outer joins&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1353&quot;&gt;&lt;strike&gt;PIG-1353&lt;/strike&gt;&lt;/a&gt;) as well. &lt;br/&gt;
&lt;br/&gt;
Example: &lt;br/&gt;
A = load &amp;#39;data1&amp;#39; using org.apache.hadoop.zebra.pig.TableLoader(&amp;#39;id:int&amp;#39;, &amp;#39;sorted&amp;#39;); &lt;br/&gt;
B = load &amp;#39;data2&amp;#39; using org.apache.hadoop.zebra.pig.TableLoader(&amp;#39;id:int&amp;#39;, &amp;#39;sorted&amp;#39;); &lt;br/&gt;
C = COGROUP A by id, B by id using &amp;#39;merge&amp;#39;; &lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>