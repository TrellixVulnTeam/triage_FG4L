<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:48:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1755/PIG-1755.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1755] Clean up duplicated code in Physical Operators</title>
                <link>https://issues.apache.org/jira/browse/PIG-1755</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;A lot of the getNext() implementations in PhysicalOperators is copy-pasted, with only the method signatures and casts changing. &lt;br/&gt;
Shorter code leads to less bugs and is easier to read.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12492120">PIG-1755</key>
            <summary>Clean up duplicated code in Physical Operators</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dvryaboy">Dmitriy V. Ryaboy</assignee>
                                    <reporter username="dvryaboy">Dmitriy V. Ryaboy</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Dec 2010 02:35:19 +0000</created>
                <updated>Thu, 4 Aug 2011 01:34:43 +0100</updated>
                            <resolved>Thu, 23 Dec 2010 02:18:59 +0000</resolved>
                                                    <fixVersion>0.9.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12967065" author="dvryaboy" created="Mon, 6 Dec 2010 02:37:54 +0000"  >&lt;p&gt;Reworked a few of the PhysicalOperators to get rid of a few hundred lines of code.&lt;br/&gt;
Note that reflection costs are avoided by passing around an static class (and that due to this, we cannot apply the same method to getNext(Map m)).&lt;/p&gt;</comment>
                            <comment id="12967067" author="dvryaboy" created="Mon, 6 Dec 2010 02:46:55 +0000"  >&lt;p&gt;Existing tests are sufficient for this change.&lt;/p&gt;</comment>
                            <comment id="12969503" author="alangates" created="Wed, 8 Dec 2010 21:41:05 +0000"  >&lt;p&gt;In the new PhysicalOperator.getNext(Object, Class) you don&apos;t handle DataByteArrays.  Why not?  These should be a simple type like String et. al.&lt;/p&gt;

&lt;p&gt;This patch seems to be predicated on the assumption that o.class == o.class is faster than instanceof.  I assumed the latter was implemented as the former.  Am I missing something?&lt;/p&gt;

&lt;p&gt;Have you done any performance testing on this to see if it makes a noticeable difference?&lt;/p&gt;

&lt;p&gt;I like the code cleanup.&lt;/p&gt;

&lt;p&gt;I&apos;ve started the test-patch and ant test runs.&lt;/p&gt;</comment>
                            <comment id="12969510" author="dvryaboy" created="Wed, 8 Dec 2010 21:50:31 +0000"  >&lt;p&gt;It occurred to me after posting this patch that it would be better to use the DataType enums instead of classes &amp;#8211; for one thing, that would allow me to do the same for maps, etc. I&apos;ll rewrite when I get an hour.  &lt;/p&gt;

&lt;p&gt;instanceof is slower because HashMap foo is an instance of Map, but the classes are different. It has to walk the inheritance tree.&lt;/p&gt;</comment>
                            <comment id="12969984" author="alangates" created="Thu, 9 Dec 2010 22:43:26 +0000"  >&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;                         Please justify why no tests are needed for this patch.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 457 release audit warnings (more than the trunk&apos;s current 450 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The javadoc warning is:&lt;/p&gt;

&lt;p&gt;/home/gates/src/pig/&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1755&quot; title=&quot;Clean up duplicated code in Physical Operators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1755&quot;&gt;&lt;del&gt;PIG-1755&lt;/del&gt;&lt;/a&gt;/trunk/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java:306: warning - @return tag has no arguments.&lt;/p&gt;

&lt;p&gt;The release audit warnings appear to be due to new jdiff files resulting from the changes.&lt;/p&gt;

&lt;p&gt;The unit tests passed.&lt;/p&gt;</comment>
                            <comment id="12970338" author="scott_carey" created="Fri, 10 Dec 2010 23:31:22 +0000"  >&lt;p&gt;instanceof is slower, but in this case the performance is dominated by the large amounts of object creation in pig.  In order to subtract two Integers, you have to create a third.   That single object allocation and the resulting GC is an order of magnitude more costly than the difference between instanceof and ==.&lt;/p&gt;

&lt;p&gt;The cleanup is nice, and if changed to an enum there are more gains &amp;#8211; a switch on an enum is faster than cascaded if/else.&lt;/p&gt;
</comment>
                            <comment id="12970348" author="ashutoshc" created="Sat, 11 Dec 2010 00:07:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;It occurred to me after posting this patch that it would be better to use the DataType enums instead of classes&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Are you referring to types defined in DataType.java ? Currently, they are byte. Changing them to enums instead may not be desirable since while writing out tuples we first write the type(which is a byte). byte is efficient representation there but if we change to enums, enums will get serialized and will take more then a byte. I/O cost resulting from that will be order of magnitude worse then CPU savings we might get by having enums.&lt;/p&gt;</comment>
                            <comment id="12970533" author="dvryaboy" created="Sat, 11 Dec 2010 22:46:52 +0000"  >&lt;p&gt;I mean bytes, not an enum (forgot which it was).&lt;/p&gt;

&lt;p&gt;Attached patch is rewritten to use DataType, and also modifies a number of the logical expression operators to get rid of (some of) the code duplication in them.&lt;/p&gt;

&lt;p&gt;Scott &amp;#8211; the purpose here is not to speed things up, though of course I don&apos;t want to slow them down. However &amp;#8211; any ideas on how to reduce object allocations?&lt;/p&gt;

&lt;p&gt;-D&lt;/p&gt;</comment>
                            <comment id="12971353" author="scott_carey" created="Tue, 14 Dec 2010 18:19:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;any ideas on how to reduce object allocations?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mutable numeric data types.  But since the object types are part of the API that would break things.  &lt;br/&gt;
Avoiding boxing when doing calculations, but that would be messy and breaks APIs.&lt;/p&gt;

&lt;p&gt;A radical change to Tuple &amp;#8211; changing it to be a reflected object and not essentially an Object[], would reap huge performance wins but be a very large effort with API incompatibilities.  Maybe Avro will have an API later that would make such a change simpler, but that is a year or more out.&lt;/p&gt;</comment>
                            <comment id="12971532" author="dvryaboy" created="Wed, 15 Dec 2010 02:19:09 +0000"  >&lt;p&gt;Commiters &amp;#8211; could you let me know when you&apos;d be able to review the patch?&lt;br/&gt;
It&apos;s not urgent but this sort of refactor does tend to go stale after a while...&lt;/p&gt;</comment>
                            <comment id="12971880" author="alangates" created="Wed, 15 Dec 2010 22:53:15 +0000"  >&lt;p&gt;I can take a look at it tomorrow (12/16).&lt;/p&gt;</comment>
                            <comment id="12972165" author="alangates" created="Thu, 16 Dec 2010 18:04:49 +0000"  >&lt;p&gt;+1 on the changes.  When I went to apply the patch, most of it failed to apply.  If you can regenerate I can run a number of end-to-end tests on it that would be good to do before we check it in.&lt;/p&gt;</comment>
                            <comment id="12972209" author="dvryaboy" created="Thu, 16 Dec 2010 20:56:14 +0000"  >&lt;p&gt;Attaching rebased patch &amp;#8211; the illustrate changes broke the old one.&lt;/p&gt;

&lt;p&gt;test-commit still passes.&lt;/p&gt;</comment>
                            <comment id="12973797" author="dvryaboy" created="Tue, 21 Dec 2010 18:24:56 +0000"  >&lt;p&gt;bump &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12974277" author="alangates" created="Wed, 22 Dec 2010 16:47:39 +0000"  >&lt;p&gt;Sorry, this got lost in the stack.  All the unit tests but skewed join passed, which timed out.  I think that has nothing to do with your stuff, but I&apos;m rerunning it.  I&apos;m running test-patch and a few more tests and I&apos;ll post here when they&apos;re done.&lt;/p&gt;</comment>
                            <comment id="12974353" author="alangates" created="Wed, 22 Dec 2010 19:42:18 +0000"  >&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;                         Please justify why no tests are needed for this patch.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 464 release audit warnings (more than the trunk&apos;s current 459 warnings).&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;As before I believe the release audit warnings are from jdiff files.  But the javadoc warning is a new one:&lt;/p&gt;

&lt;p&gt;/home/gates/src/pig/&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1755&quot; title=&quot;Clean up duplicated code in Physical Operators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1755&quot;&gt;&lt;del&gt;PIG-1755&lt;/del&gt;&lt;/a&gt;/trunk/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java:315: warning - @param argument &quot;&amp;lt;T&amp;gt;&quot; is not a type parameter name.&lt;/p&gt;
</comment>
                            <comment id="12974380" author="dvryaboy" created="Wed, 22 Dec 2010 20:43:59 +0000"  >&lt;p&gt;This patch is a one-line change from the previous version, only different in removing an incorrect javadoc line.&lt;/p&gt;</comment>
                            <comment id="12974451" author="alangates" created="Thu, 23 Dec 2010 00:22:20 +0000"  >&lt;p&gt;Looks good.  TestSkewedJoin finishes when you give it enough time (a mere 49 minutes) and the other tests I ran passed as well.  +1&lt;/p&gt;</comment>
                            <comment id="12974476" author="dvryaboy" created="Thu, 23 Dec 2010 02:18:59 +0000"  >&lt;p&gt;Committed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12466082" name="PIG-1755.2.patch" size="205241" author="dvryaboy" created="Sat, 11 Dec 2010 22:46:52 +0000"/>
                            <attachment id="12466404" name="PIG-1755.3.patch" size="209997" author="dvryaboy" created="Thu, 16 Dec 2010 20:56:14 +0000"/>
                            <attachment id="12466836" name="PIG-1755.4.patch" size="210077" author="dvryaboy" created="Wed, 22 Dec 2010 20:43:59 +0000"/>
                            <attachment id="12465354" name="PIG-1755.patch" size="60838" author="dvryaboy" created="Mon, 6 Dec 2010 02:37:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Dec 2010 21:41:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>41705</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyatjj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97097</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>