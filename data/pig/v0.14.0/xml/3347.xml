<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:48:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3347/PIG-3347.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3347] Store invocation brings side effect</title>
                <link>https://issues.apache.org/jira/browse/PIG-3347</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The problem is that intermediate &apos;store&apos; invocation &quot;changes&quot; the final store output. Looks like it brings some kind of side effect. We did use &apos;local&apos; mode to run script&lt;br/&gt;
here is the input data:&lt;br/&gt;
1&lt;br/&gt;
1&lt;br/&gt;
Here is the script:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = load &apos;test&apos;;

a_group = group a by $0;
b = foreach a_group {
  a_distinct = distinct a.$0;
  generate group, a_distinct;
}
--store b into &apos;b&apos;;
c = filter b by SIZE(a_distinct) == 1;
store c into &apos;out&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We expect output to be:&lt;br/&gt;
1 1&lt;br/&gt;
The output is empty file.&lt;/p&gt;

&lt;p&gt;Uncomment &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;--store b into &apos;b&apos;;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; line and see the diffrence.&lt;br/&gt;
Yuo would get expected output.&lt;/p&gt;</description>
                <environment>&lt;p&gt;local mode&lt;/p&gt;</environment>
        <key id="12651130">PIG-3347</key>
            <summary>Store invocation brings side effect</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="serega_sheypak">Sergey</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Jun 2013 16:05:30 +0100</created>
                <updated>Tue, 15 Apr 2014 21:44:56 +0100</updated>
                            <resolved>Sat, 8 Feb 2014 18:28:37 +0000</resolved>
                                    <version>0.11</version>
                                    <fixVersion>0.12.1</fixVersion>
                                    <component>grunt</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13692379" author="daijy" created="Mon, 24 Jun 2013 22:04:46 +0100"  >&lt;p&gt;That&apos;s the incorrect PushUpFilter. Can be solved by disable PushUpFilter rule:&lt;br/&gt;
pig -t PushUpFilter -x local xxx.pig&lt;/p&gt;

&lt;p&gt;Look at the logical plan:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
c: (Name: LOStore Schema: group#28:bytearray,a_distinct#29:bag{#30:tuple(#31:bytearray)})
|
|---b: (Name: LOForEach Schema: group#28:bytearray,a_distinct#29:bag{#30:tuple(#31:bytearray)})
    |   |
    |   (Name: LOGenerate[&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;,&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;] Schema: group#28:bytearray,a_distinct#29:bag{#30:tuple(#31:bytearray)})ColumnPrune:InputUids=[29, 28]ColumnPrune:OutputUids=[29, 28]
    |   |   |
    |   |   group:(Name: Project Type: bytearray Uid: 28 Input: 0 Column: (*))
    |   |   |
    |   |   a_distinct:(Name: Project Type: bag Uid: 29 Input: 1 Column: (*))
    |   |
    |   |---(Name: LOInnerLoad[0] Schema: group#28:bytearray)
    |   |
    |   |---a_distinct: (Name: LODistinct Schema: #31:bytearray)
    |       |
    |       |---1-7: (Name: LOForEach Schema: #31:bytearray)
    |           |   |
    |           |   (Name: LOGenerate[&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;] Schema: #31:bytearray)
    |           |   |   |
    |           |   |   (Name: Project Type: bytearray Uid: 31 Input: 0 Column: (*))
    |           |   |
    |           |   |---(Name: LOInnerLoad[0] Schema: #31:bytearray)
    |           |
    |           |---a: (Name: LOInnerLoad[1] Schema: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
    |
    |---c: (Name: LOFilter Schema: group#28:bytearray,a#29:bag{#36:tuple()})
        |   |
        |   (Name: Equal Type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; Uid: 35)
        |   |
        |   |---(Name: UserFunc(org.apache.pig.builtin.BagSize) Type: &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; Uid: 32)
        |   |   |
        |   |   |---a:(Name: Project Type: bag Uid: 29 Input: 0 Column: 1)
        |   |
        |   |---(Name: Cast Type: &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; Uid: 33)
        |       |
        |       |---(Name: Constant Type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; Uid: 33)
        |
        |---a_group: (Name: LOCogroup Schema: group#28:bytearray,a#29:bag{#36:tuple()})
            |   |
            |   (Name: Project Type: bytearray Uid: 28 Input: 0 Column: 0)
            |
            |---a: (Name: LOLoad Schema: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)RequiredFields:&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Filter is pushed in front of foreach, which is wrong.&lt;/p&gt;</comment>
                            <comment id="13817325" author="knoguchi" created="Fri, 8 Nov 2013 15:03:03 +0000"  >&lt;p&gt;This is a bad bug producing incorrect outputs.  Taking out &quot;in local mode&quot; from summary, since this happens on mapreduce mode too.&lt;/p&gt;</comment>
                            <comment id="13817385" author="knoguchi" created="Fri, 8 Nov 2013 16:05:23 +0000"  >&lt;p&gt;I wish there was a wiki/document describing how UID should be assigned.  Even after going through &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3492&quot; title=&quot;ColumnPrune dropping used column due to LogicalRelationalOperator.fixDuplicateUids changes not propagating&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3492&quot;&gt;&lt;del&gt;PIG-3492&lt;/del&gt;&lt;/a&gt;, I&apos;m still lost on when exactly we should assign new UIDs.  &lt;br/&gt;
My current understanding(or guess) is, UID represents an uniqueness within a record.  &lt;br/&gt;
Just by looking at the UIDs from the two separate relations(bags), we can tell if the fields were altered or not.  (Although we cannot tell if the tuples were filtered or not.)&lt;/p&gt;

&lt;p&gt;FilterAboveForeach(PushUpFilter) is using this property to determine if FILTER can be moved before the foreach.  Bug here is, nested distinct is not assigning a new UID for the bag it creates so FilterAboveForeach mistakenly thinks that no fields were altered within the foreach and decides to move this filter upfront.&lt;br/&gt;
Following show the schema BEFORE calling PushUpFilter/FilterAboveForeach without and with Daniel&apos;s patch.  We can see that after applying the patch, relation &apos;c&apos; and &apos;a_group&apos; contain different UIDs for the bag.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;(without the patch)
|---c: (Name: LOFilter Schema: group#11:bytearray,a_distinct#12:bag{#13:tuple(#14:bytearray)})
    |---b: (Name: LOForEach Schema: group#11:bytearray,a_distinct#12:bag{#13:tuple(#14:bytearray)})
        |---a_group: (Name: LOCogroup Schema: group#11:bytearray,a#12:bag{#13:tuple()})
(with the patch)
|---c: (Name: LOFilter Schema: group#15:bytearray,a_distinct#20:bag{#19:tuple(#18:bytearray)})
    |---b: (Name: LOForEach Schema: group#15:bytearray,a_distinct#20:bag{#19:tuple(#18:bytearray)})
        |---a_group: (Name: LOCogroup Schema: group#15:bytearray,a#16:bag{#17:tuple()})
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I think the patch fixes the bug described on the jira nicely.  However, question remains for other nested operations. I believe the same bug can appear for nested LIMIT and nested FILTER.  For example,&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;a = load &apos;test.txt&apos;;    
a_group = group a by $0;
b = foreach a_group {
  a_limit = limit a.$0 5;
  generate group, a_limit;
}
c = filter b by SIZE(a_limit) == 5;
store c into &apos;out&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;a = load &apos;test3.txt&apos; as (a0, a1);     
a_group = group a by a0;
b = foreach a_group {
  newA = filter a by a1 == 2;
  generate group, newA;
}
c = filter b by SIZE(newA) == 5;
store c into &apos;out&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I confirmed these two examples also mistakenly push the filter before foreach and produce empty results.  Former case, nested LIMIT, is actually covered with the current patch since nested LIMIT uses LOLIMIT+LOForeach.  So the patch &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+  98      // If it is nested foreach or nested distinct, generate new uid
+  99      if (op instanceof LOForEach || op instanceof LODistinct) {
+ 100         needNewUid = true;
+ 101     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;takes care of nested limit although comment doesn&apos;t mention it.   Nested filter is not the case here and the bug still exists after the current patch.  Can we cover this case as well? &lt;/p&gt;</comment>
                            <comment id="13887114" author="dvryaboy" created="Thu, 30 Jan 2014 21:49:36 +0000"  >&lt;p&gt;Yikes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aniket486&quot; class=&quot;user-hover&quot; rel=&quot;aniket486&quot;&gt;Aniket Mokashi&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=julienledem&quot; class=&quot;user-hover&quot; rel=&quot;julienledem&quot;&gt;Julien Le Dem&lt;/a&gt; this seems like a critical bug to look at. Julien, you investigated this UID situation before, right?&lt;/p&gt;</comment>
                            <comment id="13887203" author="julienledem" created="Thu, 30 Jan 2014 22:44:17 +0000"  >&lt;p&gt;I thought that the field UIDs were used to track lineage across the plan.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aniket486&quot; class=&quot;user-hover&quot; rel=&quot;aniket486&quot;&gt;Aniket Mokashi&lt;/a&gt; correct me if I&apos;m wrong but it is used to determine which fields are reads for projection push down.&lt;br/&gt;
In the case of self join (directly or indirectly) we end up with duplicate ids in the same relation because the same field is derived to 2 different fields.&lt;br/&gt;
Otherwise I&apos;m as lost as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knoguchi&quot; class=&quot;user-hover&quot; rel=&quot;knoguchi&quot;&gt;Koji Noguchi&lt;/a&gt; regarding the actual mechanisms around the UID.&lt;br/&gt;
I tried to fix some of these in the past (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3020&quot; title=&quot;&amp;quot;Duplicate uid in schema&amp;quot; error when joining two relations derived from the same load statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3020&quot;&gt;&lt;del&gt;PIG-3020&lt;/del&gt;&lt;/a&gt;) but it appears they created more problems (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3492&quot; title=&quot;ColumnPrune dropping used column due to LogicalRelationalOperator.fixDuplicateUids changes not propagating&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3492&quot;&gt;&lt;del&gt;PIG-3492&lt;/del&gt;&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt; maybe you can enlighten us?&lt;/p&gt;</comment>
                            <comment id="13887236" author="daijy" created="Thu, 30 Jan 2014 23:22:04 +0000"  >&lt;p&gt;UID is to track column lineage so in logical optimizer, so that we can freely move operate up and down, ProjectionPatcher will reposition the column according to uid, even if the column get reordered. A new source of data should have a new UID, that&apos;s the case for nested LOForEach/LODistinct, since they are not directly derived from the previous operator, instead, it is a new field generated by the foreach.&lt;/p&gt;</comment>
                            <comment id="13888306" author="knoguchi" created="Fri, 31 Jan 2014 23:31:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;, I think your testcase in the patch succeeds even without your patch since it&apos;s missing FilterAboveForeach optimization.&lt;/p&gt;

&lt;p&gt;Uploading a test-only patch with this change.  Added 2 more test cases for nested limit and nested filter. &lt;/p&gt;

&lt;p&gt;Nested distinct and nested limit are fixed with your current patch.  Nested filter still fails.&lt;/p&gt;</comment>
                            <comment id="13889941" author="daijy" created="Mon, 3 Feb 2014 21:32:43 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knoguchi&quot; class=&quot;user-hover&quot; rel=&quot;knoguchi&quot;&gt;Koji Noguchi&lt;/a&gt;. I attached another patch include your test case, plus the fix for LOFilter/LOLimit, etc. Will run unit tests.&lt;/p&gt;</comment>
                            <comment id="13890903" author="daijy" created="Tue, 4 Feb 2014 17:45:47 +0000"  >&lt;p&gt;All unit tests pass with the patch.&lt;/p&gt;</comment>
                            <comment id="13890905" author="knoguchi" created="Tue, 4 Feb 2014 17:46:18 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;.  &lt;br/&gt;
Adding one more testcase that I believe should push the filter before foreach.&lt;br/&gt;
This one succeeds without the patch but fails with the patch.&lt;/p&gt;</comment>
                            <comment id="13890942" author="knoguchi" created="Tue, 4 Feb 2014 18:07:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;UID is to track column lineage so in logical optimizer, so that we can freely move operate up and down,  ProjectionPatcher will reposition the column according to uid&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think part of my confusion comes from these two.  UID is used for (1) tracking column lineage.  (2) UID is also used for ProjectionPatcher to reposition therefore requiring UID to be unique within each relation.&lt;/p&gt;

&lt;p&gt;Because of (2), we&apos;re seeing new uid being created whenever column is referenced multiple times.&lt;br/&gt;
Like &lt;br/&gt;
A = load &apos;a.txt&apos; as (a:int);&lt;br/&gt;
B = foreach A generate a as col1, a as col2; &lt;/p&gt;

&lt;p&gt;This would create a schema like &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;1-2: (Name: LOStore Schema: col1#1:int,col2#2:int)
...
    |---A: (Name: LOLoad Schema: a#1:int)RequiredFields:null
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So without traversing the lineage, I cannot connect &apos;col2&apos; to original &apos;a&apos;.&lt;br/&gt;
However, optimizer like PushUpFilter&amp;amp;FilterAboveForeach seems to be using just UID to determine the field usages...&lt;/p&gt;

&lt;p&gt;But this is outside of this jira.  I need to spend more time learning how the pig compiler works.&lt;/p&gt;</comment>
                            <comment id="13891003" author="daijy" created="Tue, 4 Feb 2014 18:53:21 +0000"  >&lt;p&gt;Attach another patch which also address Koji&apos;s new case.&lt;/p&gt;</comment>
                            <comment id="13891032" author="daijy" created="Tue, 4 Feb 2014 19:02:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knoguchi&quot; class=&quot;user-hover&quot; rel=&quot;knoguchi&quot;&gt;Koji Noguchi&lt;/a&gt;, in the &quot;B = foreach A generate a as col1, a as col2; &quot;, we will need to generate a new uid for col2 to avoid uid conflict (using a UDF IdentityColumn). The downside is this will break the lineage chain. The uid is mostly used in optimizer, there several holes when we use it for pure lineage. Optimizer rules is expected to live with these holes by skip optimize (eg, PushUpFilter is skip the foreach with UDF, which include IdentityColumn aiming to fix the uid conflict)&lt;/p&gt;</comment>
                            <comment id="13891127" author="knoguchi" created="Tue, 4 Feb 2014 20:06:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;we will need to generate a new uid for col2 to avoid uid conflict (using a UDF IdentityColumn)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Daniel, I think I understand how it is being used, but my confusion is: for the pure purpose of tracking column lineage, shouldn&apos;t the redundant uid inside the relation be allowed?  Isn&apos;t the requirement of no-conflict-uid coming from using the same uid for ProjectionPatcher which serves a different purpose than the lineage tracking?&lt;/p&gt;</comment>
                            <comment id="13891178" author="daijy" created="Tue, 4 Feb 2014 20:42:54 +0000"  >&lt;p&gt;It could but introduce a lot of complications. Currently only LOForEach/LOSplitOutput is dealing with dup-uid, otherwise it will sprawl to all operators and all optimizer rules.&lt;/p&gt;</comment>
                            <comment id="13895148" author="knoguchi" created="Fri, 7 Feb 2014 22:27:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;It could but introduce a lot of complications. Currently only LOForEach/LOSplitOutput is dealing with dup-uid, otherwise it will sprawl to all operators and all optimizer rules.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Daniel.  This helps me understand why I always get confused on this.  Maybe someday I can separate the two.&lt;/p&gt;

&lt;p&gt;As for your latest patch(&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3347&quot; title=&quot;Store invocation brings side effect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3347&quot;&gt;&lt;del&gt;PIG-3347&lt;/del&gt;&lt;/a&gt;-5.patch), it passed the unit tests(including mine) and e2e was fine also.  I&apos;m +1.&lt;/p&gt;</comment>
                            <comment id="13895668" author="daijy" created="Sat, 8 Feb 2014 18:28:37 +0000"  >&lt;p&gt;Patch committed to trunk and 0.12 branch. Thanks Koji for review and test!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12605999" name="PIG-3347-1.patch" size="4146" author="daijy" created="Tue, 1 Oct 2013 00:33:02 +0100"/>
                            <attachment id="12626420" name="PIG-3347-2-testonly.patch" size="5157" author="knoguchi" created="Fri, 31 Jan 2014 23:31:48 +0000"/>
                            <attachment id="12626740" name="PIG-3347-3.patch" size="7243" author="daijy" created="Mon, 3 Feb 2014 21:32:43 +0000"/>
                            <attachment id="12626909" name="PIG-3347-4-testonly.patch" size="6475" author="knoguchi" created="Tue, 4 Feb 2014 17:46:18 +0000"/>
                            <attachment id="12626934" name="PIG-3347-5.patch" size="9361" author="daijy" created="Tue, 4 Feb 2014 18:53:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Jun 2013 21:04:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331456</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzf0wn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331788</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>