<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:54:50 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1178/PIG-1178.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1178] LogicalPlan and Optimizer are too complex and hard to work with</title>
                <link>https://issues.apache.org/jira/browse/PIG-1178</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The current implementation of the logical plan and the logical optimizer in Pig has proven to not be easily extensible. Developer feedback has indicated that adding new rules to the optimizer is quite burdensome. In addition, the logical plan has been an area of numerous bugs, many of which have been difficult to fix. Developers also feel that the logical plan is difficult to understand and maintain. The root cause for these issues is that a number of design decisions that were made as part of the 0.2 rewrite of the front end have now proven to be sub-optimal. The heart of this proposal is to revisit a number of those proposals and rebuild the logical plan with a simpler design that will make it much easier to maintain the logical plan as well as extend the logical optimizer. &lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://wiki.apache.org/pig/PigLogicalPlanOptimizerRewrite&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/PigLogicalPlanOptimizerRewrite&lt;/a&gt; for full details.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12444757">PIG-1178</key>
            <summary>LogicalPlan and Optimizer are too complex and hard to work with</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="alangates">Alan Gates</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Jan 2010 23:48:08 +0000</created>
                <updated>Fri, 17 Dec 2010 22:43:16 +0000</updated>
                            <resolved>Wed, 8 Sep 2010 03:08:56 +0100</resolved>
                                                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                            <comments>
                            <comment id="12797695" author="yinghe" created="Thu, 7 Jan 2010 17:29:48 +0000"  >&lt;p&gt;initial drop for new logical plan framework&lt;/p&gt;</comment>
                            <comment id="12798112" author="alangates" created="Fri, 8 Jan 2010 18:16:09 +0000"  >&lt;p&gt;Comments on lp.patch:&lt;/p&gt;

&lt;p&gt;Is the OperatorPlan that is returned by Rule.Match distinct from the plan that the Transformer is operating on?  Will the nodes inside that plan be the same nodes (ie that same java objects) that are in the original plan passed to Rule.Match?  If the answer is yes and yes, then things will still work, but rule writers will have to be very careful when working with the plans.  The reason is that the plan returned by Rule.Match will not be the same plan as returned by Operator.getPlan() when called on the matched nodes.  And rules should use the original plan (the one returned by Operator.getPlan()) to navigate, as that is the real plan.  I don&apos;t see a better way to do this, so I&apos;m ok with it.  But we will have to document it very well in the javadocs for writing rules.&lt;/p&gt;

&lt;p&gt;In TestExperimentalRule I think we should add tests for two more patterns:&lt;br/&gt;
1. a join with two loads as predecessors&lt;br/&gt;
2. a spilt with two filters as successors&lt;/p&gt;

&lt;p&gt;Also, since I wrote some of this code, we need to have another committers review it before I check it in.&lt;/p&gt;</comment>
                            <comment id="12798273" author="yinghe" created="Sat, 9 Jan 2010 01:08:13 +0000"  >&lt;p&gt;yes, the operator plan that Rule.match returned has the same java objects as the original plan.  So as Alan said, it&apos;s a bit confusing. the plan returned by Rule.match is more similar to a view. &lt;/p&gt;

&lt;p&gt;the test cases for the two patterns will be added later.&lt;/p&gt;</comment>
                            <comment id="12798855" author="daijy" created="Mon, 11 Jan 2010 20:50:00 +0000"  >&lt;p&gt;Couple of questions:&lt;br/&gt;
1. Why do we need a pos arguments in PlanEdge? What&apos;s the use case for that?&lt;br/&gt;
2. Where will relational operator methods go? Such as getRequiredFields, getProjectionMap, getRelevantInputs, pruneColumns. Are we going to solve them using uid?&lt;br/&gt;
3. What is the functional division between Rule.match() and PatternMatchOperatorPlan.check()? Can we wrap both logic in one class (Rule) rather than two? Leave PatternMatchOperatorPlan simple seems to more clear to the rule writers.&lt;/p&gt;</comment>
                            <comment id="12798872" author="alangates" created="Mon, 11 Jan 2010 21:39:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;1. Why do we need a pos arguments in PlanEdge? What&apos;s the use case for that?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;One of the issues we saw frequently with the current implementation of OperatorPlan is that for nodes with multiple inputs (or outputs), if a transformation required disconnecting one of those inputs and connecting a new one, it often changed the order of the inputs (that is, what had been plan.getPredecessors(op).get(1) became plan.getPredecessors(op).get(1)).  The ability to connect a PlanEdge as a particular input or output is meant to address this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2. Where will relational operator methods go? Such as getRequiredFields, getProjectionMap, getRelevantInputs, pruneColumns. Are we going to solve them using uid?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;They should go away.  Patching up a plan after the transform will be the responsibility of the PlanTransformListeners.  The hypothesis is that schema plus uid will be sufficient for these to do their jobs.&lt;/p&gt;

&lt;p&gt;pruneColumns is a special case, but again I think that schema plus uid will be sufficient.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;3. What is the functional division between Rule.match() and PatternMatchOperatorPlan.check()? Can we wrap both logic in one class (Rule) rather than two? Leave PatternMatchOperatorPlan simple seems to more clear to the rule writers.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ll leave this one for Ying.&lt;/p&gt;</comment>
                            <comment id="12798880" author="yinghe" created="Mon, 11 Jan 2010 22:09:14 +0000"  >&lt;p&gt;the Rule.match() finds a potential match and delegate to PatternMatchOperatorPlan to further verify if it matches the pattern. During it&apos;s verification, the plan is filled with the operators from original plan.  The PetternMatchOperatorPlan is not visible to rule writers. Rule writers should only use OperatorPlan to operate on the matched sub-plans.&lt;/p&gt;</comment>
                            <comment id="12798943" author="daijy" created="Mon, 11 Jan 2010 23:58:30 +0000"  >&lt;p&gt;Thanks for clarification. +1 for the change.&lt;/p&gt;</comment>
                            <comment id="12798953" author="yinghe" created="Tue, 12 Jan 2010 00:19:21 +0000"  >&lt;p&gt;add test cases to TestExperimentalRule, and fix findbugs problems&lt;/p&gt;</comment>
                            <comment id="12798969" author="daijy" created="Tue, 12 Jan 2010 00:59:39 +0000"  >&lt;p&gt;Two minor observations:&lt;br/&gt;
1. PatternMatchOperatorPlan.parent does not  sound very meanful, shall we change the name to basePlan?&lt;br/&gt;
2. In Rule.match, is PatternMatchOperatorPlan only contains leave nodes but not edge information? If so, instead of saying &quot;A list of all matched sub-plans&quot;, can we put more details in the comments?&lt;/p&gt;</comment>
                            <comment id="12799071" author="hadoopqa" created="Tue, 12 Jan 2010 04:43:56 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12429960/PIG_1178.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12429960/PIG_1178.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 896951.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/170/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/170/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/170/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/170/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/170/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/170/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12799371" author="alangates" created="Tue, 12 Jan 2010 20:29:03 +0000"  >&lt;p&gt;This code didn&apos;t make any changes in the distinct bag area.  Also, these same failures have been seen on the load-store branch.  And running the test locally does not reproduce the failure.  So I suspect there is some intermittent bug with the bags rather than an issue with this code.  I&apos;m going to go ahead and check it in.&lt;/p&gt;</comment>
                            <comment id="12799372" author="alangates" created="Tue, 12 Jan 2010 20:33:58 +0000"  >&lt;p&gt;Checked in PIG_1178.patch&lt;/p&gt;</comment>
                            <comment id="12799444" author="alangates" created="Tue, 12 Jan 2010 22:52:44 +0000"  >&lt;p&gt;A patch to flesh out a few expressions in the prototype.  Also makes minor changes to Schema, LogicalRelationalOperator, and the walkers to address a few oversights.&lt;/p&gt;</comment>
                            <comment id="12799445" author="alangates" created="Tue, 12 Jan 2010 22:55:00 +0000"  >&lt;p&gt;Resetting patch status to get hudson to rerun tests with new expression.patch&lt;/p&gt;</comment>
                            <comment id="12799552" author="hadoopqa" created="Wed, 13 Jan 2010 03:15:21 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12430056/expressions.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12430056/expressions.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 898497.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/171/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/171/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/171/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/171/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/171/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/171/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12799859" author="yinghe" created="Wed, 13 Jan 2010 18:23:23 +0000"  >&lt;p&gt;a couple questions on expression operators:&lt;/p&gt;

&lt;p&gt;1. in ProjectExpression, is it better to change the object variable &quot;input&quot; from &quot;int&quot; to &quot;LogicalRelationalOperator&quot; to point to the operator that the project expression operates on directly?  And I don&apos;t understand why this operator needs alias  it references. But if we change input to operator object, the alias can be get from the operator.&lt;/p&gt;

&lt;p&gt;2. I don&apos;t know the purpose of ColumnExpression. Is it to capture operands?  It doesn&apos;t seem to have any special features. So I am not sure if it is necessary&lt;/p&gt;</comment>
                            <comment id="12800054" author="alangates" created="Thu, 14 Jan 2010 00:51:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;in ProjectExpression, is it better to change the object variable &quot;input&quot; from &quot;int&quot; to &quot;LogicalRelationalOperator&quot; to point to the operator that the project expression operates on directly?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I want to avoid references to the actual relational operators in the expressions because it makes patching up the plans after a transformation much easier.  If each project keeps a reference to the relational operator, then when the plan is transformed we have to go to every project and change its reference.  By keeping pointers only to which input number, we don&apos;t have to make any changes in the projects after a transformation in the plan.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And I don&apos;t understand why this operator needs alias it references. But if we change input to operator object, the alias can be get from the operator.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You&apos;re right, we shouldn&apos;t double store aliases here.  We should just use the uid and the project reference.  I&apos;ll make the change.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t know the purpose of ColumnExpression. Is it to capture operands? It doesn&apos;t seem to have any special features. So I am not sure if it is necessary&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s a super class for all expressions that represent a single value:  projection, constants, and eventually, tuple and map dereferences.  I think it&apos;s useful for understanding the categorization of expressions.  I&apos;m not sure it adds any functionality.&lt;/p&gt;</comment>
                            <comment id="12800056" author="alangates" created="Thu, 14 Jan 2010 00:59:48 +0000"  >&lt;p&gt;Second take on expressions.patch, with fixes for the findbugs warning and Ying&apos;s comment on not having aliases in projections.&lt;/p&gt;</comment>
                            <comment id="12800125" author="hadoopqa" created="Thu, 14 Jan 2010 06:03:21 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12430202/expressions.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12430202/expressions.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 898497.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/174/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/174/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/174/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/174/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/174/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/174/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12800289" author="yinghe" created="Thu, 14 Jan 2010 18:30:07 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12800316" author="alangates" created="Thu, 14 Jan 2010 19:30:28 +0000"  >&lt;p&gt;New patch that addresses the unit test failure and javadoc warnings.&lt;/p&gt;</comment>
                            <comment id="12800353" author="yinghe" created="Thu, 14 Jan 2010 20:46:50 +0000"  >&lt;p&gt;to answer Daniel&apos;s questions:&lt;/p&gt;

&lt;p&gt;. In Rule.match, is PatternMatchOperatorPlan only contains leave nodes but not edge information? If so, instead of saying &quot;A list of all matched sub-plans&quot;, can we put more details in the comments?&lt;/p&gt;

&lt;p&gt;The returned lists are plans. You can call getPredecessors() or getSuccessors() on any node in the plan. The implementation doesn&apos;t keep edge information, it calls the base plan for this information and return the operators that are in this sub-plan. So looking from outside, it is a plan, it&apos;s just read-only, and method to update the plan would throw an exception.&lt;/p&gt;</comment>
                            <comment id="12800434" author="hadoopqa" created="Thu, 14 Jan 2010 23:55:11 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12430285/expressions-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12430285/expressions-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 898497.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/175/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/175/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/175/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/175/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/175/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/175/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12800461" author="daijy" created="Fri, 15 Jan 2010 00:28:23 +0000"  >&lt;p&gt;LogicalSchema.size() return null, I assume it is not finished. Otherwise, +1.&lt;/p&gt;</comment>
                            <comment id="12800479" author="alangates" created="Fri, 15 Jan 2010 01:00:21 +0000"  >&lt;p&gt;I&apos;ve checked in the expressions-2.patch.  I&apos;ll flesh out LogicalSchema in a separate patch.&lt;/p&gt;
</comment>
                            <comment id="12802951" author="yinghe" created="Wed, 20 Jan 2010 19:33:53 +0000"  >&lt;p&gt;patch to add relational operator, optimization rules and logical plan migration visitor&lt;/p&gt;</comment>
                            <comment id="12802953" author="yinghe" created="Wed, 20 Jan 2010 19:35:46 +0000"  >&lt;p&gt;attached a new patch&lt;/p&gt;</comment>
                            <comment id="12803565" author="alangates" created="Fri, 22 Jan 2010 01:15:13 +0000"  >&lt;p&gt;Comments on lp.patch:&lt;/p&gt;

&lt;p&gt;1) In LOJoin.getSchema, these lines of code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Operator op : inputs) {
    LogicalSchema inputSchema = ((LogicalRelationalOperator)op).getSchema();
    &lt;span class=&quot;code-comment&quot;&gt;// the schema of one input is unknown, so the join schema is unknown, just &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (inputSchema == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        schemaSet = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; schema;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You are assuming that schema is null.  It would be better to explicitly set schema to null and then return it.&lt;/p&gt;

&lt;p&gt;2) In SplitFilter.transform you put it in a while loop, finding each &apos;and&apos; and splitting it into another filter.  But there&apos;s already an outer while loop (the one in the optimizer applying the rule over and over) that will do that.  One of the assertions in this design is that each rule should be as simple as possible.  This rule should just split one and, and let the next application of the rule find the next and and split it again.&lt;/p&gt;

&lt;p&gt;Same comment applies to MergeFilter.transform and to PushUpFilterTransformer.check and .transform.&lt;/p&gt;

&lt;p&gt;3) In MergeFilter.check:  IIRC implicit splits aren&apos;t inserted into the plan until the logical to physical transformation.  So it&apos;s possible that a filter actually has multiple successors.  So instead of:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (succeds != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; succeds.size()&amp;gt;0) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (succeds.get(0) &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; LOFilter) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;it should read&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (succeds != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; succeds.size() == 1) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (succeds.get(0) &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; LOFilter) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4) In MergeFilter.combineFilterCond:  The expressions have been written in such a way that they manage their own connections when they are created.  See for example, AndExpression.  In its constructor it takes it add itself to the expression plan and connects itself to its two operands.  So there no need to to do the addPlan.add and addPlan.connect calls.    &lt;/p&gt;

&lt;p&gt;5) In PushUpFilterTransformer.check, you need to check that the join type is inner.  Pushing past outer joins is much trickier, and need not be handled here.&lt;/p&gt;

&lt;p&gt;6) In PushUpFilterTransformer.check I don&apos;t understand what findCommon is doing.  In any case, it should not be paying attention to aliases.  It should be using the inputNums from the projection.  It should be checking that all projections in the filter are associated with the same inputNum.  If so, it is pushable to that inputNum.  If not, not.  In the same way transform should be using inputNum to find the right predecessor, not aliases.&lt;/p&gt;

&lt;p&gt;7) We need a fourth rule to handle swapping filters, so each one can be tried against the join.  Since this rule will always pass check (it would just be two filters in a row) we need a way to check that it doesn&apos;t run more than twice for a given pair of filters.  We can accomplish this by having it &apos;sign&apos; each filter in the node each time it is applied.  This is what the annotate call on Operator is for.  So each time the transform is applied, it would annotate both filters with info that it was applied, and to which filters.  Then part of check can be two check that this rule has been applied at most twice.&lt;/p&gt;</comment>
                            <comment id="12803597" author="hadoopqa" created="Fri, 22 Jan 2010 04:24:49 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12430918/lp.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12430918/lp.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 901900.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 11 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/170/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/170/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/170/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/170/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/170/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/170/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12803856" author="yinghe" created="Fri, 22 Jan 2010 20:38:10 +0000"  >&lt;p&gt;Alan,thanks for the review.&lt;/p&gt;

&lt;p&gt;for 6), the predecessor of LOFilter would be LOJoin,  so all projections would have input number  0.  My algorithm is to get field names from column number. The field names after join would be like A::id, B::id,   And findCommon() is to search for the longest prefix of these fields, to push filter to be after that alias. For example, if field names are A::id, and A::value, the filter is pushed after A.  if field names are D::A::id and D::A::value, the filter can be pushed after D, then pushed further to be after A.&lt;/p&gt;</comment>
                            <comment id="12828695" author="ankit.modi" created="Tue, 2 Feb 2010 18:16:35 +0000"  >&lt;p&gt;Attaching another patch with end-to-end functionality of load,filter,join,store and a few other expression operators.&lt;/p&gt;

&lt;p&gt;This patch is self sufficient and can be applied directly on SVN Trunk.&lt;/p&gt;</comment>
                            <comment id="12828886" author="ankit.modi" created="Wed, 3 Feb 2010 01:47:03 +0000"  >&lt;p&gt;I found a bug in the code so I&apos;ll be releasing another patch for the same.&lt;/p&gt;

&lt;p&gt;I&apos;ll keep this patch in the JIRA until I replace it with a new one so everyone can review it.&lt;/p&gt;</comment>
                            <comment id="12828895" author="ashutoshc" created="Wed, 3 Feb 2010 02:05:02 +0000"  >&lt;p&gt;Last patch was more then 5500 lines. Phew! To make it easier to read, I have few minor comments which you probably can sneak in your next upload:&lt;br/&gt;
a) There is commented code at various places. Deleting those lines will make patch smaller.&lt;br/&gt;
b) At various places Runtime Exceptions are thrown. Do we need a new Exception class something like ExperimentalOptimizerException so as to easily spot those exceptions? That will aid in debugging. Also error messages are pretty terse. More details can be put in messages, again to aid in debugging later on.&lt;br/&gt;
c) At couple of places, changes are made outside of experimental package. Will be useful to put comments there for why are those needed. &lt;/p&gt;</comment>
                            <comment id="12829759" author="alangates" created="Thu, 4 Feb 2010 20:22:12 +0000"  >&lt;p&gt;Comments that came out of a review of the twiki doc the pig team did:&lt;/p&gt;

&lt;p&gt;1) In OperatorPlan, the use of roots and leaves in the graph was considered confusing.  Some people view roots as sources and some as sinks.  It was recommended that we switch roots to sources and leaves to sinks to avoid confusion.&lt;/p&gt;

&lt;p&gt;2) The new OperatorPlan does not include mergeSharedPlan, which was used by multi-query functionality in the old plan.  After further investigation I found that merge is currently only used by multi-query for physical plans.  While ideally we would like to use this infrastructure for physical plans too, I feel it is reasonable to put off adding merge until at least the initial prototyping phase is done.  After briefling looking at it I see no reason why it should not work, though we may need a more precise way to decide when two nodes are the same and should be merged.&lt;/p&gt;

&lt;p&gt;3) A point was raised that perhaps the optimizer should reset the annotations on the nodes after a transform and all the attached listeners have been run.  With further thought, I don&apos;t think so, as there may be annotations we want to last across transforms.  For example, a rule that could match an infinite number of times may want to &quot;sign&quot; a node to note it&apos;s already been there so that it does not fire on the node again.  The easiest way to do this signing would be with the annotations.  However, I can see that there would be a desire to clear certain annotations so that each pass of the optimizer has a fresh state.  To accomplish this I was wondering if we should allow developers to add visitors that would be run after all the listeners run.  So PlanOptimizer would change to have a new method:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
addStatusResettingVisitor(Visitor v) {
    resetters.add(v);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and in the optimize loop&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (OperatorPlan m : matches) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (transformer.check(m)) {
        sawMatch = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        transformer.transform(m);
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(PlanTransformListener l: listeners) {
            l.transformed(plan, transformer.reportChanges());
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;would change to be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (OperatorPlan m : matches) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (transformer.check(m)) {
        sawMatch = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        transformer.transform(m);
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(PlanTransformListener l: listeners) {
            l.transformed(plan, transformer.reportChanges());
        }
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(Visitor v : resetters) {
            v.visit();
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;

&lt;p&gt;4) There is not clarity on how column pruning will work in the new optimizer.  Will it be represented by a rule?  If so, how, since the new optimizer does not allow matching on any operator just on specific operators?  Would it be better instead to have it use the Transformers but not the PlanOptimizer infrastructure, since it isn&apos;t clear that we would want the column pruning rule to be triggered more than once?  To answer these I think we should prototype the column pruning soon.  It was one of the hardest parts of the existing infrastructure.  We want to make sure it can be done well in this new approach before committing to the approach.&lt;/p&gt;

&lt;p&gt;5) The comment was made that while the examples in the document appear to show that the proposal will work for nested plans (that is, inner plans in foreach) they do not show that it will work for operators not yet nestable in foreach (e.g. group, foreach).  Since a stated goal of Pig Latin is to someday allow arbitrary nesting, we should validate that the proposal will support these additional operators to be nested in foreach.&lt;/p&gt;</comment>
                            <comment id="12830439" author="ankit.modi" created="Sat, 6 Feb 2010 03:01:27 +0000"  >&lt;p&gt;This is a new patch that can be applied to SVN Trunk.&lt;/p&gt;

&lt;p&gt;It includes ForEach, InnerLoad, Generate operators along with some LogicalExpression.&lt;br/&gt;
It also includes a new optimizer Rule for pushing FilterAboveForeach&lt;/p&gt;</comment>
                            <comment id="12831886" author="ashutoshc" created="Wed, 10 Feb 2010 06:24:16 +0000"  >&lt;p&gt; Was wondering  about different optimizations that we do on a complied MR plan. Not sure if its already been discussed or is in some doc. But essentially those optimizations are also done through visitors and would benefit greatly if there is a framework for them just as there is one for front-end. Is there any plan to also subsume those visitors (possibly by rewriting them as rule-transform pairs) in this new optimizer or will they be dealt with separately later on?  &lt;/p&gt;</comment>
                            <comment id="12832072" author="alangates" created="Wed, 10 Feb 2010 17:09:09 +0000"  >&lt;p&gt;Responses to Ashutosh&apos;s questions and comments:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;b) At various places Runtime Exceptions are thrown. Do we need a new Exception class something like ExperimentalOptimizerException so as to easily spot those exceptions? That will aid in debugging. Also error messages are pretty terse. More details can be put in messages, again to aid in debugging later on.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The error messages are sparse.  Part of moving this from prototype to production will be fleshing out those error messages, adding error codes, etc.  &lt;/p&gt;

&lt;p&gt;As for adding a new exception, I&apos;m not sure I see the value.  Hopefully RuntimeException is only used in appropriate places.  If it&apos;s being used where a different exception should be used, then we can change it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;c) At couple of places, changes are made outside of experimental package. Will be useful to put comments there for why are those needed. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changes were made to FuncSpec and FileSpec to give them equals functions so that comparisons can be done between two nodes that both contain a FuncSpec.  For example, we may want to determine if two load operators are the same.  Part of that will be determining if they use the same load function and load the same file.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Was wondering about different optimizations that we do on a complied MR plan. ... &lt;span class=&quot;error&quot;&gt;&amp;#91;E&amp;#93;&lt;/span&gt;ssentially those optimizations are also done through visitors and would benefit greatly if there is a framework for them just as there is one for front-end. Is there any plan to also subsume those visitors (possibly by rewriting them as rule-transform pairs) in this new optimizer or will they be dealt with separately later on?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Plan is too strong a word; there is a hope.  I agree that the MR optimizer is a mess, and it needs a framework.  The question is whether the same framework will suffice for both.  I hope that it will.  But to avoid taking on too much we have defined the scope of this current work to just be the logical optimizer.  After we have the logical optimizer in good shape we will need to address issues in the MR optimizer.  Hopefully this framework being developed will work with minimal refactoring and changes.  If not, a different framework will need to be designed for the MR case.&lt;/p&gt;
</comment>
                            <comment id="12832164" author="yinghe" created="Wed, 10 Feb 2010 20:04:32 +0000"  >&lt;p&gt;for the annotation resetting, I think it can be implemented as a PlanTransformListener. The listener has access to the plan and can reset every node, given the order is not important.&lt;/p&gt;</comment>
                            <comment id="12832168" author="alangates" created="Wed, 10 Feb 2010 20:13:55 +0000"  >&lt;p&gt;Resetting patch available so Hudson will rerun the tests.&lt;/p&gt;</comment>
                            <comment id="12832313" author="yinghe" created="Thu, 11 Feb 2010 00:08:31 +0000"  >&lt;p&gt;Here is my thoughts to use this framework to implement PruneColumns.&lt;/p&gt;

&lt;p&gt;1. Separate prune columns and prune map keys into 2 rules. Current implementation mixed them in one class. It&apos;s better to separate them to make each rule simpler. &lt;/p&gt;

&lt;p&gt;2. The prune column rule can be implemented by creating a new visitor. This visitor is called from transform(), and it visits every LogicalRelationalOperator by reverse dependency order. Each visit(LogicalRelationalOperator) calculates the required output uids  by combining the input uids from it successors. If a node is the sink of the plan, the output uids are retrieved from its schema. The input uids are calculated from its output uids by looking into the expression plan(s) of this operator.  If an output uid is derived from other uids, the source uids should be put into input uids. For example, a+b is from a &amp;amp; b. The input uids should keep the uid of a &amp;amp; b.   Each operator should consider its logical meanings when calculating input uids from output uids. For example, for LOCross, the input uids should contain at least one field from each input. &lt;/p&gt;

&lt;p&gt;The input uids and output uids can be added into the operator as annotations.&lt;/p&gt;

&lt;p&gt;3. After step 2, use another visitor to go over the plan again by dependency order to prune the columns.  This can be done by reading out the input and output uids for each node.&lt;/p&gt;

&lt;p&gt;4. I think it&apos;s ok to implement prune column and prune map key as regular rule. They just need to overwrite the match().&lt;/p&gt;

&lt;p&gt;public List&amp;lt;OperatorPlan&amp;gt; match(OperatorPlan plan) &lt;/p&gt;
{
    List&amp;lt;OperatorPlan&amp;gt; ll = new ArrayList&amp;lt;OperatorPlan();
    ll.add(plan);
    return ll;
}

&lt;p&gt;This method tells optimizer that only one match is find, which is the plan itself.&lt;/p&gt;

&lt;p&gt;5. For Transformer class, I suggest to get rid of check() and change void transform() into  boolean transform().   If transform() returns false, it means no transformation is made. If it returns true, transformation is made. The reason is that for some rules, it is not easy to know if a change is going to be made, such as PruneColumn rule.   If we have both check() and transform(), lots of logic would be duplicated in these two methods.&lt;/p&gt;</comment>
                            <comment id="12832328" author="hadoopqa" created="Thu, 11 Feb 2010 00:46:39 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12435054/pig_1178.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12435054/pig_1178.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 908324.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 34 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 489 release audit warnings (more than the trunk&apos;s current 487 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/199/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12832702" author="alangates" created="Thu, 11 Feb 2010 22:15:35 +0000"  >&lt;p&gt;Checked in Ankit&apos;s pig_1178.patch.&lt;/p&gt;</comment>
                            <comment id="12836835" author="ankit.modi" created="Mon, 22 Feb 2010 19:11:30 +0000"  >&lt;p&gt;Another patch with a few more LogicalExpressions and some more unit tests using the foreach operator&lt;/p&gt;

&lt;p&gt;It also has a rudimentry planPrinter to print new logical plan.&lt;/p&gt;</comment>
                            <comment id="12837062" author="hadoopqa" created="Tue, 23 Feb 2010 03:41:54 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12436606/pig_1178_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12436606/pig_1178_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 912064.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 25 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/211/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/211/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/211/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/211/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/211/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/211/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12837066" author="ankit.modi" created="Tue, 23 Feb 2010 03:49:58 +0000"  >&lt;p&gt;Resubmitting patch again due to core test failures&lt;/p&gt;</comment>
                            <comment id="12837196" author="hadoopqa" created="Tue, 23 Feb 2010 11:20:40 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12436606/pig_1178_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12436606/pig_1178_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 915079.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 25 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/216/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/216/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/216/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/216/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/216/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/216/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12837954" author="ankit.modi" created="Wed, 24 Feb 2010 19:02:46 +0000"  >&lt;p&gt;the core tests are failing due to some issue with hudson or the framework.&lt;/p&gt;

&lt;p&gt;I ran the core tests again yesterday night and they passed. &lt;/p&gt;</comment>
                            <comment id="12842044" author="alangates" created="Fri, 5 Mar 2010 21:56:35 +0000"  >&lt;p&gt;Checked in pig_1178_2.patch&lt;/p&gt;</comment>
                            <comment id="12844843" author="hadoopqa" created="Sat, 13 Mar 2010 10:04:20 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12438661/pig_1178_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12438661/pig_1178_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 922169.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 89 javac compiler warnings (more than the trunk&apos;s current 87 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 3 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/248/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/248/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/248/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/248/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/248/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/248/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12844965" author="daijy" created="Sat, 13 Mar 2010 20:57:45 +0000"  >&lt;p&gt;Address findbugs warnings.&lt;/p&gt;</comment>
                            <comment id="12845023" author="hadoopqa" created="Sun, 14 Mar 2010 04:36:50 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12438710/pig_1178_3.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12438710/pig_1178_3.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 922664.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/250/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/250/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/250/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/250/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/250/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/250/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12845037" author="daijy" created="Sun, 14 Mar 2010 07:04:52 +0000"  >&lt;p&gt;Address additional findbugs warnings&lt;/p&gt;</comment>
                            <comment id="12845083" author="hadoopqa" created="Sun, 14 Mar 2010 14:01:01 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12438738/pig_1178_3.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12438738/pig_1178_3.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 922664.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/251/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/251/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/251/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/251/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/251/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/251/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12845173" author="daijy" created="Mon, 15 Mar 2010 03:29:01 +0000"  >&lt;p&gt;pig_1178_3.3.patch committed. Manual unit pass.&lt;/p&gt;</comment>
                            <comment id="12855480" author="daijy" created="Fri, 9 Apr 2010 18:27:35 +0100"  >&lt;p&gt;pig_1178_3.4.patch include all logical relational operators.&lt;/p&gt;</comment>
                            <comment id="12855486" author="hadoopqa" created="Fri, 9 Apr 2010 18:36:49 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12441315/pig_1178_3.4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12441315/pig_1178_3.4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 932472.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/281/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/281/testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/281/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/281/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12891438" author="daijy" created="Fri, 23 Jul 2010 01:57:19 +0100"  >&lt;p&gt;Attach &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-4.patch, include change of the following area:&lt;br/&gt;
1. Add all the relational operators&lt;br/&gt;
2. Add foreach nested plans&lt;br/&gt;
3. Add field schema to expression operators&lt;br/&gt;
4. Remove UidStamp, instead, uid will be generated and cached first time we get fieldschema&lt;br/&gt;
5. Fix column pruner and all other new logical plan test cases&lt;br/&gt;
6. Add TypeCastInserter&lt;/p&gt;

&lt;p&gt;Still polishing and refactory the code.&lt;/p&gt;</comment>
                            <comment id="12892658" author="hadoopqa" created="Tue, 27 Jul 2010 07:30:52 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12450250/PIG-1178-4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12450250/PIG-1178-4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 979362.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 48 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 446 release audit warnings (more than the trunk&apos;s current 398 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    -1 contrib tests.  The patch failed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/355/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12892960" author="alangates" created="Tue, 27 Jul 2010 23:24:41 +0100"  >&lt;p&gt;12K lines of code, wow!&lt;/p&gt;

&lt;p&gt;In ProjectExpression, what does the new attachedRelationalOp do?  javadoc comments on that in the constructor would be good.&lt;/p&gt;

&lt;p&gt;Is the purpose of this patch to also make this the default optimizer or leave it in experimental mode?  If it is to make it the default, I think we should move it from the experimental package, though probably in a separate patch.  If it isn&apos;t, any thoughts on when it would be ready to become the default optimizer?&lt;/p&gt;
</comment>
                            <comment id="12895165" author="daijy" created="Wed, 4 Aug 2010 08:22:08 +0100"  >&lt;p&gt;Did some restructure and bug fixing. Also move package from experimental to newplan.&lt;/p&gt;</comment>
                            <comment id="12895334" author="daijy" created="Wed, 4 Aug 2010 18:48:06 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-5.patch committed.&lt;/p&gt;</comment>
                            <comment id="12895339" author="daijy" created="Wed, 4 Aug 2010 19:03:07 +0100"  >&lt;p&gt;Still working on a couple of areas:&lt;br/&gt;
1. Exception handling&lt;br/&gt;
2. Schema merging (LOLoad / LOUnion)&lt;br/&gt;
3. One issue in map key pruning, which will prune the map even the map itself is referred in the script&lt;br/&gt;
4. One issue in Foreach statement inside nested foreach plan&lt;br/&gt;
5. Migrate all old rules, add some new rules (most patches are already there in separate Jiras)&lt;br/&gt;
6. Swap the flag to use new logical optimizer by default, testing/bug fixing&lt;/p&gt;</comment>
                            <comment id="12895463" author="hadoopqa" created="Wed, 4 Aug 2010 23:56:23 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12451203/PIG-1178-5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12451203/PIG-1178-5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 982423.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 91 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/375/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/375/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12895568" author="daijy" created="Thu, 5 Aug 2010 07:50:39 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-6.patch is mostly for error handling&lt;/p&gt;</comment>
                            <comment id="12895771" author="daijy" created="Thu, 5 Aug 2010 20:40:23 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-6.patch committed.&lt;/p&gt;</comment>
                            <comment id="12901540" author="daijy" created="Mon, 23 Aug 2010 20:05:52 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-7.patch switch the flag to use new logical plan by default. It fix most unit test except:&lt;br/&gt;
1. TestMultiQuery.testMultiQueryJiraPig1169, it depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1514&quot; title=&quot;Migrate logical optimization rule: OpLimitOptimizer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1514&quot;&gt;&lt;del&gt;PIG-1514&lt;/del&gt;&lt;/a&gt;, will be fixed automatically once &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1514&quot; title=&quot;Migrate logical optimization rule: OpLimitOptimizer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1514&quot;&gt;&lt;del&gt;PIG-1514&lt;/del&gt;&lt;/a&gt; check in&lt;br/&gt;
2. TestPruneColumn.testMapKey3&lt;/p&gt;

&lt;p&gt;Both test cases are temporarily commented out. All other unit tests pass.&lt;/p&gt;

&lt;p&gt;Here is test-patch result:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 36 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;</comment>
                            <comment id="12901543" author="daijy" created="Mon, 23 Aug 2010 20:12:09 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-7.patch committed.&lt;/p&gt;</comment>
                            <comment id="12903758" author="daijy" created="Sat, 28 Aug 2010 02:41:36 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-8.patch fix TestPruneColumn.testMapKey3&lt;/p&gt;</comment>
                            <comment id="12903803" author="daijy" created="Sat, 28 Aug 2010 09:23:06 +0100"  >&lt;p&gt;test-patch result for PIG-11780-8:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 overall.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 3 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;Patch committed.&lt;/p&gt;</comment>
                            <comment id="12904482" author="daijy" created="Tue, 31 Aug 2010 02:23:09 +0100"  >&lt;p&gt;Update help message.&lt;/p&gt;</comment>
                            <comment id="12904485" author="daijy" created="Tue, 31 Aug 2010 02:26:14 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-9.patch committed.&lt;/p&gt;</comment>
                            <comment id="12906590" author="daijy" created="Mon, 6 Sep 2010 22:11:51 +0100"  >&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-10.patch address foreach user defined schema.&lt;/p&gt;

&lt;p&gt;test-patch result:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 3 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;All test pass.&lt;/p&gt;</comment>
                            <comment id="12906592" author="daijy" created="Mon, 6 Sep 2010 22:16:53 +0100"  >&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-10.patch committed.&lt;/p&gt;</comment>
                            <comment id="12907057" author="daijy" created="Wed, 8 Sep 2010 02:59:39 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-11.patch change the layout of explain, error code and comments, etc. No real functional changes.&lt;/p&gt;

&lt;p&gt;test-patch result:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 11 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;</comment>
                            <comment id="12907061" author="daijy" created="Wed, 8 Sep 2010 03:07:42 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1178&quot; title=&quot;LogicalPlan and Optimizer are too complex and hard to work with&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1178&quot;&gt;&lt;del&gt;PIG-1178&lt;/del&gt;&lt;/a&gt;-11.patch committed to both trunk and 0.8 branch. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12459922">PIG-1319</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12453966" name="PIG-1178-10.patch" size="23808" author="daijy" created="Mon, 6 Sep 2010 22:11:51 +0100"/>
                            <attachment id="12454064" name="PIG-1178-11.patch" size="45136" author="daijy" created="Wed, 8 Sep 2010 02:59:39 +0100"/>
                            <attachment id="12450250" name="PIG-1178-4.patch" size="534648" author="daijy" created="Fri, 23 Jul 2010 01:52:47 +0100"/>
                            <attachment id="12451203" name="PIG-1178-5.patch" size="1786001" author="daijy" created="Wed, 4 Aug 2010 08:21:03 +0100"/>
                            <attachment id="12451355" name="PIG-1178-6.patch" size="294007" author="daijy" created="Thu, 5 Aug 2010 19:46:29 +0100"/>
                            <attachment id="12452845" name="PIG-1178-7.patch" size="245003" author="daijy" created="Mon, 23 Aug 2010 20:05:51 +0100"/>
                            <attachment id="12453330" name="PIG-1178-8.patch" size="8143" author="daijy" created="Sat, 28 Aug 2010 02:41:36 +0100"/>
                            <attachment id="12453488" name="PIG-1178-9.patch" size="2512" author="daijy" created="Tue, 31 Aug 2010 02:23:09 +0100"/>
                            <attachment id="12429960" name="PIG_1178.patch" size="113091" author="yinghe" created="Tue, 12 Jan 2010 00:19:21 +0000"/>
                            <attachment id="12430285" name="expressions-2.patch" size="37850" author="alangates" created="Thu, 14 Jan 2010 19:30:28 +0000"/>
                            <attachment id="12430202" name="expressions.patch" size="37228" author="alangates" created="Thu, 14 Jan 2010 00:59:48 +0000"/>
                            <attachment id="12430918" name="lp.patch" size="85777" author="yinghe" created="Wed, 20 Jan 2010 19:33:53 +0000"/>
                            <attachment id="12429657" name="lp.patch" size="110527" author="yinghe" created="Thu, 7 Jan 2010 17:29:48 +0000"/>
                            <attachment id="12435054" name="pig_1178.patch" size="445915" author="ankit.modi" created="Sat, 6 Feb 2010 03:01:27 +0000"/>
                            <attachment id="12434549" name="pig_1178.patch" size="311022" author="ankit.modi" created="Tue, 2 Feb 2010 18:16:35 +0000"/>
                            <attachment id="12436606" name="pig_1178_2.patch" size="184632" author="ankit.modi" created="Mon, 22 Feb 2010 19:11:30 +0000"/>
                            <attachment id="12438710" name="pig_1178_3.2.patch" size="350197" author="daijy" created="Sat, 13 Mar 2010 21:02:32 +0000"/>
                            <attachment id="12438738" name="pig_1178_3.3.patch" size="350204" author="daijy" created="Sun, 14 Mar 2010 07:04:51 +0000"/>
                            <attachment id="12441317" name="pig_1178_3.4.patch" size="88399" author="daijy" created="Fri, 9 Apr 2010 18:34:23 +0100"/>
                            <attachment id="12438661" name="pig_1178_3.patch" size="350203" author="ankit.modi" created="Sat, 13 Mar 2010 00:54:32 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12469130">PIG-1496</subtask>
                            <subtask id="12469131">PIG-1497</subtask>
                            <subtask id="12469972">PIG-1514</subtask>
                            <subtask id="12469973">PIG-1515</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 7 Jan 2010 17:29:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164695</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyanfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96109</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>