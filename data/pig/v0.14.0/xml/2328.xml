<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:10:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2328/PIG-2328.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2328] Add builtin UDFs for building and using bloom filters</title>
                <link>https://issues.apache.org/jira/browse/PIG-2328</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Bloom filters are a common way to do select a limited set of records before moving data for a join or other heavy weight operation.  Pig should add UDFs to support building and using bloom filters.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12527808">PIG-2328</key>
            <summary>Add builtin UDFs for building and using bloom filters</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="alangates">Alan Gates</assignee>
                                    <reporter username="alangates">Alan Gates</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Oct 2011 20:25:59 +0100</created>
                <updated>Tue, 23 Oct 2012 17:25:10 +0100</updated>
                            <resolved>Thu, 3 Nov 2011 21:44:51 +0000</resolved>
                                                    <fixVersion>0.10.0</fixVersion>
                    <fixVersion>0.11</fixVersion>
                                    <component>internal-udfs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13130904" author="alangates" created="Wed, 19 Oct 2011 20:30:01 +0100"  >&lt;p&gt;This patch includes two new UDFs, BuildBloom and Bloom.  BuildBloom will build a bloom filter.  It is intended to be used in a group all script where all records passed to it will be added to the filter.   The results are stored to the output of the group all Pig job.  Bloom can then be used to apply that filter to inputs in subsequent queries, such as a join.  See the tests in the patch for examples.&lt;/p&gt;</comment>
                            <comment id="13131164" author="dvryaboy" created="Thu, 20 Oct 2011 00:41:02 +0100"  >&lt;p&gt;Right on.&lt;/p&gt;

&lt;p&gt;Quick questions from reading the patch:&lt;/p&gt;

&lt;p&gt;Correct me if I am wrong, but this doesn&apos;t work if you use 2 different bloom filters in a single task.&lt;/p&gt;

&lt;p&gt;Why &quot;contains&quot; test for jenkins and murmur?&lt;/p&gt;

&lt;p&gt;In addition to defining a bloom filter by array size and number of functions, you can construct bloom filters by expected number of elements and desired accuracy (math&apos;s on wikipedia, or you can check my Bloom::Faster perl module &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;). That&apos;s probably more generally useful, since people don&apos;t necessarily know how to choose the right number of functions.&lt;/p&gt;

&lt;p&gt;Why does the Bloom function only work on files? It&apos;d be pretty simple to do Bloom( (bytearray) mybloom.$0, item) where mybloom is the Bloom relation.&lt;/p&gt;

</comment>
                            <comment id="13132212" author="alangates" created="Fri, 21 Oct 2011 00:40:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;Correct me if I am wrong, but this doesn&apos;t work if you use 2 different bloom filters in a single task.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Glad you caught that.  I&apos;d meant to fix it and forgot.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why &quot;contains&quot; test for jenkins and murmur?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The Hadoop names for these are Hash.JENKINS_HASH and Hash.MURMUR_HASH.  I assumed people might copy some or all of those strings from the Hadoop docs and use them, and I wanted it to work whether they used &quot;jenkins&quot; &quot;jenkins_hash&quot; or &quot;Hash.JENKINS_HASH&quot;&lt;/p&gt;

&lt;p&gt;On the definition by number of elements and desired accuracy I agree that would be nice.  I may put that in a follow on patch though, we&apos;ll see if I can finish it in the next few days.  &lt;/p&gt;

&lt;p&gt;Same on operating directly on a relation.  I&apos;ll see if I can get it working soon, if not I may do it in a follow on patch.&lt;/p&gt;</comment>
                            <comment id="13134360" author="alangates" created="Mon, 24 Oct 2011 20:01:14 +0100"  >&lt;p&gt;A new version of the patch that fixes the single bloom filter per query issue and makes it so the user can specify desired false positive rate and estimate number of elements instead of number of bits and hash functions.&lt;/p&gt;</comment>
                            <comment id="13136914" author="dvryaboy" created="Thu, 27 Oct 2011 09:47:20 +0100"  >&lt;p&gt;This looks great. My only remaining issue is that you are getting around the multiple bloom filters issue by grabbing the filename (dirname, really) of the bloom filter we are loading, while it may be the same. For example, it&apos;s not unreasonable to load &quot;mydataset/sellers/bloom&quot; and &quot;/mydataset/buyers/bloom&quot; . Perhaps a simple replacement of &quot;/&quot; with &quot;_&quot; would be better? &lt;/p&gt;</comment>
                            <comment id="13139536" author="daijy" created="Sun, 30 Oct 2011 04:34:37 +0000"  >&lt;p&gt;Here are some comments:&lt;br/&gt;
1. javadoc sample is wrong:&lt;br/&gt;
define bb BuildBloom(100, 3, Hash.JENKINS_HASH); =&amp;gt; define bb BuildBloom(&apos;jenkins&apos;, &apos;100&apos;, &apos;0.1&apos;);&lt;br/&gt;
C = filter B by Bloom(mybloom, z); =&amp;gt;C = filter B by Bloom(z);&lt;br/&gt;
2. It should be trivial to convert it into scalar, so that we get out of the business to figure out the symbol link name:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
define bb BuildBloom(&apos;jenkins&apos;, &apos;10&apos;, &apos;0.1&apos;);
small = load &apos;S&apos; as (x, y, z);
grpd = group small all;
fltrd = foreach grpd generate bb(small.x) as a0;

large = load &apos;L&apos; as (a, b, c);
flarge = filter large by Bloom(fltrd.a0, a);
joined = join small by x, flarge by a;
store joined into &apos;results&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Wanna me to upload a patch?&lt;/p&gt;</comment>
                            <comment id="13142738" author="alangates" created="Thu, 3 Nov 2011 01:01:25 +0000"  >&lt;p&gt;Uploaded new patch that follows Dmitriy&apos;s suggestion of replacing / with _ for file name uniqueness and fixes the javadoc issues Daniel brought up.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It should be trivial to convert it into scalar, so that we get out of the business to figure out the symbol link name:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;While I agree it would be great to have the scalar option, I want to keep the storing it to a file option as well.  One use case I envision is people building a bloom filter once (say against a small lookup table) and using it repeatedly.&lt;/p&gt;

&lt;p&gt;I&apos;m going to commit this patch as is.  I&apos;ll file a separate JIRA to add using the scalar in Bloom.  Daniel, if you want to submit a patch for that, go ahead.  It will be a while before I get to it.&lt;/p&gt;

&lt;p&gt;Also, if no one objects I&apos;d like to port this to 0.10.  It doesn&apos;t touch any existing code so it shouldn&apos;t break anything that already works.&lt;/p&gt;</comment>
                            <comment id="13142747" author="alangates" created="Thu, 3 Nov 2011 01:08:22 +0000"  >&lt;p&gt;Checked into trunk.  I&apos;ll hold the JIRA open until I get feedback on checking it into 0.10.&lt;/p&gt;</comment>
                            <comment id="13142753" author="daijy" created="Thu, 3 Nov 2011 01:13:35 +0000"  >&lt;p&gt;+1 for 0.10.&lt;/p&gt;</comment>
                            <comment id="13142755" author="alangates" created="Thu, 3 Nov 2011 01:13:55 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2348&quot; title=&quot;Bloom should be able to take a relation or a file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2348&quot;&gt;PIG-2348&lt;/a&gt; to track follow on feature of allowing a relation in addition to a file.&lt;/p&gt;</comment>
                            <comment id="13142760" author="dvryaboy" created="Thu, 3 Nov 2011 01:21:14 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13143548" author="alangates" created="Thu, 3 Nov 2011 21:44:52 +0000"  >&lt;p&gt;Checked into 0.10 branch as well.&lt;/p&gt;</comment>
                            <comment id="13481948" author="olgan" created="Tue, 23 Oct 2012 00:53:58 +0100"  >&lt;p&gt;Looks like the change made it into 10 but what about documentation? I could not find it ib builtins but just want to make sure it was not put in some other place?&lt;/p&gt;</comment>
                            <comment id="13482010" author="daijy" created="Tue, 23 Oct 2012 02:12:16 +0100"  >&lt;p&gt;They are piggybank UDFs which we have javadoc but no forest doc.&lt;/p&gt;</comment>
                            <comment id="13482451" author="olgan" created="Tue, 23 Oct 2012 17:25:10 +0100"  >&lt;p&gt;This one are in builtins at least according to the patch, so they need to be in docs. I will create a doc patch, I just was not sure if it was in a different place&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12529987">PIG-2348</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12500515" name="PIG-bloom-2.patch" size="32983" author="alangates" created="Mon, 24 Oct 2011 20:01:13 +0100"/>
                            <attachment id="12502081" name="PIG-bloom-3.patch" size="32551" author="alangates" created="Thu, 3 Nov 2011 00:57:20 +0000"/>
                            <attachment id="12499740" name="PIG-bloom.patch" size="26576" author="alangates" created="Wed, 19 Oct 2011 20:27:19 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Oct 2011 23:41:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>92049</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy3ty7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>56176</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Bloom filters are a common way to select a limited set of records before moving data for a join or other heavy weight operation.  For example, if one wanted to join a very large data set L with a smaller set S, and it was known that the number of keys in L that will match with S is small, building a bloom filter on S and then applying it to L before the join can greatly reduce the number of records from L that have to be moved from the map to the reduce, thus speeding the join.&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
define bb BuildBloom(&amp;#39;128&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;jenkins&amp;#39;);&lt;br/&gt;
small = load &amp;#39;S&amp;#39; as (x, y, z);&lt;br/&gt;
grpd  = group small all;&lt;br/&gt;
fltrd  = foreach grpd generate bb(small.x);&lt;br/&gt;
store fltrd in &amp;#39;mybloom&amp;#39;;&lt;br/&gt;
exec;&lt;br/&gt;
define bloom Bloom(&amp;#39;mybloom&amp;#39;);&lt;br/&gt;
large = load &amp;#39;L&amp;#39; as (a, b, c);&lt;br/&gt;
flarge = filter large by bloom(L.a);&lt;br/&gt;
joined = join small by x, flarge by a;&lt;br/&gt;
store joined into &amp;#39;results&amp;#39;;&lt;br/&gt;
{code}&lt;br/&gt;
&lt;br/&gt;
When constructing BuildBloom, the three arguments passed are the number of bits in the bloom filter, the number of hash functions used in constructing the bloom filter, and the type of hash function to use.  Valid values for the hash functions are &amp;#39;jenkins&amp;#39; and &amp;#39;murmur&amp;#39;.  See &lt;a href=&quot;http://en.wikipedia.org/wiki/Bloom_filter&quot;&gt;http://en.wikipedia.org/wiki/Bloom_filter&lt;/a&gt; for a discussion of how to select the number of bits and the number of hash functions.&lt;br/&gt;
&lt;br/&gt;
This uses Hadoop&amp;#39;s bloom filters (org.apache.hadoop.util.bloom.BloomFilter) internally.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>