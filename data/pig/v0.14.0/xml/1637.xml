<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:10:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1637/PIG-1637.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1637] Combiner not use because optimizor inserts a foreach between group and algebric function</title>
                <link>https://issues.apache.org/jira/browse/PIG-1637</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The following script does not use combiner after new optimization change.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load &apos;:INPATH:/pigmix/page_views&apos; using org.apache.pig.test.udf.storefunc.PigPerformanceLoader()
    as (user, action, timespent, query_term, ip_addr, timestamp, estimated_revenue, page_info, page_links);
B = foreach A generate user, (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)timespent as timespent, (&lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;)estimated_revenue as estimated_revenue;
C = group B all; 
D = foreach C generate SUM(B.timespent), AVG(B.estimated_revenue);
store D into &apos;:OUTPATH:&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is because after group, optimizer detect group key is not used afterward, it add a foreach statement after C. This is how it looks like after optimization:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load &apos;:INPATH:/pigmix/page_views&apos; using org.apache.pig.test.udf.storefunc.PigPerformanceLoader()
    as (user, action, timespent, query_term, ip_addr, timestamp, estimated_revenue, page_info, page_links);
B = foreach A generate user, (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)timespent as timespent, (&lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;)estimated_revenue as estimated_revenue;
C = group B all; 
C1 = foreach C generate B;
D = foreach C1 generate SUM(B.timespent), AVG(B.estimated_revenue);
store D into &apos;:OUTPATH:&apos;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That cancel the combiner optimization for D. &lt;/p&gt;

&lt;p&gt;The way to solve the issue is to merge the C1 we inserted and D. Currently, we do not merge these two foreach. The reason is that one output of the first foreach (B) is referred twice in D, and currently rule assume after merge, we need to calculate B twice in D. Actually, C1 is only doing projection, no calculation of B. Merging C1 and D will not result calculating B twice. So C1 and D should be merged.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12474739">PIG-1637</key>
            <summary>Combiner not use because optimizor inserts a foreach between group and algebric function</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="daijy">Daniel Dai</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Sep 2010 19:50:54 +0100</created>
                <updated>Fri, 17 Dec 2010 22:45:54 +0000</updated>
                            <resolved>Wed, 29 Sep 2010 06:28:54 +0100</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12915867" author="daijy" created="Tue, 28 Sep 2010 19:23:54 +0100"  >&lt;p&gt;A bug caught by Xuefu. Reattach the patch.&lt;/p&gt;</comment>
                            <comment id="12915880" author="daijy" created="Tue, 28 Sep 2010 20:00:22 +0100"  >&lt;p&gt;test-patch result for &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1637&quot; title=&quot;Combiner not use because optimizor inserts a foreach between group and algebric function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1637&quot;&gt;&lt;del&gt;PIG-1637&lt;/del&gt;&lt;/a&gt;-2.patch:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; +1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 3 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;</comment>
                            <comment id="12915943" author="xuefuz" created="Tue, 28 Sep 2010 23:25:12 +0100"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Patch looks good, except that we don&apos;t have to require that all output expressions in the first foreach contain only simple projection. As long as the output expression in the first foreach that is referenced multiple times in the second foreach contains only simple projection, the merge can proceed. Doing this, the following two loops may be better merged to one.&lt;/p&gt;

&lt;p&gt;@@ -93,14 +93,17 @@&lt;br/&gt;
             // Otherwise, we may do expression calculation more than once, defeat the benefit of this&lt;br/&gt;
             // optimization&lt;br/&gt;
             Set&amp;lt;Integer&amp;gt; inputs = new HashSet&amp;lt;Integer&amp;gt;();&lt;br/&gt;
+            boolean duplicateInputs = false;&lt;br/&gt;
             for (Operator op : foreach2.getInnerPlan().getSources()) {&lt;br/&gt;
                 // If the source is not LOInnerLoad, then it must be LOGenerate. This happens when &lt;br/&gt;
                 // the 1st ForEach does not rely on any input of 2nd ForEach&lt;br/&gt;
                 if (op instanceof LOInnerLoad) {&lt;br/&gt;
                     LOInnerLoad innerLoad = (LOInnerLoad)op;&lt;br/&gt;
                     int input = innerLoad.getProjection().getColNum();&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (inputs.contains(input))&lt;/li&gt;
	&lt;li&gt;return false;&lt;br/&gt;
+                    if (inputs.contains(input)) 
{
+                        duplicateInputs = true;
+                        break;
+                    }
&lt;p&gt;                     else&lt;br/&gt;
                         inputs.add(input);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -109,6 +112,27 @@&lt;br/&gt;
                 }&lt;br/&gt;
             }&lt;/p&gt;

&lt;p&gt;+            // Duplicate inputs in the case first foreach only containing LOInnerLoad and&lt;br/&gt;
+            // LOGenerate is allowed, and output plan is simple projection&lt;br/&gt;
+            if (duplicateInputs) {&lt;br/&gt;
+                Iterator&amp;lt;Operator&amp;gt; it1 = foreach1.getInnerPlan().getOperators();&lt;br/&gt;
+                while( it1.hasNext() ) {&lt;br/&gt;
+                    Operator op = it1.next();&lt;br/&gt;
+                    if(!(op instanceof LOGenerate) &amp;amp;&amp;amp; !(op instanceof LOInnerLoad))&lt;br/&gt;
+                        return false;&lt;br/&gt;
+                    if (op instanceof LOGenerate) {&lt;br/&gt;
+                        List&amp;lt;LogicalExpressionPlan&amp;gt; outputPlans = ((LOGenerate)op).getOutputPlans();&lt;br/&gt;
+                        for (LogicalExpressionPlan outputPlan : outputPlans) {&lt;br/&gt;
+                            Iterator&amp;lt;Operator&amp;gt; iter = outputPlan.getOperators();&lt;br/&gt;
+                            while (iter.hasNext()) &lt;/p&gt;
{
+                                if (!(iter.next() instanceof ProjectExpression))
+                                    return false;
+                            }
&lt;p&gt;+                        }&lt;br/&gt;
+                    }&lt;br/&gt;
+                }&lt;br/&gt;
+            }&lt;/p&gt;</comment>
                            <comment id="12915950" author="daijy" created="Tue, 28 Sep 2010 23:38:01 +0100"  >&lt;p&gt;Yes, it could be improved as per Xuefu&apos;s suggestion. Anyway, current patch solve the &quot;combiner not used&quot; issue, will commit this part first. I will open another Jira to improve it. Also, MergeForEach is a best example to practice cloning framework &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PIG-1587&lt;/a&gt;, so it is better to improve it once &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1587&quot; title=&quot;Cloning utility functions for new logical plan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1587&quot;&gt;PIG-1587&lt;/a&gt; is available.&lt;/p&gt;</comment>
                            <comment id="12916024" author="daijy" created="Wed, 29 Sep 2010 06:28:54 +0100"  >&lt;p&gt;All tests pass except for TestSortedTableUnion / TestSortedTableUnionMergeJoin for zebra, which are already fail and will be addressed by &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1649&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PIG-1649&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Patch committed to both trunk and 0.8 branch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12455767" name="PIG-1637-1.patch" size="10901" author="daijy" created="Mon, 27 Sep 2010 23:23:41 +0100"/>
                            <attachment id="12455858" name="PIG-1637-2.patch" size="11553" author="daijy" created="Tue, 28 Sep 2010 19:23:54 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 28 Sep 2010 22:25:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165091</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaslr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96945</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>