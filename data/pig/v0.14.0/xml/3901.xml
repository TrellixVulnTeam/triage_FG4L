<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:55:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3901/PIG-3901.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3901] Organize the Pig properties file and document all properties</title>
                <link>https://issues.apache.org/jira/browse/PIG-3901</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The current pig.properties file can use some love. Each property should be introduced by a documentation string explaining&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;what the feature does,&lt;/li&gt;
	&lt;li&gt;what its default and other allowed values are,&lt;/li&gt;
	&lt;li&gt;why a user might change it from the default,&lt;/li&gt;
	&lt;li&gt;and what might go wrong with each.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The documentation should follow a common format &amp;#8211; I propose the following guidelines:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Each property should supply either a bulleted list of acceptable values, indicating the default; or provide the default value inline with the description&lt;/li&gt;
	&lt;li&gt;Don&apos;t say &apos;This setting lets you control whether Pig will decide to use the Hemiconducer feature&apos;, say &apos;Enables the hemiconducer feature, which &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&apos;&lt;/li&gt;
	&lt;li&gt;Don&apos;t document the internals of the feature. Describe its impact on job execution or performance.&lt;/li&gt;
	&lt;li&gt;Use consistent indentation, title formatting, and block delimiting. (The current patch does not yet do so completely, as I&apos;m figuring it out)&lt;/li&gt;
	&lt;li&gt;Place each setting in the appropriate block according to its impact on the user experience.&lt;/li&gt;
	&lt;li&gt;Call out Experimental features with `EXPERIMENTAL`, but group them with similar settings.&lt;/li&gt;
	&lt;li&gt;If a setting is dangerous, call that out with `WARNING`&lt;/li&gt;
	&lt;li&gt;If one value is always appropriate for casual use, or always appropriate for production use, we should call that out. Production use should assume a moderately loaded single rack hadoop cluster according to the major distro&apos;s reference configuration &amp;#8211; people running massive-scale installations don&apos;t need this file&apos;s advice.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve attached a patch that organizes the current properties file and documents everything I felt confident describing. This is a preliminary patch, as I&apos;ll need some help documenting many of the currently un-documented ones. Please review what I&apos;ve written carefully; I have reasonable experience programming Pig but limited familiarity with the experimental features.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12708952">PIG-3901</key>
            <summary>Organize the Pig properties file and document all properties</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mrflip">Philip (flip) Kromer</assignee>
                                    <reporter username="mrflip">Philip (flip) Kromer</reporter>
                        <labels>
                            <label>conf</label>
                            <label>config</label>
                            <label>documentation</label>
                            <label>properties</label>
                            <label>settings</label>
                    </labels>
                <created>Thu, 17 Apr 2014 01:09:01 +0100</created>
                <updated>Mon, 7 Jul 2014 19:07:50 +0100</updated>
                            <resolved>Fri, 9 May 2014 05:15:03 +0100</resolved>
                                                    <fixVersion>0.13.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13972128" author="mrflip" created="Thu, 17 Apr 2014 01:15:43 +0100"  >&lt;p&gt;Work in progress: Organize the pig properties file and document all properties&lt;/p&gt;</comment>
                            <comment id="13975915" author="cheolsoo" created="Mon, 21 Apr 2014 20:13:27 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mrflip&quot; class=&quot;user-hover&quot; rel=&quot;mrflip&quot;&gt;Philip (flip) Kromer&lt;/a&gt;, thank you for the wonderful work. This is very much needed. See my responses below-&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# brief=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Brief logging (no timestamps). The default is false. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/cmds.html#utillity-cmds&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/cmds.html#utillity-cmds&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# debug=INFO
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Logging level. debug=OFF|ERROR|WARN|INFO|DEBUG; The default is INFO. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/cmds.html#utillity-cmds&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/cmds.html#utillity-cmds&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# stop.on.failure=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Per Pig job, a DAG of MR jobs are submitted. When this property is set to true, all the waiting/running MR jobs are canceled/killed upon a MR job failure.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# pig.additional.jars=&amp;lt;comma separated list of jars&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can register additional files (to use with your Pig script) via the command line using the -Dpig.additional.jars option. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/basic.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/basic.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# udf.&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt;.list=&amp;lt;comma seperated list of imports&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;An import list allows you to specify the package to which a UDF or a group of UDFs belong, eliminating the need to qualify the UDF on every call. An import list can be specified via the udf.import.list Java property on the Pig command line. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/udf.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/udf.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# (TODO: what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, and why would you ever set &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; to be &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;?)
# pig.user.cache.enabled=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is false. You might want to disable it because cache can become stale.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# Omit empty part files from the output? (TODO: what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, and why would you ever set &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; to be &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;?)
# pig.output.lazy=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is false. The default behavior of MapReduce is to generate an empty file for no data, so Pig follows that.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# pig.cachedbag.memusage=0.2
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The amount of memory allocated to bags is determined by pig.cachedbag.memusage; the default is set to 20% (0.2) of available memory. Note that this memory is shared across all large bags used by the application. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/perf.html#memory-management&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/perf.html#memory-management&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# pig.skewedjoin.reduce.memusage=0.3
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The pig.skewedjoin.reduce.memusage Java parameter specifies the fraction of heap available for the reducer to perform the join. A low fraction forces Pig to use more reducers but increases copying cost. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/perf.html#skewed-joins&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/perf.html#skewed-joins&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# EXPERIMENTAL: Use SchemaTuples in merge joins. (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;: value of
#   `pig.schematuple`). (TODO: Memory savings are highest when (???))
# pig.schematuple.merge_join=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Memory savings are from using Java primitives instead of objects. When schema is known, we can generate a custom Java class to hold records instead of wrapping primitives into objects. In my experiment, I haven&apos;t found a good guidance, so I wouldn&apos;t add further comments than what&apos;s already there.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# Do not spill temp files smaller than &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; size (bytes)
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# pig.spill.size.threshold=5000000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Bags are spilled only if their size is greater than the configured threshold. The default is 5000000 bytes. Usually, the more spilling the longer runtime. So you might want to tune it according to heap size of each task, etc.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# Tempfile storage container type: (TODO: what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, and why would I change it?)
# * seqfile: only supports gz(gzip), lzo, snappy, and bzip2
# * tfile: only supports supports gz(gzip) and lzo
# pig.tmpfilecompression.storage=seqfile
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is tfile. You can change it depending on which file you want to use. For now, there are only seq and tfile, but we can add a new format in the future. Regarding why tfile over seq, this might be helpful- &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12396286/TFile%20Specification%2020081217.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12396286/TFile%20Specification%2020081217.pdf&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
#pig.noSplitCombination=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; The default is false. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/perf.html#combine-files&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/perf.html#combine-files&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# pig.exec.nocombiner=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is false. Combiner optimization does not always help performance. When the reduction of combiners is not significant, it only adds extra overhead. If so, you want to disable it.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# opt.multiquery=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is true. MultiQuery optimization is not bug-free. Sometimes your query compiles fine w/o MQ optimization while it fails w/ MQ. If so, you want to disable it.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
# opt.fetch=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is true. This enables direct fetch optimization for small queries (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3642&quot; title=&quot;Direct HDFS access for small jobs (fetch) &quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3642&quot;&gt;&lt;del&gt;PIG-3642&lt;/del&gt;&lt;/a&gt;). But sometimes you want to force Pig to launch a MR job, for example when you&apos;re testing a live cluster. If so, you can disable it.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: advice on how to choose
# TODO: This value seems low -- unless you have a fully-saturated cluster,
# driving more reducers than available slots can have unintended consequences
# that non-experts may not appreciate.
# pig.exec.reducers.bytes.per.reducer=1000000000
# pig.exec.reducers.max=999
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/perf.html#reducer-estimation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/perf.html#reducer-estimation&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: advice on how to choose
# pig.exec.reducer.estimator = &amp;lt;fully qualified class name of a PigReducerEstimator implementation&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is only one default implementation shipped with Pig. If you want to customize it, you can do it by setting this. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/perf.html#reducer-estimation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/perf.html#reducer-estimation&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
#pig.exec.mapPartAgg=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
#pig.exec.mapPartAgg.minReduction=10
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is false and 10 respectively. See &lt;a href=&quot;http://pig.apache.org/docs/r0.12.0/perf.html#hash-based-aggregation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pig.apache.org/docs/r0.12.0/perf.html#hash-based-aggregation&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, why would I change it?
#pig.load.&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.statements=
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can use this property to load a bootstrap file that contains default statements that you want to execute in every Pig job. It&apos;s similar to .bashrc.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# Support recovery to when the application master is restarted? (TODO: what is
#   &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, and advice on setting it)
# pig.output.committer.recovery.support=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is false. This is a hadoop 2 specific property. You can enable it if you want to take advantage of AM recovery.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, and why would I change it?
hcat.bin=/usr/local/hcat/bin/hcat
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The default is null. You want to change it if hcat is installed at a non-default location.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: what is &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, what is the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;, and why would I change it?
#pig.sql.type=hcat
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Currently, hcat is the only sql backend. We might add a new one in the future.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#     `load &apos;/path/to/tmp/file&apos; using org.apache.pig.impl.io.TFileStorage();`.
#  (TODO: is it &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; that pig.tmpfilecompression.storage affects &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;)
# pig.delete.temp.files=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Yes. You should use SequenceFileInterStorage() if pig.tmpfilecompression.storage is seqfile.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# TODO: advice on how to choose
# pig.script.max.size=10240
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If Pig executes a long query, pig.script can waste space in JobConf. If so, you can truncate it. The default is 10240 characters.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13990412" author="mrflip" created="Tue, 6 May 2014 09:16:26 +0100"  >&lt;p&gt;Super helpful, thank you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cheolsoo&quot; class=&quot;user-hover&quot; rel=&quot;cheolsoo&quot;&gt;Cheolsoo Park&lt;/a&gt;. I&apos;ve placed your advice into the file and this is now ready for merging if it passes review. Two things to confirm: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;pig.load.default.statements: &quot;You can use this to load a bootstrap file that contains default statements that you want to execute in every Pig job. It&apos;s similar to .bashrc.&quot; &amp;#8211; Is there any way to expand home directory with this?&lt;/li&gt;
	&lt;li&gt;pig.script.max.size: Am I correct to understand that if my script is way longer than this, everything will continue to work &amp;#8211; but only the first 10k of it will be placed into the jobConf file?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13990414" author="mrflip" created="Tue, 6 May 2014 09:19:07 +0100"  >&lt;p&gt;The first patch simply rearranges the existing property file into sensible groups; if you do `sort conf/pig.properties &amp;gt; /tmp/p1 ; sort conf/pig-old.properties &amp;gt; /tmp/p2 ; diff -uw /tmp/&lt;/p&gt;
{p1,p2}
&lt;p&gt;` you will see no differences. The second patch cleans up the formatting and adds complete comments for each property that explain what the feature does; what its default and other allowed values are; why a user might change it from the default; and what might go wrong if they do.&lt;/p&gt;</comment>
                            <comment id="13993367" author="cheolsoo" created="Fri, 9 May 2014 05:02:16 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mrflip&quot; class=&quot;user-hover&quot; rel=&quot;mrflip&quot;&gt;Philip (flip) Kromer&lt;/a&gt;, thank you so much. To answer your questions-&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;No, I don&apos;t think you can set pig.load.default.statements to ~/.pigrc. But if the property is not set, ~/.pigbootup is used by default.&lt;/li&gt;
	&lt;li&gt;Yes, you&apos;re right.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll commit &quot;0002-Fully-commented-the-pig.properties-file.patch&quot; unless you&apos;d like to make more changes. It looks great to me!&lt;/p&gt;</comment>
                            <comment id="13993376" author="cheolsoo" created="Fri, 9 May 2014 05:15:04 +0100"  >&lt;p&gt;I realized that I need to apply both 0001 and 0002 patch in order. Committed both to trunk. Thank you Philip! &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12643503" name="0001-Organized-pig-properties-file-to-group-properties-in.patch" size="12853" author="mrflip" created="Tue, 6 May 2014 09:19:07 +0100"/>
                            <attachment id="12643504" name="0002-Fully-commented-the-pig.properties-file.patch" size="31306" author="mrflip" created="Tue, 6 May 2014 09:19:07 +0100"/>
                            <attachment id="12640556" name="organize_pig_properties.patch" size="26251" author="mrflip" created="Thu, 17 Apr 2014 01:15:43 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Apr 2014 19:13:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387275</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzokhr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387538</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Default conf/pig.properties file has been organized, and all properties are documented</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>