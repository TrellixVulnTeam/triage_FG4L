<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:56:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1038/PIG-1038.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1038] Optimize nested distinct/sort to use secondary key</title>
                <link>https://issues.apache.org/jira/browse/PIG-1038</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;If nested foreach plan contains sort/distinct, it is possible to use hadoop secondary sort instead of SortedDataBag and DistinctDataBag to optimize the query. &lt;/p&gt;

&lt;p&gt;Eg1:&lt;br/&gt;
A = load &apos;mydata&apos;;&lt;br/&gt;
B = group A by $0;&lt;br/&gt;
C = foreach B &lt;/p&gt;
{
    D = order A by $1;
    generate group, D;
}
&lt;p&gt;store C into &apos;myresult&apos;;&lt;/p&gt;

&lt;p&gt;We can specify a secondary sort on A.$1, and drop &quot;order A by $1&quot;.&lt;/p&gt;

&lt;p&gt;Eg2:&lt;br/&gt;
A = load &apos;mydata&apos;;&lt;br/&gt;
B = group A by $0;&lt;br/&gt;
C = foreach B &lt;/p&gt;
{
    D = A.$1;
    E = distinct D;
    generate group, E;
}
&lt;p&gt;store C into &apos;myresult&apos;;&lt;/p&gt;

&lt;p&gt;We can specify a secondary sort key on A.$1, and simplify &quot;D=A.$1; E=distinct D&quot; to a special version of distinct, which does not do the sorting.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12438759">PIG-1038</key>
            <summary>Optimize nested distinct/sort to use secondary key</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="olgan">Olga Natkovich</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Oct 2009 22:56:41 +0100</created>
                <updated>Wed, 24 Mar 2010 22:15:58 +0000</updated>
                            <resolved>Thu, 12 Nov 2009 07:49:09 +0000</resolved>
                                    <version>0.4.0</version>
                                    <fixVersion>0.6.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12772085" author="daijy" created="Fri, 30 Oct 2009 21:02:10 +0000"  >&lt;p&gt;Here is the design for this optimization:&lt;br/&gt;
1. Add SecondaryKeyOptimizer, which optimize map-reduce plan. It will&lt;br/&gt;
1.1 Discover if we use sort/distinct in nested foreach plan. &lt;br/&gt;
1.2 For the first such sort/distinct, use the sort/distinct key as the secondary key&lt;br/&gt;
1.3 Once SecondaryKeyOptimizer discover secondary key, it will call POLocalRearrange.setSecondaryPlan, then drop sort or simplify distinct&lt;/p&gt;

&lt;p&gt;2. Change POLocalRearrange&lt;br/&gt;
2.1 Add setSecondaryPlan to provide a way to set secondary plan for SecondaryKeyOptimizer&lt;br/&gt;
2.2 Change constructLROutput to make a compound key, which is a tuple: (key, secondaryKey)&lt;br/&gt;
2.3 We need to duplicate the logic to strip key from values for the secondary key as well&lt;/p&gt;

&lt;p&gt;3. Change POPackageAnnotator to patch POPackage with the keyinfo from both key and secondaryKey&lt;/p&gt;

&lt;p&gt;4. Change POPackage to stitch secondary key to the value&lt;/p&gt;

&lt;p&gt;5. Change MapReduceOper to indicate that map-reduce operator needs secondary key, and JobControlCompiler will set OutputValueGroupingComparator to use the mainKeyComparator&lt;/p&gt;

&lt;p&gt;6. Add mainKeyComparator which inherits PigNullableWritable and only compare the main key. We need that for the OutputValueGroupingComparator&lt;/p&gt;</comment>
                            <comment id="12772404" author="ashutoshc" created="Mon, 2 Nov 2009 01:35:35 +0000"  >&lt;p&gt;I think its a useful optimization. I presume this will be implemented as a visitor in MapReduceLauncher which visits on compiled MR plan. Design looks good. I have few questions:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;1.1 Discover if we use sort/distinct in nested foreach plan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How are you planning to discover ? Depending on some pattern like LR in map-plan followed by POPackage, POForeach, POSort  in reduce-plan?&lt;/p&gt;

&lt;p&gt;Kind of orthogonal but related to this issue. We have rule-based optimizer framework in front-end, it seems to me that similar optimizer framework is required in backend too to refactor all the optimizer visitors we currently have and to add  similar kind of optimizations easily in future. &lt;br/&gt;
There are seven optimizations in front-end expressed through rules. On the other hand after addition of this one we will have nine optimization visitors in backend. May be we can think about it to avoid lot of rework every time such optimization is added.&lt;/p&gt;</comment>
                            <comment id="12772562" author="daijy" created="Mon, 2 Nov 2009 17:21:35 +0000"  >&lt;p&gt;Hi, Ashutosh,&lt;br/&gt;
I will look into POForeach and find the first nested sort or distinct, and use this sort/distinct key as the secondary sort key for this map-reduce job. So that I can take away/simplify the nested sort/distinct.&lt;/p&gt;

&lt;p&gt;Yes, we definitely need a framework for the map-reduce layer also. We will work on that, and welcome any suggestions and comments.&lt;/p&gt;</comment>
                            <comment id="12772774" author="alangates" created="Tue, 3 Nov 2009 00:03:01 +0000"  >&lt;p&gt;I agree that we need a framework for optimizations in the backend.  I&apos;m hoping we can reuse the framework from the front end.  However, there&apos;s some cleanup we&apos;d still like to do on the LogicalOptimizer before we use it as a template for a MapReduceOptimizer.  But I agree that&apos;s where we need to go.&lt;/p&gt;</comment>
                            <comment id="12774734" author="daijy" created="Sun, 8 Nov 2009 07:07:59 +0000"  >&lt;p&gt;Attach the patch. POSortedDistinct is contributed by Ying.&lt;/p&gt;</comment>
                            <comment id="12774753" author="hadoopqa" created="Sun, 8 Nov 2009 10:32:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12424289/PIG-1038-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12424289/PIG-1038-1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 833549.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 207 javac compiler warnings (more than the trunk&apos;s current 199 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 3 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 319 release audit warnings (more than the trunk&apos;s current 317 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/143/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12774854" author="daijy" created="Mon, 9 Nov 2009 04:33:51 +0000"  >&lt;p&gt;Reattach patch to address javac and findbugs warnings.&lt;/p&gt;</comment>
                            <comment id="12774926" author="hadoopqa" created="Mon, 9 Nov 2009 10:04:07 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12424332/PIG-1038-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12424332/PIG-1038-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 833549.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 205 javac compiler warnings (more than the trunk&apos;s current 199 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 319 release audit warnings (more than the trunk&apos;s current 317 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/145/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12775214" author="pkamath" created="Tue, 10 Nov 2009 00:53:52 +0000"  >&lt;p&gt;Review comments:&lt;br/&gt;
In JobControlCompiler:&lt;br/&gt;
======================&lt;br/&gt;
The OutputValueGroupingComparator is a RawComparator - &lt;br/&gt;
how are we ensuring that compare(WritableComparable a, WritableComparable b) is called?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
622             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((wa.getIndex() &amp;amp; PigNullableWritable.mqFlag) != 0) { &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is a multi-query index  &lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why do we only compare on index if this is true? The if-else in this block does not consider the&lt;br/&gt;
case where both indices are same - is that by design?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
653             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (wa.isNull() &amp;amp;&amp;amp; wb.isNull()) {      
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In this block the case where both indices are same is not considered - is that by design?&lt;/p&gt;

&lt;p&gt;The change in src/org/apache/pig/impl/io/PigNullableWritable.java seems unrelated to the patch&lt;/p&gt;

&lt;p&gt;In SecondaryKeyOptimizer.java:&lt;br/&gt;
==============================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
154             &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POUnion || mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POSplit) {
155                 List&amp;lt;PhysicalOperator&amp;gt; preds = mr.mapPlan.getPredecessors(mapLeaf);
156                 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (PhysicalOperator pred:preds)
157                 {
158                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (pred &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POLocalRearrange)
159                     {
160                         SortKeyInfo sortKeyInfo = getSortKeyInfo((POLocalRearrange)pred);
161                         sortKeyInfos.add(sortKeyInfo);
162                     }
163                 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If mapLeaf is a POSplit, the POSplit may have POLocalRearrange as the leaf (in multi query optimized queries) - should we be handling those?&lt;br/&gt;
Also, getSortKeyInfo() can return a null - so all places where getSortKeyInfo() is called, return value should be checked for null&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
98                 List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; columns = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;();
 99                 columns.add(rearrange.getIndex()&amp;amp;PigNullableWritable.idxSpace);
100                 columnChainInfo.insert(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, columns, DataType.TUPLE)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why does the column chain start with the index of LocalRearrange and why is the type tuple? &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
102                 PhysicalOperator node = plan.getRoots().get(0);
103                 &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (node!=&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
104                 {
105                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (node &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POProject) {
106                         POProject project = (POProject)node;
107 
108                         columnChainInfo.insert(project.isStar(), project.getColumns(), project.getResultType());
109 
110                         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (plan.getPredecessors(node)==&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
111                             node = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If node is initially the root, wouldn&apos;t plan.getPredecessors(node) always == null?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
175         List&amp;lt;PhysicalOperator&amp;gt; reduceRoots = mr.reducePlan.getRoots();
176         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (reduceRoots.size() != 1) {
177             log.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Expected reduce to have single leaf&quot;&lt;/span&gt;);
178             &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
179         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Did you mean to say &quot;Expected reduce to have single root&quot; ?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
209             &lt;span class=&quot;code-comment&quot;&gt;// Removed POSort, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the predecessor require a databag, we need to add a PORelationToExprProject&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should the above comment read &quot;if the successor requires ...&quot; &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
247                     &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VisitorException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Sort on columns from different inputs.&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should this exception follow Error Handling guidelines to include errorcode, and error source?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
253             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POUnion || mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POSplit){
254                 List&amp;lt;PhysicalOperator&amp;gt; preds = mr.mapPlan.getPredecessors(mapLeaf);
255                 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (PhysicalOperator pred:preds) {
256                     POLocalRearrange rearrange = (POLocalRearrange)pred;
257                     rearrange.setUseSecondaryKey(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
258                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rearrange.getIndex()==indexOfRearrangeToChange)
259                         setSecondaryPlan(mr.mapPlan, rearrange, secondarySortKeyInfo);
260                 }
261             }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If mapLeaf is a POSplit, the POSplit may have POLocalRearrange as the leaf (in multi query optimized queries) - should we be handling those?&lt;br/&gt;
Also in the if statement on line 258, what if the condition evaluates to false - shouwl we throw an Exception like earlier in the same&lt;br/&gt;
method?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
274                 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=1;i&amp;lt;columnChainInfo.size();i++) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A comment explaining why this loop starts from 1 would be useful&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
286                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (secondaryPlan.isEmpty())
287                 {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A comment explaining when this would happen would be useful&lt;/p&gt;

&lt;p&gt;There is ForEachVisitor which visits &lt;b&gt;all&lt;/b&gt; ForEach ops in the reduce plan - is a visitor needed? Shouldn&apos;t only the&lt;br/&gt;
foreach following the POPackage be processed?&lt;/p&gt;

&lt;p&gt;372         SecondaryKeyDiscoverVisitor(PhysicalPlan plan, List&amp;lt;SortKeyInfo&amp;gt; sortKeyInfos, SortKeyInfo secondarySortKeyInfo) {&lt;br/&gt;
It seems like the secondarySortKeyInfo passed in the constructor call is always null - is that argument needed in the constructor?&lt;/p&gt;

&lt;p&gt;431                 throw new VisitorException(&quot;POForEach has more than 1 input plans&quot;);&lt;br/&gt;
Should this exception follow Error Handling guidelines to include errorcode, and error source?&lt;/p&gt;

&lt;p&gt;A test case should be added for the case of a non Project group by key like group by $0 + $1 - I did not follow the code path for this case - we should ensure this works with&lt;br/&gt;
a nested sort in the foreach.&lt;/p&gt;

&lt;p&gt;In ColumnChainInfo.java:&lt;br/&gt;
=========================&lt;/p&gt;

&lt;p&gt;A comment on ColumnChainInfo and SortKeyInfo explaining how it tracks to POProjects in the plan would be useful&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
42         ColumnInfo newColumnChainInfo = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ColumnInfo(star, columns, type);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think it is better to name this variable as newColumnInfo since it the name &apos;newColumnChainInfo&apos; seems to &lt;br/&gt;
suggest the object is of type ColumnChainInfo.&lt;/p&gt;

&lt;p&gt; 52             newColumns.add(columns.get(0)-1);&lt;br/&gt;
The above code suggests that we rely on columns only having 1 element - at position 0. If that is not&lt;br/&gt;
true, should the code handle the case where columns has &amp;gt; 1 element?&lt;/p&gt;

&lt;p&gt; 53             ColumnInfo newColumnChainInfo = new ColumnInfo(star, newColumns, type);&lt;br/&gt;
I think it is better to name this variable as newColumnInfo since it the name &apos;newColumnChainInfo&apos; seems to &lt;br/&gt;
suggest the object is of type ColumnChainInfo.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 85     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void normalize() {
 86         &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=size()-1;
 87         &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (i&amp;gt;=0 &amp;amp;&amp;amp; getColumnInfo(i).star) {
 88             columnInfos.remove(i);
 89             i--;
 90         }
 91     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What is the above method used for?&lt;/p&gt;

&lt;p&gt;In SortKeyInfo.java:&lt;br/&gt;
=====================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void insertColumnInfo(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index, ColumnChainInfo columnChainInfo)
    {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (columnChains.size()&amp;lt;=index)
        {
            columnChains.add(columnChainInfo);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
        }
        
        ColumnChainInfo chain = columnChains.get(index);
        chain.insertColumnChainInfo(columnChainInfo);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should this method be named &quot;insertColumnChainInfo&quot; instead? When would the if condition evaluate to false?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void normalize() {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (columnChains.size()==1)
            columnChains.get(0).normalize();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What does the above do?&lt;/p&gt;

&lt;p&gt;In POSortedDistinct.java:&lt;br/&gt;
=========================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
75             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (in.returnStatus == POStatus.STATUS_EOP) {
 76                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isAccumulative() || !isAccumStarted()) {
 77                     lastTuple = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
 78                 }
 79                 &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; in;
 80             }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;what do the checks for isAccumulative() and is AccumStarted do?&lt;/p&gt;

&lt;p&gt;In POLocalRearrange.java:&lt;br/&gt;
=========================&lt;br/&gt;
Is there a way to refactor the code so that setPlans() and setSecondayPlans() can share common code?&lt;/p&gt;

&lt;p&gt;In POMultiQueryPackage.java:&lt;br/&gt;
============================&lt;br/&gt;
In setUseSecondaryKey(), the code, sets the flag to true in all underlying packages irrespective of whether the argument to&lt;br/&gt;
the method is true or false. Also I am wondering if in multiquery optimization, some subqueries need secondary key and some don&apos;t,&lt;br/&gt;
is that use case handled?&lt;/p&gt;


</comment>
                            <comment id="12775969" author="ashutoshc" created="Tue, 10 Nov 2009 18:08:49 +0000"  >&lt;p&gt;Another place where Hadoop&apos;s secondary sort is useful in Pig is to sort the index entries for Merge Join. In indexing job of Merge Join, index entries sampled from map tasks are grouped in one reduce task where they are sorted before being written to disk. Currently, Pig does the sorting, but Hadoop&apos;s secondary sort can be used instead. This may not result in much performance gains since index is small in any case, but this may be a good test case for secondary key optimization. This depends on how you are discovering the pattern as I asked in previous question. If there is POSort immediately following POPackage or POJoinPackage in reducer and some other conditions are met we can apply Secondary key sorting optimization.&lt;/p&gt;</comment>
                            <comment id="12775982" author="ashutoshc" created="Tue, 10 Nov 2009 18:20:55 +0000"  >&lt;p&gt;Note that in the use-case I mentioned of sorting index entries (btw, it can appear in user query as well) there is no POForEach , but secondary sort can still be applied and will be useful.&lt;/p&gt;</comment>
                            <comment id="12776175" author="daijy" created="Tue, 10 Nov 2009 23:45:17 +0000"  >&lt;p&gt;Hi, Ashutosh,&lt;br/&gt;
Good point. However, it is hard to get in for this release due to the schedule. You can open a separate Jira and we can address it afterward.&lt;/p&gt;</comment>
                            <comment id="12776372" author="daijy" created="Wed, 11 Nov 2009 08:27:17 +0000"  >&lt;p&gt;Attach a patch to address Pradeep&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="12776423" author="hadoopqa" created="Wed, 11 Nov 2009 11:50:21 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12424580/PIG-1038-3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12424580/PIG-1038-3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 834285.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 209 javac compiler warnings (more than the trunk&apos;s current 199 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 320 release audit warnings (more than the trunk&apos;s current 317 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h7.grid.sp2.yahoo.net/148/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12776729" author="pkamath" created="Wed, 11 Nov 2009 23:15:59 +0000"  >&lt;p&gt;In JobControlCompiler:&lt;br/&gt;
======================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
583                     jobConf.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;pig.secondarySortOrder&quot;&lt;/span&gt;,
584                             ObjectSerializer.serialize(mro.getSecondarySortOrder()));
585                 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looks like above code should be set in the case of non order by Mro which uses&lt;br/&gt;
secondary key&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
638                 valuea = ((Tuple)wa.getValueAsPigType()).get(0);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We should put a comment explaining that we extract the first field out since that represents&lt;br/&gt;
the actual group by key.&lt;/p&gt;

&lt;p&gt;In SecondaryKeyOptimizer:&lt;br/&gt;
========================&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POUnion || mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POSplit) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above should not contain POSplit since POSplit would only occur after multi query optimization&lt;br/&gt;
which happens later.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
94             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (plan.getRoots().size() != 1) {
 95                 &lt;span class=&quot;code-comment&quot;&gt;// POLocalRearrange plan contains more than 1 root.
&lt;/span&gt; 96                 &lt;span class=&quot;code-comment&quot;&gt;// Probably there is an Expression &lt;span class=&quot;code-keyword&quot;&gt;operator&lt;/span&gt; in the local
&lt;/span&gt; 97                 &lt;span class=&quot;code-comment&quot;&gt;// rearrangement plan,
&lt;/span&gt; 98                 &lt;span class=&quot;code-comment&quot;&gt;// skip secondary key optimizing
&lt;/span&gt; 99                 &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should we do continue nextPlan instead of return null here since this is similar to udf or constant in &lt;br/&gt;
local rearrange case&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
105.                columnChainInfo.insert(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, columns, DataType.TUPLE);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It would useful to put a comment explaining this is put into the ColumnChainInfo only for comparing that&lt;br/&gt;
different components of SortKeyInfo are all coming from the same input index. Also should the datatype be&lt;br/&gt;
BAG?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
118                        log.debug(node + &lt;span class=&quot;code-quote&quot;&gt;&quot; have more than 1 predecessor&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;predecessor should change to successor.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
217             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (currentNode &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POPackage
218                     || currentNode &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POFilter
219                     || currentNode &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POLimit) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In line 217 we should ensure, we don&apos;t optimize when we encounter POJoinPackage using something like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((currentNode &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POPackage &amp;amp;&amp;amp; !(currentNode &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POJoinPackage))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
307.             &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; errorCode = 1000;
327                     &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; errorCode = 1000;
526.             &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; errorCode = 1000;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This error code is already in use &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
336             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POUnion || mapLeaf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; POSplit) {
337                 List&amp;lt;PhysicalOperator&amp;gt; preds = mr.mapPlan
338                         .getPredecessors(mapLeaf);
339                 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (PhysicalOperator pred : preds) {
340                     POLocalRearrange rearrange = (POLocalRearrange) pred;
341                     rearrange.setUseSecondaryKey(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
342                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rearrange.getIndex() == indexOfRearrangeToChange) &lt;span class=&quot;code-comment&quot;&gt;// Try
&lt;/span&gt;343                                                                           &lt;span class=&quot;code-comment&quot;&gt;// to
&lt;/span&gt;344                                                                           &lt;span class=&quot;code-comment&quot;&gt;// find
&lt;/span&gt;345                                                                           &lt;span class=&quot;code-comment&quot;&gt;// the
&lt;/span&gt;346                                                                           &lt;span class=&quot;code-comment&quot;&gt;// POLocalRearrange
&lt;/span&gt;347                                                                           &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;
&lt;/span&gt;348                                                                           &lt;span class=&quot;code-comment&quot;&gt;// the
&lt;/span&gt;349                                                                           &lt;span class=&quot;code-comment&quot;&gt;// secondary
&lt;/span&gt;350                                                                           &lt;span class=&quot;code-comment&quot;&gt;// key
&lt;/span&gt;351                         setSecondaryPlan(mr.mapPlan, rearrange,
352                                 secondarySortKeyInfo);
353                 }   
354             }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above should not contain POSplit since POSplit would only occur after multi query optimization&lt;br/&gt;
which happens later.&lt;/p&gt;

&lt;p&gt;Also in the if statement on line 342, what if the condition evaluates to false - should we throw an Exception like earlier in the same&lt;br/&gt;
method?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
530             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r)
531                 sawInvalidPhysicalOper = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
..
557                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r) &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we saw physical &lt;span class=&quot;code-keyword&quot;&gt;operator&lt;/span&gt; other than project in sort
&lt;/span&gt;558                        &lt;span class=&quot;code-comment&quot;&gt;// plan
&lt;/span&gt;559                     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;At line 559 should we be setting sawInvalidPhysicalOper?&lt;/p&gt;

&lt;p&gt;General comments:&lt;br/&gt;
=================&lt;br/&gt;
A comment on ColumnChainInfo and SortKeyInfo explaining how it tracks to POProjects in the plan would be useful&lt;/p&gt;

&lt;p&gt;POMultiQueryPackage should not change since SecondaryKeyOptimizer runs before&lt;br/&gt;
MultiQueryOptimizer.&lt;/p&gt;

</comment>
                            <comment id="12776757" author="daijy" created="Thu, 12 Nov 2009 00:09:00 +0000"  >&lt;p&gt;Put the new patch in response to Pradeep&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="12776808" author="daijy" created="Thu, 12 Nov 2009 03:11:33 +0000"  >&lt;p&gt;Some further changes&lt;/p&gt;</comment>
                            <comment id="12776821" author="hadoopqa" created="Thu, 12 Nov 2009 03:41:50 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12424677/PIG-1038-4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12424677/PIG-1038-4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 835005.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 209 javac compiler warnings (more than the trunk&apos;s current 199 warnings).&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 320 release audit warnings (more than the trunk&apos;s current 318 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Pig-Patch-h8.grid.sp2.yahoo.net/44/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12776853" author="pkamath" created="Thu, 12 Nov 2009 05:36:54 +0000"  >&lt;p&gt;Changes look good. One observation is in SecondaryKeyOptimizer.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r) &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we saw physical &lt;span class=&quot;code-keyword&quot;&gt;operator&lt;/span&gt; other than project in sort
&lt;/span&gt;                        &lt;span class=&quot;code-comment&quot;&gt;// plan
&lt;/span&gt;                     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; should we be setting sawInvalidPhysicalOper?&lt;/p&gt;

&lt;p&gt;Other than that, +1 - please commit after making any change if required for the above.&lt;/p&gt;</comment>
                            <comment id="12776891" author="daijy" created="Thu, 12 Nov 2009 07:49:09 +0000"  >&lt;p&gt;All javac warnings are deprecations. 1 release audit warning is fixed, remaining are not source code related. Also make minor changes to address Pradeep&apos;s comment. Patch committed. To disable secondary key optimization, use system property: pig.exec.nosecondarykey=true&lt;/p&gt;</comment>
                            <comment id="12777318" author="daijy" created="Fri, 13 Nov 2009 01:33:11 +0000"  >&lt;p&gt;Couple of limitations for the currently implementation and will be addressed later:&lt;br/&gt;
1. If sort is not nested inside foreach plan, it will not optimized. That&apos;s the issue with merge join indexing which Ashutosh find.&lt;/p&gt;

&lt;p&gt;2. All the distinct keys are assumed to be ascending sort. Actually for the distinct key, the order of sort is flexible, if descending sort is cheaper, we shall use descending sort. Eg:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    C = foreach B { C1 = order A by $0 desc; C2 = C1.$0; C3 = distinct C2; generate group, C3; }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;    Both order by and distinct is on the same key A.$0; however, order by use descending order. If we use descending A.$0 as secondary key, we shall able to remove both order by and distinct. This is not the case now. We can only remove order by and leave distinct. &lt;/p&gt;

&lt;p&gt;3. Main key has the same issue. Main key is group key and order does not matters. However, in current implementation, we assume ascending order. Eg:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    B = group a by (a0, a1);
    C = foreach B { C1 = order A by a0 desc; generate group, C1; }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;    We use (a0, a1) as the main key, and nested order by cannot be removed. However, if we use reverse the order of main key, then we can remove the order by.&lt;/p&gt;</comment>
                            <comment id="12777589" author="daijy" created="Fri, 13 Nov 2009 18:05:52 +0000"  >&lt;p&gt;Continue with the last comment.&lt;/p&gt;

&lt;p&gt;4. Strip secondary keys from the value&lt;/p&gt;

&lt;p&gt;5. Write a byte version of OutputKeyComparator&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12458995">PIG-1295</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12424289" name="PIG-1038-1.patch" size="112162" author="daijy" created="Sun, 8 Nov 2009 07:07:59 +0000"/>
                            <attachment id="12424332" name="PIG-1038-2.patch" size="112650" author="daijy" created="Mon, 9 Nov 2009 04:33:51 +0000"/>
                            <attachment id="12424580" name="PIG-1038-3.patch" size="130861" author="daijy" created="Wed, 11 Nov 2009 08:27:17 +0000"/>
                            <attachment id="12424677" name="PIG-1038-4.patch" size="111292" author="daijy" created="Thu, 12 Nov 2009 00:08:59 +0000"/>
                            <attachment id="12424695" name="PIG-1038-5.patch" size="111198" author="daijy" created="Thu, 12 Nov 2009 03:11:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Oct 2009 21:02:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164566</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyalsv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95843</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>