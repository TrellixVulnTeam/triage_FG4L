<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:55:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-4166/PIG-4166.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-4166] Collected group drops last record when combined with merge join</title>
                <link>https://issues.apache.org/jira/browse/PIG-4166</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;If the final two keys in each relation join, they will never make it to the final output. The reason is that POMergeJoin does a read-ahead and POCollectedGroup doesn&apos;t call processInput when this.parentPlan.endOfAllInput == true. This prevents the final join from being output because POMergeJoin never sees endOfAllInput == true.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POCollectedGroup.java b/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POCollectedGroup.java
index c355d1d..8fd44fa 100644
--- a/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POCollectedGroup.java
+++ b/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POCollectedGroup.java
@@ -127,28 +127,30 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class POCollectedGroup &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; PhysicalOperator {
     @Override
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Result getNextTuple() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ExecException {
 
-        &lt;span class=&quot;code-comment&quot;&gt;// Since the output is buffered, we need to flush the last
&lt;/span&gt;-        &lt;span class=&quot;code-comment&quot;&gt;// set of records when the close method is called by mapper.
&lt;/span&gt;-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.parentPlan.endOfAllInput) {
-            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outputBag != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-                Tuple tup = mTupleFactory.newTuple(2);
-                tup.set(0, prevKey);
-                tup.set(1, outputBag);
-                outputBag = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
-                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Result(POStatus.STATUS_OK, tup);
-            }
-
-            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Result(POStatus.STATUS_EOP, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
-        }
+        
 
         Result inp = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
         Result res = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
 
         &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
             inp = processInput();
+
             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (inp.returnStatus == POStatus.STATUS_EOP ||
                     inp.returnStatus == POStatus.STATUS_ERR) {
-                &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+               &lt;span class=&quot;code-comment&quot;&gt;// Since the output is buffered, we need to flush the last
&lt;/span&gt;+                &lt;span class=&quot;code-comment&quot;&gt;// set of records when the close method is called by mapper.
&lt;/span&gt;+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.parentPlan.endOfAllInput) {
+                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outputBag != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+                        Tuple tup = mTupleFactory.newTuple(2);
+                        tup.set(0, prevKey);
+                        tup.set(1, outputBag);
+                        outputBag = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+                        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Result(POStatus.STATUS_OK, tup);
+                    }
+
+                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Result(POStatus.STATUS_EOP, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
+                       &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
             }
 
             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (inp.returnStatus == POStatus.STATUS_NULL) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12740863">PIG-4166</key>
            <summary>Collected group drops last record when combined with merge join</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bridiver">Brian Johnson</assignee>
                                    <reporter username="bridiver">Brian Johnson</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Sep 2014 21:25:26 +0100</created>
                <updated>Fri, 21 Nov 2014 05:58:47 +0000</updated>
                            <resolved>Thu, 30 Oct 2014 18:08:03 +0000</resolved>
                                    <version>0.12.0</version>
                                    <fixVersion>0.14.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14130654" author="bridiver" created="Thu, 11 Sep 2014 21:29:13 +0100"  >&lt;p&gt;This probably affects the final record no matter what, but I haven&apos;t tested that yet.&lt;/p&gt;</comment>
                            <comment id="14174127" author="bridiver" created="Thu, 16 Oct 2014 20:28:21 +0100"  >&lt;p&gt;Why does this keep getting pushed back? It isn&apos;t handling the final status correctly and will drop the last record in many instances&lt;/p&gt;</comment>
                            <comment id="14174309" author="daijy" created="Thu, 16 Oct 2014 22:46:38 +0100"  >&lt;p&gt;I unlink it from 0.14 since this sounds like a corner use case and no one seems actively working on it. Are you working on it, or do you have a test case, so I can take a look.&lt;/p&gt;</comment>
                            <comment id="14174318" author="bridiver" created="Thu, 16 Oct 2014 22:52:56 +0100"  >&lt;p&gt;I included the patch above. I didn&apos;t create a specific test case for it, but all tests still pass.&lt;/p&gt;</comment>
                            <comment id="14174328" author="daijy" created="Thu, 16 Oct 2014 23:00:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;This probably affects the final record no matter what, but I haven&apos;t tested that yet.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What did you test and what&apos;s not? And we do need a test case here to make sure future change will not break your script again. &lt;/p&gt;</comment>
                            <comment id="14174333" author="bridiver" created="Thu, 16 Oct 2014 23:03:08 +0100"  >&lt;p&gt;I can put together a test case for it. It affects the last record when it&apos;s combined with any other operator that caches records (like merge join) because the previous operator never gets a chance to flush it&apos;s final output.&lt;/p&gt;</comment>
                            <comment id="14174360" author="daijy" created="Thu, 16 Oct 2014 23:25:38 +0100"  >&lt;p&gt;Sounds good.&lt;/p&gt;</comment>
                            <comment id="14188578" author="bridiver" created="Wed, 29 Oct 2014 17:03:18 +0000"  >&lt;p&gt;I&apos;m getting failures in TestCollectedGroup in branch 0.14 before any changes&lt;/p&gt;</comment>
                            <comment id="14188590" author="bridiver" created="Wed, 29 Oct 2014 17:10:55 +0000"  >&lt;p&gt;testMapsideGroupByOneColumn&lt;/p&gt;

&lt;p&gt;```&lt;br/&gt;
org.apache.pig.impl.logicalLayer.FrontendException: ERROR 1066: Unable to open iterator for alias C&lt;br/&gt;
  at org.apache.pig.PigServer.openIterator(PigServer.java:923)&lt;br/&gt;
  at org.apache.pig.test.TestCollectedGroup.testMapsideGroupByOneColumn(TestCollectedGroup.java:199)&lt;br/&gt;
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
  at java.lang.reflect.Method.invoke(Method.java:606)&lt;br/&gt;
  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&lt;br/&gt;
  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&lt;br/&gt;
  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&lt;br/&gt;
  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&lt;br/&gt;
  at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&lt;br/&gt;
  at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&lt;br/&gt;
  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&lt;br/&gt;
  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&lt;br/&gt;
  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&lt;br/&gt;
  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&lt;br/&gt;
  at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&lt;br/&gt;
  at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&lt;br/&gt;
  at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&lt;br/&gt;
  at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&lt;br/&gt;
  at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&lt;br/&gt;
  at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&lt;br/&gt;
  at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&lt;br/&gt;
  at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
  at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
  at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
  at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
  at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;
Caused by: org.apache.pig.PigException: ERROR 1002: Unable to store alias C&lt;br/&gt;
  at org.apache.pig.PigServer.storeEx(PigServer.java:1026)&lt;br/&gt;
  at org.apache.pig.PigServer.store(PigServer.java:985)&lt;br/&gt;
  at org.apache.pig.PigServer.openIterator(PigServer.java:898)&lt;br/&gt;
  ... 27 more&lt;br/&gt;
Caused by: org.apache.pig.backend.hadoop.executionengine.JobCreationException: ERROR 2017: Internal error creating job configuration.&lt;br/&gt;
  at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getJob(JobControlCompiler.java:998)&lt;br/&gt;
  at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.compile(JobControlCompiler.java:323)&lt;br/&gt;
  at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.launchPig(MapReduceLauncher.java:196)&lt;br/&gt;
  at org.apache.pig.backend.hadoop.executionengine.HExecutionEngine.launchPig(HExecutionEngine.java:280)&lt;br/&gt;
  at org.apache.pig.PigServer.launchPlan(PigServer.java:1378)&lt;br/&gt;
  at org.apache.pig.PigServer.executeCompiledLogicalPlan(PigServer.java:1363)&lt;br/&gt;
  at org.apache.pig.PigServer.storeEx(PigServer.java:1022)&lt;br/&gt;
  ... 29 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
  at java.io.File.&amp;lt;init&amp;gt;(File.java:277)&lt;br/&gt;
  at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getJob(JobControlCompiler.java:628)&lt;br/&gt;
  ... 35 more&lt;br/&gt;
```&lt;/p&gt;</comment>
                            <comment id="14188641" author="daijy" created="Wed, 29 Oct 2014 17:34:51 +0000"  >&lt;p&gt;It runs fine for me. Are you running it inside eclipse?&lt;/p&gt;</comment>
                            <comment id="14188644" author="bridiver" created="Wed, 29 Oct 2014 17:36:37 +0000"  >&lt;p&gt;Yes, is that a know issue?&lt;/p&gt;</comment>
                            <comment id="14188649" author="bridiver" created="Wed, 29 Oct 2014 17:39:26 +0000"  >&lt;p&gt;They all pass in branch-0.13, although they&apos;re painfully slow to run&lt;/p&gt;</comment>
                            <comment id="14188650" author="daijy" created="Wed, 29 Oct 2014 17:39:32 +0000"  >&lt;p&gt;In eclipse, you will need to add pig-0.14.0-SNAPSHOT-core-h2.jar and folder build/classes into classpath of the test.&lt;/p&gt;</comment>
                            <comment id="14188664" author="brian@brianjohnson.cc" created="Wed, 29 Oct 2014 17:47:40 +0000"  >&lt;p&gt;Yes, is that an known issue?&lt;/p&gt;


</comment>
                            <comment id="14188676" author="daijy" created="Wed, 29 Oct 2014 17:54:30 +0000"  >&lt;p&gt;Yes, this is a known prerequisite to run unit tests in eclipse in 0.14.&lt;/p&gt;</comment>
                            <comment id="14188924" author="bridiver" created="Wed, 29 Oct 2014 20:18:50 +0000"  >&lt;p&gt;Are you sure you want a test for this change? The cost of the test is very high against the small chance that someone would return this code to it&apos;s broken state. These tests would benefit from a single startup/shutdown for the pig server. It&apos;s not really practical to have so many unit tests that take several minutes to run.&lt;/p&gt;</comment>
                            <comment id="14188943" author="bridiver" created="Wed, 29 Oct 2014 20:30:44 +0000"  >&lt;p&gt;added test&lt;/p&gt;</comment>
                            <comment id="14188944" author="bridiver" created="Wed, 29 Oct 2014 20:31:01 +0000"  >&lt;p&gt;patch against branch-0.13&lt;/p&gt;</comment>
                            <comment id="14188945" author="bridiver" created="Wed, 29 Oct 2014 20:31:32 +0000"  >&lt;p&gt;in any case, here it is with the passing test. It would be great if you could move the fix back to 0.14&lt;/p&gt;</comment>
                            <comment id="14190507" author="daijy" created="Thu, 30 Oct 2014 18:06:00 +0000"  >&lt;p&gt;Attach an equivalent for trunk and 0.14 branch.&lt;/p&gt;</comment>
                            <comment id="14190517" author="daijy" created="Thu, 30 Oct 2014 18:08:03 +0000"  >&lt;p&gt;+1.&lt;/p&gt;

&lt;p&gt;Patch committed to both trunk and 0.14 branch. &lt;/p&gt;

&lt;p&gt;Thanks Brian for the fix and testcase.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12678255" name="PIG-4166-2.patch" size="3733" author="daijy" created="Thu, 30 Oct 2014 18:06:00 +0000"/>
                            <attachment id="12677989" name="patch" size="4972" author="bridiver" created="Wed, 29 Oct 2014 20:30:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Oct 2014 21:46:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hztsyv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>