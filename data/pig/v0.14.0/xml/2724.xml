<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:52:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2724/PIG-2724.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2724] Make Tuple Iterable</title>
                <link>https://issues.apache.org/jira/browse/PIG-2724</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Seriously, is there a more annoying pattern than the following?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; t.size(); i++) {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        doStuff(t.get(i));
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ExecException e) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;BUT I THOUGHT PIG WAS SINGLETHREADED&quot;&lt;/span&gt;, e);
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I mean yeah, you can do the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; o : t.getAll()) {
    doStuff(o);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But I don&apos;t even think that should be necessary. I think the following should work:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; o : t) {
    doStuff(o);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It&apos;s a shame we can&apos;t give a default implementation (I either shake my fist that this won&apos;t be possible until Java 8 OR that Tuple is an interface and not an abstract class). Either way, I even added test! WOAH.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12558211">PIG-2724</key>
            <summary>Make Tuple Iterable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jcoveney">Jonathan Coveney</assignee>
                                    <reporter username="jcoveney">Jonathan Coveney</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 May 2012 23:25:48 +0100</created>
                <updated>Fri, 22 Feb 2013 04:54:13 +0000</updated>
                            <resolved>Thu, 31 May 2012 23:31:40 +0100</resolved>
                                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13283935" author="prkommireddi" created="Sat, 26 May 2012 09:32:02 +0100"  >&lt;p&gt;Hi Jon, patch looks good to me. Neat idea.&lt;/p&gt;

&lt;p&gt;Minor thing, probably you could set the size of Tuple in TestTuple as that never changes in your test.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testTupleIterator() {
        Tuple t = TupleFactory.getInstance().newTuple();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This can be changed to&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testTupleIterator() {
        Tuple t = TupleFactory.getInstance().newTuple(2000);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13285888" author="julienledem" created="Wed, 30 May 2012 19:39:02 +0100"  >&lt;p&gt;Good idea Jon.&lt;/p&gt;

&lt;p&gt;Some minor comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;chain the exception in the test:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Element &quot;&lt;/span&gt; + i, t.get(i++), o);
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ExecException e) {
    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(e);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;please add the @Override annotation to the iterator() implementations.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;To facilitate future evolutions and default implementations you can create an AbstractTuple that all tuples would extend.&lt;br/&gt;
For now it would have only the iterator() method implementation. &lt;br/&gt;
possibly it would have isNull(), toDelimitedString(), etc&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13286109" author="jcoveney" created="Wed, 30 May 2012 22:56:50 +0100"  >&lt;p&gt;Oh wow, not chaining the exception was pure typo. Lame.&lt;/p&gt;

&lt;p&gt;Thanks for the other comments. I went ahead and made an AbstractTuple and an AbstractTypeAwareTuple. Bam.&lt;/p&gt;</comment>
                            <comment id="13286177" author="julienledem" created="Thu, 31 May 2012 00:11:00 +0100"  >&lt;p&gt;Thanks Jonathan.&lt;br/&gt;
Overall, this looks good.&lt;br/&gt;
Some extra comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;In javadoc you can use the following tag whenever you want to reuse the same doc as in the implemented method (for example isNull(int))
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * {@inheritDoc}
     */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;I would not necessarily create AbstractTypeAwareTuple unless there is something to add in it&lt;/li&gt;
	&lt;li&gt;It looks like the toDelimitedString() in DefaultTuple was doing something different (nnull would be written differently) than the new default one in AbstractTuple. We may want to make sure we keep the same behavior in case someone is parsing it. You could add a test for this.&lt;/li&gt;
	&lt;li&gt;hashCode() could be in AbstractTuple as well as it just needs an object iterator (that you just provided!)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13286183" author="jcoveney" created="Thu, 31 May 2012 00:17:26 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Thanks for the heads up on the javadoc&lt;/li&gt;
	&lt;li&gt;Yeah, I was thinking about pushing in hashCode as well, but I don&apos;t like the idea of pushing in hashCode if we don&apos;t push in compareTo as well... either we have default behavior for both, or neither, IMHO.&lt;/li&gt;
	&lt;li&gt;I will have DefaultTuple override it and do what it used to do, and leave AbstractTuple&apos;s as the general.&lt;/li&gt;
	&lt;li&gt;AbstractTypeAwareTuple let&apos;s you merge together AbstractTuple+TypeAwareTuple interface. It feels cleaner than forcing classes to do that themselves?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13286220" author="julienledem" created="Thu, 31 May 2012 01:08:49 +0100"  >&lt;ul&gt;
	&lt;li&gt;np&lt;/li&gt;
	&lt;li&gt;You are correct but your argument for hashCode() also applies to equals(). The contract is that o1.equals(o2) =&amp;gt; o1.hashCode() == o2.hashCode() (not the other way around). compareTo() is separate but of course o1.compareTo(o2) == 0 &amp;lt;=&amp;gt; o1.equals(o2)&lt;br/&gt;
Usually hashCode and equals are implemented together&lt;br/&gt;
If the individual objects are not comparable it is hard to provide a default compareTo() implementation.&lt;br/&gt;
Factor out what makes sense to you. Some warning about that in the javadoc?&lt;/li&gt;
	&lt;li&gt;Sounds good&lt;/li&gt;
	&lt;li&gt;I don&apos;t think factoring the implements statement is worth the extra AbstractTypeAwareTuple class. It doesn&apos;t really improve readability.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13286222" author="jcoveney" created="Thu, 31 May 2012 01:14:10 +0100"  >&lt;p&gt;I care not about the AbstractTypeAwareTuple, so I&apos;ll axe it. I knew thee well, AbstractTypeAwareTuple.&lt;/p&gt;

&lt;p&gt;As far as the hashCode thing, you are correct of course on the typical equals contract, but for Tuples, idiomatically they all use compareTo instead. I do not think that this is an issue. I just think that we should force people to be thoughtful about compareTo/hashCode and either force both to be overriden, or neither.&lt;/p&gt;</comment>
                            <comment id="13286225" author="jcoveney" created="Thu, 31 May 2012 01:19:01 +0100"  >&lt;p&gt;This removes AbstractTypeAwareTuple, though it doesn&apos;t change the compareTo/hashCode piece &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13286780" author="jcoveney" created="Thu, 31 May 2012 18:53:09 +0100"  >&lt;p&gt;A minor change in toDelimitedString that handles nulls consistently.&lt;/p&gt;</comment>
                            <comment id="13286980" author="julienledem" created="Thu, 31 May 2012 22:41:13 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13287010" author="jcoveney" created="Thu, 31 May 2012 23:30:29 +0100"  >&lt;p&gt;rebased and committed&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12529812" name="PIG-2724-0.patch" size="5088" author="jcoveney" created="Fri, 25 May 2012 23:27:23 +0100"/>
                            <attachment id="12530281" name="PIG-2724-1.patch" size="15920" author="jcoveney" created="Wed, 30 May 2012 22:58:33 +0100"/>
                            <attachment id="12530280" name="PIG-2724-1.patch" size="15920" author="jcoveney" created="Wed, 30 May 2012 22:56:50 +0100"/>
                            <attachment id="12530298" name="PIG-2724-2.patch" size="15646" author="jcoveney" created="Thu, 31 May 2012 00:37:30 +0100"/>
                            <attachment id="12530306" name="PIG-2724-3.patch" size="21640" author="jcoveney" created="Thu, 31 May 2012 01:19:01 +0100"/>
                            <attachment id="12530412" name="PIG-2724-4.patch" size="14474" author="jcoveney" created="Thu, 31 May 2012 18:13:22 +0100"/>
                            <attachment id="12530411" name="PIG-2724-4.patch" size="14474" author="jcoveney" created="Thu, 31 May 2012 18:10:38 +0100"/>
                            <attachment id="12530418" name="PIG-2724-5.patch" size="14489" author="jcoveney" created="Thu, 31 May 2012 18:53:09 +0100"/>
                            <attachment id="12530452" name="PIG-2724-6.patch" size="15956" author="jcoveney" created="Thu, 31 May 2012 21:59:03 +0100"/>
                            <attachment id="12530451" name="PIG-2724-6.patch" size="22931" author="jcoveney" created="Thu, 31 May 2012 21:51:15 +0100"/>
                            <attachment id="12530467" name="PIG-2724-7.patch" size="13870" author="jcoveney" created="Thu, 31 May 2012 23:30:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 26 May 2012 08:32:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>256372</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaz8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98020</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>