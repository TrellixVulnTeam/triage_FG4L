<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:04:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2353/PIG-2353.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2353] RANK function like in SQL</title>
                <link>https://issues.apache.org/jira/browse/PIG-2353</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Implement a function that given a (sorted) bag adds to each tuple a unique, increasing identifier without gaps, like what RANK does for SQL.&lt;/p&gt;

&lt;p&gt;This is a candidate project for Google summer of code 2012. More information about the program can be found at &lt;a href=&quot;https://cwiki.apache.org/confluence/display/PIG/GSoc2012&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/PIG/GSoc2012&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Functionality implemented so far, is available at &lt;a href=&quot;https://reviews.apache.org/r/5523/diff/#index_header&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5523/diff/#index_header&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12530393">PIG-2353</key>
            <summary>RANK function like in SQL</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="xalan">Allan Avenda&#241;o</assignee>
                                    <reporter username="azaroth">Gianmarco De Francisci Morales</reporter>
                        <labels>
                            <label>gsoc2012</label>
                            <label>mentor</label>
                    </labels>
                <created>Fri, 4 Nov 2011 22:29:11 +0000</created>
                <updated>Thu, 28 Feb 2013 16:17:40 +0000</updated>
                            <resolved>Thu, 13 Sep 2012 15:55:35 +0100</resolved>
                                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                            <comments>
                            <comment id="13172931" author="jcoveney" created="Tue, 20 Dec 2011 05:26:32 +0000"  >&lt;p&gt;This provides a rank function, which needs a sorted input. Equal tuples will get increasing rank numbers.&lt;/p&gt;</comment>
                            <comment id="13173078" author="azaroth" created="Tue, 20 Dec 2011 11:05:53 +0000"  >&lt;p&gt;Hi Jonathan,&lt;br/&gt;
thanks for giving it a try!&lt;/p&gt;

&lt;p&gt;I think the approach is fine for an initial implementation.&lt;br/&gt;
To scale it out, we need a deeper integration with Pig (i.e. it need to be an operator and not a UDF), but this is the subject for another Jira.&lt;/p&gt;

&lt;p&gt;Just one more comment.&lt;br/&gt;
I am not sure about testing in piggybank.&lt;br/&gt;
Should we use e2e testing instead of JUnit?&lt;/p&gt;</comment>
                            <comment id="13173394" author="jcoveney" created="Tue, 20 Dec 2011 18:37:46 +0000"  >&lt;p&gt;Is there anything in the piggybank using the e2e? I&apos;m not sure what the word is about piggybank and when to use e2e. Someone else will have to weigh in on that.&lt;/p&gt;

&lt;p&gt;As far as that other JIRA...you should make it and link it, though I&apos;m curious what benefit/optimization you forsee RANK having if it has access to Pig&apos;s internals.&lt;/p&gt;</comment>
                            <comment id="13173405" author="azaroth" created="Tue, 20 Dec 2011 18:47:37 +0000"  >&lt;p&gt;My idea would be to have a distributed implementation of RANK in the following manner:&lt;/p&gt;

&lt;p&gt;Run a Map-only job with n mapper, each mapper just computes the number of records in each input split and accumulates it in an internal variable (or alternatively it uses dynamic counters).&lt;br/&gt;
At the end, we have a map(partition_id =&amp;gt; number_of_records).&lt;br/&gt;
This map is small enough to be put in the distributed cache.&lt;br/&gt;
Compute the cumulative sum of each number of records.&lt;br/&gt;
Then launch a second Map-only job with exactly n mappers, each will read it&apos;s input split and the cumulative number of records preceding it, initialize the counter with this value and finally RANK the records as they come in.&lt;/p&gt;

&lt;p&gt;This would be a distributed implementation of RANK that could scale very well.&lt;br/&gt;
I haven&apos;t figured out how to integrate it into Pig yet.&lt;/p&gt;</comment>
                            <comment id="13173431" author="ashutoshc" created="Tue, 20 Dec 2011 19:05:20 +0000"  >&lt;p&gt;I was also thinking of this problem of implementing statistical measures (like top-K, median, quantiles) etc. efficiently in a distributed manner which is amenable to MR framework. Rank is a basis of it. I came up with similiar outline as yours, your have laid it out well. I think this is pretty useful to be in Pig and these are kind of features which higher level language like Pig should make available to its users. Sophisticated users will expect this and this will derive adoption.   &lt;br/&gt;
+1 for distributed implementation of RANK in Pig.&lt;/p&gt;</comment>
                            <comment id="13173438" author="jcoveney" created="Tue, 20 Dec 2011 19:10:25 +0000"  >&lt;p&gt;So Gianmarco, are you thinking this sort of syntax:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = &amp;lt;some relation&amp;gt;
B = RANK A BY &amp;lt;column name&amp;gt; &amp;lt;ASC | DESC&amp;gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IE it&apos;d just follow the order syntax, but add the rank to the end?&lt;/p&gt;

&lt;p&gt;And I assume your n map job would run after already sorting the, right? So first rank would run the order by, and then it would run the two jobs that would actually append the rank?&lt;/p&gt;</comment>
                            <comment id="13173987" author="azaroth" created="Wed, 21 Dec 2011 10:05:18 +0000"  >&lt;p&gt;Actually I was thinking that RANK would only do the counting and appending.&lt;br/&gt;
This way you could get a sort + rank with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
B = RANK ( ORDER A BY &amp;lt;column&amp;gt; ASC);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But you could also get your dataset from file and rank it directly, without any specific order&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = LOAD &apos;path/to/file&apos;;
B = RANK A;
C = ORDER B BY &amp;lt;column&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This, for example, gives you the permutation that was used to sort the dataset, which might be useful.&lt;br/&gt;
Also, RANK would allow to create a data column that reflects the ordering that you have in your data.&lt;/p&gt;</comment>
                            <comment id="13174412" author="jcoveney" created="Wed, 21 Dec 2011 21:11:46 +0000"  >&lt;p&gt;I see no reason why it couldn&apos;t do both. The grammar syntax could be&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;RANK relation ( BY column )? such that if you specify the column to rank by, it&apos;ll sort it, but if you don&apos;t, it just sorts it as it got it.&lt;/p&gt;</comment>
                            <comment id="13174413" author="jcoveney" created="Wed, 21 Dec 2011 21:12:22 +0000"  >&lt;p&gt;Weird, the above got garbled and I can&apos;t edit it, but I think the idea is clear.&lt;/p&gt;</comment>
                            <comment id="13194966" author="ciemo" created="Fri, 27 Jan 2012 18:10:23 +0000"  >&lt;p&gt;There is a much more efficient way to compute RANK, DENSE_RANK, CUMULATIVE_SUM and more if you have billions of rows of data, especially if the data follows a power law/zipf distribution (like queries do).  It involves using Map-Reduce to compute a histogram of the frequencies/counts and then serializing and sorting the histogram which is something like 20,000 rows for 1B queries.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-821&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229114" author="azaroth" created="Wed, 14 Mar 2012 10:14:20 +0000"  >&lt;p&gt;Thanks Daniel, I am excited this Jira is going to be a candidate for GSoC, I was going to propose it myself!&lt;/p&gt;</comment>
                            <comment id="13237987" author="dapurv5" created="Sun, 25 Mar 2012 22:52:29 +0100"  >&lt;p&gt;Hello,&lt;br/&gt;
I am an undergraduate student from India and I would be interested in working on this as a GSoC project. I have a beginner level knowledge of writing map-reduce tasks so would need help with it. I have understood the algorithm which Gianmarco has outlined in the comments.&lt;/p&gt;</comment>
                            <comment id="13239880" author="xalan" created="Tue, 27 Mar 2012 20:57:33 +0100"  >&lt;p&gt;Dear all,&lt;/p&gt;

&lt;p&gt;Let me introduce myself, I am Allan Avenda&#241;o, student of Master Computing Engineering at Rome. I am interested into collaborate with Rank function like SQL &lt;a href=&quot;#PIG-2353&quot;&gt;PIG-2353&lt;/a&gt; for Gsoc. &lt;/p&gt;

&lt;p&gt;I have been working with MR paradigm since three years, mainly with two research projects (which were part of undergraduate projects). &lt;/p&gt;

&lt;p&gt;One was aimed to analyze the incidence of navigability factors on websites university network, by creating a inverse correlation among them through links and citations.&lt;br/&gt;
My undergraduate project was driven to solve the previous navigability problem, by establishing relations among them according to terms used and topics. Was really interesting to interleave some MR phases (some modifications to Mahout code) and Pig.&lt;/p&gt;

&lt;p&gt;I was checking the activities of this feature, and also an initial approach at &lt;a href=&quot;#PIG-821&quot;&gt;PIG-821&lt;/a&gt;, I think also could be useful dense rank an nth-tile, and other statistical inference operations. &lt;/p&gt;

&lt;p&gt;Really thankful for your guidance and comments.&lt;/p&gt;

&lt;p&gt;Best Regards&lt;/p&gt;</comment>
                            <comment id="13240429" author="azaroth" created="Wed, 28 Mar 2012 15:03:29 +0100"  >&lt;p&gt;Assigning to myself as per Apache guidelines as I&apos;d like to mentor this.&lt;/p&gt;</comment>
                            <comment id="13280877" author="xalan" created="Tue, 22 May 2012 12:02:38 +0100"  >&lt;p&gt;Hi to everybody,&lt;/p&gt;

&lt;p&gt;I am working on this functionality for GSOC 2012, with Gianmarco as my mentor. &lt;br/&gt;
I had been working on syntax, and now is recognized this syntax, recommended by Gianmarco:&lt;/p&gt;

&lt;p&gt;RANK &amp;lt;relation&amp;gt; ( BY &amp;lt;column&amp;gt; (ASC|DES)? )?&lt;/p&gt;

&lt;p&gt;I was also looking for some other functionality that can be incorporated, and on SQL Server, Oracle and Postgresql &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;, it is also possible to specify a &quot;partition&quot; (ranking over a specific group) at the same rank operation. Gianmarco already pointed me out that it could imply some performance flaws. &lt;/p&gt;


&lt;p&gt;Looking forward for yours feedback/suggestion.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms176102.aspx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/ms176102.aspx&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.techonthenet.com/oracle/functions/rank.php&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.techonthenet.com/oracle/functions/rank.php&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.postgresql.org/docs/9.1/static/tutorial-window.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.postgresql.org/docs/9.1/static/tutorial-window.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13281166" author="daijy" created="Tue, 22 May 2012 20:30:25 +0100"  >&lt;p&gt;We can use secondary sort to implement partitioned rank. However, I think partitioned rank and non-partitioned rank may have to adopt a totally different implementation. We can focus on non-partitioned rank first.&lt;/p&gt;</comment>
                            <comment id="13281472" author="azaroth" created="Wed, 23 May 2012 10:16:00 +0100"  >&lt;p&gt;My current view is that non-partitioned rank is simply a group by + a rank UDF.&lt;br/&gt;
So there is no need for a separate implementation of it unless we have some performance gain. Maybe we need something specific if we plan to support nested rank.&lt;/p&gt;</comment>
                            <comment id="13281934" author="daijy" created="Wed, 23 May 2012 22:35:11 +0100"  >&lt;p&gt;You mean the global rank is implemented by group all + UDF? Do we have a plan for a distributed implementation in this project?&lt;/p&gt;</comment>
                            <comment id="13281943" author="azaroth" created="Wed, 23 May 2012 22:43:53 +0100"  >&lt;p&gt;No, sorry, there is a typo in my previous comment.&lt;br/&gt;
What I meant is that partitioned rank is only group by + UDF.&lt;br/&gt;
The main aim of this project is a distributed implementation of the global RANK, which needs to be implemented from scratch.&lt;/p&gt;</comment>
                            <comment id="13281954" author="daijy" created="Wed, 23 May 2012 22:53:16 +0100"  >&lt;p&gt;So partitioned and non-partitioned RANK are using different implementation, right?&lt;/p&gt;</comment>
                            <comment id="13281959" author="azaroth" created="Wed, 23 May 2012 22:55:31 +0100"  >&lt;p&gt;Yes, partitioned rank can be simply group by + UDF.&lt;br/&gt;
Global rank should follow the implementation blueprint that I outlined in this Jira, or something similar to make it fully scalable.&lt;/p&gt;</comment>
                            <comment id="13398240" author="xalan" created="Thu, 21 Jun 2012 08:04:08 +0100"  >&lt;p&gt;Here, rank operator is fully implemented (rank, dense rank and row number), now I&apos;m working on refactoring, tests and documentation. &lt;/p&gt;

&lt;p&gt;Looking forward to your comments.&lt;/p&gt;</comment>
                            <comment id="13399500" author="xalan" created="Fri, 22 Jun 2012 19:37:05 +0100"  >&lt;p&gt;Current implementation is now available for your review at &lt;a href=&quot;https://reviews.apache.org/r/5523/diff/#index_header&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5523/diff/#index_header&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13433299" author="xalan" created="Mon, 13 Aug 2012 18:04:07 +0100"  >&lt;p&gt;Code generated so far. &lt;br/&gt;
It passed all junit and e2e test on a cluster.&lt;br/&gt;
New code has been documented. &lt;/p&gt;</comment>
                            <comment id="13440210" author="xalan" created="Thu, 23 Aug 2012 12:07:50 +0100"  >&lt;p&gt;All unit and e2e tests passed. &lt;/p&gt;</comment>
                            <comment id="13447590" author="azaroth" created="Tue, 4 Sep 2012 10:55:58 +0100"  >&lt;p&gt;There is a regression in the latest patch.&lt;br/&gt;
It does not work properly in a multi-machine environment.&lt;br/&gt;
It seems that the values of the counters are not properly serialized in the JobConf.&lt;br/&gt;
We need to add a test and fix the bug before committing the patch.&lt;/p&gt;</comment>
                            <comment id="13453875" author="xalan" created="Wed, 12 Sep 2012 10:58:18 +0100"  >&lt;p&gt;New approach to set counter into the MapReduce Job with PORank operator, only if there are PORank operator(s) on roots.&lt;/p&gt;

&lt;p&gt;Two tests added (ten in total) with complex scripts which prove particular scenarios. &lt;/p&gt;</comment>
                            <comment id="13454927" author="azaroth" created="Thu, 13 Sep 2012 15:55:35 +0100"  >&lt;p&gt;+1 for me.&lt;br/&gt;
Passes local tests and manual testing.&lt;br/&gt;
Committed to trunk.&lt;/p&gt;

&lt;p&gt;Thank Allan!&lt;/p&gt;</comment>
                            <comment id="13481537" author="olgan" created="Mon, 22 Oct 2012 18:35:57 +0100"  >&lt;p&gt;Can you please add usage example to release notes section, thanks!&lt;/p&gt;</comment>
                            <comment id="13481703" author="xalan" created="Mon, 22 Oct 2012 20:33:15 +0100"  >&lt;p&gt;Hi Olga!&lt;/p&gt;

&lt;p&gt;Does &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2947&quot; title=&quot;Documentation for Rank operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2947&quot;&gt;&lt;del&gt;PIG-2947&lt;/del&gt;&lt;/a&gt; apply as release notes? &lt;/p&gt;</comment>
                            <comment id="13481817" author="olgan" created="Mon, 22 Oct 2012 22:25:19 +0100"  >&lt;p&gt;Yes, I think that&apos;s fine - I did not realize it was covered in a separate JIRA, thanks!&lt;/p&gt;</comment>
                            <comment id="13535441" author="jcoveney" created="Tue, 18 Dec 2012 23:23:32 +0000"  >&lt;p&gt;Did this make rank a reserved keyword? We may need to document this as a non-backwards compatible change if it is, as many scripts use &quot;rank&quot; as a column name. Example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A = load &apos;thing&apos;;
B = FOREACH (GROUP A all) GENERATE MIN(A.rank);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of all the errors you&apos;d expect, I wasn&apos;t expecting this one:&lt;/p&gt;


&lt;p&gt;2012-12-18 23:18:36,142 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1200: &amp;lt;line 2, column 38&amp;gt;  mismatched input &apos;(&apos; expecting SEMI_COLON&lt;br/&gt;
Details at logfile: /var/log/pig/pig_1355872714665.log&lt;/p&gt;

&lt;p&gt;I culled this example from a larger script, and it looks like removing rank as a column name fixed it. Is this a known issue? I think we can refine the parser to work with rank in that position, but I thought it would be worth asking.&lt;/p&gt;</comment>
                            <comment id="13535455" author="azaroth" created="Tue, 18 Dec 2012 23:36:51 +0000"  >&lt;p&gt;Hi Jonathan,&lt;br/&gt;
Yes, RANK is now an operator and thus a reserved keyword.&lt;br/&gt;
We can add it to the release notes.&lt;/p&gt;

&lt;p&gt;The parser is definitely a bit rough and could use some reworking, especially in the error messages, so I am all in for it. Not sure if it is a known issue. Can you use LOAD or FOREACH as column names?&lt;/p&gt;</comment>
                            <comment id="13535506" author="jcoveney" created="Wed, 19 Dec 2012 00:34:47 +0000"  >&lt;p&gt;You cannot, so this is not without precedent. We should document it, and ideally introduce better error messages around it (separate JIRA, and for other keywords it is equally as bad).&lt;/p&gt;</comment>
                            <comment id="13546101" author="rohini" created="Mon, 7 Jan 2013 18:01:45 +0000"  >&lt;p&gt;Shouldn&apos;t we make it some part of documentation or RELEASE_NOTES.txt, instead of just Release note in JIRA?&lt;/p&gt;</comment>
                            <comment id="13546114" author="olgan" created="Mon, 7 Jan 2013 18:14:45 +0000"  >&lt;p&gt;I believe we agreed that the document changes are included and reviewed as part of the patch. Since this was not done this way, we need to get a separate patch for docs,&lt;/p&gt;</comment>
                            <comment id="13546296" author="azaroth" created="Mon, 7 Jan 2013 21:41:33 +0000"  >&lt;p&gt;Hi, sorry I guess I misunderstood.&lt;br/&gt;
I thought that &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2947&quot; title=&quot;Documentation for Rank operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2947&quot;&gt;&lt;del&gt;PIG-2947&lt;/del&gt;&lt;/a&gt; was sufficient as documentation and that we just wanted to clarify the release notes.&lt;/p&gt;

&lt;p&gt;Should I open a separate Jira to include the release notes of the Jira inside RELEASE_NOTES.txt ?&lt;/p&gt;</comment>
                            <comment id="13589632" author="ciemo" created="Thu, 28 Feb 2013 16:17:40 +0000"  >&lt;p&gt;Did anyone look at the solution I proposed in JIRA PIG 821 for partitioned rank computation on billions of rows?  There may be better solutions but I do know that that one works without need for serialization of all rows, only on the histogram.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12612331">PIG-2989</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12607648">PIG-2922</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12426445">PIG-821</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12532838" name="PIG-2353-2" size="74714" author="xalan" created="Thu, 21 Jun 2012 08:04:08 +0100"/>
                            <attachment id="12540696" name="PIG-2353-3.txt" size="257312" author="xalan" created="Mon, 13 Aug 2012 18:04:07 +0100"/>
                            <attachment id="12542102" name="PIG-2353-4.txt" size="293329" author="xalan" created="Thu, 23 Aug 2012 12:07:50 +0100"/>
                            <attachment id="12544794" name="PIG-2353-5.txt" size="300906" author="xalan" created="Wed, 12 Sep 2012 10:58:18 +0100"/>
                            <attachment id="12508045" name="PIG2353.patch" size="9694" author="jcoveney" created="Tue, 20 Dec 2011 05:26:32 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12559542">PIG-2742</subtask>
                            <subtask id="12559558">PIG-2743</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Dec 2011 05:26:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>216131</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy41jb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>57405</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Pig includes a new RANK operator:&lt;br/&gt;
RANK &amp;lt;relation&amp;gt; ( BY &amp;lt;column&amp;gt; (ASC|DES)? (DENSE)? )?&lt;br/&gt;
This operator prepends a consecutive integer to each tuple in the relation starting from 1.&lt;br/&gt;
If the BY clause is present, RANK sorts the relation before ranking it, otherwise it uses the order in which it receives the relation (e.g. the order in which the relation is stored if RANK is performed right after a LOAD).&lt;br/&gt;
The DENSE modifier produces a dense rank, which has no gaps in it regardless of ties.&lt;br/&gt;
&lt;br/&gt;
RANK is now a reserved keyword and is *not* backward compatible.&lt;br/&gt;
Please review your scripts to avoid usage of RANK as a relation name.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>