<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:58:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-847/PIG-847.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-847] Setting twoLevelAccessRequired field in a bag schema should not be required to access fields in the tuples of the bag</title>
                <link>https://issues.apache.org/jira/browse/PIG-847</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Currently Pig interprets the result type of a relation as a bag. However the schema of the relation directly contains the schema describing the fields in the tuples for the relation. However when a udf wants to return a bag or if there is a bag in input data or if the user creates a bag constant, the schema of the bag has one field schema which is that of the tuple. The Tuple&apos;s schema has the types of the fields. To be able to access the fields from the bag directly in such a case by using something like &amp;lt;bagname&amp;gt;.&amp;lt;fieldname&amp;gt; or &amp;lt;bag&amp;gt;.&amp;lt;fieldposition&amp;gt;, the schema of the bag should have the twoLevelAccess set to true so that pig&apos;s type system can get traverse the tuple schema and get to the field in question. This is confusing - we should try and see if we can avoid needing this extra flag. A possible solution is to treat bags the same way - whether they represent relations or real bags. Another way is to introduce a special &quot;relation&quot; datatype for the result type of a relation and bag type would be used only for true bags. In this case, we would always need bag schema to have a tuple schema which would describe the fields. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12427796">PIG-847</key>
            <summary>Setting twoLevelAccessRequired field in a bag schema should not be required to access fields in the tuples of the bag</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="pkamath">Pradeep Kamath</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Jun 2009 23:33:10 +0100</created>
                <updated>Thu, 4 Aug 2011 01:34:37 +0100</updated>
                            <resolved>Tue, 8 Feb 2011 18:22:09 +0000</resolved>
                                    <version>0.3.0</version>
                                    <fixVersion>0.9.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12981624" author="daijy" created="Fri, 14 Jan 2011 03:52:49 +0000"  >&lt;p&gt;After code review and prototyping, I don&apos;t think we need twoLevelAccess (Schema.twoLevelAccessRequired). The reasons are:&lt;br/&gt;
1. twoLevelAccess only exist in logical layer. In the physical layer, we don&apos;t have any notion of twoLevelAccess. No matter what the value of twoLevelAccess is, we will generate the same physical plan.&lt;br/&gt;
2. We do two level access for all bag access. I don&apos;t find any case we want to access the enclosing tuple of the bag directly.&lt;/p&gt;

&lt;p&gt;Here is one example. Suppose we have a UDF which generate a bag:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class GenBag &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; EvalFunc&amp;lt;DataBag&amp;gt; {
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; DataBag exec(Tuple input) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        DataBag result = DefaultBagFactory.getInstance().newDefaultBag();
        Tuple t = DefaultTupleFactory.getInstance().newTuple();
        t.append(input.get(0));
        t.append(((&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;)input.get(0))*((&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;)input.get(0)));
    }
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Schema outputSchema(Schema input) {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            Schema tupleSchema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema();
            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;2;i++)
                tupleSchema.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FieldSchema(input.getField(0).alias, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, DataType.INTEGER));
            Schema bagSchema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema();
            bagSchema.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FieldSchema(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, tupleSchema, DataType.TUPLE));
            bagSchema.setTwoLevelAccessRequired(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;); &lt;span class=&quot;code-comment&quot;&gt;// Play with twoLevelAccess
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FieldSchema(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getClass().getSimpleName(), bagSchema, DataType.BAG));
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (FrontendException e) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we have a script: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
a = load &apos;1.txt&apos; as (a0:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, a1:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;);
b = foreach a generate GenBag(a0, a1) as bg;
c = foreach b generate bg.$0;
dump c;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The goal for twoLevelAccess seems to control the meaning of bg.$0: Whether it means tuple or the first field of tuple. However, in reality, we only see user project the item inside tuple. Actually, in current code, even if we set twoLevelAccess to false, we still cannot project the tuple. So keep twoLevelAccess is meaningless and confusing. I propose to remove twoLevelAccess, all bag implicitly contain tuple, and bag projection implicitly goes to the item inside tuple. &lt;/p&gt;</comment>
                            <comment id="12981642" author="ashutoshc" created="Fri, 14 Jan 2011 06:25:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;I propose to remove twoLevelAccess, all bag implicitly contain tuple, and bag projection implicitly goes to the item inside tuple. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 for removal of twoLevelAccess and all the confusion it results in. Will this decision has any bearing on bags having other types? People have suggested for having a datatype for a collection of objects (like integer, long etc.) If we mandate that bags necessarily contain tuples, are we eliminating the possibility of implementing bags containing other types? &lt;/p&gt;</comment>
                            <comment id="12981816" author="alangates" created="Fri, 14 Jan 2011 16:35:53 +0000"  >&lt;p&gt;I&apos;m 100% behind removing twoLevelAccess, but I don&apos;t want to break compatibility.  Rather than removing calls like Schema.isTwoLevelAccessRequiredwe should mark them as deprecated and make them do nothing.&lt;/p&gt;</comment>
                            <comment id="12981906" author="daijy" created="Fri, 14 Jan 2011 20:04:52 +0000"  >&lt;p&gt;Yes, I will mark Schema.isTwoLevelAccessRequiredwe deprecate rather than remove it. This is exactly what Santhosh suggested as well.&lt;/p&gt;</comment>
                            <comment id="12987846" author="daijy" created="Fri, 28 Jan 2011 00:12:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-847&quot; title=&quot;Setting twoLevelAccessRequired field in a bag schema should not be required to access fields in the tuples of the bag&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-847&quot;&gt;&lt;del&gt;PIG-847&lt;/del&gt;&lt;/a&gt;-1.patch remove twoLevelAccess flag in new logical plan.&lt;/p&gt;</comment>
                            <comment id="12987850" author="daijy" created="Fri, 28 Jan 2011 00:16:31 +0000"  >&lt;p&gt;Review request:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/361/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/361/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12991539" author="rding" created="Mon, 7 Feb 2011 19:39:39 +0000"  >&lt;p&gt;+1.&lt;/p&gt;

&lt;p&gt;Notice schema display change between 0.8 and 0.9 for group/cogroup:&lt;/p&gt;

&lt;p&gt;0.8:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
b: {group: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,a: {a0: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,a1: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,a2: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;0.9:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
b: {group: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,a: {(a0: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,a1: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,a2: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12992085" author="daijy" created="Tue, 8 Feb 2011 18:22:09 +0000"  >&lt;p&gt;Patch committed to trunk.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12437538">PIG-998</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12469612" name="PIG-847-1.patch" size="23250" author="daijy" created="Fri, 28 Jan 2011 00:12:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Jan 2011 03:52:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>66328</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyajlz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95488</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>In outputSchema method of UDF, user no longer need to set two level access flag for a bag schema. Pig only do vertical slice of a bag. User can refer to a particular field of a bag, but there is no way to refer a particular row of a bag. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>