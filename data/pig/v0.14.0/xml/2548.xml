<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:59:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2548/PIG-2548.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2548] Support for providing parameters to python script</title>
                <link>https://issues.apache.org/jira/browse/PIG-2548</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;If I have an embedded pig script in python, there is no way to get user passed parameters in the python script.&lt;br/&gt;
Though &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2165&quot; title=&quot;Need a way to deal with params and param_file in embedded pig in python&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2165&quot;&gt;&lt;del&gt;PIG-2165&lt;/del&gt;&lt;/a&gt; adds the capability of reading these params in the pig script, from python it is still not possible.&lt;br/&gt;
It would be nice to have this feature if I have some sort of post processing happening in my python scrip based on the params.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12543646">PIG-2548</key>
            <summary>Support for providing parameters to python script</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="daijy">Daniel Dai</assignee>
                                    <reporter username="vivekp">Vivek Padmanabhan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Feb 2012 09:16:34 +0000</created>
                <updated>Wed, 20 Jun 2012 18:10:00 +0100</updated>
                            <resolved>Sat, 3 Mar 2012 02:18:55 +0000</resolved>
                                    <version>0.9.1</version>
                    <version>0.10.0</version>
                                    <fixVersion>0.10.0</fixVersion>
                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13214218" author="daijy" created="Thu, 23 Feb 2012 02:28:39 +0000"  >&lt;p&gt;How about passing command line arguments to python? In python&apos;s world, there is no parameter substitution, command line arguments is more familiar.&lt;/p&gt;</comment>
                            <comment id="13214848" author="vivekp" created="Thu, 23 Feb 2012 16:49:49 +0000"  >&lt;p&gt;Hi Daniel, our one intention is to run embedded pig with Oozie.&lt;br/&gt;
I think Oozie uses PigRunner.run(args, null); to run pig actions.&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc/incubator/oozie/branches/3.2/core/src/main/java/org/apache/oozie/action/hadoop/PigMain.java?view=log&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/incubator/oozie/branches/3.2/core/src/main/java/org/apache/oozie/action/hadoop/PigMain.java?view=log&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13215079" author="daijy" created="Thu, 23 Feb 2012 21:38:27 +0000"  >&lt;p&gt;Command line arguments also works in PigRunner. Here is my understanding of the problem:&lt;/p&gt;

&lt;p&gt;some.py:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
P = Pig.compile(&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;&quot;A = load &apos;$DATE&apos; as (name, age, gpa);store A into &apos;output&apos;;&quot;&lt;/span&gt;&quot;&quot;)
Q = P.bind()
result = Q.runSingle()
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; result.isSuccessful():
    print $DATE + &lt;span class=&quot;code-quote&quot;&gt;&quot; success&quot;&lt;/span&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;:
    print $DATE + &lt;span class=&quot;code-quote&quot;&gt;&quot; fail&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You want do a parameter substitution in pig:&lt;br/&gt;
pig -param DATE=20120223 some.py&lt;/p&gt;

&lt;p&gt;This currently only replaces DATE in Pig script (first occurrence) but not in Python (second/third occurrence). However, extending parameter substitution to Python is not great since Python programmer does not think of parameter substitution. Here is my proposal to use command line arguments to solve the problem:&lt;/p&gt;

&lt;p&gt;some.py:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
DATE = sys.argv[1];
P = Pig.compile(&lt;span class=&quot;code-quote&quot;&gt;&quot;A = load &apos;&quot;&lt;/span&gt; + DATE + &lt;span class=&quot;code-quote&quot;&gt;&quot;&apos; as (name, age, gpa);store A into &apos;output&apos;;&quot;&lt;/span&gt;)
Q = P.bind()
result = Q.runSingle()
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; result.isSuccessful():
    print DATE + &lt;span class=&quot;code-quote&quot;&gt;&quot; success&quot;&lt;/span&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;:
    print DATE + &lt;span class=&quot;code-quote&quot;&gt;&quot; fail&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can pass the command line arguments to Python:&lt;br/&gt;
pig some.py 20120223&lt;/p&gt;</comment>
                            <comment id="13218696" author="lih" created="Tue, 28 Feb 2012 23:32:20 +0000"  >&lt;p&gt;The proposed way of taking python parameters using sys.argv[] is the right way to solve the issue.&lt;br/&gt;
Could somebody implement this?&lt;/p&gt;

&lt;p&gt;Currently with python embedded pig, there is no way to get command line input parameters and no way to set proper exit code (JIRA 2558/2559) . This looks more like some kind of overall design issue.&lt;/p&gt;</comment>
                            <comment id="13221121" author="alangates" created="Fri, 2 Mar 2012 18:12:17 +0000"  >&lt;p&gt;+1.  Patch looks good.&lt;/p&gt;</comment>
                            <comment id="13221473" author="daijy" created="Sat, 3 Mar 2012 02:18:55 +0000"  >&lt;p&gt;Unit test pass. test-patch:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; -1 overall.  &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 @author.  The patch does not contain any @author tags.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 tests included.  The patch appears to include 6 new or modified tests.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     -1 release audit.  The applied patch generated 535 release audit warnings (more than the trunk&apos;s current 532 warnings).&lt;/p&gt;

&lt;p&gt;javadoc and release audit warning is unrelated.&lt;/p&gt;

&lt;p&gt;Patch committed to 0.10/trunk.&lt;/p&gt;</comment>
                            <comment id="13228497" author="elifinkelshteyn" created="Tue, 13 Mar 2012 16:32:41 +0000"  >&lt;p&gt;This is pretty awesome, but what can one do when wanting to use Python&apos;s getopt? Is there a pig substitute? When trying to do something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; getopt, sys                                                                                                                               
# explicitly &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; Pig class                                                                                                                    
from org.apache.pig.scripting &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; Pig                                                                                                         
                                                                                                                                                 
print sys.argv[1:]                                                                                                                               
options, remainder = getopt.getopt(sys.argv[1:], &apos;o:i:&apos;, [&apos;output=&apos;,                                                                             
                                                         &apos;verbose&apos;,                                                                              
                                                         &apos;input=&apos;,                                                                               
                                                         ])                                                                                      
options = dict(options)                                                                                                                          
print options                                                                                                                                    
                                                                                                                                                 
params = {&apos;input&apos; : options[&apos;--input&apos;] or options[&apos;-i&apos;] or &apos;&apos;,                                                                                   
          &apos;output&apos; : options[&apos;--output&apos;] or options[-&apos;o&apos;] or &apos;&apos;}                                                                                 
print params                                                                                                                                     
                                                                                                                                                 
print Pig.fs(&lt;span class=&quot;code-quote&quot;&gt;&quot;ls &quot;&lt;/span&gt; input)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;The getopt portion works fine when running through Python, but when running through pig, you wind up with:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[main] ERROR org.apache.pig.Main - ERROR 2999: Unexpected internal error. Encountered unexpected arguments on command line - please check the command line.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m thinking it would be quite nice to be able to pass named params to embedded pig, no?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12595260">PIG-2762</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12516733" name="PIG-2548-1.patch" size="5189" author="daijy" created="Thu, 1 Mar 2012 21:23:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Feb 2012 02:28:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>228885</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy3te7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>56086</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Python script has access to command line arguments with sys.argv.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>