<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:59:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-2765/PIG-2765.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-2765] Implementing RollupDimensions UDF and adding ROLLUP clause in CUBE operator</title>
                <link>https://issues.apache.org/jira/browse/PIG-2765</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Implement RollupDimensions UDF which performs aggregation from most detailed level of dimensions to the most general level (grand total) in hierarchical order. Provide support for ROLLUP clause in CUBE operator. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12595531">PIG-2765</key>
            <summary>Implementing RollupDimensions UDF and adding ROLLUP clause in CUBE operator</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12514233">PIG-2167</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="prasanth_j">Prasanth Jayachandran</assignee>
                                    <reporter username="prasanth_j">Prasanth Jayachandran</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Jun 2012 06:57:42 +0100</created>
                <updated>Fri, 22 Feb 2013 04:53:53 +0000</updated>
                            <resolved>Tue, 31 Jul 2012 06:21:20 +0100</resolved>
                                                    <fixVersion>0.11</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13399184" author="prasanth_j" created="Fri, 22 Jun 2012 08:29:26 +0100"  >&lt;p&gt;This patch contains the following features&lt;br/&gt;
1) RollupDimensions UDF&lt;br/&gt;
2) Support for ROLLUP clause in CUBE operator&lt;br/&gt;
3) Testcases for both&lt;br/&gt;
4) Removes &quot;dimensions::&quot; namespace from the output schema of cube operator&lt;/p&gt;

&lt;p&gt;The syntax for the CUBE operator is now&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
alias = CUBE rel BY { CUBE | ROLLUP } col_ref [, { CUBE | ROLLUP } col_ref ...]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
out = CUBE inp BY CUBE(a,b), ROLLUP(c,d);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the above code will generate following combinations of aggregations for each input tuples&lt;br/&gt;
(a,b,c,d)&lt;br/&gt;
(a,NULL,c,d)&lt;br/&gt;
(NULL,b,c,d)&lt;br/&gt;
(NULL,NULL,c,d)&lt;br/&gt;
(a,b,c,NULL)&lt;br/&gt;
(a,NULL,c,NULL)&lt;br/&gt;
(NULL,b,c,NULL)&lt;br/&gt;
(NULL,NULL,c,NULL)&lt;br/&gt;
(a,b,NULL,NULL)&lt;br/&gt;
(a,NULL,NULL,NULL)&lt;br/&gt;
(NULL,b,NULL,NULL)&lt;br/&gt;
(NULL,NULL,NULL,NULL)&lt;/p&gt;


&lt;p&gt;Schema for &quot;out&quot; will be &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
out: {group: (a: bytearray,b: bytearray,c: bytearray,d: bytearray),cube: {(a: bytearray,b: bytearray,c: bytearray,d: bytearray)}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NOTE: NULL value handling is not available in this patch. Patch for legitimate NULL value handling is available at &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2726&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PIG-2726&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13399185" author="prasanth_j" created="Fri, 22 Jun 2012 08:36:40 +0100"  >&lt;p&gt;Review board request for this patch: &lt;a href=&quot;https://reviews.apache.org/r/5521/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5521/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13406075" author="prasanth_j" created="Tue, 3 Jul 2012 22:38:20 +0100"  >&lt;p&gt;Since the second version of this patch is generated using git, I have created a new review board request &lt;a href=&quot;https://reviews.apache.org/r/5733/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5733/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please let me know in case of any issues. &lt;/p&gt;</comment>
                            <comment id="13410648" author="dvryaboy" created="Tue, 10 Jul 2012 19:15:39 +0100"  >&lt;p&gt;I&apos;ll review tonight. FYI you can update old reviews, then I can just look at the bits that changed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13410672" author="prasanth_j" created="Tue, 10 Jul 2012 19:30:11 +0100"  >&lt;p&gt;Since the old review is based on SVN trunk, I am not able to upload git patch to it. So I created a separate RB request with git trunk (pig-git) and uploaded the patch. Also, I uploaded &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2726&quot; title=&quot;Handling legitimate NULL values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2726&quot;&gt;&lt;del&gt;PIG-2726&lt;/del&gt;&lt;/a&gt; patch as parent diff (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2765&quot; title=&quot;Implementing RollupDimensions UDF and adding ROLLUP clause in CUBE operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2765&quot;&gt;&lt;del&gt;PIG-2765&lt;/del&gt;&lt;/a&gt; depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2726&quot; title=&quot;Handling legitimate NULL values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2726&quot;&gt;&lt;del&gt;PIG-2726&lt;/del&gt;&lt;/a&gt;) for this patch, which is supported only for git and other DVCS. Couldn&apos;t find a better way to handle this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; . Sorry for the inconvenience. &lt;/p&gt;</comment>
                            <comment id="13411840" author="prasanth_j" created="Wed, 11 Jul 2012 19:47:13 +0100"  >&lt;p&gt;Updated the old review with a new patch. Please use the old review &lt;a href=&quot;https://reviews.apache.org/r/5521/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5521/&lt;/a&gt; to look at the changed bits based on your review comment. Ignore my previous comment too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13411842" author="prasanth_j" created="Wed, 11 Jul 2012 19:48:22 +0100"  >&lt;p&gt;Added svn patch with changes based on Dmitriy&apos;s code review comments.&lt;/p&gt;</comment>
                            <comment id="13425531" author="dvryaboy" created="Tue, 31 Jul 2012 06:19:06 +0100"  >&lt;p&gt;Ok this looks good to commit. Please add release notes to this ticket (or to documentation, via a different ticket) that explain what Rollup does, how to use them, and what the syntax looks like.&lt;/p&gt;</comment>
                            <comment id="13425532" author="dvryaboy" created="Tue, 31 Jul 2012 06:21:20 +0100"  >&lt;p&gt;Committed to trunk (0.11)&lt;/p&gt;</comment>
                            <comment id="13427017" author="prasanth_j" created="Thu, 2 Aug 2012 00:55:44 +0100"  >&lt;p&gt;Thanks Dmitriy for committing the code. I will add release notes to this ticket. I will also create another ticket for documentation purpose. &lt;/p&gt;</comment>
                            <comment id="13427021" author="prasanth_j" created="Thu, 2 Aug 2012 01:02:48 +0100"  >
&lt;p&gt;RELEASE NOTES&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Introduction&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Data cube&lt;/b&gt;&lt;br/&gt;
In Online Analytical Processing Systems (OLAP), a data cube is a way of organizing and visualizing multi-dimensional data to get useful insights over some measure of interest. Measure is a term for numerical facts that are analyzed against various dimensions of data. Based on the type of aggregations performed, measures can be algebraic (like SUM, COUNT, MAX etc.) or holistic (TOP-K, MEDIAN etc.). The following articles on wikipedia provides good illustrations for data cubes&lt;br/&gt;
&lt;a href=&quot;http://en.wikipedia.org/wiki/Online_analytical_processing&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Online_analytical_processing&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://en.wikipedia.org/wiki/OLAP_cube&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/OLAP_cube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Cube operation&lt;/b&gt;&lt;br/&gt;
For a specified set of dimensions, cube operations computes aggregates for all possbile combinations of group by dimensions. For example, CUBE(product, location) will generate &lt;/p&gt;
{(product,location), (product,null), (null,location), (null,null)}
&lt;p&gt; combinations for all tuples in product and location dimensions, where (null, null) represents the grand total. &lt;br/&gt;
The number of group by combinations generated by cube for n dimensions will be 2^n. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Rollup operation&lt;/b&gt;&lt;br/&gt;
For a specified set of dimensions, rollup operations computes multiple levels of aggregates based on hierarchical ordering. For example, ROLLUP(region,state, city) will generate &lt;/p&gt;
{(region, state, city), (region, state, null), (region, null, null), (null, null, null)}
&lt;p&gt; combinations for all tuples in region, state and city dimensions. It computes aggregates from the most-details level (region, state, city) to the grand total (null, null, null). Rollup is useful when there is hierarchical ordering on the dimensions. &lt;br/&gt;
The number of group by combinations generated by rollup for n dimensions will be n+1.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Cubing in Pig&lt;/b&gt;&lt;br/&gt;
Pig supports CUBE operator which can be used to perform cube or rollup operations. The patches (&lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2710&quot; title=&quot;Implement Naive CUBE operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2710&quot;&gt;&lt;del&gt;PIG-2710&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2765&quot; title=&quot;Implementing RollupDimensions UDF and adding ROLLUP clause in CUBE operator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2765&quot;&gt;&lt;del&gt;PIG-2765&lt;/del&gt;&lt;/a&gt;) adds syntactic sugar to the existing builtin CubeDimensions and RollupDimensions UDF. With this new addition, aggregations across multiple dimensions can be easily represented using CUBE operator. Following example illustrates the CUBE operator usage:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Syntax&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;outalias = CUBE inalias BY { CUBE expression | ROLLUP expression }, [ CUBE expression | ROLLUP expression ] [PARALLEL n];&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;outalias - The name of the output relation&lt;br/&gt;
inalias - The name of the input relation&lt;br/&gt;
CUBE, BY, ROLLUP - keywords&lt;br/&gt;
expression - projections (dimensions) of the relation. &lt;br/&gt;
PARALLEL n - Increase the parallelism of a job by specifying the number of reduce tasks, n. The default value for n is 1 (one reduce task).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Basic usage of CUBE operation&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;salesinp = LOAD &apos;/pig/data/salesdata&apos; USING PigStorage(&apos;,&apos;) as (product:chararray, year:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, region:chararray, state:chararray, city:chararray, sales:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;); 
cubedinp = CUBE salesinp BY CUBE(product,year);
result = FOREACH cubedinp GENERATE FLATTEN(group), SUM(cube.sales) as totalsales;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Sample output&lt;/b&gt;&lt;br/&gt;
For a sample input tuple (car, 2012, midwest, ohio, columbus, 4000), the above query with cube operation will output&lt;br/&gt;
(car,2012,4000)&lt;br/&gt;
(car,,4000)&lt;br/&gt;
(,2012,4000)&lt;br/&gt;
(,,4000)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Output schema&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;grunt&amp;gt; describe cubedinp;
cubedinp: {group: (product: chararray,year: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;),cube: {(product: chararray,year: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,region: chararray,state: chararray,city: chararray,sales: &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note the second column, &#8216;cube&#8217; field which is a bag of all tuples that belong to &#8216;group&#8217;. Also note that the measure attribute &#8216;sales&#8217; along with other unused dimensions in load statement are pushed down so that it can be referenced later while computing aggregates on the measure, like in this case SUM(cube.sales). &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Basic usage of ROLLUP operation&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;salesinp = LOAD &apos;/pig/data/salesdata&apos; USING PigStorage(&apos;,&apos;) as (product:chararray, year:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, region:chararray, state:chararray, city:chararray, sales:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;); 
rolledup = CUBE salesinp BY ROLLUP(region,state,city);
result = FOREACH rolledup GENERATE FLATTEN(group), SUM(cube.sales) as totalsales;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Sample output&lt;/b&gt;&lt;br/&gt;
For a sample input tuple (car, 2012, midwest, ohio, columbus, 4000), the above query with rollup operation will output&lt;br/&gt;
(midwest,ohio,columbus,4000)&lt;br/&gt;
(midwest,ohio,,4000)&lt;br/&gt;
(midwest,,,4000)&lt;br/&gt;
(,,,4000)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Output schema&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;grunt&amp;gt; describe rolledup;
rolledup: {group: (region: chararray,state: chararray,city: chararray),cube: {(region: chararray,state: chararray,city: chararray,product: chararray,year: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,sales: &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Basic usage of CUBE and ROLLUP operation combined&lt;/b&gt;&lt;br/&gt;
If CUBE and ROLLUP operations are used together, the output groups will be the cross product of all groups generated by cube and rollup operation. If there are m dimensions in cube operations and n dimensions in rollup operation then overall number of combinations will be (2^m) * (n+1). &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;salesinp = LOAD &apos;/pig/data/salesdata&apos; USING PigStorage(&apos;,&apos;) as (product:chararray, year:&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, region:chararray, state:chararray, city:chararray, sales:&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;); 
cubed_and_rolled = CUBE salesinp BY CUBE(product,year), ROLLUP(region, state, city);
result = FOREACH cubed_and_rolled GENERATE FLATTEN(group), SUM(cube.sales) as totalsales;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Sample output&lt;/b&gt;&lt;br/&gt;
For a sample input tuple (car, 2012, midwest, ohio, columbus, 4000), the above query with cube and rollup operation will output&lt;br/&gt;
(car,2012,midwest,ohio,columbus,4000)&lt;br/&gt;
(car,2012,midwest,ohio,,4000)&lt;br/&gt;
(car,2012,midwest,,,4000)&lt;br/&gt;
(car,2012,,,,4000)&lt;br/&gt;
(car,,midwest,ohio,columbus,4000)&lt;br/&gt;
(car,,midwest,ohio,,4000)&lt;br/&gt;
(car,,midwest,,,4000)&lt;br/&gt;
(car,,,,,4000)&lt;br/&gt;
(,2012,midwest,ohio,columbus,4000)&lt;br/&gt;
(,2012,midwest,ohio,,4000)&lt;br/&gt;
(,2012,midwest,,,4000)&lt;br/&gt;
(,2012,,,,4000)&lt;br/&gt;
(,,midwest,ohio,columbus,4000)&lt;br/&gt;
(,,midwest,ohio,,4000)&lt;br/&gt;
(,,midwest,,,4000)&lt;br/&gt;
(,,,,,4000)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Output schema&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;grunt&amp;gt; describe cubed_and_rolled;
cubed_and_rolled: {group: (product: chararray,year: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,region: chararray,state: chararray,city: chararray),cube: {(product: chararray,year: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;,region: chararray,state: chararray,city: chararray,sales: &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Handling null values in dimensions&lt;/b&gt;&lt;br/&gt;
Since null values are used to represent subtotals in cube and rollup operation, in order to differentiate the legitimate null values that already exists as dimension values, CUBE operator converts any null values in dimensions to &quot;unknown&quot; value before performing cube or rollup operation. For example, for CUBE(product,location) with a sample tuple (car,null) the output will be &lt;/p&gt;
{(car,unknown), (car,null), (null,unknown), (null,null)}
&lt;p&gt;. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12533009" name="PIG-2765.1.patch" size="45256" author="prasanth_j" created="Fri, 22 Jun 2012 08:30:09 +0100"/>
                            <attachment id="12534984" name="PIG-2765.2.git.patch" size="91129" author="prasanth_j" created="Tue, 3 Jul 2012 22:31:37 +0100"/>
                            <attachment id="12536091" name="PIG-2765.2.patch" size="89874" author="prasanth_j" created="Wed, 11 Jul 2012 19:47:40 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jul 2012 18:15:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>256401</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyazon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98092</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>