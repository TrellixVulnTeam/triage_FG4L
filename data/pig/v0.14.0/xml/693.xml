<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:50:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-693/PIG-693.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-693] Parameter to UDF which is an alias returned in another UDF in nested foreach causes incorrect results</title>
                <link>https://issues.apache.org/jira/browse/PIG-693</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Consider the following Pig Script&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
register myudf.jar;

A = load &apos;one.txt&apos; using PigStorage() as ( one: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ); --use &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; dummy file to start execution

B = foreach A {
        dec = myudf.URLDECODE(&apos;hello&apos;);
        str1 = myudf.REPLACEALL(dec, &apos;[\\u0000-\\u0020]&apos;, &apos; &apos;); -- ERROR
        str2 = myudf.REPLACEALL(&apos;hello&apos;, &apos;[\\u0000-\\u0020]&apos;, &apos; &apos;);
        generate
                dec,
                str1,
                str2;
        };
describe B;

dump B;

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where one.txt is a file which contains number one (1) for starting execution of the Pig script!!&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
describe B; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; returns the following:&lt;/p&gt;

&lt;p&gt;B: &lt;/p&gt;
{urldecode_9: chararray,replaceall_urldecode_10_11: chararray,replaceall_12: chararray}

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
dump B;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;returns &lt;/p&gt;

&lt;p&gt;(hello,&lt;span class=&quot;error&quot;&gt;&amp;#91;\u0000-\u0020&amp;#93;&lt;/span&gt;,hello)&lt;/p&gt;

&lt;p&gt;The result should be:&lt;/p&gt;



&lt;p&gt;There is a workaround for the same, &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
register myudf.jar;

A = load &apos;one.txt&apos; using PigStorage() as ( one: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; );

B = foreach A {
        dec = myudf.URLDECODE(&apos;hello&apos;);
        generate
                dec as dec,
                myudf.REPLACEALL(dec, &apos;[\\u0000-\\u0020]&apos;, &apos; &apos;) as str1,
                myudf.REPLACEALL(&apos;hello&apos;, &apos;[\\u0000-\\u0020]&apos;, &apos; &apos;) as str2;
        };
describe B;

dump B;

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
dump B;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;returns (hello,hello,hello)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12415911">PIG-693</key>
            <summary>Parameter to UDF which is an alias returned in another UDF in nested foreach causes incorrect results</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thejas">Thejas M Nair</assignee>
                                    <reporter username="viraj">Viraj Bhat</reporter>
                        <labels>
                    </labels>
                <created>Mon, 2 Mar 2009 09:21:21 +0000</created>
                <updated>Thu, 25 Mar 2010 00:12:45 +0000</updated>
                            <resolved>Sat, 21 Mar 2009 01:30:40 +0000</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.3.0</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12677938" author="viraj" created="Mon, 2 Mar 2009 09:33:19 +0000"  >&lt;p&gt;Eval UDF&lt;/p&gt;</comment>
                            <comment id="12677939" author="viraj" created="Mon, 2 Mar 2009 09:35:04 +0000"  >&lt;p&gt;EVAL UDF&lt;/p&gt;</comment>
                            <comment id="12677940" author="viraj" created="Mon, 2 Mar 2009 09:35:53 +0000"  >&lt;p&gt;Test input file to start execution&lt;/p&gt;</comment>
                            <comment id="12681434" author="thejas" created="Thu, 12 Mar 2009 18:34:30 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;All subclasses of LogicalOperator(LOP) (except LOConst,LOProject) no longer maintain a local reference of their inputs. getOperand()/getLhs()/getArguments() etc will access the  predecessor in the graph each time. This will avoid problems caused by predecessor and input arguments reference going out of sync.&lt;/li&gt;
	&lt;li&gt;In above classes, the functions for setting the input arguments have been removed. The constructor also no longer takes arguments as input.&lt;/li&gt;
	&lt;li&gt;LogToPhyTranslationVisitor - Checking if getPredecessor() is null before calling getOperand().getType(). (Fixes a negative test case failure).&lt;/li&gt;
	&lt;li&gt;TypeCheckingVisitor - Insertion of casts in LOP s uses the  OperatorPlan.insertBetween() function. Common logic used to insert cast in LOPs have been moved to new insertCast(..) function.&lt;/li&gt;
	&lt;li&gt;LOConst does not have above change because its input is contained within the object, not on the graph. LOProject does not change because input  need not be predecessor in graph if input is relational operator.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12681534" author="thejas" created="Thu, 12 Mar 2009 22:52:38 +0000"  >&lt;p&gt;Unit test for this bug.&lt;br/&gt;
This patch is in addition to the patch file attached earlier.&lt;/p&gt;</comment>
                            <comment id="12681857" author="sms" created="Fri, 13 Mar 2009 18:34:46 +0000"  >&lt;p&gt;I will be reviewing this patch.&lt;/p&gt;</comment>
                            <comment id="12681913" author="sms" created="Fri, 13 Mar 2009 22:14:37 +0000"  >&lt;p&gt;Review comments on 693.patch&lt;/p&gt;

&lt;p&gt;Overall comment:&lt;/p&gt;

&lt;p&gt;Instead of removing the private member variables and the associated constructors, its better to mark the constructor and the other methods as deprecated. If there are developers who are using these sources then compiler warning messages will help them move the code instead of forcing them to make immediate changes.&lt;/p&gt;

&lt;p&gt;Specific comments:&lt;/p&gt;

&lt;p&gt;Index: src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/LogToPhyTranslationVisitor.java&lt;br/&gt;
=====================================================================================&lt;/p&gt;

&lt;p&gt;Is it required to have the complete package name?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        List&amp;lt;org.apache.pig.impl.logicalLayer.ExpressionOperator&amp;gt; fromList = func.getArguments();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Index: src/org/apache/pig/impl/logicalLayer/RemoveRedundantOperators.java&lt;br/&gt;
=============================================================&lt;/p&gt;

&lt;p&gt;1. Can you add an error code and an appropriate message to the VisitorException ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+                            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VisitorException(pe.getMessage(),pe);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Index: src/org/apache/pig/impl/logicalLayer/validators/TypeCheckingVisitor.java&lt;br/&gt;
===================================================================&lt;br/&gt;
1. Instead of node use node.getClass().getSimpleName(). Otherwise, users will see a huge string with contains the operator key and scope. This is useful for developers but not for users.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Problem with inserting &lt;span class=&quot;code-keyword&quot;&gt;cast&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + node + &lt;span class=&quot;code-quote&quot;&gt;&quot; in plan.&quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Index: src/org/apache/pig/impl/plan/OperatorPlan.java&lt;br/&gt;
===========================================&lt;br/&gt;
1.  Use Integer instead of string. Integer, Long, etc. can handle null and toString will ensure that null is printed as &quot;null&quot;.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; size = &lt;span class=&quot;code-quote&quot;&gt;&quot; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &quot;&lt;/span&gt;;
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(preds != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
+                size = ((&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;)preds.size()).toString();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2. I see that you are following the convention of the source for throwing exceptions. It will be good if you can include an error code, not log the error and just throw the exception.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            PlanException pe = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PlanException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Attempt to remove &quot;&lt;/span&gt; +
+                    &lt;span class=&quot;code-quote&quot;&gt;&quot; and reconnect &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; node with  &quot;&lt;/span&gt; + size +
+            &lt;span class=&quot;code-quote&quot;&gt;&quot; predecessors.&quot;&lt;/span&gt;);
+            log.error(pe.getMessage());
+            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; pe;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;//checking pre-requisite conditions
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (C == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || C.size() == 0) {
+            PlanException pe = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PlanException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Attempt to remove &quot;&lt;/span&gt; +
+            &lt;span class=&quot;code-quote&quot;&gt;&quot; and reconnect &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; node with no successors.&quot;&lt;/span&gt;);
+            log.error(pe.getMessage());
+            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; pe;
+        }   

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3. OperatorPlan is a generic class and should not hold any references to LogicalOperator, ExpressionOperator or LOProject. In addition, the last section of removeAndReconnectMultiSucc checks for LOProject. This should instead go into the patchInputReference method in RemoveRedundantOperators.java.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.pig.impl.logicalLayer.ExpressionOperator;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.pig.impl.logicalLayer.LOProject;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.pig.impl.logicalLayer.LogicalOperator;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-comment&quot;&gt;//special handling of LOProject because its getExpression() does
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// need not be same as getPredecessors(LOProject)
&lt;/span&gt;+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(c &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; LOProject){
+                LOProject lop = (LOProject)c;
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(B == lop.getExpression()){
+                    lop.setExpression((LogicalOperator)B);
+                }
+            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4. The removeAndReconnectMultiSucc does not take into account successors of A. If A has other successors apart from B then the following code will remove the edge from A to the other successors.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// Do A.succesors = B.successors(ie C)
&lt;/span&gt;+        mFromEdges.removeKey(A);
+        mFromEdges.put(A,C);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;5. Minor comment, the use of variables A, B, C should be changed to nodeA, nodeB, nodeC to distinguish between types (like E) and instances (like A, B, C). Its a little bit confusing.&lt;/p&gt;</comment>
                            <comment id="12681944" author="sms" created="Fri, 13 Mar 2009 23:56:15 +0000"  >&lt;p&gt;Review comments for 693.utest.patch&lt;/p&gt;

&lt;p&gt;Index: test/org/apache/pig/test/TestEvalPipeline2.java&lt;br/&gt;
==========================================&lt;/p&gt;

&lt;p&gt;Use org.apache.pig.test.utils.Idenity instead of creating another IdenityUDF.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class IdentityUdf 
+        &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; EvalFunc&amp;lt;Tuple&amp;gt; {
+        
+        &lt;span class=&quot;code-comment&quot;&gt;// Expects 3 chararrays in input tuple and returns the 3 chararrays in 
&lt;/span&gt;+        &lt;span class=&quot;code-comment&quot;&gt;// output tuple
&lt;/span&gt;+        @Override
+        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Tuple exec(Tuple input) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (input == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || input.size() == 0)
+                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; input ;
+            
+        }
+       
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12681960" author="thejas" created="Sat, 14 Mar 2009 00:39:24 +0000"  >&lt;p&gt;Re: Review comments on 693.patch &lt;br/&gt;
 Re: Overall comment:  The private member variables are not part of the interface, so removing them should be fine.  I can add deprecated versions of the constructor and set methods. But is it OK to keep even deprecated versions of them around if we not using the input parameters passed , or in case of set methods they are no-op ? &lt;/p&gt;

&lt;p&gt;Re Complete package name used in Index: src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/LogToPhyTranslationVisitor.java ,&lt;br/&gt;
There are two ExpressionOperator classes used in there, from - org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator; and org.apache.pig.impl.logicalLayer.ExpressionOperator. Either of those have to be used with full package name. The one logicalLayer one is only used once, so I am using full name for it.&lt;/p&gt;


&lt;p&gt;Re: Index: src/org/apache/pig/impl/logicalLayer/validators/TypeCheckingVisitor.java , &lt;br/&gt;
If i use node.getClass().getSimpleName(), it will print names like LOOr, LOBinCond which are also not very user friendly. I think we should change the name() function in these classes to not print the scope.&lt;/p&gt;

&lt;p&gt;Re: Index: src/org/apache/pig/impl/plan/OperatorPlan.java &lt;br/&gt;
1. Not sure if i understood what you meant there . The following code will not work - &lt;br/&gt;
        Integer i = null;&lt;br/&gt;
        System.out.println(i.toString());&lt;/p&gt;

&lt;p&gt;( I am reviewing rest of the suggestions.)&lt;/p&gt;</comment>
                            <comment id="12682340" author="sms" created="Mon, 16 Mar 2009 15:55:15 +0000"  >&lt;p&gt;1. If you deprecate the constructors then you need to re-instate the private member variables. You can ignore this comment considering the fact that all uses of this class are inside Pig for now.&lt;/p&gt;

&lt;p&gt;2. Ok. Its fine for now.&lt;/p&gt;

&lt;p&gt;3. Changing name() will have implications on existing test cases. Its better to use node.getClass().geSimpletName(). Its more user friendly than using the node.toString() which provides details which cannot be understood by users.&lt;/p&gt;

&lt;p&gt;4. Do not use i.toString(). Just use the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; i = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(i);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12682344" author="thejas" created="Mon, 16 Mar 2009 16:01:48 +0000"  >&lt;p&gt;Re: Index: src/org/apache/pig/impl/plan/OperatorPlan.java&lt;br/&gt;
I will make the changes you suggested in comments 2,3,4,5 in a new patch.&lt;/p&gt;

&lt;p&gt;Thanks for reviewing the code and for the comments.&lt;/p&gt;</comment>
                            <comment id="12683561" author="thejas" created="Thu, 19 Mar 2009 18:46:08 +0000"  >&lt;p&gt;Re:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Changing name() will have implications on existing test cases. Its better to use node.getClass().geSimpletName(). Its more user friendly than using the node.toString() which provides details which cannot be understood by users.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I have created a separate JIRA - &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-726&quot; title=&quot;Stop printing scope as part of Operator.toString()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-726&quot;&gt;&lt;del&gt;PIG-726&lt;/del&gt;&lt;/a&gt; to make node.toString() more user friendly. After than change, it will be more user friendly than printing class name. I will address that JIRA soon.&lt;/p&gt;</comment>
                            <comment id="12683660" author="thejas" created="Thu, 19 Mar 2009 22:35:38 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-727&quot; title=&quot;OperatorPlan exceptions don&amp;#39;t use any of the new recommended constructors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-727&quot;&gt;PIG-727&lt;/a&gt; to address exception creation in OperatorPlan.java &lt;/p&gt;</comment>
                            <comment id="12683940" author="thejas" created="Fri, 20 Mar 2009 17:07:49 +0000"  >&lt;p&gt;Updated patch incorporating changes suggested in code review . &lt;br/&gt;
OperatorPlan.java &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;using Integer for size instead of string&lt;/li&gt;
	&lt;li&gt;removed imports of LogicalOperator and subclasses&lt;/li&gt;
	&lt;li&gt;moved special handling of LOProject to patchInputReference method in RemoveRedundantOperators.java&lt;/li&gt;
	&lt;li&gt;removeAndReconnectMultiSucc()  takes into account other successors of A.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;TestEvalPipeline2.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Using org.apache.pig.test.utils.Idenity instead of  IdenityUDF.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12683943" author="thejas" created="Fri, 20 Mar 2009 17:10:15 +0000"  >&lt;p&gt;Patch file 693.2.patch replaces all earlier patch files.&lt;/p&gt;</comment>
                            <comment id="12685406" author="sms" created="Sat, 21 Mar 2009 01:30:40 +0000"  >&lt;p&gt;Patch has been committed. Thanks for the fix Thejas. Good work on cleaning up the type checker.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12402676" name="693.2.patch" size="106659" author="thejas" created="Fri, 20 Mar 2009 17:07:48 +0000"/>
                            <attachment id="12402073" name="693.patch" size="103660" author="thejas" created="Thu, 12 Mar 2009 18:34:30 +0000"/>
                            <attachment id="12402095" name="693.utest.patch" size="2635" author="thejas" created="Thu, 12 Mar 2009 22:52:38 +0000"/>
                            <attachment id="12401227" name="REPLACEALL.java" size="1228" author="viraj" created="Mon, 2 Mar 2009 09:35:04 +0000"/>
                            <attachment id="12401226" name="URLDECODE.java" size="950" author="viraj" created="Mon, 2 Mar 2009 09:33:19 +0000"/>
                            <attachment id="12401228" name="one.txt" size="2" author="viraj" created="Mon, 2 Mar 2009 09:35:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Mar 2009 18:34:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164269</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyahsv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>95195</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>