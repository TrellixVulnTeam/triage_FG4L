<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:48:36 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3341/PIG-3341.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3341] Strict datetime parsing and improve performance of loading datetime values</title>
                <link>https://issues.apache.org/jira/browse/PIG-3341</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;The performance of loading datetime values can be improved by about 25% by moving a single line in ToDate.java:&lt;/p&gt;

&lt;p&gt;    public static DateTimeZone extractDateTimeZone(String dtStr) {&lt;br/&gt;
      Pattern pattern = Pattern.compile(&quot;(Z|(?&amp;lt;=(T&lt;span class=&quot;error&quot;&gt;&amp;#91;0-9\\.:&amp;#93;&lt;/span&gt;&lt;/p&gt;
{0,12}))((\\+|-)&lt;br class=&quot;atl-forced-newline&quot; /&gt;d{2}(:?&lt;br class=&quot;atl-forced-newline&quot; /&gt;d{2})?))$&quot;);;&lt;br/&gt;
&lt;br/&gt;
should become:&lt;br/&gt;
&lt;br/&gt;
    static Pattern pattern = Pattern.compile(&quot;(Z|(?&amp;lt;=(T&lt;span class=&quot;error&quot;&gt;&amp;#91;0-9\\.:&amp;#93;&lt;/span&gt;{0,12}
&lt;p&gt;))((\\+|-)&lt;br class=&quot;atl-forced-newline&quot; /&gt;d&lt;/p&gt;
{2}(:?&lt;br class=&quot;atl-forced-newline&quot; /&gt;d{2}
&lt;p&gt;)?))$&quot;);&lt;br/&gt;
    public static DateTimeZone extractDateTimeZone(String dtStr) {&lt;/p&gt;

&lt;p&gt;There is no need to recompile the regular expression for every value. I&apos;m not sure if this function is ever called concurrently, but Pattern objects are thread-safe anyways.&lt;/p&gt;

&lt;p&gt;As a test, I created a file of 10M timestamps:&lt;/p&gt;

&lt;p&gt;  for i in 0..10000000&lt;br/&gt;
    puts &apos;2000-01-01T00:00:00+23&apos;&lt;br/&gt;
  end&lt;/p&gt;

&lt;p&gt;I then ran this script:&lt;/p&gt;

&lt;p&gt;  grunt&amp;gt; A = load &apos;data&apos; as (a:datetime); B = filter A by a is null; dump B;&lt;/p&gt;

&lt;p&gt;Before the change it took 160s.&lt;br/&gt;
After the change, the script took 120s.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;Another performance improvement can be made for invalid datetime values. If a datetime value is invalid, an exception is created and thrown, which is a costly way to fail a validity check. To test the performance impact, I created 10M invalid datetime values:&lt;/p&gt;

&lt;p&gt;  for i in 0..10000000&lt;br/&gt;
    puts &apos;2000-99-01T00:00:00+23&apos;&lt;br/&gt;
  end&lt;/p&gt;

&lt;p&gt;In this test, the regex pattern was always recompiled. I then ran this script:&lt;/p&gt;

&lt;p&gt;  grunt&amp;gt; A = load &apos;data&apos; as (a:datetime); B = filter A by a is not null; dump B;&lt;/p&gt;

&lt;p&gt;The script took 190s.&lt;/p&gt;

&lt;p&gt;I understand this could be considered an edge case and might not be worth changing. However, if there are use cases where invalid dates are part of normal processing, then you might consider fixing this.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12650277">PIG-3341</key>
            <summary>Strict datetime parsing and improve performance of loading datetime values</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rohini">Rohini Palaniswamy</assignee>
                                    <reporter username="patc888">pat chan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 May 2013 07:11:55 +0100</created>
                <updated>Mon, 14 Oct 2013 17:46:44 +0100</updated>
                            <resolved>Thu, 13 Jun 2013 14:07:41 +0100</resolved>
                                    <version>0.11.1</version>
                                    <fixVersion>0.12.0</fixVersion>
                    <fixVersion>0.11.2</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13671201" author="cheolsoo" created="Fri, 31 May 2013 07:34:37 +0100"  >&lt;p&gt;This is fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3339&quot; title=&quot;Move pattern compilation in ToDate as a static variable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3339&quot;&gt;&lt;del&gt;PIG-3339&lt;/del&gt;&lt;/a&gt;, isn&apos;t it?&lt;/p&gt;</comment>
                            <comment id="13672004" author="patc888" created="Sat, 1 Jun 2013 07:55:19 +0100"  >&lt;p&gt;Yes, it looks like 3339 addresses this issue.&lt;br/&gt;
However, there is possibly an even better improvement.&lt;br/&gt;
By rewriting:&lt;/p&gt;

&lt;p&gt;    @Override&lt;br/&gt;
    public DateTime bytesToDateTime(byte[] b) throws IOException {&lt;br/&gt;
        if (b == null) &lt;/p&gt;
{
            return null;
        }&lt;br/&gt;
        try {&lt;br/&gt;
            DateTimeZone dtz = ToDate.extractDateTimeZone(dtStr);&lt;br/&gt;
            if (dtz == null) {
                return new DateTime(dtStr);
            } else {
                return new DateTime(dtStr, dtz);
            }&lt;br/&gt;
&lt;br/&gt;
to &lt;br/&gt;
&lt;br/&gt;
    private static final DateTimeFormatter isoDateTimeFormatter &lt;br/&gt;
      = ISODateTimeFormat.dateOptionalTimeParser().withOffsetParsed();&lt;br/&gt;
&lt;br/&gt;
    @Override&lt;br/&gt;
    public DateTime bytesToDateTime(byte[] b) throws IOException {&lt;br/&gt;
        if (b == null) {
            return null;
        }
&lt;p&gt;        try {&lt;br/&gt;
            String dtStr = new String(b);&lt;br/&gt;
            return isoDateTimeFormatter.parseDateTime(dtStr);&lt;/p&gt;

&lt;p&gt;you will see another 2X performance improvement. The static formatter is thread-safe.&lt;/p&gt;

&lt;p&gt;Running the test case with this change now take 60s.&lt;br/&gt;
This is half the time of the already optimized Pattern fix.&lt;/p&gt;

&lt;p&gt;Moreover, it turns out that the regular expression has a bug.&lt;br/&gt;
In particular, the time part can be more than 12 character long.&lt;br/&gt;
And when tickled, will produced corrupted datetime values.&lt;br/&gt;
The proposed change will fix this bug.&lt;/p&gt;</comment>
                            <comment id="13672008" author="cheolsoo" created="Sat, 1 Jun 2013 08:30:19 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=patc888&quot; class=&quot;user-hover&quot; rel=&quot;patc888&quot;&gt;pat chan&lt;/a&gt;, thank you for the clarification. Do you mind submitting a patch for what you propose?&lt;/p&gt;</comment>
                            <comment id="13672631" author="rohini" created="Sun, 2 Jun 2013 19:27:08 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=patc888&quot; class=&quot;user-hover&quot; rel=&quot;patc888&quot;&gt;pat chan&lt;/a&gt;,&lt;br/&gt;
   Using a known formatter instead of doing a regular expression on our own is a better thing. Already saw that using smaller z for timezone instead of Z does not work correctly. ToDate.extractDateTimeZone() is called in many places. It would be good to fix all the places to call a new method ToDate.extractDateTime() which returns DateTime directly. And I think we should put this patch in 0.11.2 as it not only fixes performance, but also fixes corrupted values.&lt;/p&gt;

&lt;p&gt;Added you as a Contributor to pig. If you will be putting up a patch, please assign the jira to yourself. Else I can work on this jira. &lt;/p&gt;</comment>
                            <comment id="13672719" author="patc888" created="Mon, 3 Jun 2013 00:32:50 +0100"  >&lt;p&gt;Before making the fix, I think there needs to be a little more clarity around exactly what formats are supported. For example, pig 0.11.1 currently supports datetime strings with no date - &quot;T00:00:00&quot; produces a date in 1970. Is this intentional? &lt;/p&gt;

&lt;p&gt;The general issue is that the actual implementation supports many more formats than is specified in the iso8601 profile &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/NOTE-datetime&lt;/a&gt;. What is the specified policy regarding these extra formats? I see three choices:&lt;/p&gt;

&lt;p&gt;1. specify precisely the entire range of supported formats. In the implementation I submitted above, the spec (taken from joda docs) is:&lt;/p&gt;

&lt;p&gt; date-opt-time     = date-element [&apos;T&apos; &lt;span class=&quot;error&quot;&gt;&amp;#91;time-element&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;offset&amp;#93;&lt;/span&gt;]&lt;br/&gt;
 date-element      = std-date-element | ord-date-element | week-date-element&lt;br/&gt;
 std-date-element  = yyyy [&apos;-&apos; MM &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;-&amp;#39; dd&amp;#93;&lt;/span&gt;]&lt;br/&gt;
 ord-date-element  = yyyy &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;-&amp;#39; DDD&amp;#93;&lt;/span&gt;&lt;br/&gt;
 week-date-element = xxxx &apos;-W&apos; ww &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;-&amp;#39; e&amp;#93;&lt;/span&gt;&lt;br/&gt;
 time-element      = HH &lt;span class=&quot;error&quot;&gt;&amp;#91;minute-element&amp;#93;&lt;/span&gt; | &lt;span class=&quot;error&quot;&gt;&amp;#91;fraction&amp;#93;&lt;/span&gt;&lt;br/&gt;
 minute-element    = &apos;:&apos; mm &lt;span class=&quot;error&quot;&gt;&amp;#91;second-element&amp;#93;&lt;/span&gt; | &lt;span class=&quot;error&quot;&gt;&amp;#91;fraction&amp;#93;&lt;/span&gt;&lt;br/&gt;
 second-element    = &apos;:&apos; ss &lt;span class=&quot;error&quot;&gt;&amp;#91;fraction&amp;#93;&lt;/span&gt;&lt;br/&gt;
 fraction          = (&apos;.&apos; | &apos;,&apos;) digit+&lt;/p&gt;

&lt;p&gt;2. state that the implementation may parse formats beyond the w3c profile but such formats may not be supported in future releases.&lt;/p&gt;

&lt;p&gt;3. run all dates through a regex that matches exactly the w3c profile and dates that don&apos;t conform to the format are turned into null.&lt;/p&gt;
</comment>
                            <comment id="13672729" author="patc888" created="Mon, 3 Jun 2013 01:00:26 +0100"  >&lt;p&gt;Correction on option 3.&lt;br/&gt;
Implement a Joda date formatter using the spec in the w3c profile so only that format is supported.&lt;/p&gt;</comment>
                            <comment id="13673122" author="rohini" created="Mon, 3 Jun 2013 15:00:54 +0100"  >&lt;blockquote&gt;&lt;p&gt;Before making the fix, I think there needs to be a little more clarity around exactly what formats are supported. For example, pig 0.11.1 currently supports datetime strings with no date - &quot;T00:00:00&quot; produces a date in 1970. Is this intentional?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;   I don&apos;t think anyone is looking for such a behaviour. Not intuitive. &lt;/p&gt;

&lt;p&gt; I think we can go with option 1 (more is better) but also state which of those formats supported are not part of w3c profile. We also need to return null if it does not confirm to the format instead of throwing an error. &lt;/p&gt;</comment>
                            <comment id="13673742" author="patc888" created="Tue, 4 Jun 2013 00:02:14 +0100"  >&lt;p&gt;Hi, you bring up two good design points.&lt;/p&gt;

&lt;p&gt;1. are more formats the better for this use case? Some possible cons:&lt;/p&gt;

&lt;p&gt;a) the spec becomes more complicated for probably unused formats. The simplest spec would be to conform to the w3c profile.&lt;br/&gt;
b) you will have to support all these formats forever&lt;br/&gt;
c) there could be a performance overhead to support the possibly unused formats&lt;br/&gt;
d) ToDate(s,f) and UDFs already give users the ability to handle any format that&apos;s needed.&lt;br/&gt;
e) asymmetry: seems cleaner if the default parseable format is exactly the default printed format&lt;/p&gt;


&lt;p&gt;2. What is the design philosophy for invalid conversions? Quietly turning invalid values into null seems like it could be a possibly dangerous default since it would be really hard to know if your query on terabytes of data is encountering problems which are quietly being ignored. A safer philosophy would have the default be as strict with the data as possible and then if the user finds a legitimate case for null-conversions, provide a way for the user to enable it explicitly in the script.&lt;/p&gt;

&lt;p&gt;cheers&lt;/p&gt;</comment>
                            <comment id="13673760" author="rohini" created="Tue, 4 Jun 2013 00:17:01 +0100"  >&lt;p&gt;The current behavior returns null if there is a invalid value while loading as datetime. Pig as far as I have seen does not fail loading when there is invalid values. But UDFs do fail. &lt;/p&gt;

&lt;p&gt;Asking the old timers..&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alangates&quot; class=&quot;user-hover&quot; rel=&quot;alangates&quot;&gt;Alan Gates&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=daijy&quot; class=&quot;user-hover&quot; rel=&quot;daijy&quot;&gt;Daniel Dai&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvryaboy&quot; class=&quot;user-hover&quot; rel=&quot;dvryaboy&quot;&gt;Dmitriy V. Ryaboy&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=julienledem&quot; class=&quot;user-hover&quot; rel=&quot;julienledem&quot;&gt;Julien Le Dem&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thejas&quot; class=&quot;user-hover&quot; rel=&quot;thejas&quot;&gt;Thejas M Nair&lt;/a&gt;,&lt;br/&gt;
   How should we handle the invalid dates?&lt;/p&gt;
</comment>
                            <comment id="13673780" author="dvryaboy" created="Tue, 4 Jun 2013 00:32:09 +0100"  >&lt;p&gt;I don&apos;t think we are completely consistent, but turning invalid into null has been pretty standard.&lt;/p&gt;

&lt;p&gt;My personal preference is also to increment a counter for # of such conversions, and to log the first N occurrences (when N errors are encountered, log something to the effect of &quot;not logging this error any more because there&apos;s so much of it.&quot;)&lt;/p&gt;</comment>
                            <comment id="13673876" author="patc888" created="Tue, 4 Jun 2013 01:38:44 +0100"  >&lt;p&gt;I was looking in the docs for any documentation on this topic. I found the following in &lt;a href=&quot;http://wiki.apache.org/pig/UDFManual&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/UDFManual&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;quote&amp;gt;&lt;br/&gt;
The first thing to decide is what to do with invalid data. This depends on the format of the data. If the data is of type bytearray it means that it has not yet been converted to its proper type. In this case, if the format of the data does not match the expected type, a null value should be returned. If, on the other hand, the input data is of another type, this means that the conversion has already happened and the data should be in the correct format. This is the case with our example and that&apos;s why it throws an error (line 16.) Note that WrappedIOException is a helper class to convert the actual exception to an IOException.&lt;/p&gt;

&lt;p&gt;Also, note that lines 10-11 check if the input data is null or empty and if so returns null.&lt;br/&gt;
&amp;lt;/quote&amp;gt;&lt;/p&gt;

&lt;p&gt;If I&apos;m reading this correctly, it says that if the type of the input doesn&apos;t match the signature of the UDF, a null should be returned. However, I get this:&lt;/p&gt;

&lt;p&gt;  grunt&amp;gt; A = load &apos;o&apos; as (a:bytearray);&lt;br/&gt;
  grunt&amp;gt; B = foreach A generate ToDate(a); dump B;&lt;br/&gt;
  2013-06-03 17:15:09,253 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1046: &lt;br/&gt;
  &amp;lt;line 2, column 23&amp;gt; Multiple matching functions for org.apache.pig.builtin.ToDate with input schema: (&lt;/p&gt;
{long}
&lt;p&gt;, &lt;/p&gt;
{chararray}
&lt;p&gt;). Please use an explicit cast.&lt;/p&gt;

&lt;p&gt;It also seems to be saying that if the types are right and the format is invalid, an error should be thrown. I just checked and yes, I get an error. However, this doesn&apos;t match Rohini&apos;s proposal to return a null instead. Also, as Dmitriy hinted, it&apos;s not philosophically consistent with loading behavior where invalid things turn into nulls.&lt;/p&gt;

&lt;p&gt;  2013-06-03 17:25:12,977 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - Failed!&lt;br/&gt;
  2013-06-03 17:25:12,981 &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1066: Unable to open iterator for alias B&lt;/p&gt;


&lt;p&gt;BTW, the note about lines 10-11 isn&apos;t quite right. The code in the example doesn&apos;t have a check for null and so a null would cause an exception.&lt;/p&gt;</comment>
                            <comment id="13674390" author="rohini" created="Tue, 4 Jun 2013 14:57:52 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=patc888&quot; class=&quot;user-hover&quot; rel=&quot;patc888&quot;&gt;pat chan&lt;/a&gt;,&lt;br/&gt;
   I am fine with throwing error in UDF instead of returning null. Came across &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2620&quot; title=&quot;Customizable Error Handling in Pig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-2620&quot;&gt;PIG-2620&lt;/a&gt; and it is a better solution to define a proper behavior on what to do when a exception is thrown by a UDF instead of the UDF skipping invalid records by itself. &lt;/p&gt;</comment>
                            <comment id="13681197" author="rohini" created="Wed, 12 Jun 2013 14:04:55 +0100"  >&lt;p&gt;Went with the ISODateTimeFormat only. It is a strict ISO Parser only. As for the additional types Pat mentioned&lt;/p&gt;

&lt;p&gt;ord-date-element  = yyyy &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;-&amp;#39; DDD&amp;#93;&lt;/span&gt;&lt;br/&gt;
week-date-element = xxxx &apos;-W&apos; ww &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;-&amp;#39; e&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Saw that they were mentioned as part of ISO 8601 standard in &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601#Week_dates&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/ISO_8601#Week_dates&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601#Ordinal_dates&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/ISO_8601#Ordinal_dates&lt;/a&gt;. They are also mentioned in &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/iso-time.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cl.cam.ac.uk/~mgk25/iso-time.html&lt;/a&gt; which &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/NOTE-datetime&lt;/a&gt; refers to. &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/NOTE-datetime&lt;/a&gt; only defines a profile of ISO 8601, consisting of a few date/time formats from ISO 8601, likely to satisfy most requirements. It is not the full set. &lt;/p&gt;

&lt;p&gt;So as ISODateTimeFormat is totally ISO 8601 compliant went with that instead of spending time to cut down the scope to &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/NOTE-datetime&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also added some missing documentation for DateTime.&lt;/p&gt;</comment>
                            <comment id="13681208" author="rohini" created="Wed, 12 Jun 2013 14:22:34 +0100"  >&lt;p&gt;Cleaned up some whitespace in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3341&quot; title=&quot;Strict datetime parsing and improve performance of loading datetime values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3341&quot;&gt;&lt;del&gt;PIG-3341&lt;/del&gt;&lt;/a&gt;-2.patch. &lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/11834/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/11834/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13681496" author="rohini" created="Wed, 12 Jun 2013 19:42:58 +0100"  >&lt;p&gt;Patch with unused imports removed&lt;/p&gt;</comment>
                            <comment id="13681499" author="cheolsoo" created="Wed, 12 Jun 2013 19:49:14 +0100"  >&lt;p&gt;+1.&lt;/p&gt;</comment>
                            <comment id="13681840" author="patc888" created="Thu, 13 Jun 2013 02:47:07 +0100"  >&lt;p&gt;Just to be clear, although the parser is &quot;strict&quot;, meaning it won&apos;t accept non-iso8601 formats, it is not a complete parser. It actually only accepts a small fraction of the iso8601 standard. &lt;/p&gt;

&lt;p&gt;When I was trying to work with dates, I couldn&apos;t tell what formats were accepted. For example, the documentation suggests that yyyyMMdd would be accepted (since it was listed in the iso8601 reference) but I couldn&apos;t get it work. If possible, it would be great if the docs either said&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;supports all of the w3c profile and a few undocumented iso8601-compliant formats&lt;/li&gt;
	&lt;li&gt;or literally specify the accepted formats.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Either would help clear up the documentation around formats quite a bit.&lt;/p&gt;</comment>
                            <comment id="13682224" author="rohini" created="Thu, 13 Jun 2013 14:07:41 +0100"  >&lt;p&gt;Committed to 0.11 and trunk (0.12). Thanks Cheolsoo and Pat Chan. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=patc888&quot; class=&quot;user-hover&quot; rel=&quot;patc888&quot;&gt;pat chan&lt;/a&gt;,&lt;br/&gt;
   I committed before seeing your comment. Can update the doc in a separate jira. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For example, the documentation suggests that yyyyMMdd would be accepted (since it was listed in the iso8601 reference) but I couldn&apos;t get it work.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;  Can you give the link to the documentation. I did not come across any doc which suggested yyyyMMdd is supported.&lt;/p&gt;
</comment>
                            <comment id="13682498" author="patc888" created="Thu, 13 Jun 2013 19:15:38 +0100"  >&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601#Calendar_dates&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/ISO_8601#Calendar_dates&lt;/a&gt; shows&lt;/p&gt;

&lt;p&gt;&amp;gt;  YYYY-MM-DD	or	YYYYMMDD&lt;/p&gt;

&lt;p&gt;However, I just went back to the docs and found that it doesn&apos;t explicitly link to this information (although there are links to the other parts of this page). I must have incorrectly assumed all formats on this page was supported. At this point, I know what&apos;s going on so the patch looks great. &lt;/p&gt;

&lt;p&gt;A small change that I&apos;m sure would have made things clearer for me would be:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;And for the information of ISO date and time formats, please refer to Date and Time Formats.&lt;br/&gt;
+ And for the information of supported ISO date and time formats, please refer to Date and Time Formats.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks for pushing this out.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12665923">PIG-3442</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12587430" name="PIG-3341-1.patch" size="13825" author="rohini" created="Wed, 12 Jun 2013 14:04:55 +0100"/>
                            <attachment id="12587434" name="PIG-3341-2.patch" size="14538" author="rohini" created="Wed, 12 Jun 2013 14:22:34 +0100"/>
                            <attachment id="12587618" name="PIG-3341-3-branch11.patch" size="16264" author="rohini" created="Thu, 13 Jun 2013 14:05:12 +0100"/>
                            <attachment id="12587479" name="PIG-3341-3.patch" size="15891" author="rohini" created="Wed, 12 Jun 2013 19:42:58 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 31 May 2013 06:34:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330604</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzevnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330938</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>