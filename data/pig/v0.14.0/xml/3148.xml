<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:05:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-3148/PIG-3148.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-3148] OutOfMemory exception while spilling stale DefaultDataBag. Extra option to gc() before spilling large bag.</title>
                <link>https://issues.apache.org/jira/browse/PIG-3148</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Our user reported that one of their jobs in pig 0.10 occasionally failed with &lt;/p&gt;

&lt;p&gt;&apos;Error: GC overhead limit exceeded&apos; or &apos;Error: Java heap space&apos;, but rerunning it sometimes finishes successfully.&lt;/p&gt;

&lt;p&gt;For 1G heap reducer, heap dump showed it contained two huge DefaultDataBag with 300-400MBytes each when failing with OOM.&lt;/p&gt;

&lt;p&gt;Jstack at the time of OOM always showed that spill was running.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&quot;Low Memory Detector&quot; daemon prio=10 tid=0xb9c11800 nid=0xa52 runnable [0xb9afc000]
   java.lang.Thread.State: RUNNABLE
	at java.io.FileOutputStream.writeBytes(Native Method)
	at java.io.FileOutputStream.write(FileOutputStream.java:260)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.write(BufferedOutputStream.java:109)
	- locked &amp;lt;0xe57c6390&amp;gt; (a java.io.BufferedOutputStream)
	at java.io.DataOutputStream.write(DataOutputStream.java:90)
	- locked &amp;lt;0xe57c60b8&amp;gt; (a java.io.DataOutputStream)
	at java.io.FilterOutputStream.write(FilterOutputStream.java:80)
	at org.apache.pig.data.utils.SedesHelper.writeBytes(SedesHelper.java:46)
	at org.apache.pig.data.BinInterSedes.writeDatum(BinInterSedes.java:537)
	at org.apache.pig.data.BinInterSedes.writeDatum(BinInterSedes.java:435)
	at org.apache.pig.data.utils.SedesHelper.writeGenericTuple(SedesHelper.java:135)
	at org.apache.pig.data.BinInterSedes.writeTuple(BinInterSedes.java:613)
	at org.apache.pig.data.BinInterSedes.writeDatum(BinInterSedes.java:443)
	at org.apache.pig.data.DefaultDataBag.spill(DefaultDataBag.java:106)
	- locked &amp;lt;0xceb16190&amp;gt; (a java.util.ArrayList)
	at org.apache.pig.impl.util.SpillableMemoryManager.handleNotification(SpillableMemoryManager.java:243)
	- locked &amp;lt;0xbeb86318&amp;gt; (a java.util.LinkedList)
	at sun.management.NotificationEmitterSupport.sendNotification(NotificationEmitterSupport.java:138)
	at sun.management.MemoryImpl.createNotification(MemoryImpl.java:171)
	at sun.management.MemoryPoolImpl$PoolSensor.triggerAction(MemoryPoolImpl.java:272)
	at sun.management.Sensor.trigger(Sensor.java:120)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment></environment>
        <key id="12629813">PIG-3148</key>
            <summary>OutOfMemory exception while spilling stale DefaultDataBag. Extra option to gc() before spilling large bag.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knoguchi">Koji Noguchi</assignee>
                                    <reporter username="knoguchi">Koji Noguchi</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jan 2013 23:27:16 +0000</created>
                <updated>Tue, 2 Apr 2013 16:54:34 +0100</updated>
                            <resolved>Mon, 4 Mar 2013 10:05:04 +0000</resolved>
                                                    <fixVersion>0.12.0</fixVersion>
                    <fixVersion>0.11.1</fixVersion>
                                    <component>impl</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13565975" author="knoguchi" created="Tue, 29 Jan 2013 23:47:49 +0000"  >&lt;p&gt;I cannot attach the original query, but to give you an idea&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;A = LOAD &apos;$INPUT&apos; USING MyLoader(&apos;\u0001&apos;) AS
( val1, val2, val3, val4, val5, val6, val7, val8, val9, val10, val11, val12, val13, val14, val15, val16);
B = GROUP A BY (val1, val2, val3, val8) PARALLEL $NUM_REDUCERS;
C = FOREACH B {
    D = FILTER A BY (val3 == &apos;status1&apos; AND val5 == &apos;status2&apos;);
    E = D.val4;
    F = DISTINCT E;
    G = FILTER D BY val7 == &apos;status3&apos;;
GENERATE group.val1, group.val2, group.val8, COUNT(F), COUNT(G), SUM(G.val9), SUM(G.val10), SUM(G.val11), SUM(A.val12), SUM(A.val13), SUM(A.val15), SUM(A.val14), SUM(A.val16);
}

STORE C INTO &apos;$OUTPUT&apos; USING PigStorage(&apos;\u0001&apos;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assuming that this script does not require a two huge DefaultDataBag, looked into SpillableMemoryManager.handleNotification.   &apos;handleNotification&apos; is called whenever certain memory condition is met but not necessary after the gc().  &lt;/p&gt;

&lt;p&gt;What was happening on this user&apos;s case was, &lt;br/&gt;
&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  400MB of DefaultDataBag#1 goes stale.&lt;br/&gt;
(ii) SpillableMemoryManager.handleNotification is triggered.&lt;br/&gt;
(iii) Since gc() is not called yet, WeakReference is still valid and pig decides to spill holding the lock of this DefaultDataBag#1.mContents(ArrayList).&lt;br/&gt;
(iv) While reduce task is working on another 400MB DefaultDataBag#2, jvm heap gets full and gc is called.  Even though no one is using the stale DefaultDataBag#1, it cannot be GC-ed since spill is holding the lock.&lt;/p&gt;

&lt;p&gt;As a result, we end up with two DefaultDataBag leading to OOM.&lt;/p&gt;</comment>
                            <comment id="13565986" author="knoguchi" created="Tue, 29 Jan 2013 23:57:45 +0000"  >&lt;p&gt;Uploading a patch that adds a feature that would call System.gc() when Spillable is bigger than &apos;pig.spill.extragc.size.threshold&apos; before spilling.  &lt;/p&gt;

&lt;p&gt;This extra gc() is called at most once per handleNotification and also disabled as default since adding GC has a risk of changing the performance drastically.&lt;/p&gt;

&lt;p&gt;For the job I was looking, adding &lt;br/&gt;
&apos;-Dpig.spill.extragc.size.threshold=100000000&apos; let the job run successfully with no OOM errors.&lt;/p&gt;

&lt;p&gt;(Note: Separate spill issues before this patch on 0.11 is tracked at &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-3147&quot; title=&quot;Spill failing with &amp;quot;java.lang.RuntimeException: InternalCachedBag.spill() should not be called&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-3147&quot;&gt;&lt;del&gt;PIG-3147&lt;/del&gt;&lt;/a&gt;.)&lt;/p&gt;</comment>
                            <comment id="13577743" author="knoguchi" created="Wed, 13 Feb 2013 17:19:16 +0000"  >&lt;p&gt;Rohini asked me to clarify why I&apos;m adding extra param instead of simply calling gc() at the top of handleNotification(). &lt;/p&gt;

&lt;p&gt;Reason I added extra param is,&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;When I tried just adding gc() at the top, suddenly I saw all of my mappers stuck, spending 99% of cputime on gc.  I then learned that handleNotification is called much more frequently than I first anticipated when the application is using more than the threshold and have nothing much to spill.  That convinced me to add more condition to reduce the gc() calls.&lt;/li&gt;
	&lt;li&gt;Motivation of my patch here is to avoid OutOfMemory when application is holding a reference to a large stale bag while spilling unnecessarily. For that, bag being spilled has to be proportional to the heap size of the application to cause OOM.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13577954" author="dvryaboy" created="Wed, 13 Feb 2013 21:45:54 +0000"  >&lt;p&gt;Koji, nice analysis. Looking at your argument about adding the extra param, it sounds like it would be better to make the gc trigger not a static threshold as you have it, but a ratio of the max heap. I also think perhaps we can make that ratio static final and non-configurable &amp;#8211; it seems highly unlikely a user (or admin) will want to tune that if it&apos;s a proportion of the heap and works reasonably well.&lt;/p&gt;</comment>
                            <comment id="13578487" author="rohini" created="Thu, 14 Feb 2013 16:55:36 +0000"  >&lt;p&gt;The problem with the ratio of max heap will hit the same issue as Koji&apos;s first point. In the mapper, the heap is going to grow huge and GC will not do anything. So triggering GC on ratio of max heap will not work. One alternative is to check for memory freed after the initial GC and if it does not free more than some X MB, then turn off the initial GC globally in the SpillableMemoryManager. Koji was not enthusiastic about making JVM calls to determine free memory. &lt;/p&gt;

</comment>
                            <comment id="13578499" author="rohini" created="Thu, 14 Feb 2013 17:08:32 +0000"  >&lt;p&gt;Sorry Dmitriy. Got confused a bit. pig.spill.extragc.size.threshold=(ratio of max heap) based on the logic in the patch instead of a configurable setting should work fine. And +1 to the idea of not having a new setting. &lt;/p&gt;</comment>
                            <comment id="13578507" author="knoguchi" created="Thu, 14 Feb 2013 17:23:42 +0000"  >&lt;p&gt;Thanks Dmitriy, Rohini!  I like the fixed ratio suggestion.  Is 5% ok?  Maybe 10%?&lt;br/&gt;
Also, do we still want a configurable flag to enable this feature?&lt;/p&gt;</comment>
                            <comment id="13578531" author="dvryaboy" created="Thu, 14 Feb 2013 18:01:44 +0000"  >&lt;p&gt;5% seems ok. For a 3GB heap, that&apos;s 150 megs or so, which sounds like a reasonable threshold.&lt;/p&gt;</comment>
                            <comment id="13590927" author="knoguchi" created="Fri, 1 Mar 2013 20:51:08 +0000"  >&lt;p&gt;Sorry for the delay.  Attaching a patch with suggested change.&lt;/p&gt;</comment>
                            <comment id="13590945" author="rohini" created="Fri, 1 Mar 2013 21:16:03 +0000"  >&lt;p&gt;+1. Will wait a day to see if Dmitriy has any more comments before committing. &lt;/p&gt;</comment>
                            <comment id="13591179" author="dvryaboy" created="Sat, 2 Mar 2013 01:12:38 +0000"  >&lt;p&gt;Looks good. Other calculations use biggest heap size rather than total size, but I don&apos;t think it matters either way.&lt;/p&gt;

&lt;p&gt;Shall we apply this to 0.11.1 as well as 0.12?&lt;/p&gt;</comment>
                            <comment id="13592094" author="rohini" created="Mon, 4 Mar 2013 10:05:04 +0000"  >&lt;p&gt;Committed to 0.11.1 and trunk. Thanks Koji and Dmitriy.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12567080" name="pig-3148-v01.patch" size="6106" author="knoguchi" created="Tue, 29 Jan 2013 23:57:45 +0000"/>
                            <attachment id="12571644" name="pig-3148-v02.patch" size="4048" author="knoguchi" created="Fri, 1 Mar 2013 20:51:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 13 Feb 2013 21:45:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310309</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzbejj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310654</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>