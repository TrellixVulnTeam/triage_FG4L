<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:09:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1427/PIG-1427.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1427] Monitor and kill runaway UDFs</title>
                <link>https://issues.apache.org/jira/browse/PIG-1427</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;As a safety measure, it is sometimes useful to monitor UDFs as they execute. It is often preferable to return null or some other default value instead of timing out a runaway evaluation and killing a job. We have in the past seen complex regular expressions lead to job failures due to just half a dozen (out of millions) particularly obnoxious strings.&lt;/p&gt;

&lt;p&gt;It would be great to give Pig users a lightweight way of enabling UDF monitoring.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12465434">PIG-1427</key>
            <summary>Monitor and kill runaway UDFs</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dvryaboy">Dmitriy V. Ryaboy</assignee>
                                    <reporter username="dvryaboy">Dmitriy V. Ryaboy</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 May 2010 08:32:42 +0100</created>
                <updated>Fri, 17 Dec 2010 22:44:22 +0000</updated>
                            <resolved>Tue, 22 Jun 2010 08:06:48 +0100</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12871545" author="dvryaboy" created="Wed, 26 May 2010 08:38:38 +0100"  >&lt;p&gt;The attached patch is a basic sketch of the proposed implementation. It uses the guava library ( &lt;a href=&quot;http://code.google.com/p/guava-libraries/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/guava-libraries/&lt;/a&gt; ). I tested with r03, but I see that r04 is out now and may be preferable. The real patch will include the appropriate ivy changes, as well as all the apache headers and other niceties.&lt;/p&gt;

&lt;p&gt;The idea is to create a @MonitoredUDF annotation that a udf author can add to the EvalFunc. If such an annotation is seen on the eval func, its evaluation is wrapped in a java Future, executed in a separate thread, and monitored with a timeout.&lt;/p&gt;

&lt;p&gt;The most basic usage is possible even now &amp;#8211; just add @MonitoredUDF to EvalFuncs class definitions you expect might time out, and try it. For ease of testing, one can set the timeout interval to the millisecond level.&lt;/p&gt;

&lt;p&gt;This is based heavily on Florian Leibert&apos;s implementation of the same concept.&lt;/p&gt;

&lt;p&gt;Please take a look and comment.&lt;/p&gt;</comment>
                            <comment id="12871552" author="dvryaboy" created="Wed, 26 May 2010 08:54:39 +0100"  >&lt;p&gt;Forgot to mention: so far this applies cleanly to 0.6 as well as trunk. Should be easily back-portable.&lt;/p&gt;</comment>
                            <comment id="12872031" author="ashutoshc" created="Thu, 27 May 2010 01:14:21 +0100"  >&lt;p&gt;A useful feature. Couple of comments:&lt;/p&gt;

&lt;p&gt;1. Currently in case of time outs and error you are always returning null. It will be useful if user can specify a default return value as a definition of his annotation which is returned in those cases. For example if my regex fails on an input String, I want to return an empty String back. Something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 @MonitoredUDF(timeUnit = TimeUnit.MILLISECONDS, duration = 500, defaultReturnValue = &quot;&quot;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;2. It seems that PigHadoopLogger.getReporter() method accidentally got removed in 0.7 and trunk. This needs to be restored. It will be really cool to see how many of my input records are faulty on UI. Since, it is a small change, I think you can add that getter method in there and then update the appropriate counters. &lt;/p&gt;</comment>
                            <comment id="12872120" author="dvryaboy" created="Thu, 27 May 2010 07:58:05 +0100"  >&lt;p&gt;Attaching a new version, featuring:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;default values (for primitives and strings only)&lt;/li&gt;
	&lt;li&gt;custom timeout and error handlers&lt;/li&gt;
	&lt;li&gt;apache headers&lt;/li&gt;
	&lt;li&gt;ivy changes to include the guava jar&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Guava is mavenized, but the mavenization is broken &amp;#8211; they appear to have used the wrong md5 or something, so it ivy refuses to pull it down. Easy enough to stick the jar (from the above url) into lib/.&lt;/p&gt;

&lt;p&gt;I should probably move the MonitoredUDF annotation to some more public place, and add the stability/visibility labels. Anything other than that you guys want to see? &lt;/p&gt;

&lt;p&gt;-D&lt;/p&gt;</comment>
                            <comment id="12872303" author="ashutoshc" created="Thu, 27 May 2010 18:41:29 +0100"  >&lt;p&gt;1. You didnt pay heed to my request for incrementing counter when udf times out or throws an exception &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I think that will be pretty useful for user to know how many faulty records there are in the dataset which can&apos;t be processed by the UDF.&lt;br/&gt;
2. In the getDefaultValue() there seems to be a inconsistency among different if statements. I guess you need to make a distinction between Integer[] and Integer return type and then return appropriate return value.&lt;br/&gt;
3. Doing svn co; patch -p0 &amp;lt; monitoredUDF.patch; ant jar results in build failure. It seems ivy is not pulling guava lib.&lt;br/&gt;
4. Since its user facing new interface, having stability/visibility tag would really be useful.&lt;br/&gt;
5. Since it spawns a new thread for every exec() call, I assume it will have some overhead. If you have done some comparison or have numbers for that, it will be great if you can share that.&lt;/p&gt;</comment>
                            <comment id="12872314" author="dvryaboy" created="Thu, 27 May 2010 19:18:15 +0100"  >&lt;blockquote&gt;&lt;p&gt;You didnt pay heed to my request for incrementing counter when udf times out or throws an exception  I think that will be pretty useful for user to know how many faulty records there are in the dataset which can&apos;t be processed by the UDF.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, I forgot to comment on that &amp;#8211;  I think the counters no longer being available is a separate issue; will file a ticket for that, and when the fix goes in, will use that here. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In the getDefaultValue() there seems to be a inconsistency among different if statements. I guess you need to make a distinction between Integer[] and Integer return type and then return appropriate return value.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Whoops, good catch. Those are all supposed to be &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;. So, the trick there is that you can&apos;t have null values as defaults for annotation properties, but you can have empty arrays; and the first element of an array can be populated by simply setting nameOfArray = &quot;foo&quot; (the first element becomes &quot;foo&quot;).  So I am using that here. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Doing svn co; patch -p0 &amp;lt; monitoredUDF.patch; ant jar results in build failure. It seems ivy is not pulling guava lib.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah I spent 2 hours wrestling with maven last night until I convinced myself that the guava maven deploy is broken. We need to drop the jar in lib/ for now. See here for reference: &lt;a href=&quot;http://code.google.com/p/guava-libraries/issues/detail?id=354&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/guava-libraries/issues/detail?id=354&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Since its user facing new interface, having stability/visibility tag would really be useful.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will do.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Since it spawns a new thread for every exec() call, I assume it will have some overhead. If you have done some comparison or have numbers for that, it will be great if you can share that. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Simple enough. To measure the overhead, I created two equivalent UDFs that do nothing (they fetch the current time, just to create an illusion of work and avoid potential java optimizations); one is monitored, the other unmonitored. I then called them in loops of varying number of repetition.  I first warmed up the JVM by running through the procedures without timing them, and then repeated the same, this time grabbing the time at the beginning and end of the loop. As you can see, there is almost no overhead &amp;#8211; it almost looks like we should default to monitoring, it&apos;s so cheap.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Warming up.
Warmed up. Timing.
Reps: 1000 monitored: 0 unmonitored: 0
Reps: 10000 monitored: 1 unmonitored: 1
Reps: 100000 monitored: 12 unmonitored: 10
Reps: 1000000 monitored: 60 unmonitored: 62
Reps: 10000000 monitored: 587 unmonitored: 573
Reps: 1000 monitored: 0 unmonitored: 0
Reps: 10000 monitored: 0 unmonitored: 1
Reps: 100000 monitored: 6 unmonitored: 5
Reps: 1000000 monitored: 73 unmonitored: 57
Reps: 10000000 monitored: 574 unmonitored: 583
Reps: 1000 monitored: 0 unmonitored: 0
Reps: 10000 monitored: 1 unmonitored: 0
Reps: 100000 monitored: 6 unmonitored: 5
Reps: 1000000 monitored: 57 unmonitored: 58
Reps: 10000000 monitored: 594 unmonitored: 628
Reps: 1000 monitored: 0 unmonitored: 0
Reps: 10000 monitored: 1 unmonitored: 1
Reps: 100000 monitored: 6 unmonitored: 5
Reps: 1000000 monitored: 58 unmonitored: 62
Reps: 10000000 monitored: 594 unmonitored: 591
Reps: 1000 monitored: 0 unmonitored: 0
Reps: 10000 monitored: 0 unmonitored: 1
Reps: 100000 monitored: 6 unmonitored: 5
Reps: 1000000 monitored: 58 unmonitored: 69
Reps: 10000000 monitored: 587 unmonitored: 586
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12872862" author="ashutoshc" created="Fri, 28 May 2010 06:53:49 +0100"  >&lt;ul&gt;
	&lt;li&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1428&quot; title=&quot;Make a StatusReporter singleton available for incrementing counters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1428&quot;&gt;&lt;del&gt;PIG-1428&lt;/del&gt;&lt;/a&gt; for it.&lt;/li&gt;
	&lt;li&gt;Neat workaround.&lt;/li&gt;
	&lt;li&gt;I guess checking in lib/ is fine. They are using APL.&lt;/li&gt;
	&lt;li&gt;Performance number looks good. Initially, lets not default for monitoring. Later as we gain more experience with this feature we should on monitoring by default so as not to waste cluster resources because of programming errors.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12873008" author="dvryaboy" created="Fri, 28 May 2010 16:20:02 +0100"  >&lt;p&gt;Uhm so my timing code had a bug in it &amp;#8211; I didn&apos;t actually monitor the monitored UDF. Hence the numbers indicating that there is no overhead at all.&lt;/p&gt;

&lt;p&gt;Here are the real numbers (recall that the function itself doesn&apos;t really do any work, so we are seeing fairly pure timing of the overhead here):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Warming up.
Warmed up. Timing.
Reps: 1000 monitored: 20 unmonitored: 0
Reps: 10000 monitored: 242 unmonitored: 1
Reps: 100000 monitored: 1966 unmonitored: 5
Reps: 1000000 monitored: 19773 unmonitored: 59
Reps: 1000 monitored: 16 unmonitored: 0
Reps: 10000 monitored: 217 unmonitored: 0
Reps: 100000 monitored: 1924 unmonitored: 5
Reps: 1000000 monitored: 19139 unmonitored: 57
Reps: 1000 monitored: 27 unmonitored: 0
Reps: 10000 monitored: 248 unmonitored: 0
Reps: 100000 monitored: 2104 unmonitored: 6
Reps: 1000000 monitored: 18756 unmonitored: 57
Reps: 1000 monitored: 17 unmonitored: 1
Reps: 10000 monitored: 211 unmonitored: 1
Reps: 100000 monitored: 1940 unmonitored: 5
Reps: 1000000 monitored: 18619 unmonitored: 59
Reps: 1000 monitored: 21 unmonitored: 0
Reps: 10000 monitored: 230 unmonitored: 1
Reps: 100000 monitored: 2088 unmonitored: 7
Reps: 1000000 monitored: 18526 unmonitored: 57
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see the cost is fairly consistent &amp;#8211; 2 milliseconds per 100 invocations, or to put it another way, 20 seconds per million invocations.&lt;/p&gt;</comment>
                            <comment id="12873852" author="dvryaboy" created="Tue, 1 Jun 2010 02:59:47 +0100"  >&lt;p&gt;Attaching the guava jar that needs to be placed in lib/ in order to test this.&lt;br/&gt;
It is theoretically available via maven, but at the moment the deploy to maven is misconfigured and unfetchable (see above reference).&lt;/p&gt;

&lt;p&gt;The guava library is licensed under Apache 2.0: &lt;a href=&quot;http://code.google.com/p/guava-libraries/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/guava-libraries/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12873856" author="dvryaboy" created="Tue, 1 Jun 2010 03:08:27 +0100"  >&lt;p&gt;This depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1428&quot; title=&quot;Make a StatusReporter singleton available for incrementing counters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1428&quot;&gt;&lt;del&gt;PIG-1428&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Ready for testing. Requires manual testing due to the need to drop guava jar into lib.&lt;/p&gt;</comment>
                            <comment id="12876093" author="dvryaboy" created="Sun, 6 Jun 2010 23:14:14 +0100"  >&lt;p&gt;Ashutosh, Alan, et al: review please.&lt;/p&gt;</comment>
                            <comment id="12876763" author="ashutoshc" created="Tue, 8 Jun 2010 19:43:38 +0100"  >&lt;p&gt;@Dmitriy,&lt;/p&gt;

&lt;p&gt;Occupied with some work. Will get back to it sometime later this week.  &lt;/p&gt;</comment>
                            <comment id="12878313" author="dvryaboy" created="Sat, 12 Jun 2010 21:50:08 +0100"  >&lt;p&gt;Slightly modified to match the patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1428&quot; title=&quot;Make a StatusReporter singleton available for incrementing counters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1428&quot;&gt;&lt;del&gt;PIG-1428&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12880881" author="ashutoshc" created="Mon, 21 Jun 2010 17:27:59 +0100"  >&lt;p&gt;It seems you missed out ivy.xml bits in the latest patch. +1 otherwise, please commit if tests pass.&lt;/p&gt;</comment>
                            <comment id="12881107" author="dvryaboy" created="Tue, 22 Jun 2010 08:05:28 +0100"  >&lt;p&gt;Final version of the patch.&lt;/p&gt;</comment>
                            <comment id="12881109" author="dvryaboy" created="Tue, 22 Jun 2010 08:06:48 +0100"  >&lt;p&gt;Committed. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12447671" name="PIG-1427.diff" size="28183" author="dvryaboy" created="Tue, 22 Jun 2010 08:05:28 +0100"/>
                            <attachment id="12446960" name="PIG-1427.diff" size="19941" author="dvryaboy" created="Sat, 12 Jun 2010 21:50:08 +0100"/>
                            <attachment id="12445988" name="PIG-1427.diff" size="23116" author="dvryaboy" created="Tue, 1 Jun 2010 03:08:27 +0100"/>
                            <attachment id="12445986" name="guava-r03.jar" size="846590" author="dvryaboy" created="Tue, 1 Jun 2010 02:59:47 +0100"/>
                            <attachment id="12445627" name="monitoredUdf.patch" size="20578" author="dvryaboy" created="Thu, 27 May 2010 07:52:26 +0100"/>
                            <attachment id="12445534" name="monitoredUdf.patch" size="11103" author="dvryaboy" created="Wed, 26 May 2010 08:38:38 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 May 2010 00:14:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>41712</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyaqbj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96575</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>