<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:04:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/PIG-1675/PIG-1675.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[PIG-1675] Suggest to allow PigServer can register pig script from InputStream</title>
                <link>https://issues.apache.org/jira/browse/PIG-1675</link>
                <project id="12310730" key="PIG">Pig</project>
                    <description>&lt;p&gt;Currently, Pig only allow users to register script from file. Although it satisfy most people&apos;s requirements, sometimes people hope to build pig script dynamically using code, then they need to create temp file for the script they build. So here I suggest to allow PigServer be able to register pig script from InputStream.&lt;br/&gt;
InputStream is a more general type than File, pig script can been from file (FileInputStream)&lt;br/&gt;
or from in-memory (ByteArrayInputStream) even it can been from remote machines (SocketInputStream)&lt;br/&gt;
Here&apos;s a blog which explains why using InputStream is better than using File in interface &lt;a href=&quot;http://java.dzone.com/articles/using-files-your-interfaces-0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.dzone.com/articles/using-files-your-interfaces-0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I suggest to add the following 4 methods in PigServer:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void registerScript(InputStream in) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void registerScript(InputStream in, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; params) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void registerScript(InputStream in, List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; paramsFiles) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void registerScript(InputStream in, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; params,List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; paramsFiles) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment></environment>
        <key id="12476966">PIG-1675</key>
            <summary>Suggest to allow PigServer can register pig script from InputStream</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zjffdu">Jeff Zhang</assignee>
                                    <reporter username="zjffdu">Jeff Zhang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Oct 2010 02:56:03 +0100</created>
                <updated>Thu, 4 Aug 2011 01:34:55 +0100</updated>
                            <resolved>Sat, 8 Jan 2011 21:14:44 +0000</resolved>
                                    <version>0.8.0</version>
                                    <fixVersion>0.9.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12919925" author="olgan" created="Mon, 11 Oct 2010 19:07:30 +0100"  >&lt;p&gt;Since we already branched for 0.8, moving this for discussion to 0.9&lt;/p&gt;</comment>
                            <comment id="12920656" author="alangates" created="Wed, 13 Oct 2010 18:02:39 +0100"  >&lt;p&gt;I think this is a good change.  One concern is that in the current version, when the filename is opened using new FileInputStream(), that call is wrapped in a try/catch that looks for FileNotFound exception.  Your changes remove that.  We still want to catch that and return a good error.  &lt;/p&gt;

&lt;p&gt;So in your patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void registerScript(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fileName, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; params,List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; paramsFiles) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
       registerScript(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(fileName), params, paramsFiles);
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should include the try/catch statement with appropriate logging.&lt;/p&gt;</comment>
                            <comment id="12922010" author="zjffdu" created="Mon, 18 Oct 2010 09:28:39 +0100"  >&lt;p&gt;Update the patch according Alan&apos;s suggestion (catch FileNotFoundException)&lt;/p&gt;</comment>
                            <comment id="12922319" author="alangates" created="Mon, 18 Oct 2010 23:12:02 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12922389" author="alangates" created="Tue, 19 Oct 2010 01:55:55 +0100"  >&lt;p&gt;Feedback from testpatch.sh&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 8 &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     -1 findbugs.  The patch appears to introduce 1 &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec] 
     [exec] 
     [exec] 
     [exec] 
     [exec] ======================================================================
     [exec] ======================================================================
     [exec]     Finished build.
     [exec] ======================================================================
     [exec] ======================================================================
     [exec] 
     [exec] 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll attach the file from findbugs.  It&apos;s complaining about cleanup of resources in your change.&lt;/p&gt;</comment>
                            <comment id="12922574" author="zjffdu" created="Tue, 19 Oct 2010 15:29:49 +0100"  >&lt;p&gt;Alan, it complains that I may not close the FileInputStream. I modify the code( close the stream in the finally block of method registerScript(InputStream in, Map&amp;lt;String,String&amp;gt; params,List&amp;lt;String&amp;gt; paramsFiles)&lt;/p&gt;

&lt;p&gt;BTW, findbugs is really good tool which can help us stick to the best practice. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12922593" author="alangates" created="Tue, 19 Oct 2010 16:42:54 +0100"  >&lt;p&gt;I also ran all the unit tests, and they pass.&lt;/p&gt;</comment>
                            <comment id="12922599" author="alangates" created="Tue, 19 Oct 2010 16:49:18 +0100"  >&lt;p&gt;In your change you close the InputStream no matter what.  Perhaps we should only close it if we opened it.  Other than that changes look good.&lt;/p&gt;</comment>
                            <comment id="12974984" author="dvryaboy" created="Fri, 24 Dec 2010 22:57:06 +0000"  >&lt;p&gt;Moved stream.close() to the only method in which we open the stream ourselves, at Alan&apos;s suggestion; if someone is opening the stream externally, they will need to close it themselves.&lt;/p&gt;</comment>
                            <comment id="12974986" author="dvryaboy" created="Fri, 24 Dec 2010 23:05:21 +0000"  >&lt;p&gt;I am not terribly happy with the explosion of registerScript() methods.&lt;/p&gt;

&lt;p&gt;A nicer interface would follow a builder pattern &amp;#8211; something like&lt;/p&gt;

&lt;p&gt;PigScriptBuilder.newInstance()&lt;br/&gt;
  .withParams(Map&amp;lt;String, String&amp;gt; foo)&lt;br/&gt;
  .withParamFiles(List&amp;lt;String&amp;gt; paramFiles)&lt;br/&gt;
  .registerScript(InputStream script)&lt;/p&gt;

&lt;p&gt;In fact I suspect rewriting most of PigServer in this way, using a new instance of a script builder every time, might make running PigServer in actual server mode more tenable.&lt;/p&gt;

&lt;p&gt;Jeff, Alan &amp;#8211; thoughts?&lt;/p&gt;</comment>
                            <comment id="12974987" author="dvryaboy" created="Fri, 24 Dec 2010 23:06:54 +0000"  >&lt;p&gt;Granted, we labeled PigServer as stable.. &lt;/p&gt;

&lt;p&gt;Does that really, really mean we can&apos;t change it?&lt;/p&gt;

&lt;p&gt;If we go with a builder approach, can we just deprecate the old methods and let them hang around for a release or two?&lt;/p&gt;</comment>
                            <comment id="12976979" author="alangates" created="Mon, 3 Jan 2011 21:59:41 +0000"  >&lt;p&gt;+1 on the latest patch, changes look good.  &lt;/p&gt;

&lt;p&gt;To comment on the interface changes.  I agree that PigServer is growing too many methods.  The new Pig class proposed as part of the embedding in scripting languages will make this even worse.  (See &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-1479&quot; title=&quot;Embed Pig in scripting languages&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PIG-1479&quot;&gt;&lt;del&gt;PIG-1479&lt;/del&gt;&lt;/a&gt;.)  My hope was actually to move eventually to that and deprecate PigServer altogether.  That way we will have one (hopefully) coherent interface to Pig regardless of whether the user is coming from Java or a scripting language.&lt;/p&gt;

&lt;p&gt;As far as whether we can change PigServer even though it&apos;s stable, we can.  We just can&apos;t do it in a non-backward compatible way between major (x.0) releases.  We haven&apos;t had a 1.0 yet, but I have been taking that to mean we can mark methods as deprecated, we just can&apos;t remove them.&lt;/p&gt;</comment>
                            <comment id="12979205" author="dvryaboy" created="Sat, 8 Jan 2011 21:14:44 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12456819" name="PIG_1675.patch" size="11489" author="zjffdu" created="Mon, 11 Oct 2010 02:58:42 +0100"/>
                            <attachment id="12457429" name="PIG_1675_2.patch" size="12120" author="zjffdu" created="Mon, 18 Oct 2010 09:28:39 +0100"/>
                            <attachment id="12457554" name="PIG_1675_3.patch" size="12299" author="zjffdu" created="Tue, 19 Oct 2010 15:30:17 +0100"/>
                            <attachment id="12466951" name="PIG_1675_4.patch" size="58401" author="dvryaboy" created="Fri, 24 Dec 2010 22:57:06 +0000"/>
                            <attachment id="12457509" name="pig-findbugs-report.html" size="11749" author="alangates" created="Tue, 19 Oct 2010 01:57:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Oct 2010 18:07:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>66213</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyasyv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97004</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>