org.apache.pig.newplan.logical.expression.LogicalExpressionPlan.explain(PrintStream,String,boolean)
org.apache.pig.newplan.logical.expression.LogicalExpressionPlan.merge(LogicalExpressionPlan)
org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer.buildRuleSets()
org.apache.pig.newplan.logical.rules.MergeForEach.buildPattern()
org.apache.pig.newplan.logical.rules.MergeForEach.getNewTransformer()
org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEach(String)
org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.addBranchToPlan(LOGenerate,int,OperatorPlan)
org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.check(OperatorPlan)
org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.reportChanges()
org.apache.pig.newplan.logical.rules.MergeForEach.MergeForEachTransformer.transform(OperatorPlan)
org.apache.pig.newplan.Operator.removeAnnotation(String)
org.apache.pig.newplan.Operator.setPlan(OperatorPlan)
org.apache.pig.test.TestMergeForEachOptimization.getForEachOperatorCount(LogicalPlan)
org.apache.pig.test.TestMergeForEachOptimization.getForEachOperator(LogicalPlan)
org.apache.pig.test.TestMergeForEachOptimization.getOutputExprCount(LogicalPlan)
org.apache.pig.test.TestMergeForEachOptimization.migratePlan(org.apache.pig.impl.logicalLayer.LogicalPlan)
org.apache.pig.test.TestMergeForEachOptimization.MyPlanOptimizer.MyPlanOptimizer(OperatorPlan,int)
org.apache.pig.test.TestMergeForEachOptimization.setup()
org.apache.pig.test.TestMergeForEachOptimization.tearDown()
org.apache.pig.test.TestMergeForEachOptimization.testComplex()
org.apache.pig.test.TestMergeForEachOptimization.testNegative1()
org.apache.pig.test.TestMergeForEachOptimization.testNegative2()
org.apache.pig.test.TestMergeForEachOptimization.testSimple()
