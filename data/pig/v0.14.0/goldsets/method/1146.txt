org.apache.pig.impl.logicalLayer.ColumnPruner.addPruneMap(LogicalOperator,List<Pair<Integer,Integer>>,Pair<Integer,Integer>,Integer,Integer)
org.apache.pig.impl.logicalLayer.ColumnPruner.ColumnPruner(LogicalPlan)
org.apache.pig.impl.logicalLayer.ColumnPruner.ColumnPruner(LogicalPlan,LogicalOperator,List<Pair<Integer,Integer>>,Pair<Integer,Integer>,Integer,Integer,PlanWalker<LogicalOperator,LogicalPlan>,LogicalOperator,LogicalPlan)
org.apache.pig.impl.logicalLayer.ColumnPruner.isEmpty()
org.apache.pig.impl.logicalLayer.ColumnPruner.prune(RelationalOperator)
org.apache.pig.impl.logicalLayer.ColumnPruner.visit(LOFilter)
org.apache.pig.impl.logicalLayer.ColumnPruner.visit(LOForEach)
org.apache.pig.impl.logicalLayer.ColumnPruner.visit(LOJoin)
org.apache.pig.impl.logicalLayer.LOForEach.getRelevantInputs(int,int)
org.apache.pig.impl.logicalLayer.LOForEach.pruneColumns(List<Pair<Integer,Integer>>,Pair<Integer,Integer>,Integer,Integer)
org.apache.pig.impl.logicalLayer.optimizer.LogicalOptimizer.optimize()
org.apache.pig.impl.logicalLayer.optimizer.PruneColumns.processNode(LogicalOperator,RequiredInfo)
org.apache.pig.impl.logicalLayer.optimizer.PruneColumns.prune()
org.apache.pig.impl.logicalLayer.optimizer.PruneColumns.PruneColumns(LogicalPlan)
org.apache.pig.impl.logicalLayer.optimizer.PruneColumns.pruneLoader(LOLoad,RequiredFields)
org.apache.pig.impl.logicalLayer.RelationalOperator.insertPlainForEachAfter(List<Integer>,Integer)
org.apache.pig.impl.logicalLayer.RelationalOperator.pruneColumnInPlan(LogicalPlan,int)
org.apache.pig.test.TestPruneColumn.testOrderbyWrongSignature()
org.apache.pig.test.TestPruneColumn.testUnionMixedPruning()
