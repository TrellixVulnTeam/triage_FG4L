org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobControlCompiler.getJob(MROperPlan,MapReduceOper,Configuration,PigContext)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.getCustomPartitioner()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.illustratorMarkup(Object,Object,int)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.isCross()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POGlobalRearrange.setCross(boolean)
org.apache.pig.backend.hadoop.executionengine.tez.optimizers.LoaderProcessor.LoaderProcessor(TezOperPlan,PigContext)
org.apache.pig.backend.hadoop.executionengine.tez.optimizers.LoaderProcessor.processLoads(TezOperator)
org.apache.pig.backend.hadoop.executionengine.tez.optimizers.LoaderProcessor.visitTezOp(TezOperator)
org.apache.pig.backend.hadoop.executionengine.tez.optimizers.ParallelismSetter.estimateParallelism(TezOperPlan,TezOperator)
org.apache.pig.backend.hadoop.executionengine.tez.optimizers.ParallelismSetter.ParallelismSetter(TezOperPlan,PigContext)
org.apache.pig.backend.hadoop.executionengine.tez.TezCompiler.visitGlobalRearrange(POGlobalRearrange)
org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.estimateParallelism(Job,TezOperPlan,TezOperator)
org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.newVertex(TezOperator,boolean)
org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.processLoads(TezOperator,Configuration,Job)
org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.processStores(TezOperator,Configuration,Job)
org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.setGroupingComparator(Configuration,String)
org.apache.pig.backend.hadoop.executionengine.tez.TezDagBuilder.TezDagBuilder(PigContext,TezOperPlan,DAG,Map<String,LocalResource>,String,LocalResource)
org.apache.pig.backend.hadoop.executionengine.tez.TezLauncher.compile(PhysicalPlan,PigContext)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.combineSmallSplits()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.getCrossKey()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.getLoaderInfo()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.getVertexParallelism()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.getInp()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.getInpLimits()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.getInpSignatureLists()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.getInputSplitInfo()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.getLoads()
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.setInp(ArrayList<FileSpec>,FileSpec)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.setInpLimits(ArrayList<Long>,Long)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.setInpSignatureLists(ArrayList<String>,String)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.setInputSplitInfo(InputSplitInfo)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.LoaderInfo.setLoads(List<POLoad>,POLoad)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.setCrossKey(String)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.setVertexParallelism(int)
org.apache.pig.backend.hadoop.executionengine.tez.TezOperator.TezOperator(OperatorKey)
org.apache.pig.impl.builtin.GFCross.exec(Tuple)
org.apache.pig.impl.builtin.GFCross.GFCross(String)
org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOCross)
org.apache.pig.test.TestGFCross.testDefault()
org.apache.pig.test.TestGFCross.testParallelSet()
org.apache.pig.test.TestGFCross.testSerial()
org.apache.pig.test.TestMRCompiler.testSortUDF1()
org.apache.pig.tez.TestTezCompiler.run(String,String)
org.apache.pig.tez.TestTezJobControlCompiler.compile(String)
