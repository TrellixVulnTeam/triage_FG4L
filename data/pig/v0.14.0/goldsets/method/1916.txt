org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitCross(POCross)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitFilter(POFilter)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.visitStream(POStream)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitFRJoin(POFRJoin)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor.visitLimit(POLimit)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.accumulateData()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.createTuple(Tuple[])
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.getNext(Tuple)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.illustratorMarkup(Object,Object,int)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.name()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey,int)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey,int,List<PhysicalOperator>,PhysicalOperator)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.POCross(OperatorKey,List<PhysicalOperator>,PhysicalOperator)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.supportsMultipleInputs()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.supportsMultipleOutputs()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCross.visit(PhyPlanVisitor)
org.apache.pig.newplan.logical.relational.LOCross.isNested()
org.apache.pig.newplan.logical.relational.LOCross.LOCross(LogicalPlan)
org.apache.pig.newplan.logical.relational.LOCross.setNested(boolean)
org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor.visit(LOCross)
org.apache.pig.parser.LogicalPlanBuilder.buildNestedCrossOp(SourceLocation,LogicalPlan,String,List<Operator>,Operator)
org.apache.pig.parser.LogicalPlanBuilder.buildNestedLimitOp(SourceLocation,LOLimit,LogicalPlan,String,Operator,LogicalExpressionPlan)
org.apache.pig.parser.LogicalPlanBuilder.buildNestedOp(SourceLocation,LogicalPlan,LogicalRelationalOperator,String,List<Operator>,Operator)
org.apache.pig.parser.LogicalPlanBuilder.buildNestedOp(SourceLocation,LogicalPlan,LogicalRelationalOperator,String,Operator)
org.apache.pig.parser.LogicalPlanBuilder.createNestedSortOp(LogicalPlan)
org.apache.pig.test.TestForEachNestedPlanLocal.genDataSetFileOneGroup()
org.apache.pig.test.TestForEachNestedPlanLocal.generateDataSetFilesForNestedCross()
org.apache.pig.test.TestForEachNestedPlanLocal.testInnerLimit()
org.apache.pig.test.TestForEachNestedPlanLocal.testNestedCrossThreeRelations()
org.apache.pig.test.TestForEachNestedPlanLocal.testNestedCrossTwoRelations()
org.apache.pig.test.TestForEachNestedPlanLocal.testNestedCrossTwoRelationsComplex()
