org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.addAlgebraicFuncToCombineFE(POForEach,Map<PhysicalOperator,Integer>,PhysicalOperator,Integer)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.addKeyProject(POForEach)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.addPredecessorsToPlan(PhysicalOperator,PhysicalPlan,PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.algebraic(List<PhysicalPlan>,PhysicalPlan,List<Boolean>,Boolean)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.algebraic(PhysicalPlan,Boolean,int)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.AlgebraicPlanChecker(PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.checkSuccessorIsLeaf(PhysicalOperator,PhysicalOperator)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.getDistinct()
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.visitDistinct(PODistinct)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.visitFilter(POFilter)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.visitLimit(POLimit)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.AlgebraicPlanChecker.visitSort(POSort)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.changeFunc(POForEach,byte)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.changeFunc(POForEach,PhysicalPlan,byte)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CheckCombinableUserFunc.CheckCombinableUserFunc(PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CheckCombinableUserFunc.visit()
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CheckCombinableUserFunc.visitUserFunc(POUserFunc)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CombinerOptimizer(MROperPlan,String)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.CombinerOptimizer(MROperPlan,String,CompilationMessageCollector)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.createForEachWithGrpProj(POForEach,byte)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.createOperatorKey(String)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.createPlanWithPredecessors(PhysicalOperator,PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.DistinctPatcher.DistinctPatcher(PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.DistinctPatcher.visitProject(POProject)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.findAlgebraicOps(List<PhysicalPlan>,PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.fixMapProjects.fixMapProjects(PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.fixProjectAndInputs(List<PhysicalPlan>,PhysicalPlan,List<ExprType>,ExprType)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.fixUpForeachs(POForEach,POForEach,POForEach,List<ExprType>,ExprType)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.fixUpRearrange(POLocalRearrange)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.getAlgebraicSuccessor(POProject,PhysicalPlan)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.getDistinctUserFunc(PhysicalPlan,PhysicalOperator)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.getMessageCollector()
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.getNewRearrange(POLocalRearrange)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.getPreCombinerLR(POLocalRearrange)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.patchUpMap(PhysicalPlan,POPreCombinerLocalRearrange,POForEach,POLocalRearrange)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.resetState()
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.setProjectInput(PhysicalOperator,PhysicalPlan,int)
org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer.visitMROp(MapReduceOper)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCombinerPackage.getKeyPositionsInTuple()
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCombinerPackage.getNext(Tuple)
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCombinerPackage.POCombinerPackage(POPackage,boolean[])
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCombinerPackage.POCombinerPackage(POPackage,boolean[],boolean[])
org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage.setKeyType(byte)
org.apache.pig.test.TestCombiner.checkCombinerUsed(PigServer,String,boolean)
org.apache.pig.test.TestCombiner.testDistinctAggs1()
org.apache.pig.test.TestCombiner.testDistinctNoCombiner()
org.apache.pig.test.TestCombiner.testGroupElements()
org.apache.pig.test.TestCombiner.testMultiCombinerUse()
org.apache.pig.test.TestMultiQueryCompiler.testMultiQueryPhase3WithMixedCombiner()
