<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:32:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-366/OPENJPA-366.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-366] InternalException thrown in BrokerImpl.endOperation</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-366</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Under heavy load during stress test, the following exception is observed:&lt;/p&gt;

&lt;p&gt;&amp;lt;openjpa-1.0.0-SNAPSHOT-r420667:570288M fatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: null&lt;br/&gt;
        at org.apache.openjpa.kernel.BrokerImpl.endOperation(BrokerImpl.java:1728)&lt;br/&gt;
        at org.apache.openjpa.kernel.BrokerImpl.isActive(BrokerImpl.java:1676)&lt;br/&gt;
        at org.apache.openjpa.kernel.DelegatingBroker.isActive(DelegatingBroker.java:420)&lt;br/&gt;
        at org.apache.openjpa.persistence.EntityManagerImpl.isActive(EntityManagerImpl.java:502)&lt;br/&gt;
        at org.apache.openjpa.persistence.PersistenceExceptions$2.translate(PersistenceExceptions.java:66)&lt;br/&gt;
        at org.apache.openjpa.kernel.DelegatingBroker.translate(DelegatingBroker.java:110)&lt;br/&gt;
        at org.apache.openjpa.kernel.DelegatingBroker.newObjectId(DelegatingBroker.java:262)&lt;br/&gt;
        at org.apache.openjpa.persistence.EntityManagerImpl.find(EntityManagerImpl.java:347)&lt;br/&gt;
        at com.ibm.svt.shoppingcartModule.stationstore.StationStoreSessionBean.getListOrders(StationStoreSessionBean.java:603)&lt;br/&gt;
        at com.ibm.svt.shoppingcartModule.stationstore.EJSRemoteStatelessStationStoreSession_5a5c538c.getListOrders(Unknown Source)&lt;br/&gt;
        at com.ibm.svt.shoppingcartModule.stationstore._EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.getListOrders(_EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.java:244)&lt;br/&gt;
        at com.ibm.svt.shoppingcartModule.stationstore._EJSRemoteStatelessStationStoreSession_5a5c538c_Tie._invoke(_EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.java:100)&lt;br/&gt;
        at com.ibm.CORBA.iiop.ServerDelegate.dispatchInvokeHandler(ServerDelegate.java:613)&lt;br/&gt;
        at com.ibm.CORBA.iiop.ServerDelegate.dispatch(ServerDelegate.java:466)&lt;br/&gt;
        at com.ibm.rmi.iiop.ORB.process(ORB.java:503)&lt;br/&gt;
        at com.ibm.CORBA.iiop.ORB.process(ORB.java:1553)&lt;br/&gt;
        at com.ibm.rmi.iiop.Connection.respondTo(Connection.java:2680)&lt;br/&gt;
        at com.ibm.rmi.iiop.Connection.doWork(Connection.java:2554)&lt;br/&gt;
        at com.ibm.rmi.iiop.WorkUnitImpl.doWork(WorkUnitImpl.java:62)&lt;br/&gt;
        at com.ibm.ejs.oa.pool.PooledThread.run(ThreadPool.java:118)&lt;br/&gt;
        at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1469)&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;8/31/07 22:45:26:265 EDT&amp;#93;&lt;/span&gt; 000000c1 SystemOut     O   MDD Translating exception: &amp;lt;openjpa-0.0.0-r420667:570288 fatal internal error&amp;gt; org.apache.openjpa.util.InternalException: null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;8/31/07 22:45:26:265 EDT&amp;#93;&lt;/span&gt; 000000c1 SystemErr     R   &amp;lt;openjpa-0.0.0-r420667:570288 fatal internal error&amp;gt; org.apache.openjpa.util.InternalException: null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;8/31/07 22:45:26:265 EDT&amp;#93;&lt;/span&gt; 000000c1 SystemErr     R   	at org.apache.openjpa.kernel.BrokerImpl.endOperation(BrokerImpl.java:1728)&lt;/p&gt;

&lt;p&gt;After some investigation, it was determined that the internal exception is caused by&lt;br/&gt;
             if (_operationCount &amp;lt; 1)&lt;br/&gt;
                throw new InternalException();&lt;br/&gt;
in BrokerImpl.endOperation();&lt;/p&gt;

&lt;p&gt;We believe the cause of the problem is a lock() method call is missing in the endOperation()&lt;/p&gt;

&lt;p&gt;    public boolean endOperation() {&lt;br/&gt;
        lock();   &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;  This is the missing lock() call since BrokerImpl.java was created&lt;br/&gt;
        try {&lt;br/&gt;
            if (_operationCount == 1 &amp;amp;&amp;amp; (_autoDetach &amp;amp; DETACH_NONTXREAD) != 0&lt;br/&gt;
                &amp;amp;&amp;amp; (_flags &amp;amp; FLAG_ACTIVE) == 0) &lt;/p&gt;
{
                detachAllInternal(null);
            }
&lt;p&gt;            if (_operationCount &amp;lt; 1)&lt;br/&gt;
                throw new InternalException();&lt;br/&gt;
            return _operationCount == 1;&lt;br/&gt;
        } catch (OpenJPAException ke) &lt;/p&gt;
{
            throw ke;
        }
&lt;p&gt; catch (RuntimeException re) &lt;/p&gt;
{
            throw new GeneralException(re);
        }
&lt;p&gt; finally &lt;/p&gt;
{
            _operationCount--;
            if (_operationCount == 0)
                _operating.clear();
            unlock();
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Once we have done more tests and verify the fix, I&apos;ll submit a patch for this problem.&lt;/p&gt;

&lt;p&gt;If anyone doesn&apos;t think this is the solution. please response.&lt;/p&gt;

&lt;p&gt;Albert Lee.&lt;/p&gt;</description>
                <environment>All platforms</environment>
        <key id="12378057">OPENJPA-366</key>
            <summary>InternalException thrown in BrokerImpl.endOperation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="allee8285">Albert Lee</assignee>
                                    <reporter username="allee8285">Albert Lee</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Sep 2007 15:27:11 +0100</created>
                <updated>Wed, 27 Feb 2008 20:30:42 +0000</updated>
                            <resolved>Thu, 31 Jan 2008 00:45:29 +0000</resolved>
                                    <version>1.0.0</version>
                                    <fixVersion>1.0.2</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12527179" author="allee8285" created="Thu, 13 Sep 2007 18:10:41 +0100"  >&lt;p&gt;Add lock() in BrokerImpl.endOperation().&lt;/p&gt;

&lt;p&gt;Stress test ran for 24 hours and still have not observed the reported problem. Continue to test with increasing workloads and clients for a 48 hours run.&lt;/p&gt;</comment>
                            <comment id="12527669" author="allee8285" created="Sat, 15 Sep 2007 02:23:07 +0100"  >&lt;p&gt;The hypothesis that the lock() is missing in endOperation() is incorrect. It was not there by design. Can some administrator remove the attached patch in this report.&lt;/p&gt;

&lt;p&gt;We&apos;ll continue to investigate this issue and appreciate if anyone has any clues or ideas on where the problem is or how to attach the problem.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12529474" author="allee8285" created="Fri, 21 Sep 2007 16:42:09 +0100"  >&lt;p&gt;An update to this issue:&lt;/p&gt;

&lt;p&gt;1) The test scenario is a simple Sale - 1toM - Order processing&lt;br/&gt;
2) A EJB 2.1 stateless session bean StationBean is used to drive the Sale. It uses JSE style access to JPA functions.&lt;/p&gt;

&lt;p&gt;    public void ejbCreate() throws javax.ejb.CreateException &lt;/p&gt;
{
        ut = (UserTransaction) getSessionContext().getUserTransaction();
        saleFactory = Persistence.createEntityManagerFactory(&quot;StationSale&quot;);
        saleManager = saleFactory.createEntityManager();
    }

&lt;p&gt;3) This bean has a getListOrder() method returns Vector&amp;lt;Order&amp;gt;.&lt;/p&gt;

&lt;p&gt;    public Vector getListOrders(int saleid) throws Exception {&lt;br/&gt;
        String methodName = &quot;getListOrders&quot;;&lt;br/&gt;
        Vector v = new Vector();&lt;br/&gt;
        try {&lt;br/&gt;
            ut.begin();&lt;br/&gt;
            saleManager.joinTransaction();&lt;br/&gt;
            Sale sl = saleManager.find(Sale.class, saleid);&lt;br/&gt;
            if (sl != null) {&lt;br/&gt;
                saleManager.refresh(sl);&lt;br/&gt;
                Collection c = sl.getOrders();&lt;br/&gt;
                if (c != null) {&lt;br/&gt;
                    Iterator ids = c.iterator();&lt;br/&gt;
                    while (ids.hasNext()) {&lt;br/&gt;
                        Order o = (Order) ids.next();&lt;br/&gt;
                        if (o != null) &lt;/p&gt;
{
                            v.add(o);
                        }
&lt;p&gt;                    }&lt;br/&gt;
                }&lt;br/&gt;
                ut.commit();&lt;br/&gt;
            } else &lt;/p&gt;
{
                throw new Exception(&quot;getListOrders, Unable to find Sale , returned null for saleid = &quot;  + saleid);
            }
&lt;p&gt;        } catch (Exception e1) &lt;/p&gt;
{
            ut.rollback();
            throw e1;
        }
&lt;p&gt;        return v;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;4) A test driver accesses the StationBean in multiple clients under heavy load. As a result, the observed exception as report in the original comment occurs.&lt;br/&gt;
5) Re-run the test with &quot;openjpa.Multithreaded=true&quot; property resolved the problem. It is due to the fact that this property installed a ReentrantLock in the BrokerImpl to synchronize multiple invocations to the same BrokerImpl.&lt;br/&gt;
6) After further analysis of the problem, the following stacks revealed the sources of the multiple invocations to the same broker:&lt;/p&gt;

&lt;p&gt;   &amp;gt;&amp;gt;&amp;gt; Thread 1 : Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;ORB.thread.pool : 3,5,main&amp;#93;&lt;/span&gt;&lt;br/&gt;
 java.lang.Exception: curThread=Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;ORB.thread.pool : 3,5,main&amp;#93;&lt;/span&gt;:lock=&lt;/p&gt;
{noLock}:threadCnt=2:_operationCount=0&lt;br/&gt;
   at org.apache.openjpa.kernel.BrokerImpl.beginOperation(BrokerImpl.java:1723)&lt;br/&gt;
   at org.apache.openjpa.kernel.BrokerImpl.newObjectId(BrokerImpl.java:1060)&lt;br/&gt;
   at org.apache.openjpa.kernel.DelegatingBroker.newObjectId(DelegatingBroker.java:252)&lt;br/&gt;
   at org.apache.openjpa.persistence.EntityManagerImpl.find(EntityManagerImpl.java:347)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.stationstore.StationStoreSessionBean.getListOrders(StationStoreSessionBean.java:603)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.stationstore.EJSRemoteStatelessStationStoreSession_5a5c538c.getListOrders(Unknown Source)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.stationstore._EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.getListOrders(_EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.java:244)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.stationstore._EJSRemoteStatelessStationStoreSession_5a5c538c_Tie._invoke(_EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.java:100)&lt;br/&gt;
   at com.ibm.CORBA.iiop.ServerDelegate.dispatchInvokeHandler(ServerDelegate.java:613)&lt;br/&gt;
   at com.ibm.CORBA.iiop.ServerDelegate.dispatch(ServerDelegate.java:466)&lt;br/&gt;
   at com.ibm.rmi.iiop.ORB.process(ORB.java:503)&lt;br/&gt;
   at com.ibm.CORBA.iiop.ORB.process(ORB.java:1553)&lt;br/&gt;
   at com.ibm.rmi.iiop.Connection.respondTo(Connection.java:2680)&lt;br/&gt;
   at com.ibm.rmi.iiop.Connection.doWork(Connection.java:2554)&lt;br/&gt;
   at com.ibm.rmi.iiop.WorkUnitImpl.doWork(WorkUnitImpl.java:62)&lt;br/&gt;
   at com.ibm.ejs.oa.pool.PooledThread.run(ThreadPool.java:118)&lt;br/&gt;
   at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1469)&lt;br/&gt;
&lt;br/&gt;
   &amp;gt;&amp;gt;&amp;gt; Thread 2 : Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;ORB.thread.pool : 2,5,main&amp;#93;&lt;/span&gt;&lt;br/&gt;
 java.lang.Exception: curThread=Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;ORB.thread.pool : 2,5,main&amp;#93;&lt;/span&gt;:lock={noLock}
&lt;p&gt;:threadCnt=1:_operationCount=0&lt;br/&gt;
   at org.apache.openjpa.kernel.BrokerImpl.beginOperation(BrokerImpl.java:1723)&lt;br/&gt;
   at org.apache.openjpa.kernel.BrokerImpl.isActive(BrokerImpl.java:1683)&lt;br/&gt;
   at org.apache.openjpa.kernel.StateManagerImpl.load(StateManagerImpl.java:352)&lt;br/&gt;
   at org.apache.openjpa.kernel.DetachManager.preDetach(DetachManager.java:156)&lt;br/&gt;
   at org.apache.openjpa.kernel.DetachManager.preSerialize(DetachManager.java:91)&lt;br/&gt;
   at org.apache.openjpa.kernel.StateManagerImpl.serializing(StateManagerImpl.java:1310)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.storeEntities.Order.pcSerializing(Order.java)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.storeEntities.Order.writeObject(Order.java)&lt;br/&gt;
   at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)&lt;br/&gt;
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
   at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.invokeObjectWriter(IIOPOutputStream.java:966)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.outputObject(IIOPOutputStream.java:1002)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.writeSerializable(IIOPOutputStream.java:1050)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.simpleWriteObjectInternal(IIOPOutputStream.java:427)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.simpleWriteObjectLoop(IIOPOutputStream.java:455)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.defaultWriteObjectDelegate(IIOPOutputStream.java:566)&lt;br/&gt;
   at com.ibm.rmi.io.OutputStreamHook.defaultWriteObject(OutputStreamHook.java:132)&lt;br/&gt;
   at java.util.Vector.writeObject(Vector.java:869)&lt;br/&gt;
   at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)&lt;br/&gt;
   at java.util.Vector.writeObject(Vector.java:869)&lt;br/&gt;
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
   at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)&lt;br/&gt;
   at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.invokeObjectWriter(IIOPOutputStream.java:966)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.outputObject(IIOPOutputStream.java:1002)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.writeSerializable(IIOPOutputStream.java:1050)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.simpleWriteObjectInternal(IIOPOutputStream.java:427)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.simpleWriteObjectLoop(IIOPOutputStream.java:455)&lt;br/&gt;
   at com.ibm.rmi.io.IIOPOutputStream.simpleWriteObject(IIOPOutputStream.java:512)&lt;br/&gt;
   at com.ibm.rmi.io.ValueHandlerImpl.writeValue(ValueHandlerImpl.java:159)&lt;br/&gt;
   at com.ibm.rmi.iiop.CDROutputStream.write_value(CDROutputStream.java:1477)&lt;br/&gt;
   at com.ibm.rmi.iiop.CDROutputStream.write_value(CDROutputStream.java:1497)&lt;br/&gt;
   at com.ibm.rmi.iiop.CDROutputStream.write_value(CDROutputStream.java:1459)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.stationstore._EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.getListOrders(_EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.java:256)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.stationstore._EJSRemoteStatelessStationStoreSession_5a5c538c_Tie._invoke(_EJSRemoteStatelessStationStoreSession_5a5c538c_Tie.java:100)&lt;br/&gt;
   at com.ibm.CORBA.iiop.ServerDelegate.dispatchInvokeHandler(ServerDelegate.java:613)&lt;br/&gt;
   at com.ibm.CORBA.iiop.ServerDelegate.dispatch(ServerDelegate.java:466)&lt;br/&gt;
   at com.ibm.rmi.iiop.ORB.process(ORB.java:503)&lt;br/&gt;
   at com.ibm.CORBA.iiop.ORB.process(ORB.java:1553)&lt;br/&gt;
   at com.ibm.rmi.iiop.Connection.respondTo(Connection.java:2680)&lt;br/&gt;
   at com.ibm.rmi.iiop.Connection.doWork(Connection.java:2554)&lt;br/&gt;
   at com.ibm.rmi.iiop.WorkUnitImpl.doWork(WorkUnitImpl.java:62)&lt;br/&gt;
   at com.ibm.ejs.oa.pool.PooledThread.run(ThreadPool.java:118)&lt;br/&gt;
   at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1469)&lt;/p&gt;

&lt;p&gt;7) Thread #1 is doing the normal em.find processing and hits the BrokerImpl.beginOperation().&lt;br/&gt;
8) Thread #2 has completed the em.find processing and the Vector&amp;lt;Order&amp;gt; is collected properly in the getListOrder() method. ORB/CORBA is trying to serialize the return Vector&amp;lt;Order&amp;gt; back to the remote client.&lt;br/&gt;
9) During this processing, it is getting back to openjpa to serialize an Order in the returning collection:&lt;/p&gt;

&lt;p&gt;   at org.apache.openjpa.kernel.StateManagerImpl.serializing(StateManagerImpl.java:1310)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.storeEntities.Order.pcSerializing(Order.java)&lt;br/&gt;
   at com.ibm.svt.shoppingcartModule.storeEntities.Order.writeObject(Order.java)&lt;br/&gt;
   at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;10) The EJB container guarantees a different StationBean instance is invoked from getListOrders() method call which initiated from different threads/clients, and since the em in each StationBean instance is obtained independently from Persistence class, we can concluded the em.find() in each bean invocation must use a different broker for the em.find() call.&lt;br/&gt;
11) Therefore we suspect somehow a incorrect broker (same broker used by Thread #1) is used during the pcSerializing invocation in Thread #2.&lt;br/&gt;
12) Another supporting fact for the hypothesis is we have observed scenario where there are up to 6 threads accessing the same BrokerImpl. Out of these call stacks, there is always only one thread exhibits the same stack pattern as in Thread #1 and the other threads have the Thread #2 call stack pattern.&lt;/p&gt;


&lt;p&gt;Questions:&lt;br/&gt;
1) What is(are) the conditions (e.g. openjpa features/property) that trigger the Order.pcSerializing() processing? I wrote a simplier test that mimic the test case and was unable to drive the Order.pcSerializing() method call.&lt;br/&gt;
2) How is the Order.pcSerilizing() determine which BrokerImpl to use to perform the serialization?&lt;br/&gt;
3) Any suggestings or insight into how to identify the culprit of this problem?&lt;/p&gt;

&lt;p&gt;Any help on this matter is greatly appreciated.&lt;br/&gt;
Albert Lee.&lt;/p&gt;</comment>
                            <comment id="12531042" author="allee8285" created="Fri, 28 Sep 2007 16:27:53 +0100"  >&lt;p&gt;After a lengthy investigation to this problem, it turns out there are a few problems in this application/ejb usage scenario:&lt;/p&gt;

&lt;p&gt;1) Problem #1 - Application&lt;/p&gt;

&lt;p&gt;The appl uses stateless session bean (SLSB) and JSE style JPA access, therefore the persistence context is extended. In each bean method call, the appl uses the persistence context to access JPA functions but did not clear the context upon method return. This leaves managed entities in the context propagates to the next client/thread who just happens to use the same session bean instance allocated by the EJB container from its slsb pool. &lt;/p&gt;

&lt;p&gt;2) Problem #2 - EJBContainer&lt;/p&gt;

&lt;p&gt;Typically, an application server generates EJB deployment code (GenCode), either statically or at runtime, for an application(.ear) in order to implement EJB Container semantics in the application server. This generated code sits between the ORB/COBRA and the EJB Container. It redirects calls from the client to the EJB Container. Here is a brief sequence of events during this call path:&lt;/p&gt;

&lt;p&gt;  a) ORB directs the client method call to the GenCode&lt;br/&gt;
  b) GenCode invokes the EJB Container to performs EJB semantics. E.g. start a transaction, CMP/BMP processing.  One of the function in this step is to allocate an user-defined bean instance.&lt;br/&gt;
  c) GenCode invokes the user define bean method.&lt;br/&gt;
  d) GenCode invokes the EJB Container to performs EJB clean up semantics. E.g. commit/rollback transaction, exception handling etc.  When this step is finished, the user-defined bean instance is returned back to the bean pool maintained by the EJB Container.&lt;br/&gt;
  e) GenCode returns the bean method returned object to ORB&lt;br/&gt;
   f) ORB serializes the returned object to an output stream which will be streamed back to the client.&lt;/p&gt;

&lt;p&gt;In the reported problem scenario, the method being calls return a Vector&amp;lt;OrderEntity&amp;gt;. Everything functions normally until step d) to f). After step d), the SLSB instance is returned back to the EJB pool and is available for use by the next client while the current thread is still processing step f).  If the returned object contains a managed entity, the serialization process will eventually invocate its owning EntityManager/broker. Since step d) to f) are not synchronized, in a high load environment, EJB Container may allocate the same SLSB instance to a client in another thread. Now there are 2 threads using managed entities in the same persistence context. Since EntityManager is not thread-safe (per JPA spec), the reported exception is observed.&lt;/p&gt;

&lt;p&gt;3) Problem #3 - OpenJPA&lt;/p&gt;

&lt;p&gt;OpenJPA is doing whatever it can to detect the multiple access to the same thread/broker. However when this happens, only a InternalException() with a &quot;null&quot; message is thrown and this percolates back to the user with an PersistenceException with no meaningful message to isolate the problem. This is a critical usability issues.&lt;/p&gt;


&lt;p&gt;Solutions for this Jira report:&lt;/p&gt;

&lt;p&gt;1) Application must clear all Persistence Context upon return for each bean method call. There are explicit example in the JPA spec demonstrates these usage. (JPA spec 5.7.1.1 and 5.7.1.2)&lt;br/&gt;
2) Proposed to enhance the error message when this error condition occurs to explain the cause of the problem and suggested the following possible solutions:&lt;br/&gt;
      a) set &quot;openjpa.Multithreaded=true&quot;, if the application requires and intent to support this particular usage. Application must fully responsible for the behavior of this undefined semantics.&lt;br/&gt;
      b) request application to make sure entity manager defines as attribute(s) in SLSB must be cleared upon each bean method invocation.&lt;/p&gt;

&lt;p&gt;I&apos;ll use this Jira report to addess solution 2).&lt;/p&gt;

&lt;p&gt;Albert Lee.&lt;/p&gt;</comment>
                            <comment id="12531927" author="allee8285" created="Tue, 2 Oct 2007 23:02:24 +0100"  >&lt;p&gt;Add a new message text for InternalException().&lt;/p&gt;

&lt;p&gt;This patch is tested against both 1.1.0 trunk and 1.0.x branch.&lt;/p&gt;</comment>
                            <comment id="12538815" author="allee8285" created="Tue, 30 Oct 2007 15:44:00 +0000"  >&lt;p&gt;There are still other issues need to be resolved. Defer to next release.&lt;/p&gt;</comment>
                            <comment id="12564246" author="pcl" created="Thu, 31 Jan 2008 00:45:29 +0000"  >&lt;p&gt;Marking as resolved, as I do not understand what additional issues remain for this issue. If there are any, please expand on them.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12366960" name="OPENJPA-366.patch" size="1713" author="allee8285" created="Tue, 2 Oct 2007 23:02:23 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Jan 2008 00:45:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt1sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203470</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>