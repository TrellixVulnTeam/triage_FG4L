<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:30:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1174/OPENJPA-1174.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1174] OpenJPA performs differently with orm.xml and annotations</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1174</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt; When configurations are provided from orm.xml file, some behaviors are different from behaviors on annotation configuration. &lt;br/&gt;
The behavior difference occurs when fetch=LAZY is specified on many-to-one mapping.&lt;/p&gt;

&lt;p&gt;When there are two objects Country and Security and Security has many-to-one mapping field country, &lt;br/&gt;
OpenJPA executes one more SQL query to get country field if orm.xml file is used.&lt;/p&gt;

&lt;hr /&gt;
&lt;ul&gt;
	&lt;li&gt;annotation case&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     // step 1) Load country in entity manager&lt;br/&gt;
     aUS_country = t.em.find(Country.class, aUS_sid);&lt;br/&gt;
     // SELECT t0.NAME FROM TEST16.COUNTRY t0 WHERE t0.COUNTRY_ID = ?&lt;/p&gt;

&lt;p&gt;     // step 2) Load security in entity manager&lt;br/&gt;
     aI_security = t.em.find(Security.class, aI_sid);&lt;br/&gt;
     // SELECT t0.COUNTRY_ID, t0.SYMBOL FROM TEST19.SECURITY t0 WHERE t0.SECURITY_ID = ?&lt;/p&gt;

&lt;p&gt;     // step 3) get country from security&lt;br/&gt;
     Country aUS_country2 = aI_security.getCountry();&lt;br/&gt;
     // no SQL was executed.&lt;br/&gt;
 .&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;orm.xml case&lt;br/&gt;
 .&lt;br/&gt;
     // step 1) Load country in entity manager&lt;br/&gt;
     aUS_country = t.em.find(Country.class, aUS_sid);&lt;br/&gt;
     // SELECT t0.NAME FROM TEST16.COUNTRY t0 WHERE t0.COUNTRY_ID = ?&lt;br/&gt;
 .&lt;br/&gt;
     // step 2) Load security in entity manager&lt;br/&gt;
     aI_security = t.em.find(Security.class, aI_sid);&lt;br/&gt;
     // SELECT t0.SYMBOL FROM TEST16.SECURITY t0 WHERE t0.SECURITY_ID = ?&lt;br/&gt;
 .&lt;br/&gt;
     // step 3) get country from security&lt;br/&gt;
     Country aUS_country2 = aI_security.getCountry();&lt;br/&gt;
     // SELECT t1.COUNTRY_ID, t1.NAME   FROM TEST16.SECURITY t0, TEST16.COUNTRY t1 WHERE t0.SECURITY_ID = ? AND t0.COUNTRY_ID = t1.COUNTRY_ID
&lt;hr /&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; The important difference is in step 2. When using orm.xml, many-to-one field &quot;country&quot; was not loaded if fetch=LAZY.&lt;br/&gt;
 Instead, it&apos;s loaded on annotation configuration.&lt;br/&gt;
 .&lt;br/&gt;
 Because many-to-one &quot;country&quot; field is not loaded, step 3 executes additional SQL to load &quot;country&quot; field on orm.xml.&lt;br/&gt;
 Instead, on annotation case, step 3 did not execute any SQLs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12430079">OPENJPA-1174</key>
            <summary>OpenJPA performs differently with orm.xml and annotations</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rpalache">Ravi P Palacherla</assignee>
                                    <reporter username="rpalache">Ravi P Palacherla</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Jul 2009 18:02:49 +0100</created>
                <updated>Tue, 9 Mar 2010 18:31:18 +0000</updated>
                            <resolved>Tue, 25 Aug 2009 14:05:37 +0100</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>1.1.1</fixVersion>
                    <fixVersion>2.0.0-M3</fixVersion>
                                    <component>jpa</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="0">0h</timeoriginalestimate>
                            <timeestimate seconds="0">0h</timeestimate>
                                        <comments>
                            <comment id="12731117" author="rpalache" created="Tue, 14 Jul 2009 21:36:05 +0100"  >&lt;p&gt;Attached patch file contains the testcase and fix.&lt;/p&gt;

&lt;p&gt;Please comment after reviewing the changes.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Ravi.&lt;/p&gt;</comment>
                            <comment id="12731511" author="mikedd" created="Wed, 15 Jul 2009 16:37:04 +0100"  >&lt;p&gt;Thanks for the patch Ravi. I noticed that you also updated how we handle embeddables when specified in a mapping file. They&apos;re now included in the default fetch group automatically. &lt;/p&gt;

&lt;p&gt;It matches the annotation handling and it&apos;s a great catch but we probably should add a testcase for it (unless I&apos;ve missed where it&apos;s covered). &lt;/p&gt;

&lt;p&gt;The patch looks good though - running regression tests now. &lt;/p&gt;</comment>
                            <comment id="12731529" author="rpalache" created="Wed, 15 Jul 2009 16:51:14 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;Thanks for looking into it.&lt;/p&gt;

&lt;p&gt;The current testcase attached just shows how it is handled in case of mapping file.&lt;br/&gt;
Are you looking for a testcase that shows the differences between annotation handling and mapping file?&lt;br/&gt;
Please confirm and I will start working on it.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Ravi.&lt;/p&gt;


</comment>
                            <comment id="12731603" author="mikedd" created="Wed, 15 Jul 2009 19:17:10 +0100"  >&lt;p&gt;Hi Ravi,&lt;/p&gt;

&lt;p&gt;Here&apos;s the portion of the patch that I&apos;m talking about :&lt;/p&gt;

&lt;p&gt;@@ -1393,6 +1398,7 @@&lt;/p&gt;

&lt;p&gt;     protected void parseEmbedded(FieldMetaData fmd, Attributes attrs)&lt;br/&gt;
         throws SAXException {&lt;br/&gt;
         assertPC(fmd, &quot;Embedded&quot;);&lt;br/&gt;
+        fmd.setInDefaultFetchGroup(true);&lt;br/&gt;
         fmd.setEmbedded(true);&lt;br/&gt;
         fmd.setSerialized(false); // override any Lob annotation&lt;/p&gt;

&lt;p&gt;This is the only method in XMLPesistenceMetaDataParser that doesn&apos;t have a check like this one : &lt;br/&gt;
                String val = attrs.getValue(&quot;fetch&quot;);&lt;br/&gt;
                if (val != null) &lt;/p&gt;
{
                    fmd.setInDefaultFetchGroup(&quot;EAGER&quot;.equals(val));
                }

&lt;p&gt;With this change we won&apos;t be checking the fetch value for Embedded fields. It matches the annotation parser, but we should add a testcase with an Embedded field to demonstrate the change in behavior. &lt;/p&gt;

&lt;p&gt;Actually it might be worth spending a few cycles on developing lower level unit test that validates that the annotations &amp;amp; xml are handled identically, but that&apos;s beyond the scope of this issue really. &lt;/p&gt;</comment>
                            <comment id="12731618" author="mikedd" created="Wed, 15 Jul 2009 19:46:26 +0100"  >&lt;p&gt;Actually in thinking about this more I think the testcase needs to be reconsidered. What we&apos;re really interested in here is whether the metedata is generated identically when we use an xml mapping file or annotations. We&apos;re not particularly interested in whether we ignore FetchType=LAZY - so long as we do it identically either way the MetaData is obtained. &lt;/p&gt;

&lt;p&gt;The testcase relies on the LAZY hint being ignored (it&apos;s actually very interesting that it isn&apos;t ignored if no hint is specified). This behavior can&apos;t be relied on and wouldn&apos;t be expected in most cases. We could change this behavior at any point in the future and this testcase would no longer serve the intended purpose. &lt;/p&gt;

&lt;p&gt;A better functional test would be to have duplicates of the entities : one with annotations one with orm.xml and make sure the same SQL is issued for both of them. A better unit test could just look at the ClassMetaData / ClassMapping for the two entities and make sure they are equivalent.&lt;/p&gt;

&lt;p&gt;In addition we&apos;ll want to add an Embedded field in the entities since there&apos;s a specific change to parseEmbedded that needs to be asserted. &lt;/p&gt;

&lt;p&gt;While the code changes look correct I&apos;d prefer to validate it with a more reliable unit test. &lt;/p&gt;</comment>
                            <comment id="12734058" author="rpalache" created="Wed, 22 Jul 2009 11:11:38 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;Attached patch contains new testcase.&lt;br/&gt;
This time it compared SQL generated from annotation processing with mapping file processing.&lt;/p&gt;

&lt;p&gt;Please review it and let me know of any changes.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Ravi.&lt;/p&gt;</comment>
                            <comment id="12737729" author="mikedd" created="Fri, 31 Jul 2009 22:55:32 +0100"  >&lt;p&gt;Hi Ravi, the new patch looks good. I&apos;m running the regression bucket now (not expecting anything just a sanity check). The only change I had to make was to reorder tags in orm.xml (m2m must come before embedded). Not sure how anyone would notice that but the IBM SDK happens to check it.. &lt;/p&gt;</comment>
                            <comment id="12737733" author="mikedd" created="Fri, 31 Jul 2009 23:05:39 +0100"  >&lt;p&gt;Thanks for the patch and all the work debugging Ravi. &lt;/p&gt;

&lt;p&gt;Committed in revision 799754&lt;/p&gt;</comment>
                            <comment id="12741390" author="dezzio" created="Mon, 10 Aug 2009 16:57:24 +0100"  >&lt;p&gt;Merged fix at trunk revision 799754 to 1.1.x branch at revision 802838&lt;/p&gt;</comment>
                            <comment id="12747388" author="faywang" created="Tue, 25 Aug 2009 14:00:35 +0100"  >&lt;p&gt;The default fetch type for ManyToOne and OneToOne is eager. That is, if the fetch type is not specified in the orm.xml, the fetch mode should be eager.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12414201" name="OPENJPA-1174-trunk.patch" size="24443" author="rpalache" created="Wed, 22 Jul 2009 11:11:38 +0100"/>
                            <attachment id="12413479" name="OPENJPA-1174-trunk.patch" size="14938" author="rpalache" created="Tue, 14 Jul 2009 21:36:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Jul 2009 15:37:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38624</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt2o7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203613</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>