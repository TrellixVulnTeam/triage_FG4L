<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:44:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-736/OPENJPA-736.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-736] Combine insert and select SQL together for generated Id strategy=GenerationType.IDENTITY </title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-736</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Currently if the strategy of the generated id is GenerationType.IDENTITY,  when an entity object is created, openjpa will generate two SQL statements. The following is an example running on DB2:&lt;/p&gt;

&lt;p&gt;(1) INSERT INTO EntityA (col1, col2, col3, version) VALUES (?, ?, ?, ?) &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;params=(int) 1, (int) 1, (int) 1, (int) 1&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;(2) SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1&lt;/p&gt;

&lt;p&gt;A performance improvement is to take advantage of the &quot;select from final table&quot; feature in DB2 to combine the insert and select statement into a single SQL statement as shown below:&lt;/p&gt;

&lt;p&gt;SELECT id FROM FINAL TABLE (INSERT INTO EntityA (col1, col2, col3, version) VALUES (?, ?, ?, ?) )&lt;/p&gt;</description>
                <environment></environment>
        <key id="12405553">OPENJPA-736</key>
            <summary>Combine insert and select SQL together for generated Id strategy=GenerationType.IDENTITY </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="milosz">Milosz Tylenda</assignee>
                                    <reporter username="faywang">Fay Wang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Oct 2008 17:27:53 +0100</created>
                <updated>Tue, 9 Mar 2010 18:31:02 +0000</updated>
                            <resolved>Sun, 31 May 2009 10:58:38 +0100</resolved>
                                    <version>1.3.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12636135" author="fancy" created="Wed, 1 Oct 2008 20:37:28 +0100"  >&lt;p&gt;An alternative is to use db independent jdbc  getGeneratedKeys smethod on Statement interface.&lt;/p&gt;</comment>
                            <comment id="12636147" author="mikedd" created="Wed, 1 Oct 2008 21:04:26 +0100"  >&lt;p&gt;+1 to use getGeneratedKeys and expand the support to cover all databases.&lt;/p&gt;</comment>
                            <comment id="12636180" author="faywang" created="Wed, 1 Oct 2008 22:22:44 +0100"  >&lt;p&gt;The jdbc api that I could find for the generatedKey is in the Statement, not in the PreparedStatement:&lt;/p&gt;

&lt;p&gt;     Statement.executeUpdate(String sql, int autoGeneratedKeys)&lt;br/&gt;
     Statement.getGeneratedKeys( ) to get the ResultSet for the generated keys&lt;/p&gt;

&lt;p&gt;OpenJpa uses PreparedStatement, not the Statement. I don&apos;t think we should change from PreparedStatement to Statement just to get the generatedKeys. &lt;/p&gt;





</comment>
                            <comment id="12636195" author="faywang" created="Wed, 1 Oct 2008 22:58:15 +0100"  >&lt;p&gt;I just found that for PreparedStatement, we can call Connection.PreparedStatement(sql, int) to pass in autoGeneratedKeys. I will explore more about this approach.&lt;/p&gt;</comment>
                            <comment id="12636745" author="faywang" created="Fri, 3 Oct 2008 22:17:50 +0100"  >&lt;p&gt;Fix is committed into trunk r701537.&lt;/p&gt;</comment>
                            <comment id="12636762" author="faywang" created="Fri, 3 Oct 2008 23:41:01 +0100"  >&lt;p&gt;Fix some indentation problem under r701555.&lt;/p&gt;</comment>
                            <comment id="12695838" author="milosz" created="Sun, 5 Apr 2009 11:05:44 +0100"  >&lt;p&gt;More work is needed. The problem is that when a table has an identity (auto-increment) column, we omit that column in INSERT statement and then we retrieve the generated (and omitted) column by name. DB2 accepts this but MySQL and PostgreSQL go on strike. Testing on other databases may reveal more oddities.&lt;/p&gt;

&lt;p&gt;I will look into this.&lt;/p&gt;

&lt;p&gt;For those interested, the JDBC driver for PostgreSQL, available in their CVS, supports the getGeneratedKeys variant OpenJPA would use. There is an unofficial build available &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; which contains that feature.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://ejurka.com/pgsql/jars/genkey/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ejurka.com/pgsql/jars/genkey/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12702866" author="milosz" created="Sun, 26 Apr 2009 09:24:59 +0100"  >&lt;p&gt;Omitting an identity column is not the problem. The MySQL issue is that it does not allow the retrieval of generated column by its actual name - coulmn name is always &quot;GENERATED_KEY&quot;. The PostgreSQL issue is that it requires exact case in column name passed to Connection.prepareStatement(&quot;insert into IdentityGenerationType (someData) values(&apos;gktest&apos;)&quot;, new String[] &lt;/p&gt;
{&quot;orderid[case matters here]&quot;}
&lt;p&gt;);&lt;/p&gt;

&lt;p&gt;Looks like the solution is to pass identity column name thru DBDictionary case conversion and to get generated column value by using column index. MySQL, PostgreSQL and DB2 accept this. I will see what about MS SQL Server when I manage to install it. The MS JDBC 2.0 driver suggests it behaves much like MySQL &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms378445.aspx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/ms378445.aspx&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12707080" author="milosz" created="Thu, 7 May 2009 21:17:44 +0100"  >&lt;p&gt;Now when I have finally got SQL Server 2008 at my database pasture (what a glorious day! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, I have successfully tested the proposed solution with DB2, MySQL, PostgreSQL and SQL Server. I have committed the change to the trunk. I have made DBDictionary.convertSchemaCase public as the invocation is needed for PostgreSQL.&lt;/p&gt;

&lt;p&gt;A few more things to do:&lt;br/&gt;
1. Currently the support for JDBC 3 generated keys retrieval is auto-detected. I think we should also allow users to enable/disable it explicitly. Some people may want the old behaviour (issuing a database-specific query to fetch generated keys) for some reasons. Also, if a bug is lurking somewhere, we have an easy workaround by disabling the feature.&lt;br/&gt;
2. TestGenerationType could be extended to test both ways of generated keys retrieval where possible.&lt;br/&gt;
3. The user manual might need an update.&lt;br/&gt;
4. Apply the changes to 1.3.x.&lt;/p&gt;</comment>
                            <comment id="12707157" author="allee8285" created="Thu, 7 May 2009 23:26:08 +0100"  >&lt;p&gt;Signature change in PreparedStatementManagerImpl has broken subclass in (non-OpenJPA) derived product build.&lt;/p&gt;

&lt;p&gt;Albert Lee.&lt;/p&gt;</comment>
                            <comment id="12707368" author="milosz" created="Fri, 8 May 2009 16:06:38 +0100"  >&lt;p&gt;Albert, I can restore the signatures but unfortunately I am out of source access till the end of week. If it is more urgent, you could roll my change back.&lt;/p&gt;

&lt;p&gt;Sorry for the problem. My intent was to make signatures simpler - did not know someone might have already subclassed this.&lt;/p&gt;
</comment>
                            <comment id="12708177" author="milosz" created="Mon, 11 May 2009 20:56:37 +0100"  >&lt;p&gt;I have restored the signatures. Let me know if a problem still exists.&lt;/p&gt;</comment>
                            <comment id="12712394" author="milosz" created="Sat, 23 May 2009 10:32:02 +0100"  >&lt;p&gt;The attached patch supportsGetGeneratedKeys.patch addresses point 1. The idea is to auto-detect the property only if user did not specify the property value. In order to do that, I have changed the property type from primitive boolean to Boolean. Let me know if anybody sees this problematic.&lt;/p&gt;</comment>
                            <comment id="12714711" author="milosz" created="Sat, 30 May 2009 14:25:26 +0100"  >&lt;p&gt;Points 1, 2 and 3 applied to trunk.&lt;/p&gt;</comment>
                            <comment id="12714846" author="milosz" created="Sun, 31 May 2009 10:58:38 +0100"  >&lt;p&gt;Change applied also to 1.3.x branch.&lt;/p&gt;</comment>
                            <comment id="12721393" author="milosz" created="Thu, 18 Jun 2009 19:17:07 +0100"  >&lt;p&gt;For information, Oracle&apos;s driver also supports the getGeneratedKeys although Oracle database does not support auto-increment columns. The generated keys retrieval seems to play nicely with our OracleDictionary.useTriggersForAutoAssign feature for emulating auto-increment columns.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12411523">OPENJPA-847</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12391354" name="openjpa-736.patch" size="7676" author="faywang" created="Thu, 2 Oct 2008 13:36:56 +0100"/>
                            <attachment id="12408877" name="supportsGetGeneratedKeys.patch" size="1803" author="milosz" created="Sat, 23 May 2009 10:32:02 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Oct 2008 19:37:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161045</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyswz3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202690</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>