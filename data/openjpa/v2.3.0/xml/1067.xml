<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:42:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1067/OPENJPA-1067.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1067] SetQueryTimeout(x) where x != 0 causes SQLException with DB2 on Z/OS</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1067</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;A recent (AFAIK) update to the DB2 JDBC driver changed behavior when the setQueryTimeout method is called on a connection to Z/OS and the timeout was non 0. &lt;/p&gt;

&lt;p&gt;A non zero value is not supported, but previously the value was ignored. Now an SQLException is raised. &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12424719">OPENJPA-1067</key>
            <summary>SetQueryTimeout(x) where x != 0 causes SQLException with DB2 on Z/OS</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikedd">Michael Dick</assignee>
                                    <reporter username="mikedd">Michael Dick</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 May 2009 16:58:41 +0100</created>
                <updated>Wed, 27 May 2009 22:06:53 +0100</updated>
                            <resolved>Wed, 27 May 2009 22:06:44 +0100</resolved>
                                    <version>1.0.3</version>
                    <version>1.2.1</version>
                    <version>1.3.0</version>
                    <version>2.0.0-M2</version>
                                    <fixVersion>1.0.4</fixVersion>
                    <fixVersion>1.2.2</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12706481" author="drwoods" created="Wed, 6 May 2009 17:15:46 +0100"  >&lt;p&gt;Interesting... do you want me to look at this, given I modified how setQueryTimeout() is called in trunk to support the new javax.persistence.query.timeout hint?&lt;/p&gt;</comment>
                            <comment id="12706553" author="mikedd" created="Wed, 6 May 2009 19:48:53 +0100"  >&lt;p&gt;Hi Donald, I appreciate the offer. My proposed solution is to set supportsQueryTimeout = false for Z/OS in the DB2Dictionary. Preliminary testing works with 1.2.1. &lt;/p&gt;

&lt;p&gt;I don&apos;t think it pays to invent something new that handles the value of 0. If that&apos;s the only value it accepts presumably that&apos;s the default anyway. &lt;/p&gt;</comment>
                            <comment id="12706559" author="drwoods" created="Wed, 6 May 2009 20:18:52 +0100"  >&lt;p&gt;OK, but should we disable query timeout support for all DB2 zOS users, or just catch and log any exceptions when calling setQueryTimeout(), which could be useful for other drivers too.  By disabling query timeout support, you also disable the current lock timeout support which relies on using setQueryTimeout().&lt;/p&gt;</comment>
                            <comment id="12706648" author="mikedd" created="Wed, 6 May 2009 23:59:27 +0100"  >&lt;p&gt;It&apos;s a bit of a tradeoff. We know this call will at best have no effect, and at worst throws an exception. Either way we&apos;ve wasted a trip to the database. &lt;/p&gt;

&lt;p&gt;I think in a perfect world it&apos;d be better to have the functions that rely on query timeouts check whether the DBDictionary supports them and provide feedback (exception or log) when they&apos;re called. That might be more trouble than it&apos;s worth though - I haven&apos;t looked at the affected code.  &lt;/p&gt;

&lt;p&gt;Before I saw your comment I went ahead and disabled it. I don&apos;t think there&apos;s any harm in leaving that code in and leaving the JIRA open though.&lt;/p&gt;</comment>
                            <comment id="12706659" author="mikedd" created="Thu, 7 May 2009 00:33:57 +0100"  >&lt;p&gt;Actually on second hand I think there&apos;s a separate issue here : whether we should remove the supportsQueryTimeout field. &lt;/p&gt;

&lt;p&gt;Selectively disabling some methods like we are with supportsQueryTimeout is problematic and it&apos;s easy to get out of sync with JDBC vendors (like we did in this case). We could let the call go through and let the upstream callers handle the exception - rather than checking for supportsQueryTimeout before calling the method. &lt;/p&gt;

&lt;p&gt;That&apos;s not a change I&apos;m comfortable making in 1.2.x or 1.0.x though. Negating the call and logging could be done though. &lt;/p&gt;

&lt;p&gt;There&apos;s a fair amount of precedent for checking before calling though (avoiding the trip to the database). Unless there are objections I&apos;ll open a sub-task / related issue to discuss whether we need the supportsQueryTimeout field. &lt;/p&gt;</comment>
                            <comment id="12706848" author="drwoods" created="Thu, 7 May 2009 13:54:21 +0100"  >&lt;p&gt;We have existing code and tests that check for (supportsQueryTimeout == true) today (like the reworked setTimeouts and setQueryTimeout in DBDictionary in trunk)  so there would be some minor rework.  Adding a try/catch/log wrapper to any setQueryTiemout() calls along with always calling getQueryTimeout() before setting a value, would probably be the better route for 1.3/2.0.  I&apos;d expect DB2 to fix this in the next driver release, given this is a regression/loss of function for existing users...&lt;/p&gt;</comment>
                            <comment id="12706905" author="mikedd" created="Thu, 7 May 2009 14:45:13 +0100"  >&lt;p&gt;As far as I can tell it never worked for Z/OS - this has been a restriction as far back as I could check. &lt;/p&gt;

&lt;p&gt;I&apos;m guessing their response would be that adding support would be a new feature request (could take some time), and would we rather have them throw the exception or just ignore it. Which is pretty much what we&apos;re talking about &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve started talking to the DB2 contacts I know, and I&apos;ll update the issue when I know more. &lt;/p&gt;</comment>
                            <comment id="12708635" author="mikedd" created="Tue, 12 May 2009 22:31:00 +0100"  >&lt;p&gt;For released versions (1.0.x - 1.2.x) I&apos;m leaning towards something like the attached patch (for 1.2.x). &lt;/p&gt;

&lt;p&gt;In trunk we may want to do something better (ie separate dictionaries for DB2ZOS to make this a little less kludgy, and as Donald said the code path is a little different so it might need some tweaking. &lt;/p&gt;

&lt;p&gt;The patch uses jMock in the testcase to simulate a connection to Z so if you just apply it in an IDE you may need to regen your list of dependencies (mvn eclipse:eclipse, or something similar). &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12426514">OPENJPA-1104</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 May 2009 16:15:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>88157</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7m8v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>288574</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>