<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:43:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-39/OPENJPA-39.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-39] Cascade delete does not work with foreign key constraints</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-39</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Removing a parent object in OneToMany with cascade=CascadeType.ALL raises foreign key constraints exception&lt;/p&gt;

&lt;p&gt;JpaParent.java&lt;br/&gt;
  @OneToMany(mappedBy=&quot;parent&quot;, cascade=CascadeType.ALL)&lt;br/&gt;
  private Set&amp;lt;JpaChild&amp;gt; children = new HashSet&amp;lt;JpaChild&amp;gt;();&lt;/p&gt;

&lt;p&gt;JpaChild.java&lt;br/&gt;
  @ManyToOne(optional=false)&lt;br/&gt;
  @JoinColumn(name=&quot;ParentId&quot;, nullable=false)&lt;br/&gt;
  private JpaParent parent = null;&lt;/p&gt;

&lt;p&gt;// This raises the following exception.  If foreign key is removed, it works OK (Maybe I have to let OpenJPA know about foreign key constraints)&lt;br/&gt;
JpaParent parent = em.find(JpaParent.class, 1);&lt;br/&gt;
em.remove(parent);&lt;/p&gt;

&lt;p&gt;&amp;lt;2|true|0.9.0-incubating-SNAPSHOT&amp;gt; org.apache.openjpa.persistence.RollbackException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerImpl.commit(EntityManagerImpl.java:371)&lt;br/&gt;
	at openjpa.test.BaseTestCase.destroyTestCase(BaseTestCase.java:82)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(BeforeAndAfterRunner.java:74)&lt;br/&gt;
	at org.junit.internal.runners.BeforeAndAfterRunner.runAfters(BeforeAndAfterRunner.java:65)&lt;br/&gt;
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:37)&lt;br/&gt;
	at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)&lt;br/&gt;
	at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)&lt;br/&gt;
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:71)&lt;br/&gt;
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)&lt;br/&gt;
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)&lt;br/&gt;
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)&lt;br/&gt;
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: &amp;lt;0|true|0.9.0-incubating-SNAPSHOT&amp;gt; org.apache.openjpa.persistence.PersistenceException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.newFlushException(BrokerImpl.java:2028)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:1876)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flushSafe(BrokerImpl.java:1772)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.beforeCompletion(BrokerImpl.java:1706)&lt;br/&gt;
	at org.apache.openjpa.kernel.LocalManagedRuntime.commit(LocalManagedRuntime.java:76)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.commit(BrokerImpl.java:1271)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingBroker.commit(DelegatingBroker.java:831)&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerImpl.commit(EntityManagerImpl.java:360)&lt;br/&gt;
	... 21 more&lt;br/&gt;
Caused by: &amp;lt;0|false|0.9.0-incubating-SNAPSHOT&amp;gt; org.apache.openjpa.persistence.PersistenceException: &lt;span class=&quot;error&quot;&gt;&amp;#91;BEA&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;SQLServer JDBC Driver&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;SQLServer&amp;#93;&lt;/span&gt;DELETE statement conflicted with COLUMN REFERENCE constraint &apos;JpaChild_Parent_FK&apos;. The conflict occurred in database &apos;pocdb&apos;, table &apos;JpaChild&apos;, column &apos;ParentId&apos;. &lt;/p&gt;
{prepstmnt 32048085 DELETE FROM JpaParent WHERE Id = ? AND OptLock = ? [params=(int) 1, (int) 1]} &lt;span class=&quot;error&quot;&gt;&amp;#91;code=547, state=23000&amp;#93;&lt;/span&gt;&lt;br/&gt;
FailedObject: openjpa.model.JpaParent-1&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(DBDictionary.java:3701)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:94)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:64)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushInternal(PreparedStatementManagerImpl.java:103)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flush(PreparedStatementManagerImpl.java:68)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.flushPrimaryRow(OperationOrderUpdateManager.java:158)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.flush(OperationOrderUpdateManager.java:86)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(AbstractUpdateManager.java:88)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(AbstractUpdateManager.java:68)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.flush(JDBCStoreManager.java:512)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingStoreManager.flush(DelegatingStoreManager.java:127)&lt;br/&gt;
	... 28 more&lt;br/&gt;
Caused by: org.apache.openjpa.lib.jdbc.ReportingSQLException: &lt;span class=&quot;error&quot;&gt;&amp;#91;BEA&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;SQLServer JDBC Driver&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;SQLServer&amp;#93;&lt;/span&gt;DELETE statement conflicted with COLUMN REFERENCE constraint &apos;JpaChild_Parent_FK&apos;. The conflict occurred in database &apos;pocdb&apos;, table &apos;JpaChild&apos;, column &apos;ParentId&apos;. {prepstmnt 32048085 DELETE FROM JpaParent WHERE Id = ? AND OptLock = ? [params=(int) 1, (int) 1]}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=547, state=23000&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(LoggingConnectionDecorator.java:186)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.access$700(LoggingConnectionDecorator.java:53)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection$LoggingPreparedStatement.executeUpdate(LoggingConnectionDecorator.java:839)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:266)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement.executeUpdate(JDBCStoreManager.java:1359)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushInternal(PreparedStatementManagerImpl.java:92)&lt;br/&gt;
	... 35 more&lt;/p&gt;
</description>
                <environment>Microsoft SQL Server 2000&lt;br/&gt;
Windows XP&lt;br/&gt;
Java SE 1.5&lt;br/&gt;
OpenJPA - source downloaded Aug 28, 2006)&lt;br/&gt;
Show &amp;#xBB;&lt;br/&gt;
Microsoft SQL Server 2000 Windows XP Java SE 1.5 OpenJPA - source downloaded today (Aug 14, 2006)&lt;br/&gt;
</environment>
        <key id="12349103">OPENJPA-39</key>
            <summary>Cascade delete does not work with foreign key constraints</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="megan.kim@gmail.com">Megan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Sep 2006 20:29:32 +0100</created>
                <updated>Fri, 22 Nov 2013 19:04:32 +0000</updated>
                            <resolved>Tue, 12 Sep 2006 00:55:42 +0100</resolved>
                                                                    <component>jpa</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12432220" author="awhite" created="Fri, 1 Sep 2006 20:53:27 +0100"  >&lt;p&gt;OpenJPA has to know where the DB foreign keys are.  You have a few options:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Using the org.apache.openjpa.persistence.ForeignKey annotation, and related annnotations (ElementForeignKey, etc) to tell OpenJPA exactly which relations and joins have foreign keys on them.&lt;/li&gt;
	&lt;li&gt;Setting the &quot;openjpa.jdbc.SchemaFactory&quot; property to &quot;native(ForeignKeys=true)&quot; will tell OpenJPA to read the existing schema from the DB, including foreign key locations, using JDBC schema reflection.  Under this setting OpenJPA will also validate that the schema and mappings match.&lt;/li&gt;
	&lt;li&gt;Setting the &quot;openjpa.jdbc.MappingDefaults&quot; property to &quot;jpa(ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict)&quot; will tell OpenJPA to just assume that all relations and joins are backed by database foreign keys.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The first and third options also affect schema creation, in that OpenJPA&apos;s schema creation tools will add foreign keys to to the annotated relations and joins / to all relations and joins under those settings.&lt;/p&gt;

&lt;p&gt;I&apos;ll leave this JIRA open for now in case anyone would like to comment on whether we should change the defaults.  Right now the defaults are to never assume any relation or join is backed by a database foreign key, and to never create database foreign keys during schema creation.&lt;/p&gt;</comment>
                            <comment id="12432221" author="awhite" created="Fri, 1 Sep 2006 20:54:56 +0100"  >&lt;p&gt;In the above comment, the correct annotation is org.apache.openjpa.persistence.jdbc.ForeignKey.&lt;/p&gt;</comment>
                            <comment id="12432316" author="megan.kim@gmail.com" created="Sun, 3 Sep 2006 04:07:33 +0100"  >&lt;p&gt;I have tried all 3 options but I am getting the same error.  Could you review if my configuration is correct&lt;/p&gt;

&lt;p&gt;1. Using the org.apache.openjpa.persistence.ForeignKey annotation (maybe I need more than adding @ForeignKey annotation)&lt;/p&gt;

&lt;p&gt;JpaChild.java:&lt;br/&gt;
  @ManyToOne(optional=false)&lt;br/&gt;
  @JoinColumn(name=&quot;ParentId&quot;, nullable=false)&lt;br/&gt;
  @ForeignKey&lt;br/&gt;
  private JpaParent parent = null;&lt;/p&gt;

&lt;p&gt;2. Setting the &quot;openjpa.jdbc.SchemaFactory&quot; property&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;persistence xmlns=&quot;http://java.sun.com/xml/ns/persistence&quot;&lt;br/&gt;
  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
  xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/persistence persistence_1_0.xsd&quot;&lt;br/&gt;
  version=&quot;1.0&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;persistence-unit name=&quot;test&quot; transaction-type=&quot;RESOURCE_LOCAL&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;provider&amp;gt;org.apache.openjpa.persistence.PersistenceProviderImpl&amp;lt;/provider&amp;gt;&lt;br/&gt;
    &amp;lt;class&amp;gt;openjpa.model.JpaParent&amp;lt;/class&amp;gt;&lt;br/&gt;
    &amp;lt;class&amp;gt;openjpa.model.JpaChild&amp;lt;/class&amp;gt;&lt;br/&gt;
    &amp;lt;properties&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.jdbc.DBDictionary&quot; value=&quot;sqlserver&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionDriverName&quot; value=&quot;weblogic.jdbc.sqlserver.SQLServerDriver&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionURL&quot; value=&quot;jdbc:bea:sqlserver://hostname:1433;databaseName=dbname&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionUserName&quot; value=&quot;username&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionPassword&quot; value=&quot;password&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.jdbc.SchemaFactory&quot; value=&quot;native(ForeignKeys=true)&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.Log&quot; value=&quot;DefaultLevel=WARN, Tool=INFO&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/properties&amp;gt;&lt;br/&gt;
  &amp;lt;/persistence-unit&amp;gt;&lt;br/&gt;
&amp;lt;/persistence&amp;gt;&lt;/p&gt;

&lt;p&gt;3. Setting the &quot;openjpa.jdbc.MappingDefaults&quot; property&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;persistence xmlns=&quot;http://java.sun.com/xml/ns/persistence&quot;&lt;br/&gt;
  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
  xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/persistence persistence_1_0.xsd&quot;&lt;br/&gt;
  version=&quot;1.0&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;persistence-unit name=&quot;test&quot; transaction-type=&quot;RESOURCE_LOCAL&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;provider&amp;gt;org.apache.openjpa.persistence.PersistenceProviderImpl&amp;lt;/provider&amp;gt;&lt;br/&gt;
    &amp;lt;class&amp;gt;openjpa.model.JpaParent&amp;lt;/class&amp;gt;&lt;br/&gt;
    &amp;lt;class&amp;gt;openjpa.model.JpaChild&amp;lt;/class&amp;gt;&lt;br/&gt;
    &amp;lt;properties&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.jdbc.DBDictionary&quot; value=&quot;sqlserver&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionDriverName&quot; value=&quot;weblogic.jdbc.sqlserver.SQLServerDriver&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionURL&quot; value=&quot;jdbc:bea:sqlserver://hostname:1433;databaseName=dbname&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionUserName&quot; value=&quot;username&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.ConnectionPassword&quot; value=&quot;password&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.jdbc.MappingDefaults&quot; value=&quot;jpa(ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict)&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;openjpa.Log&quot; value=&quot;DefaultLevel=WARN, Tool=INFO&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/properties&amp;gt;&lt;br/&gt;
  &amp;lt;/persistence-unit&amp;gt;&lt;br/&gt;
&amp;lt;/persistence&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12434021" author="awhite" created="Tue, 12 Sep 2006 00:55:42 +0100"  >&lt;p&gt;Turns out the problem is more complicated than just having a foreign key.  The issue is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;OpenJPA&apos;s UpdateManager plugin does not reorder SQL.  It issues SQL in the same order as the corresponding object-level operations.  The SQL-reordering UpdateManager is unique to Kodo.&lt;/li&gt;
	&lt;li&gt;When you delete a parent object and the operation cascades to children, the object-level operation order is delete parent, then delete children.&lt;/li&gt;
	&lt;li&gt;Issuing the SQL in that order will violate the FK constraint.  OpenJPA is smart enough to detect this and null the children record&apos;s FK columns before deleting the parent.&lt;/li&gt;
	&lt;li&gt;However, the columns in this case are non-nullable, so this strategy doesn&apos;t work.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, given that there are no plans to donate Kodo&apos;s SQL-reordering UpdateManager, the options are:&lt;br/&gt;
1. Use nullable foreign key columns, or&lt;br/&gt;
2. Delete the child objects before the parent at the object level.&lt;/p&gt;

&lt;p&gt;Also if you choose option #1, make sure to get the latest OpenJPA from SVN, as there was a critical problem with nulling the FK columns correctly that is now fixed (9/11/2006).  &lt;/p&gt;</comment>
                            <comment id="12434283" author="awhite" created="Tue, 12 Sep 2006 22:33:29 +0100"  >&lt;p&gt;I implemented Craig&apos;s suggestion of always considering the child object as deleted first when cascading a delete from parent to child.  So this test case will now work even with non-nullable foreign key columns.&lt;/p&gt;</comment>
                            <comment id="13830233" author="gugrim" created="Fri, 22 Nov 2013 19:04:32 +0000"  >&lt;p&gt;Could anyone explain why this bug has priority Minor with resolution Won&apos;t fix? This bug prevents us from using Geronimo at all. Our application works fine on GlassFish and JBoss but we would very much like to have it working on Geronimo. Dropping referential integrity is not an option but I can see no other workaround except writing all cascade deletes ourselves, as if EJB 3 doesn&apos;t have cascade delete at all. Have I misunderstood something? Is there a workaround that works?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12340079" name="ASF.LICENSE.NOT.GRANTED--testcase.zip" size="1543" author="megan.kim@gmail.com" created="Fri, 1 Sep 2006 20:29:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Sep 2006 19:53:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160376</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7jpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>288162</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>