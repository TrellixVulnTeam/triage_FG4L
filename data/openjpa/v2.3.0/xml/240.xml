<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:31:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-240/OPENJPA-240.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-240] Persistent field mappings to database supported XML columns</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-240</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>
&lt;p&gt;Many database systems such as DB2 version 9, Oracle 10g, and SQLServer 2005 have support for XML column types. XML documents can be stored natively in the XML columns in the database.&lt;br/&gt;
What is OpenJPA&apos;s position of supporting the XML columns ?&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12369528">OPENJPA-240</key>
            <summary>Persistent field mappings to database supported XML columns</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fancy">Catalina Wei</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 May 2007 00:01:58 +0100</created>
                <updated>Mon, 8 Nov 2010 17:33:32 +0000</updated>
                            <resolved>Tue, 7 Aug 2007 23:26:11 +0100</resolved>
                                                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12506032" author="fancy" created="Tue, 19 Jun 2007 05:08:23 +0100"  >&lt;p&gt;This feature has a dependency on JAXB XML Bindings (jaxb2.1 or later version). A J2EE application is required to generate JAXB XML bindings from XML documents&apos; schema definition (.xsd files). The persistent fields that map to XML columns will use XML marshalling to write the data to XML column and unmarshalling to retrieve the data from XML column. The XML marshalling and unmarshalling work is performed by the XmlValueHandler (org.apache.openjpa.xmlmapping.XmlValueHandler).&lt;/p&gt;

&lt;p&gt;The required annotations on persistent field that maps to an XML column are:&lt;br/&gt;
&#8226;	@Persistent&lt;br/&gt;
&#8226;	@ Stratedy(&quot;org.apache.openjpa.xmlmapping.XmlValueHandler&quot;)&lt;/p&gt;

&lt;p&gt;Jere is an example, Order entity&apos;s shipAddress maps to XML Column shipAddress of Order Table:&lt;br/&gt;
@Entity&lt;br/&gt;
Class Order &lt;/p&gt;
{
     @Persistent
     @Strategy(&quot;org.apache.openjpa.xmlmapping.XmlValueHandler&quot;)
      Address shipAddress;
     @Id ...
  }

&lt;p&gt;The runtime requirement of JAXB  is version 2.1 or later.&lt;/p&gt;

&lt;p&gt;Detailed documentation and test cases will soon be made available.&lt;/p&gt;
</comment>
                            <comment id="12507962" author="fancy" created="Mon, 25 Jun 2007 20:29:59 +0100"  >&lt;p&gt;Attached is the first draft of OpenJPA XML Mapping  documentation (in Word).&lt;br/&gt;
The first 3 pages of the document describe the feature, following that is the appendix containing a complete example.&lt;/p&gt;

&lt;p&gt;Comments are welcome.&lt;/p&gt;

&lt;p&gt;This document will be integrated into OpenJPA&apos;s doclumentation in docbook format&lt;/p&gt;

&lt;p&gt;Catalina&lt;/p&gt;</comment>
                            <comment id="12512325" author="fancy" created="Fri, 13 Jul 2007 02:08:28 +0100"  >&lt;p&gt;The attached patch is for this feature to support Query over XML mapping columns.&lt;br/&gt;
It extends the JPA Path expressions to support queries over persistent fields that are mapped to XML columns.&lt;br/&gt;
To make use of this feature,  You need to add the following property to your persistence.xml:&lt;/p&gt;

&lt;p&gt;  &amp;lt;property name=&quot;openjpa.MetaDataRepository&quot;&lt;br/&gt;
           value=&quot;org.apache.openjpa.jdbc.meta.XMLMappingRepository&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;0.1.1	Query support for XML Mappings&lt;br/&gt;
This feature is also extending the path expressions to support XML mappings. The path expressions and predicates over the XML binding class are converted to XML predicates and XPATH and pushed down to database. &lt;br/&gt;
The path expressions of XML binding classes are similar to that of embeddable classes. The regular embedded classes are structurally restricted to one level but the XML binding classes do not have such restrictions. Furthermore, the embedded fields in XML mappings can be multi-valued collections. However, traversing through multi-valued collection is not allowed.&lt;/p&gt;

&lt;p&gt;Query support for the path expressions of the XML mappings is limited to simple comparison predicates only for now. We will add more support to handle other JPQL predicates as we see where they are applicable in the future. &lt;/p&gt;

&lt;p&gt;(Note 1: Path expressions of XML mappings are not allowed in select expressions, i.e. the persistent field can appear in the selection list but the nested sub-fields can not.)&lt;br/&gt;
(Note 2: As it stands now, no proper blocking enforcements are in place. Attempting to do what is not allowed may get unexpected results.)&lt;/p&gt;

&lt;p&gt;0.1.2 Query examples (see attached documentation for the sample Order entity)&lt;/p&gt;

&lt;p&gt;The following query finds all Orders that ship to &apos;San Jose&apos; city:&lt;br/&gt;
Select o from Order o where o.shipAddress.city = &apos;San Jose&apos;&lt;/p&gt;

&lt;p&gt;The following query retrieves shipAddress of all Orders:&lt;br/&gt;
    Select o.shipAddress from Order o &lt;/p&gt;


&lt;p&gt;Will attach a sample application soon.&lt;/p&gt;

&lt;p&gt;Catalina&lt;/p&gt;</comment>
                            <comment id="12513792" author="fancy" created="Thu, 19 Jul 2007 03:50:57 +0100"  >&lt;p&gt;We have committed the patch for the feature &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-240&quot; title=&quot;Persistent field mappings to database supported XML columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-240&quot;&gt;&lt;del&gt;OPENJPA-240&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Current Limitations/Restrictions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Query support for field mapping to XMLColumn is only allowed to appear in simple comparison predicates.&lt;/li&gt;
	&lt;li&gt;To enable this function, the property  &quot;openjpa.MetaDataRepository&quot;  must explicitly set to&lt;br/&gt;
    &quot;org.apache.openjpa.jdbc.meta.XMLMappingRepository&quot;&lt;/li&gt;
	&lt;li&gt;XML schema with default namespace declaration at document level should work fine, but the namespace decl at  element level will fail to qualify (the predicate always evaluate to false, so query result is empty).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Remaining work items:&lt;br/&gt;
1. support namespace at element level.&lt;br/&gt;
2. Allow other type of predicates in addition to simple comparison predicates.&lt;br/&gt;
3. if no objection, make XMLMappingRepository as the default metadata repository (string set in JDBCConfigurationImpl.java)&lt;br/&gt;
4. when defecting a field having XML bindings, set default strategy to   XMLValueHandler without requiring  explicit @Strategy annotation in the entities&lt;/p&gt;

&lt;p&gt;Documentation:&lt;br/&gt;
We are working on converting the attached word doc to xml document, then merge that into OpenJPA developer&apos;s manual (we expect this should be done within a week).&lt;/p&gt;

&lt;p&gt;Cleanup  testcase - TestXMLCustomerOrder.java:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;remove System.out.printlns&lt;/li&gt;
	&lt;li&gt;assert  generated sqls against the answer set (TestXMLCustomerOrder.db2, TestXMLCustomerOrder.oracle, TestXMLCustomerOrder.sqlserver) rather than dumping it out to  a file  (./TestXMLCustomerOrder).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Catalina&lt;/p&gt;</comment>
                            <comment id="12515910" author="fancy" created="Fri, 27 Jul 2007 00:31:55 +0100"  >&lt;p&gt;added XML Column mapping documentation in ref_quide_mapping.xml&lt;/p&gt;</comment>
                            <comment id="12516098" author="fancy" created="Fri, 27 Jul 2007 21:50:21 +0100"  >&lt;p&gt;This patch is needed for XML Column mapping. It is a workaround until XMLClassMetaData is refactored.&lt;/p&gt;

&lt;p&gt;As Patrick&apos;s comment in dev-mailing-lsit::&lt;br/&gt;
  Re: svn commit: r557437 - in /openjpa/trunk: openjpa-jdbc- 5/src/main/java/org/apache/openjpa-jdbc-5...&lt;/p&gt;

&lt;p&gt;There should be a way to integrate XMLClassMetaData into the existing OpenJPA metadata concepts (similar to how ClassMetaData instances are constructed from MetaDataFactory instances). &lt;br/&gt;
And, the annotation-parsing code in XMLClassMetaData is moved into &lt;br/&gt;
openjpa-persistence annotation parser.&lt;/p&gt;

&lt;p&gt;So far, I have not got it worked out yet.&lt;br/&gt;
In the meantime, to enable XML Column mapping, users could specify in the persisten.xml the following property:&lt;br/&gt;
&amp;lt;property name=&quot;openjpa.MetaDataRepository&quot;&lt;br/&gt;
           value=&quot;org.apache.openjpa.jdbc.meta.XMLMappingRepository&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;But the problem is this persistence.xml can not be used to run Enhancer,&lt;br/&gt;
as it  will fail with Exception in thread &quot;main&quot; java.lang.NullPointerException&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.ValueMappingImpl.&amp;lt;init&amp;gt;(ValueMappingImpl.java:74)&lt;/p&gt;</comment>
                            <comment id="12516442" author="fancy" created="Mon, 30 Jul 2007 18:03:49 +0100"  >&lt;p&gt;Attached patch has JAXB XML annotation parser refactored out of XMLClassMetaData and moved into a new AnnotationPersistenceXMLMetaDataParser.&lt;/p&gt;</comment>
                            <comment id="12517825" author="fancy" created="Mon, 6 Aug 2007 06:19:56 +0100"  >&lt;p&gt;Hard-wried dependency on JAXB is replaced by using Class reflection.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12479394">OPENJPA-1877</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12404260">OPENJPA-723</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12411357">OPENJPA-846</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12411002">OPENJPA-833</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12362778" name="OPENJPA-240.r560665.patch" size="35737" author="fancy" created="Mon, 30 Jul 2007 18:03:49 +0100"/>
                            <attachment id="12363213" name="OPENJPA-240.r562987.patch" size="11509" author="fancy" created="Mon, 6 Aug 2007 06:19:56 +0100"/>
                            <attachment id="12360512" name="OpenJPAXMLMapping.doc" size="254464" author="fancy" created="Mon, 25 Jun 2007 20:29:58 +0100"/>
                            <attachment id="12361739" name="jpa1.0.0-xmlmapping.r555694.patch" size="54302" author="fancy" created="Fri, 13 Jul 2007 02:08:28 +0100"/>
                            <attachment id="12362647" name="openjpa-project.patch" size="10700" author="fancy" created="Fri, 27 Jul 2007 00:31:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>96963</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysw53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202555</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>