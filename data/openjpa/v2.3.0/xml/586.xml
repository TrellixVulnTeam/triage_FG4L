<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:43:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-586/OPENJPA-586.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-586] Binding Query parameter fails validation for Externalized field</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-586</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;OpenJPA supports a field f of declared type &amp;lt;T&amp;gt; be persisted in database corresponding to a different type &amp;lt;S&amp;gt; when  f specifies a two-way transformation between &amp;lt;S&amp;gt; and &amp;lt;T&amp;gt;. For example, a field f can be declared as java.net.URL but stored in database as String (i.e. VARCHAR). &lt;/p&gt;

&lt;p&gt;Now the question is:&lt;br/&gt;
    When an &apos;externalized&apos; field f occurs in query predicate and is bound by a parameter p what should be the runtime type of p? &lt;/p&gt;

&lt;p&gt;   The documentation &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; says p can be of either &amp;lt;T&amp;gt; or &amp;lt;S&amp;gt;.&lt;/p&gt;

&lt;p&gt;But the code breaks during parameter validation if Class(p) = &amp;lt;T&amp;gt; and with data conversion error if Class(p) = &amp;lt;S&amp;gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br/&gt;
1.   Declare a persistent field f of type java.util.UUID externalized to java.lang.String with a pair of transformer functions&lt;/p&gt;

&lt;p&gt;    @Persistent&lt;br/&gt;
    @Externalizer(&quot;toString&quot;)        &lt;br/&gt;
    @Factory(&quot;UUID.fromString&quot;)&lt;br/&gt;
    private UUID    uuid;&lt;/p&gt;

&lt;p&gt;2. Use the field f in a Query with a binding parameter:&lt;br/&gt;
        String jpql = &quot;SELECT p FROM ExternalValues p WHERE p.uuid=:uuid&quot;;&lt;br/&gt;
        Query query = em.createQuery(jpql);&lt;/p&gt;

&lt;p&gt;3. Try to set parameter on the query:&lt;br/&gt;
         a) query.setParameter(&quot;uuid&quot;, new UUID(1,2));  // parameter type equals declared type of f&lt;br/&gt;
or&lt;br/&gt;
         b) query.setParameter(1, new UUID(1,2).toString()); // parameter type equals externalized type of f&lt;/p&gt;

&lt;p&gt;4. Either of step 3a or 3b will result in runtime exception&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://openjpa.apache.org/docs/latest/manual/manual.html#ref_guide_pc_extern&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openjpa.apache.org/docs/latest/manual/manual.html#ref_guide_pc_extern&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12395166">OPENJPA-586</key>
            <summary>Binding Query parameter fails validation for Externalized field</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ppoddar@apache.org">Pinaki Poddar</assignee>
                                    <reporter username="ppoddar@apache.org">Pinaki Poddar</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 May 2008 22:58:50 +0100</created>
                <updated>Tue, 9 Mar 2010 18:32:50 +0000</updated>
                            <resolved>Mon, 9 Jun 2008 22:49:52 +0100</resolved>
                                                    <fixVersion>1.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12593655" author="ppoddar@apache.org" created="Thu, 1 May 2008 23:03:43 +0100"  >&lt;p&gt;This patch includes &lt;br/&gt;
  a) source code modification: The binding parameter types are changed to declared type of the fields instead of their externalized types&lt;br/&gt;
  b) test cases are added to verify the changes &lt;/p&gt;</comment>
                            <comment id="12593658" author="ppoddar@apache.org" created="Thu, 1 May 2008 23:09:50 +0100"  >&lt;p&gt;Here is snippet from Section 4.6.4.1 &quot;Positional Parameters&quot; of JPA 1.0 Spec:&lt;br/&gt;
&quot;An input parameter evaluates to the abstract schema type of the corresponding parameter defined in the signature of the finder or select method with which the query is associated. It is the responsibility of the persistence provider to map the input parameter to the appropriate abstract schema type value&quot;.  &lt;/p&gt;

&lt;p&gt;Subjected to our interpretaion of &quot;evaluates&quot;, the above directive seems to suggest that, for the given example, the runtime type of the binding parameter can be either java.util.UUID or java.lang.String. And OpenJPA documentation also seems to agree.&lt;/p&gt;

&lt;p&gt;However, with current implementation, it may be non-trivial to validate the query parameter at JPA-fa&#231;ade layer for &lt;b&gt;both&lt;/b&gt; types. It is rather prudent to restrict the user-supplied binding parameter be of declared type only (i.e. java.util.UUID) and not the externalized type (i.e. java.lang.String).   &lt;br/&gt;
That is what the attached patch (patch-586.1.txt) does.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12381279" name="patch-586.1.txt" size="6401" author="ppoddar@apache.org" created="Thu, 1 May 2008 23:03:43 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160902</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyszjz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203108</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>