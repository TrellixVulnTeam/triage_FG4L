<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:32:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-415/OPENJPA-415.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-415] Garbage collection of AbstractResultList instance closes active connection</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-415</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;While investigation a problem, I noticed that garbage collection kicks in on the AbstractResultList&apos;s finalize() method.&lt;br/&gt;
        ........&lt;br/&gt;
        at org.apache.openjpa.lib.jdbc.DelegatingConnection.close(DelegatingConnection.java:212)&lt;br/&gt;
        at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.close(LoggingConnectionDecorator.java:279)&lt;br/&gt;
        at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.free(JDBCStoreManager.java:1288)&lt;br/&gt;
        at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.close(JDBCStoreManager.java:1273)&lt;br/&gt;
        at org.apache.openjpa.jdbc.sql.ResultSetResult.close(ResultSetResult.java:182)&lt;br/&gt;
        at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.close(SelectResultObjectProvider.java:148)&lt;br/&gt;
        at org.apache.openjpa.lib.rop.WindowResultList.free(WindowResultList.java:158)&lt;br/&gt;
        at org.apache.openjpa.lib.rop.WindowResultList.close(WindowResultList.java:78)&lt;br/&gt;
        at org.apache.openjpa.lib.rop.AbstractResultList.finalize(AbstractResultList.java:89)&lt;br/&gt;
        at java.lang.J9VMInternals.runFinalize(J9VMInternals.java:406)&lt;/p&gt;

&lt;p&gt;When traversing the call stack to the ResultSetResult.close() method, it is trying to close the result set unconditionally, and then close the associated statement and connection if they exists:&lt;/p&gt;

&lt;p&gt;    public void close() {&lt;br/&gt;
        super.close();&lt;br/&gt;
        try &lt;/p&gt;
{
            _rs.close();
        }
&lt;p&gt; catch (SQLException se) {&lt;br/&gt;
        }&lt;br/&gt;
        if (_stmnt != null)&lt;br/&gt;
            try &lt;/p&gt;
{
                _stmnt.close();
            }
&lt;p&gt; catch (SQLException se) {&lt;br/&gt;
            }&lt;br/&gt;
        if (_closeConn)&lt;br/&gt;
            try &lt;/p&gt;
{
                _conn.close();
            }
&lt;p&gt; catch (SQLException se) {&lt;br/&gt;
            }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;Would this be a undesired side-effect and a problem in the following scenario:&lt;/p&gt;

&lt;p&gt;1)  appl / openjpa obtains a connection&lt;br/&gt;
2)  create a prepare statement &lt;br/&gt;
3)  get a result set from the statement&lt;br/&gt;
4)  using the same statement and get another result set. The first result set is not being referenced by any code and ready for gc.&lt;br/&gt;
5)  the connection and statement is active for a long time and gc kicks in to gc the first result set instance&lt;br/&gt;
6)  eventually the ResultSetResult.close() gets call.&lt;br/&gt;
7)  The statement and connection gets closed while it is still being used by appl / openjpa.&lt;/p&gt;

&lt;p&gt;Is this a possible scenario? &lt;/p&gt;

&lt;p&gt;According to the JCA architecture, connection that is scoped to a transaction will be closed by the connection manager and all associated statements and result set managed by the connection will be automatically closed. So is the AbstractResultList.finalize() ever be needed at all? &lt;/p&gt;

&lt;p&gt;Albert Lee.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12381075">OPENJPA-415</key>
            <summary>Garbage collection of AbstractResultList instance closes active connection</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="allee8285">Albert Lee</assignee>
                                    <reporter username="allee8285">Albert Lee</reporter>
                        <labels>
                    </labels>
                <created>Wed, 24 Oct 2007 16:58:01 +0100</created>
                <updated>Tue, 30 Oct 2007 14:36:30 +0000</updated>
                            <resolved>Fri, 26 Oct 2007 14:55:52 +0100</resolved>
                                    <version>1.0.1</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.0.1</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12537378" author="allee8285" created="Wed, 24 Oct 2007 19:24:19 +0100"  >&lt;p&gt;Another finding is: the AbstractResultList.finalize() also causing some thread safety issues for some connection manager that does not support mutli-threaded access. I was told that in general JDBC driver, connection manager etc do not require to support multi-thread. This means closing connection from gc&apos;s finalize method, which is executed in a different thread, may cause problems. This is the original observed problem that I was trying to resolve.&lt;/p&gt;

&lt;p&gt;By not doing explicit gc in AbstractResultList, both of the described problems were resolved. I have also looked at the heap dump snapshots taken during a 20 hours application run, I did not see any abnormal openjpa object (memory) leakage other than the normal heap growth by other application components.&lt;/p&gt;

&lt;p&gt;Are there any reasons the AbstractResultList.finalize() can NOT be removed?&lt;/p&gt;

&lt;p&gt;Albert Lee.&lt;/p&gt;</comment>
                            <comment id="12537401" author="allee8285" created="Wed, 24 Oct 2007 21:02:35 +0100"  >&lt;p&gt;This patch has been tested against a test application ran for 20+ hours without error and no undesirable heap growth.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12368320" name="OPENJPA-415.patch" size="676" author="allee8285" created="Wed, 24 Oct 2007 21:02:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160737</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyszdb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203078</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>