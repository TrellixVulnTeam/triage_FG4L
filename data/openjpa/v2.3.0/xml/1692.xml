<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:38:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1692/OPENJPA-1692.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1692] Add post creation callback to BrokerFactory</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1692</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;There have been a couple instances (that come to my mind) where there was the need to do some work after creating the broker factory. Sometimes there is a necessity to ensure single threadedness @see (PersistenceProviderImpl.postBrokerFactoryInitialization(...)), other times we need to perform some additional configuration / initialization after the BrokerFactory has completed (openjpa.InitializeEagerly=true). &lt;/p&gt;

&lt;p&gt;I recently ran across a problem with the second case. In AbstractBrokerFactory.ctor(...) we attempt to create a broker even though the subclassed BrokerFactory hasn&apos;t able to execute it&apos;s constructor.&lt;/p&gt;

&lt;p&gt;Example pseudo code:&lt;/p&gt;

&lt;p&gt;abstract class AbstractBrokerFactory {&lt;br/&gt;
	AbstractBrokerFactory(Config c)&lt;/p&gt;
{
		// setup
		if(InitializeEagerly==true)
			this.newBroker(); &amp;lt;-- BAD! The subclass hasn&apos;t executed it&apos;s constructor but it may be asked to create a new broker.
	}
&lt;p&gt;		&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;class ConcreteBrokerFactory extends AbstractBrokerFactory {&lt;br/&gt;
	Config _conf;&lt;br/&gt;
	ConcreteBrokerFactory (Config c)&lt;/p&gt;
{
		super(c);
		// setup
		_conf = c;
	}
&lt;p&gt;	newBroker()&lt;/p&gt;
{
		_conf.getSomething(); &amp;lt;-- _conf IS NULL because the constructor hasn&apos;t fully executed yet.
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;I propose that we need a postCreationCallBack method on the BrokerFactory interface. This will be a single place that Bootstrap can drive this &apos;after creation ish&apos; work.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12466693">OPENJPA-1692</key>
            <summary>Add post creation callback to BrokerFactory</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="curtisr7">Rick Curtis</assignee>
                                    <reporter username="curtisr7">Rick Curtis</reporter>
                        <labels>
                    </labels>
                <created>Thu, 10 Jun 2010 22:59:46 +0100</created>
                <updated>Mon, 11 Oct 2010 17:18:18 +0100</updated>
                            <resolved>Mon, 11 Oct 2010 17:18:18 +0100</resolved>
                                    <version>2.0.0</version>
                    <version>2.1.0</version>
                                    <fixVersion>2.1.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12877608" author="ppoddar@apache.org" created="Thu, 10 Jun 2010 23:44:07 +0100"  >&lt;p&gt;This is an useful suggestion. The other usage of such post-initialization method hooks can be leveraged to construct some critical internal data structures (e.g. MetaDataRepository) that are often immutable after initialization. One can initialize these structures with thread guards and then drop the guards for entire lifetime. This pattern will provide an opportunity to scale/perform faster in multi-core environment.     &lt;br/&gt;
JPA does provide indicators such as &amp;lt;metadata-complete&amp;gt; etc to make such pattern. &lt;/p&gt;</comment>
                            <comment id="12877883" author="curtisr7" created="Fri, 11 Jun 2010 18:51:52 +0100"  >&lt;p&gt;My previous commit will regress &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1491&quot; title=&quot;org.apache.openjpa.kernel.Bootstrap uses the application classloader to load OpenJPA internals&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1491&quot;&gt;&lt;del&gt;OPENJPA-1491&lt;/del&gt;&lt;/a&gt;. Refactoring some code right now to take that problem into account.&lt;/p&gt;</comment>
                            <comment id="12877930" author="curtisr7" created="Fri, 11 Jun 2010 20:20:49 +0100"  >&lt;p&gt;Update fix version.&lt;/p&gt;</comment>
                            <comment id="12877931" author="curtisr7" created="Fri, 11 Jun 2010 20:21:08 +0100"  >&lt;p&gt;@Pinaki &amp;#8211; Great point, but I want to keep this JIRA focused on properly designing the infrastructure for post creation callbacks and moving existing dependent code.&lt;/p&gt;

&lt;p&gt;I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1694&quot; title=&quot;Detect conditions where OpenJPA can safely trigger metadata preloading.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1694&quot;&gt;OPENJPA-1694&lt;/a&gt; as a defect for us to be more intelligent about when we can eagerly load metadata. Perhaps when doing this work we will discover that there are other cases where it makes sense to remove some of the laziness of OpenJPA for the sake of scalability.&lt;/p&gt;</comment>
                            <comment id="12885661" author="curtisr7" created="Tue, 6 Jul 2010 21:06:53 +0100"  >&lt;p&gt;Reopening this issue while I investigate some test failures.&lt;/p&gt;</comment>
                            <comment id="12919885" author="curtisr7" created="Mon, 11 Oct 2010 17:18:18 +0100"  >&lt;p&gt;Closing this JIRA as the original issue has been resolved. Will handle problem with the DataCacheManager initialization with &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1705&quot; title=&quot;Update migration section from 2.0.x -&amp;gt; 2.1.x in user manual to document eager cache initialization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1705&quot;&gt;&lt;del&gt;OPENJPA-1705&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Jun 2010 22:44:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161945</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysy8v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202896</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>