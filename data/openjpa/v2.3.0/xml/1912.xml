<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:39:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1912/OPENJPA-1912.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1912] enhancer generates invalid code if fetch-groups is activated</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1912</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;If openjpa.DetachState =fetch-groups is used, the enhancer will add a &apos;implements Externalizable&apos; + writeExternal + readExternal.&lt;/p&gt;

&lt;p&gt;The problem is, that writeExternal and readExternal will also try to externalize the private members of any given superclass. Thus we get a runtime Exception that we are not allowed to access those fields.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;@Entity&lt;br/&gt;
public abstract class AbstractGroup &lt;/p&gt;
{
   ...
    @Temporal(TemporalType.TIMESTAMP)
    @TrackChanges
    private Date applicationBegin;
 ...
}

&lt;p&gt;and &lt;/p&gt;

&lt;p&gt;@Entity&lt;br/&gt;
public class Group extends AbstractGroup &lt;/p&gt;
{
...
}

&lt;p&gt;will result in the following code (decompiled with jad):&lt;/p&gt;

&lt;p&gt;    public void writeExternal(ObjectOutput objectoutput)&lt;br/&gt;
        throws IOException&lt;br/&gt;
    {&lt;br/&gt;
        pcWriteUnmanaged(objectoutput);&lt;br/&gt;
        if(pcStateManager != null)&lt;br/&gt;
        &lt;/p&gt;
{
            if(pcStateManager.writeDetached(objectoutput))
                return;
        }
&lt;p&gt; else&lt;/p&gt;
        {
            objectoutput.writeObject(pcGetDetachedState());
            objectoutput.writeObject(null);
        }
&lt;p&gt;        objectoutput.writeObject(applicationBegin);&lt;br/&gt;
        objectoutput.writeObject(applicationEnd);&lt;br/&gt;
        objectoutput.writeObject(applicationLocked);&lt;br/&gt;
        objectoutput.writeObject(approvalRequired);&lt;br/&gt;
 ...&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12494520">OPENJPA-1912</key>
            <summary>enhancer generates invalid code if fetch-groups is activated</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikedd">Michael Dick</assignee>
                                    <reporter username="struberg">Mark Struberg</reporter>
                        <labels>
                    </labels>
                <created>Mon, 3 Jan 2011 19:48:09 +0000</created>
                <updated>Sat, 18 May 2013 00:42:11 +0100</updated>
                            <resolved>Wed, 16 Feb 2011 02:12:52 +0000</resolved>
                                    <version>2.0.0</version>
                    <version>2.0.1</version>
                    <version>2.1.0</version>
                                    <fixVersion>2.2.0</fixVersion>
                                    <component>Enhance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12976914" author="struberg" created="Mon, 3 Jan 2011 19:49:05 +0000"  >&lt;p&gt;my naive question first: why do we need Externalizable at all? In any other case a simple Serializable works well.&lt;/p&gt;</comment>
                            <comment id="12985642" author="struberg" created="Mon, 24 Jan 2011 12:13:26 +0000"  >&lt;p&gt;It seems this has nothing to do with fetch-groups, but will always be generated if DetachedStateField=true gets used.&lt;/p&gt;

&lt;p&gt;My configuration currently: &amp;lt;property name=&quot;openjpa.DetachState&quot; value=&quot;loaded(DetachedStateField=true)&quot;/&amp;gt;&lt;/p&gt;
</comment>
                            <comment id="12985803" author="struberg" created="Mon, 24 Jan 2011 16:47:00 +0000"  >&lt;p&gt;This unit test demontstrates the problem. I get the following output:&lt;/p&gt;

&lt;p&gt;java.lang.IllegalAccessError: tried to access field org.apache.openjpa.enhance.EnhancedSuperClass.id from class org.apache.openjpa.enhance.EnhancedSubClass&lt;br/&gt;
	at org.apache.openjpa.enhance.EnhancedSubClass.writeExternal(EnhancedSubClass.java)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1421)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1390)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)&lt;br/&gt;
	at org.apache.openjpa.enhance.TestClassHierarchyEnhancement.serializeObject(TestClassHierarchyEnhancement.java:58)&lt;br/&gt;
	at org.apache.openjpa.enhance.TestClassHierarchyEnhancement.testSerialize(TestClassHierarchyEnhancement.java:50)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runTest(AbstractPersistenceTestCase.java:573)&lt;/p&gt;</comment>
                            <comment id="12986662" author="struberg" created="Tue, 25 Jan 2011 20:22:43 +0000"  >&lt;p&gt;oki, starting with that stuff now.&lt;/p&gt;

&lt;p&gt;current classes just generate a&lt;/p&gt;

&lt;p&gt;readExternal() and writeExternal which first externalizes some OpenJPA specific fields like the pcStateManager, et al and then comes the single fields.&lt;/p&gt;

&lt;p&gt;For providing something like super.readYourOwnStuff() we need to split the fields from the rest.&lt;/p&gt;

&lt;p&gt;So I&apos;ll start with introducing 2 new methods readExternalFields() and writeExternalFields() which might then invoke the super.readExternalFields().&lt;/p&gt;

&lt;p&gt;Any objections or tips?&lt;/p&gt;</comment>
                            <comment id="12986772" author="curtisr7" created="Tue, 25 Jan 2011 23:41:01 +0000"  >&lt;p&gt;&amp;gt; Any objections or tips? &lt;br/&gt;
Goodluck... Serp is a fun one!&lt;/p&gt;

&lt;p&gt;I&apos;ll try to get some time tomorrow to take a peek at this one.&lt;/p&gt;</comment>
                            <comment id="12986775" author="struberg" created="Tue, 25 Jan 2011 23:44:17 +0000"  >&lt;p&gt;nah, I already fixed bytecode issues in javassist and did lots of the bc stuff for OpenWebBeans - so yes, it is tricky, but I guess I can make it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12986796" author="struberg" created="Wed, 26 Jan 2011 01:04:21 +0000"  >&lt;p&gt;got it roughly working, but I&apos;m not sure about whether the pcWriteUnmanaged also should get executed on the superclass?&lt;/p&gt;</comment>
                            <comment id="12986802" author="struberg" created="Wed, 26 Jan 2011 01:14:45 +0000"  >&lt;p&gt;Hi!&lt;/p&gt;

&lt;p&gt;This patch fixes the issue but still needs a cleanup (finally removing old unused code and stuff).&lt;/p&gt;

&lt;p&gt;Please review! It runs fine with a few test cases and I&apos;ll test it in my real world project tomorrow morning.&lt;/p&gt;

&lt;p&gt;good night,&lt;br/&gt;
strub&lt;/p&gt;</comment>
                            <comment id="12986998" author="struberg" created="Wed, 26 Jan 2011 13:17:27 +0000"  >&lt;p&gt;figured that I still have a few bugs with deserialisation. Currently investigating...&lt;/p&gt;</comment>
                            <comment id="12987001" author="struberg" created="Wed, 26 Jan 2011 13:35:18 +0000"  >&lt;p&gt;found the problem. StateManagerImpl#writeDetached writes the fields of the superclass first, and only then the fields of the subclasses.&lt;/p&gt;</comment>
                            <comment id="12987007" author="struberg" created="Wed, 26 Jan 2011 13:54:41 +0000"  >&lt;p&gt;this patch now de-externalises in the correct order. I also added a few tests for it&lt;/p&gt;</comment>
                            <comment id="12987202" author="struberg" created="Wed, 26 Jan 2011 20:24:33 +0000"  >&lt;p&gt;oops, I forgot to also attach the enhancer parts for making the test work.&lt;/p&gt;

&lt;p&gt;sorry :/ (have way too many files dirty already ...)&lt;/p&gt;</comment>
                            <comment id="12992146" author="struberg" created="Tue, 8 Feb 2011 20:06:13 +0000"  >&lt;p&gt;Rick, Mike, did you find a chance to test this patch already? I&apos;m slowly running out of control about all my patches... Since the patches depend on each other to some degree, I cannot really continue anymore. If you don&apos;t find the time to work on it then please ping me. In this case I&apos;ll continue maintaining my patches via a fork of the github mirror rather than juggling svn patches (which are hell to apply...).&lt;/p&gt;

&lt;p&gt;txs and LieGrue,&lt;br/&gt;
strub&lt;/p&gt;</comment>
                            <comment id="12992190" author="mikedd" created="Tue, 8 Feb 2011 21:19:06 +0000"  >&lt;p&gt;Mark, haven&apos;t had a chance to look yet. Will take a closer look tonight and at least get you an ETA. &lt;/p&gt;</comment>
                            <comment id="12992304" author="mikedd" created="Wed, 9 Feb 2011 02:50:58 +0000"  >&lt;p&gt;I see what you mean about patch management. I&apos;m not sure I&apos;ve applied the patches correctly. Is there a specific order, or could you make one all inclusive patch? &lt;/p&gt;</comment>
                            <comment id="12992313" author="mikedd" created="Wed, 9 Feb 2011 03:08:10 +0000"  >&lt;p&gt;I think this is a unified patch - check that it matches yours. &lt;/p&gt;

&lt;p&gt;If so the patch looks good. I don&apos;t know serp well enough for errors to jump out at me, but the generated bytecode looks correct. &lt;/p&gt;

&lt;p&gt;There&apos;s some cleanup to be done (e.g. we generally don&apos;t use @author tags), but assuming none of the unit tests break I think we can commit this patch. &lt;/p&gt;</comment>
                            <comment id="12992348" author="struberg" created="Wed, 9 Feb 2011 07:02:02 +0000"  >&lt;p&gt;Txs Mike!&lt;br/&gt;
I&apos;ll try to apply it and run a full suite now.&lt;/p&gt;</comment>
                            <comment id="12992405" author="struberg" created="Wed, 9 Feb 2011 09:18:42 +0000"  >&lt;p&gt;patch looks fine so far but /org/apache/openjpa/enhance/persistence1.xml is missing. Please see my enhancer.patch for this part.&lt;/p&gt;

&lt;p&gt;A few notes:&lt;br/&gt;
1.) I use //X to comment out &apos;temporaryily&apos;. This means either a TODO or it needs to be clarified. &lt;br/&gt;
2.) The patch assumes that all parent classes must belong to the same persistence unit and therefore also contains the generated writeExternalFields and readExternalFields methods.Is this assumption true, or are there situations where parent.readExternalFields() is invalid?&lt;/p&gt;</comment>
                            <comment id="12992441" author="struberg" created="Wed, 9 Feb 2011 11:27:47 +0000"  >&lt;p&gt;oops comment should have gone to &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1933&quot; title=&quot;@ElementCollection loose proxytype after serialisation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1933&quot;&gt;OPENJPA-1933&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12992462" author="struberg" created="Wed, 9 Feb 2011 12:40:47 +0000"  >&lt;p&gt;I found a (pretty uncommon but theoretically possible) situation where this might happen. If a superclass is defined in a jar which didn&apos;t got rebuilt and the subclass entity got enhanced via a new version of JPA. Do we take care about such pathological situations? I mean it would have crashed with the old system anyway...&lt;/p&gt;</comment>
                            <comment id="12992525" author="mikedd" created="Wed, 9 Feb 2011 15:15:09 +0000"  >&lt;p&gt;It would be nice to handle such a case gracefully. In such an environment I think there will be other problems. Rick added some code in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1707&quot; title=&quot;A warning message should be logged when a down level enhanced Entity is encountered.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1707&quot;&gt;OPENJPA-1707&lt;/a&gt; to detect downlevel entities when the enhancer runs, but I don&apos;t remember the exact problem he saw. &lt;/p&gt;</comment>
                            <comment id="12992546" author="struberg" created="Wed, 9 Feb 2011 16:07:47 +0000"  >&lt;p&gt;If &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1707&quot; title=&quot;A warning message should be logged when a down level enhanced Entity is encountered.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1707&quot;&gt;OPENJPA-1707&lt;/a&gt; is already implemented then it should also work for this tweak if we increment the PCEnhancer.ENHANCER_VERSION, isn&apos;t ?&lt;/p&gt;</comment>
                            <comment id="12993736" author="mikedd" created="Fri, 11 Feb 2011 22:29:11 +0000"  >&lt;p&gt;You&apos;re right. I thought it only checked when the PCEnhancer was executed, but after looking at the code it&apos;s the MetaDataRepository that triggers the check. &lt;/p&gt;</comment>
                            <comment id="13125849" author="ylangisc" created="Wed, 12 Oct 2011 14:39:52 +0100"  >&lt;p&gt;Is there any reason why this changeset is not backported to the other branches (1.2.x, 2.0.x)?&lt;/p&gt;</comment>
                            <comment id="13661057" author="jira-bot" created="Fri, 17 May 2013 22:23:48 +0100"  >&lt;p&gt;Commit 1483996 from hthomann&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1483996&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1483996&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1912&quot; title=&quot;enhancer generates invalid code if fetch-groups is activated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1912&quot;&gt;&lt;del&gt;OPENJPA-1912&lt;/del&gt;&lt;/a&gt;: Generate externalizable methods correctly for super and subclasses - back ported to 2.1.x Mark Struberg&apos;s trunk changes.&lt;/p&gt;</comment>
                            <comment id="13661155" author="jira-bot" created="Sat, 18 May 2013 00:42:11 +0100"  >&lt;p&gt;Commit 1484028 from hthomann&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1484028&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1484028&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1912&quot; title=&quot;enhancer generates invalid code if fetch-groups is activated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1912&quot;&gt;&lt;del&gt;OPENJPA-1912&lt;/del&gt;&lt;/a&gt;: Generate externalizable methods correctly for super and subclasses - back ported to 2.0.x Mark Struberg&apos;s trunk changes.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12637263">OPENJPA-2351</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12467493">OPENJPA-1704</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12467911">OPENJPA-1707</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12469465" name="OPENJPA-1912-enhancer.patch" size="1676" author="struberg" created="Wed, 26 Jan 2011 20:24:33 +0000"/>
                            <attachment id="12469421" name="OPENJPA-1912-fix-wo_cleanup-2.patch" size="16070" author="struberg" created="Wed, 26 Jan 2011 13:54:41 +0000"/>
                            <attachment id="12469367" name="OPENJPA-1912-fix-wo_cleanup.patch" size="5081" author="struberg" created="Wed, 26 Jan 2011 01:14:45 +0000"/>
                            <attachment id="12470655" name="OPENJPA-1912-mdd.diff.txt" size="11570" author="mikedd" created="Wed, 9 Feb 2011 03:08:10 +0000"/>
                            <attachment id="12469174" name="OPENJPA-1912-test.patch" size="10942" author="struberg" created="Mon, 24 Jan 2011 16:47:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 25 Jan 2011 23:41:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>68166</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysql3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201655</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>