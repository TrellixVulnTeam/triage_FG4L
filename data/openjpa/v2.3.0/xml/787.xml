<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:36:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-787/OPENJPA-787.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-787] slices query.getSingleResult is broken</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-787</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Pinaki Poddar wrote:&lt;br/&gt;
&amp;gt;   Query.getSingleResult() is badly broken (or, more precisely non-existent). &lt;br/&gt;
&amp;gt;   Currently, use the workaround for Query.getSingleResult() i.e.&lt;br/&gt;
&amp;gt;     Query.getResultList().get(0) &lt;/p&gt;</description>
                <environment></environment>
        <key id="12409239">OPENJPA-787</key>
            <summary>slices query.getSingleResult is broken</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ppoddar@apache.org">Pinaki Poddar</assignee>
                                    <reporter username="fern">Fernando Padilla</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Nov 2008 03:15:07 +0000</created>
                <updated>Tue, 9 Mar 2010 18:31:03 +0000</updated>
                            <resolved>Sat, 20 Dec 2008 06:56:35 +0000</resolved>
                                    <version>2.0.0-M2</version>
                                    <fixVersion>2.0.0-M2</fixVersion>
                                    <component>slice</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12651167" author="fern" created="Wed, 26 Nov 2008 22:34:34 +0000"  >&lt;p&gt;very simple patch.  should fix this issue.&lt;/p&gt;


&lt;p&gt;&amp;#8212; openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedStoreQuery.java        (revision 721000)&lt;br/&gt;
+++ openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedStoreQuery.java        (working copy)&lt;br/&gt;
@@ -147,10 +147,10 @@&lt;br/&gt;
                }&lt;br/&gt;
                boolean[] ascending = getAscending(q);&lt;br/&gt;
                boolean isAscending = ascending.length &amp;gt; 0;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;boolean isUnique    = q.getContext().isUnique();&lt;br/&gt;
+               boolean isAggregate = q.getContext().isAggregate();&lt;br/&gt;
                boolean hasRange    = q.getContext().getEndRange() != Long.MAX_VALUE;&lt;br/&gt;
                ResultObjectProvider result = null;&lt;/li&gt;
	&lt;li&gt;if (isUnique) {&lt;br/&gt;
+               if (isAggregate) 
{
                    result = new UniqueResultObjectProvider(tmp, q, 
                            getQueryExpressions());
                }
&lt;p&gt; else if (isAscending) {&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;But though it looks like it&apos;s working better.  Now I&apos;m hitting another bug, that it looks like somehow the old EnityManager/Broker is being reused across requests.  I know this because it works fine for first request, but second request complains that the Broker is already closed.  So I might be opening up a new bug for that.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161093</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysqgn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201635</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>