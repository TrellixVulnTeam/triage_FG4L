<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:45:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-281/OPENJPA-281.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-281] EAGER not the default fetch type without the @Basic annotation</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-281</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;There&apos;s an on-going discussion on the dev mailing list concerning this problem (&lt;a href=&quot;http://www.nabble.com/Eager-fetching-not-working-with-enums-and-lobs-tf4037105.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Eager-fetching-not-working-with-enums-and-lobs-tf4037105.html&lt;/a&gt;).  Since I&apos;ve gotten agreement on at least one aspect of the problem, I decided to open this JIRA Issue to document the problem.&lt;/p&gt;

&lt;p&gt;Here&apos;s a summary of the problem:&lt;/p&gt;

&lt;p&gt;I am finding that the supposed default action of Eager fetching is not happening with @Enumerated and @Lob fields.  If I explicitly specify the @Basic annotation, then the fields are eagerly fetched.  But, without this extraneous @Basic, these fields are lazily loaded.  This action does not seem to be consistent with the spec.  Nor, can I find any mention of this alternate behavior in our OpenJPA manual.  Sounds like a bug to me.  Any other insights?&lt;/p&gt;

&lt;p&gt;This works (eager loading kicks in):&lt;/p&gt;

&lt;p&gt;    @Basic @Enumerated(EnumType.STRING)&lt;br/&gt;
    private Gender gender;&lt;/p&gt;

&lt;p&gt;This does not work (lazy loading kicks in):&lt;/p&gt;

&lt;p&gt;    @Enumerated(EnumType.STRING)&lt;br/&gt;
    private Gender gender;&lt;/p&gt;

&lt;p&gt;I have also tried to use defaults (without any annotations), and lazy loading still kicks in:&lt;/p&gt;

&lt;p&gt;    private Gender gender;&lt;/p&gt;

&lt;p&gt;The JPA spec attempts to address this situation in section 9.1.18...  Section 9.1.8 of the JPA spec indicates that @Basic is optional and applies to the following types: &lt;/p&gt;

&lt;p&gt;&quot;..Java primitive types, wrappers of the primitive types, java.lang.String, java.math.BigInteger,&lt;br/&gt;
java.math.BigDecimal, java.util.Date, java.util.Calendar, java.sql.Date,&lt;br/&gt;
java.sql.Time, java.sql.Timestamp, byte[], Byte[], char[], Character[],&lt;br/&gt;
enums, and any other type that implements Serializable.&quot;&lt;/p&gt;

&lt;p&gt;And, since the default fetch type for @Basic is EAGER, it looks like we need to do eager fetching for both @Enumerated and @Lob fields unless otherwise overridden by a LAZY fetch type (ie. @Basic(fetch=LAZY)).  Agree?&lt;/p&gt;

&lt;p&gt;We&apos;re still working on the agreement...  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Kevin&lt;/p&gt;</description>
                <environment></environment>
        <key id="12373309">OPENJPA-281</key>
            <summary>EAGER not the default fetch type without the @Basic annotation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kwsutter">Kevin Sutter</assignee>
                                    <reporter username="kwsutter">Kevin Sutter</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Jul 2007 15:09:24 +0100</created>
                <updated>Tue, 9 Mar 2010 18:32:36 +0000</updated>
                            <resolved>Mon, 6 Aug 2007 00:51:23 +0100</resolved>
                                    <version>0.9.7</version>
                                    <fixVersion>1.0.0</fixVersion>
                                    <component>jpa</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12511217" author="kwsutter" created="Mon, 9 Jul 2007 19:29:31 +0100"  >&lt;p&gt;After a bit more discussion on the mail thread, I decided to ping Mike Keith (co-lead of the JPA spec) on his interpretation of the 9.1.18 and 2.1.6 sections of the spec.  Here&apos;s his response:&lt;/p&gt;

&lt;p&gt;&quot;You are correct. Lobs are to be treated like other Basic attributes and should default to EAGER. Your colleague is somewhat justified in that lobs can be costly to load, however, once we put lobs under the category of basic mappings we needed to be consistent and have them use the same defaults. If they are expected to be both large and not referenced often then @Basic(fetch=LAZY) should be used. Note that if one of these is not true then you probably do want them to be eagerly loaded.&lt;/p&gt;

&lt;p&gt;-Mike&quot;&lt;/p&gt;

&lt;p&gt;That should decide it.  This Issue will be used to change the behavior be consistent with the @Basic annotation and make all listed types as EAGER fetch type by default.&lt;/p&gt;</comment>
                            <comment id="12517251" author="kwsutter" created="Thu, 2 Aug 2007 14:12:18 +0100"  >&lt;p&gt;I decided to post a patch for this Issue before committing it in order to get feedback first...  Take a look at FieldMetaData and see how I am determining whether to include a given type in the default fetch group.  Although it looks a little strange to be doing all of this testing for Serializable, Enums, and Lobs, it actually limited the changes to this single part.  Other alternatives started to ripple through out the code base and I didn&apos;t see where it was buying anything.  If I don&apos;t hear anything negative, I&apos;ll commit these changes later today.&lt;/p&gt;

&lt;p&gt;I also updated AllFieldTypes and created a new TestBasicAnnotation testcase so that we don&apos;t accidentally re-introduce this problem.&lt;/p&gt;

&lt;p&gt;The other change to FieldMapping.java was to avoid an obscure NPE when parsing some orm.xml.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Kevin&lt;/p&gt;</comment>
                            <comment id="12517799" author="kwsutter" created="Mon, 6 Aug 2007 00:47:46 +0100"  >&lt;p&gt;I just committed the changes posted in my patch from last week.  No additional comments were received, so I am taking that as general agreement.&lt;/p&gt;

&lt;p&gt;Just a bit more historical background on these changes in case we have to revisit this in the future.  My first thought on making Eager work for Enums was to introduce a new ENUM type code in org.apache.openjpa.meta.JavaTypes.  Although this change started off simple and elegant, it quickly rippled to many more changes through out the code that really didn&apos;t add any value.  So, I decided to just test for Enums in FieldMetaData instead.  This change was isolated and didn&apos;t have the ripple effect.&lt;/p&gt;

&lt;p&gt;On the chance that we need more specialized processing for the Enum type, then we might have to revert to my original thought.  But, for this immediate problem, a new type code seemed like overkill.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12517800" author="kwsutter" created="Mon, 6 Aug 2007 00:51:23 +0100"  >&lt;p&gt;Resolved via revision 562986.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12363049" name="openjpa-281.patch" size="15084" author="kwsutter" created="Thu, 2 Aug 2007 14:12:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160608</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt5vj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>204132</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>