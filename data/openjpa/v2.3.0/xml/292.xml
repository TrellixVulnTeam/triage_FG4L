<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:29:50 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-292/OPENJPA-292.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-292] Extra JOIN on eager bi-directional relationship</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-292</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;I have a pretty simple 1-1 bi-directional relationship.  If I set both sides to eager and then do a select on one side, the following SQL is executed:&lt;/p&gt;

&lt;p&gt;SELECT t1.USERID, t2.ACCOUNTID, t2.BALANCE&lt;br/&gt;
, t2.CREATIONDATE, t2.LASTLOGIN, t2.LOGINCOUNT, t2.LOGOUTCOUNT, t2.OPENBALANCE,&lt;br/&gt;
t1.ADDRESS, t1.CREDITCARD, t1.EMAIL, t1.FULLNAME, t1.PASSWD FROM ACCOUNTEJB t0 I&lt;br/&gt;
NNER JOIN ACCOUNTPROFILEEJB t1 ON t0.PROFILE_USERID = t1.USERID LEFT OUTER JOIN&lt;br/&gt;
ACCOUNTEJB t2 ON t1.USERID = t2.PROFILE_USERID WHERE t0.ACCOUNTID = ?  optimize&lt;br/&gt;
for 1 row&lt;/p&gt;

&lt;p&gt;the relationship is account &amp;lt;-&amp;gt; accountprofile.   you can see we actually do 2 joins.&lt;/p&gt;

&lt;p&gt;This is one in a family of problems which was supposed to have been solved in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-134&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/OPENJPA-134&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is also a related issue where an uneeded load is done, which I documented a while ago in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/OPENJPA-241&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think this is a general comment on the lack of sophistication of the persistence engine to understand when data is logically going to be there anyways, and not to add joins or trigger data loading.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12374499">OPENJPA-292</key>
            <summary>Extra JOIN on eager bi-directional relationship</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rob.wisniewski">Rob Wisniewski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jul 2007 21:28:41 +0100</created>
                <updated>Thu, 24 Jul 2008 00:13:19 +0100</updated>
                                            <version>1.0.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12615863" author="faywang" created="Wed, 23 Jul 2008 03:02:58 +0100"  >&lt;p&gt;The problem described by Rob is similar to JIRA-241 and JIRA-134 scenario 3 in that they are all about the retrieval of the inverse relationship. This JIRA deals with 1-1 relationship while JIRA-241 is for 1-many relationship. The following test case is used to reproduce the problem:&lt;/p&gt;

&lt;p&gt;@Entity&lt;br/&gt;
public class EntityC  &lt;/p&gt;
{
    @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Id private int id;
    
    private String name;
    private int age;
    private int balance;
    
	@OneToOne(fetch=FetchType.EAGER, mappedBy=&quot;entityC&quot;)
	private EntityD entityD = null;
...
}

&lt;p&gt;@Entity&lt;br/&gt;
public class EntityD  &lt;/p&gt;
{
    @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Id private int id;
    
    private String name;
    private int loginCount;
    private int logoutCount;
    private String email;
    
	@OneToOne(fetch=FetchType.EAGER)
	private EntityC entityC = null;
...
}

&lt;p&gt;The test case:&lt;br/&gt;
        EntityManagerImpl em = (EntityManagerImpl) emf.createEntityManager();&lt;br/&gt;
        String query = &quot;select c FROM EntityC c&quot;;&lt;br/&gt;
        Query q = em.createQuery(query);&lt;br/&gt;
        List list = q.getResultList();&lt;br/&gt;
        System.out.println(&quot;size = &quot; + list.size());&lt;br/&gt;
        for (int i = 0; i &amp;lt; list.size(); i++) &lt;/p&gt;
{
            EntityC c = (EntityC)list.get(i);
            System.out.println(&quot;EntityC = &quot; + c.getName());
            System.out.println(&quot;EntityD = &quot; + c.getD().getName());
            System.out.println(&quot;EntityD&apos;s C = &quot; + c.getD().getC().getName());
            System.out.println();
        }

&lt;p&gt;The following SQL are generated:&lt;/p&gt;

&lt;p&gt;(1) SELECT t0.id, t0.age, t0.balance, t1.id, t1.email, t1.loginCount, t1.logoutCount, t1.name, t0.name &lt;br/&gt;
    FROM EntityC t0 &lt;br/&gt;
    LEFT OUTER JOIN EntityD t1 ON t0.id = t1.ENTITYC_ID &lt;/p&gt;

&lt;p&gt;(2) SELECT t1.id, t1.age, t1.balance, t2.id, t2.email, t2.loginCount, t2.logoutCount, t2.name, t1.name &lt;br/&gt;
    FROM EntityD t0 &lt;br/&gt;
    INNER JOIN EntityC t1 ON t0.ENTITYC_ID = t1.id &lt;br/&gt;
    LEFT OUTER JOIN EntityD t2 ON t1.id = t2.ENTITYC_ID WHERE t0.id = ?  optimize for 1 row &lt;span class=&quot;error&quot;&gt;&amp;#91;params=(int) 101&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;(3) SELECT t1.id, t1.age, t1.balance, t2.id, t2.email, t2.loginCount, t2.logoutCount, t2.name, t1.name &lt;br/&gt;
    FROM EntityD t0 &lt;br/&gt;
    INNER JOIN EntityC t1 ON t0.ENTITYC_ID = t1.id &lt;br/&gt;
    LEFT OUTER JOIN EntityD t2 ON t1.id = t2.ENTITYC_ID WHERE t0.id = ?  optimize for 1 row &lt;span class=&quot;error&quot;&gt;&amp;#91;params=(int) 102&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;(4) SELECT t1.id, t1.age, t1.balance, t2.id, t2.email, t2.loginCount, t2.logoutCount, t2.name, t1.name &lt;br/&gt;
    FROM EntityD t0 &lt;br/&gt;
    INNER JOIN EntityC t1 ON t0.ENTITYC_ID = t1.id &lt;br/&gt;
    LEFT OUTER JOIN EntityD t2 ON t1.id = t2.ENTITYC_ID WHERE t0.id = ?  optimize for 1 row &lt;span class=&quot;error&quot;&gt;&amp;#91;params=(int) 104&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;(5) SELECT t1.id, t1.age, t1.balance, t2.id, t2.email, t2.loginCount, t2.logoutCount, t2.name, t1.name &lt;br/&gt;
    FROM EntityD t0 &lt;br/&gt;
    INNER JOIN EntityC t1 ON t0.ENTITYC_ID = t1.id &lt;br/&gt;
    LEFT OUTER JOIN EntityD t2 ON t1.id = t2.ENTITYC_ID WHERE t0.id = ?  optimize for 1 row &lt;span class=&quot;error&quot;&gt;&amp;#91;params=(int) 103&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Since there are four entityD in the database, openjpa makes four separate SQL calls to retrieve each entityD (sql (2) - (5)). These sql has inner join and left outer join between EntityC and EntityD as they are bi-directional 1-1 relationship.&lt;/p&gt;

&lt;p&gt;The attached patch detects this inverse relationship (mappedBy relationship) to get rid of sql (2) -(5).&lt;/p&gt;



</comment>
                            <comment id="12616300" author="faywang" created="Thu, 24 Jul 2008 00:11:34 +0100"  >&lt;p&gt;The attached patch address the issue raised by Catalina:&lt;/p&gt;

&lt;p&gt; if simply return for decMeta == null,  the following code execution will be skipped:&lt;/p&gt;

&lt;p&gt;              sm.storeObject(field.getIndex(), res.load(cls, store, fetch,&lt;br/&gt;
            eagerJoin(res.newJoins(), cls, false)));&lt;/p&gt;</comment>
                            <comment id="12616301" author="faywang" created="Thu, 24 Jul 2008 00:13:19 +0100"  >&lt;p&gt;The attached test cases are for JIRA-241 and JIRA292.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12369742">OPENJPA-241</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12386681" name="openjpa_292.patch" size="2882" author="faywang" created="Wed, 23 Jul 2008 03:02:58 +0100"/>
                            <attachment id="12386768" name="openjpa_292_1.patch" size="2873" author="faywang" created="Thu, 24 Jul 2008 00:11:34 +0100"/>
                            <attachment id="12386769" name="testcase_241_292.patch" size="29604" author="faywang" created="Thu, 24 Jul 2008 00:13:19 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jul 2008 02:02:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160618</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7kbz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>288264</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>