<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:32:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-385/OPENJPA-385.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-385] IndexOutOfBounds exception when parsing &quot;.class&quot; files</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-385</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;When finding and parsing files via the classpath, we&apos;re hitting a situation where an invalid .class file is in the classpath.  Although the files in question have the .class suffix, they do not have valid .class format.  Not only are we blowing up via the serp utilities, but neither jad nor javap can recognize the files either.  Here&apos;s the call stack that is produced:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.ClassFormatError: COM/ibm/db2os390/sqlj/custom/DB2SQLJCustomizer.class&lt;br/&gt;
        at org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matches(ClassAnnotationMetaDataFilter.java:89)&lt;br/&gt;
        at org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.hasNext(ZipFileMetaDataIterator.java:79)&lt;br/&gt;
        at org.apache.openjpa.lib.meta.MetaDataIteratorChain.hasNext(MetaDataIteratorChain.java:76)&lt;br/&gt;
        at org.apache.openjpa.lib.meta.ClassArgParser.mapTypeNames(ClassArgParser.java:277)&lt;br/&gt;
        at org.apache.openjpa.meta.AbstractCFMetaDataFactory.scan(AbstractCFMetaDataFactory.java:713)&lt;br/&gt;
        at org.apache.openjpa.meta.AbstractCFMetaDataFactory.getPersistentTypeNames(AbstractCFMetaDataFactory.java:583)&lt;br/&gt;
        at org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNames(MetaDataRepository.java:1190)&lt;br/&gt;
        at org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(MetaDataRepository.java:1207)&lt;br/&gt;
        at org.apache.openjpa.jdbc.meta.MappingTool.run(MappingTool.java:1002)&lt;br/&gt;
        at org.apache.openjpa.jdbc.meta.MappingTool.run(MappingTool.java:977)&lt;br/&gt;
        at org.apache.openjpa.jdbc.meta.MappingTool.main(MappingTool.java:918)&lt;br/&gt;
Caused by: java.lang.ArrayIndexOutOfBoundsException&lt;br/&gt;
        at serp.bytecode.lowlevel.ConstantPoolTable.readByte(ConstantPoolTable.java:106)&lt;br/&gt;
        at serp.bytecode.lowlevel.ConstantPoolTable.readUnsignedShort(ConstantPoolTable.java:114)&lt;br/&gt;
        at serp.bytecode.lowlevel.ConstantPoolTable.readUnsignedShort(ConstantPoolTable.java:184)&lt;br/&gt;
        at org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matches(ClassAnnotationMetaDataFilter.java:67)&lt;br/&gt;
        ... 10 more&lt;/p&gt;

&lt;p&gt;As you can see, the file in question is actually coming from the db2jcc.jar.  Although I could pursue why these files do not have the correct format, I&apos;m proposing that we become more lenient in our &quot;matches&quot; logic.  Right now, we are throwing this IOOB exception.  This seems too harsh, especially since we just return &quot;false&quot; for any other indication that the resource is not an &quot;interesting&quot; class file with appropriate annotations.  In my mind, this invalid class file should just be treated as if it didn&apos;t have the .class suffix.&lt;/p&gt;

&lt;p&gt;So, instead of the current exception throwing processing, I would like to change to just log a trace message.  We already log an Info message for all of the files that we do process.  And, logging an info message for a bad class format might just cause confusion (much like this exception throwing).  Thus, I would like to just log a trace message with the appropriate information and return &quot;false&quot; on this matches() invocation.&lt;/p&gt;

&lt;p&gt;Any problems with this approach?  I&apos;ve looked at the caller&apos;s of this method and nobody is expecting to get the ClassFormatException or IOOB exception (unexpected runtime exception), so just logging and eating the exception and returning false looks safe.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</description>
                <environment></environment>
        <key id="12379111">OPENJPA-385</key>
            <summary>IndexOutOfBounds exception when parsing &quot;.class&quot; files</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kwsutter">Kevin Sutter</assignee>
                                    <reporter username="kwsutter">Kevin Sutter</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Sep 2007 15:04:52 +0100</created>
                <updated>Tue, 9 Mar 2010 18:32:39 +0000</updated>
                            <resolved>Thu, 27 Sep 2007 20:20:29 +0100</resolved>
                                    <version>1.0.0</version>
                    <version>1.0.1</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.0.1</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>lib</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12530590" author="kwsutter" created="Thu, 27 Sep 2007 00:04:00 +0100"  >&lt;p&gt;Ran into a little snag with my proposal...  All of this metadata processing code is in &quot;lib&quot; and &quot;lib&quot; doesn&apos;t have an associated configuration or logfactory, so I don&apos;t have a means to log the failing class name.  I looked at alternatives of setting a configuration object on the ClassAnnotationMetaDataFilter, but that gets ugly real fast.  And, for how much benefit?  Since a malformed .class file is no better than a file that does not have the .class suffix, why not treat them the same?  That is, just return &quot;false&quot; when we detect a malformed .class file?  I would still put a comment in the code block indicating why we&apos;re eating the exception.  I&apos;ll post a patch shortly so that you can see what I am referring to.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12530712" author="kwsutter" created="Thu, 27 Sep 2007 14:31:18 +0100"  >&lt;p&gt;Okay, so I didn&apos;t like the approach of just eating the exception and never logging the condition (just in case we have a problem with this area of the code).  So, I found an easy way to set a log into the ClassAnnotationMetaDataFilter object when it gets created.  Since this is a utility class, I didn&apos;t want to enforce a log file, so I will check for null before doing the logging.  Here&apos;s what the logged message will look like if TRACE is turned on:&lt;/p&gt;

&lt;p&gt;812  MyBookJPA_annotation  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.MetaData - Error extracting class information from &quot;COM/ibm/db2os390/sqlj/custom/DB2SQLJCustomizer.class&quot;.&lt;br/&gt;
java.lang.ClassFormatError: COM/ibm/db2os390/sqlj/custom/DB2SQLJCustomizer.class&lt;br/&gt;
	at org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matches(ClassAnnotationMetaDataFilter.java:107)&lt;br/&gt;
	at org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.hasNext(ZipFileMetaDataIterator.java:88)&lt;br/&gt;
	at org.apache.openjpa.lib.meta.MetaDataIteratorChain.hasNext(MetaDataIteratorChain.java:76)&lt;br/&gt;
	at org.apache.openjpa.lib.meta.ClassArgParser.mapTypeNames(ClassArgParser.java:282)&lt;br/&gt;
	at org.apache.openjpa.meta.AbstractCFMetaDataFactory.scan(AbstractCFMetaDataFactory.java:785)&lt;br/&gt;
	at org.apache.openjpa.meta.AbstractCFMetaDataFactory.getPersistentTypeNames(AbstractCFMetaDataFactory.java:608)&lt;br/&gt;
	at org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNames(MetaDataRepository.java:1214)&lt;br/&gt;
	at org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(MetaDataRepository.java:1231)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.run(MappingTool.java:1006)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.run(MappingTool.java:980)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.main(MappingTool.java:921)&lt;br/&gt;
Caused by: java.lang.ArrayIndexOutOfBoundsException&lt;br/&gt;
	at serp.bytecode.lowlevel.ConstantPoolTable.readByte(ConstantPoolTable.java:81)&lt;br/&gt;
	at serp.bytecode.lowlevel.ConstantPoolTable.readUnsignedShort(ConstantPoolTable.java:88)&lt;br/&gt;
	at serp.bytecode.lowlevel.ConstantPoolTable.readUnsignedShort(ConstantPoolTable.java:153)&lt;br/&gt;
	at org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matches(ClassAnnotationMetaDataFilter.java:79)&lt;br/&gt;
	... 10 more&lt;/p&gt;

&lt;p&gt;I will post this new patch and plan to commit shortly...&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12530714" author="kwsutter" created="Thu, 27 Sep 2007 14:36:13 +0100"  >&lt;p&gt;Updated version of the patch.&lt;/p&gt;</comment>
                            <comment id="12530814" author="kwsutter" created="Thu, 27 Sep 2007 20:20:29 +0100"  >&lt;p&gt;Resolved via r580087 for both 1.0.1 and 1.1.0 releases.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12366666" name="OPENJPA-385.patch" size="2960" author="kwsutter" created="Thu, 27 Sep 2007 14:36:13 +0100"/>
                            <attachment id="12366622" name="OPENJPA-385.patch" size="1242" author="kwsutter" created="Thu, 27 Sep 2007 00:15:34 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160707</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt61b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>204158</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>