<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:31:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-699/OPENJPA-699.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-699] SQLWarnings not handled properly with WarningAction set to &quot;handle&quot;</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-699</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;If set  &quot;kodo.ConnectionFactoryProperties&quot; &quot;warningAction&quot; to &quot;throw&quot; or &quot;handle&quot;, when an INSERT statement fails due &lt;br/&gt;
to an attempt to insert null into a non-null column, log output is  &quot;The statement has been &lt;br/&gt;
terminated&quot;.&lt;br/&gt;
If didn&apos;t set  &quot;warningAction&quot;, the default value is &quot;ignore&quot;. It logs correct SQLException which is as follows:&lt;/p&gt;

&lt;p&gt;Cannot &lt;br/&gt;
insert the value NULL into column &apos;TestTimeNotNullNoDefaultUtc&apos;, table &lt;br/&gt;
&apos;STADatabase.dbo.DefaultValuesJ&apos;; column does not allow nulls. INSERT fails. &lt;br/&gt;
{prepstmnt 112461492 &lt;br/&gt;
... ...&lt;/p&gt;

&lt;p&gt;In org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingPreparedStatement.executeUpdate(), the &lt;br/&gt;
code is&lt;br/&gt;
            public int executeUpdate(String sql) throws SQLException {&lt;br/&gt;
                _sql = sql;&lt;br/&gt;
                logSQL(this);&lt;br/&gt;
                long start = System.currentTimeMillis();&lt;br/&gt;
                try &lt;/p&gt;
{
                    return super.executeUpdate(sql);
                }
&lt;p&gt; catch (SQLException se) &lt;/p&gt;
{
                    throw wrap(se, LoggingStatement.this);
                }
&lt;p&gt; finally &lt;/p&gt;
{
                    logTime(start);
                    handleSQLWarning(LoggingStatement.this);
                }
&lt;p&gt;            }&lt;br/&gt;
In this test case, it got a SQLWarning with msg &apos;The statement has been &lt;br/&gt;
terminated&apos; and a SQLException which tells Column null is not allowed.&lt;br/&gt;
When WarningAction is set to &apos;throw&apos; or &apos;handle&apos; and if handle doesn&apos;t &lt;br/&gt;
consume the warning but throw it, the SQLWarning is thrown from finally &lt;br/&gt;
block.&lt;br/&gt;
The SQLWarning which it is a subclass of SQLException will be processed by &lt;br/&gt;
DBdictionary.newStoreException() so we see the incorrect message.&lt;/p&gt;
</description>
                <environment>Kodo 4.1.4&lt;br/&gt;
OpenJPA 1.0.0&lt;br/&gt;
MS SQL 2005&lt;br/&gt;
MS JDBC DRIVER VERSION  1.1 &lt;br/&gt;
JDK 1.5</environment>
        <key id="12402891">OPENJPA-699</key>
            <summary>SQLWarnings not handled properly with WarningAction set to &quot;handle&quot;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="xiaoqinfeng2000">Xiaoqin Feng</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Aug 2008 18:24:33 +0100</created>
                <updated>Tue, 9 Mar 2010 18:31:01 +0000</updated>
                            <resolved>Wed, 27 Aug 2008 17:47:11 +0100</resolved>
                                    <version>1.0.0</version>
                                    <fixVersion>2.0.0-M1</fixVersion>
                                    <component>diagnostics</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12624983" author="xiaoqinfeng2000" created="Fri, 22 Aug 2008 22:30:59 +0100"  >&lt;p&gt;This is the proposed patch. &lt;br/&gt;
Proposed solution is when a SQLException is catched and WarningAction is set to &apos;throw&apos; or &apos;handle&apos;, we skip handleSQLwarning.&lt;/p&gt;

&lt;p&gt;Solution is tested on customer case.&lt;/p&gt;</comment>
                            <comment id="12625423" author="awhite" created="Mon, 25 Aug 2008 17:38:59 +0100"  >&lt;p&gt;Why don&apos;t we just always skip SQL warnings when we&apos;re throwing an exception?  I.e. just move all handleSQLWarning(...) calls to within the try&lt;/p&gt;
{ ... }
&lt;p&gt; after calling super(...) rather than in the finally block?  It seems that when there is a thrown exception, warnings will always be either extraneous or completely meaningless as in this bug report.&lt;/p&gt;</comment>
                            <comment id="12625431" author="xiaoqinfeng2000" created="Mon, 25 Aug 2008 18:30:19 +0100"  >&lt;p&gt;I was thinking to add fix with least change of existing behavior. So customer can still get log message of warning with other warning action property when exception is thrown. &lt;br/&gt;
I agree that usually when exception is thrown, warnings are meaningless.&lt;br/&gt;
I am fine with move handleSQLWarning() call to try block.&lt;/p&gt;</comment>
                            <comment id="12625433" author="joe weinstein" created="Mon, 25 Aug 2008 18:40:31 +0100"  >&lt;p&gt;Hi. Actually sometimes the DBMS and driver implement it so the one SQLException&lt;br/&gt;
is fairly generic, with a lot of detail relegated to the messages in the SQLWarnings.&lt;br/&gt;
I have even seen SQLExceptions which state &quot;Please see the information in the&lt;br/&gt;
chained SQLWarnings&quot;!&lt;br/&gt;
Joe Weinstein&lt;/p&gt;</comment>
                            <comment id="12625452" author="awhite" created="Mon, 25 Aug 2008 19:33:28 +0100"  >&lt;p&gt;If Joe is right then neither my proposed solution nor the attached patch are acceptable.  We need to capture the output of both the exception and any warnings.  So I propose the following changes to LoggingConnectionDecorator:&lt;/p&gt;

&lt;p&gt;1. Change the following pattern: &lt;br/&gt;
try &lt;/p&gt;
{...} catch(SQLException se) { throw wrap(se...); } finally { ... handleSQLWarnings(...); }&lt;br/&gt;
to:&lt;br/&gt;
SQLException err = null;&lt;br/&gt;
try {...}
&lt;p&gt; catch(SQLException se) &lt;/p&gt;
{ err = wrap(se...); }
&lt;p&gt; finally &lt;/p&gt;
{ ... handleSQLErrors(..., err); }

&lt;p&gt;2. Change all the handleSQLWarnings methods except handleSQLWarnings(SQLWarning) to be named handleSQLErrors and to accept an extra SQLException argument.  The try/finally blocks in these methods will become try/catch/finally blocks where the catch captures the thrown exception.  At the end of the method we combine the passed-in exception with the thrown exception and throw the result as a single exception (unless either/both are null of course, in which case we throw the non-null one or nothing at all).  &lt;/p&gt;

&lt;p&gt;3. Fix all the prepareStatement/createStatement methods that currently don&apos;t have handleSQLWarnings in a finally block at all to use a try/catch/finally block as outlined in change #1 above.&lt;/p&gt;

&lt;p&gt;Does that sound acceptable?  We might still get extraneous &quot;The statement has been closed&quot; output in the combined exceptions we throw under certain drivers, but at least no information will get lost.&lt;/p&gt;</comment>
                            <comment id="12625466" author="xiaoqinfeng2000" created="Mon, 25 Aug 2008 20:07:04 +0100"  >&lt;p&gt;That is a good plan.&lt;/p&gt;</comment>
                            <comment id="12625802" author="xiaoqinfeng2000" created="Tue, 26 Aug 2008 18:40:58 +0100"  >&lt;p&gt;Here is the revised patch according to our discussion.&lt;/p&gt;</comment>
                            <comment id="12626180" author="awhite" created="Wed, 27 Aug 2008 17:47:11 +0100"  >&lt;p&gt;Applied v2 patch per comments in SVN revision 689518.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12388928" name="openJPA-699-v2.patch" size="32073" author="xiaoqinfeng2000" created="Tue, 26 Aug 2008 18:40:58 +0100"/>
                            <attachment id="12388776" name="openJPA-699.patch" size="9000" author="xiaoqinfeng2000" created="Fri, 22 Aug 2008 22:30:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Aug 2008 16:38:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161011</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyswvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202674</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>