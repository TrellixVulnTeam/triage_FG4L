<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:32:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-251/OPENJPA-251.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-251] org.apache.openjpa.enhance.Reflection.getDeclaredMethod() has undefined behavior, leading to VM-dependent crashes</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-251</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Given &lt;/p&gt;

&lt;p&gt;public interface A &lt;/p&gt;
{ Object getId(); }

&lt;p&gt;@Entity&lt;br/&gt;
public class B implements A { &lt;br/&gt;
    @Id&lt;br/&gt;
    public String getId() &lt;/p&gt;
{ return &quot;foo&quot;; }
&lt;p&gt; &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;B.class.getDeclaredMethods() will include both &quot;public java.lang.String B.getId()&quot; and &quot;public java.lang.Object B.getId()&quot;. The order in which these two methods appear is NOT DEFINED! Because org.apache.openjpa.enhance.Reflection.getDeclaredMethod()  returns the first matching method, and because that method might well be the abstract one retuning Object, OpenJPA will complain that it cannot persist an ID with a non-explicit strategy, and throw up.&lt;/p&gt;

&lt;p&gt;Class.getDeclaredMethod() (note singular, not plural) is defined to return the method with the most specific return type under these circumstances, and should therefore be used. Here&apos;s my implementation of Reflection.getDeclaredMethod:&lt;/p&gt;

&lt;p&gt;	private static Method getDeclaredMethod(Class cls, String name, Class param)&lt;br/&gt;
	{&lt;br/&gt;
		Class[] params = param == null ? new Class&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; : new Class[] &lt;/p&gt;
{ param }
&lt;p&gt;;&lt;br/&gt;
		try&lt;/p&gt;
		{
			return cls.getDeclaredMethod(name, params);
		}
&lt;p&gt;		catch (Exception e)&lt;/p&gt;
		{
			return null;
		}
&lt;p&gt;	}&lt;/p&gt;</description>
                <environment>Sun JDK 6.01</environment>
        <key id="12371051">OPENJPA-251</key>
            <summary>org.apache.openjpa.enhance.Reflection.getDeclaredMethod() has undefined behavior, leading to VM-dependent crashes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jdf@us.ibm.com">Jonathan Feinberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Jun 2007 17:29:11 +0100</created>
                <updated>Tue, 9 Mar 2010 18:32:35 +0000</updated>
                            <resolved>Thu, 31 Jan 2008 00:02:24 +0000</resolved>
                                    <version>0.9.7</version>
                                    <fixVersion>1.0.2</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>jpa</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12501972" author="jdf@us.ibm.com" created="Wed, 6 Jun 2007 17:30:55 +0100"  >&lt;p&gt;The enclosed demonstration program gives the output&lt;/p&gt;

&lt;p&gt;  public java.lang.String weirdness.TheImplementation.getIt()&lt;br/&gt;
  public java.lang.Object weirdness.TheImplementation.getIt()&lt;/p&gt;

&lt;p&gt;on my machine, but gives the output&lt;/p&gt;

&lt;p&gt;  public java.lang.String weirdness.TheImplementation.getIt()&lt;br/&gt;
  public java.lang.String weirdness.TheImplementation.getIt()&lt;/p&gt;

&lt;p&gt;on a seemingly identical machine belonging to my colleague.&lt;/p&gt;
</comment>
                            <comment id="12501989" author="clr" created="Wed, 6 Jun 2007 18:04:01 +0100"  >&lt;p&gt;Thanks for the info, Jonathan. Seems like a good analysis and an easy fix.&lt;/p&gt;

&lt;p&gt;Would you be able to provide a patch, and run the build script to verify it doesn&apos;t break anything?&lt;/p&gt;
</comment>
                            <comment id="12501994" author="pcl" created="Wed, 6 Jun 2007 18:09:25 +0100"  >&lt;p&gt;From a fix standpoint, it&apos;d be nice to come up with a helper method that replaces the functionality of getDeclaredMethods(), but only lists the most-specific of duplicate covariant signatures (getMostSpecificDeclaredMethods() or something) so that we can use it throughout the codebase without duplication of the looping logic.&lt;/p&gt;</comment>
                            <comment id="12502016" author="awhite" created="Wed, 6 Jun 2007 19:18:00 +0100"  >&lt;p&gt;The original implementation used Class.getDeclaredMethod.  It was changed because this is significantly slower than using getDeclaredMethods() and searching through them, and this method is used a lot during deployment. &lt;/p&gt;</comment>
                            <comment id="12503101" author="jdf@us.ibm.com" created="Sat, 9 Jun 2007 17:51:15 +0100"  >&lt;p&gt;Abe, I&apos;d rather have the right answer slowly. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Out of curiosity, how much time does it add to deployment?&lt;/p&gt;</comment>
                            <comment id="12503137" author="pcl" created="Sun, 10 Jun 2007 02:15:09 +0100"  >&lt;p&gt;It was significant, due to the additional exceptions that were raised by getDeclaredMethod(), which throws when it fails.&lt;/p&gt;

&lt;p&gt;We should aim to have a solution that is both correct and fast, IMO. It shouldn&apos;t be that hard to implement such a solution with appropriate use of a bit of caching. As ever, it&apos;s unfortunate to need to add a cache, since that&apos;s one more memory resource to manage and synchronization area to care about.&lt;/p&gt;

&lt;p&gt;In fact, IIRC, a caching solution was marginally faster than the non-caching solution that we ended up using.&lt;/p&gt;</comment>
                            <comment id="12521486" author="mprudhom" created="Tue, 21 Aug 2007 15:57:09 +0100"  >&lt;p&gt;Bumping to release 1.0.1 since 1.0.0 is being released.&lt;/p&gt;</comment>
                            <comment id="12538830" author="allee8285" created="Tue, 30 Oct 2007 16:11:39 +0000"  >&lt;p&gt;Defer to next release.&lt;/p&gt;</comment>
                            <comment id="12564192" author="pcl" created="Wed, 30 Jan 2008 22:06:02 +0000"  >&lt;p&gt;These seem like they might be related.&lt;/p&gt;</comment>
                            <comment id="12564233" author="pcl" created="Thu, 31 Jan 2008 00:02:24 +0000"  >&lt;p&gt;I was unable to reproduce this on my machine (presumably my VM uses the &quot;expected&quot; ordering), but I believe that I resolved the issue with changes to getDeclaredMethod().&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12376639">OPENJPA-329</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12359090" name="weirdness.zip" size="2063" author="jdf@us.ibm.com" created="Wed, 6 Jun 2007 17:30:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Jun 2007 17:04:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysw9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202576</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>