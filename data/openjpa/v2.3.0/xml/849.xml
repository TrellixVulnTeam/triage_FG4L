<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:37:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-849/OPENJPA-849.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-849] Add metadata-type getter methods to EntityManager</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-849</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;This task is for supporting the new 2.0 EntityManager methods getProperties() and getSupportedProperties()&lt;/p&gt;</description>
                <environment></environment>
        <key id="12411713">OPENJPA-849</key>
            <summary>Add metadata-type getter methods to EntityManager</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12409671">OPENJPA-808</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ppoddar@apache.org">Pinaki Poddar</assignee>
                                    <reporter username="dianner">Dianne Richards</reporter>
                        <labels>
                    </labels>
                <created>Mon, 5 Jan 2009 20:25:39 +0000</created>
                <updated>Thu, 17 Sep 2009 20:24:20 +0100</updated>
                            <resolved>Thu, 27 Aug 2009 17:58:05 +0100</resolved>
                                    <version>2.0.0-M2</version>
                                    <fixVersion>2.0.0-M3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12661196" author="dianner" created="Tue, 6 Jan 2009 16:29:29 +0000"  >&lt;p&gt;Also support these same methods on the EntityManagerFactory.&lt;/p&gt;</comment>
                            <comment id="12667151" author="dianner" created="Sun, 25 Jan 2009 23:47:14 +0000"  >&lt;p&gt;I&apos;m attaching a patch so please review. For anyone who applies this patch, be aware of the following. I changed the pom file for running the test suite, changing the property name &quot;openjpa.ConnectionDriverName&quot; to &quot;javax.persistence.jdbc.driver&quot;. This allows me to run some additional tests and also makes sure we support at least one of the new spec properties correctly. But, this caused some of the other test cases to fail, becuuse there&apos;s code to prevent both property names from being specified. I fixed these test cases as well as a persistence.xml. But, if you try to run these test cases with a system value for the &quot;openjpa.ConnectionDriverName&quot; property, a number of these will fail. Change the system property name to &quot;javax.persistence.jdbc.driver&quot;.&lt;/p&gt;

&lt;p&gt;Some details related to this patch:&lt;br/&gt;
1 - If a property has 2 names (such as openjpaConnectionDriverName and javax.persistence.jdbc.driver, the getPropertys() method returns only 1 name, as follows:&lt;br/&gt;
   a - If the value has been set, the name by which it has been set is returned&lt;br/&gt;
   b - If the value has not been set, the spec value is returned with the default value&lt;br/&gt;
2 - The getSupportedProperties returns properties as follows:&lt;br/&gt;
   a - If a supported property has 2 keys, such openjpa.LockTimeout and javax.persistence.lock.timeout, both keys are returned.&lt;br/&gt;
   b - The supported properties related to the PersistenceContext annotation and the EntityManagerFactory createEntityManager() method are currently limited to those with supported setters on the OpenJPAEntityManager interface. To allow additional  properties, additional setters/getters will have to be added and code that retrieves those properties would have to change to use these getter methods rather than retrieving the configuration values.&lt;br/&gt;
3 - In setting the framework for supporting the getSupportedProperties() methods on the EntityManager and EntityManagerFactory, consideration and support was also provided for the Query getSupportedHints() method.&lt;/p&gt;</comment>
                            <comment id="12667270" author="ppoddar@apache.org" created="Mon, 26 Jan 2009 15:42:41 +0000"  >&lt;p&gt;org.apache.openjpa.lib.conf.Configuration exists in a generic layer of OpenJPA and has no knowledge/awareness of facade-level notions such as EntityManagerFactory, EntityManager or Query.&lt;br/&gt;
Adding such awareness violates the core architectural principles of the system. &lt;/p&gt;


&lt;p&gt;&amp;#8212; src/main/java/org/apache/openjpa/lib/conf/Configuration.java	(revision 734193)&lt;br/&gt;
+++ src/main/java/org/apache/openjpa/lib/conf/Configuration.java	(working copy)&lt;br/&gt;
+    &lt;br/&gt;
+    /**&lt;br/&gt;
+     * @return the Set of properties supported for the EntityManager.&lt;br/&gt;
+     * This method is primarily for the use of the EntityManager&lt;br/&gt;
+     * getSupportedProperties() method.&lt;br/&gt;
+     * &lt;br/&gt;
+     * @since 2.0.0&lt;br/&gt;
+     */&lt;br/&gt;
+    public Set&amp;lt;String&amp;gt; getEMSupportedProperties();&lt;/p&gt;


&lt;p&gt;&amp;#8212; src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java	(revision 734193)&lt;br/&gt;
+++ src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java	(working copy)&lt;br/&gt;
+    // Sets of properties that are supported for the getSupportedProperties()&lt;br/&gt;
+    // methods of the EntityManager or EntityManagerFactory or for the&lt;br/&gt;
+    // getSupportedHints method() of Query.&lt;br/&gt;
+    Set&amp;lt;String&amp;gt; propertiesSupportedOnEMF;&lt;br/&gt;
+    Set&amp;lt;String&amp;gt; propertiesSupportedOnEM;&lt;br/&gt;
+    Set&amp;lt;String&amp;gt; propertiesSupportedOnQuery;&lt;/p&gt;</comment>
                            <comment id="12667272" author="ppoddar@apache.org" created="Mon, 26 Jan 2009 15:45:25 +0000"  >&lt;p&gt;Following pattern not only coding a new configuration property much cumbersome but also it is not OpenJPAConfiguration&apos;s perview to determine which &apos;Interface&apos; uses a property. &lt;/p&gt;

&lt;p&gt;&amp;#8212; src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java	(revision 736036)&lt;br/&gt;
+++ src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java	(working copy)&lt;br/&gt;
         optimistic.set(true);&lt;br/&gt;
+        optimistic.addInterfaceSupportedOn(Value.Interfaces.ENTITY_MANAGER);&lt;br/&gt;
+        optimistic&lt;br/&gt;
+            .addInterfaceSupportedOn(Value.Interfaces.ENTITY_MANAGER_FACTORY);&lt;/p&gt;</comment>
                            <comment id="12667392" author="mikedd" created="Mon, 26 Jan 2009 20:16:58 +0000"  >&lt;p&gt;I haven&apos;t thoroughly reviewed the patch. A couple of comments though. &lt;/p&gt;

&lt;p&gt;1. Moving to a Map &amp;lt;String,Object&amp;gt; is better than using a Properties object and was overdue. Thanks for straightening it out. &lt;/p&gt;

&lt;p&gt;2. openjpa-lib is not aware of Broker and Factory details, which are provided in openjpa-kernel. Methods like propertiesSupportedOnEMF and propertiesSupportedOnEM should be introduced in the kernel module (and renamed to be Broker and BrokerFactory). Currently we don&apos;t have a configuration object at this level so we might need to introduce one, or move the existing classes. &lt;/p&gt;

&lt;p&gt;3. I see &quot;openjpa&quot; hardcoded as the prefix for a lot of properties. How would this work for products that define their own configuration prefix? I believe Kodo and WebSphere do this for some properties. Might just be a simple matter of calling getConfigurationPrefix instead of hardcoding &quot;openjpa&quot;. &lt;/p&gt;

&lt;p&gt;That&apos;s it for now, the patch looks promising but it needs a little more polish (IMHO). Thanks Dianne! &lt;/p&gt;</comment>
                            <comment id="12668571" author="dianner" created="Thu, 29 Jan 2009 19:47:27 +0000"  >&lt;p&gt;Here&apos;s an updated patch, incorporating the changes suggested by Pinaki and Mike.&lt;/p&gt;</comment>
                            <comment id="12669008" author="techhusky" created="Fri, 30 Jan 2009 20:20:43 +0000"  >&lt;p&gt;Thanks for submitting a revised patch and nice work!   I reviewed the code changes and have a couple minor issues/suggestions.&lt;/p&gt;

&lt;p&gt;1) There is a possibility that the population of _supportedPropertyNames in method getSupportedProperties() in AbstractBrokerFactory could lead to a race condition if multiple threads were to call this method simultaneously.  Since the EMF is required to be thread, I recommend synchronizing the code (null check, synch, null check, load) that loads the set to avoid a potential race condition.&lt;/p&gt;

&lt;p&gt;2) Some of the comments in the kernel code refer to the EM and EMF.  While the new function was added specifically for JPA, the broker and broker factory should not refer to the facade.&lt;/p&gt;</comment>
                            <comment id="12670008" author="dianner" created="Tue, 3 Feb 2009 16:39:48 +0000"  >&lt;p&gt;Patch just for documentation changes&lt;/p&gt;</comment>
                            <comment id="12670139" author="dianner" created="Tue, 3 Feb 2009 22:10:06 +0000"  >&lt;p&gt;Attaching patch3.txt for review, incorporating Jeremy&apos;s comments. It contains all the code changes. See the doc_patch.txt for documentation changes.&lt;/p&gt;</comment>
                            <comment id="12670627" author="techhusky" created="Thu, 5 Feb 2009 04:25:25 +0000"  >&lt;p&gt;Committed doc_patch.txt (with a few minor updates) and patch3.txt for Dianne under revisions 740986, 740989, 740990, and 740991.  &lt;/p&gt;</comment>
                            <comment id="12670628" author="techhusky" created="Thu, 5 Feb 2009 04:31:21 +0000"  >&lt;p&gt;Correction.  doc_patch.txt updates were committed under 740924.  &lt;/p&gt;</comment>
                            <comment id="12670955" author="dianner" created="Thu, 5 Feb 2009 23:51:49 +0000"  >&lt;p&gt;In yesterday&apos;s patch, I changed the property for the driver key in the main pom.xml file for the unit tests from openjpa.ConnectionDriverName to the equivalent javax.persistence.jdbc.driver. It works fine, but because of other recent change, an exception is thrown if both keys are specified somewhere in the invocation process. This impacts people running tests in eclipse who have set this value as openjpa.ConnectionDriverName. So, I&apos;m temporarily backing out this change until the other change is reworked.&lt;/p&gt;</comment>
                            <comment id="12670991" author="techhusky" created="Fri, 6 Feb 2009 03:34:07 +0000"  >&lt;p&gt;patch_reset.txt committed under revision 741386.&lt;/p&gt;</comment>
                            <comment id="12673377" author="ppoddar@apache.org" created="Fri, 13 Feb 2009 21:22:56 +0000"  >
&lt;p&gt;        queryTimeout.setLoadKey(&quot;javax.persistence.query.timeout&quot;);&lt;br/&gt;
        queryTimeout.setDefault(&quot;-1&quot;);&lt;br/&gt;
        queryTimeout.set(-1);&lt;br/&gt;
        queryTimeout.setDynamic(true);&lt;/p&gt;

&lt;p&gt;does not seem kosher for the following reason:&lt;/p&gt;

&lt;p&gt;1. loadKey is the key with which a property is loaded from configuration artifacts. At this point of execution, no property has been &lt;b&gt;actually&lt;/b&gt; loaded, they are merely being declared to exist. Hence we should not be setting load key.&lt;br/&gt;
2. configuration declares a Value. But does not assign its value. So setting its value to -1 does not look alright. Setting default value is OK.&lt;/p&gt;

&lt;p&gt;These issues gain significance in the light of the fact the configuration&apos;s hashcode is the key to a factory in JNDI. And computation of hashcode depends on the actual value of the Values.&lt;br/&gt;
As an extreme example, assume two Configuration C1 and C2 nearly identical but differs &lt;b&gt;only&lt;/b&gt; in their query.timeout value. The requirement is hash code for C1 and C2 must not be equal. And that is what Configuration.hashCode() ensures. But, because we are setting query timeout to -1 (that is not what the user&apos;s p.xml sets) and it is marked as dynamic, in both cases Configuration hashcode will treat query.timeout value to be -1 and will end up computing same hashcode for C1 and C2.&lt;/p&gt;
</comment>
                            <comment id="12673406" author="dianner" created="Fri, 13 Feb 2009 22:42:26 +0000"  >&lt;p&gt;Thanks for checking this out Pinaki.&lt;/p&gt;

&lt;p&gt;&amp;gt;1. loadKey is the key with which a property is loaded from configuration artifacts. At this point of execution, no property has been &amp;gt;&lt;b&gt;actually&lt;/b&gt; loaded, they are merely being declared to exist. Hence we should not be setting load key. &lt;/p&gt;

&lt;p&gt;I now understand this and will change it. But, we have to solve a problem if we don&apos;t do this. The getProperties() methods return all defined properties, even if they have not been explicitly set. This calls the Configuration .toProperties() method which calls the setValue() method. By default, if we don&apos;t do anything, the value javax.persistence.query.timeout will be prefixed with &quot;openjpa.&quot;, which is not good. We can get around this doing a setEquivalentKey() instead. But, now I&apos;m wondering what we&apos;ll get with the getSupportedProperties() with this change. I&apos;ll have to investigat that. But, if that&apos;s ok, is this a reasonable alternative? Or, should I figure out something else?&lt;/p&gt;

&lt;p&gt;The other option is to define a new openjpa property, such as openjpa.QueryTimeout. I was trying to avoid that option. I&apos;m not sure we want to define a new openjpa property for every new spec property.&lt;/p&gt;

&lt;p&gt;&amp;gt;2. configuration declares a Value. But does not assign its value. So setting its value to -1 does not look alright. Setting default &amp;gt;value is OK. &lt;/p&gt;

&lt;p&gt;ok - But, I modeled this after the openjpa.LockTimeout definition. So, does this one need to be corrected too?&lt;/p&gt;</comment>
                            <comment id="12674676" author="dianner" created="Wed, 18 Feb 2009 16:12:26 +0000"  >&lt;p&gt;In order to close out an iteration, I&apos;m going to comment on the solution and this JIRA is going to be closed. I&apos;ll create a new JIRA with Pinaki&apos;s issue to deal with that there.&lt;/p&gt;

&lt;p&gt;This JIRA provides support for the EntityManager and EntityManagerFactory getProperties() and getSupportedProperties() methods. The getProperties() methods return all defined properties (keys and values), even those that have not been explicitely set (thus, with their default values). The getSupportedProperties() methods provide the keys for the openjpa supported properties on the specific interfaces defined by the spec. These include new properties defined by the spec, such as javax.persistence.query.timeout. All non-spec properties are prefixed with &quot;openjpa.&quot;. A derived product must override this method in order to add it&apos;s supported properties.&lt;/p&gt;</comment>
                            <comment id="12674786" author="techhusky" created="Wed, 18 Feb 2009 21:23:54 +0000"  >&lt;p&gt;Remaining issues documented in a new JIRA and will be addressed in I4.  Resolving issue.&lt;/p&gt;</comment>
                            <comment id="12744147" author="ppoddar@apache.org" created="Mon, 17 Aug 2009 19:00:19 +0100"  >&lt;p&gt;Need to rework some aspects of this issue.&lt;br/&gt;
Mainly&lt;br/&gt;
  a) preservation of user value types (as much as possible)&lt;br/&gt;
  b) hiding sensitive property values e.g. password&lt;br/&gt;
  c) freeing broker setter methods of responsibility of track changes separately&lt;br/&gt;
  d) support for properties of extended broker/factory&lt;br/&gt;
  e) semantics of EntityManager.getSupportedProperties()&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12431757">OPENJPA-1209</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12413544">OPENJPA-878</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12408693">OPENJPA-773</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433289">OPENJPA-1251</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12430735">OPENJPA-1178</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12399366" name="doc_patch.txt" size="8429" author="dianner" created="Tue, 3 Feb 2009 16:39:48 +0000"/>
                            <attachment id="12399032" name="patch.txt" size="47175" author="dianner" created="Thu, 29 Jan 2009 19:47:27 +0000"/>
                            <attachment id="12398708" name="patch.txt" size="49073" author="dianner" created="Sun, 25 Jan 2009 23:47:14 +0000"/>
                            <attachment id="12399389" name="patch3.txt" size="47065" author="dianner" created="Tue, 3 Feb 2009 22:10:05 +0000"/>
                            <attachment id="12399605" name="patch_reset.txt" size="4502" author="dianner" created="Thu, 5 Feb 2009 23:51:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Jan 2009 15:42:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161152</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysx6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202723</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>