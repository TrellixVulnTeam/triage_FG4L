<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:35:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1001/OPENJPA-1001.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1001] java.lang.IndexOutOfBoundsException when executing attached test case</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1001</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;I am hitting the following exception when executing the given test case:&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.IndexOutOfBoundsException: Index: 1, Size: 1&lt;br/&gt;
	at java.util.ArrayList.RangeCheck(ArrayList.java:546)&lt;br/&gt;
	at java.util.ArrayList.get(ArrayList.java:321)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.setParameters(SQLBuffer.java:615)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:515)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:471)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(SelectImpl.java:463)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:379)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:325)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateResult(JDBCStoreManager.java:503)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initializeState(JDBCStoreManager.java:322)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initialize(JDBCStoreManager.java:278)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingStoreManager.initialize(DelegatingStoreManager.java:111)&lt;br/&gt;
	at org.apache.openjpa.kernel.ROPStoreManager.initialize(ROPStoreManager.java:57)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.initialize(BrokerImpl.java:894)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.find(BrokerImpl.java:852)&lt;br/&gt;
	... 53 more&lt;br/&gt;
&amp;lt;openjpa-1.2.1-rexported nonfatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: Index: 1, Size: 1&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.find(BrokerImpl.java:875)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.find(BrokerImpl.java:774)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.find(JDBCStoreManager.java:951)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(RelationFieldStrategy.java:609)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.FieldMapping.load(FieldMapping.java:819)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(JDBCStoreManager.java:688)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingStoreManager.load(DelegatingStoreManager.java:116)&lt;br/&gt;
	at org.apache.openjpa.kernel.ROPStoreManager.load(ROPStoreManager.java:78)&lt;br/&gt;
	at org.apache.openjpa.kernel.StateManagerImpl.loadFields(StateManagerImpl.java:2921)&lt;br/&gt;
	at org.apache.openjpa.kernel.StateManagerImpl.loadField(StateManagerImpl.java:2999)&lt;br/&gt;
	at org.apache.openjpa.kernel.StateManagerImpl.fetchObjectField(StateManagerImpl.java:2242)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.delete(RelationFieldStrategy.java:256)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.FieldMapping.delete(FieldMapping.java:589)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.delete(AbstractUpdateManager.java:238)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.delete(AbstractUpdateManager.java:252)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.populateRowManager(AbstractUpdateManager.java:143)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(AbstractUpdateManager.java:85)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(AbstractUpdateManager.java:72)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.flush(JDBCStoreManager.java:717)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingStoreManager.flush(DelegatingStoreManager.java:130)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:2010)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flushSafe(BrokerImpl.java:1908)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:1679)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.isInMemory(QueryImpl.java:956)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:796)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.deleteAll(QueryImpl.java:872)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.deleteAll(QueryImpl.java:868)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.deleteAll(DelegatingQuery.java:541)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.executeUpdate(QueryImpl.java:331)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.PersistenceTestCase.clear(PersistenceTestCase.java:232)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.PersistenceTestCase.clear(PersistenceTestCase.java:205)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.SingleEMFTestCase.tearDown(SingleEMFTestCase.java:71)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:130)&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;</description>
                <environment>Can reproduce on Max OS X and Linux</environment>
        <key id="12421510">OPENJPA-1001</key>
            <summary>java.lang.IndexOutOfBoundsException when executing attached test case</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikedd">Michael Dick</assignee>
                                    <reporter username="rakr">Richard Rak</reporter>
                        <labels>
                    </labels>
                <created>Sun, 29 Mar 2009 21:03:01 +0100</created>
                <updated>Tue, 9 Mar 2010 18:31:12 +0000</updated>
                            <resolved>Thu, 11 Feb 2010 23:14:42 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.2.3</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-beta2</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12694681" author="rakr" created="Wed, 1 Apr 2009 19:39:27 +0100"  >&lt;p&gt;I&apos;ve done some more digging around, and the issue &lt;b&gt;appears&lt;/b&gt; to be:&lt;/p&gt;

&lt;p&gt;SelectImpl.wherePrimaryKey(ClassMapping mapping, Column[] toCols, &lt;br/&gt;
    	Column[] fromCols, Object oid, JDBCStore store, PathJoins pj,&lt;br/&gt;
    	SQLBuffer buf, List parmList)&lt;/p&gt;

&lt;p&gt;This method is adding the primary key values to the parameter list.  It is adding a NULL value to the parameter list, and is also adding &quot;IS NULL&quot; to the SQLBuffer.&lt;/p&gt;

&lt;p&gt;Then, when SQLBuffer calls setParameters(PreparedStatement ps, List cacheParams), it is finding that NULL value in the cacheParams list, and is throwing the IndexOutOfBoundsException when attempting to find the column name for the null value.&lt;/p&gt;</comment>
                            <comment id="12695388" author="mikedd" created="Fri, 3 Apr 2009 14:52:10 +0100"  >&lt;p&gt;Simply guarding for null when we add to the list appears to resolve the problem and it didn&apos;t break any other tests. The results look identical to what I get when running on trunk which has Pinaki&apos;s version of SQL caching. &lt;/p&gt;

&lt;p&gt;It seems to me that there&apos;s a better way to fix the problem, but I haven&apos;t been able to dig in and find it. &lt;/p&gt;</comment>
                            <comment id="12695563" author="ppoddar@apache.org" created="Fri, 3 Apr 2009 21:31:46 +0100"  >&lt;p&gt;&amp;gt; The results look identical to what I get when running on trunk which has Pinaki&apos;s version of SQL caching. &lt;br/&gt;
Does that imply the test passed with &apos;Pinaki&apos;s version of SQL caching&apos;?&lt;/p&gt;

&lt;p&gt;The test passed on trunk for me.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;If&lt;/b&gt; this test is failing with previous SQLCaching (not pinaki&apos;s version of  SQL caching which is better be referred as Prepared Query caching &amp;#8211; because that more accurately reflects what it is) that brings up again the long-standing issue with QuerySQLCache. &lt;/p&gt;

&lt;p&gt;Though Prepared Query Cache has no resemblance to  QuerySQLCache in terms of its design and its solution approach &amp;#8211; I still agreed to retain the same moniker to configure it because I saw it as a replacement for a potentially risky (and costly) mistake that has entered our released service stream. &lt;/p&gt;

&lt;p&gt;I am aware of the concerns/risks of backporting a rather large change such as Prepared Query Cache  in a released service stream. But If Prepared Query Cache were not written by me, I would have voiced my opinion more strongly to backport it as a replacement for existing QuerySQLCache. The risk of regression with PQC changes are minimal both because of its design as well as it has been operation/tested in one way or other in different scenarios. &lt;/p&gt;

&lt;p&gt;Effectively, In my view (which can be accused of bias in this case), the cost of retaining existing QuerySQLCache in the service stream outweighs the risks of injecting PQC in the stream &amp;#8211; &lt;/p&gt;</comment>
                            <comment id="12695568" author="mikedd" created="Fri, 3 Apr 2009 21:41:10 +0100"  >&lt;p&gt;Sorry I wasn&apos;t clear with my earlier remarks. The testcase passed for me with trunk, and also passed with a simple guard for null. I just haven&apos;t had a chance to dig deeper (don&apos;t want to just band aid a fix in). &lt;/p&gt;

&lt;p&gt;Pinaki, taking a closer look at Prepared Query Caching is on my ever growing list to things to do, but I don&apos;t want to sidetrack this issue any more than I already have &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12786939" author="bjreed" created="Mon, 7 Dec 2009 15:18:36 +0000"  >&lt;p&gt;This issue has been fixed in trunk with &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-703&quot; title=&quot;Cache ResultObjectProvider data to improve query performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-703&quot;&gt;&lt;del&gt;OPENJPA-703&lt;/del&gt;&lt;/a&gt; revision 739123.  Unfortunately, that commit was very large (&amp;gt; 60 files).&lt;/p&gt;

&lt;p&gt;I&apos;ve been able to reduce the patch down to 5 files....seems that any more changes from this point break other JUnit test cases&lt;/p&gt;

&lt;p&gt;Mike, when committing this patch to 1.2.x, also commit the TestIncompleteRelationship test case and I suggest committing the test case to trunk as well.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12404095" name="IncompleteRelationshipChildEntity.java" size="4806" author="rakr" created="Sun, 29 Mar 2009 21:05:22 +0100"/>
                            <attachment id="12404096" name="IncompleteRelationshipParentEntity.java" size="5568" author="rakr" created="Sun, 29 Mar 2009 21:05:22 +0100"/>
                            <attachment id="12404097" name="IncompleteRelationshipSubclass.java" size="1427" author="rakr" created="Sun, 29 Mar 2009 21:05:53 +0100"/>
                            <attachment id="12427185" name="OPENJPA-1001.patch" size="21461" author="bjreed" created="Mon, 7 Dec 2009 15:18:36 +0000"/>
                            <attachment id="12404094" name="TestIncompleteRelationship.java" size="3453" author="rakr" created="Sun, 29 Mar 2009 21:05:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Apr 2009 13:52:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161298</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt68n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>204191</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>