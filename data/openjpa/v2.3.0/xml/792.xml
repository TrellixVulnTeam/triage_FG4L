<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:35:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-792/OPENJPA-792.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-792] An entity persist may fail when @MappedSupercalss is specified. </title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-792</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;When @MappedSuperClass annotation is specified and if we try to persist the same key of the subclasses which are entities of the Mappedsuperclass , Persist fails which is not the expected behavior.&lt;/p&gt;

&lt;p&gt;import java.util.Date;&lt;/p&gt;


&lt;p&gt;import javax.persistence.Id;&lt;br/&gt;
import javax.persistence.Column;&lt;/p&gt;

&lt;p&gt;@javax.persistence.MappedSuperclass&lt;br/&gt;
public class Party {&lt;/p&gt;


&lt;p&gt;    protected Long PartyId;&lt;br/&gt;
    protected String Status;&lt;br/&gt;
    protected String ArchiveStatus;&lt;br/&gt;
    protected Date CreateDate;&lt;/p&gt;

&lt;p&gt;    @Id&lt;br/&gt;
    public Long getPartyId() &lt;/p&gt;
{
        return this.PartyId;
    }

&lt;p&gt;    public void setPartyId(Long id)&lt;/p&gt;
{
        this.PartyId = id;
    }

&lt;p&gt;    public void setArchiveStatus(String s)&lt;/p&gt;
{
        this.ArchiveStatus = s;
        
    }

&lt;p&gt;    public void setStatus(String s) &lt;/p&gt;
{
        this.Status = s;
    }

&lt;p&gt;    @Column&lt;br/&gt;
    public String getStatus() &lt;/p&gt;
{
        return this.Status;
    }

&lt;p&gt;    @Column&lt;br/&gt;
    public String getArchiveStatus() &lt;/p&gt;
{
        return this.ArchiveStatus;
    }

&lt;p&gt;    public void setCreateDate(Date d) &lt;/p&gt;
{
        this.CreateDate = d;
    }

&lt;p&gt;    @Column&lt;br/&gt;
    public Date getCreateDate() &lt;/p&gt;
{
        return this.CreateDate;
    }
&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;import java.util.List;&lt;/p&gt;


&lt;p&gt;import javax.persistence.DiscriminatorValue;&lt;br/&gt;
import javax.persistence.Entity;&lt;br/&gt;
import javax.persistence.Inheritance;&lt;br/&gt;
import javax.persistence.OneToMany;&lt;br/&gt;
import javax.persistence.Table;&lt;br/&gt;
import javax.persistence.FetchType;&lt;br/&gt;
import javax.persistence.CascadeType;&lt;br/&gt;
import javax.persistence.InheritanceType;&lt;/p&gt;

&lt;p&gt;import org.apache.openjpa.persistence.jdbc.DiscriminatorStrategy;&lt;/p&gt;


&lt;p&gt;@Entity&lt;br/&gt;
@Table(name = &quot;Site&quot;)&lt;br/&gt;
 public class Site  extends Party implements java.io.Serializable {&lt;/p&gt;

&lt;p&gt;       private static final long serialVersionUID = 1L;&lt;/p&gt;

&lt;p&gt;       private String SiteName;&lt;br/&gt;
       private String SiteDescription;&lt;br/&gt;
     /*  private List&amp;lt;Store&amp;gt; stores;&lt;/p&gt;

&lt;p&gt;       @OneToMany(mappedBy=&quot;site&quot;,  cascade=CascadeType.ALL, fetch=FetchType.LAZY, &lt;br/&gt;
         targetEntity=Store.class)&lt;br/&gt;
       public List&amp;lt;Store&amp;gt; getStores() &lt;/p&gt;
{
             return stores;
       }

&lt;p&gt;      public void setStores(List&amp;lt;Store&amp;gt; storeList)&lt;/p&gt;
{
          this.stores = storeList;
      }
&lt;p&gt;*/&lt;br/&gt;
     public void setSiteName(String s) &lt;/p&gt;
{
         this.SiteName = s;
     }

&lt;p&gt;     public String getSiteName()&lt;/p&gt;
{
         return this.SiteName;
     }

&lt;p&gt;     public void setSiteDescription(String s) &lt;/p&gt;
{
         this.SiteDescription = s;
     }

&lt;p&gt;     public String getSiteDescription() &lt;/p&gt;
{
         return this.SiteDescription;
     }
&lt;p&gt; }&lt;/p&gt;


&lt;p&gt;import javax.persistence.CascadeType;&lt;br/&gt;
import javax.persistence.Entity;&lt;br/&gt;
import javax.persistence.FetchType;&lt;br/&gt;
import javax.persistence.Inheritance;&lt;br/&gt;
import javax.persistence.InheritanceType;&lt;br/&gt;
import javax.persistence.JoinColumn;&lt;br/&gt;
import javax.persistence.ManyToOne;&lt;br/&gt;
import javax.persistence.Table;&lt;/p&gt;

&lt;p&gt;@Entity&lt;br/&gt;
@Table(name = &quot;Store&quot;)&lt;br/&gt;
 public class Store extends Party implements java.io.Serializable {&lt;/p&gt;

&lt;p&gt;       private static final long serialVersionUID = 1L;&lt;br/&gt;
       private String StoreName;&lt;br/&gt;
       private String StoreDescription;&lt;/p&gt;

&lt;p&gt;       private Site site;&lt;br/&gt;
       private Long SiteId;&lt;/p&gt;

&lt;p&gt;       @ManyToOne( fetch = FetchType.LAZY,  cascade = CascadeType.ALL, &lt;br/&gt;
               targetEntity=Site.class)&lt;br/&gt;
       @JoinColumn(name = &quot;Store.SiteId&quot;,&lt;br/&gt;
       referencedColumnName=&quot;site.PartyId&quot;, nullable = false, insertable = true,&lt;br/&gt;
       updatable = true)&lt;/p&gt;

&lt;p&gt;       public Site getSite() &lt;/p&gt;
{
             return site;
       }

&lt;p&gt;       public void setSite(Site s) &lt;/p&gt;
{
           this.site = s;
           
       }

&lt;p&gt;       public void setStoreName(String s) &lt;/p&gt;
{
           this.StoreName = s;
       }

&lt;p&gt;       public String getStoreName() &lt;/p&gt;
{
           return this.StoreName;
       }

&lt;p&gt;       public void setStoreDescription(String s)&lt;/p&gt;
{
           this.StoreDescription = s;
       }

&lt;p&gt;       public String getStoreDescription()&lt;/p&gt;
{
           return this.StoreDescription;
       }
&lt;p&gt; &lt;/p&gt;


&lt;p&gt;       public void setSiteId(Long id) &lt;/p&gt;
{
           this.SiteId = id;
       }

&lt;p&gt;       public Long getSiteId() &lt;/p&gt;
{
           return this.SiteId;
       }

&lt;p&gt; }&lt;/p&gt;

&lt;p&gt;TestCase follows:&lt;/p&gt;

&lt;p&gt;import java.util.ArrayList;&lt;br/&gt;
import java.util.Date;&lt;br/&gt;
import java.util.List;&lt;/p&gt;

&lt;p&gt;import javax.persistence.EntityManager;&lt;br/&gt;
import javax.persistence.EntityManagerFactory;&lt;br/&gt;
import javax.persistence.Persistence;&lt;/p&gt;

&lt;p&gt;import lazy_fetch.bean.Site;&lt;br/&gt;
import lazy_fetch.bean.Store;&lt;/p&gt;

&lt;p&gt;public class TestLazyFetch {&lt;/p&gt;

&lt;p&gt;    public static EntityManagerFactory emf = null;&lt;br/&gt;
    public static Long pkey = new Long (1502);&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) &lt;/p&gt;
{
        
        emf = Persistence.createEntityManagerFactory(&quot;LazyFetch&quot;);
       
        createSite();
        System.out.println(&quot;Done creating Site&quot;);
        createStore();
        System.out.println(&quot;Done creating Store&quot;);
       // getStoreWithSite();
        
    }

&lt;p&gt;    public static void getStoreWithSite() &lt;/p&gt;
{
        EntityManager em = emf.createEntityManager();
        Store store = em.find(Store.class, pkey);
        System.out.println(&quot;store =&quot; + store);
       // Site site = store.getSite();
      //  System.out.println(&quot;site =&quot; + site);
   }

&lt;p&gt;    public static void createSite() &lt;/p&gt;
{
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        
        Site s = new Site();
        s.setPartyId(pkey);
        s.setSiteName(&quot;San Jose&quot;);
        s.setSiteDescription(&quot;San Jose site&quot;);
        s.setStatus(&quot;2&quot;);
        s.setArchiveStatus(&quot;2&quot;);
        s.setCreateDate(new Date());
        
        em.persist(s);
        em.getTransaction().commit();
        em.close();
    }

&lt;p&gt;    public static void createStore() &lt;/p&gt;
{
        
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
         
         Site site = em.find(Site.class, pkey);
         
          Store store = new Store();
          store.setPartyId(pkey);
          store.setStoreDescription(&quot;storeDescription&quot;);
          store.setStoreName(&quot;storeName&quot;);
          store.setStatus(&quot;1&quot;);
          store.setArchiveStatus(&quot;1&quot;);
          store.setCreateDate(new Date());
          store.setSiteId(site.getPartyId());
          store.setSite(site);
          
       //  List&amp;lt;Store&amp;gt; stores = new ArrayList&amp;lt;Store&amp;gt;();
        //  stores.add(store);
       //   site.setStores(stores);

          em.persist(store);
          em.getTransaction().commit();
    }


&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;47  LazyFetch  INFO   &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.Runtime - Starting OpenJPA 2.0.0-SNAPSHOT&lt;br/&gt;
125  LazyFetch  INFO   &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.JDBC - Using dictionary class &quot;org.apache.openjpa.jdbc.sql.DB2Dictionary&quot;.&lt;br/&gt;
Exception in thread &quot;main&quot; &amp;lt;openjpa-2.0.0-SNAPSHOT-runknown nonfatal store error&amp;gt; org.apache.openjpa.persistence.EntityExistsException: An object of type &quot;lazy_fetch.bean.Store&quot; with oid &quot;lazy_fetch.bean.Party-1502&quot; already exists in this context; another cannot be persisted.&lt;br/&gt;
FailedObject: lazy_fetch.bean.Store@9c609c6&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.checkForDuplicateId(BrokerImpl.java:4756)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.persist(BrokerImpl.java:2445)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.persist(BrokerImpl.java:2281)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingBroker.persist(DelegatingBroker.java:1021)&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerImpl.persist(EntityManagerImpl.java:645)&lt;br/&gt;
	at lazy_fetch.tests.TestLazyFetch.createStore(TestLazyFetch.java:77)&lt;br/&gt;
	at lazy_fetch.tests.TestLazyFetch.main(TestLazyFetch.java:25)&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12409296">OPENJPA-792</key>
            <summary>An entity persist may fail when @MappedSupercalss is specified. </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="turagasandy">Sandhya</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Nov 2008 19:15:40 +0000</created>
                <updated>Mon, 17 Sep 2012 21:31:04 +0100</updated>
                            <resolved>Tue, 9 Dec 2008 19:53:24 +0000</resolved>
                                    <version>2.0.0-M2</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-M2</fixVersion>
                                    <component>jpa</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12651127" author="turagasandy" created="Wed, 26 Nov 2008 19:57:07 +0000"  >&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;         I am working on this issue and I will update patch soon. (I will try to upload this today if not I will upload the patch the after the thanksgiving)&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Sandhya&lt;/p&gt;</comment>
                            <comment id="12653406" author="turagasandy" created="Thu, 4 Dec 2008 18:56:43 +0000"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;      Please find the attached patch that has a small modification in PCEnhancer.java and test cases.  When @MappedSuperClass annotation is specified, the bytecode for the  AddNewobjectIdInstanceMethod() in the enhancer should be looking for This.getClass() instead of the classname. &lt;br/&gt;
I changed that part. This change resolves the issue of not able to persist same keys of the subclasses when MappedSuperClass annotation is specified. &lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Sandhya Turaga&lt;/p&gt;
</comment>
                            <comment id="12654580" author="faywang" created="Mon, 8 Dec 2008 21:29:31 +0000"  >&lt;p&gt;patch is committed to trunk r724490,  and openjpa 1.3.x r724491.&lt;/p&gt;</comment>
                            <comment id="12724376" author="openjpa1388" created="Fri, 26 Jun 2009 04:53:43 +0100"  >&lt;p&gt;I need the fix as I am hitting it in my project.&lt;/p&gt;

&lt;p&gt;Is there a version 1.3.0 build I can download ? Could not find it in the download page.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12724481" author="drwoods" created="Fri, 26 Jun 2009 12:33:53 +0100"  >&lt;p&gt;Neither 1.3.0 nor 2.0.0 have been released yet.&lt;br/&gt;
You can download the assembly from the latest nightly build of 1.3.0-SNAPSHOT from -&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/repo/m2-snapshot-repository/org/apache/openjpa/apache-openjpa/1.3.0-SNAPSHOT/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/repo/m2-snapshot-repository/org/apache/openjpa/apache-openjpa/1.3.0-SNAPSHOT/&lt;/a&gt;&lt;br/&gt;
Or the latest 2.0.0-SNAPSHOT build from -&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/repo/m2-snapshot-repository/org/apache/openjpa/apache-openjpa/2.0.0-SNAPSHOT/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/repo/m2-snapshot-repository/org/apache/openjpa/apache-openjpa/2.0.0-SNAPSHOT/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12724487" author="drwoods" created="Fri, 26 Jun 2009 12:52:57 +0100"  >&lt;p&gt;Give it about an hour and the published build content will be updated under -&lt;br/&gt;
&lt;a href=&quot;http://openjpa.apache.org/builds/1.3.0-SNAPSHOT/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openjpa.apache.org/builds/1.3.0-SNAPSHOT/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12724653" author="mikedd" created="Fri, 26 Jun 2009 19:32:35 +0100"  >&lt;p&gt;Hi Ben,&lt;/p&gt;

&lt;p&gt;The information was there (on the downloads page) but it wasn&apos;t terribly intuitive. I&apos;ve added direct links to the snapshot repository on people.apache.org for all the versions that I publish (same links that Donald posted). &lt;/p&gt;

&lt;p&gt;Thanks for bringing it up, and thanks Donald for posting it in a more intuitive place. &lt;/p&gt;</comment>
                            <comment id="13457230" author="rogerkeays" created="Mon, 17 Sep 2012 20:05:17 +0100"  >&lt;p&gt;I&apos;ve hit this bug in OpenJPA 2.0.0 doing a merge operation, similar to what is described in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1671&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/OPENJPA-1671&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trying to reproduce it now.&lt;/p&gt;</comment>
                            <comment id="13457287" author="rogerkeays" created="Mon, 17 Sep 2012 21:31:04 +0100"  >&lt;p&gt;I can reproduce my problem and opened a separate bug for it since it seems to be related to serialization.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-2262&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/OPENJPA-2262&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12395309" name="openjpa-792.patch" size="27211" author="turagasandy" created="Thu, 4 Dec 2008 18:56:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 8 Dec 2008 21:29:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161098</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysx33:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202708</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>