<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:37:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-2171/OPENJPA-2171.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-2171] asm should be optional</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-2171</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;openjpa uses since some versions asm but in tomee for instance we use a shade (through the xbean one org.apache.xbean:xbean-asm-shaded to avoid classloading/version issues with webapps/applications.&lt;/p&gt;

&lt;p&gt;it can be nice if openjpa can provide us an issue to this because we really don&apos;t want to provide asm in our binaries.&lt;/p&gt;

&lt;p&gt;solutions can be to use the xbean shade, give us an interface to implement or to try several implementation (xbean shade, asm,...) by reflection&lt;/p&gt;</description>
                <environment></environment>
        <key id="12550795">OPENJPA-2171</key>
            <summary>asm should be optional</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="struberg">Mark Struberg</assignee>
                                    <reporter username="romain.manni-bucau">Romain Manni-Bucau</reporter>
                        <labels>
                            <label>2.3.0-candidate</label>
                    </labels>
                <created>Fri, 13 Apr 2012 09:24:21 +0100</created>
                <updated>Thu, 12 Jun 2014 16:09:27 +0100</updated>
                            <resolved>Tue, 29 Oct 2013 08:18:10 +0000</resolved>
                                                    <fixVersion>2.3.0</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13253400" author="kwsutter" created="Fri, 13 Apr 2012 15:15:43 +0100"  >&lt;p&gt;Can you help us understand the basic issue so that we can resolve this appropriately?  Is the basic issue because OpenJPA has introduced a maven dependency on ASM 3.2?  Or, is it due to the fact that we have now included the asm binaries in our openjpa-all jar file?  And, are those asm binaries causing conflicts with asm usage by TomEE?  I looked at the maven shade plugin (&lt;a href=&quot;http://maven.apache.org/plugins/maven-shade-plugin/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/plugins/maven-shade-plugin/&lt;/a&gt;), but I&apos;m wondering how that would affect those OpenJPA users that are okay with our current setup.  For example, other OpenJPA users could be using our jar file that does not contain all of the dependencies and just substitute their own copies (for example, the consumer is already using asm 3.2, so we&apos;re good to go).  Do users of the shade plugin end up providing both shaded and non-shaded versions of the jar files?  And, why is ASM the concern?  Wouldn&apos;t this same concern apply to other open-source dependencies that are specified (apache commons, derby, etc)?&lt;/p&gt;

&lt;p&gt;Just looking for some more background and justification for this type of change.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13253409" author="romain.manni-bucau" created="Fri, 13 Apr 2012 15:24:17 +0100"  >&lt;p&gt;the issue is mainly tomee uses it in common classloader of tomcat and any user can need to provide a different version of asm (for a spring webapp for instance). as this issue is common Geronimo shaded asm.&lt;/p&gt;

&lt;p&gt;the goal of this issue is to simply the dependency of openjpa on objectweb asm library.&lt;/p&gt;

&lt;p&gt;if a user depends on asm it will need to bring asm.&lt;/p&gt;

&lt;p&gt;Maybe i was not clear but the idea is simply to replace a dependency by another one for openjpa so the classical dependencies mecanisms are not broken.&lt;/p&gt;</comment>
                            <comment id="13256471" author="romain.manni-bucau" created="Wed, 18 Apr 2012 13:17:06 +0100"  >&lt;p&gt;FYI: patched openejb/tomee version: &lt;a href=&quot;http://svn.apache.org/repos/asf/openejb/trunk/patched-libraries/openjpa-all-asm-shaded/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/openejb/trunk/patched-libraries/openjpa-all-asm-shaded/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13256474" author="jean-louis.monteiro@atosorigin.com" created="Wed, 18 Apr 2012 13:19:56 +0100"  >&lt;p&gt;Well, IMHO the issue is larger than just TomEE. The point is that a lot of projects uses ASM (Hibernate, OpenJPA, Spring, CXF, etc ...). But almost all of them uses a different version which can lead to hard classloading issues to solve. I can remember pulling my hair out because of that.&lt;/p&gt;

&lt;p&gt;Even out TomEE, a webapp can face the same issue.&lt;/p&gt;

&lt;p&gt;If you could provide an ASM-shaded jar of OpenJPA, that could help solving such an issue.&lt;/p&gt;

&lt;p&gt;wdyt?&lt;/p&gt;</comment>
                            <comment id="13408602" author="struberg" created="Sat, 7 Jul 2012 09:23:05 +0100"  >&lt;p&gt;I&apos;ll try to take a look at this today.&lt;/p&gt;</comment>
                            <comment id="13432162" author="romain.manni-bucau" created="Thu, 9 Aug 2012 22:21:00 +0100"  >&lt;p&gt;a patch using reflection to be able to use asm, xbean-asm or spring-asm&lt;/p&gt;</comment>
                            <comment id="13432692" author="struberg" created="Fri, 10 Aug 2012 11:47:00 +0100"  >&lt;p&gt;slightly tweaked the patch and applied it to trunk&lt;/p&gt;

&lt;p&gt;Thanks to rmannibucau for providing the fix!&lt;/p&gt;</comment>
                            <comment id="13785504" author="curtisr7" created="Thu, 3 Oct 2013 21:28:55 +0100"  >&lt;p&gt;Hey guys, question about this one. I was doing some testing with Java 7 + ASM 4.0 and found that this change negatively affected my scenario. I believe that Kevin also mentioned this in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-2283&quot; title=&quot;Upgrade to ASM 4 dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-2283&quot;&gt;&lt;del&gt;OPENJPA-2283&lt;/del&gt;&lt;/a&gt;, but I don&apos;t know if you guys had the time to look through that info. The net of it is that if I change my source level from 1.6 -&amp;gt; 1.7 and the asm dependency to 4.0 I get the same exception as documented in 2283. If I revert AsmAdapter back to pre 1241719, everything works fine. &lt;/p&gt;

&lt;p&gt;I think this is something that should get addressed prior to cutting a 2.3.0 release.&lt;/p&gt;</comment>
                            <comment id="13790917" author="jira-bot" created="Wed, 9 Oct 2013 23:10:51 +0100"  >&lt;p&gt;Commit 1530808 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=struberg&quot; class=&quot;user-hover&quot; rel=&quot;struberg&quot;&gt;Mark Struberg&lt;/a&gt; in branch &apos;openjpa/branches/2.3.x&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1530808&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1530808&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-2283&quot; title=&quot;Upgrade to ASM 4 dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-2283&quot;&gt;&lt;del&gt;OPENJPA-2283&lt;/del&gt;&lt;/a&gt; use xbean-asm4-shaded ASM version as the dynamic handling doesn&apos;t work out&lt;/p&gt;

&lt;p&gt;This makes sure we always have a guaranteed ASM version 4 regardless what ASM a&lt;br/&gt;
user might add to the project. This also rolls back the dynamic ASM handling of&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-2171&quot; title=&quot;asm should be optional&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-2171&quot;&gt;&lt;del&gt;OPENJPA-2171&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13791493" author="curtisr7" created="Thu, 10 Oct 2013 14:37:23 +0100"  >&lt;p&gt;Hey Mark, re your previous commit... I know Tomee uses the xbean dependency, but that isn&apos;t true for all users of OpenJPA (ie: WebSphere). Could we do something smarter where we have a compile time dependency on plain asm AND xbean-asm... then at runtime we can load whichever implementation is available? I&apos;m thinking something along the lines of this patch.&lt;/p&gt;</comment>
                            <comment id="13791533" author="romain.manni-bucau" created="Thu, 10 Oct 2013 15:24:37 +0100"  >&lt;p&gt;@Rick: I think it is the case, if xbean shade is availabe let use it cause we control it otherwise just use what is available. The patch was just about the order as far as i understood.&lt;/p&gt;</comment>
                            <comment id="13791543" author="curtisr7" created="Thu, 10 Oct 2013 15:29:59 +0100"  >&lt;p&gt;Mark&apos;s latest commit reverted the magic involved with picking whatever implementation is available... and now has a hard runtime dependency on xbean-asm.&lt;/p&gt;</comment>
                            <comment id="13791549" author="romain.manni-bucau" created="Thu, 10 Oct 2013 15:37:07 +0100"  >&lt;p&gt;outch, sorry missed it. We should keep it even if trying asm4 xbean shade first for spring and cxf users at least.&lt;/p&gt;</comment>
                            <comment id="13791552" author="curtisr7" created="Thu, 10 Oct 2013 15:42:15 +0100"  >&lt;p&gt;I&apos;m just pointing out that we need to be careful with what we&apos;re doing. Not all users of OpenJPA want to use the xbean-asm implementation.&lt;/p&gt;</comment>
                            <comment id="13791586" author="struberg" created="Thu, 10 Oct 2013 16:26:44 +0100"  >&lt;p&gt;Rick, I fear there are not many options.&lt;br/&gt;
ASM is broken in regards to classloading and we had to fix this with overriding a very method.&lt;br/&gt;
And this can only be done via reflection if you create a subclass on the fly (using byte code enhancement).&lt;br/&gt;
This would be a chicken-egg problem and imo not worth the hassle.&lt;/p&gt;

&lt;p&gt;Please note that we do not make things worse: previously there has been a hardcoded dependency to ASM native where we do not know anything about the version, etc. It would be even possible that some projects would not use maven and then you have 2 different ASM libs on the classpath which will get you in deep troubles.&lt;/p&gt;

&lt;p&gt;By using our own well known shaded version from our very own xbean project (xbean is an Apache Geronimo sub project), we have at least a guarantee that we do not get into those problems. At the same time we avoid classpath clashes with other ASM versions by strictly using an own shaded package name (org.apache.xbean.asm4).&lt;/p&gt;

&lt;p&gt;The dynamic stuff was worth a try, but it turned out that a few bugs in ASM prevent us from doing so. &lt;/p&gt;</comment>
                            <comment id="13792003" author="curtisr7" created="Thu, 10 Oct 2013 22:29:08 +0100"  >&lt;p&gt;Mark &amp;#8211;&lt;/p&gt;

&lt;p&gt;Kevin and I talked this afternoon and I think we can swallow the xbean dependency in 2.3.x going forward. I need to think some more on it, but I think we&apos;re good to go for now.&lt;/p&gt;</comment>
                            <comment id="13792443" author="struberg" created="Fri, 11 Oct 2013 09:08:30 +0100"  >&lt;p&gt;great, txs! I &lt;br/&gt;
I think it helps to know that xbean-asm4-shaded is nothing else than the standard ASM jar but with it&apos;s packages shaded to a unique package name per major version (as those contain binary backward incompatibilities). It does not have any runtime dependency. Not to a geronimo project nor to anything else.&lt;/p&gt;</comment>
                            <comment id="13792652" author="curtisr7" created="Fri, 11 Oct 2013 15:24:55 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=struberg&quot; class=&quot;user-hover&quot; rel=&quot;struberg&quot;&gt;Mark Struberg&lt;/a&gt; &amp;#8211; I&apos;d like to see the new java.version property broke apart into something like java.class.version and java.testclass.version. This allows us to build OpenJPA with one version and run tests with another.&lt;/p&gt;</comment>
                            <comment id="13793428" author="struberg" created="Sat, 12 Oct 2013 18:54:45 +0100"  >&lt;p&gt;We can do this of course, and fill it with the java.version by default. But I&apos;m not quite sure what the benefit would be. For doing our release we will still use java6 for some time. And for running all the build in our CI the single property is fine enough. I have no objection to introduce it though - just like to verify if it&apos;s really useful before we have another property to maintain &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13794134" author="kwsutter" created="Mon, 14 Oct 2013 15:11:47 +0100"  >&lt;p&gt;Hi Mark,&lt;br/&gt;
Since Java 8 is just around the corner, we will have customers attempting to use Java 8 with their Entity classes.  And, they are bound to have issues...  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  So, it&apos;s nice to allow our testcases to be built with a different class version than what OpenJPA runtime is built with.  We had originally put this in due to the Java 6 / Java 7 requirement.  We might as well leave it for the Java 7 / Java 8 requirement.  Thanks.&lt;/p&gt;
</comment>
                            <comment id="13807771" author="struberg" created="Tue, 29 Oct 2013 08:18:10 +0000"  >&lt;p&gt;we finally settled on switching to xbean-asm4-shaded. This jar shades all the asm4 stuff into an own package org.apache.xbean.asm4 to reassure that we do not have any nasty classpath clashes.&lt;/p&gt;

&lt;p&gt;The properties to tweak the target JVM version have been implemented as well.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12720886">OPENJPA-2514</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12613049">OPENJPA-2283</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12540127" name="ASM.patch" size="6036" author="romain.manni-bucau" created="Thu, 9 Aug 2012 22:21:00 +0100"/>
                            <attachment id="12607806" name="kernel.patch" size="9536" author="curtisr7" created="Thu, 10 Oct 2013 14:37:23 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Apr 2012 14:15:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235659</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy4w1r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62353</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>