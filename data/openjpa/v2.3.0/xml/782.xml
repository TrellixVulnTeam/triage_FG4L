<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:36:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-782/OPENJPA-782.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-782] Support for collections of embeddables and basic types</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-782</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Regarding jpa 2.0 embeddable, suppose Entity A contains a collection of embeddables.&lt;br/&gt;
The collection of embeddable is stored in a separate table. @CollectionTable can be used to specify the table name, etc. If the @CollectionTable is not used, a default table name is used (see spec, p 272 ). &lt;/p&gt;

&lt;p&gt;The embeddable may contain the relation to EntityB in the following scenarios:&lt;br/&gt;
(1) If in the embeddable, there is:&lt;br/&gt;
      @ManyToOne&lt;br/&gt;
       private EnittyB entityB; &lt;/p&gt;

&lt;p&gt;       then the relation from EntityA to EntityB is OneToMany, &lt;br/&gt;
       and the relation from EntityB to EntityA is ManyToOne (Spec 2.5):&lt;br/&gt;
       @ManyToOne&lt;br/&gt;
       private EntityA entityA;&lt;/p&gt;

&lt;p&gt;(2) If in the embeddable, there is:&lt;br/&gt;
      @OneToOne&lt;br/&gt;
      private EntityB; &lt;/p&gt;

&lt;p&gt;      then the relation from EntityA to EntityB is OneToMany,&lt;br/&gt;
      and the relation from EntityB to EntityA is ManyToOne (Spec 2.5):&lt;br/&gt;
      @ManyToOne&lt;br/&gt;
      private EntityA entityA;&lt;/p&gt;

&lt;p&gt;(3) If in the embeddable, there is:&lt;br/&gt;
      @OneToOne(mappedBy = &quot;entityB&quot;)&lt;br/&gt;
       private EntityB&lt;br/&gt;
       The relation from EntityA to EnityB is OneToMany,&lt;br/&gt;
       and the relation from EntityB to EntityA is ManyToOne:&lt;br/&gt;
       @ManyToOne&lt;br/&gt;
       private EntityA entityA;       &lt;/p&gt;

&lt;p&gt;The relation to EntityB will be stored in the third table (the CollectionTable) so that it can be associated with the embeddable. However, we can not use &quot;mappedBy&quot; in the ManyToOne relation in EntityB. How to have bi-directional relation between EntityA and EntityB in these situations? Is it possible to have a bi-directional relation between these two entities when embeddable is involved as described above?&lt;/p&gt;

&lt;p&gt;In scenario (3), an explicit &quot;mappedBy&quot; is specified in the embeddable, so that the bi-directional relation between EntityA and EntityB will be stored in the EntityB table, but then how can we associate EntityB with the embeddable when EntityA is retrieved back as embeddable itself does not have identity?&lt;/p&gt;









</description>
                <environment></environment>
        <key id="12409163">OPENJPA-782</key>
            <summary>Support for collections of embeddables and basic types</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12409559">OPENJPA-800</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="faywang">Fay Wang</assignee>
                                    <reporter username="faywang">Fay Wang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Nov 2008 23:56:29 +0000</created>
                <updated>Tue, 9 Mar 2010 18:31:03 +0000</updated>
                            <resolved>Thu, 18 Dec 2008 19:28:50 +0000</resolved>
                                                    <fixVersion>2.0.0-M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12650718" author="faywang" created="Tue, 25 Nov 2008 20:14:51 +0000"  >&lt;p&gt;Another piece of information: in Spec 2.6: &quot;The embeddable class must be on the owning side of such a relation and the relationship must be mapped by a foreign key mapping&quot;. &lt;/p&gt;</comment>
                            <comment id="12653946" author="faywang" created="Fri, 5 Dec 2008 22:23:37 +0000"  >&lt;p&gt;The patch includes:&lt;br/&gt;
(1) new JPA2.0 annotations: ElementCollection and CollectionTable. &lt;br/&gt;
(2) fix of JIRA-777 &lt;br/&gt;
(3) fix to support the scenario when an entity contains a collection of embeddables, and the embeddable has a nested embeddable in it. Currently, openjpa only allows basic types and toOne relation in an embeddable element.&lt;/p&gt;</comment>
                            <comment id="12655734" author="faywang" created="Thu, 11 Dec 2008 18:47:12 +0000"  >&lt;p&gt;ElementCollection/CollectionTable annotation and orm support for embeddables and basic types are committed to trunk r-724437 and r-725770. Test case for orm will be checked in later when the orm xml schema is finalized. &lt;/p&gt;</comment>
                            <comment id="12657861" author="faywang" created="Thu, 18 Dec 2008 19:28:49 +0000"  >&lt;p&gt;In this iteration, the following are supported:&lt;br/&gt;
1) nested embeddables: spec 2.5 &lt;br/&gt;
2) collections of embeddables and basic types: spec 2.2, 2.6&lt;br/&gt;
3) relationships within embeddables: spec 2.5, 10.1.22, 10.1.24, 10.1.25, 10.1.34 &lt;br/&gt;
4) @CollectionTable annotation and XML (Parser/Serializer): spec 10.1.7&lt;br/&gt;
5) @ElementCollection annotation and XML (Parser/Serializer): spec 10.1.11&lt;/p&gt;

&lt;p&gt;Incmplete and pending issues:&lt;br/&gt;
(1)  2.7.2 &lt;br/&gt;
(2) 10.1.35 (OrderBy for embeddable) &lt;br/&gt;
(3)  JIRA-793&lt;br/&gt;
(4) processing/serialization for version 1 and version 2 of the ORM/PersistenceUnit XML Schema.&lt;/p&gt;</comment>
                            <comment id="12681095" author="faywang" created="Wed, 11 Mar 2009 23:42:46 +0000"  >&lt;p&gt;Spec 2.5 Embeddable Classes (p 34):&lt;/p&gt;

&lt;p&gt;&quot;Since instances of embeddable classes themselves have no persistent identity, the relationship from the referenced entity is to the entity that contains the embeddable instance(s) and not to the embeddable itself.&quot;&lt;/p&gt;

&lt;p&gt;Spec 10.1.26 ManyToOne Annotation (p. 310):&lt;/p&gt;

&lt;p&gt;&quot;The ManyToOne annotation may be used within an embeddable class to specify a relationship from the embeddable class to an entity class.&quot;&lt;/p&gt;

&lt;p&gt;Spec 10.1.35 OneToOne Annotation (p.323):&lt;/p&gt;

&lt;p&gt;&quot;The OneToOne annotation may be used within an embeddable class to specify a relationship from the embeddable class to an entity class. &quot;&lt;/p&gt;

&lt;p&gt;Case (1):&lt;/p&gt;

&lt;p&gt;EntityA&lt;br/&gt;
======&lt;br/&gt;
private Collection&amp;lt;EmbedA&amp;gt; embedAs;&lt;/p&gt;

&lt;p&gt;EmbedA:&lt;br/&gt;
========&lt;br/&gt;
@ManyToOne&lt;br/&gt;
EntityB entityB;&lt;/p&gt;

&lt;p&gt;The values for EntityA, EmbedA, EntityB can be:&lt;/p&gt;

&lt;p&gt;EntityA1 - EmbedA1 - EntityB1&lt;br/&gt;
                   EmbedA2 - EntityB1&lt;br/&gt;
                   EmbedA3 - EntityB2&lt;br/&gt;
                   EmbedA4 - EntityB2&lt;/p&gt;

&lt;p&gt;The implied relation from EntityA to EntityB is therefore OneToMany. A bi-directional relation between EntityA and EntityB (spec p.40) suggests that the relation from EntityB to EntityA is ManyToOne.&lt;/p&gt;

&lt;p&gt;EntityB:&lt;br/&gt;
=======&lt;br/&gt;
@ManyToOne&lt;br/&gt;
private EntityA entityA;&lt;/p&gt;


&lt;p&gt;Case(2):&lt;/p&gt;

&lt;p&gt;EntityA&lt;br/&gt;
======&lt;br/&gt;
private Collection&amp;lt;EmbedA&amp;gt; embedAs;&lt;/p&gt;

&lt;p&gt;EmbedA:&lt;br/&gt;
========&lt;br/&gt;
@OneToOne&lt;br/&gt;
EntityB entityB;&lt;/p&gt;


&lt;p&gt;The values for EntityA, EmbedA, EntityB can be:&lt;/p&gt;

&lt;p&gt;EntityA1 - EmbedA1 - EntityB1&lt;br/&gt;
                   EmbedA2 - EntityB2&lt;br/&gt;
                   EmbedA3 - EntityB3&lt;br/&gt;
                   EmbedA4 - EntityB4&lt;/p&gt;

&lt;p&gt;The implied relation from EntityA to EntityB is therefore OneToMany. A bi-directional relation between EntityA and EntityB (spec p.40) suggests that the relation from EntityB to EntityA is ManyToOne.&lt;/p&gt;

&lt;p&gt;EntityB:&lt;br/&gt;
=======&lt;br/&gt;
@ManyToOne&lt;br/&gt;
private EntityA entityA;&lt;/p&gt;


&lt;p&gt;In both cases, EntityA should be the owning side (as it contains EmbedA). In order to specify bi-directional relation, the mappedBy annotation should be specified in EntityB, However, EntityB has ManyToOne relation, which disallows &quot;mappedBy&quot; to be specified. Therefore, IMO, it is not possible to specify bi-directional relation when a collection embeddables is involved. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12408693">OPENJPA-773</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12395452" name="openjpa-782-testcase.patch" size="57842" author="faywang" created="Fri, 5 Dec 2008 22:23:37 +0000"/>
                            <attachment id="12395451" name="openjpa-782.patch" size="19989" author="faywang" created="Fri, 5 Dec 2008 22:23:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161088</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt4xz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>