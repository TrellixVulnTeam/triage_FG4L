<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:40:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-968/OPENJPA-968.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-968] Change in default detach() behavior for JPA 2.0</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-968</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;JPA 2.0 specification has introduced a detach() method in EntityManager. OpenJPA already has a detach() method prior to JPA 2.0. There are several major differences between the new method introduced in JPA 2.0 spec versus existing OpenJPA detach method.&lt;/p&gt;

&lt;p&gt;1. The method signatures are different&lt;br/&gt;
       JPA 2.0:              void detach(Object entity);&lt;br/&gt;
       OpenJPA 1.x :   &amp;lt;T&amp;gt; T detach(T entity);&lt;/p&gt;

&lt;p&gt;2. This signature difference also points to a basic difference in behavior. OpenJPA detach() creates a copy of the given input entity and returns it. While JPA 2.0 specifies in-place detach and hence returns a void.&lt;/p&gt;

&lt;p&gt;3. The other basic difference is OpenJPA detach does not remove the input entity from the persistence context. While JPA 2.0 specifies that the input entity be removed from the context.&lt;/p&gt;

&lt;p&gt;4. OpenJPA detach flushes a dirty instance before detaching. This implicit flush behavior can be configured but flushing is the default.&lt;/p&gt;

&lt;p&gt;5. OpenJPA detach() provides several options on which related instances will become detached. They are &apos;loaded&apos;, &apos;fetch-group&apos; and &apos;all&apos;. With &apos;loaded&apos; being the default.&lt;br/&gt;
    Whereas JPA 2.0 introduces a DEATCH  cascade type and specified that the relationships that are cascaded with DETACH or ALL be traversed during detachment.&lt;br/&gt;
   It is not clear from the spec, however,&lt;br/&gt;
   a)  whether an unloaded relation which has DETACH cascade will get loaded as a side-effect of detach(). &lt;br/&gt;
   b) whether a relation that is currently loaded but not cascaded for DETACH will be included in the detached graph. &lt;br/&gt;
   If answer to (a) is no and answer to (b) is yes, (which the spec does seems to suggest) then we can effectively continue with &apos;loaded&apos; as the default behavior. &lt;/p&gt;


&lt;p&gt;To accommodate these differences following actions are proposed:&lt;/p&gt;

&lt;p&gt;A1. Request JPA Spec committee to change the API method in JPA 2.0 to OpenJPA detach() method signature. If that request is not met, then change OpenJPA API according to JPA 2.0 spec. It will break backward compatibility of OpenJPAEntityManager API. There seems to be no way out.&lt;br/&gt;
A2. The default behavior will change in the following way&lt;br/&gt;
             a) the detach will be in-place&lt;br/&gt;
             b) no implict flush of dirty instances&lt;br/&gt;
             c) based on condition, how JPA 2.0 spec clarifies the DETACH cascade and loaded fields for inclusion in the detached graph, change &apos;loaded&apos; default to &apos;cascade&apos; default. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12416434">OPENJPA-968</key>
            <summary>Change in default detach() behavior for JPA 2.0</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ppoddar@apache.org">Pinaki Poddar</assignee>
                                    <reporter username="ppoddar@apache.org">Pinaki Poddar</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Mar 2009 13:18:26 +0000</created>
                <updated>Thu, 4 Mar 2010 21:47:24 +0000</updated>
                            <resolved>Thu, 27 Aug 2009 17:58:05 +0100</resolved>
                                    <version>2.0.0-M2</version>
                                    <fixVersion>2.0.0-M3</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12680187" author="clr" created="Mon, 9 Mar 2009 16:15:55 +0000"  >&lt;p&gt;I&apos;d suggest that OpenJPA implement both detach() according to the JPA rules and rename the original OpenJPA detach() to detachCopy(). Preserve the original rules for detachCopy and for detach, follow whatever rules the JPA expert group decides on.&lt;/p&gt;

&lt;p&gt;We can do this incompatible change with a major version, so it&apos;s unfortunate but not a disaster. Users who fail to read the release notes will discover that their applications don&apos;t compile and don&apos;t run, so it&apos;s not a silent failure.&lt;/p&gt;

&lt;p&gt;Note that in JDO, the explicit detach method is named detachCopy, which has the same semantics as OpenJPA detach. The decision was made to make it explicit that the detachCopy method creates a copy of the instance in the context and leaves the original instance intact.&lt;/p&gt;

&lt;p&gt;By the way, there was a lot of discussion in the JDO expert group about whether explicit detach should make a copy or not, and it was pretty clear at the end that detach in place is tricky, if not dangerous. &lt;/p&gt;
</comment>
                            <comment id="12681397" author="dianner" created="Thu, 12 Mar 2009 17:06:55 +0000"  >&lt;p&gt;Pinaki - I think I&apos;ve discovered a problem with one of the changes you made, in the ValueMetaDataImpl, with the new getCascadeDetach() method. With the way you did it, the result returns CASCADE_IMMEDIATE for all simple types (non-Entities). This doesn&apos;t make sense and is also not done for the other cascade types (persist, attach, etc.). I&apos;ve updated your test case with some print statements to confirm this. I&apos;m including an updated ValueMetaDataImpl and TestFlush in this patch. I copied the additional code in getCascadeDetach() from getCascadeAttach(). But, there are also differences in the other getCascade.... methods, so I&apos;m not entirely sure I&apos;m doing the right thing. So, please look at this and comment.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12426020">OPENJPA-1097</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12402060" name="problemPatch.txt" size="2050" author="dianner" created="Thu, 12 Mar 2009 17:06:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 9 Mar 2009 16:15:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161265</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyssh3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201961</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>