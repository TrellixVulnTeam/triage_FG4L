<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:44:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-2068/OPENJPA-2068.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-2068] Improve performance of java.util.Calendar fields</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-2068</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;While doing some performance testing, I&apos;ve found that we could improve the performance of loading Entities that have java.util.Calendar fields. When loading the data into a Calendar field, we actually create two Calendar instances per field. Normally creating an extra instance wouldn&apos;t be that big of a deal, but since creating a Calendar is very expensive I would like to remove creation of the extra instance.&lt;/p&gt;

&lt;p&gt;The call flow is something like this:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;em.find(...) // find an Entity which has a calendar field&lt;br/&gt;
... execute query, processing result set...&lt;/li&gt;
	&lt;li&gt;DBDictionary.getCalendar(ResultSet,...) // Here we pull a Timestamp out of the result set, and create an unproxied Calendar instance.&lt;br/&gt;
...&lt;br/&gt;
// now while trying to store the Calendar into the Entity instance, we find that this type needs to be proxied. &lt;br/&gt;
SingleFieldManager.proxy(...) // Here we create the second Calendar instance, which is a proxied calendar&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d like to add a configuration property to DBDictionary that tells the runtime to always create proxied calendar instances. This would remove the creation of the initial un-proxied instance. For a large majority of application which use Calendars this would help. &lt;/p&gt;

&lt;p&gt;As always, there is a catch to this approach. If you were to execute a query such as : em.createQuery(&quot;SELECT c.myCal FROM CalendarEntity c where c.id=:id&quot;, MyCalendar.class), you would get back a proxied instance. This shouldn&apos;t be that big of a deal... but still a bit of a quirk.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529922">OPENJPA-2068</key>
            <summary>Improve performance of java.util.Calendar fields</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="curtisr7">Rick Curtis</assignee>
                                    <reporter username="curtisr7">Rick Curtis</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Nov 2011 18:32:18 +0000</created>
                <updated>Thu, 2 Feb 2012 17:15:27 +0000</updated>
                            <resolved>Thu, 19 Jan 2012 15:35:07 +0000</resolved>
                                    <version>2.2.0</version>
                                    <fixVersion>2.2.0</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13142452" author="curtisr7" created="Wed, 2 Nov 2011 19:45:43 +0000"  >&lt;p&gt;I&apos;m attaching a patch with a bulk of the changes. Obviously this isn&apos;t complete, but I want to get something out here.&lt;/p&gt;</comment>
                            <comment id="13166293" author="curtisr7" created="Fri, 9 Dec 2011 16:42:13 +0000"  >&lt;p&gt;The code I committed doesn&apos;t have the quirk where you&apos;ll get a proxied instance when you issue a query where you only are selecting a Calendar field. Also, this behavior isn&apos;t configurable as it is transparent.&lt;/p&gt;</comment>
                            <comment id="13188501" author="curtisr7" created="Wed, 18 Jan 2012 15:31:52 +0000"  >&lt;p&gt;Reopening this issue as it introduced a new bug that was uncovered through some internal testing.&lt;/p&gt;</comment>
                            <comment id="13189160" author="curtisr7" created="Thu, 19 Jan 2012 15:32:46 +0000"  >&lt;p&gt;The bug we hit resulted in the following exception:&lt;/p&gt;

&lt;p&gt;&amp;lt;openjpa-2.2.0-SNAPSHOT-r422266:1232415 nonfatal user error&amp;gt; org.apache.openjpa.persistence.InvalidStateException: This container was loaded in large result set field &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;x&amp;#93;&lt;/span&gt;.entities.LrsEntityA.entitybs&quot;, but has been removed from its owning field. Therefore, it can no longer be used.&lt;br/&gt;
at org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.assertOwner(LRSProxyCollection.java:167)&lt;br/&gt;
at org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.itr(LRSProxyCollection.java:127)&lt;br/&gt;
at org.apache.openjpa.util.AbstractLRSProxyCollection.iterator(AbstractLRSProxyCollection.java:251)&lt;br/&gt;
at org.apache.openjpa.util.ProxyCollections.addAll(ProxyCollections.java:142)&lt;br/&gt;
at org.apache.openjpa.util.java$util$ArrayList$proxy.addAll(Unknown Source)&lt;br/&gt;
at org.apache.openjpa.kernel.SingleFieldManager.proxy(SingleFieldManager.java:112)&lt;br/&gt;
at org.apache.openjpa.kernel.StateManagerImpl.storeObjectField(StateManagerImpl.java:2602)&lt;br/&gt;
at org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.load(StoreCollectionFieldStrategy.java:524)&lt;br/&gt;
at org.apache.openjpa.jdbc.meta.FieldMapping.load(FieldMapping.java:934)&lt;br/&gt;
at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(JDBCStoreManager.java:664)&lt;br/&gt;
at com.ibm.ws.persistence.jdbc.kernel.WsJpaJDBCStoreManager.load(WsJpaJDBCStoreManager.java:130)&lt;br/&gt;
at org.apache.openjpa.kernel.DelegatingStoreManager.load(DelegatingStoreManager.java:117)&lt;br/&gt;
at org.apache.openjpa.kernel.ROPStoreManager.load(ROPStoreManager.java:78)&lt;br/&gt;
at org.apache.openjpa.kernel.StateManagerImpl.loadFields(StateManagerImpl.java:3072)&lt;br/&gt;
at org.apache.openjpa.kernel.StateManagerImpl.loadField(StateManagerImpl.java:3149)&lt;br/&gt;
at org.apache.openjpa.kernel.StateManagerImpl.beforeAccessField(StateManagerImpl.java:1613)&lt;br/&gt;
at org.apache.openjpa.kernel.StateManagerImpl.accessingField(StateManagerImpl.java:1598)&lt;br/&gt;
at &lt;span class=&quot;error&quot;&gt;&amp;#91;x&amp;#93;&lt;/span&gt;.entities.LrsEntityA.pcGetentitybs(LrsEntityA.java)&lt;br/&gt;
at &lt;span class=&quot;error&quot;&gt;&amp;#91;x&amp;#93;&lt;/span&gt;.entities.LrsEntityA.getEntitybs(LrsEntityA.java:49)&lt;/p&gt;
</comment>
                            <comment id="13189161" author="curtisr7" created="Thu, 19 Jan 2012 15:35:07 +0000"  >&lt;p&gt;Committed testcase and code fix to trunk.&lt;/p&gt;

&lt;p&gt;Resolving issue.&lt;/p&gt;</comment>
                            <comment id="13198989" author="allee8285" created="Thu, 2 Feb 2012 17:15:27 +0000"  >&lt;p&gt;Close issue in preparation for 2.2.0 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12502019" name="OPENJPA-2068.patch" size="5946" author="curtisr7" created="Wed, 2 Nov 2011 19:45:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Feb 2012 17:15:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>215781</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7pvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>289162</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>