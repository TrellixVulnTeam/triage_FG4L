<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:30:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-2040/OPENJPA-2040.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-2040] Problems when using &quot;openjpa.MetaDataFactory&quot; Property</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-2040</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;I want to overwrite the MetaDataFactory like described here: &lt;br/&gt;
&lt;a href=&quot;http://openjpa.apache.org/builds/1.0.2/apache-openjpa-1.0.2/docs/manual/ref_guide_meta.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openjpa.apache.org/builds/1.0.2/apache-openjpa-1.0.2/docs/manual/ref_guide_meta.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But it turned out it doesn&apos;t work. I managed to develop a test scenario &lt;br/&gt;
which easily produces the behaviour I encountered. &lt;/p&gt;

&lt;p&gt;What &lt;em&gt;does&lt;/em&gt; work is the following: &lt;/p&gt;

&lt;p&gt;Adding &lt;br/&gt;
&amp;lt;property name=&quot;openjpa.MetaDataFactory&quot; value=&quot;jpa&quot;/&amp;gt; &lt;br/&gt;
to persistence.xml. &lt;/p&gt;

&lt;p&gt;When setting this property my junit test (persisting a simple association, &lt;br/&gt;
using @Column Annotation to use differing column names) does work. &lt;/p&gt;


&lt;p&gt;According to the document above, this property Tag should be equivalent to &lt;br/&gt;
the setting above: &lt;/p&gt;

&lt;p&gt;&amp;lt;property name=&quot;openjpa.MetaDataFactory&quot; &lt;br/&gt;
value=&quot;org.apache.openjpa.persistence.PersistenceMetaDataFactory&quot;/&amp;gt; &lt;/p&gt;

&lt;p&gt;But when using this configuration my junit test fails. The differing &lt;br/&gt;
Column Names set by the @Column.name Attribute are no longer found. &lt;br/&gt;
Instead the Java Attribute-Names are used in the SQL. &lt;/p&gt;

&lt;p&gt;My problem is, that I want to implement a custom MetaDataFactory and this &lt;br/&gt;
doesn&apos;t work either (which is expected, because I extend &lt;br/&gt;
PersistenceMetaDataFactory). &lt;br/&gt;
Using PersistenceMappingFactory instead doesn&apos;t work either.&lt;/p&gt;

&lt;p&gt;For detailed information please see the following discussion:&lt;br/&gt;
&lt;a href=&quot;http://openjpa.208410.n2.nabble.com/Problems-when-using-quot-openjpa-MetaDataFactory-quot-Property-td6671704.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openjpa.208410.n2.nabble.com/Problems-when-using-quot-openjpa-MetaDataFactory-quot-Property-td6671704.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12519099">OPENJPA-2040</key>
            <summary>Problems when using &quot;openjpa.MetaDataFactory&quot; Property</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="mikedd">Michael Dick</assignee>
                                    <reporter username="marcel.urbanek">Marcel Urbanek</reporter>
                        <labels>
                            <label>MetaDataFactory</label>
                            <label>PersistenceMetaDataFactory</label>
                            <label>openjpa.MetaDataFactory</label>
                    </labels>
                <created>Wed, 17 Aug 2011 12:56:46 +0100</created>
                <updated>Sat, 3 Jan 2015 19:46:28 +0000</updated>
                                            <version>2.1.1</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13087131" author="mikedd" created="Thu, 18 Aug 2011 18:28:50 +0100"  >&lt;p&gt;The problem here lies in the MetaDataPlusMappingFactory. When the MetaData and Mapping factories are the same class, we&apos;ll use a single instance and let it resolve all of the mappings. &lt;/p&gt;

&lt;p&gt;If the factories are not the same class the two factories are set to strictly do Mapping or MetaData resolution respectively. This does not work if the user has extended the PersistenceMappingFactory for example. Relaxing the requirement to strictly do Mapping or MetaData resolution allows a user defined type to be used. &lt;/p&gt;

&lt;p&gt;The committed changes are a first pass at this problem, and allow the user to determine whether the factories should strictly process Mapping info or MetaData. The behavior is configurable by a compatibility setting : openjpa.Compatibility=metaFactoriesAreStrict=true|false. A follow on fix would be to update the MetaDataPlusMappingFactory plugin to detect such an extension, or to update our PersistenceMapping factory to better handle subclassing. &lt;/p&gt;

&lt;p&gt;Marcel, the changes will be available in the next nightly 2.2.0-SNAPSHOT (anything after revision 1159318 will work). Please give that build a try and let us know if it resolves the problem for you. &lt;/p&gt;</comment>
                            <comment id="13088579" author="marcel.urbanek" created="Mon, 22 Aug 2011 10:07:23 +0100"  >&lt;p&gt;Hi, &lt;br/&gt;
I tested with &quot;revision.number=422266:1159795&quot;&lt;/p&gt;

&lt;p&gt;Setting openjpa.MetaDataFactory to &quot;org.apache.openjpa.persistence.PersistenceMetaDataFactory&quot; still produces an invalid SQL:&lt;/p&gt;

&lt;p&gt;INSERT INTO i01w90.Group (groupName, groupNumber, validFromDate, remarkText, date, time, user) VALUES (?, ?, ?, ?, ?, ?, ?) &lt;span class=&quot;error&quot;&gt;&amp;#91;params=?, ?, ?, ?, ?, ?, ?&amp;#93;&lt;/span&gt;}&lt;/p&gt;

&lt;p&gt;Setting openjpa.MetaDataFactory to &quot;org.apache.openjpa.persistence.jdbc.PersistenceMappingFactory&quot; now leads to following exception:&lt;/p&gt;

&lt;p&gt;java.lang.ClassCastException: org.apache.openjpa.conf.OpenJPAConfigurationImpl cannot be cast to org.apache.openjpa.jdbc.conf.JDBCConfiguration&lt;br/&gt;
	at org.apache.openjpa.persistence.jdbc.PersistenceMappingFactory.newAnnotationParser(PersistenceMappingFactory.java:42)&lt;/p&gt;</comment>
                            <comment id="13089768" author="mikedd" created="Tue, 23 Aug 2011 22:14:56 +0100"  >&lt;p&gt;I&apos;m sorry, I didn&apos;t explain well enough in the previous update. &lt;/p&gt;

&lt;p&gt;Making the MetaDataFactory user definable is a bigger change - there&apos;s a lot of infrastructure code that needs to change. You should be able to use something like this though : &lt;br/&gt;
    &amp;lt;property name=&quot;openjpa.jdbc.MappingFactory&quot; value=&quot;mikedd.MyMappingFactory&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;Assuming your MappingFactory extends PersistenceMappingFactory, you should at least get past the problem with a bad column name. I didn&apos;t try to replicate what you need to do with the MappingFactory though. &lt;/p&gt;

&lt;p&gt;Sorry for not explaining what I meant. &lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 18 Aug 2011 17:28:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2286</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxu553:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>323</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>