<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:34:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-2227/OPENJPA-2227.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-2227] OpenJPA doesn&apos;t find custom SequenceGenerators</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-2227</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;I&apos;m trying to use a custom SequenceGenerator within an enterprise application using openJPA (providing by WebSphere).&lt;/p&gt;

&lt;p&gt;When defining a custom Sequence a ClassNotFoundException (for the Sequence class) will be thrown when trying to insert data into the database.&lt;/p&gt;

&lt;p&gt;ExampleConfiguration:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Entity
@SequenceGenerator(name=&lt;span class=&quot;code-quote&quot;&gt;&quot;MySequence&quot;&lt;/span&gt;, sequenceName=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.openjpa.generator.UIDGenerator()&quot;&lt;/span&gt;)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Customer &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Serializable {
    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=&lt;span class=&quot;code-quote&quot;&gt;&quot;MySequence&quot;&lt;/span&gt;)
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; id;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The example will produce the stacktrace attached.&lt;/p&gt;

&lt;p&gt;It seems that the wrong class loader is used to instantiate the custom sequence class. A very similar issue seems to be: &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-758&quot; title=&quot;OpenJPA doesn&amp;#39;t find ValueHandlers with an applicable class loader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-758&quot;&gt;&lt;del&gt;OPENJPA-758&lt;/del&gt;&lt;/a&gt;. With JavaSE (JUnit) all is working fine, but after deploying into WAS the Exception will occur.&lt;/p&gt;

&lt;p&gt;I think within the method SequenceMetaData.instantiate(Classloader envLoader) the JavaTypes.classForName() -method with parameter mustExist=false should be used instead of the pure Class.forName() call. But I&apos;m not sure about the Metadata-parameter needed for this method call.&lt;/p&gt;</description>
                <environment>WebSphere Application Server V8.0 and V8.5</environment>
        <key id="12598075">OPENJPA-2227</key>
            <summary>OpenJPA doesn&apos;t find custom SequenceGenerators</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fyrewyld">Jody Grassel</assignee>
                                    <reporter username="jensleisenberg">Jens Leisenberg</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Jul 2012 20:24:05 +0100</created>
                <updated>Fri, 24 Aug 2012 01:21:12 +0100</updated>
                            <resolved>Fri, 24 Aug 2012 01:20:59 +0100</resolved>
                                    <version>2.0.0</version>
                    <version>2.1.0</version>
                    <version>2.2.0</version>
                                    <fixVersion>2.1.2</fixVersion>
                    <fixVersion>2.2.1</fixVersion>
                    <fixVersion>2.3.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13419586" author="fyrewyld" created="Fri, 20 Jul 2012 22:27:08 +0100"  >&lt;p&gt;This problem doesn&apos;t show up in the JSE (which likely applies to JUnits) environment because the application ClassLoader would be the ClassLoader responsible for loading both the OpenJPA and JUnit/JSE application classes.  In a JEE environment, you have a hierarchy of ClassLoaders - in the WebSphere case, OpenJPA would be loaded by one of the OSGi ClassLoaders, application code lives in Application ClassLoaders which are children of the OSGi ClassLoaders.&lt;/p&gt;

&lt;p&gt;When SequenceMetaData initializes, it attempts to perform a Class.forName() lookup for the class denoted in the sequenceName entry.  However, it scopes the lookup to the ClassLoader responsible for loading the OpenJPA classes, so it would never be able to check child ClassLoaders for application-custom SequenceGenerators.&lt;/p&gt;

&lt;p&gt;Curiously, the SequenceMetaData.instantiate() method takes a ClassLoader envLoader argument (which, tracking back a couple frames in the stack trace, originates with a call to StoreContext.getClassloader() &amp;#8211; which returns the Thread Context ClassLoader that was current when the StoreContext was created.)  A modification to instantiate() to first perform the original Class.forName() lookup, falling back to a Class.forName() lookup using envLoader if the first call results in a ClassNotFoundException seems to resolve the issue in my test environment.&lt;/p&gt;</comment>
                            <comment id="13425807" author="fyrewyld" created="Tue, 31 Jul 2012 15:34:11 +0100"  >&lt;p&gt;Uploaded copy of the patch for 2.2.x, as integration for this branch needs to be delayed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12535725" name="ClassNotFoundException.txt" size="3380" author="jensleisenberg" created="Mon, 9 Jul 2012 20:24:40 +0100"/>
                            <attachment id="12538556" name="OPENJPA-2227-2.2.x.patch" size="1513" author="fyrewyld" created="Tue, 31 Jul 2012 15:34:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Jul 2012 21:27:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>240139</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxus3r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3372</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>