<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:43:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-35/OPENJPA-35.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-35] In-memory Delete operation fails with active DataCache</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-35</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Delete through query such as &lt;br/&gt;
		Query query = em.createQuery(&quot;DELETE FROM Node n&quot;);&lt;br/&gt;
		query.executeUpdate();&lt;/p&gt;

&lt;p&gt;fails with following exception (only when DataCache is active)&lt;br/&gt;
Exception in thread &quot;main&quot; &amp;lt;4|false|0.0.0&amp;gt; org.apache.openjpa.persistence.ArgumentException: org.apache.openjpa.datacache.QueryCacheStoreQuery&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.deleteInMemory(QueryImpl.java:1029)&lt;br/&gt;
	at org.apache.openjpa.kernel.ExpressionStoreQuery$DataStoreExecutor.executeDelete(ExpressionStoreQuery.java:665)&lt;br/&gt;
	at org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor.executeDelete(QueryCacheStoreQuery.java:348)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.delete(QueryImpl.java:1012)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:768)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.deleteAll(QueryImpl.java:831)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.deleteAll(QueryImpl.java:827)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.deleteAll(DelegatingQuery.java:544)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.executeUpdate(QueryImpl.java:299)&lt;br/&gt;
	at control.Test.clear(Test.java:87)&lt;br/&gt;
	at control.Test.run(Test.java:37)&lt;br/&gt;
	at control.Test.main(Test.java:178)&lt;br/&gt;
Caused by: java.lang.ClassCastException: org.apache.openjpa.datacache.QueryCacheStoreQuery&lt;br/&gt;
	at org.apache.openjpa.kernel.ExpressionStoreQuery$DataStoreExecutor.executeQuery(ExpressionStoreQuery.java:651)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:949)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.deleteInMemory(QueryImpl.java:1018)&lt;br/&gt;
	... 11 more&lt;/p&gt;</description>
                <environment>Only happens when DataCache is active&lt;br/&gt;
			&amp;lt;property name=&amp;quot;openjpa.DataCache&amp;quot;                value=&amp;quot;true&amp;quot;/&amp;gt;&lt;br/&gt;
			&amp;lt;property name=&amp;quot;openjpa.RemoteCommitProvider&amp;quot;     value=&amp;quot;sjvm&amp;quot;/&amp;gt;&lt;br/&gt;
</environment>
        <key id="12348773">OPENJPA-35</key>
            <summary>In-memory Delete operation fails with active DataCache</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ppoddar@apache.org">Pinaki Poddar</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Aug 2006 00:36:05 +0100</created>
                <updated>Tue, 9 Mar 2010 18:32:27 +0000</updated>
                            <resolved>Sat, 10 Mar 2007 15:18:10 +0000</resolved>
                                    <version>0.9.0</version>
                    <version>0.9.6</version>
                                    <fixVersion>0.9.7</fixVersion>
                                    <component>datacache</component>
                    <component>query</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12476719" author="ppoddar@apache.org" created="Wed, 28 Feb 2007 21:34:03 +0000"  >&lt;p&gt;I am not seeing this particular error anymore &amp;#8211; but I am seeing something else that does not appear right. &lt;/p&gt;

&lt;p&gt;a) When datacache is active, even after an instance is deleted via query, the entitymanager is committed and cleared, EntityManager find() finds the instance &amp;#8211; not from its L1 cache but from its L2 cache.&lt;/p&gt;

&lt;p&gt;If this is a known limitation &amp;#8211; it should be documented (could not find it in OpenJPA User&apos;s guide)&lt;/p&gt;

&lt;p&gt;b) When openjpa.datacache=false, the application can still obtain a non-null reference to StoreCache, however its delegate is null.&lt;br/&gt;
What should OpenJPAEntityManagerFactory.getStoreCache() return when  openjpa.datacache=false ?&lt;/p&gt;

&lt;p&gt;c) delete directly i.e. em.remove() does the &apos;right&apos; thing i.e. subsequent em.find() returns null. &lt;/p&gt;

&lt;p&gt;d) Setting &quot;openjpa.BrokerImpl&quot; to &quot;EvictFromDataCache=true&quot; did not change the behavior (nor was expected)&lt;/p&gt;

&lt;p&gt;The observations are based on the attached TestCase&lt;/p&gt;</comment>
                            <comment id="12476721" author="ppoddar@apache.org" created="Wed, 28 Feb 2007 21:35:17 +0000"  >&lt;p&gt;Attached test case shows that after deleting via query, L2 cache still maintains a copy and em.find() finds the instance. &lt;/p&gt;</comment>
                            <comment id="12476732" author="pcl" created="Wed, 28 Feb 2007 21:58:15 +0000"  >&lt;p&gt;What happens if the user modifies the object or if the user obtains a read lock on the instance?&lt;/p&gt;</comment>
                            <comment id="12476769" author="ppoddar@apache.org" created="Wed, 28 Feb 2007 23:50:56 +0000"  >&lt;p&gt;Added a trace output of the test case that is failing. &lt;/p&gt;

&lt;p&gt;shows that the deleted instance (PObject-4501) is in L2 Cache.&lt;/p&gt;

&lt;p&gt;Please note the instance was locked and modified &lt;b&gt;after&lt;/b&gt; delete by query (as we still has its reference).&lt;br/&gt;
Does that give the cache a chance to heal?&lt;/p&gt;

&lt;p&gt;Please note that PObject-4501 has a DetachedStateManager when we lock/modify it after delete.&lt;/p&gt;</comment>
                            <comment id="12476773" author="pcl" created="Wed, 28 Feb 2007 23:58:45 +0000"  >&lt;p&gt;I haven&apos;t looked at your test, but I&apos;m guessing that since it has a DetachedStateManager, it&apos;s the same instance that you had been using earlier.&lt;/p&gt;

&lt;p&gt;I would expect that if you deleted some instances with a bulk delete, then looked up an instance that had been deleted via a data cache hit, then tried to do anything involving a lock with that instance, you&apos;d get a failure at commit time (assuming optimistic transactions and a @Version column).&lt;/p&gt;</comment>
                            <comment id="12476774" author="pcl" created="Wed, 28 Feb 2007 23:59:41 +0000"  >&lt;p&gt;... to finish that thought, I&apos;d then expect that the instance would get cleared from the cache due to the optimistic lock failure, and a second transaction involving the instance (a newly-looked-up copy) would succeed.&lt;/p&gt;</comment>
                            <comment id="12476790" author="ppoddar@apache.org" created="Thu, 1 Mar 2007 00:44:15 +0000"  >&lt;p&gt;Right &amp;#8211; a newly looked up copy (the copy comes out of L2 cache and not from the database where it really do not exist anymore) &amp;#8211; is essentially not usable i.e. any commit set containing that object fails. The L2 cache heals as soon as the commit fails.  &lt;/p&gt;

&lt;p&gt;So let me summarize &lt;br/&gt;
a) delete via query leaves a copy in the L2 cache&lt;br/&gt;
b) the cached copy can be located via em.find()&lt;br/&gt;
c) however, any modify operation on this ghost copy will fail&lt;br/&gt;
d) this failure will signal to clear the copy from the L2 cache.&lt;/p&gt;

&lt;p&gt;Do you think, it is worth mentioning in the doc?&lt;/p&gt;
</comment>
                            <comment id="12476794" author="pcl" created="Thu, 1 Mar 2007 00:56:52 +0000"  >&lt;p&gt;Well, I think that it&apos;s worth &lt;b&gt;fixing&lt;/b&gt;, and shouldn&apos;t really be all that hard, either. But, assuming that we can&apos;t prioritize it appropriately to fix it, we should document it prior to the next release, yes.&lt;/p&gt;</comment>
                            <comment id="12476808" author="clr" created="Thu, 1 Mar 2007 01:25:28 +0000"  >&lt;p&gt;I agree this bug is worth fixing and pending the fix, worth documenting as a bug. I&apos;d be against documenting it as a &quot;feature&quot;.&lt;/p&gt;</comment>
                            <comment id="12479277" author="pcl" created="Thu, 8 Mar 2007 09:35:00 +0000"  >&lt;p&gt;&amp;gt; b) When openjpa.datacache=false, the application can still obtain a &lt;br/&gt;
&amp;gt; non-null reference to StoreCache, however its delegate is null.&lt;br/&gt;
&amp;gt; What should OpenJPAEntityManagerFactory.getStoreCache() return&lt;br/&gt;
&amp;gt; when  openjpa.datacache=false ?&lt;/p&gt;

&lt;p&gt;I think that this is fine behavior. You generally shouldn&apos;t need to get the StoreCache&apos;s delegate. The current behavior is nice because user code doesn&apos;t need to check whether or not a cache is active; instead, user code can just perform cache operations. Sure, they&apos;re no-ops when the cache isn&apos;t on, but that&apos;s fine.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12352271" name="openjpa-35.test.zip" size="3006" author="ppoddar@apache.org" created="Wed, 28 Feb 2007 21:35:17 +0000"/>
                            <attachment id="12352277" name="openjpa-35.trace.txt" size="4789" author="ppoddar@apache.org" created="Wed, 28 Feb 2007 23:50:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Feb 2007 21:58:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160372</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysqlj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201657</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>