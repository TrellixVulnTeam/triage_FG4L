<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:46:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-722/OPENJPA-722.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-722] persist - clear - merge scenario doesn&apos;t work</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-722</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;EntityManager.clear() now don&apos;t  flush new object but only detach it.&lt;br/&gt;
But DetachManager still flush dirty object and assume detached objects are in clean state.&lt;br/&gt;
When the &quot;new&quot; object is merged back and transaction commit,  because the object state lost its original state PNEW, it will not be added to insert list  and not flushed to DB.&lt;/p&gt;

&lt;p&gt;According to the EntityManager.clear() API,  changes made to entities that have not been flushed to the database will not be persisted.  When they merges back to persistent context, they all should kept there original state.&lt;/p&gt;

&lt;p&gt;I added the following test to org.apache.openjpa.persistence.simple.TestEntityManagerClear.&lt;/p&gt;

&lt;p&gt;    public void testClearMerge() &lt;/p&gt;
{
        // Create EntityManager and Start a transaction (1)
        begin();

        // Insert a new object then clear persistent context
        AllFieldTypes testObject1 = new AllFieldTypes();
        testObject1.setStringField(&quot;my test object1&quot;);
        persist(testObject1);
        //Object1 is not flushed to DB but only detached by clear().
        em.clear();
        em.merge(testObject1);
        //expect the PCState is same as before detached, 
        //so it is PNew instead of PCLEAN and is add to insert list.
        commit();
        
        //Start a new transaction
        begin();
        
        // Attempt retrieve of Object1 from previous PC (should exist)
        assertEquals(1, query(&quot;select x from AllFieldTypes x &quot;
            + &quot;where x.stringField = &apos;my test object1&apos;&quot;).
                getResultList().size());
        
        // Rollback the transaction and close everything
        rollback();
    }</description>
                <environment></environment>
        <key id="12404214">OPENJPA-722</key>
            <summary>persist - clear - merge scenario doesn&apos;t work</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12361701">OPENJPA-119</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="techhusky">Jeremy Bauer</assignee>
                                    <reporter username="xiaoqinfeng2000">Xiaoqin Feng</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Sep 2008 00:12:38 +0100</created>
                <updated>Tue, 9 Mar 2010 18:31:02 +0000</updated>
                            <resolved>Mon, 29 Sep 2008 17:08:07 +0100</resolved>
                                    <version>1.0.3</version>
                    <version>1.1.0</version>
                    <version>1.2.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-M2</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12630417" author="xiaoqinfeng2000" created="Fri, 12 Sep 2008 00:14:32 +0100"  >&lt;p&gt;Test case is attached.&lt;/p&gt;</comment>
                            <comment id="12631531" author="techhusky" created="Tue, 16 Sep 2008 21:10:47 +0100"  >&lt;p&gt;I was able to reproduce this problem with your test and it does look like a bug.  As a workaround, if you explicitly flush before calling clear, the test should pass.  As you mention, the state of the entity doesn&apos;t get set appropriately on the detach/attach in order for it to get tagged as an insert on the commit.  I tried tagging it as &quot;clean, but not yet flushed&quot; in order to trigger an insert, but quickly ran into other state-related issues.   I&apos;ll post a patch if/when I work through those issues.&lt;/p&gt;</comment>
                            <comment id="12631535" author="xiaoqinfeng2000" created="Tue, 16 Sep 2008 21:29:39 +0100"  >&lt;p&gt;Jeremy, thanks for looking at it.&lt;br/&gt;
Besides, I think according to EntityManager.clear() API, we shouldn&apos;t flush both new object and dirty object. &lt;br/&gt;
Do you agree with it?&lt;/p&gt;</comment>
                            <comment id="12632295" author="xiaoqinfeng2000" created="Thu, 18 Sep 2008 17:58:49 +0100"  >&lt;p&gt;Here is the updated tests. I have added new-clear-merge, update-clear-merge and delete-clear-merge tests.&lt;br/&gt;
I think the expected behavior for em.clear() is just detach, it shouldn&apos;t  flush for all new, updated, delete objects.&lt;br/&gt;
Instead it should keep PCState during detachment and are able to merge it back and flush/commit correctly after that.&lt;/p&gt;

&lt;p&gt;I am also working on this issue. Now still need a bit more work to make delete case work.&lt;/p&gt;</comment>
                            <comment id="12632307" author="techhusky" created="Thu, 18 Sep 2008 18:41:58 +0100"  >&lt;p&gt;I also got the new and update to work, but ran into the delete problem.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  After one/both of us gets the delete working, let&apos;s compare code and post a common solution and jUnits.  I have a few additional tests in the works which use cascade relationships and explicit detachment.  I&apos;ll post them when they are ready so you can try with your version of the fix.&lt;/p&gt;</comment>
                            <comment id="12632330" author="techhusky" created="Thu, 18 Sep 2008 19:32:35 +0100"  >&lt;p&gt;Regarding the delete test.  Should we expect the merge operation to delete an entity that was marked as delete and then detached when the persistence context was cleared?&lt;/p&gt;

&lt;p&gt;According to the spec (3.2.4.1 Merging Detached Entity State):&lt;/p&gt;

&lt;p&gt;&#8226; If X is a removed entity instance, an IllegalArgumentException will be thrown by the&lt;br/&gt;
merge operation (or the transaction commit will fail).&lt;/p&gt;

&lt;p&gt;Does this still hold true after the em has been cleared without a commit?  If not, wouldn&apos;t you expect the test query:&lt;/p&gt;

&lt;p&gt;        assertEquals(0, query(&quot;select x from Item x &quot;&lt;br/&gt;
            + &quot;where x.itemName = &apos;cup&apos;&quot;).&lt;br/&gt;
                getResultList().size());&lt;/p&gt;

&lt;p&gt;to return one item instead of zero?  It seems like we should either merge the entity or throw an exception.  My current opinion is that we should throw an exception.  What do you think?&lt;/p&gt;

&lt;p&gt;Other opinions?&lt;/p&gt;</comment>
                            <comment id="12632342" author="xiaoqinfeng2000" created="Thu, 18 Sep 2008 20:01:48 +0100"  >&lt;p&gt;In this case, since the persistence context was cleared, the entity to merge to is not a removed entity, yet the toAttach is marked as delete.&lt;br/&gt;
So I think the about delete test case is still expected.&lt;/p&gt;</comment>
                            <comment id="12632377" author="xiaoqinfeng2000" created="Thu, 18 Sep 2008 21:42:01 +0100"  >&lt;p&gt;Here are some clarifications for the code change. Jeremy, please review it and let me know your opinion.&lt;br/&gt;
I don&apos;t have permission to submit to SVN yet. If you have, could you submit tit after it is finalized? Thanks.&lt;/p&gt;

&lt;p&gt;1. Added _flushBeforeDetach flag in Broker for EntityManagerImpl.clear(). &lt;br/&gt;
This has same effect as setting openjpa.Compatibility property but it is used internally.&lt;br/&gt;
Added getter and setter in Broker interface. &lt;/p&gt;

&lt;p&gt;2. Save PCState and dirty flags with detached object if it is not flushed. &lt;br/&gt;
See change in DetachManager.getDetachedState(StateManagerImpl, BitSet). &lt;br/&gt;
Before my change, it made state object array one size longer but empty in that positon if isNew.&lt;br/&gt;
Now I put PCState there if it is not flushed.&lt;br/&gt;
I don&apos;t know if the previous trick is used somewhere later at attach stage. At least in openjpa, I didn&apos;t see it.&lt;br/&gt;
And all openjpa tests passed.&lt;/p&gt;

&lt;p&gt;3. Use saved PCState and dirty flags to restore StateManager and other state during attachment.&lt;br/&gt;
See change in DetachedStateManager.attach().&lt;br/&gt;
For delete case, BrokerImpl.copy(OpenJPAStateManager copy, PCState state) could find StateManager with same OID in cache &lt;br/&gt;
so it doesn&apos;t set the new state with detached state. &lt;br/&gt;
I changed StateManagerImpl.setPCState(PCState state) from private to protected so BrokerImpl could set it.&lt;br/&gt;
I think this change is fine but just highlight for review.&lt;/p&gt;</comment>
                            <comment id="12632708" author="techhusky" created="Fri, 19 Sep 2008 15:53:50 +0100"  >&lt;p&gt;I conversed with a couple of the committers and the consensus was that we should not be storing persistence context-type state in the detached entities.  Instead, the detached entity should only manage information about the state of its persistent fields.&lt;/p&gt;

&lt;p&gt;So, when we re-merge entities we should not depend on the &quot;NEW&quot; state in a detached object.  The entity could have been inserted into the database outside of the application, in which case we&apos;d fail trying to do an insert (which should not happen on a merge).  I think the ideal solution is to re-query for the entity and then perform the insert or update based on whether the entity was or was not found - similar to merging an actual new entity.&lt;/p&gt;

&lt;p&gt;One additional item:  The test code has a query immediately following the clear:&lt;/p&gt;

&lt;p&gt;        em.clear();&lt;br/&gt;
        assertEquals(1, query(&quot;select x from Item x &quot;&lt;br/&gt;
                + &quot;where x.itemName = &apos;cup&apos;&quot;).&lt;br/&gt;
                    getResultList().size());&lt;/p&gt;

&lt;p&gt;This essentially loads the returned item in the L1 cache, changing the behavior of the internal merge processing   (the corresponding merge finds the item in the L1).  While this is a good scenario to test, we should also test the scenario where the item isn&apos;t cached before the merge.&lt;/p&gt;</comment>
                            <comment id="12633384" author="xiaoqinfeng2000" created="Mon, 22 Sep 2008 18:10:10 +0100"  >&lt;p&gt;Jeremy, Good thoughts about test.&lt;br/&gt;
I am fine with the other proposed solution. &lt;br/&gt;
I am looking forward to look at your solution.&lt;/p&gt;</comment>
                            <comment id="12634668" author="xiaoqinfeng2000" created="Thu, 25 Sep 2008 23:33:48 +0100"  >&lt;p&gt;Yes, we shouldn&apos;t save PCState in pcDetachedState since pcDetachedStaet is used for loaded field, version info to make attach process more efficient.&lt;br/&gt;
V2 patch is attached.&lt;br/&gt;
Here is my solution:&lt;br/&gt;
1. Our assumption according to EntityManager.clear() API is &quot;&quot;EntityManager.clear() will not flush new, dirty, removed entities in context but just detach all managed entities&quot;.&lt;/p&gt;

&lt;p&gt;At first I thought we need to pass along flush=false from BrokerImpl.detachAll(OpCallbacks call, boolean flush) to DetachManager _flushBeforeDetach as openjpa-591 mentioned. Then I realized in BrokerImpl.detachAllInternal(), new DetachManager(this, true, call).detachAll (new ManagedObjectCollection(states)) actually pass in full=true so _flushBeforeDetach has no effect in this case and flush logic in DetachManager will be skipped. &lt;/p&gt;

&lt;p&gt;So I reverted my change in V1 patch for this part.&lt;/p&gt;

&lt;p&gt;2. To make not flushed new entity to be inserted after merge, we don&apos;t save DetachedStateManager in detached object. When it merged back, exisitng openjpa framework could handle it correctly and add it to insert list.&lt;/p&gt;

&lt;p&gt;3. To make not flushed dirty entity to be updated after merge, we save dirty flag BitSet when it is detached. &lt;/p&gt;

&lt;p&gt;4. As for removed entity, according to EJB3.0 persist spec 3.2.5,  remove call actually remove the entity from context, em.contains(obj) return false. It is not a managed entity and shouldn&apos;t be detached for EntityManager.clear() and not suppose to merge it back and be removed from DB in next commit/flush. User suppose to flush it before calling clear().&lt;br/&gt;
Note: &lt;br/&gt;
Although I found openjpa may detach deleted-not-flushed entity as a side effect, we don&apos;t need to support merge scenario as I claimed above.&lt;/p&gt;

&lt;p&gt;sm.isNew() &amp;amp;&amp;amp; !sm.isDeleted() &amp;amp;&amp;amp; !sm.isFlushed() in DetachManager.useDetachedStateManager() also make sure PNewDeletedState and PNewFlushedDeletedState will not be merged and take as a PNEW state and get inserted.&lt;/p&gt;</comment>
                            <comment id="12634696" author="xiaoqinfeng2000" created="Fri, 26 Sep 2008 00:39:00 +0100"  >&lt;p&gt;2 tests failed with V2 patch when I run all test suites.&lt;br/&gt;
Move &quot;!(sm.isNew() &amp;amp;&amp;amp; !sm.isDeleted() &amp;amp;&amp;amp; !sm.isFlushed())&quot; from DetachManager.useDetachedStateManager(StateManagerImpl, DetachOptions) to detachInternal(Object) since useDetachedStateManager is used by other calls.&lt;br/&gt;
Now all tests passed.&lt;br/&gt;
Please use V3 patch.&lt;/p&gt;</comment>
                            <comment id="12635431" author="awhite" created="Mon, 29 Sep 2008 17:08:07 +0100"  >&lt;p&gt;Applied V3 patch in SVN revision 700158.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12390392" name="TestEntityManagerClear-V2.java" size="6729" author="xiaoqinfeng2000" created="Thu, 18 Sep 2008 17:58:49 +0100"/>
                            <attachment id="12389979" name="TestEntityManagerClear.java" size="4526" author="xiaoqinfeng2000" created="Fri, 12 Sep 2008 00:14:32 +0100"/>
                            <attachment id="12390966" name="openjpa-722-V2.patch" size="7512" author="xiaoqinfeng2000" created="Thu, 25 Sep 2008 23:33:48 +0100"/>
                            <attachment id="12390970" name="openjpa-722-V3.patch" size="7627" author="xiaoqinfeng2000" created="Fri, 26 Sep 2008 00:39:00 +0100"/>
                            <attachment id="12390418" name="openjpa-722-fromQin.patch" size="13983" author="xiaoqinfeng2000" created="Thu, 18 Sep 2008 21:42:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 16 Sep 2008 20:10:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161032</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyswyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202688</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>