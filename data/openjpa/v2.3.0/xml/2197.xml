<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:32:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-2197/OPENJPA-2197.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-2197] MethodComparator in AnnotationPersistenceMetaDataParser should also compare parameters</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-2197</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;AnnotationPersistenceMetaDataParser contains a MethodComparator which only compares the class + the method name. Too bad I have (had...) 2 methods with the same name in my EntityListener:&lt;/p&gt;

&lt;p&gt;    @PreUpdate&lt;br/&gt;
    public void updateChangeLog(Object entity) { ..&lt;/p&gt;

&lt;p&gt;and also&lt;/p&gt;

&lt;p&gt;    private void updateChangeLog(BaseEntity he, ChangeLogEntry cle)&lt;/p&gt;

&lt;p&gt;which is a private helper method.&lt;/p&gt;

&lt;p&gt;Due to the bug in MethodComparator, my @PreUpdate sometimes didn&apos;t get detected.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12556135">OPENJPA-2197</key>
            <summary>MethodComparator in AnnotationPersistenceMetaDataParser should also compare parameters</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="struberg">Mark Struberg</assignee>
                                    <reporter username="struberg">Mark Struberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 May 2012 23:10:22 +0100</created>
                <updated>Fri, 18 May 2012 18:17:44 +0100</updated>
                            <resolved>Thu, 17 May 2012 08:58:07 +0100</resolved>
                                    <version>2.2.0</version>
                                    <fixVersion>2.3.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13277615" author="struberg" created="Thu, 17 May 2012 07:44:12 +0100"  >&lt;p&gt;this test shows the problem. I&apos;m working on a fix right now.&lt;/p&gt;</comment>
                            <comment id="13277618" author="struberg" created="Thu, 17 May 2012 07:48:59 +0100"  >&lt;p&gt;We currently use the Method#hashCode in the MethodComparator. But this is really ugly, as it&apos;s defined as :&lt;br/&gt;
    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Returns a hashcode for this &amp;lt;code&amp;gt;Method&amp;lt;/code&amp;gt;.  The hashcode is computed&lt;/li&gt;
	&lt;li&gt;as the exclusive-or of the hashcodes for the underlying&lt;/li&gt;
	&lt;li&gt;method&apos;s declaring class name and the method&apos;s name.&lt;br/&gt;
     */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please note that Method#hashCode does &lt;b&gt;NOT&lt;/b&gt; cover any method parameters!&lt;/p&gt;

&lt;p&gt;As we do already equals on class and the method name, this doesn&apos;t bring any benefit. &lt;/p&gt;</comment>
                            <comment id="13277651" author="struberg" created="Thu, 17 May 2012 08:58:09 +0100"  >&lt;p&gt;fixed in r1339509.&lt;/p&gt;</comment>
                            <comment id="13277855" author="allee8285" created="Thu, 17 May 2012 15:30:59 +0100"  >&lt;p&gt;Per spec section &quot;3.5.1 Lifecycle Callback Methods&quot;&lt;br/&gt;
  Callback methods defined on an entity class or mapped superclass have the following signature:&lt;br/&gt;
    void &amp;lt;METHOD&amp;gt;()&lt;br/&gt;
  Callback methods defined on an entity listener class have the following signature:&lt;br/&gt;
    void &amp;lt;METHOD&amp;gt;(Object)&lt;/p&gt;

&lt;p&gt;I am wondering if a simpler solution is to detect this requirement rather than check for method signature.&lt;/p&gt;

&lt;p&gt;I.e.&lt;br/&gt;
    public static Collection&amp;lt;LifecycleCallbacks&amp;gt;[] parseCallbackMethods&lt;br/&gt;
        (Class&amp;lt;?&amp;gt; cls, Collection&amp;lt;LifecycleCallbacks&amp;gt;[] callbacks, boolean sups,&lt;br/&gt;
        boolean listener, MetaDataRepository repos) {&lt;br/&gt;
            .........&lt;br/&gt;
                if (Modifier.isStatic(mods) || Modifier.isFinal(mods) ||&lt;br/&gt;
                    Object.class.equals(m.getDeclaringClass()))&lt;br/&gt;
                    continue;&lt;/p&gt;

&lt;p&gt;                // ******* addition logic to filter out invalid listeners&lt;br/&gt;
                if( m.getParameterTypes().length != (listener?0:1) || m.getReturnType() != Void.class )&lt;br/&gt;
                    continue;                     &lt;br/&gt;
                // ******* &lt;/p&gt;

&lt;p&gt;                key = new MethodKey(m);&lt;br/&gt;
                if (!seen.contains(key)) &lt;/p&gt;
{
                    methods.add(m);
                    seen.add(key);
                }
&lt;p&gt;            }&lt;/p&gt;</comment>
                            <comment id="13278170" author="struberg" created="Thu, 17 May 2012 20:55:15 +0100"  >&lt;p&gt;We should check this in any case. I assumed that this will be checked already. Can you quickly change the test and verify if it fails with a message if you try to apply a lifecycle callback on another method?&lt;/p&gt;

&lt;p&gt;I went for fixing the Comparator as I didn&apos;t like to change the whole logic of this part. Of course, if there are other open tasks in this area, then we might think about doing a clean rework...&lt;/p&gt;</comment>
                            <comment id="13278940" author="allee8285" created="Fri, 18 May 2012 17:43:44 +0100"  >&lt;p&gt;Ignore my suggestion! The logic also handles more than the JPA spec required callbacks, which caused some test failures.&lt;/p&gt;</comment>
                            <comment id="13278979" author="struberg" created="Fri, 18 May 2012 18:17:44 +0100"  >&lt;p&gt;Yes I feared that. I just saw some old stuff I know form kodo, so most probably either JDO or homegrown stuff &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12527800" name="OPENJPA-2197_test.patch" size="738" author="struberg" created="Thu, 17 May 2012 07:44:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 May 2012 14:30:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>240169</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxusaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3402</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>