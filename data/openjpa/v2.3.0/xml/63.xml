<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:36:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-63/OPENJPA-63.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-63] Better pessimistic lock support for DB2 v8.2+</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-63</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;There is new SELECT &quot;FOR READ ONLY WITH RS USE AND KEEP EXCLUSIVE LOCKS&quot; syntax in DB2 v8.2 and later that can be used to implement pessimistic locks for selects with multiple from tables, subselects, inner/outer joins and so forth. I&apos;ll attach simple patch shortly.&lt;/p&gt;</description>
                <environment>IBM DB2 UDB v8.2 or later</environment>
        <key id="12352435">OPENJPA-63</key>
            <summary>Better pessimistic lock support for DB2 v8.2+</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kwsutter">Kevin Sutter</assignee>
                                    <reporter username="igorfie@yahoo.com">Igor Fedorenko</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Oct 2006 19:16:27 +0100</created>
                <updated>Thu, 1 Mar 2007 02:20:05 +0000</updated>
                            <resolved>Thu, 1 Mar 2007 02:20:05 +0000</resolved>
                                                    <fixVersion>0.9.7</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12439930" author="igorfie@yahoo.com" created="Wed, 4 Oct 2006 19:19:36 +0100"  >&lt;p&gt;I ran the few unit tests that come with OpenJPA against DB2 and they worked.&lt;/p&gt;</comment>
                            <comment id="12444315" author="kwsutter" created="Tue, 24 Oct 2006 14:45:59 +0100"  >&lt;p&gt;I was just taking a look at Igor&apos;s patch and it looks rather straight-forward.  But, my general question is how do we (OpenJPA) want to support multiple versions of a given DB dictionary?  Do we want a single dictionary and then do the version checks at runtime as Igor as presented?  Or, do we want individual dictionaries for the versions that are supported and then load the right one based on the configuration?  It seems like we could go either way.  Is there a preference or a precedence that we should stick to?&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12444414" author="pcl" created="Tue, 24 Oct 2006 17:48:40 +0100"  >&lt;p&gt;For a change this small, I&apos;m perfectly happy with doing the logic in a single class. We should keep an eye out for the logic diverging more and more, and create a separate class / subclass as needed at that time.&lt;/p&gt;

&lt;p&gt;Also, Igor&apos;s changes to DelegatingDatabaseMetaData will have the unfortunate side-effect of requiring that we compile against JDK1.4 &amp;#8211; JDK1.3 java.sql.DelegatingDatabaseMetaData didn&apos;t have those two methods. Most of the methods in our JDBC package that throw exceptions do so to allow us to run against more recent versions of java.sql than we compile against. Personally, I&apos;d rather maintain the OpenJPA 1.3 support. This, however, would require either doing some reflection (plus a call to DelegatingDatabaseMetaData.getInnermostDelegate()) in the DBDictionary, or just using SQL to ask the database about it&apos;s version, or getting the verison data from some other 1.3-supported source.&lt;/p&gt;</comment>
                            <comment id="12445193" author="kwsutter" created="Fri, 27 Oct 2006 15:05:31 +0100"  >&lt;p&gt;After requesting a vote via the dev mailing list, we&apos;ve determined that we&apos;re not going to worry about supporting the back-level JDK 1.3 interfaces.  So, Igor&apos;s usage of the new methods on DelegatingDatabaseMetaData should be okay.&lt;/p&gt;</comment>
                            <comment id="12447595" author="kwsutter" created="Mon, 6 Nov 2006 23:58:05 +0000"  >&lt;p&gt;A couple of items with this issue...&lt;/p&gt;

&lt;p&gt;o  Using the SELECT &quot;FOR READ ONLY WITH RS USE AND KEEP EXCLUSIVE LOCKS&quot; syntax for all forUpdateClause usages may be too much.  One thing is that we may not need or want exclusive locks.  Update locks would probably be sufficient.  Should this be configurable?&lt;/p&gt;

&lt;p&gt;o  Along the same lines, what about the isolation level?  Besides, the &quot;with rs&quot;, we could specify &quot;with cs&quot;, &quot;with ur&quot;, or &quot;with rr&quot;.  RS and RR levels allow for the lock clause, the CS and UR levels do not.  So, here again, it looks like it should be configurable.  Or, at least determined at runtime based on the isolation level.&lt;/p&gt;

&lt;p&gt;o  Even for the optimistic locking case, the use of the &quot;for read only&quot; clause may be good for performance reasons on DB2.&lt;/p&gt;

&lt;p&gt;o  If we could determine a solid generic clause that would help your specific case, then I would be more in favor of modifying the DB2 Dictionary.  For example, if &quot;for read only&quot; by itself would suffice, then I would be okay with using that for the forUpdateClause.  But, if that would not provide enough isolation and locking facilities for your scenarion, then we might have to wait for a more generic solution.&lt;/p&gt;

&lt;p&gt;o  By accident, I attempted to run with your changes while running some other tests with WebSphere and DB2, and I found that the test conditions may not be sufficient.  I was running with DB2 v8.2 and I got the following error:&lt;/p&gt;

&lt;p&gt;DSRA8750W: The JDBC 3.0 method getDatabaseMajorVersion is not implemented on this JDBC Provider.&lt;/p&gt;

&lt;p&gt;The trace showed the following datasource information:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;11/6/06 16:11:16:620 CST&amp;#93;&lt;/span&gt; 00000023 InternalDB2Da I   DSRA8203I: Database product name : DB2/NT&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;11/6/06 16:11:16:640 CST&amp;#93;&lt;/span&gt; 00000023 InternalDB2Da I   DSRA8204I: Database product version : 08.02.0004&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;11/6/06 16:11:16:650 CST&amp;#93;&lt;/span&gt; 00000023 InternalDB2Da I   DSRA8205I: JDBC driver name  : IBM DB2 JDBC 2.0 Type 2&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;11/6/06 16:11:16:660 CST&amp;#93;&lt;/span&gt; 00000023 InternalDB2Da I   DSRA8206I: JDBC driver version  : 08.02.0004&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;11/6/06 16:11:16:670 CST&amp;#93;&lt;/span&gt; 00000023 WSRdbDataSour I   DSRA8208I: JDBC driver type  : 2&lt;/p&gt;

&lt;p&gt;So, we might have to check for more than just the database major and minor versions.  This might also depend on the JDBC driver type.  Not sure, I didn&apos;t check into that aspect of the solution just yet.&lt;/p&gt;

&lt;p&gt;Given these discussion items, I&apos;m not comfortable taking the patch as is.  Igor, if you want to evaluate these comments and create an alternate patch, I would be interested in checking it out.  Thanks.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12448377" author="igorfie@yahoo.com" created="Thu, 9 Nov 2006 06:07:04 +0000"  >&lt;p&gt;I guess I have not explained the problem I was trying to solve, so let me do that before I answer your specific questions.&lt;/p&gt;

&lt;p&gt;Reading objects with ReadLockMode set to LockModeType.WRITE should create database locks necessary to prevent other concurrent transactions from using the same data. Here is a couple of relevant quotes from OpenJPA documentation: &quot;pessimistic transactions generally lock the datastore records they act on, preventing other concurrent transactions from using the same data&quot; and &quot;PessimisticLockManager ... uses SELECT FOR UPDATE statements (or the database&apos;s equivalent) to lock the database rows corresponding to locked objects&quot;. &lt;/p&gt;

&lt;p&gt;OpenJPA does NOT create any database locks for more complex SELECT statements (with MultipleTables, InnerJoin or OuterJoin). So I am asking to change OpenJPA such that it would be possible to prevent other concurrent transactions from using the same data with SELECT statements with MultipleTables, InnerJoin or OuterJoin for DB2 versions that support this.&lt;/p&gt;

&lt;p&gt;Now to your questions.&lt;/p&gt;

&lt;p&gt;o EXCLUSIVE vs UPDATE locks. Exposing fine-grained lock levels supported by DB2 is not necessary to solve this particular problem and should be tracked as a separate bugreport (if there is a need to provide such support in OpenJPA). Using UPDATE locks does seem more appropriate (see &lt;a href=&quot;http://publib.boulder.ibm.com/infocenter/db2luw/v8/index.jsp?topic=/com.ibm.db2.udb.doc/admin/r0005274.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://publib.boulder.ibm.com/infocenter/db2luw/v8/index.jsp?topic=/com.ibm.db2.udb.doc/admin/r0005274.htm&lt;/a&gt;) and I will provide updated patch.&lt;/p&gt;

&lt;p&gt;o Use FOR READ ONLY with optimistic transactions. Indeed, this should be a separate enhancement request. I will update the patch not to include this (potential) performance optimization.&lt;/p&gt;

&lt;p&gt;o Different isolation levels. Exposing different isolation levels is not necessary to solve this particular problem. For consistancy sake, I will update the patch to use the same isolation level as used in AbstractDB2Dictionary.&lt;/p&gt;

&lt;p&gt;o Solid generic clause. I believe that &quot;WITH RR USE AND KEEP EXCLUSIVE LOCKS&quot; is the solid generic clause to address this particular locking problem. At very least it is much more generic than the very limited &quot;FOR UPDATE WITH RR&quot; clause current in use by OpenJPA.&lt;/p&gt;

&lt;p&gt;o Use of JDBC 3.0 methods. Judging by &quot;IBM DB2 JDBC 2.0 Type 2&quot; log message, you&apos;re using old CLI DB2 JDBC which is not supported according to OpenJPA documentation (and is going to be removed from DB2 soon, according to the rumors). I will update the patch to fall back to current lock behaviour with JDBC 2.x and earlier drivers. I will test the patch with both CLI and JCC drivers with 8.2 and 9.1 and mayby with 8.1 too (I think I still have it around somewhere).&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;</comment>
                            <comment id="12448524" author="pcl" created="Thu, 9 Nov 2006 17:25:19 +0000"  >&lt;p&gt;First, generally, I think that the patch is definitely an improvement. I agree that there are a bunch of things that we could (and probably should) parameterize. But as Igor points out, it&apos;s certainly better than what was already in OpenJPA. So we&apos;re moving in the right  direction.&lt;/p&gt;

&lt;p&gt;Re: JDBC3: if we execute on this decision to drop support for JDK1.3, then the issue is moot.&lt;/p&gt;

&lt;p&gt;Also, this already is configurable at a coarse-grained level &amp;#8211; people can always set the forUpdateClause however they want, by setting the DBDictionary property to &apos;db2(ForUpdateClause=&quot;FOR UPDATE &amp;lt;MAGIC STRING HERE&amp;gt;&quot;).&lt;/p&gt;</comment>
                            <comment id="12448584" author="kwsutter" created="Thu, 9 Nov 2006 20:47:51 +0000"  >&lt;p&gt;Thanks, Igor, for your comments.  I agree with you (and Patrick) that a general case solution is better than nothing at this point.  If you can provide an updated patch, I will take another look at it and get it committed.  Thanks.&lt;/p&gt;

&lt;p&gt;One question though...  In your first bullet reply, you said that you would change the lock clause to &quot;..UPDATE LOCKS&quot;.  But, in your &quot;solid generic clause&quot; reply, you said &quot;..EXCLUSIVE LOCKS&quot;.  I&apos;m pretty sure that was just a copy-and-paste error, but I wanted to double check that you were going to use &quot;..UPDATE LOCKS&quot;.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Kevin&lt;/p&gt;</comment>
                            <comment id="12449099" author="igorfie@yahoo.com" created="Sun, 12 Nov 2006 07:12:36 +0000"  >&lt;p&gt;Revised patch that uses &quot;WITH RR USE AND KEEP UPDATE LOCKS&quot; for-update clause and tolerates JDBC 2.x (read, &quot;Legacy CLI&quot;) drivers. I tested this patch with DB2 8.2.2 (both JCC and CLI drivers) and with DB2 9.1 (JCC driver only).&lt;/p&gt;</comment>
                            <comment id="12455319" author="kwsutter" created="Mon, 4 Dec 2006 14:46:11 +0000"  >&lt;p&gt;I finally got around to verifying Igor&apos;s latest patch.  It looks good and tests out okay on my system.  Thanks for your  patience, Igor.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12342282" name="db2-selectForUpdate.patch" size="3017" author="igorfie@yahoo.com" created="Wed, 4 Oct 2006 19:19:36 +0100"/>
                            <attachment id="12344830" name="db2-selectForUpdate2.patch.diff" size="7479" author="igorfie@yahoo.com" created="Sun, 12 Nov 2006 07:12:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Oct 2006 13:45:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160400</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysvq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202488</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>