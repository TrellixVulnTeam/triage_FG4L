<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:41:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1248/OPENJPA-1248.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1248] LOB streaming does not work as expected</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1248</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;TestReaderLob does not pass with any of the databases indicated in the test case: Oracle, MySQL, PostgreSQL, SQL Server. TestInputStreamLob passes only with MySQL and PostgreSQL.&lt;/p&gt;</description>
                <environment>Oracle, MySQL, PostgreSQL, SQL Server</environment>
        <key id="12433149">OPENJPA-1248</key>
            <summary>LOB streaming does not work as expected</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="milosz">Milosz Tylenda</assignee>
                                    <reporter username="milosz">Milosz Tylenda</reporter>
                        <labels>
                    </labels>
                <created>Sat, 15 Aug 2009 12:04:05 +0100</created>
                <updated>Mon, 31 May 2010 19:35:28 +0100</updated>
                            <resolved>Sun, 21 Mar 2010 10:27:23 +0000</resolved>
                                    <version>1.1.0</version>
                    <version>1.2.0</version>
                    <version>1.2.1</version>
                    <version>1.2.2</version>
                    <version>1.3.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-beta3</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12743676" author="milosz" created="Sat, 15 Aug 2009 12:07:39 +0100"  >&lt;p&gt;Sample stack traces attached.&lt;/p&gt;</comment>
                            <comment id="12747215" author="amy" created="Tue, 25 Aug 2009 05:00:59 +0100"  >&lt;p&gt;similar error on oracle&lt;/p&gt;</comment>
                            <comment id="12758379" author="milosz" created="Tue, 22 Sep 2009 20:16:40 +0100"  >&lt;p&gt;Some Oracle-specific antidote for this problem has been committed in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1249&quot; title=&quot;Rework Oracle LOB support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1249&quot;&gt;OPENJPA-1249&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12760003" author="milosz" created="Sun, 27 Sep 2009 10:46:03 +0100"  >&lt;p&gt;Removed dead OracleDictionary.insertBlobForStreamingLoad(Row row, Column col, Object ob).&lt;/p&gt;</comment>
                            <comment id="12775126" author="techhusky" created="Mon, 9 Nov 2009 20:47:24 +0000"  >&lt;p&gt;These tests are two of the few remaining failures in the o-j-p project when running on Oracle.  (Version XE/10 using the 11.2.0.1 driver)  I found a few issues and came up with a couple of options for fixing them.&lt;/p&gt;

&lt;p&gt;First, when inserting a LOB OpenJPA currently inserts a null value into the LOB column.  When this value is retrieved from the result set (res.getBlob) it is null - and not an updatable blob.  This is currently causing an NPE.  If an Oracle empty_&lt;span class=&quot;error&quot;&gt;&amp;#91;b,c&amp;#93;&lt;/span&gt;lob() is inserted, the rs will return an updatable lob.  However, this changes behavior a bit since null != empty and some of the test assertions that assert a persistent stream attribute is NULL will fail.  Another option is to continue to insert a NULL value then when doing the update, create a temporary lob (using Oracle APIs) and do the update.  I&apos;ve found this to be troublesome - especially when connection pooling is used - since the Oracle APIs assert that the connection they are provided is an Oracle connection.  I put together a DBCP/JDBC 4 reflection-based solution but it is cumbersome.   Worse yet, DBCP requires a special property be set to get access to the underlying connection.&lt;/p&gt;

&lt;p&gt;I think the cleanest solution would be to use empty_lob() and change the behavior of the tests to expect an empty stream when using Oracle.  A hybrid solution would handle cases where an existing value is null...  but this might be overkill.&lt;/p&gt;

&lt;p&gt;The second issue (after correcting the first) was that the test was failing with an exception indicating that the connection is closed when reading from the updated BLOB.  This issue is related to OpenJPA connection management and the need for Oracle streaming LOBs to maintain an open connection.  The issue was corrected on Oracle by setting the property openjpa.ConnectionRetainMode=transaction, indicating that em should use the same connection for the duration of the transaction.  Some applications may need to use mode &quot;always&quot;, depending on transactional patterns and when the LOB is accessed - but that can result in an inefficient use of connections in a pooled environment.  This needs to be documented in the OpenJPA manual as part of this JIRA.  Unfortunately, this did not correct similar test failures on SQL Server.  SQL Server will require additional investigation.&lt;/p&gt;

&lt;p&gt;Unless someone(s) is/are in strong disagreement, I&apos;ll be committing code to trunk which fixes the Oracle failures by using empty_&lt;span class=&quot;error&quot;&gt;&amp;#91;c,b&amp;#93;&lt;/span&gt;lob() instead of inserting null. The tests will be modified to assert that the stream is empty (instead of null) when running with Oracle.  I&apos;ll also attach a patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1249&quot; title=&quot;Rework Oracle LOB support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1249&quot;&gt;OPENJPA-1249&lt;/a&gt; (since the patch is Oracle specific) that uses native Oracle methods to handle null LOBs as an alternative solution.  Finally, the Oracle section of the manual will be updated to include the ConnectionRetainMode requirement for streaming LOBs.  &lt;/p&gt;</comment>
                            <comment id="12775353" author="milosz" created="Tue, 10 Nov 2009 08:49:01 +0000"  >&lt;p&gt;Hi Jeremy! I have a thought for the first Oracle issue. Have you considered a solution similar to the one we use when handling non-streaming CLOBs with Oracle? I mean OracleDictionary.getClobString method: we use isEmptyLob() from Oracle API and return null if the CLOB is actually empty. Is this what you are referring to as a potential overkill?&lt;/p&gt;</comment>
                            <comment id="12775449" author="techhusky" created="Tue, 10 Nov 2009 15:30:17 +0000"  >&lt;p&gt;Hi Milosz.  Thanks for your comments.  Excellent suggestion.  It sparked a new idea that does not require messy reflection code or changing external behavior.  I&apos;m going to give it a try and will post a patch if it works out.  Stay tuned...&lt;/p&gt;</comment>
                            <comment id="12775971" author="techhusky" created="Tue, 10 Nov 2009 18:10:42 +0000"  >&lt;p&gt;I committed a partial fix for Oracle under revision 834564. With the exception of adding the ConnectionRetainMode setting to the test config, the tests pass as-is (ie. expected behavior is unchanged). I also doc&apos;d the ConnectionRetainMode requirement in the Oracle section of the manual.&lt;/p&gt;

&lt;p&gt;One potential issue may still remain. If a LOB column contains a null (ex. inserted by an external application) and OpenJPA tries to update that value a failure may still result. The cumbersome patch I submitted for OpenJPA-1249 will handle that case, but I have a more direct approach in mind that uses SQL instead of native APIs.&lt;/p&gt;</comment>
                            <comment id="12776059" author="milosz" created="Tue, 10 Nov 2009 20:15:02 +0000"  >&lt;p&gt;Well done, a small aikido-like fix in OracleDictionary &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I am currently trying to fix the PostgreSQL issues.&lt;/p&gt;</comment>
                            <comment id="12776421" author="milosz" created="Wed, 11 Nov 2009 11:46:48 +0000"  >&lt;p&gt;Using Reader with PostgreSQL is questionable because their Large Object API supports binary streams only. I was thinking of emulating Reader but the amount of changes made me be in favour of just documenting that only InputStream can be used with PostgreSQL. The Reader support could be added if demand surfaces.&lt;/p&gt;

&lt;p&gt;Another PostgreSQL quirk is similar to Oracle API problems. We cast Connection to PGConnection which fails if the Connection is wrapped, for example, by DBCP. Currently the TestInputStreamLob passes when run without pooling (e.g. from an IDE) but not with the test suite (which uses DBCP).&lt;/p&gt;

</comment>
                            <comment id="12777049" author="techhusky" created="Thu, 12 Nov 2009 16:40:20 +0000"  >&lt;p&gt;Hi Milosz.  I agree.  It my not be worth the risk and/or effort if a huge number of changes are required to support Reader, especially given there hasn&apos;t been a request to support it on PostgreSQL.  It might be a fun exercise, though.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Take a look at my patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1249&quot; title=&quot;Rework Oracle LOB support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1249&quot;&gt;OPENJPA-1249&lt;/a&gt;.  The bit of code that gets an underlying DBCP connection could be split out into a utility class and put to use for the PostgreSQL streaming support.  The patch also includes a pom update with the connection property setting required to access the underlying DBCP connection.  &lt;/p&gt;</comment>
                            <comment id="12784435" author="milosz" created="Tue, 1 Dec 2009 21:17:39 +0000"  >&lt;p&gt;I have updated PostgresDictionary with Jeremy&apos;s ideas on connection unwrapping. Now the test passes with DBCP and PostgreSQL.&lt;/p&gt;

&lt;p&gt;I will also update the user manual.&lt;/p&gt;</comment>
                            <comment id="12792994" author="milosz" created="Sun, 20 Dec 2009 14:27:15 +0000"  >&lt;p&gt;The problem with SQL Server is that an InputStream obtained from ResultSet.getBinaryStream can&apos;t be used after its result set is closed. OpenJPA closes the ResultSet before user has a chance to read from the InputStream.&lt;/p&gt;

&lt;p&gt;I am investigating these ideas:&lt;br/&gt;
1. Using ResultSet.getBlob.getBinaryStream instead of ResultSet.getBinaryStream.&lt;br/&gt;
2. Proxying the ResultSet to defer its closing.&lt;/p&gt;</comment>
                            <comment id="12794679" author="milosz" created="Sun, 27 Dec 2009 10:48:11 +0000"  >&lt;p&gt;Looking closer at MySQL reveals its limitations. When reading LOB contents, the whole contents are actually brought into memory. Chances are this can be worked around in:&lt;br/&gt;
1. MySQLDictionary.getLOBStream / getCharacterStream.&lt;br/&gt;
2. Modifying column list in SELECT.&lt;/p&gt;

&lt;p&gt;Details can be found in MySQL docs &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;. For now I have added a note on the limitation to the user manual.&lt;/p&gt;

&lt;p&gt;Not sure whehter a similar limitation exists when writing LOB contents to the database.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.1/en/connector-j-reference-implementation-notes.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dev.mysql.com/doc/refman/5.1/en/connector-j-reference-implementation-notes.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12796006" author="milosz" created="Sun, 3 Jan 2010 18:07:19 +0000"  >&lt;p&gt;Modified SQLServerDictionary to use ResultSet.getBlob.getBinaryStream (and its CLOB counterpart). Unfortunately, this poses a problem similar to the one with MySQL - when reading LOB contents, the whole contents are actually brought into memory. Added a note on the limitation to the user manual.&lt;/p&gt;

&lt;p&gt;ResultSet.getBinaryStream provides true streaming but suffers from the problem described earlier.&lt;/p&gt;

&lt;p&gt;I did not check whether streaming actually takes place when writing LOB contents to the database. Also, I tried only MS 2.0 driver.&lt;/p&gt;

&lt;p&gt;Now the LOB streaming tests pass with all 4 databases.&lt;/p&gt;</comment>
                            <comment id="12847910" author="milosz" created="Sun, 21 Mar 2010 10:27:23 +0000"  >&lt;p&gt;Resolving since the tests now pass. Further work can be continued in a new issue for post 2.0 versions.&lt;/p&gt;</comment>
                            <comment id="12873750" author="milosz" created="Mon, 31 May 2010 19:35:28 +0100"  >&lt;p&gt;The change has been back-ported to branch 1.3.x.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12433905">OPENJPA-1263</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12389721">OPENJPA-525</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433151">OPENJPA-1249</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12403679">OPENJPA-716</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12417566" name="TestReaderLob_oracle.log" size="22434" author="amy" created="Tue, 25 Aug 2009 05:00:59 +0100"/>
                            <attachment id="12416658" name="failures.txt" size="23319" author="milosz" created="Sat, 15 Aug 2009 12:07:39 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 25 Aug 2009 04:00:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161524</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt6bj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>204204</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>