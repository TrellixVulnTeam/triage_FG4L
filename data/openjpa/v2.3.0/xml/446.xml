<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:43:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-446/OPENJPA-446.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-446] Problem when setting String fields of detached objects</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-446</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;I would like to report some strange behavior with detach and merge. To me it looks like a bug.&lt;/p&gt;

&lt;p&gt;I&apos;m trying implement the following strategy:&lt;/p&gt;

&lt;p&gt;persistence context A:&lt;br/&gt;
  1. get persistent object&lt;br/&gt;
  2. detach the object&lt;br/&gt;
no persistence context:&lt;br/&gt;
  3. modify the (detached) object&lt;br/&gt;
persistence context B:&lt;br/&gt;
  4. attach (merge) the object&lt;/p&gt;

&lt;p&gt;This is quite simple and straight forward. It generally works except in one situation. When committing the merge() (step 4) an &quot;optimistic locking error&quot; is is thrown under the following condition: (step 3) a (String) field is set to the same text that it already contains but using a different String instance. In other words, when the following expressions are true:&lt;/p&gt;

&lt;p&gt;    newString.equals(oldString)&lt;br/&gt;
    newString != oldString&lt;/p&gt;

&lt;p&gt;I have written some test code that reproduces this effect (see Attachment).&lt;/p&gt;

&lt;p&gt;The tests are using the same code except for one line:&lt;/p&gt;

&lt;p&gt;Test 1 sets the String to a different one than the object contains:&lt;br/&gt;
    record.setContent(&quot;a text different than the one in the record&quot;);&lt;/p&gt;

&lt;p&gt;Test 2 sets the String to the same instance the object contains:&lt;br/&gt;
  record.setContent(record.getContent());&lt;/p&gt;

&lt;p&gt;Test 3 sets the String to the same text but as a different String instance:&lt;br/&gt;
  record.setContent(record.getContent()+&quot;&quot;);&lt;/p&gt;

&lt;p&gt; This is the result (output of the test run):&lt;br/&gt;
----------------------------------&lt;br/&gt;
Test 1: SUCCESS&lt;br/&gt;
Test 2: SUCCESS&lt;br/&gt;
Test 3: FAILED (Optimistic locking errors were detected when flushing &lt;br/&gt;
                to the data store. The following objects may have been&lt;br/&gt;
                concurrently modified in another transaction: &lt;br/&gt;
                &lt;span class=&quot;error&quot;&gt;&amp;#91;test.Record-1&amp;#93;&lt;/span&gt;)&lt;br/&gt;
----------------------------------&lt;/p&gt;

&lt;p&gt;While doing some debugging I noticed two things:&lt;/p&gt;

&lt;p&gt;1. When setting the value:&lt;/p&gt;

&lt;p&gt;Class: org.apache.openjpa.kernel.DetachedStateManager&lt;br/&gt;
Line: 555&lt;br/&gt;
Method: settingStringField()&lt;/p&gt;

&lt;p&gt;        if (cur == next || !_loaded.get(idx))&lt;br/&gt;
          return;&lt;/p&gt;

&lt;p&gt;Here the old and the new value (String) is compared with the == operator.&lt;br/&gt;
The expression can be false with the same text (but different instances). I find this interesting as it matches exacly the problematic condition. I think an .equals() would fix the issue I am having. But I suppose there is something going wrong at another place as well.&lt;/p&gt;

&lt;p&gt;2. Here is the point where execution splits into different ways when calling commit().&lt;/p&gt;

&lt;p&gt;Class: org.apache.openjpa.jdbc.kernel.AbstractUpdateManager&lt;br/&gt;
Line: 151&lt;br/&gt;
Method: populateRowManager()&lt;/p&gt;

&lt;p&gt;    } else if ((dirty = ImplHelper.getUpdateFields(sm)) != null) {&lt;/p&gt;

&lt;p&gt;In the tests that succeed &quot;ImplHelper.getUpdateFields(sm)&quot; will return a BitSet. So the condition is true.&lt;br/&gt;
In the tests that fail &quot;ImplHelper.getUpdateFields(sm)&quot; will return null. So the condition is false.&lt;/p&gt;

&lt;p&gt;Note: the problem persist with OpenJPA 1.1.0-SNAPSHOT. When run without enhancing the Record class, all tests will succeed though (printing this message &#8222;INFO   &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.Enhance - Creating subclass for &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;class test.Record&amp;#93;&lt;/span&gt;&quot;. This means that your application will be less efficient and will consume more memory than it would if you ran the OpenJPA enhancer. Additionally, lazy loading will not be available for one-to-one and many-to-one persistent attributes in types using field access; they will be loaded eagerly instead.&quot;)&lt;/p&gt;

&lt;p&gt;Regards&lt;br/&gt;
Jonas&lt;/p&gt;</description>
                <environment>OpenJPA 1.0.1&lt;br/&gt;
Java 1.5.0_13&lt;br/&gt;
MySQL Server 5.0&lt;br/&gt;
MySQL Connector Java 5.0.6</environment>
        <key id="12382814">OPENJPA-446</key>
            <summary>Problem when setting String fields of detached objects</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jop">Jonas Petersen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Nov 2007 19:50:59 +0000</created>
                <updated>Tue, 9 Mar 2010 18:32:42 +0000</updated>
                            <resolved>Tue, 20 Nov 2007 16:35:20 +0000</resolved>
                                    <version>1.0.1</version>
                                    <fixVersion>1.0.2</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>jpa</component>
                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12543657" author="jop" created="Mon, 19 Nov 2007 19:53:12 +0000"  >&lt;p&gt;Sourcecode to reproduce the issue.&lt;/p&gt;</comment>
                            <comment id="12543723" author="jop" created="Mon, 19 Nov 2007 22:55:50 +0000"  >&lt;p&gt;I have fixed the DetachedStateManager so it correctly compares the strings (as described in &quot;1. When setting the value:&quot;).&lt;/p&gt;

&lt;p&gt;I have rebuilt OpenJPA and ran all maven tests successfully.&lt;/p&gt;

&lt;p&gt;My DetachAttachTest runs all successfull as well now.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a patch.&lt;/p&gt;</comment>
                            <comment id="12543839" author="jop" created="Tue, 20 Nov 2007 10:11:00 +0000"  >&lt;p&gt;I&apos;m sorry, the patch that I posted (detach-attach-fix.patch) is bad. I&apos;m posting a proper one: detach-attach-fix-proper.patch.&lt;/p&gt;

&lt;p&gt;The problem was that it did not consider a String field set to null before setting it to another value.&lt;/p&gt;

&lt;p&gt;Maybe a TestCase checking all the different situations would be a good idea.&lt;/p&gt;</comment>
                            <comment id="12543938" author="mikedd" created="Tue, 20 Nov 2007 16:35:20 +0000"  >&lt;p&gt;The attached patch looks good, thanks Jonas!&lt;/p&gt;</comment>
                            <comment id="12544020" author="pcl" created="Tue, 20 Nov 2007 19:34:29 +0000"  >&lt;p&gt;Thanks for the debugging work on this.&lt;/p&gt;

&lt;p&gt;Is it ok for us to put the DetachAttachTest.zip test files into OpenJPA under the ASL license?&lt;/p&gt;</comment>
                            <comment id="12544116" author="jop" created="Tue, 20 Nov 2007 23:25:29 +0000"  >&lt;p&gt;Thanks for reviewing. It&apos;s fine for me if you put the DetachAttachTest.zip test files into OpenJPA under the ASL license. You may want to use the extended one that I just attached instead though. It also tests the null conditions and does some assertion for each test.&lt;/p&gt;</comment>
                            <comment id="12548322" author="sdroscher" created="Tue, 4 Dec 2007 17:52:24 +0000"  >&lt;p&gt;Any reason why the same change shouldn&apos;t be made to the settingObjectField() method of DetachedStateManager ?&lt;/p&gt;</comment>
                            <comment id="12548941" author="pcl" created="Thu, 6 Dec 2007 07:04:54 +0000"  >&lt;p&gt;I think that this patch should be applied for any non-primitive setting*Field() methods.&lt;/p&gt;</comment>
                            <comment id="12612817" author="nickcodefresh" created="Fri, 11 Jul 2008 10:35:26 +0100"  >&lt;p&gt;Can someone definately confirm that this has been fixed in v1.0.2? I&apos;m experiencing the same issue but am unable to upgrade to v1.1.0 due to an incompatability with BEA Kodo.&lt;/p&gt;

&lt;p&gt;Nick&lt;/p&gt;</comment>
                            <comment id="12612890" author="kwsutter" created="Fri, 11 Jul 2008 15:34:48 +0100"  >&lt;p&gt;Nick,&lt;br/&gt;
Two things you can look at.  One is the &quot;fix versions&quot;.  On this JIRA Issue, the 1.0.2 version is listed as being a &quot;fix version&quot;.  The other thing you can look at is the specific SVN Commits.  The changes were put into the 1.0.x release via svn revision #596737.  The 1.0.2 release was tagged at revision #628944.  So, yes, this change has been put into the 1.0.2 release.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12369932" name="DetachAttachTest-updated.zip" size="2812" author="jop" created="Tue, 20 Nov 2007 23:25:29 +0000"/>
                            <attachment id="12369812" name="DetachAttachTest.zip" size="2461" author="jop" created="Mon, 19 Nov 2007 19:53:12 +0000"/>
                            <attachment id="12369860" name="detach-attach-fix-proper.patch" size="711" author="jop" created="Tue, 20 Nov 2007 10:11:00 +0000"/>
                            <attachment id="12369829" name="detach-attach-fix.patch" size="679" author="jop" created="Mon, 19 Nov 2007 22:55:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Nov 2007 16:35:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160768</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyswlr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202630</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>