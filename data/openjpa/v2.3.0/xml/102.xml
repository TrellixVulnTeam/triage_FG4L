<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:30:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-102/OPENJPA-102.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-102] JTA transaction rollback, nonexistant instances, transactional persistence context =&gt; failures during afterCompletion() and close()</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-102</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Configuration: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;transactional persistence context&lt;/li&gt;
	&lt;li&gt;DetachState=fgs&lt;/li&gt;
	&lt;li&gt;JTA transactions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If an error causes the transaction manager to roll back the current transaction, BrokerImpl.afterCompletion() will be invoked with Status.STATUS_ROLLEDBACK. afterCompletion() will call BrokerImpl.free(), which will attempt to load the default fetch group. If there is an instance in the Broker&apos;s context that does not exist (that was looked up via EntityManager.getReference(), for example), then the code in free() will fail with an ObjectNotFoundException.&lt;/p&gt;</description>
                <environment>WebLogic Server 10.0</environment>
        <key id="12360647">OPENJPA-102</key>
            <summary>JTA transaction rollback, nonexistant instances, transactional persistence context =&gt; failures during afterCompletion() and close()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="pcl">Patrick Linskey</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Jan 2007 04:07:30 +0000</created>
                <updated>Tue, 9 Mar 2010 18:32:29 +0000</updated>
                            <resolved>Wed, 17 Jan 2007 22:17:18 +0000</resolved>
                                                    <fixVersion>0.9.7</fixVersion>
                                    <component>jpa</component>
                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12465355" author="pcl" created="Wed, 17 Jan 2007 04:18:06 +0000"  >&lt;p&gt;openjpa-detach.patch solves the described issue, but exposes another issue: an ObjectNotFoundException will be thrown during a subsequent BrokerImpl.close() call. The attached patch calls free() with Status.NO_TRANSACTION if BrokerImpl.close() is invoked.&lt;/p&gt;

&lt;p&gt;The use case at hand seems to do the following:&lt;/p&gt;

&lt;p&gt;1. UserTransaction.begin()&lt;br/&gt;
2. getReference() on a nonexistant record&lt;br/&gt;
3. close() in a session bean&lt;br/&gt;
4. UserTransaction.commit(), which fails&lt;/p&gt;

&lt;p&gt;With the patch, BrokerImpl.afterCompletion() calls BrokerImpl.free(Status.STATUS_ROLLEDBACK) from line 1789, because close had been invoked. The patch makes that free() invocation work as expected.&lt;/p&gt;

&lt;p&gt;However, close() is being invoked later on. This later invocation is probably erroneous, but currently it is causing OpenJPA to throw an exception from BrokerImpl.java:3984, because close() calls free() with Status.NO_TRANSACTION.&lt;/p&gt;

&lt;p&gt;I believe that OpenJPA should be short-circuiting close() if isClosed() returns true, or that free() should short-circuit if isClosed() returns true.&lt;/p&gt;</comment>
                            <comment id="12465519" author="pcl" created="Wed, 17 Jan 2007 19:37:36 +0000"  >&lt;p&gt;Actually my description in the prior comment is incorrect. The test case does the following:&lt;/p&gt;

&lt;p&gt;1. EntityTransaction.begin()&lt;br/&gt;
2. getReference() on nonexistent record&lt;br/&gt;
3. rollback() in a business method&lt;br/&gt;
4. EntityManager.close(), which fails while running the detach algorithm&lt;/p&gt;

&lt;p&gt;IOW, short-circuiting close() won&apos;t fix the problem, as close() has only been called once. Additionally, on further inspection, EM.close() asserts that it&apos;s open before calling broker.close(), so there will never be multiple close() invocations.&lt;/p&gt;

&lt;p&gt;The problem does not occur in a JTA context, as the persistence context is coincident with the JTA transaction in that scenario, not the lifecycle of the EntityManager.&lt;/p&gt;

&lt;p&gt;It does not seem possible to disable the detach algorithm altogether. However, further investigation indicates that this is probably happening because OpenJPA is not clearing the persistence context during JPA rollback. From section 3.3.2 of the JPA spec:&lt;/p&gt;

&lt;p&gt;&quot;For both transaction-scoped and extended persistence contexts, transaction rollback causes all pre-existing&lt;br/&gt;
managed instances and removed instances&lt;span class=&quot;error&quot;&gt;&amp;#91;15&amp;#93;&lt;/span&gt; to become detached. The instances&apos; state will be the&lt;br/&gt;
state of the instances at the point at which the transaction was rolled back. Transaction rollback typically&lt;br/&gt;
causes the persistence context to be in an inconsistent state at the point of rollback. In particular,&lt;br/&gt;
the state of version attributes and generated state (e.g., generated primary keys) may be inconsistent.&lt;br/&gt;
Instances that were formerly managed by the persistence context (including new instances that were&lt;br/&gt;
made persistent in that transaction) may therefore not be reusable in the same manner as other detached&lt;br/&gt;
objects&#8212;for example, they may fail when passed to the merge operation.&lt;span class=&quot;error&quot;&gt;&amp;#91;16&amp;#93;&lt;/span&gt;&quot;&lt;/p&gt;

&lt;p&gt;Resolving this discrepancy will address the case that I&apos;m looking at in particular, but will not address the case where the getReference() method is invoked outside a transaction but in an extended persistence context.&lt;/p&gt;</comment>
                            <comment id="12465546" author="pcl" created="Wed, 17 Jan 2007 20:24:55 +0000"  >&lt;p&gt;New approach: I am going to change OpenJPA&apos;s detach algorithms to handle failures more gracefully, and back out the patch I mentioned earlier. This will resolve the unexpected exceptions I was seeing.&lt;/p&gt;

&lt;p&gt;Separately, &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-104&quot; title=&quot;OpenJPA does not detach instances on rollback()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-104&quot;&gt;&lt;del&gt;OPENJPA-104&lt;/del&gt;&lt;/a&gt; tracks the JPA spec discrepancy.&lt;/p&gt;</comment>
                            <comment id="12465582" author="pcl" created="Wed, 17 Jan 2007 22:17:18 +0000"  >&lt;p&gt;Resolved with svn 497185.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12349055" name="openjpa-detach.patch" size="1830" author="pcl" created="Wed, 17 Jan 2007 04:09:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160439</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysz2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203030</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>