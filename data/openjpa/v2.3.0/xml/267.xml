<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:45:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-267/OPENJPA-267.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-267] MethodQL unnecessarily requires a call to declareParameters()</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-267</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;OpenJPA should be able to infer the parameters from the signature when there is no method overloading, and in the case where there is method overloading, it&apos;d be nice if OpenJPA would allow the args specification to happen inline in the method declaration.&lt;/p&gt;

&lt;p&gt;More context:&lt;/p&gt;

&lt;p&gt;On 6/26/07, e33238 &amp;lt;e33238@hotmail.com&amp;gt; wrote:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I&apos;m tracing through the code to find out what the problem was, and it seems&lt;br/&gt;
&amp;gt; that it&apos;ll work if I do this:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; OpenJPAQuery q =&lt;br/&gt;
&amp;gt; oem.createQuery(&quot;openjpa.MethodQL&quot;,&quot;com.xyz.Finder.getByName&quot;);&lt;br/&gt;
&amp;gt; q.setResultClass(Person.class);&lt;br/&gt;
&amp;gt; q.setParameter(&quot;firstName&quot;, &quot;Fred&quot;).setParameter(&quot;lastName&quot;, &quot;Lucas&quot;);&lt;br/&gt;
&amp;gt; ((QueryImpl)q).getDelegate().declareParameters(&quot;String firstName, String&lt;br/&gt;
&amp;gt; lastName&quot;); //&amp;lt;== additional line&lt;br/&gt;
&amp;gt; List results = q.getResultList();&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Now getByName() will be called correctly, with &quot;firstName&quot; and &quot;lastName&quot; in&lt;br/&gt;
&amp;gt; the &quot;params&quot; map. I&apos;m sure this is not the correct way, but I couldn&apos;t&lt;br/&gt;
&amp;gt; figure out how else I can call declareParameters(). Without calling&lt;br/&gt;
&amp;gt; declareParameters(), I&apos;ll get the ArgumentException.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12372500">OPENJPA-267</key>
            <summary>MethodQL unnecessarily requires a call to declareParameters()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="pcl">Patrick Linskey</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Jun 2007 12:50:48 +0100</created>
                <updated>Tue, 7 Aug 2007 18:55:10 +0100</updated>
                                            <version>0.9.0</version>
                    <version>0.9.6</version>
                    <version>0.9.7</version>
                                                    <component>query</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12508533" author="pcl" created="Wed, 27 Jun 2007 14:08:14 +0100"  >&lt;p&gt;My earlier summary makes no sense at all in the context of MethodQL.&lt;/p&gt;

&lt;p&gt;Digging into this further: maybe in MethodQL we should just not require parameters to be declared at all, and let the method impl do whatever param checks are necessary. Additionally, I do not believe that the result class setting should be required.&lt;/p&gt;</comment>
                            <comment id="12508543" author="pcl" created="Wed, 27 Jun 2007 14:29:57 +0100"  >&lt;p&gt;I just checked in a new test case (TestMethodQLQuery.java, r551159) to serve as a point of discussion.&lt;/p&gt;

&lt;p&gt;In my opinion, we should:&lt;/p&gt;

&lt;p&gt;1. not require parameters to be declared for MethodQL queries&lt;/p&gt;

&lt;p&gt;2. not require the result class to be specified for MethodQL queries&lt;/p&gt;

&lt;p&gt;I believe that the only value for having this data is for the query cache in the context of MethodQL, and I don&apos;t believe that we cache MethodQL queries anyways.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160595</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7kdz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>288273</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>