<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:45:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1189/OPENJPA-1189.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1189] Column names do not contain delimiters when obtained from DatabaseMetaData</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1189</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;The DatabaseMetaData returned by DB2 does not include delimiters for column names which include whitespace. This causes potential duplicate column names if we merge into an existing schema.&lt;/p&gt;

&lt;p&gt;The problem can be illustrated by running the TestManualDelimitedJoinAnnotations test twice sequentially. The first time the test is executed the database will be clean (presumably) and everything will work. Subsequent executions read the existing column information from the database (non delimited) and end up creating a duplicate column.&lt;/p&gt;

&lt;p&gt;Example stacktrace : &lt;br/&gt;
 &amp;lt;openjpa-2.0.0-SNAPSHOT-r422266:794075M nonfatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: DB2 SQL Error: SQLCODE=-104, SQLSTATE=42601, SQLERRMC=);entityCs_c id OTHER;&amp;lt;references_spec&amp;gt;, DRIVER=3.50.152 &lt;/p&gt;
{stmnt 10751758 CREATE TABLE &quot;delim id&quot;.&quot;c d&quot; (&quot;entityCs_c id&quot; INTEGER, ENTITYDS_ID INTEGER, entityCs_c id OTHER)}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=-104, state=42601&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.java:553)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.java:453)&lt;br/&gt;
       &amp;lt;snip&amp;gt;&lt;/p&gt;

&lt;p&gt;To resolve the problem we can detect a column / table / schema name which contains whitespace and add the appropriate delimiters (when the name is provided by the database). One place to make this change is in DBDictionary.newColumn() &lt;br/&gt;
    protected Column newColumn(ResultSet colMeta)&lt;br/&gt;
        throws SQLException {&lt;br/&gt;
        Column c = new Column();&lt;br/&gt;
        c.setSchemaName(colMeta.getString(&quot;TABLE_SCHEM&quot;));&lt;br/&gt;
        c.setTableName(colMeta.getString(&quot;TABLE_NAME&quot;));&lt;br/&gt;
        c.setName(colMeta.getString(&quot;COLUMN_NAME&quot;));  // detect whether we need delimiters and add them&lt;/p&gt;

&lt;p&gt;It&apos;s also worth noting that the testcase drops the offending table and then recreates it. There may be a larger issue where the metadata is cached improperly (could be DB2 specific).&lt;/p&gt;</description>
                <environment>DB2 (could exist on other databases)</environment>
        <key id="12431056">OPENJPA-1189</key>
            <summary>Column names do not contain delimiters when obtained from DatabaseMetaData</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="techhusky">Jeremy Bauer</assignee>
                                    <reporter username="mikedd">Michael Dick</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Jul 2009 18:55:55 +0100</created>
                <updated>Thu, 22 Apr 2010 21:32:56 +0100</updated>
                            <resolved>Wed, 24 Mar 2010 18:19:17 +0000</resolved>
                                    <version>2.0.0-beta</version>
                                    <fixVersion>2.0.0-beta</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12734181" author="dianner" created="Wed, 22 Jul 2009 17:28:34 +0100"  >&lt;p&gt;&amp;gt;To resolve the problem we can detect a column / table / schema name which contains whitespace and add the appropriate delimiters (when the name is provided by the database).&lt;/p&gt;

&lt;p&gt;It probably won&apos;t be this simple. There could be other characters (other than whitespace) that need delimiting. Also, there could be lowercase characters.&lt;/p&gt;</comment>
                            <comment id="12734243" author="mikedd" created="Wed, 22 Jul 2009 19:40:48 +0100"  >&lt;p&gt;Hi Dianne, &lt;/p&gt;

&lt;p&gt;I figured you&apos;d know when we need delimiters better than I do (although I&apos;m surprised that mixed case would be one of them). I imagine DBDictionary could do with a boolean needsDelimiters(String identifier) method, or String delimitIfNeeded(String identifier). A quick grep through DBDictionary didn&apos;t turn one up (I could have missed it though). &lt;/p&gt;</comment>
                            <comment id="12741916" author="dianner" created="Tue, 11 Aug 2009 16:41:02 +0100"  >&lt;p&gt;Attaching patch for review and possibly commit.&lt;/p&gt;

&lt;p&gt;This problem occurred when a column name retrieved from the DB metadata was passed as a parameter to the Table.getColumn(String name) to retrieve the Column object. The column name retrieved from the DB does not contain delimiters and this info apparently cannot be obtained. The Table object was created using input metadata from annotations and xml, and might contain delimiters for the Map keys. Therefore, the name might not be found. So, the fix is to delimit the input name if it is initially not found.&lt;/p&gt;

&lt;p&gt;Changes were made in the Table getColumn() and containsColumn() methods to take DBDictionary as a parameter, from which the DB-specific delimiter is retrieved. However, some calling methods do not currently have access to the DBDictioinary and pass in null. In this scenario, the double-quote is used as the delimiter. While this is spec-complient, this may not work for some dbs, which is not good. So, I&apos;ve opened jira &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1236&quot; title=&quot;Finish support of delimiters other than double-quotes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1236&quot;&gt;&lt;del&gt;OPENJPA-1236&lt;/del&gt;&lt;/a&gt; to handle this in the future. I suspect some chaining of changes in method signatures to allow a DBDictionary parameter will fix this.&lt;/p&gt;</comment>
                            <comment id="12849331" author="techhusky" created="Wed, 24 Mar 2010 18:19:17 +0000"  >&lt;p&gt;This issue was resolved under &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1115&quot; title=&quot;Finish support for delimited identifiers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1115&quot;&gt;&lt;del&gt;OPENJPA-1115&lt;/del&gt;&lt;/a&gt;.  The OpenJPA naming utility detects when identifiers returned from dbmd require delimiters.&lt;/p&gt;</comment>
                            <comment id="12849351" author="drwoods" created="Wed, 24 Mar 2010 18:46:30 +0000"  >&lt;p&gt;show as being fixed in 2.0.0-beta&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12416209" name="patch.txt" size="17789" author="dianner" created="Tue, 11 Aug 2009 16:41:02 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Jul 2009 16:28:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161468</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt2rb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203627</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>