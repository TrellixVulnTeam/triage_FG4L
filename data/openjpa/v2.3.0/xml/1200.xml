<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:37:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1200/OPENJPA-1200.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1200] Incorrect Entity is returned if ElementClassCriteria is not selected.</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1200</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description></description>
                <environment></environment>
        <key id="12431612">OPENJPA-1200</key>
            <summary>Incorrect Entity is returned if ElementClassCriteria is not selected.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rpalache">Ravi P Palacherla</assignee>
                                    <reporter username="rpalache">Ravi P Palacherla</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Jul 2009 18:45:50 +0100</created>
                <updated>Mon, 24 May 2010 03:56:40 +0100</updated>
                            <resolved>Fri, 21 Aug 2009 21:37:54 +0100</resolved>
                                    <version>2.0.0-M2</version>
                                    <fixVersion>1.1.1</fixVersion>
                    <fixVersion>2.0.0-M3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12736192" author="rpalache" created="Tue, 28 Jul 2009 19:15:10 +0100"  >&lt;p&gt;Attached patch contains testcase and a potential fix.&lt;/p&gt;</comment>
                            <comment id="12736198" author="rpalache" created="Tue, 28 Jul 2009 19:23:34 +0100"  >&lt;p&gt;Ref: &lt;a href=&quot;http://n2.nabble.com/ClasscastException-when-ClassCrietria-is-not-used.-td3290568.html#a3290568&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://n2.nabble.com/ClasscastException-when-ClassCrietria-is-not-used.-td3290568.html#a3290568&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have an openJPA application with following entities:&lt;/p&gt;

&lt;p&gt;&quot;Item&quot; Entity with SINGLE_TABLE inheritance strategy.&lt;br/&gt;
 DiscriminatorColumn on this ITEM_TYPE.&lt;/p&gt;

&lt;p&gt;&quot;Book&quot; and &quot;Movie&quot; entities extend &quot;Item.&quot; &lt;/p&gt;

&lt;p&gt;Book has Many to One relation with Artist.&lt;br/&gt;
Movie has Many to One relation with Artist.&lt;/p&gt;

&lt;p&gt;&quot;artist.getBooks()&quot; results in rows that contain both &quot;Book&quot; and&quot;Movie&quot;  hence I get the following classcast :&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.ClassCastException: org.apache.openjpa.enhance.model$Movie$pcsubclass &lt;/p&gt;

&lt;p&gt;I think artist.getBooks() returning Movie is a BUG and hence opened this JIRA.&lt;/p&gt;

</comment>
                            <comment id="12736436" author="rpalache" created="Wed, 29 Jul 2009 05:18:26 +0100"  >&lt;p&gt;With attached patch, TestFinderCache is failing.&lt;/p&gt;

&lt;p&gt;I will look into it and will try to fix it.&lt;/p&gt;</comment>
                            <comment id="12737196" author="rpalache" created="Thu, 30 Jul 2009 18:49:28 +0100"  >&lt;p&gt;Test case only.&lt;/p&gt;</comment>
                            <comment id="12743821" author="rpalache" created="Sun, 16 Aug 2009 09:40:11 +0100"  >&lt;p&gt;Testcase with Fix.&lt;/p&gt;</comment>
                            <comment id="12745962" author="rpalache" created="Fri, 21 Aug 2009 14:22:09 +0100"  >&lt;p&gt;Attached patch makes the fixed behavior as default ( as it is a bug).&lt;br/&gt;
If users need to have the old behavior then they can use &lt;br/&gt;
compatibility property superclassDiscriminatorStrategyByDefault=false.&lt;/p&gt;</comment>
                            <comment id="12746204" author="mikedd" created="Fri, 21 Aug 2009 21:37:54 +0100"  >&lt;p&gt;Thanks for the patch Ravi.&lt;/p&gt;</comment>
                            <comment id="12789625" author="dezzio" created="Sat, 12 Dec 2009 00:54:15 +0000"  >&lt;p&gt;Applied Ravi&apos;s patch to 1.1.x branch at rev 889871.&lt;/p&gt;</comment>
                            <comment id="12863519" author="curtisr7" created="Mon, 3 May 2010 22:20:22 +0100"  >&lt;p&gt;I know this is wayyyyy after the fact, but could you document the compatibility flag (SuperclassDiscriminatorStrategyByDefault)?&lt;/p&gt;

&lt;p&gt;The problem that was reported by &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1398&quot; title=&quot;Inheritance with Listgetter Bug&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1398&quot;&gt;OPENJPA-1398&lt;/a&gt; was fixed by this flag, but it was pretty hard to find since it isn&apos;t documented.&lt;/p&gt;</comment>
                            <comment id="12863532" author="rpalache" created="Mon, 3 May 2010 22:45:13 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I will document it.&lt;/p&gt;

&lt;p&gt;The reason I did not document it before is because the behavior seen with flag superclassDiscriminatorStrategyByDefault=false (pre-1200) is a BUG.&lt;br/&gt;
So I thought I should not document something that is a BUG.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Ravi.&lt;/p&gt;</comment>
                            <comment id="12863799" author="curtisr7" created="Tue, 4 May 2010 14:00:22 +0100"  >&lt;p&gt;Thanks Ravi!&lt;/p&gt;</comment>
                            <comment id="12863829" author="ppoddar@apache.org" created="Tue, 4 May 2010 15:48:23 +0100"  >&lt;p&gt;Not sure of this option or even the original cause as &apos;error&apos;. The domain model presented where Book and Movie both can have many Artists. And hence an Artist can be related to both Movies and Books. Thus Artist.getBooks() to return only books is the appropriate scenario for ElementClassCriteria (in fact if my memory serves me right, that is the exact reason to demonstrate the advanced capabilities of OpenJPA that domain model had been originally designed). &lt;/p&gt;

&lt;p&gt;The original use case will behave correctly if @ElementClassCriteria is used &amp;#8211; it is that simple. Otherwise Artist.getItems() will return a list of Item containing both Book and Movies. &lt;/p&gt;

&lt;p&gt;I&lt;/p&gt;</comment>
                            <comment id="12863863" author="rpalache" created="Tue, 4 May 2010 17:10:13 +0100"  >&lt;p&gt;Hi Pinaki,&lt;/p&gt;

&lt;p&gt;The issue is not about Artist.getItems().&lt;br/&gt;
The issue is about when I do Artist.getBOOKS() then movies are also returned, which I guess is an error.&lt;/p&gt;

&lt;p&gt;Book extend Item and Movie extend Item.&lt;br/&gt;
Artist has one to many relation with both Book and Movie.&lt;/p&gt;

&lt;p&gt;In this scenario, when I do artist.getBooks() then, I think, the expected behavior is to return only books and not movies.&lt;/p&gt;

&lt;p&gt;If you think it is not an error then I can switch the default value of superclassDiscriminatorStrategyByDefault to be false.&lt;br/&gt;
This will return both books and movies when I do artist.getBooks().&lt;/p&gt;

&lt;p&gt;If a user do not want to get both books and movies when artist.getBooks() is called, then they can do one of the below :&lt;/p&gt;

&lt;p&gt;1. use openJPA specific annotation ElementClassCriteria  to get only books.&lt;br/&gt;
2. use superclassDiscriminatorStrategyByDefault = true to get only books.&lt;/p&gt;

&lt;p&gt;Please suggest.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Ravi.&lt;/p&gt;</comment>
                            <comment id="12864046" author="ppoddar@apache.org" created="Tue, 4 May 2010 23:16:02 +0100"  >&lt;p&gt;        Book b = new Book(&quot;book&quot;);&lt;br/&gt;
        Movie m = new Movie(&quot;movie&quot;);&lt;br/&gt;
        Artist a = new Artist(&quot;Herman Hess&quot;);&lt;br/&gt;
        b.setArtist(a);&lt;br/&gt;
        m.setArtist(a);&lt;/p&gt;


&lt;p&gt;As the above code form the test shows, an Artist instance a is related to a Movie m and a Book b.&lt;/p&gt;

&lt;p&gt;And both Book and Movie sharing the single table have the same column name &quot;ARTIST&quot; though the relationship field is named &apos;artist1&apos; and &apos;artist&apos; respectively.&lt;/p&gt;

&lt;p&gt;Under such mapping, Artist indeed now related to both Movies and Books via the same column &apos;ARTIST&apos; &lt;/p&gt;

&lt;p&gt;I see that as an &apos;quirky&apos; usage which can be sorted out by @ElementClassCriteria to provide a semantics such that Artist.getBooks() or Artist.getMovies() still filter out the collection-valued relation by the class of its elements. &lt;/p&gt;</comment>
                            <comment id="12870490" author="rpalache" created="Mon, 24 May 2010 03:56:40 +0100"  >&lt;p&gt;I agree that ElementClassCriteria is the easy solution for this issue, but what is the purpose of having DiscriminatorColumn ?&lt;br/&gt;
Doesn&apos;t it mean Book entity is distinguished by discriminatory value BOOKS and movie by MOVIES, meaning when artist .getBooks() is called then the discriminatory value of books should only be considered ?&lt;/p&gt;

&lt;p&gt;One more reason for working on this issue is because customer claims the use case works on other JPA provides, TopLink, without the need for proprietary annotations.&lt;/p&gt;

&lt;p&gt;From your previous notes, you are suggesting to revert the changes in this JIRA and use ElementClassCriteria as a solution.&lt;br/&gt;
Also from &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1398&quot; title=&quot;Inheritance with Listgetter Bug&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1398&quot;&gt;OPENJPA-1398&lt;/a&gt;, it does not look like my changes cover all the scenarios properly.&lt;/p&gt;

&lt;p&gt;So, I think the best thing to do here is to revert all the changes that went as part of this JIRA and ask customer to use ElementClassCriteria.&lt;br/&gt;
Please confirm if my understanding is correct.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12417270" name="OPENJPA-1200_trunk.patch" size="17525" author="rpalache" created="Fri, 21 Aug 2009 14:22:09 +0100"/>
                            <attachment id="12427133" name="openJPA-1200_1.1.x.patch" size="19227" author="rpalache" created="Mon, 7 Dec 2009 05:10:30 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12463671">OPENJPA-1647</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Aug 2009 20:37:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161479</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysvjz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202460</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>