<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:42:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1062/OPENJPA-1062.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1062] Include OSGi bundle metadata</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1062</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Use the maven-bundle-plugin to generate the OSGi bundle metadata in the manifest.mf.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12424626">OPENJPA-1062</key>
            <summary>Include OSGi bundle metadata</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12424122">OPENJPA-1052</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="drwoods">Donald Woods</assignee>
                                    <reporter username="drwoods">Donald Woods</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 May 2009 19:28:06 +0100</created>
                <updated>Tue, 9 Mar 2010 18:31:14 +0000</updated>
                            <resolved>Tue, 26 May 2009 19:52:03 +0100</resolved>
                                    <version>1.2.1</version>
                    <version>1.3.0</version>
                    <version>2.0.0-M2</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-M2</fixVersion>
                                    <component>build / infrastructure</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12710895" author="drwoods" created="Tue, 19 May 2009 22:50:22 +0100"  >&lt;p&gt;Patch that corrects some maven scope settings and adds the bundle metadata to the openjpa.jar, while leaving openjpa-all.jar w/o any bundle metadata due to problems using both maven-shade-plugin and maven-bundle-plugin in the same pom.xml.&lt;/p&gt;</comment>
                            <comment id="12710920" author="clr" created="Tue, 19 May 2009 23:24:22 +0100"  >&lt;p&gt;Are you sure the scope settings are wrong in openjpa-jdbc/pom.xml? What is the compile-time dependency on postgresql, ant, and hsqldb?&lt;/p&gt;

&lt;p&gt;Similar question on openjpa-lib/pom.xml ant and log4j dependency.&lt;/p&gt;

&lt;p&gt;Similar question on openjpa-kernel/pom.xml ant and websphere dependency.&lt;/p&gt;</comment>
                            <comment id="12711118" author="drwoods" created="Wed, 20 May 2009 13:31:45 +0100"  >&lt;p&gt;Thanks for taking the time to review, which was why I attached the patch instead of just committing it.  All the junit tests passed and I could have read the dependencies wrong, but here is what I based the changes on -&lt;br/&gt;
By marking &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;, then those dependencies are only used at compile time and are not included as maven transitive dependencies, which helps maven-bundle-plugin create more accurate bundle metadata.  If you look at the openjpa/pom.xml and openpa-all/pom.xml, the list of dependencies in there are the true runtime dependencies (minus any Derby/JDBC drivers.)&lt;br/&gt;
openjpa-lib - Log4J is optional, as there are LogFactoryAdapter impls for Log4J, Commons-logging and No logging.&lt;br/&gt;
openjpa-kernel - WebSphere jars are only for compile time of WAS container integration support and are not included in the binary distribution.&lt;br/&gt;
openjpa-jdbc - Postgresql and Hsqldb are only compile time depends for the PostgresqlDictionary and HSQLDictionary classes, which must be provided at runtime by the user/app supplying the required JDBC driver.  Ant is only needed when calling the enhancer or reverse mapping tool from Ant.&lt;br/&gt;
I still want a couple more eyes to look at this (like maybe Mike) and I want to run some more tests before committing.&lt;/p&gt;</comment>
                            <comment id="12711198" author="drwoods" created="Wed, 20 May 2009 16:52:33 +0100"  >&lt;p&gt;Updated patch that only adds the bundle metadata to openjpa.jar and doesn&apos;t change any of the dependency scopes, but does add one missing openjpa.jar dependency on openjpa-slice.&lt;/p&gt;</comment>
                            <comment id="12711253" author="clr" created="Wed, 20 May 2009 18:42:57 +0100"  >&lt;p&gt;&amp;gt; By marking &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;, then those dependencies are only used at compile time and are not included as maven transitive dependencies, which helps maven-bundle-plugin create more accurate bundle metadata.&lt;/p&gt;

&lt;p&gt;My understanding is different. I understand that if you have a compile-time dependency, then it&apos;s a permanent dependency that carries through test, integration, and runtime. But I&apos;m not a maven expert.&lt;/p&gt;

&lt;p&gt;&amp;gt; openjpa-lib - Log4J is optional, as there are LogFactoryAdapter impls for Log4J, Commons-logging and No logging. &lt;/p&gt;

&lt;p&gt;So if you have a requirement that might be needed at runtime (e.g. log4j) and you can compile without it, it should be marked as provided.&lt;/p&gt;

&lt;p&gt;&amp;gt; Ant is only needed when calling the enhancer or reverse mapping tool from Ant. &lt;/p&gt;

&lt;p&gt;So ant should be a test dependency or a provided dependency.&lt;/p&gt;

&lt;p&gt;&amp;gt; openjpa-jdbc - Postgresql and Hsqldb are only compile time depends for the PostgresqlDictionary and HSQLDictionary classes&lt;/p&gt;

&lt;p&gt;This is interesting. These are open source libraries so there&apos;s no harm in including them. It just struck me as odd that we would have a hard dependency on these database-specific libraries, but upon reflection, I think you&apos;re right to include them as compile dependencies.&lt;/p&gt;

&lt;p&gt;&amp;gt; I still want a couple more eyes to look at this (like maybe Mike) and I want to run some more tests before committing.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12711278" author="drwoods" created="Wed, 20 May 2009 19:27:53 +0100"  >&lt;p&gt;Update patch that only adds the bundle metadata to openjpa.jar and install/starts in Apache Felix 1.8.0 after you install the dependencies first (which I&apos;ll doc on the wiki after committing.)&lt;/p&gt;</comment>
                            <comment id="12711390" author="mikedd" created="Wed, 20 May 2009 23:08:27 +0100"  >&lt;p&gt;&amp;gt;&amp;gt; By marking &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;, then those dependencies are only used at compile time and are not included as maven &amp;gt;&amp;gt;transitive dependencies, which helps maven-bundle-plugin create more accurate bundle metadata.&lt;/p&gt;

&lt;p&gt;&amp;gt;My understanding is different. I understand that if you have a compile-time dependency, then it&apos;s a permanent dependency that carries &amp;gt;through test, integration, and runtime. But I&apos;m not a maven expert.&lt;/p&gt;

&lt;p&gt;That&apos;s my understanding as well. &lt;/p&gt;

&lt;p&gt;Compile is the heaviest dependency type and will carry through all phases. &lt;/p&gt;

&lt;p&gt;Provided is similar to compile but the jar won&apos;t included in any artifacts downstream. It will be passed along as a transitive &apos;provided&apos; dependency though. This scope used for things that you compile against but don&apos;t want to redistribute (ie something that is part of the JDK, or the WebSphere UOW API - which is only used with WebSphere). &lt;/p&gt;

&lt;p&gt;I&apos;m not a OSGi bundling expert, but I&apos;d expect the maven-bundle-plugin to ignore &apos;provided&apos; dependencies. &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; openjpa-lib - Log4J is optional, as there are LogFactoryAdapter impls for Log4J, Commons-logging and No logging.&lt;/p&gt;

&lt;p&gt;&amp;gt; So if you have a requirement that might be needed at runtime (e.g. log4j) and you can compile without it, it should be marked as &amp;gt;provided.&lt;/p&gt;

&lt;p&gt;If we don&apos;t need a component at compile time but is required at runtime then the scope should be runtime. If it&apos;s optional at runtime then it should be test (if tests need it) or not included at all. I think log4j fits the latter category, I&apos;d have to check though. &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; Ant is only needed when calling the enhancer or reverse mapping tool from Ant.&lt;/p&gt;

&lt;p&gt;&amp;gt;So ant should be a test dependency or a provided dependency.&lt;/p&gt;

&lt;p&gt;+1 &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; openjpa-jdbc - Postgresql and Hsqldb are only compile time depends for the PostgresqlDictionary and HSQLDictionary classes&lt;/p&gt;

&lt;p&gt;&amp;gt;This is interesting. These are open source libraries so there&apos;s no harm in including them. It just struck me as odd that we would have a &amp;gt;hard dependency on these database-specific libraries, but upon reflection, I think you&apos;re right to include them as compile dependencies.&lt;/p&gt;

&lt;p&gt;I think these are really &apos;provided&apos; dependencies we &lt;b&gt;should&lt;/b&gt; only instantiate the dictionaries if we&apos;re going to connect to PostgreSQL or HSQL and I&apos;d rather not redistribute them. &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; I still want a couple more eyes to look at this (like maybe Mike) and I want to run some more tests before committing.&lt;/p&gt;

&lt;p&gt;&amp;gt;+1 &lt;/p&gt;

&lt;p&gt;The patch you committed looks good, but the scoping looks mostly correct as is (exception for log4j). &lt;/p&gt;

&lt;p&gt;What sort of tests are you running to verify the resultant bundle (forgive me if this is in another JIRA - haven&apos;t checked as close as I should)? Are there any problems that occur with &apos;provided&apos; dependencies, but don&apos;t with &apos;compile&apos; ones? &lt;/p&gt;</comment>
                            <comment id="12711601" author="drwoods" created="Thu, 21 May 2009 13:46:53 +0100"  >&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; By marking &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;, then those dependencies are only used at compile time and are not included as maven &amp;gt;&amp;gt;transitive dependencies, which helps maven-bundle-plugin create more accurate bundle metadata.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; My understanding is different. I understand that if you have a compile-time dependency, then it&apos;s a permanent dependency that carries &amp;gt;through test, integration, and runtime. But I&apos;m not a maven expert.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; That&apos;s my understanding as well. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Compile is the heaviest dependency type and will carry through all phases. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Provided is similar to compile but the jar won&apos;t included in any artifacts downstream. It will be passed along as a transitive &apos;provided&apos; dependency though. This scope used for things that you compile against but don&apos;t want to redistribute (ie something that is part of the JDK, or the WebSphere UOW API - which is only used with WebSphere). &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I&apos;m not a OSGi bundling expert, but I&apos;d expect the maven-bundle-plugin to ignore &apos;provided&apos; dependencies. &lt;/p&gt;

&lt;p&gt;Unfortunately, the m-b-p is using code dependencies (package imports) over maven scopes, so I ended up having to mark the optional/provided dependencies as do not import.&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; openjpa-lib - Log4J is optional, as there are LogFactoryAdapter impls for Log4J, Commons-logging and No logging.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; So if you have a requirement that might be needed at runtime (e.g. log4j) and you can compile without it, it should be marked as &amp;gt;provided.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; If we don&apos;t need a component at compile time but is required at runtime then the scope should be runtime. If it&apos;s optional at runtime then it should be test (if tests need it) or not included at all. I think log4j fits the latter category, I&apos;d have to check though. &lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;log4j is required at compile time but optional at runtime, so I&apos;ll update it to provided.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; Ant is only needed when calling the enhancer or reverse mapping tool from Ant.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; So ant should be a test dependency or a provided dependency.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; +1 &lt;/p&gt;

&lt;p&gt;Ant is already marked as provided, so no changes needed there.&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; openjpa-jdbc - Postgresql and Hsqldb are only compile time depends for the PostgresqlDictionary and HSQLDictionary classes&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; This is interesting. These are open source libraries so there&apos;s no harm in including them. It just struck me as odd that we would have a &amp;gt;hard dependency on these database-specific libraries, but upon reflection, I think you&apos;re right to include them as compile dependencies.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I think these are really &apos;provided&apos; dependencies we &lt;b&gt;should&lt;/b&gt; only instantiate the dictionaries if we&apos;re going to connect to PostgreSQL or HSQL and I&apos;d rather not redistribute them. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; I still want a couple more eyes to look at this (like maybe Mike) and I want to run some more tests before committing.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; +1 &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; The patch you committed looks good, but the scoping looks mostly correct as is (exception for log4j). &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; What sort of tests are you running to verify the resultant bundle (forgive me if this is in another JIRA - haven&apos;t checked as close as I should)? Are there any problems that occur with &apos;provided&apos; dependencies, but don&apos;t with &apos;compile&apos; ones? &lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;I&apos;ve been using visual inspection of the created MANIFEST.MF, along with install/start the bundle in Apache Felix, to see which bundle dependencies are being marked as required imports versus what we expect at runtime.&lt;/p&gt;

&lt;p&gt;Thanks for reviewing and helping with the scope settings.&lt;/p&gt;</comment>
                            <comment id="12711658" author="mikedd" created="Thu, 21 May 2009 16:45:28 +0100"  >&lt;p&gt;&amp;gt;Unfortunately, the m-b-p is using code dependencies (package imports) over maven scopes, so I ended up having to mark the optional/provided dependencies as do not import.&lt;/p&gt;

&lt;p&gt;That&apos;s unfortunate, might be a bug in m-b-p or at least mentioning to them.. &lt;/p&gt;

&lt;p&gt;Could we roll some validation with Apache Felix into the openjpa-integration module, or would the new openjpa-all be the right place? &lt;/p&gt;</comment>
                            <comment id="12711661" author="drwoods" created="Thu, 21 May 2009 16:55:15 +0100"  >&lt;p&gt;&amp;gt; Could we roll some validation with Apache Felix into the openjpa-integration module, or would the new openjpa-all be the right place?&lt;/p&gt;

&lt;p&gt;Already working on it, as a new openjpa-integration/osgi-itest module.  Taking longer than expected, due to the complex setup required to run junits using Felix, but I&apos;m close....&lt;/p&gt;</comment>
                            <comment id="12712121" author="drwoods" created="Fri, 22 May 2009 15:49:56 +0100"  >&lt;p&gt;Patch of the OSGi integration tests, which still need some more work, but wanted to capture them here and check-in to trunk, so I can switch back to &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1068&quot; title=&quot;Support Bean Validation: Entity validation upon lifecycle events&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1068&quot;&gt;&lt;del&gt;OPENJPA-1068&lt;/del&gt;&lt;/a&gt; for now...&lt;/p&gt;</comment>
                            <comment id="12713612" author="ppoddar@apache.org" created="Wed, 27 May 2009 16:52:00 +0100"  >&lt;p&gt;This change has modified OpenJPA examples to bring in OSGi dependency. Building examples now requires felix.&lt;br/&gt;
Given that the examples are user visible artifacts &amp;#8211; have these actions been discussed before being implemented?&lt;/p&gt;</comment>
                            <comment id="12713621" author="clr" created="Wed, 27 May 2009 17:07:12 +0100"  >&lt;p&gt;&amp;gt; This change has modified OpenJPA examples to bring in OSGi dependency. Building examples now requires felix. &lt;/p&gt;

&lt;p&gt;I have no objection to packaging the examples using Felix. But I do agree with Pinaki and object to modifying the simple example to depend on Felix.&lt;/p&gt;

&lt;p&gt;I suggest a new example program that shows how to integrate Felix if users want to do that.&lt;/p&gt;</comment>
                            <comment id="12713670" author="drwoods" created="Wed, 27 May 2009 19:16:52 +0100"  >&lt;p&gt;Agree.  I&apos;m backing out the changes from openjpa-example and will use &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1101&quot; title=&quot;OSGi Integration tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1101&quot;&gt;&lt;del&gt;OPENJPA-1101&lt;/del&gt;&lt;/a&gt; to create a OSGi exmaple for integration testing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12408270">OPENJPA-767</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12426375">OPENJPA-1101</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12427049">OPENJPA-1117</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12408607" name="OPENJPA-1062-bundle_only.patch" size="6657" author="drwoods" created="Wed, 20 May 2009 19:27:53 +0100"/>
                            <attachment id="12408596" name="OPENJPA-1062-bundle_only.patch" size="6551" author="drwoods" created="Wed, 20 May 2009 16:52:33 +0100"/>
                            <attachment id="12408810" name="OPENJPA-1062-itests.patch" size="27448" author="drwoods" created="Fri, 22 May 2009 15:49:56 +0100"/>
                            <attachment id="12408519" name="OPENJPA-1062.patch" size="8270" author="drwoods" created="Tue, 19 May 2009 22:50:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 19 May 2009 22:24:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161353</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt3xr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203818</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>