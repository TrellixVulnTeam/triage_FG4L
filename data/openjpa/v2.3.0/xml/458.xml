<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:30:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-458/OPENJPA-458.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-458] OpenJPA doesn&apos;t throw standard JPA exceptions</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-458</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;OpenJPA doesn&apos;t throw standard JPA exceptions in the case of failure to persist or commit. &lt;/p&gt;

&lt;p&gt;For example, the JPA spec states that the EntityExistsException is thrown by the persistence provider when EntityManager.persist(Object) is called and the entity already exists. &lt;/p&gt;

&lt;p&gt;However, the OpenJPA never raises the EntityExistsException, instead raises RollbackException.&lt;/p&gt;

&lt;p&gt;In order to produce the issue, just take the hellojpa example comes with the OpenJPA distro. and modify Message.java to make &lt;br/&gt;
variable message an ID (original Message class uses timestamp as ID, just change the ID to be message variable for the purpose of  reproducing the issue explained here) : &lt;br/&gt;
   @Id&lt;br/&gt;
    private String message;&lt;/p&gt;

&lt;p&gt;Then run the hellojpa after this very simple modification, twice. Second execution fails because of duplicate key. The stack trace is captured below and notice that there is no  EntityExistsException in the stack trace at all. &lt;/p&gt;

&lt;p&gt;Because of this, the caller of the jpa objects cannot differenciate EntityExistsException from any other exception and for example the GUI cleints cannot display meaningful error code to reflect exactly what happend. &lt;/p&gt;

&lt;p&gt;Here is the stack trace :&lt;/p&gt;

&lt;p&gt;Buildfile: D:\apache-openjpa-1.0.0\examples\hellojpa\build.xml&lt;br/&gt;
pre-compile:&lt;br/&gt;
compile:&lt;br/&gt;
run:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 3063  hellojpa  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.SQL - &amp;lt;t 26760685, conn 3238031&amp;gt; executing prepstmnt 28409161 INSERT INTO Message (message, created, id) VALUES (?, ?, ?) &lt;span class=&quot;error&quot;&gt;&amp;#91;params=(String) Hello Persistence!, (Timestamp) 2007-12-03 15:59:24.663, (long) 1196715564663&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 3157  hellojpa  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.SQL - &amp;lt;t 26760685, conn 3238031&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;94 ms&amp;#93;&lt;/span&gt; spent&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; Exception in thread &quot;main&quot; &amp;lt;openjpa-1.0.0-r420667:568756 fatal store error&amp;gt; org.apache.openjpa.persistence.RollbackException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.persistence.EntityManagerImpl.commit(EntityManagerImpl.java:419)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at hellojpa.Main.main(Main.java:53)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; Caused by: &amp;lt;openjpa-1.0.0-r420667:568756 fatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.BrokerImpl.newFlushException(BrokerImpl.java:2099)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:1946)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.BrokerImpl.flushSafe(BrokerImpl.java:1844)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.BrokerImpl.beforeCompletion(BrokerImpl.java:1762)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.LocalManagedRuntime.commit(LocalManagedRuntime.java:81)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.BrokerImpl.commit(BrokerImpl.java:1292)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.DelegatingBroker.commit(DelegatingBroker.java:861)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.persistence.EntityManagerImpl.commit(EntityManagerImpl.java:408)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	... 1 more&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; Caused by: &amp;lt;openjpa-1.0.0-r420667:568756 nonfatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL071203035857400&apos; defined on &apos;MESSAGE&apos;. &lt;/p&gt;
{prepstmnt 28409161 INSERT INTO Message (message, created, id) VALUES (?, ?, ?) [params=(String) Hello Persistence!, (Timestamp) 2007-12-03 15:59:24.663, (long) 1196715564663]}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=20000, state=23505&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; FailedObject: hellojpa.Message@89e2f1&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(DBDictionary.java:3849)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:97)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:67)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushInternal(PreparedStatementManagerImpl.java:108)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flush(PreparedStatementManagerImpl.java:73)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.flush(ConstraintUpdateManager.java:543)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.flush(ConstraintUpdateManager.java:105)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(AbstractUpdateManager.java:89)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(AbstractUpdateManager.java:72)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager.flush(JDBCStoreManager.java:514)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.kernel.DelegatingStoreManager.flush(DelegatingStoreManager.java:130)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	... 8 more&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; Caused by: org.apache.openjpa.lib.jdbc.ReportingSQLException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL071203035857400&apos; defined on &apos;MESSAGE&apos;. &lt;/p&gt;
{prepstmnt 28409161 INSERT INTO Message (message, created, id) VALUES (?, ?, ?) [params=(String) Hello Persistence!, (Timestamp) 2007-12-03 15:59:24.663, (long) 1196715564663]}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=20000, state=23505&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(LoggingConnectionDecorator.java:192)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.access$800(LoggingConnectionDecorator.java:57)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection$LoggingPreparedStatement.executeUpdate(LoggingConnectionDecorator.java:858)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:269)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement.executeUpdate(JDBCStoreManager.java:1363)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushInternal(PreparedStatementManagerImpl.java:97)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	... 15 more&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;br/&gt;
D:\apache-openjpa-1.0.0\examples\build.xml:84: Java returned: 1&lt;/p&gt;

&lt;p&gt;Total time: 6 seconds&lt;/p&gt;






</description>
                <environment>OpenJPA 1.0.0&lt;br/&gt;
Windows</environment>
        <key id="12383824">OPENJPA-458</key>
            <summary>OpenJPA doesn&apos;t throw standard JPA exceptions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ppoddar@apache.org">Pinaki Poddar</assignee>
                                    <reporter username="onural@nortel.com">Gul Onural</reporter>
                        <labels>
                    </labels>
                <created>Mon, 3 Dec 2007 21:47:17 +0000</created>
                <updated>Tue, 9 Mar 2010 18:32:42 +0000</updated>
                            <resolved>Wed, 16 Jul 2008 03:37:09 +0100</resolved>
                                    <version>1.0.1</version>
                                    <fixVersion>1.2.0</fixVersion>
                                    <component>jpa</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12605702" author="mikedd" created="Tue, 17 Jun 2008 20:59:54 +0100"  >&lt;p&gt;Technically this is allowed in the JPA spec  :&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Make an instance managed and persistent.&lt;/li&gt;
	&lt;li&gt;@param entity&lt;/li&gt;
	&lt;li&gt;@throws EntityExistsException if the entity already exists.&lt;/li&gt;
	&lt;li&gt;(The EntityExistsException may be thrown when the persist&lt;/li&gt;
	&lt;li&gt;operation is invoked, or the EntityExistsException or&lt;/li&gt;
	&lt;li&gt;another PersistenceException may be thrown at flush or&lt;/li&gt;
	&lt;li&gt;commit time.)&lt;/li&gt;
	&lt;li&gt;@throws IllegalArgumentException if not an entity&lt;/li&gt;
	&lt;li&gt;@throws TransactionRequiredException if invoked on a&lt;/li&gt;
	&lt;li&gt;container-managed entity manager of type&lt;/li&gt;
	&lt;li&gt;PersistenceContextType.TRANSACTION and there is&lt;/li&gt;
	&lt;li&gt;no transaction.&lt;br/&gt;
*/&lt;br/&gt;
public void persist(Object entity);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note that we have the option of throwing an EntityExistsException or another PersistenceException (RollbackException qualifies here) at commit / flush time. &lt;/p&gt;

&lt;p&gt;I agree that it isn&apos;t very friendly though. The trick is that there isn&apos;t a universal SQLState that indicates we&apos;ve received a duplicate key exception. One way to detect this condition is to maintain a list of known dup key sqlstates for each DB. Keeping the list up to date is a bit of a hassle, but it would improve the user experience.&lt;/p&gt;

&lt;p&gt;Since we&apos;re unlikely to get all the known dup key states it&apos;d be nice to be able to update the list via the configuration. Ie : &lt;br/&gt;
&amp;lt;property name=&quot;openjpa.jdbc.DBDictionary&quot; value=&quot;derby(dupKeyStates=23505,23504,23503...)&quot;/&amp;gt; &amp;lt;!-- except the first one these aren&apos;t accurate --&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12606161" author="ppoddar@apache.org" created="Thu, 19 Jun 2008 01:56:45 +0100"  >&lt;p&gt;Introduced a file-based configuration &quot;sql-error-state-codes.xml&quot; to narrow down the SQL exceptions. Michael is right about each database/JDBC driver throwing their own error codes on the same/similar error (e.g. DuplicateKeyException). The content of &quot;sql-error-state-codes.xml&quot; is error codes for each database we support categorized into the same subtypes of StoreException. The error codes in this file is currently gleaned from a similar file supplied in Spring framework. &lt;/p&gt;

&lt;p&gt;Also because of &lt;b&gt;when&lt;/b&gt; an exception is raised can be different than &lt;b&gt;when&lt;/b&gt; user called a method (for example, an EntityExistsException can be raised at commit time and not when user called em.persist(new Entity()), the real exception is often wrapped in a javax.persistence.Rollback or generic javax.persistence.PersistenceException. &lt;/p&gt;
</comment>
                            <comment id="12606162" author="ppoddar@apache.org" created="Thu, 19 Jun 2008 01:57:09 +0100"  >&lt;p&gt;It may be useful for people to take a look at &quot;sql-error-state-codes.xml&quot; and help to populate it with error codes of specific databases. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12384082">OPENJPA-462</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 17 Jun 2008 19:59:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160779</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysqmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201663</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>