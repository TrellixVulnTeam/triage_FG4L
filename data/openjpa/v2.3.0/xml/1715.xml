<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:35:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1715/OPENJPA-1715.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1715] OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1715</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;For the following JPQL (According to JPA sepcification v2.0, section 4.9, it is legal to use result variables in the order by clause):&lt;/p&gt;

&lt;p&gt;select &lt;em&gt;v&lt;/em&gt;.id &lt;em&gt;r0, sum(_v0&lt;/em&gt;.score) &lt;em&gt;r1 from Stall _v&lt;/em&gt; left join &lt;em&gt;v&lt;/em&gt;.scores &lt;em&gt;v0&lt;/em&gt; where &lt;em&gt;v&lt;/em&gt;.deleted = :&lt;em&gt;p0&lt;/em&gt; and &lt;em&gt;v&lt;/em&gt;.market = :&lt;em&gt;p1&lt;/em&gt; group by &lt;em&gt;v&lt;/em&gt;.id order by _r1 desc, _r0&lt;/p&gt;

&lt;p&gt;but OpenJPA generates a wrong SQL as following:&lt;/p&gt;

&lt;p&gt;SELECT t0.id AS c0, SUM(t1.score) AS _r1 AS c1 FROM stalls t0, scores t1 WHERE (t0.deleted = ? AND t0.market = ? AND 1 = 1) AND t0.id = t1.stall&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/add.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; GROUP BY t0.id ORDER BY _r1 DESC, t0.id ASC&lt;/p&gt;

&lt;p&gt;The second result item in the select clause has 2 aliases specified: &quot;SUM(t1.score) AS _r1 AS c1&quot;, which is obviously not acceptable by the underlining database.&lt;/p&gt;

&lt;p&gt;Additional question:&lt;br/&gt;
How can i order NULL values, like the behavior achieved by using Oracle &quot;ORDER BY SUM(t1.score) DESC NULLS LAST&quot;, by using JPQL?&lt;/p&gt;</description>
                <environment>OpenJAP 2.0&lt;br/&gt;
WebSphere 6.1&lt;br/&gt;
Oracle 9i</environment>
        <key id="12468346">OPENJPA-1715</key>
            <summary>OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="4" iconUrl="https://issues.apache.org/jira/images/icons/statuses/reopened.png" description="This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.">Reopened</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="fancy">Catalina Wei</assignee>
                                    <reporter username="azuo_lee">Azuo Lee</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Jul 2010 11:22:31 +0100</created>
                <updated>Mon, 27 Jun 2011 07:11:55 +0100</updated>
                                            <version>2.0.0</version>
                    <version>2.0.1</version>
                    <version>2.0.2</version>
                                    <fixVersion>2.1.0</fixVersion>
                                    <component>sql</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12884871" author="fancy" created="Sat, 3 Jul 2010 01:26:38 +0100"  >&lt;p&gt;Azuo,&lt;br/&gt;
(1).  This problem seems already fixed, because I was not able to recreate the problem using openjpa branch 2.0.x nor trunk level code.&lt;br/&gt;
Could you extract code from svn and build  openjpa-2.0.1-SNAPSHOT.jar  and give it a try ?&lt;/p&gt;

&lt;p&gt;Here is a JPQL string which is similar to your JPQL which worked under 2.0.x  and  trunk level code.&lt;/p&gt;

&lt;p&gt;     3875  Test  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.Query - Executing query: SELECT c.name as name, SUM(c.age) as sage   FROM CompUser c group by c.name order by sage desc, name&lt;br/&gt;
     3890  Test TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.SQL - &amp;lt;t 13079028, conn 22694519&amp;gt; executing prepstmnt 15922565 SELECT t0.name, SUM(t0.age) AS sage FROM CompUser t0 GROUP BY t0.name ORDER BY sage DESC, t0.name ASC&lt;/p&gt;

&lt;p&gt;(2). Order by &quot;NULLS LAST&quot;  is not supported in OpenJPA.&lt;br/&gt;
Your workaround is to use DESC or ASC depending on NULL is ordered high or not to get the right order as you intended to. Some database backends consider NULL is  higher than non-null values; Oracle is one of them.&lt;/p&gt;


&lt;p&gt;Catalina Wei&lt;/p&gt;</comment>
                            <comment id="12885906" author="azuo_lee" created="Wed, 7 Jul 2010 11:02:34 +0100"  >&lt;p&gt;Thanks for your kind reply and sorry for my incomplete description. The complete code is as following:&lt;/p&gt;

&lt;p&gt;String jpql = &quot;select &lt;em&gt;v&lt;/em&gt;.id r0, sum(&lt;em&gt;v0&lt;/em&gt;.score) r1 from Stall &lt;em&gt;v&lt;/em&gt; left join &lt;em&gt;v&lt;/em&gt;.scores &lt;em&gt;v0&lt;/em&gt; where &lt;em&gt;v&lt;/em&gt;.deleted = :&lt;em&gt;p0&lt;/em&gt; and &lt;em&gt;v&lt;/em&gt;.market = :&lt;em&gt;p1&lt;/em&gt; group by &lt;em&gt;v&lt;/em&gt;.id order by r1 desc, r0&quot;;&lt;br/&gt;
Query q = entityManager.createQuery(jpql);&lt;br/&gt;
q.setParameter(&quot;&lt;em&gt;p0&lt;/em&gt;&quot;, Boolean.FALSE);&lt;br/&gt;
q.setParameter(&quot;&lt;em&gt;p1&lt;/em&gt;&quot;, id);&lt;br/&gt;
q.setFirstResult(startRow + 1);&lt;br/&gt;
q.setMaxResults(maxRows);&lt;br/&gt;
List results = q.getResultList();&lt;/p&gt;

&lt;p&gt;There will be no problem if I comment out &quot;q.setFirstResult&quot; and &quot;q.setMaxResults&quot; calls, but if not, the problem occurs, and OpenJPA generates the following wrong SQL:&lt;/p&gt;

&lt;p&gt;SELECT * FROM (SELECT r.*, ROWNUM RNUM FROM (SELECT t0.id AS c0, SUM(t1.score) AS r1 AS c1 FROM stalls t0, scores t1 WHERE (t0.deleted = ? AND t0.market = ? AND 1 = 1) AND t0.id = t1.stall&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/add.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; GROUP BY t0.id ORDER BY r1 DESC, t0.id ASC) r WHERE ROWNUM &amp;lt;= ?) WHERE RNUM &amp;gt; ?&lt;/p&gt;</comment>
                            <comment id="12885914" author="azuo_lee" created="Wed, 7 Jul 2010 11:19:58 +0100"  >&lt;p&gt;Maybe the problem is caused by some code in method &quot;org.apache.openjpa.jdbc.sql.OracleDictionary.getSelects(Select, boolean, boolean)&quot;, which introduces new aliases to the existing select clause, if the select uses joins and requires subselects to select a proper range.&lt;/p&gt;

&lt;p&gt;Hope this can be fixed.&lt;/p&gt;</comment>
                            <comment id="12886021" author="fancy" created="Wed, 7 Jul 2010 19:22:13 +0100"  >&lt;p&gt;Azuo,&lt;br/&gt;
This problem can not be reproduced with trunk level and 2.0.x branch code.&lt;br/&gt;
I have included a test case &apos;testAggregateResultVariable() in TestJPQLScalarExpressions, and checked in.&lt;br/&gt;
Could you pick up 2.0.1 or 2.1.0  jar  from nightly snapshots and give it a try ?&lt;/p&gt;

&lt;p&gt;Catalina&lt;/p&gt;</comment>
                            <comment id="12886298" author="azuo_lee" created="Thu, 8 Jul 2010 10:50:25 +0100"  >&lt;p&gt;I&apos;m currently using openjpa-2.1.0-SNAPSHOT.jar, and the problem is still there.&lt;/p&gt;

&lt;p&gt;I think the problem can not be reproduced by the test case because it does not involve any JOINs.&lt;/p&gt;

&lt;p&gt;After my test, the problem occurs only if all of the following conditions are met:&lt;br/&gt;
1. Entity A has a collection property (e.g., &quot;bs&quot;) which references entity B (A and B has one-to-many association);&lt;br/&gt;
2. the from clause is based on A, and left joins to B (e.g., &quot;from A as a left join a.bs as b&quot;);&lt;br/&gt;
3. there exists a result variable which references an aggregate of some property of B (e.g., &quot;select avg(b.age) as bage&quot;);&lt;br/&gt;
4. group by A and order by the result variable (e.g., &quot;group by a.id order by bage&quot;);&lt;br/&gt;
5. setFirstResult() and setMaxResults() are used;&lt;br/&gt;
6. the underlining database is Oracle. &lt;/p&gt;</comment>
                            <comment id="12886917" author="fancy" created="Fri, 9 Jul 2010 23:10:57 +0100"  >&lt;p&gt;Azuo, &lt;br/&gt;
 Thank you very much, I got the problem reproduced.&lt;br/&gt;
Fix has checked in under trunk.&lt;/p&gt;

</comment>
                            <comment id="12912525" author="mikedd" created="Mon, 20 Sep 2010 16:39:59 +0100"  >&lt;p&gt;Closing issues which have been resolved for some time. If the problem persists, please reopen. &lt;/p&gt;</comment>
                            <comment id="13048643" author="azuo_lee" created="Mon, 13 Jun 2011 17:43:39 +0100"  >&lt;p&gt;I&apos;m afraid the issure is not fixed in 2.0.x versions, but i have to use OpenJPA with websphere 6.1 which does not support 2.1.x versions.&lt;/p&gt;</comment>
                            <comment id="13055349" author="azuo_lee" created="Mon, 27 Jun 2011 07:11:55 +0100"  >&lt;p&gt;Could any ASF user please copy the code related to this issure from trunk to branch 2.0.x ?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 3 Jul 2010 00:26:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>69935</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7o9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>288901</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>