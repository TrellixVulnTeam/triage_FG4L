<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:36:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-61/OPENJPA-61.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-61] Missing usage of TransactionSynchronizationRegistry</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-61</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;A discussion on the dev mailing list indicates that OpenJPA currently does not utilize the TransactionSynchronizationRegistry.  Although OpenJPA does provide other means of finding and accessing the various TransactionManagers, we should update OpenJPA to use the standard interfaces.  Following are the two notes on this subject...&lt;/p&gt;

&lt;p&gt;========================================================================================		&lt;br/&gt;
o  David Jencks 	&amp;lt;david_jencks@yahoo.com&amp;gt; to open-jpa-dev 	 More options	  Sep 27 (19 hours ago)&lt;br/&gt;
I&apos;m trying to get openjpa running in geronimo and wonder how openjpa&lt;br/&gt;
locates the TransactionSynchronizationRegistry.  Grep&apos;ing for&lt;br/&gt;
TransactionSynchronizationRegistry I don&apos;t see it used anywhere in&lt;br/&gt;
the code base.  What am I missing?&lt;/p&gt;

&lt;p&gt;thanks&lt;br/&gt;
david jencks&lt;br/&gt;
========================================================================================&lt;br/&gt;
o  Marc Prud&apos;hommeaux 	to open-jpa-dev	 More options	  Sep 27 (19 hours ago)&lt;br/&gt;
David-&lt;/p&gt;

&lt;p&gt;We don&apos;t use TransactionSynchronizationRegistry (not yet, at least).&lt;br/&gt;
Instead, we manually locate the TransactionManager via appserver-&lt;br/&gt;
specific heuristics defined in openjpa-kernel/src/main/java/org/&lt;br/&gt;
apache/openjpa/ee/AutomaticManagedRuntime.java&lt;/p&gt;

&lt;p&gt;If the Geronimo TransactionManager is accessible from JNDI or some&lt;br/&gt;
method invocation, you can just add it into AutomaticManagedRuntime&lt;br/&gt;
as a default (you can test it out by specifying the&lt;br/&gt;
&quot;openjpa.ManagedRuntime&quot; property to &quot;jndi&lt;br/&gt;
(TransactionManagerName=java:/GeronimoJNDINameForTransactionManager)&quot;.&lt;/p&gt;

&lt;p&gt;We may add support for integration via&lt;br/&gt;
TransactionSynchronizationRegistry in the future, but the fact that&lt;br/&gt;
it doesn&apos;t provide support for accessing the current Transaction&lt;br/&gt;
would mean that we would need to rework some OpenJPA internals.&lt;br/&gt;
========================================================================================&lt;/p&gt;</description>
                <environment></environment>
        <key id="12351985">OPENJPA-61</key>
            <summary>Missing usage of TransactionSynchronizationRegistry</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kwsutter">Kevin Sutter</assignee>
                                    <reporter username="kwsutter">Kevin Sutter</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Sep 2006 14:29:24 +0100</created>
                <updated>Tue, 31 Jul 2007 19:56:00 +0100</updated>
                            <resolved>Tue, 26 Jun 2007 19:26:17 +0100</resolved>
                                                    <fixVersion>1.0.0</fixVersion>
                                    <component>jdbc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12443877" author="kwsutter" created="Fri, 20 Oct 2006 17:09:01 +0100"  >&lt;p&gt;It&apos;s turning out that we have two problems to resolve via this defect.  The first (more immediate) problem is to remove the usage of the internal WebSphere API usage.  Currently, OpenJPA is using one of three API&apos;s to get access to the WebSphere TransactionManager.  These API&apos;s were never meant to be used by applications or other persistence mechanisms.  The API&apos;s in question are:&lt;/p&gt;

&lt;p&gt;        &quot;com.ibm.ejs.jts.jta.JTSXA.getTransactionManager&quot;&lt;br/&gt;
        &quot;com.ibm.ejs.jts.jta.TransactionManagerFactory.getTransactionManager&quot;&lt;br/&gt;
        &quot;com.ibm.ws.Transaction.TransactionManagerFactory.getTransactionManager&quot;&lt;/p&gt;

&lt;p&gt;Instead, the preferred (public, documented) method of interfacing with the WebSphere TransactionManager is via the&lt;br/&gt;
ExtendedJTATransaction interface.  This provides similar access to TM-like functions without opening direct access to the TM, which could possibly cause integrity issues.  This will involve looking up the java:/comp/websphere/ExtendedJTATransaction object, and then using this object to register for synchronization (which also uses a websphere-specific interface, to protect the innocent).&lt;/p&gt;

&lt;p&gt;That&apos;s the first step.  We need to do this first so that we can get WebSphere&apos;s buy-in of the OpenJPA project.&lt;/p&gt;

&lt;p&gt;The follow-on issue is to introduce the usage of the Java EE 5 feature for the TransactionSynchronizationRegistry.  This will standardize the persistence provider&apos;s access to TM&apos;s across all Java EE 5 application servers.  We will leave the other mechanisms in place for non-Java EE 5 compliant application servers, but the TransactionSynchronizationRegistry will be the first option to try.  Once we get the first item complete (using the WebSphere interfaces), this item should follow shortly.&lt;/p&gt;

&lt;p&gt;Please comment with any questions or concerns with this approach.  Thanks.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12443882" author="kwsutter" created="Fri, 20 Oct 2006 17:15:05 +0100"  >&lt;p&gt;Question:  From a pure JPA perspective, you would need WebSphere v6.1 Application Server in order to use OpenJPA within a WebSphere container (at a minimum).  This is due to the requirement of Java SE 5, which was first available in WAS v6.1.  So, if the use of the proper ExtendedJTATransaction interface was limited to JPA, then we could remove the other three internal API references.  But, since this OpenJPA kernel is also used by Kodo&apos;s JDO support, what levels of the WebSphere runtime need to be supported?  The ExtendedJTATransaction interface was introduced in WAS v5.0.2.  Since WAS v4.x is out of service, do we need to leave the three internal API references in the code base?  Or, can these be removed once we get the ExtendedJTATransaction processing committed?&lt;/p&gt;</comment>
                            <comment id="12443894" author="pcl" created="Fri, 20 Oct 2006 17:45:02 +0100"  >&lt;p&gt;I&apos;d say that we (OpenJPA) should not worry about the older versions &amp;#8211; we (BEA) will just need to add the appropriate logic in Kodo to handle the older versions of WebSphere.&lt;/p&gt;</comment>
                            <comment id="12490753" author="mprudhom" created="Sun, 22 Apr 2007 22:24:25 +0100"  >&lt;p&gt;The attached patch might work. It contains a new RegistryManagedRuntime class that just uses a TransactionManager facade around a TransactionSynchronizationRegistry. This will allow us to use the standard TransactionSynchronizationRegistry interface without breaking the ManagedRuntime contracts. The only shortcoming is that direct control over the Transaction will fail (since TransactionSynchronizationRegistry doesn&apos;t provide direct access to the current Transaction).&lt;/p&gt;

&lt;p&gt;Note also that this patch will require us to update our JTA dependency from geronimo-jta_1.0.1B_spec to geronimo-jta_1.1_spec. I don&apos;t envision that being a problem, since it should be backwards-compatible.&lt;/p&gt;

&lt;p&gt;I will need someone who has access to a container that supports the TransactionSynchronizationRegistry interface to test this out before we can commit it.&lt;/p&gt;</comment>
                            <comment id="12491409" author="mikedd" created="Tue, 24 Apr 2007 20:26:00 +0100"  >&lt;p&gt;Marc, I started testing this with the WebSphere EJB3 feature pack. So far I haven&apos;t found any bugs, but I&apos;ve really only run a few simple tests. I&apos;ll add more comments to the JIRA when I&apos;ve tested it more thoroughly. &lt;/p&gt;</comment>
                            <comment id="12491423" author="mprudhom" created="Tue, 24 Apr 2007 20:57:30 +0100"  >&lt;p&gt;Note that you should make sure that you are really using the new RegistryManagedRuntime, since if any exceptions occur when loading that class, they will be silently consumed and it will fall back to using the old internal APIs for accessing the TransactionManager.&lt;/p&gt;

&lt;p&gt;You should be able to force it to use the new class by specifying &quot;openjpa.ManagedRuntime&quot; to be &quot;org.apache.openjpa.ee.RegistryManagedRuntime&quot;.&lt;/p&gt;</comment>
                            <comment id="12496911" author="mikedd" created="Fri, 18 May 2007 16:22:49 +0100"  >&lt;p&gt;The patch looks good on our end, running with the Transacton Synchronization Registry in WebSphere. If other vendors would like to test it out as well that&apos;s fine with me, but you have my +1 to integrate.. &lt;/p&gt;</comment>
                            <comment id="12508275" author="kwsutter" created="Tue, 26 Jun 2007 19:26:17 +0100"  >&lt;p&gt;Committed a slightly-modified version of Marc&apos;s patch.  All of our junit tests pass (of course) and it seems to work well in the WebSphere environment.  We need to work through any wrinkles with this TransactionSynchronizationRegistry, so we might as well go ahead with the integration.  Thanks, Marc, for the patch!&lt;/p&gt;</comment>
                            <comment id="12508521" author="pcl" created="Wed, 27 Jun 2007 13:09:40 +0100"  >&lt;p&gt;I don&apos;t think that we want this to necessarily be the default ManagedRuntime implementation, since the TSR does not provide any support for executing work in a separate transaction. This behavior is required for sequence maintenance in some scenarios.&lt;/p&gt;

&lt;p&gt;Maybe we should change our ManagedRuntime interface to get rid of the begin() / commit() etc. APIs, and add a new interface for executing a Runnable in a different transaction. This would allow us to use the TSR ManagedRuntime for general use, and just plug in different ways of performing out-of-transaction work.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12508540" author="kwsutter" created="Wed, 27 Jun 2007 14:29:34 +0100"  >&lt;p&gt;Patrick, I agree with that idea.  That was exactly along the lines of my thinking, but I needed to get the first step done first &amp;#8211; get the TSR available.  Our &quot;hack&quot; for utilizing the WebSphere JTAExtendedTransaction interface wasn&apos;t cutting it and the TSR implementation that Marc provided got us around a couple of the problems.  So, I wanted to get a portion of the fix integrated.  Since the original problem as documented was resolved, I will create a new Issue to cover this additional &quot;out of transaction&quot; work request.  Sound okay?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12356011" name="OPENJPA-61.patch" size="8854" author="mprudhom" created="Sun, 22 Apr 2007 22:24:25 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12372504">OPENJPA-268</subtask>
                            <subtask id="12363286">OPENJPA-159</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Oct 2006 16:45:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160398</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysrhj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201801</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>