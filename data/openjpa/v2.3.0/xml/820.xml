<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:35:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-820/OPENJPA-820.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-820] slices: a simple query is failing (unique, but totally sending wrong parameters to SQL)</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-820</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Thank you for fixing that PCPath issue!  Now I can move on to find the next bug to fix. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  And I didn&apos;t have to wait long:&lt;/p&gt;

&lt;p&gt;I am trying to run the simple query below, against 2 slices.&lt;/p&gt;

&lt;p&gt;select this from com.protrade.fandom.data.entities.TeamFanJersey this  where this.teamFan = :p0&lt;/p&gt;


&lt;p&gt;These are the two queries run on the low level databases:&lt;/p&gt;

&lt;p&gt;SELECT t0.JDOID, t0.JERSEYLEVEL, t0.TEAMFAN_JDOID FROM TEAMFANJERSEY t0 WHERE (t0.TEAMFAN_JDOID IS NULL)&lt;/p&gt;

&lt;p&gt;SELECT t0.JDOID, t0.JERSEYLEVEL, t0.TEAMFAN_JDOID FROM TEAMFANJERSEY t0 WHERE (t0.TEAMFAN_JDOID = 8574250)&lt;/p&gt;


&lt;p&gt;As you can see, the query run against Slice1 thinks the parameter is Null, while the query run against Slice2, knows the proper value of the parameter.  This SQL is the lowlevel sql sent through the Mysql Driver (mysql driver logging).&lt;/p&gt;

&lt;p&gt;I guess it&apos;s another bug in the DistributedPreparedStatement not properly setting parameters to all sub statements.. just a guess.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12410312">OPENJPA-820</key>
            <summary>slices: a simple query is failing (unique, but totally sending wrong parameters to SQL)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ppoddar@apache.org">Pinaki Poddar</assignee>
                                    <reporter username="fern">Fernando Padilla</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Dec 2008 23:02:36 +0000</created>
                <updated>Thu, 22 Apr 2010 21:32:54 +0100</updated>
                            <resolved>Mon, 15 Mar 2010 21:30:35 +0000</resolved>
                                    <version>2.0.0-M2</version>
                                                    <component>slice</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12655008" author="fern" created="Tue, 9 Dec 2008 23:18:57 +0000"  >&lt;p&gt;Alright, so it&apos;s not DistributedPreparedStatement, since this goes through the DistributedStoreQuery.  So I have no clue to give you.  Some how one of the slice queries loses the parameter....&lt;/p&gt;</comment>
                            <comment id="12655397" author="fern" created="Wed, 10 Dec 2008 22:52:33 +0000"  >&lt;p&gt;Pinaki Poddar wrote:&lt;br/&gt;
&amp;gt;&amp;gt; select this from com.protrade.fandom.data.entities.TeamFanJersey this &lt;br/&gt;
&amp;gt; where this.teamFan = :p0&lt;br/&gt;
&amp;gt; 1. What is the value of the query parameter &apos;p0&apos;? If p0 is persisted in one&lt;br/&gt;
&amp;gt; slice only, then in other slices the query should compare with IS NULL. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I had added a test case of the above form in&lt;br/&gt;
&amp;gt; ...openjpa.slice.TestQuery#testQueryParameterEntity. And that test verifies&lt;br/&gt;
&amp;gt; proper parameter binding and returns the correct result.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; May be something more is happening in your use case. Post the relevant&lt;br/&gt;
&amp;gt; portion of the failing use case.&lt;br/&gt;
&amp;gt; &lt;/p&gt;</comment>
                            <comment id="12655398" author="fern" created="Wed, 10 Dec 2008 22:53:01 +0000"  >&lt;p&gt;Question:&lt;/p&gt;

&lt;p&gt;p0 is a persisted object, thus persisted in one slice. BUT I don&apos;t get your assertion that &quot;then in other slices the query should compare with IS NULL.&quot;  There is no reason to force this assertion in the code.  Anyhow, where in the code would this behavior be applied?  I might not be too smart or the code might be more complicated than I thought, but I have not seen anything that would do that.&lt;/p&gt;</comment>
                            <comment id="12655405" author="fern" created="Wed, 10 Dec 2008 23:03:53 +0000"  >&lt;p&gt;I&apos;ll try posting the &quot;relevant portion of the failing use case&quot;, but I just did.  There is a simple query, and it&apos;s failing, I already told you the query above, and pointed out the generated SQL that openjpa is executing against the slices..  and I have no clue how that would come about..&lt;/p&gt;

&lt;p&gt;but here are more details.&lt;/p&gt;

&lt;p&gt;I have two slices.  One is the full database that I have been using for non-slice work.  The second is a fully empty database with just the same schema, that I use for slices testing.  So TeamFan and TeamFanJersey objects all exist in the same database.&lt;/p&gt;

&lt;p&gt;In my code I am trying to do something like:&lt;/p&gt;

&lt;p&gt;attainTeamFanJersey( TeamFan fan );&lt;/p&gt;

&lt;p&gt;which then calls the query listed below, to see if there is a TeamFanJersey for that TeamFan.  If null, then it creates one.&lt;/p&gt;

&lt;p&gt;select this from com.protrade.fandom.data.entities.TeamFanJersey this where this.teamFan = :p0 &lt;/p&gt;

&lt;p&gt;What I expect is that it will always return a value since I KNOW that a TeamFan and TeamFanJersey both exist in Slice1.&lt;/p&gt;

&lt;p&gt;For some reason OpenJPA returns null randomly, thus for some reason OpenJPA can&apos;t find a valid TeamFanJersey, even though I know it exists.  When I was looking at the logs, that&apos;s when I saw the weird case that it seemed to be checking for NULL instead of the propery TeamFan id for one of the two slices.. weird.&lt;/p&gt;


&lt;p&gt;When this happens, then my code assume that there is no TeamFanJersey, then it creates one.  But now there are 2 TeamFanJersey objects related to that TeamFan.&lt;/p&gt;


&lt;p&gt;Now the kicker.  When the code creates a second TeamFanJersey, it properly creates that object.  And at times it creates that on Slice2.  But then when I execute the query again, at a later time ( same request, or another request ).&lt;/p&gt;

&lt;p&gt;select this from com.protrade.fandom.data.entities.TeamFanJersey this where this.teamFan = :p0&lt;/p&gt;

&lt;p&gt;It then finds BOTH TeamFanJersey objects.. which my code complains since it&apos;s expecting only 1 TeamFanJersey, not 2.. (getSingleResult).&lt;/p&gt;



&lt;p&gt;So, here we are:&lt;/p&gt;

&lt;p&gt;The query works most of the time, but seems to fail randomly.&lt;br/&gt;
The failure seems to be related to the low level SQL that it generates and runs against each Slice, in that it doesn&apos;t generate the same SQL.. weird.&lt;/p&gt;</comment>
                            <comment id="12655407" author="fern" created="Wed, 10 Dec 2008 23:09:52 +0000"  >&lt;p&gt;the annoying part, is that it seems intermittent &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I can&apos;t reproduce it at the moment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12655417" author="fern" created="Wed, 10 Dec 2008 23:24:43 +0000"  >&lt;p&gt;huge log file, where it failed..&lt;/p&gt;

&lt;p&gt;if you search for TEAMFANJERSEY, you will see the SQL that was executed against the Slices..&lt;/p&gt;

&lt;p&gt;Slice1 has all the data, Slice2 is empty.&lt;/p&gt;
</comment>
                            <comment id="12655421" author="fern" created="Wed, 10 Dec 2008 23:27:57 +0000"  >&lt;p&gt;There, I got a run where it fails. &lt;/p&gt;

&lt;p&gt;If you look at the log file and search for TEAMFANJERSEY, you will see the first SQL query:&lt;/p&gt;

&lt;p&gt;SELECT t0.JDOID, t0.JERSEYLEVEL, t0.TEAMFAN_JDOID FROM TEAMFANJERSEY t0 WHERE (t0.TEAMFAN_JDOID IS NULL)&lt;/p&gt;

&lt;p&gt;then the second:&lt;/p&gt;

&lt;p&gt;SELECT t0.JDOID, t0.JERSEYLEVEL, t0.TEAMFAN_JDOID FROM TEAMFANJERSEY t0 WHERE (t0.TEAMFAN_JDOID = 8574250)&lt;/p&gt;

&lt;p&gt;I can only assume that the first query was run against Slice1 (where TeamFanJersey is actually located), and the second against Slice2 (which is empty).  Thus the query returns null.. which causes my code to create a TeamFanJersey (which happens to go into Slice2), which causes all future executions of the query above to return 2 TeamFanJersey objects.. a failure, so you&apos;ll see a tonne of exceptions through the rest of the log:&lt;/p&gt;

&lt;p&gt;...NonUniqueResultException: The query on candidate type &quot;class com.protrade.fandom.data.entities.TeamFanJersey&quot; with filter &quot;select this from com.protrade.fandom.data.entities.TeamFanJersey this  where this.teamFan = :p0&quot; was configured to have a unique result, but more than one instance matched the query.&lt;/p&gt;




&lt;p&gt;Let me know what else I can do to help us figure this out! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12656668" author="fern" created="Mon, 15 Dec 2008 17:32:05 +0000"  >&lt;p&gt;So it looks that this is caused by the ParallelExecutor executing the sub queries using multiple threads, without using proper locking: openjpa.Multithreaded=true.  So it looks like the root cause of this bug is &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-825&quot; title=&quot;slices: hangs with multithreaded true&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-825&quot;&gt;&lt;del&gt;OPENJPA-825&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But I would keep this bug open until that is fixed..&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12410528">OPENJPA-825</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12395771" name="bad-log.txt" size="3656914" author="fern" created="Wed, 10 Dec 2008 23:24:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161125</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysqq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>201678</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>