<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:33:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-51/OPENJPA-51.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-51] bad sql pushdown, sub select is missing from clause</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-51</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;451 - bad sql pushdown sub select is missing from clause&lt;br/&gt;
 TEST451; select e from EmpBean e where e.empid &amp;gt; any (select e1.empid from DeptBean d, in(d.emps) e1 where d.no = 200) &lt;br/&gt;
28344  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.SQL - &amp;lt;t 1094861122, conn 295440796&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;0 ms&amp;#93;&lt;/span&gt; executing prepstmnt 81790176 SELECT t0.empid, t0.bonus, t2.deptno, t2.budget, t2.name, t0.execLevel, t0.hireDate, t0.hireTime, t0.hireTimestamp, t3.street, t3.city, t3.state, t3.zip, t0.isManager, t0.name, t0.salary, t4.street, t4.city, t4.state, t4.zip FROM EmpBean t0 LEFT OUTER JOIN DeptBean t2 ON t0.dept_deptno = t2.deptno LEFT OUTER JOIN AddressBean t3 ON t0.home_street = t3.street LEFT OUTER JOIN AddressBean t4 ON t0.work_street = t4.street WHERE (t0.empid = ANY((SELECT t1.deptno FROM DeptBean t1)))&lt;br/&gt;
s/b&lt;br/&gt;
select t1.empid  FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t1.dept_deptno = t3.deptno WHERE t1.empid &amp;gt; ANY((SELECT t5.empid FROM DeptBean t4 INNER JOIN EmpBean t5 ON t4.deptno = t5.dept_deptno  WHERE (CAST(t4.deptno AS BIGINT) = ?))) &lt;/p&gt;
{int 200}

&lt;p&gt;&amp;lt;0|false|0.0.0&amp;gt; org.apache.openjpa.persistence.PersistenceException: Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520. &lt;/p&gt;
{SELECT t2.empid, t2.bonus, t3.deptno, t3.budget, t3.name, t2.execLevel, t2.hireDate, t2.hireTime, t2.hireTimestamp, t4.street, t4.city, t4.state, t4.zip, t2.isManager, t2.name, t2.salary, t5.street, t5.city, t5.state, t5.zip FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t2.dept_deptno = t3.deptno LEFT OUTER JOIN AddressBean t4 ON t2.home_street = t4.street LEFT OUTER JOIN AddressBean t5 ON t2.work_street = t5.street WHERE (t2.empid &amp;gt; ANY((SELECT t1.empid FROM  WHERE (CAST(t0.deptno AS BIGINT) = CAST(? AS BIGINT)))))} &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X01&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(DBDictionary.java:3713)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:94)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:80)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:56)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.handleCheckedException(SelectResultObjectProvider.java:152)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:37)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.toResult(QueryImpl.java:1161)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:936)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:746)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:716)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:712)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.execute(DelegatingQuery.java:512)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:216)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:254)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.createAndRunQuery(JFLoopQueryTestcase.java:187)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testFileQuery(JFLoopQueryTestcase.java:536)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testRunQueryLoopImpl(JFLoopQueryTestcase.java:591)&lt;br/&gt;
	at com.ibm.ws.query.tests.JFLoopQueryTest.testRunQueryLoop(JFLoopQueryTest.java:265)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper.runBare(TestletWrapper.java:116)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper$1.protect(TestletWrapper.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(Unknown Source)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper.run(TestletWrapper.java:109)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(Unknown Source)&lt;br/&gt;
	at junit.framework.TestSuite.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.jfunc.JFuncSuite.run(JFuncSuite.java:134)&lt;br/&gt;
	at junit.extensions.jfunc.textui.JFuncRunner.doRun(JFuncRunner.java:76)&lt;br/&gt;
	at junit.extensions.jfunc.textui.JFuncRunner.start(JFuncRunner.java:398)&lt;br/&gt;
	at junit.extensions.jfunc.textui.JFuncRunner.main(JFuncRunner.java:218)&lt;br/&gt;
Caused by: org.apache.openjpa.lib.jdbc.ReportingSQLException: Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520. {SELECT t2.empid, t2.bonus, t3.deptno, t3.budget, t3.name, t2.execLevel, t2.hireDate, t2.hireTime, t2.hireTimestamp, t4.street, t4.city, t4.state, t4.zip, t2.isManager, t2.name, t2.salary, t5.street, t5.city, t5.state, t5.zip FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t2.dept_deptno = t3.deptno LEFT OUTER JOIN AddressBean t4 ON t2.home_street = t4.street LEFT OUTER JOIN AddressBean t5 ON t2.work_street = t5.street WHERE (t2.empid &amp;gt; ANY((SELECT t1.empid FROM  WHERE (CAST(t0.deptno AS BIGINT) = CAST(? AS BIGINT)))))}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X01&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(LoggingConnectionDecorator.java:193)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.access$6(LoggingConnectionDecorator.java:189)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.prepareStatement(LoggingConnectionDecorator.java:217)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator$ConfiguringConnection.prepareStatement(ConfiguringConnectionDecorator.java:137)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.prepareStatement(JDBCStoreManager.java:1305)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:149)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:463)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:443)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:322)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:295)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion$UnionSelect.execute(LogicalUnion.java:397)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:208)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:198)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(SelectResultObjectProvider.java:91)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:31)&lt;br/&gt;
	... 26 more&lt;br/&gt;
NestedThrowables:&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.commons.dbcp.DelegatingConnection.prepareStatement(DelegatingConnection.java:185)&lt;br/&gt;
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.prepareStatement(PoolingDataSource.java:278)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:162)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.prepareStatement(LoggingConnectionDecorator.java:214)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator$ConfiguringConnection.prepareStatement(ConfiguringConnectionDecorator.java:137)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.prepareStatement(JDBCStoreManager.java:1305)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:149)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:463)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:443)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:322)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:295)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion$UnionSelect.execute(LogicalUnion.java:397)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:208)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:198)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(SelectResultObjectProvider.java:91)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:31)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.toResult(QueryImpl.java:1161)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:936)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:746)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:716)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:712)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.execute(DelegatingQuery.java:512)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:216)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:254)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.createAndRunQuery(JFLoopQueryTestcase.java:187)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testFileQuery(JFLoopQueryTestcase.java:536)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testRunQueryLoopImpl(JFLoopQueryTestcase.java:591)&lt;br/&gt;
	at com.ibm.ws.query.tests.JFLoopQueryTest.testRunQueryLoop(JFLoopQueryTest.java:265)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper.runBare(TestletWrapper.java:116)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper$1.protect(TestletWrapper.java:106)actual  TEST451; select e from EmpBean e where e.empid &amp;gt; any (select e1.empid from DeptBean d, in(d.emps) e1 where d.no = 200) &lt;br/&gt;
                                                                                                                                                                                                                                                                                                                                         e                                                                                                                                                                                                                                                                                                                                           &lt;br/&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &lt;br/&gt;
Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520. &lt;/p&gt;
{SELECT t2.empid, t2.bonus, t3.deptno, t3.budget, t3.name, t2.execLevel, t2.hireDate, t2.hireTime, t2.hireTimestamp, t4.street, t4.city, t4.state, t4.zip, t2.isManager, t2.name, t2.salary, t5.street, t5.city, t5.state, t5.zip FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t2.dept_deptno = t3.deptno LEFT OUTER JOIN AddressBean t4 ON t2.home_street = t4.street LEFT OUTER JOIN AddressBean t5 ON t2.work_street = t5.street WHERE (t2.empid &amp;gt; ANY((SELECT t1.empid FROM  WHERE (CAST(t0.deptno AS BIGINT) = CAST(? AS BIGINT)))))} &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X01&amp;#93;&lt;/span&gt; &lt;br/&gt;
 TEST451; 1 tuple&lt;br/&gt;
&lt;br/&gt;
expected and actual line lengths do NOT match for line 2&lt;br/&gt;
  [ FAILED 451- bucket = fvtfull, query = select e from EmpBean e where e.empid &amp;gt; any (select e1.empid from DeptBean d, in(d.emps) e1 where d.no = 200)  : &lt;br/&gt;
   DIFFERENCE-locations based on expected-(&lt;br/&gt;
diff at line 2 position 1 EXPECTED [[]  ACTUAL [ ] &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=4 name=george salary=0.0 dept=200)&amp;#93;&lt;/span&gt;&lt;br/&gt;
                                                                                                                                                                                                                                                                                                                                         e                                                                                                                                                                                                                                                                                                                                           &lt;br/&gt;
) &lt;br/&gt;
   EXPECTED(&lt;br/&gt;
 TEST451; select e from EmpBean e where e.empid &amp;gt; any (select e1.empid from DeptBean d, in(d.emps) e1 where d.no = 200) &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=4 name=george salary=0.0 dept=200)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=9 name=harry salary=0.0 dept=210)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=10 name=Catalina Wei salary=0.0 dept=0)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=5 name=ritika salary=0.0 dept=220)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=6 name=ahmad salary=0.0 dept=100)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=7 name=charlene salary=0.0 dept=210)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;( class com.dw.test.EmpBean  empid=8 name=Tom Rayburn salary=0.0 dept=100)&amp;#93;&lt;/span&gt;&lt;br/&gt;
 TEST451; 7 tuples ) &lt;br/&gt;
   ACTUAL(&lt;br/&gt;
 TEST451; select e from EmpBean e where e.empid &amp;gt; any (select e1.empid from DeptBean d, in(d.emps) e1 where d.no = 200) &lt;br/&gt;
                                                                                                                                                                                                                                                                                                                                         e                                                                                                                                                                                                                                                                                                                                           &lt;br/&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &lt;br/&gt;
Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520. {SELECT t2.empid, t2.bonus, t3.deptno, t3.budget, t3.name, t2.execLevel, t2.hireDate, t2.hireTime, t2.hireTimestamp, t4.street, t4.city, t4.state, t4.zip, t2.isManager, t2.name, t2.salary, t5.street, t5.city, t5.state, t5.zip FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t2.dept_deptno = t3.deptno LEFT OUTER JOIN AddressBean t4 ON t2.home_street = t4.street LEFT OUTER JOIN AddressBean t5 ON t2.work_street = t5.street WHERE (t2.empid &amp;gt; ANY((SELECT t1.empid FROM  WHERE (CAST(t0.deptno AS BIGINT) = CAST(? AS BIGINT)))))}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X01&amp;#93;&lt;/span&gt; &lt;br/&gt;
 TEST451; 1 tuple) ]&lt;/p&gt;
</description>
                <environment>Windows xp, db2, derby </environment>
        <key id="12350212">OPENJPA-51</key>
            <summary>bad sql pushdown, sub select is missing from clause</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fancy">Catalina Wei</assignee>
                                    <reporter username="ghongell">George Hongell</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Sep 2006 02:12:45 +0100</created>
                <updated>Fri, 7 Aug 2009 22:24:05 +0100</updated>
                            <resolved>Mon, 14 Jul 2008 05:10:09 +0100</resolved>
                                    <version>1.0.0</version>
                    <version>1.0.1</version>
                    <version>1.0.2</version>
                    <version>1.0.3</version>
                    <version>1.0.4</version>
                    <version>1.1.0</version>
                    <version>1.1.1</version>
                    <version>1.2.0</version>
                                    <fixVersion>1.0.3</fixVersion>
                    <fixVersion>1.1.1</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                                    <component>query</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12436071" author="ghongell" created="Wed, 20 Sep 2006 02:13:08 +0100"  >&lt;p&gt;removed testcase references.&lt;br/&gt;
run on version 443432.&lt;/p&gt;

&lt;p&gt;EJBQL:&lt;br/&gt;
select e from EmpBean e where e.empid &amp;gt; any (select e1.empid from DeptBean d, in(d.emps) e1 where d.no = 200) &lt;/p&gt;

&lt;p&gt;OPENJPA ERROR OR SQL PUSHDOWN:&lt;br/&gt;
 &amp;lt;0|false|0.0.0&amp;gt; org.apache.openjpa.persistence.PersistenceException: Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520. &lt;/p&gt;
{SELECT t2.empid, t2.bonus, t3.deptno, t3.budget, t3.name, t2.execLevel, t2.hireDate, t2.hireTime, t2.hireTimestamp, t4.street, t4.city, t4.state, t4.zip, t2.isManager, t2.name, t2.salary, t5.street, t5.city, t5.state, t5.zip FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t2.dept_deptno = t3.deptno LEFT OUTER JOIN AddressBean t4 ON t2.home_street = t4.street LEFT OUTER JOIN AddressBean t5 ON t2.work_street = t5.street WHERE (t2.empid &amp;gt; ANY((SELECT t1.empid FROM  WHERE (CAST(t0.deptno AS BIGINT) = CAST(? AS BIGINT)))))} &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X01&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(DBDictionary.java:3713)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:94)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:80)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:56)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.handleCheckedException(SelectResultObjectProvider.java:152)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:37)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.toResult(QueryImpl.java:1161)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:936)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:746)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:716)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:712)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.execute(DelegatingQuery.java:512)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:216)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:254)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.createAndRunQuery(JFLoopQueryTestcase.java:187)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testFileQuery(JFLoopQueryTestcase.java:536)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testRunQueryLoopImpl(JFLoopQueryTestcase.java:591)&lt;br/&gt;
	at com.ibm.ws.query.tests.JFLoopQueryTest.testRunQueryLoop(JFLoopQueryTest.java:265)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper.runBare(TestletWrapper.java:116)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper$1.protect(TestletWrapper.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(Unknown Source)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper.run(TestletWrapper.java:109)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(Unknown Source)&lt;br/&gt;
	at junit.framework.TestSuite.run(Unknown Source)&lt;br/&gt;
	at junit.extensions.jfunc.JFuncSuite.run(JFuncSuite.java:134)&lt;br/&gt;
	at junit.extensions.jfunc.textui.JFuncRunner.doRun(JFuncRunner.java:76)&lt;br/&gt;
	at junit.extensions.jfunc.textui.JFuncRunner.start(JFuncRunner.java:398)&lt;br/&gt;
	at junit.extensions.jfunc.textui.JFuncRunner.main(JFuncRunner.java:218)&lt;br/&gt;
Caused by: org.apache.openjpa.lib.jdbc.ReportingSQLException: Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520. {SELECT t2.empid, t2.bonus, t3.deptno, t3.budget, t3.name, t2.execLevel, t2.hireDate, t2.hireTime, t2.hireTimestamp, t4.street, t4.city, t4.state, t4.zip, t2.isManager, t2.name, t2.salary, t5.street, t5.city, t5.state, t5.zip FROM DeptBean t0 INNER JOIN EmpBean t1 ON t0.deptno = t1.dept_deptno LEFT OUTER JOIN DeptBean t3 ON t2.dept_deptno = t3.deptno LEFT OUTER JOIN AddressBean t4 ON t2.home_street = t4.street LEFT OUTER JOIN AddressBean t5 ON t2.work_street = t5.street WHERE (t2.empid &amp;gt; ANY((SELECT t1.empid FROM  WHERE (CAST(t0.deptno AS BIGINT) = CAST(? AS BIGINT)))))}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X01&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(LoggingConnectionDecorator.java:193)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.access$6(LoggingConnectionDecorator.java:189)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.prepareStatement(LoggingConnectionDecorator.java:217)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator$ConfiguringConnection.prepareStatement(ConfiguringConnectionDecorator.java:137)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.prepareStatement(JDBCStoreManager.java:1305)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:149)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:463)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:443)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:322)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:295)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion$UnionSelect.execute(LogicalUnion.java:397)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:208)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:198)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(SelectResultObjectProvider.java:91)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:31)&lt;br/&gt;
	... 26 more&lt;br/&gt;
NestedThrowables:&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;WHERE&quot; at line 1, column 520.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.commons.dbcp.DelegatingConnection.prepareStatement(DelegatingConnection.java:185)&lt;br/&gt;
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.prepareStatement(PoolingDataSource.java:278)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:162)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.prepareStatement(LoggingConnectionDecorator.java:214)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator$ConfiguringConnection.prepareStatement(ConfiguringConnectionDecorator.java:137)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:160)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.prepareStatement(JDBCStoreManager.java:1305)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:149)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:463)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:443)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:322)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:295)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion$UnionSelect.execute(LogicalUnion.java:397)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:208)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:198)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(SelectResultObjectProvider.java:91)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:31)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.toResult(QueryImpl.java:1161)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:936)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:746)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:716)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:712)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.execute(DelegatingQuery.java:512)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:216)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:254)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.createAndRunQuery(JFLoopQueryTestcase.java:187)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testFileQuery(JFLoopQueryTestcase.java:536)&lt;br/&gt;
	at com.ibm.ws.query.utils.JFLoopQueryTestcase.testRunQueryLoopImpl(JFLoopQueryTestcase.java:591)&lt;br/&gt;
	at com.ibm.ws.query.tests.JFLoopQueryTest.testRunQueryLoop(JFLoopQueryTest.java:265)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper.runBare(TestletWrapper.java:116)&lt;br/&gt;
	at junit.extensions.jfunc.TestletWrapper$1.protect(TestletWrapper.java:106)&lt;/p&gt;


&lt;p&gt;SUGGESTED SQL PUSHDOWN:&lt;br/&gt;
select t0.empid, t0.bonus, t2.deptno, t2.budget, t2.name, t0.execLevel, t0.hireDate, t0.hireTime, t0.hireTimestamp, t3.street, t3.city, t3.state, t3.zip, t0.isManager, t0.name, t0.salary, t4.street, t4.city, t4.state, t4.zip FROM EmpBean t0 LEFT OUTER JOIN DeptBean t2 ON t0.dept_deptno = t2.deptno LEFT OUTER JOIN AddressBean t3 ON t0.home_street = t3.street LEFT OUTER JOIN AddressBean t4 ON t0.work_street = t4.street WHERE t0.empid &amp;gt; ANY((select t5.empid FROM DeptBean t4 INNER JOIN EmpBean t5 ON t4.deptno = t5.dept_deptno  WHERE (CAST(t4.deptno AS BIGINT) = ?))) &lt;/p&gt;
{int 200}
</comment>
                            <comment id="12436072" author="ghongell" created="Wed, 20 Sep 2006 02:14:09 +0100"  >&lt;p&gt;entity java files and derby ddl script to use to recreate this issue&lt;/p&gt;</comment>
                            <comment id="12491902" author="fancy" created="Thu, 26 Apr 2007 08:42:00 +0100"  >&lt;p&gt;Abe, &lt;br/&gt;
I am working on issue &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-51&quot; title=&quot;bad sql pushdown, sub select is missing from clause&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-51&quot;&gt;&lt;del&gt;OPENJPA-51&lt;/del&gt;&lt;/a&gt; for David Wisneski.&lt;br/&gt;
I need some education before attempting to resolve this issue.&lt;br/&gt;
How aliases in the subqueries are created and resolved ?&lt;br/&gt;
Consider the following 2 queries:&lt;br/&gt;
    1. select o from Customer c, in(c.orders)o where o.amount &amp;gt; (select sum(o2.amount) from c.orders o2)&lt;br/&gt;
     2. select o from Order where o.amount &amp;gt; (select sum(o2.amount) from Customer c, in(c.orders) o2)&lt;/p&gt;

&lt;p&gt;Aside from the semantic difference, in the 2 queries, the syntax difference is where &quot;Customer c &quot; is defined.&lt;br/&gt;
When Customer c is defined in the subquery, the generated SQL has syntax error, essentially the FROM clause is missing the body and t2 in the selections is undefined:&lt;br/&gt;
SELECT t2.oid, t2.version, t2.amount, t2.customer_countryCode, t2.customer_id, t2.delivered &lt;br/&gt;
FROM TCUSTOMER t0 INNER JOIN TORDER t1 ON t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id WHERE (t2.amount &amp;gt; (SELECT SUM(t1.amount) FROM  ))&lt;/p&gt;

&lt;p&gt;Under the debugger, it shows in which SelectImpl the aliases/tables are created/defined:&lt;/p&gt;

&lt;p&gt;    Query 1:                            _aliases                          _tables&lt;br/&gt;
       SelectImpl (main):    TCUSTOMER=0              0=TCUSTOMER t0&lt;br/&gt;
                                           TORDER=1                      1=TORDER t1&lt;br/&gt;
                                           &quot;oders.o&quot;&lt;br/&gt;
       SelectImpl(subQ):    TORDER=2                       2=TORDER t2&lt;br/&gt;
                                           &quot;orders&quot;&lt;br/&gt;
                                           TORDER=3&lt;br/&gt;
                                           &quot;jpqlalias1:&quot;&lt;/p&gt;

&lt;p&gt;   Query 2 (all aliase/tables are in the main SelectImpl, null in subQ&apos;s SelectImpl)&lt;br/&gt;
     SelectImpl(main):       TCUSTOMER=0                  0=TCUSTOMER t0&lt;br/&gt;
                                           &quot;jpqlalias1:&quot;&lt;br/&gt;
                                           TORDER=1                          1=TORDER t1&lt;br/&gt;
                                           &quot;jpqlalias1:.orders.o2&quot;&lt;br/&gt;
                                           TORDER=2                           2=TORDER t2&lt;/p&gt;


&lt;p&gt;It seems to me that openjpa assumes the alias defined in subquery is always derived from (i.e. correlated to) the main select.&lt;br/&gt;
Correct me if I am wrong.&lt;br/&gt;
I have tried changing the method in SelectImpl.findAlias(Table....)&lt;br/&gt;
 to call  recordTableAlias() for subselect when the alias was found in parent select by the following code fragment:&lt;br/&gt;
          if (!fromParent &amp;amp;&amp;amp; _parent != null) {&lt;br/&gt;
            boolean removeFromParent = key.toString().contains(&quot;:&quot;);  //+&lt;br/&gt;
            alias = _parent.findAlias(table, key, removeFromParent, this);  //false =&amp;gt; removeFromParent&lt;br/&gt;
            if (alias != null) &lt;/p&gt;
{
                if (removeFromParent)                     //+
                    recordTableAlias(table, key, alias);  //+
                return alias;
            }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;after this change, the SQL generates OK, but I do not think it is correct, because the subselect is missing the join predicate (missing where clause) for the path c.orders.&lt;br/&gt;
In debugging, I saw selectJoins for c.order s were created; one for the parent select and one for the subselect. But somehow the one created for subselect disappeared &lt;br/&gt;
( or never got set in SelectImpl&apos;s _join field for subselect), the main SelectImpl&apos;s _join field seems to have the selectJoin for c.orders &lt;br/&gt;
( but no SQL predicate was generated out of this selectJoin). &lt;br/&gt;
Should the selectionJoin on the parent be moved to subselect ? How/When should this be done? &lt;br/&gt;
Am I on the right track of resolving this issue? &lt;br/&gt;
Your input is much appreciated.&lt;/p&gt;

&lt;p&gt;Catalina&lt;/p&gt;</comment>
                            <comment id="12492996" author="fancy" created="Wed, 2 May 2007 02:27:32 +0100"  >&lt;p&gt;Abe,&lt;br/&gt;
Could you please verify and comment on the patch I am providing for this issue.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12493126" author="awhite" created="Wed, 2 May 2007 17:02:41 +0100"  >&lt;p&gt;I don&apos;t remember how any of that stuff works at all.  However, the following line in findAlias is suspect:&lt;/p&gt;

&lt;p&gt;_removeAliasFromParent = key.toString().contains(&quot;:&quot;);&lt;/p&gt;

&lt;p&gt;findAlias is called a lot with different keys.  Setting a member field that is used in other methods based&lt;br/&gt;
on whether the latest key happens to match a certain criteria seems like it could lead to arbitrary&lt;br/&gt;
results in different circumstances.  If there is a continuous thread of logic that links the last call to&lt;br/&gt;
findAlias with the other methods where _removeAliasFromParent is used, it needs to be make more&lt;br/&gt;
explicit.&lt;/p&gt;</comment>
                            <comment id="12493158" author="fancy" created="Wed, 2 May 2007 18:51:37 +0100"  >&lt;p&gt;Abe,&lt;br/&gt;
Based on your comment, I have revised my patch. &lt;br/&gt;
Please verify if the new patch is a better solution.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12493172" author="awhite" created="Wed, 2 May 2007 19:44:50 +0100"  >&lt;p&gt;No, this is no better.  And now you&apos;ve changed the meaning of the code.  Before, the remove-from-parent&lt;br/&gt;
logic was based on the key to the last call to findAlias.  Now it&apos;s based on the key to any previous call to findAlias&lt;br/&gt;
(so long as 0 &amp;lt;= alias &amp;lt;= 16 ??!!).  The fact that you changed the meaning of the patch seemingly without intent&lt;br/&gt;
and still feel it is correct doesn&apos;t give me any confidence in it.&lt;/p&gt;

&lt;p&gt;p.s. The boolean array is pointless since you never flip the&lt;br/&gt;
boolean values &amp;#8211; you only ever set to true that I see, and then test if any index is true later.  So you could just as &lt;br/&gt;
easily get by with a single boolean where you &quot;|=&quot; its value each time.&lt;/p&gt;

&lt;p&gt;p.p.s. I notice that you also have a &quot;boolean removed = false&quot; &lt;br/&gt;
local declared in one method and you never change its value, making the local pointless too, unless&lt;br/&gt;
you meant to assign it a new value based on something somewhere.&lt;/p&gt;</comment>
                            <comment id="12493192" author="fancy" created="Wed, 2 May 2007 20:59:34 +0100"  >&lt;p&gt;Abe,&lt;br/&gt;
I make some mistake in my previous patch, attaching a revised version.&lt;br/&gt;
your conceren about removedAliasFromParent[] flag once set, was never reset;  that is purposely done.&lt;br/&gt;
In case any flag (base on number of aliases created so far) is on, there is potentially duplicate joins in the parent select (those joins were initially created for aliases initially attached in parent which was removed from parent, and now attached on subselect),  we need to remove the duplicate joins on the parent, since there is one also created for subselect. The duplicate joins once removed, will never be seen on the next call to removeJoinsFromParent().&lt;br/&gt;
The local boolean flag is set when joins are indeed removed from parent. Otherwise the normal processing of removing duplcate joins from subselect is performed.&lt;/p&gt;

&lt;p&gt;I think there is a much better solution to this issue, that is to create SelectImpl when a &quot;SELECT&quot; is encountered, rather than delaying it later as it is currently done. &lt;br/&gt;
Current code creates aliases for the subselect to come later &amp;#8211; in the middle of alias creating for subselect, there isn&apos;t a SelectImpl created for subselect yet.. So the alias is temporarily attached under the parent SelectImpl.  (This could be based on the assumption that any alias defined in subselect is correated to outer subselect). &lt;/p&gt;</comment>
                            <comment id="12493200" author="awhite" created="Wed, 2 May 2007 21:28:05 +0100"  >&lt;p&gt;OK, I see.  You still shouldn&apos;t be using a fixed array.  Use a BitSet.  &lt;/p&gt;

&lt;p&gt;As to the rest... as I said before, I don&apos;t remember how this stuff works.  So it could be wrong&lt;br/&gt;
and I wouldn&apos;t know it without doing more code-diving than I have time for.  It&apos;s our fault for &lt;br/&gt;
not having enough tests checked into OpenJPA.  So after changing it to use a BitSet, &lt;br/&gt;
assuming it passes all your tests, I&apos;d vote to commit it.  Once that happens we&apos;ll see how it&lt;br/&gt;
fairs against our more extensive Kodo test suite.&lt;/p&gt;</comment>
                            <comment id="12493221" author="wisneskid" created="Wed, 2 May 2007 22:41:06 +0100"  >&lt;p&gt;fixed in r534623&lt;/p&gt;</comment>
                            <comment id="12493723" author="awhite" created="Fri, 4 May 2007 16:44:28 +0100"  >&lt;p&gt;I have to reopen this, as the fix is causing a regression in our test suite.  Given an entity EntityA with a field &quot;b&quot; of type EntityB, the following JPQL:&lt;/p&gt;

&lt;p&gt;select a from EntityA a where &lt;br/&gt;
  exists (select b from a.b b where b.intfield = 1) &lt;br/&gt;
    or &lt;br/&gt;
  exists (select b from a.b b where b.intfield = 0)&lt;/p&gt;

&lt;p&gt;is getting translated to:&lt;/p&gt;

&lt;p&gt;SELECT t1.ID, t1.TYP, t1.A FROM ENTITYA t1 WHERE (&lt;br/&gt;
  EXISTS (SELECT t0.ID FROM ENTITYB t0 WHERE t0.INTFIELD = 1 AND t1.B = t0.ID))&lt;br/&gt;
   OR&lt;br/&gt;
  EXISTS (SELECT t2.ID FROM ENTITYB t2, ENTITYA t3 WHERE t2.INTFIELD = 0 AND t3.B = t2.ID))&lt;br/&gt;
)&lt;/p&gt;

&lt;p&gt;Notice that the first correlated subselect is fine, but the second has lost its correlation &amp;#8211; it creates a new alias for  EntityA&apos;s table. &lt;/p&gt;</comment>
                            <comment id="12493764" author="fancy" created="Fri, 4 May 2007 19:27:48 +0100"  >&lt;p&gt;Abe,&lt;br/&gt;
Is it really a regression?  I replaced the copy of SelectImpl with revision 52881 (the original without my fixes),&lt;br/&gt;
the similar query I ran gets &quot;missing FROM body&quot;:&lt;/p&gt;

&lt;p&gt;1078  demo  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.Query - Executing query: select c from Customer c where exists(select o from c.orders o where o.oid = 1) or exists(select o from c.orders o where o.oid = 2)&lt;br/&gt;
1156  demo  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.SQL - &amp;lt;t 1094861122, conn 1643274738&amp;gt; executing prepstmnt 2138865532 SELECT t0.countryCode, t0.id, t0.version, t0.city, t0.state, t0.street, t0.zip, t0.name FROM  WHERE (EXISTS (SELECT t2.oid FROM TORDER t2 WHERE (CAST(t2.oid AS BIGINT) = CAST(? AS BIGINT) AND t1.oid = t2.oid) AND t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id ) OR EXISTS (SELECT t3.oid FROM TORDER t3 WHERE (CAST(t3.oid AS BIGINT) = CAST(? AS BIGINT) AND t1.oid = t3.oid) AND t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id ))  &lt;span class=&quot;error&quot;&gt;&amp;#91;params=(long) 1, (long) 2&amp;#93;&lt;/span&gt;&lt;br/&gt;
1172  demo  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.SQL - &amp;lt;t 1094861122, conn 1643274738&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;16 ms&amp;#93;&lt;/span&gt; spent&lt;br/&gt;
1172  demo  TRACE  &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; openjpa.jdbc.JDBC - &amp;lt;t 1094861122, conn 0&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;0 ms&amp;#93;&lt;/span&gt; close&lt;br/&gt;
Exception: &amp;lt;0.0.0 nonfatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: DB2 SQL error: SQLCODE: -104, SQLSTATE: 42601, SQLERRMC: (;t0.name FROM  WHERE;WHERE &lt;/p&gt;
{prepstmnt 2138865532 SELECT t0.countryCode, t0.id, t0.version, t0.city, t0.state, t0.street, t0.zip, t0.name FROM  WHERE (EXISTS (SELECT t2.oid FROM TORDER t2 WHERE (CAST(t2.oid AS BIGINT) = CAST(? AS BIGINT) AND t1.oid = t2.oid) AND t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id ) OR EXISTS (SELECT t3.oid FROM TORDER t3 WHERE (CAST(t3.oid AS BIGINT) = CAST(? AS BIGINT) AND t1.oid = t3.oid) AND t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id ))  [params=(long) 1, (long) 2]} &lt;span class=&quot;error&quot;&gt;&amp;#91;code=-104, state=42601&amp;#93;&lt;/span&gt;SQLCA OUTPUT[Errp=SQLNP012, Errd=&lt;span class=&quot;error&quot;&gt;&amp;#91;-2145779603, 0, 0, 0, -705, 0&amp;#93;&lt;/span&gt;]&lt;br/&gt;
&amp;lt;0.0.0 nonfatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: DB2 SQL error: SQLCODE: -104, SQLSTATE: 42601, SQLERRMC: (;t0.name FROM  WHERE;WHERE {prepstmnt 2138865532 SELECT t0.countryCode, t0.id, t0.version, t0.city, t0.state, t0.street, t0.zip, t0.name FROM  WHERE (EXISTS (SELECT t2.oid FROM TORDER t2 WHERE (CAST(t2.oid AS BIGINT) = CAST(? AS BIGINT) AND t1.oid = t2.oid) AND t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id ) OR EXISTS (SELECT t3.oid FROM TORDER t3 WHERE (CAST(t3.oid AS BIGINT) = CAST(? AS BIGINT) AND t1.oid = t3.oid) AND t0.countryCode = t1.customer_countryCode AND t0.id = t1.customer_id ))  [params=(long) 1, (long) 2]}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=-104, state=42601&amp;#93;&lt;/span&gt;SQLCA OUTPUT[Errp=SQLNP012, Errd=&lt;span class=&quot;error&quot;&gt;&amp;#91;-2145779603, 0, 0, 0, -705, 0&amp;#93;&lt;/span&gt;]&lt;/p&gt;

&lt;p&gt;Are you sure your query ever worked before this fix ?&lt;/p&gt;</comment>
                            <comment id="12494070" author="awhite" created="Mon, 7 May 2007 17:02:32 +0100"  >&lt;p&gt;Yes, the test was passing before.  Have you tried against a to-one relation rather than a to-many?&lt;br/&gt;
Perhaps it was never working against a to-many.&lt;/p&gt;</comment>
                            <comment id="12494138" author="fancy" created="Mon, 7 May 2007 22:34:03 +0100"  >&lt;p&gt;Abe,&lt;br/&gt;
You are right, the code before theispatch  (SelectImpl.java revision 52881) worked for to-one relation, &lt;br/&gt;
but never worked for to-many relation.&lt;/p&gt;

&lt;p&gt;Do you have any idea of fixing this problem?&lt;/p&gt;</comment>
                            <comment id="12494583" author="mprudhom" created="Wed, 9 May 2007 23:02:56 +0100"  >&lt;p&gt;This patch caused 17 TCK tests to start failing, so it needs to be reverted as soon as possible.&lt;/p&gt;</comment>
                            <comment id="12495770" author="fancy" created="Mon, 14 May 2007 21:03:15 +0100"  >&lt;p&gt;Abe,&lt;br/&gt;
Could you please verify if this patch regress your tests ?&lt;br/&gt;
thanks.&lt;/p&gt;</comment>
                            <comment id="12507082" author="fancy" created="Fri, 22 Jun 2007 02:11:43 +0100"  >&lt;p&gt;The attached patch  passed TCK on derby.&lt;/p&gt;</comment>
                            <comment id="12613232" author="fancy" created="Mon, 14 Jul 2008 05:10:09 +0100"  >&lt;p&gt;A sub-task &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-658&quot; title=&quot;select count(o) in subquery  or not exists subquery generates SQL with syntax error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-658&quot;&gt;OPENJPA-658&lt;/a&gt; is opened for outstanding issues remaining in subqueries.&lt;br/&gt;
Fix committed under r676467 is for  subqueries that are not correlated to its outer select,&lt;br/&gt;
examples:&lt;/p&gt;

&lt;p&gt;   1.     &quot;select o.oid from Order o where o.customer.name =&quot; +&lt;br/&gt;
                &quot; (select max(o2.customer.name) from Order o2&quot; +&lt;br/&gt;
                &quot; where o.customer.cid.id = o2.customer.cid.id)&quot;,&lt;br/&gt;
    2.    &quot;select o from Order o where o.customer.name =&quot; +&lt;br/&gt;
                &quot; (select max(o2.customer.name) from Order o2&quot; +&lt;br/&gt;
                &quot; where o.customer.cid.id = o2.customer.cid.id)&quot;,&lt;/p&gt;</comment>
                            <comment id="12613374" author="fancy" created="Mon, 14 Jul 2008 18:05:00 +0100"  >&lt;p&gt;fix in 1.0.3 and 1.2.0&lt;/p&gt;</comment>
                            <comment id="12613511" author="fancy" created="Tue, 15 Jul 2008 03:17:41 +0100"  >&lt;p&gt;The query string with the following subquery resulting a SQL with syntax error:&lt;br/&gt;
&quot;select o1.oid from Order o1 where o1.oid in &quot; +&lt;br/&gt;
            &quot; (select distinct o.oid from OrderItem i, Order o&quot; +&lt;br/&gt;
            &quot; where i.quantity &amp;gt; 10 and o.amount &amp;gt; 1000 and i.lid = o.oid)&quot;&lt;/p&gt;

&lt;p&gt;This kind of subquery is more like a SQL style subquery, and subquery is not correlated to its outer query.&lt;/p&gt;

&lt;p&gt;Rather than creating yet another sub-task (&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-658&quot; title=&quot;select count(o) in subquery  or not exists subquery generates SQL with syntax error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-658&quot;&gt;OPENJPA-658&lt;/a&gt;, sub-task of this issue addressing some outstanding subquery problems),&lt;br/&gt;
the fix for this subquery problem is checked in under this issue, - svn  revision : r676787.&lt;/p&gt;</comment>
                            <comment id="12740747" author="dezzio" created="Fri, 7 Aug 2009 22:24:05 +0100"  >&lt;p&gt;From trunk, merged fix to 1.1.x branch at 802200&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12357307" name="SelectImpl.java.patch" size="2962" author="fancy" created="Mon, 14 May 2007 21:03:14 +0100"/>
                            <attachment id="12356650" name="SelectImpl.java.patch" size="3211" author="fancy" created="Wed, 2 May 2007 18:51:37 +0100"/>
                            <attachment id="12341169" name="failureEntities.jar" size="7071" author="ghongell" created="Wed, 20 Sep 2006 02:14:09 +0100"/>
                            <attachment id="12360336" name="openjpa-51.patch" size="3196" author="fancy" created="Fri, 22 Jun 2007 02:11:43 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12400198">OPENJPA-658</subtask>
                            <subtask id="12401951">OPENJPA-681</subtask>
                            <subtask id="12403459">OPENJPA-708</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 26 Apr 2007 07:42:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160388</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysvo7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202479</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>