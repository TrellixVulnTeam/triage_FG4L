<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:46:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1569/OPENJPA-1569.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1569] @Strategy triggers an InvalidStateException for fields which are declared as Java interfaces</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1569</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;The @Strategy annotation works fine for classes but does not work if the field is a Java interface.  Consider:&lt;/p&gt;

&lt;p&gt;	@Persistent&lt;br/&gt;
	@Strategy(&quot;SimpleHandler&quot;)&lt;br/&gt;
	@Column(name=&quot;address_packed&quot;)&lt;br/&gt;
	private BaseAddress address;&lt;br/&gt;
	public BaseAddress getAddress() &lt;/p&gt;
{ return address; }
&lt;p&gt;	public void setAddress(BaseAddress address) &lt;/p&gt;
{ this.address = address; }

&lt;p&gt;This works perfectly if BaseAddress is defined as a class but results in an InvalidStateException if it is an interface:&lt;/p&gt;

&lt;p&gt;&amp;lt;openjpa-2.0.0-beta2-rexported fatal user error&amp;gt; org.apache.openjpa.persistence.InvalidStateException: Encountered unmanaged object in persistent field &quot;com.example.SimpleEntity.address&quot; during flush.  However, this field does not allow cascade persist. Set the cascade attribute for this field to CascadeType.PERSIST or CascadeType.ALL (JPA annotations) or &quot;persist&quot; or &quot;all&quot; (JPA orm.xml), or enable cascade-persist globally, or manually persist the related field value prior to flushing. You cannot flush unmanaged objects or graphs that have persistent associations to unmanaged objects.&lt;br/&gt;
FailedObject: com.example.USAddress@4e0a39de&lt;br/&gt;
	at org.apache.openjpa.kernel.SingleFieldManager.preFlushPC(SingleFieldManager.java:767)&lt;br/&gt;
	at org.apache.openjpa.kernel.SingleFieldManager.preFlush(SingleFieldManager.java:614)&lt;br/&gt;
	at org.apache.openjpa.kernel.SingleFieldManager.preFlush(SingleFieldManager.java:575)&lt;br/&gt;
	at org.apache.openjpa.kernel.SingleFieldManager.preFlush(SingleFieldManager.java:491)&lt;br/&gt;
	at org.apache.openjpa.kernel.StateManagerImpl.preFlush(StateManagerImpl.java:2956)&lt;br/&gt;
	at org.apache.openjpa.kernel.PNewState.beforeFlush(PNewState.java:40)&lt;br/&gt;
	at org.apache.openjpa.kernel.StateManagerImpl.beforeFlush(StateManagerImpl.java:1048)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:2051)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flushSafe(BrokerImpl.java:2011)&lt;br/&gt;
	at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:1782)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingBroker.flush(DelegatingBroker.java:1015)&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerImpl.flush(EntityManagerImpl.java:637)&lt;br/&gt;
	... etc ...&lt;/p&gt;

&lt;p&gt;Here com.example.USAddress is a class which implements the BaseAddress interface.&lt;/p&gt;</description>
                <environment>MacOS X, Spring 3.0, Maven</environment>
        <key id="12459006">OPENJPA-1569</key>
            <summary>@Strategy triggers an InvalidStateException for fields which are declared as Java interfaces</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="drwoods">Donald Woods</assignee>
                                    <reporter username="no1uno">Jerry Carter</reporter>
                        <labels>
                    </labels>
                <created>Sat, 13 Mar 2010 04:30:43 +0000</created>
                <updated>Wed, 10 Apr 2013 20:46:07 +0100</updated>
                            <resolved>Wed, 10 Apr 2013 20:46:07 +0100</resolved>
                                    <version>1.2.2</version>
                    <version>2.0.0-beta2</version>
                                    <fixVersion>1.2.3</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12844808" author="no1uno" created="Sat, 13 Mar 2010 05:05:11 +0000"  >&lt;p&gt;Chased this down into the code for a bit.  In SingleFieldManager.preFlush(FieldMetaData, int, int, int, boolean, boolean, OpCallbacks), interfaces have a type of JavaTypes.PC_UNTYPED whereas classes are JavaTypes.OBJECT.  The decision logic for setting this value appears to come from org.apache.openjpa.meta.JavaTypes::getTypeCode(Class&amp;lt;?&amp;gt; type):&lt;/p&gt;

&lt;p&gt;        if (type.isInterface()) &lt;/p&gt;
{
            if (type == Serializable.class)
                return OBJECT;
            return PC_UNTYPED;
        }

&lt;p&gt;Here the interface (BaseAddress) enters the outer &apos;if&apos; and returns PC_UNTYPED whereas the actual class (USAddress) skips this section.&lt;/p&gt;</comment>
                            <comment id="12845120" author="faywang" created="Sun, 14 Mar 2010 19:05:37 +0000"  >&lt;p&gt;Jerry, you are right. the field of address, which is of type BaseAddress is treated as PC_UNTYPED, which causes the exception to be thrown in the later stage.&lt;/p&gt;

&lt;p&gt;@Persistent&lt;br/&gt;
@Strategy(&quot;SimpleHandler&quot;)&lt;br/&gt;
@Column(name=&quot;address_packed&quot;)&lt;br/&gt;
private BaseAddress address;&lt;br/&gt;
public BaseAddress getAddress() &lt;/p&gt;
{ return address; }&lt;br/&gt;
public void setAddress(BaseAddress address) { this.address = address; } &lt;br/&gt;
&lt;br/&gt;
The workaround is to do the following:&lt;br/&gt;
&lt;br/&gt;
@Persistent&lt;br/&gt;
@Strategy(&quot;SimpleHandler&quot;)&lt;br/&gt;
@Column(name=&quot;address_packed&quot;)&lt;br/&gt;
private java.io.Serializable address;&lt;br/&gt;
public java.io.Serializable getAddress() { return address; }
&lt;p&gt;public void setAddress(java.io.Serializable address) &lt;/p&gt;
{ this.address = address; }
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;where your BaseAddress:&lt;/p&gt;

&lt;p&gt;public interface BaseAddress extends java.io.Serializable &lt;/p&gt;
{
	public String getStreet();
	public void setStreet(String street);
}</comment>
                            <comment id="12845165" author="no1uno" created="Mon, 15 Mar 2010 01:34:27 +0000"  >&lt;p&gt;(Set priority to minor as there are a number of workarounds.)&lt;/p&gt;

&lt;p&gt;While some argument might be made for supporting arbitrary types as recipients for @Strategy decoration, the spirit of JPA limits one to &quot;user-defined types that implement the Serializable interface&quot; (JPA 2.0, section 2.2).  This is probably why the distinction is made in JavaTypes, but the implementation might be wrong. &lt;/p&gt;

&lt;p&gt;Rather than &apos;type == Serializable.class&apos;, mightn&apos;t this be &apos;Serializable.class.isAssignableFrom(type)&apos;?&lt;/p&gt;</comment>
                            <comment id="12849567" author="no1uno" created="Thu, 25 Mar 2010 01:50:54 +0000"  >&lt;p&gt;I&apos;ve attached a patch for the proposed solution - switching to &apos;Serializable.class.isAssignableFrom(type)&apos;.  This addresses the issue and does not break any of the regression tests included with OpenJPA 2.0.0-beta3 or my own JPA tests.  I believe this change should be made for 2.0.0.&lt;/p&gt;</comment>
                            <comment id="12973918" author="jpaheath" created="Tue, 21 Dec 2010 21:46:04 +0000"  >&lt;p&gt;Attaching a patch, named &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1569&quot; title=&quot;@Strategy triggers an InvalidStateException for fields which are declared as Java interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1569&quot;&gt;&lt;del&gt;OPENJPA-1569&lt;/del&gt;&lt;/a&gt;-1.2.x.patch, for 1.2.x to fix the issue there.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Heath&lt;/p&gt;</comment>
                            <comment id="13628168" author="techhusky" created="Wed, 10 Apr 2013 20:45:52 +0100"  >&lt;p&gt;Change for 1.2.x was committed under revision r1053401.  The commit was mis-tagged to &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1596&quot; title=&quot;Index name too long for DB2 zOS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1596&quot;&gt;&lt;del&gt;OPENJPA-1596&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12466766" name="OPENJPA-1569-1.2.x.patch" size="593" author="jpaheath" created="Tue, 21 Dec 2010 21:46:04 +0000"/>
                            <attachment id="12439744" name="patch.txt" size="589" author="no1uno" created="Thu, 25 Mar 2010 01:50:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 14 Mar 2010 19:05:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161832</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7nxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>288848</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>