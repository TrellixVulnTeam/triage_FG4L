<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:41:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-646/OPENJPA-646.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-646] JDK problems with defineClass and enum class types</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-646</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;This Issue was first presented on our dev mailing list:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Sun-JDK-problem-with-duplicate-annotations-td18101863.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Sun-JDK-problem-with-duplicate-annotations-td18101863.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have also shared some additional experiences with Abe to get his views, but haven&apos;t heard anything back yet.  So, I will create this JIRA Issue and work it from there.&lt;/p&gt;

&lt;p&gt;The original problem was limited to the Sun JDK.  But, in a soon-to-be-available update to the IBM JDK, the same problem surfaces.  At least the same exception is presented.  The actual call stack is different due to the different Sun and IBM packages, but it&apos;s a similar problem.&lt;/p&gt;

&lt;p&gt;Basically, we are having a problem with our TempClassLoader attempting to use the defineClass() method on the CascadeType enum class.  Our javax.persistence.CascadeType version doesn&apos;t experience this problem because we use Class.forName() to load the javax classes.  In this scenario, I have an alt.persistence.CascadeType that falls into our normal class definition processing and attempts to use defineClass().  This method invocation completes okay.  But, later when our code attempts to access the metadata associated with this type, we get the ArrayStoreException from the JDK.&lt;/p&gt;

&lt;p&gt;I will post both a simple project that reproduces the problem as well as a &quot;hack&quot; patch that gets us around the problem.  I also have a PMR opened against the IBM JDK to see if they can help resolve it.&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</description>
                <environment></environment>
        <key id="12399184">OPENJPA-646</key>
            <summary>JDK problems with defineClass and enum class types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kwsutter">Kevin Sutter</assignee>
                                    <reporter username="kwsutter">Kevin Sutter</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Jun 2008 17:42:30 +0100</created>
                <updated>Tue, 30 Jul 2013 23:19:12 +0100</updated>
                            <resolved>Mon, 8 Sep 2008 21:12:56 +0100</resolved>
                                    <version>1.2.0</version>
                                    <fixVersion>1.2.1</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12608832" author="kwsutter" created="Fri, 27 Jun 2008 17:49:16 +0100"  >&lt;p&gt;File pmr.zip is a simplified version of the problem that I put together for the IBM JDK problem report.  To reproduce the problem, you have to build a jar file for this project and run the testcase with the -javaagent parameter.  Or, you could just point the javaagent at the OpenJPA runtime jar file and use the &quot;real&quot; TempClassLoader implementation.  Either way, you should be able to reproduce the problem.&lt;/p&gt;</comment>
                            <comment id="12608834" author="kwsutter" created="Fri, 27 Jun 2008 17:52:26 +0100"  >&lt;p&gt;This hack of a patch just modifies our TempClassLoader implementation to treat enum class types like annotation class types and use the Class.forName() mechanism to load the class instead of the defineClass() mechanism.  Until I get educated on what exactly is wrong with our current processing, I don&apos;t want to commit this change.  But, in case someone runs into this situation, this is a potential workaround.&lt;/p&gt;</comment>
                            <comment id="12618417" author="mikedd" created="Wed, 30 Jul 2008 17:20:56 +0100"  >&lt;p&gt;Moving to next release&lt;/p&gt;</comment>
                            <comment id="12618892" author="kwsutter" created="Thu, 31 Jul 2008 23:42:30 +0100"  >&lt;p&gt;I accidentally opened a new Issue for this same problem (&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-672&quot; title=&quot;Annotations, Enums, and our TemporaryClassLoader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-672&quot;&gt;&lt;del&gt;OPENJPA-672&lt;/del&gt;&lt;/a&gt;).  Just to get this Issue up to date, here are some of the details from that new Issue:&lt;/p&gt;

&lt;p&gt;From working with the JDK team, the problem is surfacing because the ClassLoader (AppClassLoader) that is used to load the Enum type when the alt.persistence.OneToMany is loaded is not the same ClassLoader (TemporaryClassLoader) when the Enum type is loaded by our enhancement processing.  Thus, the AnnotationTypeMismatchExceptionProxy from the JDK.&lt;/p&gt;

&lt;p&gt;One way to workaround the problem is to add a test for Enum types in the TemporaryClassLoader and use the AppClassLoader in this case (much like we do for Annotation types):&lt;/p&gt;

&lt;p&gt;           if (isAnnotation(classBytes) || isEnum(classBytes))&lt;br/&gt;
               return Class.forName(name, resolve, getClass().getClassLoader());&lt;/p&gt;

&lt;p&gt;The JDK team suggested removing the check for isAnnotation (and isEnum) altogether since that resolved the simple testcase that I had put together for their benefit.  Unfortunately, that doesn&apos;t work for our enhancement processing for a couple of reasons.  The _strats structure in PersistentMetaDataDefaults depended on the org.apache.openjpa.persistence.PersistentCollection class.  By removing the conditional above, then we had a mismatch in classloaders for this data structure, much like the jdk problem.&lt;/p&gt;

&lt;p&gt;I tried changing the key for this _strats structure to use the class name string instead of the actual class instance.  This got us around our immediate concern, but eventually I hit another JDK issue with mismatched classloaders when processing the annotations in AnnotationPersistentMetaDataParser:&lt;/p&gt;

&lt;p&gt;                   parsePersistentCollection(fmd, (PersistentCollection)&lt;br/&gt;
                       el.getAnnotation(PersistentCollection.class));&lt;/p&gt;

&lt;p&gt;The loading of this PersistentCollection.class used the AppClassLoader, so the lookup via getAnnotation didn&apos;t find anything since the original annotation was loaded by the TemporaryClassLoader.  Trying to get around this situation was creating some pretty ugly code.&lt;/p&gt;

&lt;p&gt;So, I am leaning towards the original workaround as a &quot;solution&quot; with proper commenting.  By allowing the AppClassLoader to load enum types (vs the TemporaryClassLoader), we would &quot;pollute&quot; the AppClassLoader with left over enum classes.  This would seem to be a minor drawback.  Of course, if we ever need to allow for the enhancement of enum classes, then we&apos;re up a creek...&lt;/p&gt;

&lt;p&gt;Enough detail for now.  Comments and suggestions are welcome.&lt;/p&gt;</comment>
                            <comment id="12629273" author="kwsutter" created="Mon, 8 Sep 2008 21:12:56 +0100"  >&lt;p&gt;Resolved in the 1.2.x branch and 1.3.0 trunk.&lt;/p&gt;</comment>
                            <comment id="13716533" author="garpinc" created="Tue, 23 Jul 2013 17:12:39 +0100"  >&lt;p&gt;Changing test class to an enum class results in linkage error in jdk 1.7 where it works in jdk 1.6. Need to re-address this behavior for jdk 1.7.&lt;/p&gt;</comment>
                            <comment id="13716559" author="kwsutter" created="Tue, 23 Jul 2013 17:33:56 +0100"  >&lt;p&gt;Are you indicating that the fix for this JIRA is related to the JDK 7 issue you are tracking with OpenJPA-2399?  The last comment on the dev mailing list indicated that you couldn&apos;t get different results for JDK 6 and 7 with this testcase.  Can you clarify what you changed and what you are experiencing now?  I&apos;m not questioning that some problems exists with JDK 7 usage, but I&apos;m trying to figure out how or what aspect of this JIRA is related.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13724509" author="garpinc" created="Tue, 30 Jul 2013 23:19:12 +0100"  >&lt;p&gt;Yes. I&apos;m indicating that this issue is related to OpenJPA-2399. I discovered how to enable the javaagent aspect of the test case. This allowed me to first replicate the issue referenced in this JIRA and then I did the prescribed uncomment in the TemporaryClassLoader that resulted in the fix. Then I changed the test class to an enum class and I got the symptoms of OpenJPA-2399.. Feel free to contact me on skype with handle garpinc to follow up. I got diverted temporarily to a different project but now i&apos;m back dealing with this issue again.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12401446">OPENJPA-672</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12384847" name="openjpa-646.patch" size="1778" author="kwsutter" created="Fri, 27 Jun 2008 17:52:26 +0100"/>
                            <attachment id="12384846" name="pmr.zip" size="250524" author="kwsutter" created="Fri, 27 Jun 2008 17:49:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Jul 2008 16:20:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160960</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt24v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203526</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>