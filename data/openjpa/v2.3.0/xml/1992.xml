<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:35:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1992/OPENJPA-1992.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1992] java.lang.ArrayIndexOutOfBoundsException if positional parameter are not started from 1</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1992</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Query q = em.createQuery(&quot;SELECT x FROM Magazine x WHERE x.title = ?2 and x.price &amp;gt; ?3&quot;);&lt;br/&gt;
q.setParameter(2, &quot;JDJ&quot;).setParameter(3, 25.0);&lt;/p&gt;

&lt;p&gt;When the query is executed, java.lang.ArrayIndexOutOfBoundsException will be thrown. Since &quot;JDJ&quot; and &quot;25.0&quot; will be stored in arr&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; and arr&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; (when arr.size =2) but the query execution code tries to get them via arr&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; and arr&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12506151">OPENJPA-1992</key>
            <summary>java.lang.ArrayIndexOutOfBoundsException if positional parameter are not started from 1</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikedd">Michael Dick</assignee>
                                    <reporter username="hanhongfang">Han Hong Fang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 May 2011 10:40:59 +0100</created>
                <updated>Wed, 13 Jul 2011 17:11:20 +0100</updated>
                            <resolved>Mon, 9 May 2011 14:46:27 +0100</resolved>
                                    <version>2.1.0</version>
                                    <fixVersion>2.2.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13028688" author="hanhongfang" created="Wed, 4 May 2011 10:42:05 +0100"  >&lt;p&gt;Patch is attached, please help to review. Thanks in advance!&lt;/p&gt;</comment>
                            <comment id="13028690" author="hanhongfang" created="Wed, 4 May 2011 10:46:18 +0100"  >&lt;p&gt;Just for information. the problem doesn&apos;t exist in openjpa 1.2.2.&lt;/p&gt;</comment>
                            <comment id="13029320" author="mikedd" created="Thu, 5 May 2011 14:30:34 +0100"  >&lt;p&gt;Thanks for the patch. Could you also provide a testcase the reproduces the error? &lt;/p&gt;

&lt;p&gt;The JPA spec does indicate that input parameters will start with 1 (section 4.6.4.1), but we should at least fail in a more informative way. &lt;/p&gt;</comment>
                            <comment id="13029773" author="hanhongfang" created="Fri, 6 May 2011 07:22:07 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;This exception can be reproduced with the hellojpa sample by following Getting Started with the Eclipse steps on &lt;a href=&quot;http://openjpa.apache.org/getting-started.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openjpa.apache.org/getting-started.html&lt;/a&gt;. After step 10, replace the Main.java with the attached copy of Main.java, and then rerun step 9.&lt;/p&gt;

&lt;p&gt;I noticed that spec indicates that input parameters will start with 1 in both JPA spec(section 4.6.4.1) and EJB spec(section 9.2.6.4), but this exception blocks our TCK, which expects &quot;SELECT x FROM Magazine x WHERE x.title = ?2 and x.price &amp;gt; ?3&quot; can be successfully processed.&lt;/p&gt;</comment>
                            <comment id="13029774" author="hanhongfang" created="Fri, 6 May 2011 07:23:30 +0100"  >&lt;p&gt;Attached modified Main.java for problem re-creation.&lt;/p&gt;</comment>
                            <comment id="13030159" author="mikedd" created="Fri, 6 May 2011 22:55:41 +0100"  >&lt;p&gt;Hi Han,&lt;/p&gt;

&lt;p&gt;Which TCK are you talking about? OpenJPA 2.1.0 passed the JPA 1.0 and 2.0 TCKs prior to release. I&apos;m assuming you&apos;re talking about a different test suite? &lt;/p&gt;</comment>
                            <comment id="13030170" author="ppoddar@apache.org" created="Fri, 6 May 2011 23:23:58 +0100"  >&lt;p&gt;The binding parameter indexing, ordering and naming are somewhat sensitive to many implicit assumptions throughout our codebase. It is made more sensitive after we introduced Prepared Query Caches that rebinds parameters (that originally could have been named) to SQL (that only accepts integral parameter). The index of parameters affects the kernel and also note that kernel internals can insert its own parameters that are invisible to the user application. &lt;/p&gt;

&lt;p&gt;Please be careful with a change unless it is broken for regular, spec-compliant use case. If for example we allow numeric parameters &lt;b&gt;not&lt;/b&gt; to begin with 1 and be monotonic and continuous, nothing stops a user to specific &quot;SELECT a FROM A a where a.name=?100234 and A.something=?34562&quot; &amp;#8211; it will get real hairy to support such an innovative user &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;An informative error message when integral parameters violate &lt;b&gt;any&lt;/b&gt; of the following&lt;br/&gt;
  a) start with 1&lt;br/&gt;
  b) monotonic&lt;br/&gt;
  c) continuous&lt;br/&gt;
is all that is required to keep life simple, code uncomplicated and majority of user satisfied.&lt;/p&gt;</comment>
                            <comment id="13030396" author="mikedd" created="Sat, 7 May 2011 20:35:12 +0100"  >&lt;p&gt;I agree. This is about detection and producing an informative error message. At this time I don&apos;t think we can or should support numeric parameters that start at any point. &lt;/p&gt;</comment>
                            <comment id="13030733" author="mikedd" created="Mon, 9 May 2011 14:46:28 +0100"  >&lt;p&gt;While in theory we could support positional parameters that do not start with 1, or contain gaps I don&apos;t think there&apos;s a compelling reason to add such support. &lt;/p&gt;

&lt;p&gt;We should not throw an ArrayIndexOutOfBoundsException during query execution though. I&apos;ve checked in changes that will detect the condition when the query is created and throw a UserException that explains why the query string is bad.&lt;/p&gt;</comment>
                            <comment id="13032724" author="dblevins" created="Thu, 12 May 2011 23:36:23 +0100"  >&lt;p&gt;From what I recall from EJB 3.0 when that group still had JPA, is that the intent of &quot;input parameters are numbered starting from 1&quot; is to simply say 1 as opposed to 0.  The line that reads &quot;the same parameter can be used more than once in the query string&quot;, should simply read &quot;the same parameter can be used zero or more times in the query string&quot;.  That was the intent as far as I recall.&lt;/p&gt;

&lt;p&gt;Not even printf requires you to use all your input parameters.  It&apos;s ok to skip some, even the first one.  The &apos;start at 1&apos; is for the input side, not the output side (in this case the query itself)&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class PositionalParametersTest &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TestCase {

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testPattern() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; query = &lt;span class=&quot;code-quote&quot;&gt;&quot;SELECT $2 FROM $3 AS $2&quot;&lt;/span&gt;;

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; result = &lt;span class=&quot;code-quote&quot;&gt;&quot;one two three four&quot;&lt;/span&gt;.replaceFirst(&lt;span class=&quot;code-quote&quot;&gt;&quot;(one) (two) (three) (four)&quot;&lt;/span&gt;, query);

        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;SELECT two FROM three AS two&quot;&lt;/span&gt;, result);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testFormatter() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; query = &lt;span class=&quot;code-quote&quot;&gt;&quot;SELECT %2$s FROM %3$s AS %2$s&quot;&lt;/span&gt;;

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; result = &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(query, &lt;span class=&quot;code-quote&quot;&gt;&quot;one&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;two&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;three&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;four&quot;&lt;/span&gt;);

        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;SELECT two FROM three AS two&quot;&lt;/span&gt;, result);
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is very very useful to be able to edit any part of a query string while trying to get things right or debugging.  One of those things you don&apos;t do because you want to, but because you&apos;re trying to get to where you want to go.&lt;/p&gt;

&lt;p&gt;Being able to tweak query strings without recompiling code is a pretty useful thing all on its own.&lt;/p&gt;</comment>
                            <comment id="13032801" author="dblevins" created="Fri, 13 May 2011 03:24:08 +0100"  >&lt;p&gt;So here&apos;s what I got.  Perspective of Linda is that &quot;attempting to bind a parameter that did not correspond to a parameter in the query is intended to cause an exception.&quot;  She didn&apos;t comment on how strict we should be with the 1 thing.  Certainly the spec says 1 in no uncertain terms.&lt;/p&gt;

&lt;p&gt;I ran a test with Hibernate and EclipseLink and both of them will allow this:&lt;/p&gt;

&lt;p&gt;    Query query = entityManager.createQuery(&quot;SELECT m from Movie as m WHERE m.title = ?2 AND m.year = ?4&quot;);&lt;br/&gt;
    query.setParameter(2, &quot;Foo&quot;);&lt;br/&gt;
    query.setParameter(4, 2011);&lt;br/&gt;
    return query.getResultList();&lt;/p&gt;

&lt;p&gt;Both of them will throw an exception from the setParameter method if the index doesn&apos;t exist, but neither cares what numbers you do or don&apos;t use beyond that.&lt;/p&gt;

&lt;p&gt;So at this point I would just have to say you&apos;re in the clear from a letter of the spec perspective, but in terms of practicality (editing huge queries can take hours and relabeling index continuously just slows you down) and in compatibility with current EclipseLink and Hibernate implementations and past OpenJPA versions, it would be great to at least get a vendor specific flag to turn on/off the strict behavior.&lt;/p&gt;

&lt;p&gt;If we had something that could be set at the unit level, that would be a very big help to us and potentially other users migrating or upgrading.&lt;/p&gt;</comment>
                            <comment id="13033063" author="mikedd" created="Fri, 13 May 2011 15:46:32 +0100"  >&lt;p&gt;I&apos;d be fine with opening a new improvement to allow this, and if there is sufficient interest we&apos;d look into it. Pinaki&apos;s point about the prepared SQL cache is particularly concerning (for me at least). I suspect any changes we make in this area will affect the cache as well. In the current implementation (and probably in previous releases) this sort of query will not work as expected (beyond the ArrayIndex exception). &lt;/p&gt;

&lt;p&gt;It&apos;s just my personal opinion, but I think it&apos;s unlikely that there will be many queries that use positional parameters and do not already start at one. I suspect most of those are copy / paste jobs from JDBC prepared statements which do start at 1. Those that aren&apos;t copied or pasted from existing statements would probably prefer the named parameter support (which is more friendly anyway). I could be all wet here though - and I can see where it would be a real pain if you had to go back and update the positional args. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12506673">OPENJPA-1995</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12507153">OPENJPA-1999</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12478374" name="Main.java" size="3016" author="hanhongfang" created="Fri, 6 May 2011 07:23:30 +0100"/>
                            <attachment id="12478144" name="OPENJPA-1992.patch" size="2222" author="hanhongfang" created="Wed, 4 May 2011 10:42:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 May 2011 13:30:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2335</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hysv4v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>202392</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>