<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:36:49 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-213/OPENJPA-213.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-213] @Column with precision and scale should result in NUMERIC(precision, scale)</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-213</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;@Column provides the precision and scale attributes, but there&apos;s no (easy) way to figure out how it affects the way OpenJPA works if any. It looks like OpenJPA reads the type of a persistent field and when it&apos;s double it maps it to DOUBLE in Derby regardless of the other attributes. When precision and scale are specified, a DDL should use NUMERIC(precision, scale) or its synonim - DECIMAL(precision, scale).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12366950">OPENJPA-213</key>
            <summary>@Column with precision and scale should result in NUMERIC(precision, scale)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikedd">Michael Dick</assignee>
                                    <reporter username="jlaskowski">Jacek Laskowski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Apr 2007 23:31:58 +0100</created>
                <updated>Fri, 12 Oct 2012 15:04:12 +0100</updated>
                            <resolved>Sun, 1 Mar 2009 20:38:59 +0000</resolved>
                                    <version>0.9.7</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>2.0.0-M2</fixVersion>
                                    <component>jpa</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12487945" author="pcl" created="Tue, 10 Apr 2007 23:57:35 +0100"  >&lt;p&gt;If the JPA2 spec ends up addressing schema generation, this might be a candidate for a TCK test.&lt;/p&gt;</comment>
                            <comment id="12494291" author="mikedd" created="Tue, 8 May 2007 14:42:44 +0100"  >&lt;p&gt;I&apos;m not sure I agree with the description of the problem. &lt;/p&gt;

&lt;p&gt;I&apos;ve been basing my assumptions on the conversions tables found at &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/guide/jdbc/getstart/mapping.html#1004791&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/guide/jdbc/getstart/mapping.html#1004791&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The tables there indicate that a java.lang.Double should be mapped to DOUBLE, not NUMERIC or DECIMAL. If NUMERIC or DECIMAL is desired then the entity should use a variable of type java.math.BigDecimal. &lt;/p&gt;

&lt;p&gt;The way the problem description is worded we&apos;d be changing the rules if precision and scale were specified in an annotation.  It becomes a question of which is more important, the type of the variable or the annotations around it. An argument can be made for either side, but I&apos;m inclined to side with the type of the variable trumping the annotations. I believe the language in the spec supports this interpretation too : &lt;/p&gt;

&lt;p&gt;From section 9.1.5 &lt;br/&gt;
int precision (Optional) The precision for a decimal (exact    0 (Value must be set by&lt;br/&gt;
              numeric) column. (Applies only if a decimal col- developer.)&lt;br/&gt;
              umn is used.)&lt;br/&gt;
int scale     (Optional) The scale for a decimal (exact        0&lt;br/&gt;
              numeric) column. (Applies only if a decimal col-&lt;br/&gt;
              umn is used.)&lt;/p&gt;

&lt;p&gt;Assuming that is the correct approach, there is still a problem with DB2 and Derby where the mapping tool creates a DOUBLE column for BigDecimals instead of a NUMERIC column. I&apos;ll use this JIRA to fix the problem with DB2 and Derby.&lt;/p&gt;</comment>
                            <comment id="12567936" author="clr" created="Tue, 12 Feb 2008 03:14:06 +0000"  >&lt;p&gt;In general, an annotation on a persistent field should override the type of the field, and orm metadata should override the annotation.&lt;/p&gt;

&lt;p&gt;So I agree with the plaintiff that if OpenJPA generates columns, the annotation should be consulted to establish the column metadata in the database. &lt;/p&gt;

&lt;p&gt;Absent any annotation or orm metadata, I agree that the jdbc mapping is reasonable. But if the user specifies a mapping, I believe it should override the jdbc defaults.&lt;/p&gt;</comment>
                            <comment id="12572507" author="dumitriu" created="Tue, 26 Feb 2008 14:58:12 +0000"  >&lt;p&gt;When using BigDecimal, presumably one is trying to get arbitrary precision, in our case for currency values.  Mapping simply as FLOAT just simply doesn&apos;t work!  I get rounding error all the time.&lt;/p&gt;

&lt;p&gt;Is there any workaround for this?  Can I modify the DDL manually?  Does OpenJPA extract the double() from BigDecimal or store it as a String?&lt;/p&gt;</comment>
                            <comment id="12597927" author="tsandor" created="Mon, 19 May 2008 12:38:13 +0100"  >&lt;p&gt;I&apos;m using openjpa-1.1.0-r422266:656510 on DB2 and SQLSERVER for testing.&lt;br/&gt;
Unfortunately mappingtool still creates DOUBLE column on DB2 and FLOAT(32) on SQLSERVER for BigDecimal columns with precisions.&lt;br/&gt;
Is there any patch or progress in this issue?&lt;/p&gt;</comment>
                            <comment id="12598251" author="mikedd" created="Tue, 20 May 2008 11:51:18 +0100"  >&lt;p&gt;Attaching a patch. The patch only addresses the &quot;first&quot; part of the fix ie BigDecimal will now be mapped to NUMERIC instead of DOUBLE.&lt;/p&gt;

&lt;p&gt;The second part of the fix is to promote a field of type Double to NUMERIC if scale or precision  is specified on the annotation. &lt;/p&gt;</comment>
                            <comment id="13474983" author="chunlinyao" created="Fri, 12 Oct 2012 14:21:03 +0100"  >&lt;p&gt;DB2 And Derby still map BigDecimal to DOUBLE. Although this path map BigDecimal to Types.NUMERIC ,but AbstraceDB2Dictionary.java file set numericTypeName to DOUBLE in its constructor.&lt;br/&gt;
I don&apos;t know why it defined to DOUBLE. @curtisr7 tried to fix it at &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1224&quot; title=&quot;OpenJPA MySQL BigDecimal ignoring Precision/Scale column Annotation when generating tables &quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1224&quot;&gt;&lt;del&gt;OPENJPA-1224&lt;/del&gt;&lt;/a&gt; but finally rolled back the changes.&lt;/p&gt;</comment>
                            <comment id="13475004" author="curtisr7" created="Fri, 12 Oct 2012 15:04:12 +0100"  >&lt;p&gt;Per one of my last comment messages in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1224&quot; title=&quot;OpenJPA MySQL BigDecimal ignoring Precision/Scale column Annotation when generating tables &quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1224&quot;&gt;&lt;del&gt;OPENJPA-1224&lt;/del&gt;&lt;/a&gt; : &lt;br/&gt;
Rick Curtis submitted changeset 822288 to trunk in openjpa (3 files) - 06/Oct/09 15:14&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1224&quot; title=&quot;OpenJPA MySQL BigDecimal ignoring Precision/Scale column Annotation when generating tables &quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1224&quot;&gt;&lt;del&gt;OPENJPA-1224&lt;/del&gt;&lt;/a&gt;: backing out changes while investigating a test regression.&lt;/p&gt;

&lt;p&gt;It looks like this change regressed some of our internal tests and I backed the change out. I&apos;d suggest posting a question to the users mailing list with details on what you are hitting as opposed to posting comments to a JIRA that was closed over 4 years ago.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Rick&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12366673">OPENJPA-205</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12432116">OPENJPA-1224</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12382372" name="OPENJPA-213.patch.txt" size="11520" author="mikedd" created="Tue, 20 May 2008 11:51:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Apr 2007 22:57:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160544</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy30fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>51385</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>