<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:34:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-437/OPENJPA-437.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-437] EntityManagerFactory is not thread-safe</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-437</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Under certain conditions, we have discovered that the EntityManagerFactory is not thread safe when creating EntityManagers.  The problem is in the loadPersistentTypes method of the AbstractBrokerFactory.  There is an unprotected data structure (_pcClassNames) that can various problems (NullPointerException, IndexOutOfBoundsException, etc) when attempting to add new elements to the ArrayList.  Other similar datastructures in this part are properly synchronized (_pcClassLoaders for example), but somehow we missed this one.&lt;/p&gt;

&lt;p&gt;A common scenario where this might be encountered is if your SLSB has an injected PersistenceUnit (EntityManagerFactory), but is attempting to create the EntityManager during a post-bean creation method (@PostConstruct).  In this case, the SLSB instances are probably using the same EMF instance (of course this would depend on your application server implementation).  If you have this type of environment, then hitting these SLSB&apos;s with multiple clients could get you into this situation.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382100">OPENJPA-437</key>
            <summary>EntityManagerFactory is not thread-safe</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kwsutter">Kevin Sutter</assignee>
                                    <reporter username="kwsutter">Kevin Sutter</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Nov 2007 14:23:02 +0000</created>
                <updated>Thu, 27 Mar 2008 20:23:46 +0000</updated>
                            <resolved>Fri, 25 Jan 2008 21:52:10 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.0.1</version>
                    <version>1.0.2</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.0.2</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>kernel</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12544155" author="pcl" created="Wed, 21 Nov 2007 03:43:00 +0000"  >&lt;p&gt;A possible fix has been checked in for &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-449&quot; title=&quot;Under concurrent access, createEntityManager() fails with NPE.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-449&quot;&gt;&lt;del&gt;OPENJPA-449&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12544156" author="pcl" created="Wed, 21 Nov 2007 03:44:38 +0000"  >&lt;p&gt;Make that &quot;a partial fix&quot;. &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-449&quot; title=&quot;Under concurrent access, createEntityManager() fails with NPE.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-449&quot;&gt;&lt;del&gt;OPENJPA-449&lt;/del&gt;&lt;/a&gt; only deals with _pcClassLoaders.&lt;/p&gt;</comment>
                            <comment id="12559564" author="kwsutter" created="Wed, 16 Jan 2008 16:30:07 +0000"  >&lt;p&gt;Looking at just synchronizing the AbstractBrokerFactory.loadPersistentTypes method to resolve this problem.  As I continued to look at this problem, both _pcClassNames and _pcClassLoaders are not synchronized.  Patrick&apos;s fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-449&quot; title=&quot;Under concurrent access, createEntityManager() fails with NPE.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-449&quot;&gt;&lt;del&gt;OPENJPA-449&lt;/del&gt;&lt;/a&gt; to move the creation of the _pcClassLoaders structure to the constructor closed the window for the scenario described in &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-449&quot; title=&quot;Under concurrent access, createEntityManager() fails with NPE.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-449&quot;&gt;&lt;del&gt;OPENJPA-449&lt;/del&gt;&lt;/a&gt;, but it&apos;s still not protected from multiple client/thread access.  (Note, my previous comments in the Description about _pcClassLoaders being protected were not accurate.)&lt;/p&gt;

&lt;p&gt;I could change both of these Collections to be synchronized, but the code was getting a bit ugly due to the still required synchronization for the iterators.  Since these two Collections are only modified in this method, an easy solution would be to make the method Synchronized.  Since this method is only used when creating new brokers, this shouldn&apos;t affect the through put.&lt;/p&gt;

&lt;p&gt;Also, the logic for this method is based on the return value of the loadPersistentTypes on the MetaDataRepository instance.  This method is also synchronized, so we&apos;d be following suit.&lt;/p&gt;

&lt;p&gt;Any concerns about going the route of synchronizing the AbstractBrokerFactory.loadPersistentTypes method?&lt;/p&gt;

&lt;p&gt;Kevin&lt;/p&gt;</comment>
                            <comment id="12561803" author="kwsutter" created="Wed, 23 Jan 2008 20:05:21 +0000"  >&lt;p&gt;Resolved in both 1.0.x and 1.1.0 branches (svn 612846 revision).&lt;/p&gt;</comment>
                            <comment id="12562567" author="pcl" created="Fri, 25 Jan 2008 16:43:10 +0000"  >&lt;p&gt;I&apos;m a bit concerned about adding the synchronization. While this addresses the thread safety issue, it also introduces a bottleneck for applications with a large number of concurrent threads creating new EntityManagers. This was not a bottleneck in the previous (unsafe) code since the synchronized repository call was only made once.&lt;/p&gt;

&lt;p&gt;Attached is a patch that I believe is both thread-safe and unsynchronized. There might be a better datastructure other than a ConcurrentReferenceHashSet, but I think that it should do the job.&lt;/p&gt;</comment>
                            <comment id="12562568" author="pcl" created="Fri, 25 Jan 2008 16:43:30 +0000"  >&lt;p&gt;Reopening pending discussion of synchronization.&lt;/p&gt;</comment>
                            <comment id="12562686" author="kwsutter" created="Fri, 25 Jan 2008 21:18:49 +0000"  >&lt;p&gt;Patrick,&lt;br/&gt;
Thanks for taking a look at this.&lt;/p&gt;

&lt;p&gt;I went through the same type of concerns when I was coming up with the original patch.  But, it was my understanding that the ConcurrentReferenceHashSet still has an unprotected Iterator.  So, later on in this same loadPersistentTypes() method, the _pcClassNames structure is iterated through.  To make this iterator safe, then I would have to synchronize around this as well.  Also, the _pcClassLoaders should also be made thread-safe since we&apos;re updating that structure in this same method.  When I put in all of the necessary safeguards, it looked like it might be cleaner just by making the method synchronized.&lt;/p&gt;

&lt;p&gt;But, if we&apos;re hitting a bottleneck by making that method synchronized, then we probably need to change it.  I had not discovered that bottleneck yet...&lt;/p&gt;

&lt;p&gt;So, do we need to add the following items to your patch?&lt;/p&gt;

&lt;p&gt;o  Initialize _pcClassLoaders with a ConcurrentReferenceHashSet.&lt;br/&gt;
o  Protect the _pcClassNames iterator usage with a synch block&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Kevin&lt;/p&gt;</comment>
                            <comment id="12562699" author="pcl" created="Fri, 25 Jan 2008 21:52:10 +0000"  >&lt;p&gt;Good points. I resolved both with my most recent commit on this issue.&lt;/p&gt;</comment>
                            <comment id="12562728" author="pcl" created="Fri, 25 Jan 2008 22:43:16 +0000"  >&lt;p&gt;In an offline discussion with Kevin, I realized that _pcClassNames is now read-only, so I think we should be able to replace it with a regular HashSet instead of a ConcurrentReferenceHashSet. Does that sound correct?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12382922">OPENJPA-449</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12374057" name="OPENJPA-437-nosync.patch" size="3342" author="pcl" created="Fri, 25 Jan 2008 16:43:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Nov 2007 03:43:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160759</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt0af:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203227</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>