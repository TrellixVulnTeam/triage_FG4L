<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:30:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1996/OPENJPA-1996.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1996] OpenJPA Samples fail on MacOS X</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1996</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;It was reported on the OpenJPA User Forum that the samples were not working on the MacOS X architecture.  I downloaded a copy and gave it a ran, and sure enough, it did not work.  Basically, the problem was in the derby build itself, which attempted to load sun/security/pkcs11/SunPKCS11 and the MacOS X version of the class is apparently different enough from the version Derby was built against to be incompatible causing the LinkageError that I noted in the derby log:&lt;/p&gt;

&lt;p&gt;java.lang.LinkageError: loader (instance of  sun/misc/Launcher$ExtClassLoader): attempted  duplicate class definition for name: &quot;sun/security/pkcs11/SunPKCS11&quot;&lt;br/&gt;
	at java.lang.ClassLoader.defineClass1(Native Method)&lt;br/&gt;
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)&lt;br/&gt;
	at java.lang.ClassLoader.defineClass(ClassLoader.java:616)&lt;br/&gt;
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)&lt;br/&gt;
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)&lt;br/&gt;
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)&lt;br/&gt;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)&lt;br/&gt;
	at sun.misc.Launcher$ExtClassLoader.findClass(Launcher.java:229)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:296)&lt;br/&gt;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)&lt;br/&gt;
	at sun.security.jca.ProviderConfig$4.run(ProviderConfig.java:253)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at sun.security.jca.ProviderConfig.doLoadProvider(ProviderConfig.java:244)&lt;br/&gt;
	at sun.security.jca.ProviderConfig.getProvider(ProviderConfig.java:224)&lt;br/&gt;
	at sun.security.jca.ProviderList.getProvider(ProviderList.java:215)&lt;br/&gt;
	at sun.security.jca.ProviderList.getService(ProviderList.java:313)&lt;br/&gt;
	at sun.security.jca.GetInstance.getInstance(GetInstance.java:140)&lt;br/&gt;
	at java.security.Security.getImpl(Security.java:659)&lt;br/&gt;
	at java.security.MessageDigest.getInstance(MessageDigest.java:129)&lt;br/&gt;
	at java.io.ObjectStreamClass.computeDefaultSUID(ObjectStreamClass.java:1759)&lt;br/&gt;
	at java.io.ObjectStreamClass.access$100(ObjectStreamClass.java:52)&lt;br/&gt;
	at java.io.ObjectStreamClass$1.run(ObjectStreamClass.java:205)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at java.io.ObjectStreamClass.getSerialVersionUID(ObjectStreamClass.java:202)&lt;br/&gt;
	at java.io.ObjectStreamClass.writeNonProxy(ObjectStreamClass.java:667)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeClassDescriptor(ObjectOutputStream.java:648)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeNonProxyDesc(ObjectOutputStream.java:1253)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeClassDesc(ObjectOutputStream.java:1211)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1290)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.FormatIdOutputStream.writeObject(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.FormatableHashtable.writeExternal(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.FormatIdOutputStream.writeObject(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DDColumnDependableFinder.writeExternal(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.services.io.FormatIdOutputStream.writeObject(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.types.UserType.writeExternal(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.logColumn(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.logRow(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.InsertOperation.writeOptionalDataToBuffer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.InsertOperation.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LoggableActions.actionInsert(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.insertNoOverflow(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.insertAtSlot(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.insertAtSlot(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.insert(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapController.doInsert(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapController.insertAndFetchLocation(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.TabInfoImpl.insertRowListImpl(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.TabInfoImpl.insertRow(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptor(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.depend.BasicDependencyManager.addDependency(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.depend.BasicDependencyManager.copyDependencies(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.compileStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.prepareAndRelease(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ExecSPSNode.generate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement40.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareMetaDataStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.prepareSPS(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQueryUsingSystemTables(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.doGetCols(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getColumns(Unknown Source)&lt;br/&gt;
	at org.apache.commons.dbcp.DelegatingDatabaseMetaData.getColumns(DelegatingDatabaseMetaData.java:218)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getColumns(DelegatingDatabaseMetaData.java:145)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection$LoggingDatabaseMetaData.getColumns(LoggingConnectionDecorator.java:776)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getColumns(DelegatingDatabaseMetaData.java:145)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.DBDictionary.getColumns(DBDictionary.java:4061)&lt;br/&gt;
	at org.apache.openjpa.jdbc.schema.SchemaGenerator.generateTables(SchemaGenerator.java:524)&lt;br/&gt;
	at org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchema(SchemaGenerator.java:364)&lt;br/&gt;
	at org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas(SchemaGenerator.java:300)&lt;br/&gt;
	at org.apache.openjpa.jdbc.schema.SchemaTool.getDBSchemaGroup(SchemaTool.java:1163)&lt;br/&gt;
	at org.apache.openjpa.jdbc.schema.SchemaTool.add(SchemaTool.java:363)&lt;br/&gt;
	at org.apache.openjpa.jdbc.schema.SchemaTool.run(SchemaTool.java:340)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.java:505)&lt;br/&gt;
	at org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.java:456)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(JDBCBrokerFactory.java:160)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(JDBCBrokerFactory.java:164)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.newBrokerImpl(JDBCBrokerFactory.java:122)&lt;br/&gt;
	at org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(AbstractBrokerFactory.java:210)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingBrokerFactory.newBroker(DelegatingBrokerFactory.java:156)&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:227)&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:154)&lt;br/&gt;
	at org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:60)&lt;br/&gt;
	at hellojpa.Main.main(Main.java:43)&lt;/p&gt;

&lt;p&gt;I was able to resolve the issue by changing the classpath to reference an install of Derby that is shipped with every install of MacOS X (in /usr/share/derby).  Opening this JIRA issue to update the OpenJPA samples so that they will choose the version of Derby that comes pre-installed on MacOS X.&lt;/p&gt;</description>
                <environment>MacOS X 1.6.x</environment>
        <key id="12506760">OPENJPA-1996</key>
            <summary>OpenJPA Samples fail on MacOS X</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fyrewyld">Jody Grassel</assignee>
                                    <reporter username="fyrewyld">Jody Grassel</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 May 2011 20:37:34 +0100</created>
                <updated>Wed, 11 Apr 2012 20:35:32 +0100</updated>
                            <resolved>Mon, 11 Jul 2011 16:22:45 +0100</resolved>
                                    <version>2.1.0</version>
                                    <fixVersion>1.0.5</fixVersion>
                    <fixVersion>1.2.3</fixVersion>
                    <fixVersion>2.0.2</fixVersion>
                    <fixVersion>2.1.1</fixVersion>
                    <fixVersion>2.2.0</fixVersion>
                                    <component>samples</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="13251866" author="binhn" created="Wed, 11 Apr 2012 20:35:32 +0100"  >&lt;p&gt;I got same problem with Lion 10.7.3, openjpa 2.2.0. The classpath looks right when I echo it out  /mywork/apache-openjpa-2.2.0/examples/simple:/mywork/apache-openjpa-2.2.0/openjpa-all-2.2.0.jar:/usr/share/derby/lib/derby.jar &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 17 Mar 2012 21:42:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2331</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz7pfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>289090</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>