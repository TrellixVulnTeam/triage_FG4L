<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:30:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-1573/OPENJPA-1573.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-1573] Incorrect SQL for HAVING = entity variable</title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-1573</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;I added the following query to test case TestSpec10_1_26:&lt;/p&gt;

&lt;p&gt;        query = &quot;select VALUE(e) from Department1 d, &quot; +&lt;br/&gt;
        &quot; in (d.empMap) e &quot; +&lt;br/&gt;
        &quot;group by VALUE(e) &quot; +&lt;br/&gt;
        &quot;having VALUE(e) = :emp1&quot;;&lt;br/&gt;
        q = em.createQuery(query).setParameter(&quot;emp1&quot;, e1);&lt;/p&gt;

&lt;p&gt;I also tried the following, which should be equivalent:&lt;/p&gt;

&lt;p&gt;        query = &quot;select e from Department1 d, &quot; +&lt;br/&gt;
            &quot; in (d.empMap) e &quot; +&lt;br/&gt;
            &quot;group by e &quot; +&lt;br/&gt;
            &quot;having e = :emp1&quot;;&lt;br/&gt;
        q = em.createQuery(query).setParameter(&quot;emp1&quot;, e1);        &lt;/p&gt;

&lt;p&gt;Both failed with the following:&lt;/p&gt;

&lt;p&gt;&amp;lt;openjpa-2.0.0-SNAPSHOT-r422266:922946M fatal general error&amp;gt; org.apache.openjpa.persistence.PersistenceException: Column T2.EMPID is referenced in the HAVING clause but is not in the GROUP BY list. &lt;/p&gt;
{SELECT t1.empId, t1.dept_id FROM T6D1 t0 INNER JOIN T6E1 t1 ON t0.deptId = t1.dept_id INNER JOIN T6E1 t2 ON t0.deptId = t2.dept_id GROUP BY t1.empId, t1.dept_id HAVING t2.empId = ?} &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X24&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.DBDictionary.narrow(DBDictionary.java:4823)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(DBDictionary.java:4783)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:137)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:118)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLExceptions.java:70)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.handleCheckedException(SelectResultObjectProvider.java:155)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl$PackingResultObjectProvider.handleCheckedException(QueryImpl.java:2101)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:40)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.toResult(QueryImpl.java:1243)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:1004)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:860)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:791)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.execute(DelegatingQuery.java:542)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:290)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:304)&lt;br/&gt;
	at org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryQualifiedId(TestSpec10_1_26.java:151)&lt;br/&gt;
	at org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.testQueryQualifiedId(TestSpec10_1_26.java:76)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:600)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runTest(AbstractPersistenceTestCase.java:516)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runBare(AbstractPersistenceTestCase.java:503)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runBare(AbstractPersistenceTestCase.java:479)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.run(AbstractPersistenceTestCase.java:179)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;
Caused by: org.apache.openjpa.lib.jdbc.ReportingSQLException: Column T2.EMPID is referenced in the HAVING clause but is not in the GROUP BY list. {SELECT t1.empId, t1.dept_id FROM T6D1 t0 INNER JOIN T6E1 t1 ON t0.deptId = t1.dept_id INNER JOIN T6E1 t2 ON t0.deptId = t2.dept_id GROUP BY t1.empId, t1.dept_id HAVING t2.empId = ?}
&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;code=30000, state=42X24&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(LoggingConnectionDecorator.java:257)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(LoggingConnectionDecorator.java:237)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.access$000(LoggingConnectionDecorator.java:70)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.prepareStatement(LoggingConnectionDecorator.java:289)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:186)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator$ConfiguringConnection.prepareStatement(ConfiguringConnectionDecorator.java:155)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:186)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.prepareStatement(JDBCStoreManager.java:1600)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:175)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:549)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:529)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(SelectImpl.java:450)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:391)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:363)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion$UnionSelect.execute(LogicalUnion.java:427)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:230)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:220)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(SelectResultObjectProvider.java:94)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl$PackingResultObjectProvider.open(QueryImpl.java:2060)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:34)&lt;br/&gt;
	... 31 more&lt;br/&gt;
NestedThrowables:&lt;br/&gt;
java.sql.SQLSyntaxErrorException: Column T2.EMPID is referenced in the HAVING clause but is not in the GROUP BY list.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.apache.commons.dbcp.DelegatingConnection.prepareStatement(DelegatingConnection.java:262)&lt;br/&gt;
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.prepareStatement(PoolingDataSource.java:307)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:188)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator$EventConnection.prepareStatement(JDBCEventConnectionDecorator.java:200)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:186)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator$LoggingConnection.prepareStatement(LoggingConnectionDecorator.java:286)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:186)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator$ConfiguringConnection.prepareStatement(ConfiguringConnectionDecorator.java:155)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:186)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection.prepareStatement(JDBCStoreManager.java:1600)&lt;br/&gt;
	at org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(DelegatingConnection.java:175)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:549)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(SQLBuffer.java:529)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(SelectImpl.java:450)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:391)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.SelectImpl.execute(SelectImpl.java:363)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion$UnionSelect.execute(LogicalUnion.java:427)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:230)&lt;br/&gt;
	at org.apache.openjpa.jdbc.sql.LogicalUnion.execute(LogicalUnion.java:220)&lt;br/&gt;
	at org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(SelectResultObjectProvider.java:94)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl$PackingResultObjectProvider.open(QueryImpl.java:2060)&lt;br/&gt;
	at org.apache.openjpa.lib.rop.EagerResultList.&amp;lt;init&amp;gt;(EagerResultList.java:34)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.toResult(QueryImpl.java:1243)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:1004)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:860)&lt;br/&gt;
	at org.apache.openjpa.kernel.QueryImpl.execute(QueryImpl.java:791)&lt;br/&gt;
	at org.apache.openjpa.kernel.DelegatingQuery.execute(DelegatingQuery.java:542)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.execute(QueryImpl.java:290)&lt;br/&gt;
	at org.apache.openjpa.persistence.QueryImpl.getResultList(QueryImpl.java:304)&lt;br/&gt;
	at org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryQualifiedId(TestSpec10_1_26.java:151)&lt;br/&gt;
	at org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.testQueryQualifiedId(TestSpec10_1_26.java:76)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:600)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runTest(AbstractPersistenceTestCase.java:516)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runBare(AbstractPersistenceTestCase.java:503)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runBare(AbstractPersistenceTestCase.java:479)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.run(AbstractPersistenceTestCase.java:179)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;
Caused by: java.sql.SQLException: Column T2.EMPID is referenced in the HAVING clause but is not in the GROUP BY list.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
	... 63 more&lt;br/&gt;
Caused by: ERROR 42X24: Column T2.EMPID is referenced in the HAVING clause but is not in the GROUP BY list.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.addAggregates(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.init(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.sql.compile.NodeFactory.getNode(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	... 57 more&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12459149">OPENJPA-1573</key>
            <summary>Incorrect SQL for HAVING = entity variable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fancy">Catalina Wei</assignee>
                                    <reporter username="dianner">Dianne Richards</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Mar 2010 14:27:27 +0000</created>
                <updated>Tue, 30 Mar 2010 00:17:48 +0100</updated>
                            <resolved>Tue, 16 Mar 2010 06:31:37 +0000</resolved>
                                    <version>2.0.0-beta2</version>
                                    <fixVersion>2.0.0-beta3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12845737" author="fancy" created="Tue, 16 Mar 2010 06:31:37 +0000"  >&lt;p&gt;Fix checked under trunk svn r923589&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 16 Mar 2010 06:31:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161836</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt6ev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>204219</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>