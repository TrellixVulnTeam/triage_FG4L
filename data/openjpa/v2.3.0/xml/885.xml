<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 04:39:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/OPENJPA-885/OPENJPA-885.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[OPENJPA-885] Support clear methods on EntityManager, including new CascadeType.CLEAR </title>
                <link>https://issues.apache.org/jira/browse/OPENJPA-885</link>
                <project id="12310351" key="OPENJPA">OpenJPA</project>
                    <description>&lt;p&gt;Support the 2.0 new  EntityManager clear() methods. Also support the new CascadeType.CLEAR.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12413660">OPENJPA-885</key>
            <summary>Support clear methods on EntityManager, including new CascadeType.CLEAR </summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12416215">OPENJPA-956</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dianner">Dianne Richards</assignee>
                                    <reporter username="dianner">Dianne Richards</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Jan 2009 22:03:36 +0000</created>
                <updated>Tue, 9 Mar 2010 18:31:08 +0000</updated>
                            <resolved>Tue, 7 Apr 2009 18:45:06 +0100</resolved>
                                    <version>2.0.0-M2</version>
                                    <fixVersion>2.0.0-M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12673343" author="dianner" created="Fri, 13 Feb 2009 18:34:55 +0000"  >&lt;p&gt;This patch provides the clear(Entity) operation specified in the JPA 2.0 spec. It implements some new internal detach method to provide the no-flush and no-copy behaviors.&lt;/p&gt;</comment>
                            <comment id="12673346" author="dianner" created="Fri, 13 Feb 2009 18:36:23 +0000"  >&lt;p&gt;On the previous comment, with the patch, I forgot to mention that this patch does not include the cascade support. That will be provided later.&lt;/p&gt;</comment>
                            <comment id="12673378" author="ppoddar@apache.org" created="Fri, 13 Feb 2009 21:27:42 +0000"  >&lt;p&gt;I will suggest to look at Compatibility.setFlushBeforeDetach(boolean). &lt;br/&gt;
Appropriate setting of this flag &lt;b&gt;may&lt;/b&gt; itself be sufficient to address the needs for JPA 2.0 clear() methods which dictates no flushing before detach() while OpenJPA, by default, behaves otherwise. &lt;/p&gt;

&lt;p&gt;If you decide to go by setFlushBeforeDetach(boolean) route, then consider setting it in appropriate ProductDerivation (possibly with new versioning capability of OpenJPAConfiguration.getSpecification() to ensure backward compatibility).&lt;/p&gt;</comment>
                            <comment id="12677197" author="dianner" created="Fri, 27 Feb 2009 01:23:25 +0000"  >&lt;p&gt;The clear(Object) method will use an existing Broker detach method. There are several differences in behavior between those required for the clear method and the current detach method. As a result, the default 2.0 behavior will change. However,  compatibility options will be provided to revert to the 1.x behaviors.&lt;/p&gt;

&lt;p&gt;The first difference has to do with flush. The current behavior is to flush before detaching. However, the JPA 2.0 spec specifically says that the current data will not be persisted. So, this will be the default. The using application can use the Compatibility setFlushBeforeDetach() method to change this behavior.&lt;/p&gt;

&lt;p&gt;With the current detach methods, copies are made of the entities and returned. Does anybody know why this copy is made? It&apos;s not necessary for the new clear method since it has a void return. We&apos;d like to change the default behavior for the current detach methods to return the original enties with a state change. Does anybody know of any impacts this might have? Again, there will be a compatibility option to change this in special circumstances.&lt;/p&gt;

&lt;p&gt;With the current detach methods, the entities still remain in the persistent context. However, for the new clear method, the specified entities must be removed. I assume the impact will be in performance. As with the previous 2 differences, a compatibility option will be provided.&lt;/p&gt;

&lt;p&gt;The last difference deals with cascading. The current detach behavior does a complete cascade. The clear method requires the cascade to be explicitely specified. Does anyone see a need for providing a compatibility option for this also?&lt;/p&gt;</comment>
                            <comment id="12677470" author="techhusky" created="Fri, 27 Feb 2009 18:56:50 +0000"  >&lt;p&gt;Regarding your question about a full cascading detach, in order to allow backward compatibility and reuse as much of the existing code path as possible, a compatibility option sounds like the way to go.  That would entail enhancing the existing detach logic to do a path-driven cascade &amp;amp; making that the default behavior when in a JPA 2 environment.  If not in a JPA 2 environment, perform a full cascade by default.  In either environment, allow the default to be overridden via a compatibility flag.&lt;/p&gt;</comment>
                            <comment id="12679653" author="dianner" created="Fri, 6 Mar 2009 17:02:05 +0000"  >&lt;p&gt;In testing the new function in this JIRA, I&apos;ve run into a problem that I could use some input for. First, let me explain what I&apos;m doing. There are 4 compatibility options (identified in a previous post). We need to change the default values for openjpa only, without affecting other derived products. So, I&apos;ve put code in the PersistentProductDerivation to retrieve the Compatibility instance and set the new default values for openjpa.&lt;/p&gt;

&lt;p&gt;In my unit test, I initially changed these individual values in my test code, by retrieving the Compatibility instance and using the appropriate setter method, and things worked fine. But, when I specified a change using a property, ex: openjpa.Compatibility=default(flushBeforeDetach=false), the other 3 default values reverted to the original values, not the ones that I set in the PPD.&lt;/p&gt;

&lt;p&gt;Here&apos;s what I discovered through running the debugger: THe OpenJpaConfigurationImpl.fromProperties() is called to store the new properties. this calls PluginValue.setString(). This has the following code:&lt;/p&gt;

&lt;p&gt;   if (_singleton)&lt;br/&gt;
      set(null, true)&lt;/p&gt;

&lt;p&gt;which effectively changes the _value from the current Compatibility object to null. Thus, when the next getCompatibilityInstance() method is called, a new object is instantiated, with the original default values. Is this a bug? Are there other properties that this could happen to in the future? ANy suggestions on how to fix this without breaking things?&lt;/p&gt;</comment>
                            <comment id="12679684" author="dianner" created="Fri, 6 Mar 2009 18:38:29 +0000"  >&lt;p&gt;One option that Jeremy suggested is to check the providers for updates when  Compatibility  is instantiated. Is this a vaible option? Is there an order specified for the providers?&lt;/p&gt;</comment>
                            <comment id="12679699" author="ppoddar@apache.org" created="Fri, 6 Mar 2009 19:52:51 +0000"  >&lt;p&gt;&amp;gt; when I specified a change using a property, ex: openjpa.Compatibility=default(flushBeforeDetach=false),&lt;/p&gt;

&lt;p&gt;When is &apos;when&apos; exactly? After an EntityManagerFactory is obtained? After an EntityManager is created? &lt;/p&gt;

&lt;p&gt;Compatibility is singleton and non-dynamic. Changing its value later (say after em is created) itself should be prohibited and if that is not happening that is of concern.&lt;/p&gt;

&lt;p&gt;Can you post some test case (and configuration artifacts) that demonstrates the use case?&lt;/p&gt;

&lt;p&gt;&amp;gt; when Compatibility is instantiated.&lt;br/&gt;
Plugin instantiation is lazy and on-demand &amp;#8211; unless you overwrite with openjpa.InitializeEagerly.&lt;/p&gt;

&lt;p&gt;&amp;gt; Is there an order specified for the providers? &lt;br/&gt;
I am assuming from the context &apos;providers&apos; imply ProductDerivation. If that is the case then yes. Follow the trails of ProductDerivation.getType().&lt;/p&gt;</comment>
                            <comment id="12680165" author="dianner" created="Mon, 9 Mar 2009 14:55:04 +0000"  >&lt;p&gt;I&apos;m attaching the CompatibilityProblemPatch file. This contains 2 test cases. The first one,  TestCompatibilityChanges, show that things are working fine. The secondOne, TestCompatibilityProblem, shows the problem. In the second one, I&apos;ve added a property change to the setUp call. This apparently ends up passing the property in on the createEntityManagerFactory().&lt;/p&gt;

&lt;p&gt;Also in this patch are 2 code changes. The Compatibility class has several new instance variables with associated setter/getter methods. The PersistenceProductDerivation class has calls to the setter methods to change the default values for openjpa. &lt;/p&gt;

&lt;p&gt;So, to repeat what is happening, the PPD changes are working correctly initially, as seen in the TestCompatibilityChanges test case. But, when a change to Compatibility is specified on the createEMF(), these changes are lost because the entire Compatibility object is lost when the _value variable is set to null. I realize the this is a singleton. However, this property seems to be a special case because iterative changes can be made to it.&lt;/p&gt;</comment>
                            <comment id="12682322" author="dianner" created="Mon, 16 Mar 2009 14:16:53 +0000"  >&lt;p&gt;I&apos;m attaching both a code patch and test patch, which should be committed together. Documentation updates will be included in a future patch.&lt;/p&gt;

&lt;p&gt;This code provides support for the clear(Object) method in the JPA 2.0 spec draft. In order to provide the correct semantics, some default behaviors of the detach methods was changed. We no longer flush before detach, nor copy the detached object, nor automatically cascade. (Cascade is based on the cascade annotation by default.) Also, to comply with the spec, the object is now removed from the persistent context.&lt;/p&gt;

&lt;p&gt;In order to revert to the previous detach behavior, the openjpa.Compatibility property may be changed by setting the following attributes:&lt;br/&gt;
   flushBeforeDetach=true&lt;br/&gt;
   copyDetachedObjects=true (will also keep the object in the persistent context)&lt;br/&gt;
   cascadeWithDetach=true&lt;/p&gt;</comment>
                            <comment id="12682702" author="techhusky" created="Tue, 17 Mar 2009 15:48:52 +0000"  >&lt;p&gt;I&apos;ve reviewed detachCodePatch.txt and detachTestPatch.txt dated 16/Mar/09 07:16 AM.  Nice work.  The changes look good to me.  Unless someone has issues with any of the changes, I&apos;ll commit them later today.&lt;/p&gt;

&lt;p&gt;Some comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Don&apos;t forget to provide documentation updates&lt;/li&gt;
	&lt;li&gt;Tests that use cascade defined in xml - for both cascade clear and all need to be provided.  I can partially see why they weren&apos;t provided (or even obvious), since the current orm.xml doesn&apos;t have the cascade-clear element defined.  I&apos;ll mention the missing element to Kevin so he can help make sure it gets included in a future revision of the 2.0 spec.  I recommend creating a new JIRA for the future work (using cascade-clear defined in orm.xml &amp;amp; corresponding updates in the XML parser) so this work item can be resolved.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12682907" author="techhusky" created="Wed, 18 Mar 2009 04:15:03 +0000"  >&lt;p&gt;Committed detachTestPatch.txt and detachCodePatch.txt (with updates) for Dianne under revisions 755468, 755469, and 755470.  I used the existing compatibility option name &quot;CopyOnDetach&quot; because a) the code comments were more extensive, b) there is existing documentation that makes reference to this option and c) it is seemed more appropriate.  I&apos;m open to using &quot;CopyDetachedObjects&quot; if there is a strong argument for using this name vs. the other.&lt;/p&gt;</comment>
                            <comment id="12682920" author="ppoddar@apache.org" created="Wed, 18 Mar 2009 05:35:40 +0000"  >&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Whether openjpa will always cascade on detach, regardless of the&lt;/li&gt;
	&lt;li&gt;cascade setting.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@return true if cascade will always occur, false if cascade will only&lt;/li&gt;
	&lt;li&gt;occur if it is specified in metadata&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@since 2.0.0&lt;br/&gt;
     */&lt;br/&gt;
    public boolean getCascadeWithDetach() 
{
        return _cascadeWithDetach;
    }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;1. What does this new option mean?&lt;br/&gt;
2. What will a detached graph of x will look like when this option is set to true? Or false? What will be the difference?&lt;br/&gt;
3. How does this option differ from three existing option of &apos;loaded&apos;, &apos;fetch-group&apos; and &apos;all&apos;?&lt;br/&gt;
4. Why is this option in Compatibility? What previous behavior that has now changed so that user can fall back upon to access old behavior?  &lt;/p&gt;</comment>
                            <comment id="12683514" author="dianner" created="Thu, 19 Mar 2009 16:49:46 +0000"  >&lt;p&gt;I think there are 2 issues here:&lt;br/&gt;
  1 - whether or not to the cascade compatibility option is needed&lt;br/&gt;
  2 - whether or not the options loaded, fetch-group, and all are handled&lt;/p&gt;

&lt;p&gt;Although these may be interrelated, let&apos;s discuss them individually at first.&lt;/p&gt;

&lt;p&gt;For the cascade compatibility option question, we first have to agree on what the old behavior does. I have created a simple test case for this, with the new patch cascadeTestPatch.txt. The cascade relationship of the entities is:&lt;br/&gt;
   Entity1 to Entity2 - ALL&lt;br/&gt;
   Entity2 to Entity3 - PERSIST only&lt;/p&gt;

&lt;p&gt;When you run this test on an openjpa version without my changes, you&apos;ll see that all entities are detached when detach(e1) is run. So, it automatically cascades. (Note: I know this is with all entities loaded. Again, I&apos;ll address that later.)&lt;/p&gt;

&lt;p&gt;Second, what would the spec expect in this scenario with the new clear(Object) option. Here&apos;s what the spec says in section 3.2.6:&lt;/p&gt;

&lt;p&gt;The semantics of the clear operation, applied to an entity X are as follows:&lt;br/&gt;
&#8226;If X is a managed entity, the clear operation causes it to become detached. The clear operation is cascaded to entities referenced by X, if the relationships from X to these other entities is annotated with the cascade=CLEAR or cascade=ALL annotation element value. Entities which previously referenced X will continue to reference X.&lt;br/&gt;
&#8226;If X is a new or detached entity, it is ignored by the clear operation.&lt;br/&gt;
&#8226;If X is a removed entity, the clear operation is cascaded to entities referenced by X, if the relationships&lt;br/&gt;
from X to these other entities is annotated with the cascade=CLEAR or cascade=&lt;br/&gt;
ALL annotation element value. Entities which previously referenced X will continue to reference X. Portable applications should not pass removed entities&lt;/p&gt;

&lt;p&gt;It seems to me that bullet 1 implies that the cascade should ONLY occur if cascade=CLEAR or or cascade=ALL. Therefore, in my test case, Entity3 should NOT be detached. So, that needs to be the default behavior. In order to provide backward compatibility for the pre-existing detach behavior, we need to provide the cascadeWithDetach compatibility option.&lt;/p&gt;

&lt;p&gt;In order to address item 2 above, I need to write some more test cases. (Admittedly I should have done that.) I&apos;ll address that in a subsequent post.&lt;/p&gt;</comment>
                            <comment id="12688746" author="dianner" created="Tue, 24 Mar 2009 16:59:28 +0000"  >&lt;p&gt;For the DetachState options, I think there needs to be a spec clarification in section 3.2.6 (Evicting an Entity Instance from the Persistence Context) regarding what to do about cascading and unloaded fields and associations. After several of us have looked at the spec, we feel that section 3.2.7 (Detached Entities) implies that we should not load unloaded fields during detach(). We will be asking for spec clarification on this. In the meantime, we&apos;re proceeding with our assumption.&lt;/p&gt;

&lt;p&gt;Thanks to Pinaki for the following illustration of this assumption:&lt;/p&gt;

&lt;p&gt;Consider an entity y that is reachable from x, the root detached entity. What happens to y when we call detach&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;? &lt;br/&gt;
Two determining factors : &lt;br/&gt;
   is y loaded? &lt;br/&gt;
   is y reachable via DEATCH cascade?&lt;/p&gt;

&lt;p&gt;Let us call &lt;/p&gt;
{D(x)} is the set of entities that are reachable from x after detach&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; call. That is to say if I now serialize x and take that serialized object x&apos; to another remote tier the paths I can access from serialized x&apos; is designated by {D(x)}
&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;And here are the choices for y.  &lt;br/&gt;
------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
  Loaded?	   DEATCH cascade?        Effect of detach&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; on y&lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
1. yes            yes              &amp;#8211; y is in &lt;/p&gt;
{D(x)} and y is removed from persistence context&lt;br/&gt;
2. yes            no               &amp;#8211; y is in {D(x)}
&lt;p&gt; but y is not removed from the persistence context (i.e. this is the impact of DEATCH cascade and OpenJPA did not have that feature)&lt;br/&gt;
3. no             yes              &amp;#8211; y is not in &lt;/p&gt;
{D(x)}
&lt;p&gt; and y was never in persistence context (i.e. detach does not load additional state even when DEATCH cascade is specified)&lt;br/&gt;
4. no             no               &amp;#8211; same as (3) above&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Now, to address the DetachState options. During the DetachManager preDetach() method, the appropriate fields/associations are loaded based on the DetachState option. Then, the detach processing occurs for those  for the loaded associations where the DETACH cascade is specified. The attached patch, DetacheStateCascadeTestPatch.txt, tests these options and their relationship to the table above.&lt;/p&gt;</comment>
                            <comment id="12689163" author="dianner" created="Wed, 25 Mar 2009 17:13:11 +0000"  >&lt;p&gt;Attaching an updated patch, DetachStateCascadeTestPatch2.txt to handle some minor problems running from within TeamCity&lt;/p&gt;</comment>
                            <comment id="12689255" author="techhusky" created="Wed, 25 Mar 2009 22:05:39 +0000"  >&lt;p&gt;Committed DetachStateCascadeTestPatch2.txt for Dianne under revision 758442.&lt;/p&gt;</comment>
                            <comment id="12696648" author="dianner" created="Tue, 7 Apr 2009 18:44:48 +0100"  >&lt;p&gt;Doc changes will be provided under &lt;a href=&quot;https://issues.apache.org/jira/browse/OPENJPA-1027&quot; title=&quot;Document changes for detach methods&quot; class=&quot;issue-link&quot; data-issue-key=&quot;OPENJPA-1027&quot;&gt;&lt;del&gt;OPENJPA-1027&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12401753" name="CompatibilityProblemPatch.txt" size="6980" author="dianner" created="Mon, 9 Mar 2009 14:55:04 +0000"/>
                            <attachment id="12403532" name="DetachStateCascadeTestPatch.txt" size="20722" author="dianner" created="Tue, 24 Mar 2009 16:59:28 +0000"/>
                            <attachment id="12403622" name="DetachStateCascadeTestPatch2.txt" size="20543" author="dianner" created="Wed, 25 Mar 2009 17:13:11 +0000"/>
                            <attachment id="12402584" name="cascadeTestPatch.txt" size="7990" author="dianner" created="Thu, 19 Mar 2009 16:49:45 +0000"/>
                            <attachment id="12402284" name="detachCodePatch.txt" size="15697" author="dianner" created="Mon, 16 Mar 2009 14:16:53 +0000"/>
                            <attachment id="12402283" name="detachTestPatch.txt" size="48317" author="dianner" created="Mon, 16 Mar 2009 14:16:53 +0000"/>
                            <attachment id="12400200" name="patch.txt" size="17308" author="dianner" created="Fri, 13 Feb 2009 18:34:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Feb 2009 21:27:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>161186</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyt46v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>203859</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>