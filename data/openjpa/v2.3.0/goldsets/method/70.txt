org.apache.openjpa.datacache.DataCacheStoreManager.evictOptimisticLockFailure(OptimisticException)
org.apache.openjpa.datacache.DataCacheStoreManager.flush(Collection)
org.apache.openjpa.datacache.DataCacheStoreManager.newQuery(String)
org.apache.openjpa.datacache.DataCacheStoreManager.notifyOptimisticLockFailure(OptimisticException)
org.apache.openjpa.event.RemoteCommitEvent.getUpdatedObjectIds()
org.apache.openjpa.event.RemoteCommitEventManager.fireEvent(Object,Object)
org.apache.openjpa.event.RemoteCommitEventManager.fireLocalStaleNotification(Object)
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.getOpLock()
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.getPK()
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.getStr()
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.OptimisticLockInstance()
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.OptimisticLockInstance(String)
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.setUp()
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.setUp.afterCommit(RemoteCommitEvent)
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.setUp.close()
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.tearDown()
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.testOptimisticLockRecovery()
