org.apache.openjpa.jdbc.kernel.TableJDBCSeq.addSchema(ClassMapping,SchemaGroup)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.buildTable()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueColumns()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setInitialValue(int)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueColumns(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addSecondaryTable(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addUnique(String,Unique)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addUnique(Unique)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.copy(MappingInfo)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableJoinColumns(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSourceFile()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,String,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable.get(Schema)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(ClassMapping,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(MetaDataContext,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSecondaryTableJoinColumns(String,List)
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinTableUniques()
org.apache.openjpa.jdbc.meta.FieldMappingInfo.addJoinTableUnique(Unique)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinIndex(FieldMapping,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinTableUniques(FieldMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinUnique(FieldMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getUniques(FieldMapping,List<Unique>,Unique,boolean,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.hasSchemaComponents()
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncJoinTableUniques(MetaDataContext,Unique[])
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncOrderColumn(FieldMapping)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncWith(FieldMapping)
org.apache.openjpa.jdbc.meta.FieldMapping.mapJoin(boolean,boolean)
org.apache.openjpa.jdbc.meta.FieldMapping.refSchemaComponents()
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinTableUniques(Unique[])
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinUnique(Unique)
org.apache.openjpa.jdbc.meta.MappingInfo.createUnique(MetaDataContext,String,Unique,Column[],boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.syncUnique(MetaDataContext,Unique)
org.apache.openjpa.jdbc.meta.SequenceMapping.addStandardProperties(StringBuffer)
org.apache.openjpa.jdbc.meta.SequenceMapping.newPluginValue(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.SequenceMapping(String,MappingRepository)
org.apache.openjpa.jdbc.meta.SequenceMapping.setPrimaryKeyValue(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueColumns(String[])
org.apache.openjpa.jdbc.schema.Table.containsColumn(String)
org.apache.openjpa.jdbc.schema.Table.getColumnNames()
org.apache.openjpa.jdbc.schema.Table.getColumn(String)
org.apache.openjpa.jdbc.schema.Table.getRelationIdColumns()
org.apache.openjpa.jdbc.schema.Unique.addColumn(Column)
org.apache.openjpa.jdbc.schema.Unique.chop(String,int)
org.apache.openjpa.jdbc.schema.Unique.createAutoName()
org.apache.openjpa.jdbc.schema.Unique.createPrefix()
org.apache.openjpa.jdbc.schema.Unique.equalsUnique(Unique)
org.apache.openjpa.jdbc.schema.Unique.getName()
org.apache.openjpa.jdbc.schema.Unique.isAutoNaming()
org.apache.openjpa.jdbc.schema.Unique.isLogical()
org.apache.openjpa.jdbc.schema.Unique.setName(String)
org.apache.openjpa.jdbc.schema.Unique.Unique()
org.apache.openjpa.jdbc.schema.Unique.Unique(String,Table)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.addUniqueConstraints(String,MetaDataContext,MappingInfo,UniqueConstraint)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.createUniqueConstraint(MetaDataContext,UniqueConstraint)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newUnique(ClassMapping,String,String[])
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseColumns(FieldMapping,javax.persistence.Column)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinTable(FieldMapping,JoinTable)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseSecondaryTables(ClassMapping,SecondaryTable)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTable(ClassMapping,Table)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTableGenerator(AnnotatedElement,TableGenerator)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeClassMappingContent(ClassMetaData)
org.apache.openjpa.persistence.jdbc.SQLSniffer.getRegularExpression(String)
org.apache.openjpa.persistence.jdbc.SQLSniffer.matches(List<String>,String,String)
org.apache.openjpa.persistence.jdbc.unique.TestUnique.assertSQLFragnment(List<String>,String,String)
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraint.assertSQLFragnments(List<String>,String,String)
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraint.testMapping()
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraintWithXMLDescriptor.getPersistenceUnitName()
org.apache.openjpa.persistence.jdbc.unique.TestUnique.setUp(Object)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endClassMappingElement(String)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endTableGenerator()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endUniqueConstraint()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSecondaryTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startTableGenerator(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startUniqueConstraint(Attributes)
org.apache.openjpa.persistence.test.PersistenceTestCase.createNamedEMF(String,Object)
