hellojpa.Main.main(String[])
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.createStoreManager(String,String)
org.apache.openjpa.conf.OpenJPAVersion.appendOpenJPABanner(StringBuffer)
org.apache.openjpa.conf.OpenJPAVersion.appendProperty(String,StringBuffer)
org.apache.openjpa.conf.OpenJPAVersion.toString()
org.apache.openjpa.ee.AutomaticManagedRuntime.getRollbackCause()
org.apache.openjpa.ee.AutomaticManagedRuntime.getTransactionManager()
org.apache.openjpa.ee.AutomaticManagedRuntime.setConfiguration(Configuration)
org.apache.openjpa.ee.AutomaticManagedRuntime.setRollbackOnly(Throwable)
org.apache.openjpa.ee.AutomaticManagedRuntime.startConfiguration()
org.apache.openjpa.enhance.ApplicationIdTool.loadClass(Class,String,BCClassLoader)
org.apache.openjpa.enhance.ApplicationIdTool.run(OpenJPAConfiguration,String[],Flags,ClassLoader)
org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(ClassMetaData,OpenJPAConfiguration,boolean,boolean)
org.apache.openjpa.enhance.ManagedClassSubclasser.write(BCClass,PCEnhancer,Map<Class,byte[]>,Class,byte[],Class,List,List)
org.apache.openjpa.enhance.PCEnhancer.addCloningCode()
org.apache.openjpa.enhance.PCEnhancer.addSetMethod(int,FieldMetaData)
org.apache.openjpa.enhance.PCEnhancer.addStockMethods()
org.apache.openjpa.enhance.PCEnhancerAgent.premain(String,Instrumentation)
org.apache.openjpa.enhance.PCEnhancerAgent.registerRuntimeEnhancer(Instrumentation,Options)
org.apache.openjpa.enhance.PCEnhancer.findField(BCMethod,Instruction,boolean)
org.apache.openjpa.enhance.PCEnhancer.getAssignedField(BCMethod)
org.apache.openjpa.enhance.PCEnhancer.getfield(Code,BCClass,String)
org.apache.openjpa.enhance.PCEnhancer.getMethod(Class,Class,String,boolean,boolean,boolean)
org.apache.openjpa.enhance.PCEnhancer.getOrCreateClassInitCode(boolean)
org.apache.openjpa.enhance.PCEnhancer.getReturnedField(BCMethod)
org.apache.openjpa.enhance.PCEnhancer.modifyWriteObjectMethod(BCMethod,boolean)
org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,Class)
org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,ClassMetaData)
org.apache.openjpa.enhance.PCEnhancer.processViolations()
org.apache.openjpa.enhance.PCEnhancer.replaceAndValidateFieldAccess()
org.apache.openjpa.enhance.PCEnhancer.replaceAndValidateFieldAccess(Code,Instruction,boolean,Instruction)
org.apache.openjpa.enhance.PCEnhancer.run(OpenJPAConfiguration,String[],Flags,MetaDataRepository,BytecodeWriter,ClassLoader)
org.apache.openjpa.enhance.Reflection.getDeclaredField(Class,String)
org.apache.openjpa.enhance.Reflection.getDeclaredMethod(Class,String,Class)
org.apache.openjpa.enhance.Reflection.makeAccessible(AccessibleObject,int)
org.apache.openjpa.event.BeanLifecycleCallbacks.makeCallback(Object,Object,int)
org.apache.openjpa.event.BeanLifecycleCallbacks.newListener(Class)
org.apache.openjpa.event.MethodLifecycleCallbacks.getMethod(Class,String,Class[])
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.HostAddress(String)
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.destroyObject(Object)
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.makeObject()
org.apache.openjpa.event.TCPRemoteCommitProvider.setAddresses(String)
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.run()
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.TCPPortListener(int,Log)
org.apache.openjpa.jdbc.ant.MappingToolTask.executeOn(String[])
org.apache.openjpa.jdbc.conf.MappingRepositoryValue.newInstance(String,Class,Configuration,boolean)
org.apache.openjpa.jdbc.kernel.exps.ConstPath.calculateValue(Select,ExpContext,ExpState,Val,ExpState)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSourceFile()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(ClassMapping,boolean)
org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.syncWith(Discriminator)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateClassStrategy(String,ClassMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateDiscriminatorStrategy(String,Discriminator)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(Class,Version,String)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(String,Version)
org.apache.openjpa.jdbc.meta.MappingRepository.mappedStrategy(ValueMapping,Class,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.namedHandler(ValueMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(FieldMapping,boolean)
org.apache.openjpa.jdbc.meta.MappingTool.newImportExports()
org.apache.openjpa.jdbc.meta.ReverseMappingTool.run(JDBCConfiguration,String[],Options)
org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.map(ValueMapping,String,ColumnIO,boolean,List,List)
org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.toObjectValue(ValueMapping,Object)
org.apache.openjpa.jdbc.meta.VersionMappingInfo.syncWith(Version)
org.apache.openjpa.jdbc.schema.DataSourceFactory.decorateDataSource(DataSource,JDBCConfiguration,boolean)
org.apache.openjpa.jdbc.schema.DataSourceFactory.newDataSource(JDBCConfiguration,boolean)
org.apache.openjpa.jdbc.schema.FileSchemaFactory.endConfiguration()
org.apache.openjpa.jdbc.schema.FileSchemaFactory.readSchema()
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getDriver()
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendExtendedExceptionMsg(String,SQLException)
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.newDBDictionary(JDBCConfiguration,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.toString(DatabaseMetaData)
org.apache.openjpa.jdbc.sql.DBDictionary.setDate(PreparedStatement,int,Date,Column)
org.apache.openjpa.jdbc.sql.HSQLDictionary.setDouble(PreparedStatement,int,double,Column)
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases(boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases.get(int)
org.apache.openjpa.jdbc.sql.SelectImpl.where(Object,ClassMapping,Column[],Column[],Object[],Column[],PathJoins,JDBCStore)
org.apache.openjpa.kernel.AbstractBrokerFactory.makeReadOnly()
org.apache.openjpa.kernel.Bootstrap.getFactoryClass(ConfigurationProvider,ClassLoader)
org.apache.openjpa.kernel.Bootstrap.invokeFactory(ConfigurationProvider,ClassLoader,String)
org.apache.openjpa.kernel.BrokerImpl.assertPersistenceCapable(Object)
org.apache.openjpa.kernel.BrokerImpl.initialize(AbstractBrokerFactory,DelegatingStoreManager,boolean,int)
org.apache.openjpa.kernel.BrokerImpl.newInstance(Class)
org.apache.openjpa.kernel.Filters.hintToAggregateListener(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.hintToAggregateListeners(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.hintToFilterListener(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.hintToFilterListeners(Object,ClassLoader)
org.apache.openjpa.kernel.ObjectIdStateManager.setValue(int,Object,boolean)
org.apache.openjpa.kernel.QueryImpl.classForName(String,String[])
org.apache.openjpa.kernel.ResultPacker.packUserType(Object[])
org.apache.openjpa.lib.ant.AbstractTask.execute()
org.apache.openjpa.lib.ant.AbstractTask.getFiles()
org.apache.openjpa.lib.conf.ConfigurationImpl.getMethodDescriptors()
org.apache.openjpa.lib.conf.ConfigurationImpl.loadGlobals()
org.apache.openjpa.lib.conf.Configurations.findDerivedLoader(Configuration,ClassLoader)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Value,Configuration,ClassLoader,boolean)
org.apache.openjpa.lib.conf.Configurations.populateConfiguration(Configuration,Options)
org.apache.openjpa.lib.conf.FileValue.get()
org.apache.openjpa.lib.conf.FileValue.getInternalString()
org.apache.openjpa.lib.conf.FileValue.setInternalString(String)
org.apache.openjpa.lib.conf.ProductDerivations.load(ClassLoader,boolean)
org.apache.openjpa.lib.conf.ProductDerivations.load(File,String,ClassLoader)
org.apache.openjpa.lib.conf.ProductDerivations.load(String,String,ClassLoader)
org.apache.openjpa.lib.jdbc.SQLFormatter.prettyPrint(Object)
org.apache.openjpa.lib.log.LogFactoryImpl.setFile(String)
org.apache.openjpa.lib.meta.CFMetaDataParser.classForName(String,String,boolean,ClassLoader)
org.apache.openjpa.lib.meta.ClassArgParser.getFromClassFile(File)
org.apache.openjpa.lib.meta.ClassArgParser.parseTypeNames(String)
org.apache.openjpa.lib.meta.ClassMetaDataIterator.ClassMetaDataIterator(Class,String,ClassLoader,boolean)
org.apache.openjpa.lib.meta.ClassMetaDataIterator.close()
org.apache.openjpa.lib.meta.ClassMetaDataIterator.getFile()
org.apache.openjpa.lib.meta.ClassMetaDataIterator.hasNext()
org.apache.openjpa.lib.meta.ClasspathMetaDataIterator.ClasspathMetaDataIterator(String[],MetaDataFilter)
org.apache.openjpa.lib.meta.FileMetaDataIterator.FileResource.getContent()
org.apache.openjpa.lib.meta.FileMetaDataIterator.FileResource.getName()
org.apache.openjpa.lib.meta.FileMetaDataIterator.getInputStream()
org.apache.openjpa.lib.meta.FileMetaDataIterator.next()
org.apache.openjpa.lib.meta.FileMetaDataIterator.scan(File,MetaDataFilter,FileResource,Collection,int)
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.ResourceMetaDataIterator(String,ClassLoader)
org.apache.openjpa.lib.meta.SourceTrackers.getSourceLocationMessage(SourceTracker[])
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentClassLoader()
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(File)
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.prepareWrite(File)
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.ZipFileMetaDataIterator(URL,MetaDataFilter)
org.apache.openjpa.lib.util.Files.backup(File,boolean)
org.apache.openjpa.lib.util.Files.copy(File,File)
org.apache.openjpa.lib.util.Files.getClassFile(Class,String)
org.apache.openjpa.lib.util.Files.getFile(String,ClassLoader)
org.apache.openjpa.lib.util.Files.getOutputStream(String,ClassLoader)
org.apache.openjpa.lib.util.Files.getPackageFile(File,String,boolean)
org.apache.openjpa.lib.util.Files.revert(File,boolean)
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.append(String)
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.PropertyLine(String)
org.apache.openjpa.lib.util.J2DoPrivHelper.acceptAction(ServerSocket)
org.apache.openjpa.lib.util.J2DoPrivHelper.bCClassWrite(BCClass,File)
org.apache.openjpa.lib.util.J2DoPrivHelper.deleteAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.existsAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.getAbsoluteFileAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.getAbsolutePathAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.getBCClassFieldsAction(BCClass,String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getByNameAction(String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getCanonicalPathAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.getClassLoaderAction(Class)
org.apache.openjpa.lib.util.J2DoPrivHelper.getContentAction(URLConnection)
org.apache.openjpa.lib.util.J2DoPrivHelper.getContextClassLoaderAction()
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredFieldAction(Class,String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredFieldsAction(Class)
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredMethodAction(Class,String,Class[])
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredMethodsAction(Class)
org.apache.openjpa.lib.util.J2DoPrivHelper.getFieldInstructionFieldAction(FieldInstruction)
org.apache.openjpa.lib.util.J2DoPrivHelper.getForNameAction(String,boolean,ClassLoader)
org.apache.openjpa.lib.util.J2DoPrivHelper.getLineSeparator()
org.apache.openjpa.lib.util.J2DoPrivHelper.getParentAction(ClassLoader)
org.apache.openjpa.lib.util.J2DoPrivHelper.getPathSeparator()
org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertiesAction()
org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertyAction(String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getResourceAction(ClassLoader,String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getResourceAction(Class,String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getResourcesAction(ClassLoader,String)
org.apache.openjpa.lib.util.J2DoPrivHelper.getSystemClassLoaderAction()
org.apache.openjpa.lib.util.J2DoPrivHelper.isDirectoryAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.isFileAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.isInstanceOfAction(BCClass,Class)
org.apache.openjpa.lib.util.J2DoPrivHelper.lengthAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.listFilesAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.loadProjectClassAction(Project,Class)
org.apache.openjpa.lib.util.J2DoPrivHelper.mkdirsAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.newBCClassLoaderAction(Project)
org.apache.openjpa.lib.util.J2DoPrivHelper.newBCClassLoaderAction(Project,ClassLoader)
org.apache.openjpa.lib.util.J2DoPrivHelper.newCodeAction()
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileInputStreamAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileOutputStreamAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileOutputStreamAction(String,boolean)
org.apache.openjpa.lib.util.J2DoPrivHelper.newInstanceAction(Class)
org.apache.openjpa.lib.util.J2DoPrivHelper.newMultiClassLoaderAction()
org.apache.openjpa.lib.util.J2DoPrivHelper.newServerSocketAction(int)
org.apache.openjpa.lib.util.J2DoPrivHelper.newSocketAction(InetAddress,int)
org.apache.openjpa.lib.util.J2DoPrivHelper.newTemporaryClassLoaderAction(ClassLoader)
org.apache.openjpa.lib.util.J2DoPrivHelper.newZipFileAction(File)
org.apache.openjpa.lib.util.J2DoPrivHelper.openStreamAction(URL)
org.apache.openjpa.lib.util.J2DoPrivHelper.renameToAction(File,File)
org.apache.openjpa.lib.util.J2DoPrivHelper.setAccessibleAction(AccessibleObject,boolean)
org.apache.openjpa.lib.util.Localizer.forPackage(Class,Locale)
org.apache.openjpa.lib.util.MultiClassLoader.findClass(String)
org.apache.openjpa.lib.util.MultiClassLoader.findResources(String)
org.apache.openjpa.lib.util.MultiClassLoader.findResource(String)
org.apache.openjpa.lib.util.MultiClassLoader.getClassLoader(int)
org.apache.openjpa.lib.util.MultiClassLoader.getClassLoaders()
org.apache.openjpa.lib.util.Options.matchOptionToMember(String,Object[])
org.apache.openjpa.lib.util.Options.stringToObject(String,Class)
org.apache.openjpa.lib.util.Services.getImplementorClasses(String,ClassLoader,boolean)
org.apache.openjpa.lib.util.Services.getImplementors(String,ClassLoader)
org.apache.openjpa.lib.util.StreamResourceBundleProvider.findResource(String,Locale,ClassLoader)
org.apache.openjpa.lib.util.UUIDGenerator.incrementSequence()
org.apache.openjpa.meta.AbstractCFMetaDataFactory.assignDefaultMetaDataFiles(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.assignDefaultQueryFiles(QueryMetaData[],Map)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.backupAndDelete(Collection)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.parsePersistentTypeNames(ClassLoader)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setFiles(String)
org.apache.openjpa.meta.AbstractMetaDataDefaults.getBackingMember(FieldMetaData)
org.apache.openjpa.meta.AbstractMetaDataDefaults.populateFromPCRegistry(ClassMetaData)
org.apache.openjpa.meta.AbstractMetaDataDefaults.populateFromReflection(ClassMetaData)
org.apache.openjpa.meta.ClassMetaData.isAccessibleField(String)
org.apache.openjpa.meta.FieldMetaData.getFieldValue(Object,StoreContext)
org.apache.openjpa.meta.FieldMetaData.MemberProvider.readExternal(ObjectInput)
org.apache.openjpa.meta.InterfaceImplGenerator.createImpl(ClassMetaData)
org.apache.openjpa.meta.InterfaceImplGenerator.getMethodSafe(Class,String,Class)
org.apache.openjpa.meta.InterfaceImplGenerator.invalidateNonBeanMethods(BCClass,Class,Set)
org.apache.openjpa.meta.InterfaceImplGenerator.isGetter(Class,FieldMetaData)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.resolveIdentityClass(Object)
org.apache.openjpa.meta.SequenceMetaData.instantiate(ClassLoader)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseCallbackMethods(Class,Collection<LifecycleCallbacks>[],LifecycleCallbacks,boolean,boolean,MetaDataRepository)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseDetachedState(ClassMetaData,DetachedState)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseMemberAnnotations(FieldMetaData)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(File,int)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(Map,int)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(Writer,int)
org.apache.openjpa.persistence.jdbc.TestIsolationLevelOverride.testIsolationLevelOverride(boolean,boolean)
org.apache.openjpa.persistence.jdbc.TestSelectForUpdateOverride.testSelectForUpdateOverride()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endColumnName()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endUniqueConstraint()
org.apache.openjpa.persistence.MetaDataParsers.validateMethodsForSameCallback(Class,Collection<LifecycleCallbacks>,LifecycleCallbacks,Method,MetaDataTag,MetaDataDefaults,Log)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getAccessType(Class)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isDefaultPersistent(ClassMetaData,Member,String)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.defaultXMLFile()
org.apache.openjpa.persistence.PersistenceProductDerivation.afterSpecificationSet(Configuration)
org.apache.openjpa.persistence.PersistenceProductDerivation.isOpenJPAPersistenceProvider(PersistenceUnitInfo,ClassLoader)
org.apache.openjpa.persistence.PersistenceProductDerivation.load(ConfigurationProviderImpl,String,String,Map,ClassLoader,boolean)
org.apache.openjpa.persistence.PersistenceProductDerivation.loadGlobals(ClassLoader)
org.apache.openjpa.persistence.PersistenceProductDerivation.validate()
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addJarFileName(String)
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addJarFile(URL)
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getClassLoader()
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getNewTempClassLoader()
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getPersistenceUnitName()
org.apache.openjpa.persistence.relations.TestManyOneAsId.testCompoundQuery()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseField(Attributes)
org.apache.openjpa.util.ApplicationIds.copy(Object,ClassMetaData,FieldMetaData[])
org.apache.openjpa.util.ApplicationIds.fromPKValues(Object[],ClassMetaData)
org.apache.openjpa.util.ClassResolverImpl.getClassLoader(Class,ClassLoader)
org.apache.openjpa.util.Exceptions.write(int)
org.apache.openjpa.util.GeneratedClasses.loadBCClass(BCClass,ClassLoader)
org.apache.openjpa.util.Id.Id(String,ClassLoader)
org.apache.openjpa.util.MultiLoaderClassResolver.MultiLoaderClassResolver()
org.apache.openjpa.util.Proxies.assertAllowedType(Object,Class)
org.apache.openjpa.util.ProxyCollections.afterRemove(ProxyCollection,int,Object)
org.apache.openjpa.util.ProxyManagerImpl.getMostDerivedLoader(Class,Class)
org.apache.openjpa.util.ProxyManagerImpl.instantiateProxy(Class,Constructor,Object[])
org.apache.openjpa.util.Serialization.ClassResolvingObjectInputStream.resolveClass(ObjectStreamClass)
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.addContextClassLoaders(MultiClassLoader)
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.PersistentObjectInputStream(InputStream,StoreContext)
org.apache.openjpa.util.Serialization.PersistentObjectOutputStream.PersistentObjectOutputStream(OutputStream,StoreContext)
org.apache.openjpa.util.Serialization.PersistentObjectOutputStream.replaceObject(Object)
org.apache.openjpa.util.StoreFacadeTypeRegistry.registerImplementation(Class,Class,Class)
org.apache.openjpa.xmlstore.XMLFileHandler.load(ClassMetaData)
org.apache.openjpa.xmlstore.XMLFileHandler.store(ClassMetaData,Collection)
relations.Main.runQueries(EntityManager)
