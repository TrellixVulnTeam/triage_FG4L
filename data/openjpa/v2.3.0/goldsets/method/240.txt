org.apache.openjpa.jdbc.kernel.exps.AbstractVal.isAggregate()
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.isXPath()
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.toDataStoreValue(Select,ExpContext,ExpState,Object)
org.apache.openjpa.jdbc.kernel.exps.ConstPath.ConstPathExpState.ConstPathExpState(ExpState)
org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(FieldMetaData,XMLMapping)
org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(FieldMetaData,XMLMetaData)
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getXmlMapping()
org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(XMLMapping,String)
org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(XMLMetaData,String)
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getFieldMapping()
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getXPath()
org.apache.openjpa.jdbc.kernel.exps.PCPath.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.exps.PCPath.get(FieldMetaData,boolean)
org.apache.openjpa.jdbc.kernel.exps.PCPath.getKey()
org.apache.openjpa.jdbc.kernel.exps.PCPath.getPath()
org.apache.openjpa.jdbc.kernel.exps.PCPath.initialize(Select,ExpContext,int)
org.apache.openjpa.jdbc.kernel.exps.PCPath.isKey()
org.apache.openjpa.jdbc.kernel.exps.PCPath.last()
org.apache.openjpa.jdbc.kernel.exps.PCPath.lastFieldAction()
org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.map(ValueMapping,String,ColumnIO,boolean)
org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.toObjectValue(ValueMapping,Object)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.addXMLClassMetaData(Class,XMLMapping)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.addXMLClassMetaData(Class,XMLMetaData)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.addXMLClassMetaData(FieldMetaData,String)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.getXMLClassMetaData(Class)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.getXMLMetaData(FieldMetaData)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.newXMLClassMetaDataArray(int)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.newXMLClassMetaData(FieldMetaData,String)
org.apache.openjpa.jdbc.meta.XMLMappingRepository.XMLMappingRepository()
org.apache.openjpa.jdbc.schema.Column.copy(Column)
org.apache.openjpa.jdbc.schema.Column.isXML()
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendLength(SQLBuffer,int)
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlComparison1(SQLBuffer,String,FilterValue,FilterValue)
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlComparison2(SQLBuffer,String,FilterValue,FilterValue)
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlExists(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlVar(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.DB2Dictionary.connectedConfiguration(Connection)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDb2ServerType()
org.apache.openjpa.jdbc.sql.DBDictionary.appendCast(SQLBuffer,FilterValue,int)
org.apache.openjpa.jdbc.sql.DBDictionary.appendNumericCast(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.DBDictionary.comparison(SQLBuffer,String,FilterValue,FilterValue)
org.apache.openjpa.jdbc.sql.OracleDictionary.appendXmlExtractValue(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.OracleDictionary.isOraclePreparedStatement(Statement)
org.apache.openjpa.jdbc.sql.OracleDictionary.OracleDictionary()
org.apache.openjpa.jdbc.sql.OracleDictionary.setNull(PreparedStatement,int,int,Column)
org.apache.openjpa.jdbc.sql.SelectImpl.SelectImpl(JDBCConfiguration)
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases(boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases.get(int)
org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlExist(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlValue(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.SQLServerDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitTypes(Value,Value,Class)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traversePath(Path,String)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traversePath(Path,String,boolean,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traverseXPath(Path,String)
org.apache.openjpa.kernel.exps.CandidatePath.Traversal.equals(Object)
org.apache.openjpa.kernel.exps.Val.acceptVisit(ExpressionVisitor)
org.apache.openjpa.kernel.exps.Value.getMetaData()
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getPath(JPQLNode,boolean,boolean)
org.apache.openjpa.meta.DelegatingMetaDataFactory.addFieldExtensionKeys(Collection)
org.apache.openjpa.meta.DelegatingMetaDataFactory.loadXMLMetaData(FieldMetaData)
org.apache.openjpa.meta.MetaDataRepository.addXMLMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.getCachedXMLMetaData(Class)
org.apache.openjpa.meta.MetaDataRepository.MetaDataRepository()
org.apache.openjpa.meta.MetaDataRepository.newEmbeddedClassMetaData(ValueMetaData)
org.apache.openjpa.meta.MetaDataRepository.newFieldMetaDataArray(int)
org.apache.openjpa.meta.MetaDataRepository.newXMLClassMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.newXMLFieldMetaData(Class,String)
org.apache.openjpa.meta.NoneMetaDataFactory.getUnimplementedExceptionType()
org.apache.openjpa.meta.XMLClassMetaData.addField(String,XMLMetaData)
org.apache.openjpa.meta.XMLClassMetaData.getFieldMapping(String)
org.apache.openjpa.meta.XMLClassMetaData.getName()
org.apache.openjpa.meta.XMLClassMetaData.getType()
org.apache.openjpa.meta.XMLClassMetaData.getTypeCode()
org.apache.openjpa.meta.XMLClassMetaData.getXmlname()
org.apache.openjpa.meta.XMLClassMetaData.getXmlnamespace()
org.apache.openjpa.meta.XMLClassMetaData.getXmltype()
org.apache.openjpa.meta.XMLClassMetaData.isXmlAttribute()
org.apache.openjpa.meta.XMLClassMetaData.isXmlElement()
org.apache.openjpa.meta.XMLClassMetaData.isXMLMapping(Class)
org.apache.openjpa.meta.XMLClassMetaData.isXmlRootElement()
org.apache.openjpa.meta.XMLClassMetaData.populateFromReflection(Class,XMLMappingRepository)
org.apache.openjpa.meta.XMLClassMetaData.setName(String)
org.apache.openjpa.meta.XMLClassMetaData.setType(Class)
org.apache.openjpa.meta.XMLClassMetaData.setXmlnamespace(String)
org.apache.openjpa.meta.XMLClassMetaData.setXmlname(String)
org.apache.openjpa.meta.XMLClassMetaData.setXmlRootElement(boolean)
org.apache.openjpa.meta.XMLClassMetaData.setXmltype(int)
org.apache.openjpa.meta.XMLClassMetaData.XMLClassMetaData(Class)
org.apache.openjpa.meta.XMLClassMetaData.XMLClassMetaData(Class,String)
org.apache.openjpa.meta.XMLClassMetaData.XMLClassMetaData(Class,String,XMLMappingRepository)
org.apache.openjpa.meta.XMLClassMetaData.XMLClassMetaData(Class,XMLMappingRepository)
org.apache.openjpa.meta.XMLFieldMetaData.setTypeCode(int)
org.apache.openjpa.meta.XMLFieldMetaData.XMLFieldMetaData()
org.apache.openjpa.meta.XMLFieldMetaData.XMLFieldMetaData(Class,String)
org.apache.openjpa.meta.XMLMetaData.XMLMetaData()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.AnnotationPersistenceXMLMetaDataParser(OpenJPAConfiguration)
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.clear()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getConfiguration()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getLog()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getRepository()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getXMLMetaData()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.parse(FieldMetaData)
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.parseXMLClassAnnotations()
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.parseXmlRootElement(Class,XMLMetaData)
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.populateFromReflection(Class,XMLMetaData)
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.setRepository(MetaDataRepository)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseColumns(FieldMapping,javax.persistence.Column)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getXMLAnnotationParser()
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newXMLAnnotationParser()
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setInto(Options)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setXMLAnnotationParser(AnnotationPersistenceXMLMetaDataParser)
org.apache.openjpa.persistence.xmlmapping.entities.Customer.Customer()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.Customer(CustomerKey,String,CreditRating)
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.CustomerKey()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.CustomerKey(String,int)
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.hashCode()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.toString()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getAddress()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getCid()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getOrders()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getRating()
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setAddress(EAddress)
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setCid(CustomerKey)
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setOrders(Collection<Order>,Order)
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setRating(CreditRating)
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.EAddress()
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.EAddress(String,String,String,String)
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getCity()
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getState()
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getStreet()
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getZip()
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.modifyCity(String)
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setCity(String)
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setState(String)
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setStreet(String)
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setZip(String)
org.apache.openjpa.persistence.xmlmapping.entities.Order.getAmount()
org.apache.openjpa.persistence.xmlmapping.entities.Order.getCustomer()
org.apache.openjpa.persistence.xmlmapping.entities.Order.getOid()
org.apache.openjpa.persistence.xmlmapping.entities.Order.getShipAddress()
org.apache.openjpa.persistence.xmlmapping.entities.Order.isDelivered()
org.apache.openjpa.persistence.xmlmapping.entities.Order.Order()
org.apache.openjpa.persistence.xmlmapping.entities.Order.Order(int,double,boolean,Customer)
org.apache.openjpa.persistence.xmlmapping.entities.Order.setAmount(double)
org.apache.openjpa.persistence.xmlmapping.entities.Order.setCustomer(Customer)
org.apache.openjpa.persistence.xmlmapping.entities.Order.setDelivered(boolean)
org.apache.openjpa.persistence.xmlmapping.entities.Order.setShipAddress(Address)
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.deleteAllData(EntityManager)
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.dumpSql()
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.loadData(EntityManager)
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.main(String[])
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.printOrder(Order)
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.printOrders(List,int)
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.setUp()
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testUpdateShipaddress(EntityManager,int)
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLCustomerOrder()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.getPostalCode()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.getProvince()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.setPostalCode(String)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.setProvince(String)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.getCounty()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.getPostcode()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.setCounty(String)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.setPostcode(String)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddrCAN(CANAddress)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddress()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddrGBR(GBRAddress)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddrUSA(USAAddress)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createCANAddress()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createGBRAddress()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createMailAddress(Address)
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createShortAddress()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createUSAAddress()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.ObjectFactory()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.getZIP()
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.setZIP(int)
