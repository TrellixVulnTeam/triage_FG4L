org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.BaseTestElement1()
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.BaseTestElement1(String)
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.equals(Object)
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.getId()
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.getName()
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.setId(int)
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.setName(String)
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.BaseTestElement2()
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.BaseTestElement2(String)
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.BaseTestElement3()
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.BaseTestElement3(String)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getCollelems()
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getM2melems()
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getOne2Melems()
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setCollelems(Set<BaseTestElement1>,BaseTestElement1)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setM2melems(List<BaseTestElement1>,BaseTestElement1)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setOne2Melems(List<BaseTestElement1>,BaseTestElement1)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setCollelems(Set<BaseTestElement2>,BaseTestElement2)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setM2melems(List<BaseTestElement2>,BaseTestElement2)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setOne2Melems(List<BaseTestElement2>,BaseTestElement2)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setCollelems(Set<BaseTestElement3>,BaseTestElement3)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setM2melems(List<BaseTestElement3>,BaseTestElement3)
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setOne2Melems(List<BaseTestElement3>,BaseTestElement3)
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.BiOrderEntity()
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.BiOrderEntity(String)
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.getEntity()
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.setEntity(BiOrderMappedByEntity)
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.addBo2mEntity(BiOrderEntity)
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.getBo2mEntities()
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.insertBo2mEntity(int,BiOrderEntity)
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.removeBo2mEntity(int)
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.setBo2mEntity(List<BiOrderEntity>,BiOrderEntity)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.cleanupEMF(OpenJPAEntityManagerFactorySPI)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.createQueryData()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.setUp()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.tableAndColumnExists(OpenJPAEntityManagerFactorySPI,OpenJPAEntityManagerSPI,String,String,String)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionElementInsert()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionElementRemoval()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionEmbeddables()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyBiDirElementRemoval()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyElementInsert()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyElementRemoval()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnColumnDefinition()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnMetaDataSerialization()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnNullableFalse()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnOrderBy()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnProjectionQuery()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnTable()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnTableXML()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnUpdateable()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateCollIndexAndValues(OpenJPAEntityManagerSPI,String,String,int,Object[],String,Object)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateIndexAndValues(OpenJPAEntityManagerSPI,String,String,int,Object[],String,Object)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnDef(OpenJPAEntityManagerFactorySPI,Class,String,String)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnName(Class,String,String)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnNullable(OpenJPAEntityManagerFactorySPI,Class,String,boolean)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnTable(OpenJPAEntityManagerFactorySPI,Class,String,String,String)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnUpdatable(OpenJPAEntityManagerFactorySPI,Class,String,boolean)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.getOrderColumn(OpenJPAEntityManagerFactorySPI,Class,String)
org.apache.openjpa.persistence.test.PersistenceTestCase.FixedMap.removeEldestEntry(Map.Entry<EMFKey,OpenJPAEntityManagerFactorySPI>,EMFKey,OpenJPAEntityManagerFactorySPI)
org.apache.openjpa.persistence.test.PersistenceTestCase.getPlatform()
org.apache.openjpa.persistence.test.PersistenceTestCase.isRunsOnCurrentPlatform()
org.apache.openjpa.persistence.test.PersistenceTestCase.isTargetPlatform(String)
org.apache.openjpa.persistence.test.SingleEMFTestCase.$GenericMethodDeclaration$()
org.apache.openjpa.persistence.test.SingleEMFTestCase.getAlias(Class<?>)
org.apache.openjpa.persistence.test.SingleEMFTestCase.getAll(EntityManager,Class<T>,T)
