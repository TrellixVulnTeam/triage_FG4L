org.apache.openjpa.jdbc.kernel.TableJDBCSeq.buildTable()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ResultSet,DBDictionary)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueConstraintName()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueConstraintName(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.addQuotes(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.addStandardProperties(StringBuffer)
org.apache.openjpa.jdbc.meta.SequenceMapping.SequenceMapping(String,MappingRepository)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.createUniqueConstraint(MetaDataContext,UniqueConstraint)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTableGenerator(AnnotatedElement,TableGenerator)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeUniqueConstraint(Unique,AnnotationBuilder)
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.assertSQLFragnments(List<String>,String,String)
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.setUp(Object)
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.supportsUniqueConstraints()
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.testMapping()
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.getPersistenceUnitName()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endClassMappingElement(String)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endName()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endUniqueConstraint()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startClassMappingElement(String,Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startUniqueConstraint(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeColumn(Column,ColType,String,boolean)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeUniqueConstraint(Unique)
