org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainFetchPlanHints()
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainProductDerivationHints()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean,boolean)
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.calculateDBDictionary(JDBCConfiguration,String,String,String)
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.dictionaryClassForString(String,JDBCConfiguration)
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.newDBDictionary(JDBCConfiguration,DataSource,String)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.appendSelectRange(SQLBuffer,long,long,boolean)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.appendXmlValue(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.connectedConfiguration(Connection)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.decorate(Connection)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getAddPrimaryKeySQL(PrimaryKey)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getBatchFetchSize(int)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getBlobObject(ResultSet,int,JDBCStore)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getCreateTableSQL(Table)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDeleteTableContentsSQL(Table[],Connection)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDropForeignKeySQL(ForeignKey,Connection)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDropIndexSQL(Index)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDropPrimaryKeySQL(PrimaryKey)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getMajorMinorVersions(String)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getPreferredType(int)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getSelectOperation(JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getSelectTableAliases(Select)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getTypeName(Column)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.isFatalException(int,SQLException)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.MariaDBDictionary()
org.apache.openjpa.jdbc.sql.MariaDBDictionary.matchErrorState(Map<Integer,Set<String>>,Integer,Set<String>,String,SQLException)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.newColumn(ResultSet)
org.apache.openjpa.jdbc.sql.MariaDBDictionary.setDelimitedCase(DatabaseMetaData)
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.setUp()
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(Query,String)
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(String,Query,Query,String)
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(String,String)
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testMariaDBDynamicSchema()
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testMySQLDynamicSchema()
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testSQLServerDynamicSchema()
org.apache.openjpa.persistence.jdbc.query.TestHintedQuery.testHintedQuery()
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.getUniqueConstraint(String)
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.supportsUniqueConstraints()
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoubleMax()
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoubleMin()
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatMax()
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatMin()
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatNegativeInfinity()
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatPostivieInfinity()
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.cleanupDB()
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getDBType(EntityManager)
org.apache.openjpa.persistence.query.GroupingTestCase.testOrderByAggregate()
org.apache.openjpa.persistence.query.TestSubquery.testSubquery()
