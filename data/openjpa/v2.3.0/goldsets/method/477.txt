org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.delete(OpenJPAStateManager,ClassMapping,RowManager,JDBCStore,Collection)
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.insert(OpenJPAStateManager,ClassMapping,RowManager,JDBCStore,Collection)
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.updateIndicators(OpenJPAStateManager,ClassMapping,RowManager,JDBCStore,Collection,boolean)
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.update(OpenJPAStateManager,BitSet,ClassMapping,RowManager,JDBCStore,Collection)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.addBatch(PreparedStatement,RowImpl,int)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.batchOrExecuteRow(RowImpl)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.checkUpdateCount(int[],int)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.executeBatch(PreparedStatement)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.flushAndUpdate(RowImpl)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.flushBatch()
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.flushSingleRow(RowImpl,PreparedStatement)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.getBatchedRows()
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.getBatchedSql()
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.getBatchLimit()
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.isBatchDisabled()
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.isBatchDisabled(RowImpl)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.setBatchDisabled(boolean)
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.setBatchLimit(int)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(ClassLoader)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getType(Result,ClassMapping)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getVersion(ClassMapping,OpenJPAStateManager,Result)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initializeState(OpenJPAStateManager,PCState,JDBCFetchConfiguration,ConnectionInfo)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.isEmptyResult(Result)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.selectPrimaryKey(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeBulkOperation(ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Map)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeUpdate(Connection,PreparedStatement,SQLBuffer,boolean)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getDataStoreActions(ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Range)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.prepareStatement(Connection,SQLBuffer)
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.checkLock(ResultSet,OpenJPAStateManager)
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.ensureStoreManagerTransaction()
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.executeQuery(Connection,PreparedStatement,SQLBuffer)
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.getStore()
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.lockRow(OpenJPAStateManager,int)
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.setTimeout(PreparedStatement,int)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.executeUpdate(PreparedStatement,String,RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flush()
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushInternal(RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.prepareStatement(String)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeQuery(JDBCStore,Connection,PreparedStatement,SQLBuffer,List)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeQuery(StoreQuery,Object[],Range)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeUpdate(JDBCStore,Connection,PreparedStatement,SQLBuffer)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeUpdate(StoreQuery,Object[])
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.isPacking(StoreQuery)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareCall(Connection,SQLBuffer)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareCall(Connection,SQLBuffer,JDBCFetchConfiguration,int,int)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareStatement(Connection,SQLBuffer,JDBCFetchConfiguration,int,int)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.executeQuery(JDBCConfiguration,Connection,PreparedStatement,SQLBuffer)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.executeUpdate(JDBCConfiguration,Connection,PreparedStatement,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ClassMapping,Connection)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ResultSet,DBDictionary)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.insertSequence(ClassMapping,Connection)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setSequence(ClassMapping,Status,int,boolean,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.appendUpdates(Select,JDBCStore,SQLBuffer,Object[],Map,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.calculateValue(Val,Select,ExpContext,ExpState,Path,ExpState)
org.apache.openjpa.jdbc.sql.DBDictionary.executeQuery(Connection,PreparedStatement,String)
org.apache.openjpa.jdbc.sql.DBDictionary.getGeneratedKey(Column,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getKey(ResultSet,Column)
org.apache.openjpa.jdbc.sql.DBDictionary.getSequence(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.getSequences(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.prepareStatement(Connection,String)
org.apache.openjpa.jdbc.sql.DBDictionary.validateDBSpecificBatchProcess(boolean,RowImpl,Column[],OpenJPAStateManager,ClassMapping)
org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(Connection,ResultSet,DBDictionary)
org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(Connection,Statement,ResultSet,JDBCStore)
org.apache.openjpa.jdbc.sql.RowImpl.copyInto(RowImpl,boolean)
org.apache.openjpa.jdbc.sql.RowImpl.getTypes()
org.apache.openjpa.jdbc.sql.RowImpl.getVals()
org.apache.openjpa.jdbc.sql.SelectImpl.addEagerResults(SelectResult,SelectImpl,JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.SelectImpl.executeQuery(Connection,PreparedStatement,SQLBuffer,boolean,JDBCStore)
org.apache.openjpa.jdbc.sql.SelectImpl.execute(StoreContext,JDBCStore,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.sql.SelectImpl.getCount(JDBCStore)
org.apache.openjpa.jdbc.sql.SelectImpl.getCount(ResultSet)
org.apache.openjpa.jdbc.sql.SelectImpl.getEagerResult(Connection,PreparedStatement,ResultSet,JDBCStore,JDBCFetchConfiguration,boolean,String)
org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(Connection,SQLBuffer,JDBCFetchConfiguration,int,int,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.setTimeout(PreparedStatement,boolean,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.SQLBuffer.getColumns()
org.apache.openjpa.jdbc.sql.SQLBuffer.setParameters(List)
org.apache.openjpa.jdbc.sql.SQLBuffer.Subselect.clone(int,int)
org.apache.openjpa.kernel.Bootstrap.getFactoryClassName(ConfigurationProvider,ClassLoader)
org.apache.openjpa.kernel.Bootstrap.invokeFactory(ConfigurationProvider,ClassLoader,String)
org.apache.openjpa.kernel.BrokerImpl.assignObjectId(Object,Object,StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.checkForDuplicateId(Object,Object)
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator()
org.apache.openjpa.kernel.BrokerImpl.persist(Object,Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.setStateManager(Object,StateManagerImpl,int)
org.apache.openjpa.kernel.StateManagerImpl.setLoaded(int,boolean)
org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.transform(ClassLoader,String,Class<?>,ProtectionDomain,byte[])
org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,String,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.getBrokerFactory(ConfigurationProvider,Object,ClassLoader)
org.apache.openjpa.persistence.PersistenceProviderImpl.newBrokerFactory(ConfigurationProvider,ClassLoader)
org.apache.openjpa.persistence.PersistenceProviderImpl.newPersistenceProductDerivation()
