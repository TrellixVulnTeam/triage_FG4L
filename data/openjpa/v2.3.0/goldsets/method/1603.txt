org.apache.openjpa.datacache.DataCacheManagerImpl.getSystemDataCache()
org.apache.openjpa.datacache.DataCacheManagerImpl.initialize(OpenJPAConfiguration,ObjectValue,ObjectValue)
org.apache.openjpa.datacache.DataCacheManagerImpl.setTypes(Set<String>,String,Set<String>,String)
org.apache.openjpa.datacache.DataCacheStoreManager.notifyOptimisticLockFailure(OptimisticException)
org.apache.openjpa.datacache.DataCacheStoreManager.syncVersion(OpenJPAStateManager,Object)
org.apache.openjpa.datacache.DataCacheStoreManager.updateCaches()
org.apache.openjpa.datacache.QueryCacheStoreQuery.checkCache(QueryKey)
org.apache.openjpa.datacache.QueryKey.createKey(QueryContext,boolean,Class,boolean,long,long)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.exists(ClassMapping,Object,Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.exists(OpenJPAStateManager,Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.isCached(List<Object>,Object,BitSet)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newFetchConfiguration()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newQuery(String)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newStoreQuery(String)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.selectExtent(Select,ClassMapping,JDBCFetchConfiguration,boolean)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setInverseRelation(OpenJPAStateManager,ClassMapping,Result)
org.apache.openjpa.kernel.BrokerImpl.endStoreManagerTransaction(boolean)
org.apache.openjpa.kernel.BrokerImpl.getConnectionFactory2()
org.apache.openjpa.kernel.BrokerImpl.isCached(List<Object>,Object)
org.apache.openjpa.kernel.DelegatingStoreManager.cancelAll()
org.apache.openjpa.kernel.StoreContext.getConnectionPassword()
org.apache.openjpa.persistence.datacache.CacheTest.testNonCacheableAccessPath()
org.apache.openjpa.persistence.datacache.CacheTest.testNonCacheableClass()
org.apache.openjpa.persistence.querycache.TestQueryCache.endTx(EntityManager)
org.apache.openjpa.persistence.querycache.TestQueryCache.getPersistenceUnitName()
org.apache.openjpa.persistence.querycache.TestQueryCache.isActiveTx(EntityManager)
org.apache.openjpa.persistence.querycache.TestQueryCache.setUp()
org.apache.openjpa.persistence.querycache.TestQueryCache.startTx(EntityManager)
org.apache.openjpa.persistence.querycache.TestQueryCache.testCachedQuery()
org.apache.openjpa.persistence.querycache.TestQueryCache.testExecuteUpdate()
org.apache.openjpa.persistence.querycache.TestQueryCache.testGetSingleList()
org.apache.openjpa.persistence.querycache.TestQueryCache.TestQueryCache(String)
org.apache.openjpa.persistence.querycache.TestQueryCache.testResultList()
org.apache.openjpa.persistence.querycache.TestQueryCache.testSetFirstResults()
org.apache.openjpa.persistence.querycache.TestQueryCache.testSetMaxResults()
org.apache.openjpa.persistence.querycache.TestQueryCache.xxxtestSetParameter1()
org.apache.openjpa.persistence.relations.PPerson.getId()
org.apache.openjpa.persistence.relations.PPerson.getName()
org.apache.openjpa.persistence.relations.PPerson.getPhones()
org.apache.openjpa.persistence.relations.PPerson.setName(String)
org.apache.openjpa.persistence.relations.PPerson.setPhones(Collection<PPhone>,PPhone)
org.apache.openjpa.persistence.relations.PPerson.toString()
org.apache.openjpa.persistence.relations.PPhone.getNumber()
org.apache.openjpa.persistence.relations.PPhone.getPeople()
org.apache.openjpa.persistence.relations.PPhone.setNumber(String)
org.apache.openjpa.persistence.relations.PPhone.setPeople(Collection<PPerson>,PPerson)
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testManyToManyEagerEagerInverseLazyQuery()
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testOneToManyEagerInverseLazyQuery()
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testTargetOrphanRemoval()
org.apache.openjpa.xmlstore.XMLStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)
