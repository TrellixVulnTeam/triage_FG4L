org.apache.openjpa.conf.CacheMarshallersValue.CacheMarshallersValue(Configuration)
org.apache.openjpa.conf.CacheMarshallersValue.getInstancesAsMap()
org.apache.openjpa.conf.CacheMarshallersValue.getMarshallerById(Configuration,String)
org.apache.openjpa.conf.CacheMarshallersValue.instantiate(Class<?>,Configuration,boolean)
org.apache.openjpa.conf.CacheMarshallersValue.instantiate(Class,Configuration,boolean)
org.apache.openjpa.conf.OpenJPAConfiguration.getCacheMarshallerInstances()
org.apache.openjpa.conf.OpenJPAConfiguration.getCacheMarshallers()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.OpenJPAConfigurationImpl(boolean,boolean)
org.apache.openjpa.conf.OpenJPAConfiguration.supportedOptions()
org.apache.openjpa.datacache.AbstractDataCache.commit(Collection,Collection,Collection,Collection)
org.apache.openjpa.datacache.AbstractDataCache.commit(Collection<DataCachePCData>,DataCachePCData,Collection<DataCachePCData>,DataCachePCData,Collection<DataCachePCData>,DataCachePCData,Collection<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.containsAll(Collection)
org.apache.openjpa.datacache.AbstractDataCache.containsAll(Collection<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.contains(Object)
org.apache.openjpa.datacache.AbstractDataCache.getAll(List)
org.apache.openjpa.datacache.AbstractDataCache.getAll(List<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.initialize(DataCacheManager)
org.apache.openjpa.datacache.AbstractDataCache.pinAll(Collection)
org.apache.openjpa.datacache.AbstractDataCache.pinAll(Collection<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.pin(Object)
org.apache.openjpa.datacache.AbstractDataCache.putAllInternal(Collection)
org.apache.openjpa.datacache.AbstractDataCache.putAllInternal(Collection<DataCachePCData>,DataCachePCData)
org.apache.openjpa.datacache.AbstractDataCache.removeAll(Class<?>,boolean)
org.apache.openjpa.datacache.AbstractDataCache.removeAll(Class,boolean)
org.apache.openjpa.datacache.AbstractDataCache.removeAll(Collection)
org.apache.openjpa.datacache.AbstractDataCache.removeAll(Collection<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.removeAllInternal(Collection)
org.apache.openjpa.datacache.AbstractDataCache.removeAllInternal(Collection<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.removeAllTypeNamesInternal(Collection)
org.apache.openjpa.datacache.AbstractDataCache.removeAllTypeNamesInternal(Collection<String>,String)
org.apache.openjpa.datacache.AbstractDataCache.unpinAll(Collection)
org.apache.openjpa.datacache.AbstractDataCache.unpinAll(Collection<Object>,Object)
org.apache.openjpa.datacache.AbstractDataCache.unpin(Object)
org.apache.openjpa.datacache.Caches.addTypesByName(OpenJPAConfiguration,Collection,Set)
org.apache.openjpa.datacache.Caches.addTypesByName(OpenJPAConfiguration,Collection<String>,String,Set<Class<?>>,Class<?>)
org.apache.openjpa.datacache.DataCacheStoreManager.addUnloaded(OpenJPAStateManager,BitSet,Map<OpenJPAStateManager,BitSet>,OpenJPAStateManager,BitSet)
org.apache.openjpa.datacache.DataCacheStoreManager.cacheStateManager(DataCache,OpenJPAStateManager)
org.apache.openjpa.datacache.DataCacheStoreManager.cacheStateManager(DataCache,OpenJPAStateManager,DataCachePCData)
org.apache.openjpa.datacache.DataCacheStoreManager.evictTypes(Collection)
org.apache.openjpa.datacache.DataCacheStoreManager.evictTypes(Collection<Class<?>>,Class<?>)
org.apache.openjpa.datacache.DataCacheStoreManager.flush(Collection)
org.apache.openjpa.datacache.DataCacheStoreManager.flush(Collection<OpenJPAStateManager>,OpenJPAStateManager)
org.apache.openjpa.datacache.DataCacheStoreManager.getModifications(Map,DataCache)
org.apache.openjpa.datacache.DataCacheStoreManager.getModifications(Map<DataCache,Modifications>,DataCache,Modifications,DataCache)
org.apache.openjpa.datacache.DataCacheStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)
org.apache.openjpa.datacache.DataCacheStoreManager.loadAll(Collection<OpenJPAStateManager>,OpenJPAStateManager,PCState,int,FetchConfiguration,Object)
org.apache.openjpa.datacache.DataCacheStoreManager.loadAll(Collection,PCState,int,FetchConfiguration,Object)
org.apache.openjpa.datacache.DataCacheStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)
org.apache.openjpa.datacache.DataCacheStoreManager.newPCData(OpenJPAStateManager)
org.apache.openjpa.datacache.DataCacheStoreManager.PCDataHolder.PCDataHolder(DataCachePCData,OpenJPAStateManager)
org.apache.openjpa.datacache.DataCacheStoreManager.setContext(StoreContext)
org.apache.openjpa.datacache.DataCacheStoreManager.syncVersion(OpenJPAStateManager,Object)
org.apache.openjpa.datacache.DataCacheStoreManager.transformToVersionSafePCDatas(DataCache,List)
org.apache.openjpa.datacache.DataCacheStoreManager.transformToVersionSafePCDatas(DataCache,List<PCDataHolder>,PCDataHolder)
org.apache.openjpa.datacache.DataCacheStoreManager.updateCaches()
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachedList.writeReplace()
org.apache.openjpa.datacache.QueryCacheStoreQuery.checkCache(QueryKey)
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.clearAccessPath(StoreQuery)
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getAlias(StoreQuery)
org.apache.openjpa.datacache.QueryKey.setParams(QueryKey,QueryContext,Object[])
org.apache.openjpa.datacache.QueryResult.QueryResult(Collection,long)
org.apache.openjpa.datacache.QueryResult.QueryResult(Collection<Object>,Object,long)
org.apache.openjpa.datacache.QueryResult.QueryResult(QueryKey,Collection)
org.apache.openjpa.datacache.QueryResult.QueryResult(QueryKey,Collection<Object>,Object)
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.evictionHelper(boolean)
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testEnhancer()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetMetaDataOfSubtype()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testLazyLoading()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testRelations()
org.apache.openjpa.enhance.ClassRedefiner.canRedefineClasses(Log)
org.apache.openjpa.enhance.ClassRedefiner.redefineClasses(OpenJPAConfiguration,Map<Class<?>,byte[]>,Class<?>,byte[])
org.apache.openjpa.enhance.ClassRedefiner.redefineClasses(OpenJPAConfiguration,Map<Class,byte[]>,Class,byte[])
org.apache.openjpa.enhance.ManagedClassSubclasser.collectRelatedUnspecifiedTypes(ClassMetaData,Collection<?extendsClass<?>>,Class<?>,Set<Class<?>>,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.collectRelatedUnspecifiedTypes(ClassMetaData,Collection<?extendsClass>,Class,Set<Class>,Class)
org.apache.openjpa.enhance.ManagedClassSubclasser.collectUnspecifiedType(Class<?>,Collection<?extendsClass<?>>,Class<?>,Set<Class<?>>,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.collectUnspecifiedType(Class,Collection<?extendsClass>,Class,Set<Class>,Class)
org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(ClassMetaData,OpenJPAConfiguration,boolean,boolean)
org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(OpenJPAConfiguration,ClassLoader,Class<?>,boolean)
org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(OpenJPAConfiguration,ClassLoader,Class,boolean)
org.apache.openjpa.enhance.ManagedClassSubclasser.debugBytecodes(BCClass)
org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(OpenJPAConfiguration,Collection<?extendsClass<?>>,Class<?>,ClassLoader)
org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(OpenJPAConfiguration,Collection<?extendsClass>,Class,ClassLoader)
org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses.write(BCClass)
org.apache.openjpa.enhance.ManagedClassSubclasser.setIntercepting(OpenJPAConfiguration,ClassLoader,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.setIntercepting(OpenJPAConfiguration,ClassLoader,Class)
org.apache.openjpa.enhance.ManagedClassSubclasser.write(BCClass,PCEnhancer,Map<Class<?>,byte[]>,Class<?>,byte[],Class<?>,List<Class<?>>,Class<?>,List<Class<?>>,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.write(BCClass,PCEnhancer,Map<Class,byte[]>,Class,byte[],Class,List,List)
org.apache.openjpa.enhance.PCDataGenerator.addGetType(BCClass,ClassMetaData)
org.apache.openjpa.enhance.PCDataGenerator.addLoad(BCClass,Code,FieldMetaData,int,int,boolean)
org.apache.openjpa.enhance.PCDataGenerator.addLoadIntermediate(Code,int,int,Collection<Instruction>,Instruction,int)
org.apache.openjpa.enhance.PCDataGenerator.addLoadIntermediate(Code,int,int,Collection,int)
org.apache.openjpa.enhance.PCDataGenerator.addLoadMethod(BCClass,boolean)
org.apache.openjpa.enhance.PCDataGenerator.addLoadMethod(BCClass,ClassMetaData)
org.apache.openjpa.enhance.PCDataGenerator.addLoadWithFieldsMethod(BCClass,ClassMetaData)
org.apache.openjpa.enhance.PCDataGenerator.addStore(BCClass,Code,FieldMetaData,int)
org.apache.openjpa.enhance.PCDataGenerator.addStoreMethod(BCClass,ClassMetaData,boolean)
org.apache.openjpa.enhance.PCDataGenerator.callAbstractPCData(BCClass,String,Class<?>,Class<?>[])
org.apache.openjpa.enhance.PCDataGenerator.callAbstractPCData(BCClass,String,Class,Class[])
org.apache.openjpa.enhance.PCDataGenerator.generatePCData(Object,ClassMetaData)
org.apache.openjpa.enhance.PCDataGenerator.getUniqueName(Class<?>)
org.apache.openjpa.enhance.PCDataGenerator.getUniqueName(Class)
org.apache.openjpa.enhance.PCDataGenerator.setTarget(Instruction,Collection)
org.apache.openjpa.enhance.PCDataGenerator.setTarget(Instruction,Collection<Instruction>,Instruction)
org.apache.openjpa.enhance.PCDataGenerator.toStrings(Class<?>[])
org.apache.openjpa.enhance.PCDataGenerator.toStrings(Class[])
org.apache.openjpa.event.LifecycleEventManager.addListener(Object,Class<?>[])
org.apache.openjpa.event.LifecycleEventManager.addListener(Object,Class[])
org.apache.openjpa.event.LifecycleEventManager.fireEvent(LifecycleEvent,Object,Object,int,ListenerList,boolean,List)
org.apache.openjpa.event.LifecycleEventManager.fireEvent(LifecycleEvent,Object,Object,int,ListenerList,boolean,List<Exception>,Exception)
org.apache.openjpa.event.LifecycleEventManager.fireEvent(Object,Object,ClassMetaData,int)
org.apache.openjpa.event.LifecycleEventManager.hasListeners(Object,ClassMetaData,int)
org.apache.openjpa.event.LifecycleEventManager.makeCallbacks(Object,Object,ClassMetaData,int,Collection)
org.apache.openjpa.event.LifecycleEventManager.makeCallbacks(Object,Object,ClassMetaData,int,Collection<Exception>,Exception)
org.apache.openjpa.event.LifecycleEventManager.removeListener(Object)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.getInstance(ConfigurationProvider)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(ClassLoader,JDBCConfiguration)
org.apache.openjpa.jdbc.schema.DataSourceFactory.decorateDataSource(DataSource,JDBCConfiguration,boolean)
org.apache.openjpa.jdbc.schema.DataSourceFactory.installDBDictionary(DBDictionary,DecoratingDataSource,JDBCConfiguration,boolean)
org.apache.openjpa.jdbc.schema.DataSourceFactory.newDataSource(JDBCConfiguration,boolean)
org.apache.openjpa.jdbc.schema.DriverDataSource.createConnectionDecorators()
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.newDBDictionary(JDBCConfiguration,String,String,Connection)
org.apache.openjpa.kernel.AbstractBrokerFactory.addLifecycleListener(Object,Class<?>[])
org.apache.openjpa.kernel.AbstractBrokerFactory.addLifecycleListener(Object,Class[])
org.apache.openjpa.kernel.AbstractBrokerFactory.addListeners(Broker)
org.apache.openjpa.kernel.AbstractBrokerFactory.addListeners(BrokerImpl)
org.apache.openjpa.kernel.AbstractBrokerFactory.addTransactionListener(Object)
org.apache.openjpa.kernel.AbstractBrokerFactory.assertNoActiveTransaction()
org.apache.openjpa.kernel.AbstractBrokerFactory.close()
org.apache.openjpa.kernel.AbstractBrokerFactory.findBroker(String,String,boolean)
org.apache.openjpa.kernel.AbstractBrokerFactory.findTransactionalBroker(String,String)
org.apache.openjpa.kernel.AbstractBrokerFactory.getPcClassLoaders()
org.apache.openjpa.kernel.AbstractBrokerFactory.initializeBroker(boolean,int,Broker,boolean)
org.apache.openjpa.kernel.AbstractBrokerFactory.initializeBroker(boolean,int,BrokerImpl,boolean)
org.apache.openjpa.kernel.AbstractBrokerFactory.loadPersistentTypes(ClassLoader)
org.apache.openjpa.kernel.AbstractBrokerFactory.makeReadOnly()
org.apache.openjpa.kernel.AbstractBrokerFactory.needsSub(Class<?>)
org.apache.openjpa.kernel.AbstractBrokerFactory.needsSub(Class)
org.apache.openjpa.kernel.AbstractBrokerFactory.newBrokerSet()
org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(String,String,boolean,int,boolean)
org.apache.openjpa.kernel.AbstractBrokerFactory.putUserObject(Object,Object)
org.apache.openjpa.kernel.AbstractBrokerFactory.readResolve()
org.apache.openjpa.kernel.AbstractBrokerFactory.syncWithManagedTransaction(BrokerImpl,boolean)
org.apache.openjpa.kernel.AbstractBrokerFactory.toPoolKey(Map)
org.apache.openjpa.kernel.AbstractBrokerFactory.toPoolKey(Map<String,Object>,String,Object)
org.apache.openjpa.kernel.AbstractBrokerSerializationTest.getSecondaryType()
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getProjectionAliases(StoreQuery)
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getProjectionTypes(StoreQuery)
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getResultClass(StoreQuery)
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getUpdates(StoreQuery)
org.apache.openjpa.kernel.DelegatingExtent.DelegatingExtent(Extent)
org.apache.openjpa.kernel.DelegatingExtent.DelegatingExtent(Extent,RuntimeExceptionTranslator)
org.apache.openjpa.kernel.DelegatingExtent.DelegatingExtent(Extent<T>,T)
org.apache.openjpa.kernel.DelegatingExtent.DelegatingExtent(Extent<T>,T,RuntimeExceptionTranslator)
org.apache.openjpa.kernel.DelegatingExtent.equals(Object)
org.apache.openjpa.kernel.DelegatingExtent.getDelegate()
org.apache.openjpa.kernel.DelegatingExtent.getElementType()
org.apache.openjpa.kernel.DelegatingExtent.getInnermostDelegate()
org.apache.openjpa.kernel.DelegatingExtent.iterator()
org.apache.openjpa.kernel.DelegatingExtent.list()
org.apache.openjpa.kernel.DelegatingExtent.setIgnoreChanges(boolean)
org.apache.openjpa.kernel.DelegatingExtent.translate(RuntimeException)
org.apache.openjpa.kernel.DelegatingQuery.getParameterDeclaration()
org.apache.openjpa.kernel.DelegatingStoreManager.assignField(OpenJPAStateManager,int,boolean)
org.apache.openjpa.kernel.DelegatingStoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)
org.apache.openjpa.kernel.DelegatingStoreManager.getDataStoreIdType(ClassMetaData)
org.apache.openjpa.kernel.DelegatingStoreManager.getManagedType(Object)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.assertNotContainer(Value,StoreQuery)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getAccessPathMetaDatas(StoreQuery)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getRange(StoreQuery,Object[],Range)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.toParameterArray(StoreQuery,Map<?,?>)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.assertUnboundVariablesValid()
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.bind(Value)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.convertTypesQuotedNumbers(Value,Value)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.convertTypes(Value,Value)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class<?>,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class<?>,boolean,ClassLoader)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class,boolean,ClassLoader)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getVariable(String,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isNumeric(Class<?>)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isNumeric(Class)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitType(Value,Class<?>)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitType(Value,Class)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traversePath(Path,String,boolean,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traverseStaticField(Class<?>,String)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traverseStaticField(Class,String)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(Exp,Collection,StoreContext,Object[],int)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(Exp,Object,StoreContext,Object[],int)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newUnboundVariable(String,Class)
org.apache.openjpa.kernel.ExtentImpl.CloseableIteratorChain.hasNext()
org.apache.openjpa.kernel.ExtentImpl.CloseableIterator.setRemoveOnClose(ExtentImpl)
org.apache.openjpa.kernel.ExtentImpl.CloseableIterator.setRemoveOnClose(ExtentImpl<T>,T)
org.apache.openjpa.kernel.ExtentImpl.ExtentImpl(Broker,Class,boolean,FetchConfiguration)
org.apache.openjpa.kernel.ExtentImpl.ExtentImpl(Broker,Class<T>,T,boolean,FetchConfiguration)
org.apache.openjpa.kernel.ExtentImpl.FilterNewIterator.evaluate(Object)
org.apache.openjpa.kernel.ExtentImpl.getBroker()
org.apache.openjpa.kernel.Filters.addAccessPathMetaDatas(List,ClassMetaData[])
org.apache.openjpa.kernel.Filters.addAccessPathMetaDatas(List<ClassMetaData>,ClassMetaData,ClassMetaData[])
org.apache.openjpa.kernel.Filters.add(Object,Class<?>,Object,Class<?>)
org.apache.openjpa.kernel.Filters.add(Object,Class,Object,Class)
org.apache.openjpa.kernel.Filters.canConvert(Class<?>,Class<?>,boolean)
org.apache.openjpa.kernel.Filters.canConvert(Class,Class,boolean)
org.apache.openjpa.kernel.Filters.convert(Object,Class<?>)
org.apache.openjpa.kernel.Filters.convert(Object,Class)
org.apache.openjpa.kernel.Filters.divide(Object,Class<?>,Object,Class<?>)
org.apache.openjpa.kernel.Filters.divide(Object,Class,Object,Class)
org.apache.openjpa.kernel.Filters.hintToAggregateListener(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.hintToAggregateListeners(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.hintToFilterListener(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.hintToFilterListeners(Object,ClassLoader)
org.apache.openjpa.kernel.Filters.isNonstandardType(Class<?>)
org.apache.openjpa.kernel.Filters.isNonstandardType(Class)
org.apache.openjpa.kernel.Filters.mod(Object,Class<?>,Object,Class<?>)
org.apache.openjpa.kernel.Filters.mod(Object,Class,Object,Class)
org.apache.openjpa.kernel.Filters.multiply(Object,Class<?>,Object,Class<?>)
org.apache.openjpa.kernel.Filters.multiply(Object,Class,Object,Class)
org.apache.openjpa.kernel.Filters.op(Object,Class<?>,Object,Class<?>,int)
org.apache.openjpa.kernel.Filters.op(Object,Class,Object,Class,int)
org.apache.openjpa.kernel.Filters.parseDeclaration(String,char,String)
org.apache.openjpa.kernel.Filters.promote(Class<?>,Class<?>)
org.apache.openjpa.kernel.Filters.promote(Class,Class)
org.apache.openjpa.kernel.Filters.splitExpressions(String,char,int)
org.apache.openjpa.kernel.Filters.subtract(Object,Class<?>,Object,Class<?>)
org.apache.openjpa.kernel.Filters.subtract(Object,Class,Object,Class)
org.apache.openjpa.kernel.Filters.unwrap(Class<?>)
org.apache.openjpa.kernel.Filters.unwrap(Class)
org.apache.openjpa.kernel.Filters.wrap(Class<?>)
org.apache.openjpa.kernel.Filters.wrap(Class)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assertQueryExtensions(String)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ctx()
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalFetchJoins(QueryExpressions)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.eval(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalSelectClause(QueryExpressions)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(String,boolean)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getDeclaredVariableType(String)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getIdentifier(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getMetaDataForAlias(String)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getNumberValue(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getParameter(String,boolean,boolean)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getPath(JPQLNode,boolean,boolean)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getPathOrConstant(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getTypeLiteral(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getTypeValue(JPQLNode,Class<?>)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getTypeValue(JPQLNode,Class)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.getChild(int)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.ParsedJPQL(String)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.root()
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class<?>)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class<?>,Resolver,LinkedMap,String)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class<?>,Resolver,OrderedMap<Object,Class<?>>,Object,Class<?>,String)
org.apache.openjpa.kernel.MethodStoreQuery.bindParameterTypes()
org.apache.openjpa.kernel.MethodStoreQuery.invalidateCompilation()
org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.executeQuery(StoreQuery,Object[],Range)
org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.toParameterArray(StoreQuery,Map)
org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.validate(StoreQuery)
org.apache.openjpa.kernel.ObjectIdStateManager.getValue(int)
org.apache.openjpa.kernel.ObjectIdStateManager.setValue(int,Object,boolean)
org.apache.openjpa.kernel.QueryContext.classForName(String,String[])
org.apache.openjpa.kernel.QueryContext.getCandidateType()
org.apache.openjpa.kernel.QueryContext.getProjectionTypes()
org.apache.openjpa.kernel.QueryContext.getResultType()
org.apache.openjpa.kernel.QueryContext.setCandidateType(Class<?>,boolean)
org.apache.openjpa.kernel.QueryContext.setCandidateType(Class,boolean)
org.apache.openjpa.kernel.QueryContext.setResultType(Class<?>)
org.apache.openjpa.kernel.QueryContext.setResultType(Class)
org.apache.openjpa.kernel.Query.deleteAll(Map<?,?>)
org.apache.openjpa.kernel.Query.deleteAll(Map)
org.apache.openjpa.kernel.Query.deleteAll(Object[])
org.apache.openjpa.kernel.Query.execute(Map<?,?>)
org.apache.openjpa.kernel.Query.execute(Map)
org.apache.openjpa.kernel.Query.getDataStoreActions(Map<?,?>)
org.apache.openjpa.kernel.Query.getDataStoreActions(Map)
org.apache.openjpa.kernel.QueryImpl.addAggregateListener(AggregateListener)
org.apache.openjpa.kernel.QueryImpl.addFilterListener(FilterListener)
org.apache.openjpa.kernel.QueryImpl.assertParameters(StoreQuery,StoreQuery.Executor,Map)
org.apache.openjpa.kernel.QueryImpl.assertParameters(StoreQuery,StoreQuery.Executor,Object[])
org.apache.openjpa.kernel.QueryImpl.execute(int,Object[])
org.apache.openjpa.kernel.QueryImpl.getAccessPathMetaDatas()
org.apache.openjpa.kernel.QueryImpl.getAggregateListeners()
org.apache.openjpa.kernel.QueryImpl.getAggregateListener(String)
org.apache.openjpa.kernel.QueryImpl.getCandidateCollection()
org.apache.openjpa.kernel.QueryImpl.getCandidateExtent()
org.apache.openjpa.kernel.QueryImpl.getFilterListeners()
org.apache.openjpa.kernel.QueryImpl.getFilterListener(String)
org.apache.openjpa.kernel.QueryImpl.getOrderedParameterTypes()
org.apache.openjpa.kernel.QueryImpl.getParameterTypes()
org.apache.openjpa.kernel.QueryImpl.getResultMappingScope()
org.apache.openjpa.kernel.QueryImpl.getUpdates()
org.apache.openjpa.kernel.QueryImpl.logExecution(int,LinkedMap,Object[])
org.apache.openjpa.kernel.QueryImpl.logExecution(int,Map<?,?>)
org.apache.openjpa.kernel.QueryImpl.logExecution(int,Map)
org.apache.openjpa.kernel.QueryImpl.logExecution(int,OrderedMap<Object,Class<?>>,Object,Class<?>,Object[])
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getOrderedParameterTypes(StoreQuery)
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getParameterTypes(StoreQuery)
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.hasGrouping(StoreQuery)
org.apache.openjpa.kernel.QueryImpl.removeAggregateListener(AggregateListener)
org.apache.openjpa.kernel.QueryImpl.removeFilterListener(FilterListener)
org.apache.openjpa.kernel.QueryImpl.setCandidateCollection(Collection<?>)
org.apache.openjpa.kernel.QueryImpl.setCandidateCollection(Collection)
org.apache.openjpa.kernel.QueryImpl.setCandidateExtent(Extent)
org.apache.openjpa.kernel.QueryImpl.setResultMapping(Class<?>,String)
org.apache.openjpa.kernel.QueryImpl.setResultMapping(Class,String)
org.apache.openjpa.kernel.Query.updateAll(Map<?,?>)
org.apache.openjpa.kernel.Query.updateAll(Map)
org.apache.openjpa.kernel.StoreContext.extentIterator(Class<?>,boolean,FetchConfiguration,boolean)
org.apache.openjpa.kernel.StoreContext.extentIterator(Class,boolean,FetchConfiguration,boolean)
org.apache.openjpa.kernel.StoreContext.findAll(Collection,boolean,FindCallbacks)
org.apache.openjpa.kernel.StoreContext.findAll(Collection,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.StoreContext.findAll(Collection<Object>,Object,boolean,FindCallbacks)
org.apache.openjpa.kernel.StoreContext.findAll(Collection<Object>,Object,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.StoreContext.getDeletedTypes()
org.apache.openjpa.kernel.StoreContext.getDirtyObjects()
org.apache.openjpa.kernel.StoreContext.getManagedObjects()
org.apache.openjpa.kernel.StoreContext.getObjectIdType(Class<?>)
org.apache.openjpa.kernel.StoreContext.getObjectIdType(Class)
org.apache.openjpa.kernel.StoreContext.getPendingTransactionalObjects()
org.apache.openjpa.kernel.StoreContext.getPersistedTypes()
org.apache.openjpa.kernel.StoreContext.getTransactionalObjects()
org.apache.openjpa.kernel.StoreContext.getUpdatedTypes()
org.apache.openjpa.kernel.StoreContext.newObjectId(Class<?>,Object)
org.apache.openjpa.kernel.StoreContext.newObjectId(Class,Object)
org.apache.openjpa.kernel.StoreContext.nontransactionalAll(Collection<Object>,Object,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.nontransactionalAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.nontransactional(Object,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.retrieveAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.retrieveAll(Collection<Object>,Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.transactionalAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.transactionalAll(Collection<Object>,Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.transactional(Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.StoreQuery.Executor.getResultShape(StoreQuery)
org.apache.openjpa.lib.conf.ConfigurationProvider.addProperties(Map<?,?>)
org.apache.openjpa.lib.conf.ConfigurationProvider.addProperties(Map)
org.apache.openjpa.lib.conf.ConfigurationProvider.getProperties()
org.apache.openjpa.lib.conf.Configuration.toProperties(boolean)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.addAll(Collection)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.addAll(Collection<?extendsE>,E)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.add(E)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.add(Object)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.ConcurrentReferenceHashSet(int)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.containsAll(Collection<?>)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.$GenericMethodDeclaration$()
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.removeAll(Collection<?>)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.retainAll(Collection<?>)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.retainAll(Collection)
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.toArray()
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.toArray(Object[])
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet.toArray(T[])
org.apache.openjpa.lib.util.OrderedMap.clear()
org.apache.openjpa.lib.util.OrderedMap.containsKey(Object)
org.apache.openjpa.lib.util.OrderedMap.containsValue(Object)
org.apache.openjpa.lib.util.OrderedMap.entrySet()
org.apache.openjpa.lib.util.OrderedMap.get(Object)
org.apache.openjpa.lib.util.OrderedMap.indexOf(Object)
org.apache.openjpa.lib.util.OrderedMap.isEmpty()
org.apache.openjpa.lib.util.OrderedMap.keySet()
org.apache.openjpa.lib.util.OrderedMap.OrderedMap()
org.apache.openjpa.lib.util.OrderedMap.OrderedMap(boolean)
org.apache.openjpa.lib.util.OrderedMap.putAll(Map<?extendsK,?extendsV>,K,V)
org.apache.openjpa.lib.util.OrderedMap.put(K,V)
org.apache.openjpa.lib.util.OrderedMap.remove(Object)
org.apache.openjpa.lib.util.OrderedMap.size()
org.apache.openjpa.lib.util.OrderedMap.values()
org.apache.openjpa.meta.AbstractCFMetaDataFactory.getDefiningMetaData(QueryMetaData,Map)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setClasspathScan(Collection)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setClasspathScan(Collection<String>,String)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setClasspathScan(String)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setFiles(Collection)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setFiles(Collection<File>,File)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setFiles(String)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setResources(Collection)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setResources(Collection<String>,String)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setResources(String)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setURLs(Collection)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setURLs(Collection<URL>,URL)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setURLs(String)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map<File,String>,File,String)
org.apache.openjpa.meta.AbstractMetaDataDefaults.getBackingMember(FieldMetaData)
org.apache.openjpa.meta.AbstractMetaDataDefaults.populateFromPCRegistry(ClassMetaData)
org.apache.openjpa.meta.AccessCode.isCompatibleSuper(int,int)
org.apache.openjpa.meta.AccessCode.isEmpty(ClassMetaData)
org.apache.openjpa.meta.AccessCode.isEmpty(int)
org.apache.openjpa.meta.AccessCode.isField(ClassMetaData)
org.apache.openjpa.meta.AccessCode.isField(FieldMetaData)
org.apache.openjpa.meta.AccessCode.isField(int)
org.apache.openjpa.meta.AccessCode.isProperty(ClassMetaData)
org.apache.openjpa.meta.AccessCode.isProperty(FieldMetaData)
org.apache.openjpa.meta.AccessCode.isSet(int)
org.apache.openjpa.meta.AccessCode.isUnknown(ClassMetaData)
org.apache.openjpa.meta.AccessCode.isUnknown(FieldMetaData)
org.apache.openjpa.meta.AccessCode.isUnknown(int)
org.apache.openjpa.meta.AccessCode.isValidClassCode(int)
org.apache.openjpa.meta.AccessCode.isValidFieldCode(int)
org.apache.openjpa.meta.AccessCode.mergeFieldCode(int,int)
org.apache.openjpa.meta.AccessCode.toString(int)
org.apache.openjpa.meta.ClassMetaData.addDeclaredFetchGroup(String)
org.apache.openjpa.meta.ClassMetaData.addDeclaredField(String,Class<?>)
org.apache.openjpa.meta.ClassMetaData.addDeclaredField(String,Class)
org.apache.openjpa.meta.ClassMetaData.addDeclaredInterface(Class<?>)
org.apache.openjpa.meta.ClassMetaData.addDeclaredInterface(Class)
org.apache.openjpa.meta.ClassMetaData.addDefinedSuperclassField(String,Class<?>,Class<?>)
org.apache.openjpa.meta.ClassMetaData.addDefinedSuperclassField(String,Class,Class)
org.apache.openjpa.meta.ClassMetaData.addExtensionKeys(Collection)
org.apache.openjpa.meta.ClassMetaData.ClassMetaData(Class<?>,MetaDataRepository)
org.apache.openjpa.meta.ClassMetaData.ClassMetaData(Class,MetaDataRepository)
org.apache.openjpa.meta.ClassMetaData.compareTo(ClassMetaData)
org.apache.openjpa.meta.ClassMetaData.compareTo(Object)
org.apache.openjpa.meta.ClassMetaData.copy(ClassMetaData)
org.apache.openjpa.meta.ClassMetaData.getCustomFetchGroups()
org.apache.openjpa.meta.ClassMetaData.getDeclaredFetchGroups()
org.apache.openjpa.meta.ClassMetaData.getDeclaredFields()
org.apache.openjpa.meta.ClassMetaData.getDeclaredField(String)
org.apache.openjpa.meta.ClassMetaData.getDeclaredInterfaces()
org.apache.openjpa.meta.ClassMetaData.getDeclaredUnmanagedFields()
org.apache.openjpa.meta.ClassMetaData.getDefinedFields()
org.apache.openjpa.meta.ClassMetaData.getDefinedFieldsInListingOrder()
org.apache.openjpa.meta.ClassMetaData.getDescribedType()
org.apache.openjpa.meta.ClassMetaData.getExtraFieldDataLength()
org.apache.openjpa.meta.ClassMetaData.getFetchGroup(String)
org.apache.openjpa.meta.ClassMetaData.getFields()
org.apache.openjpa.meta.ClassMetaData.getFields(int)
org.apache.openjpa.meta.ClassMetaData.getInterfaceAliasedProperties(Class<?>)
org.apache.openjpa.meta.ClassMetaData.getInterfaceAliasedProperties(Class)
org.apache.openjpa.meta.ClassMetaData.getInterfaceImpl()
org.apache.openjpa.meta.ClassMetaData.getInterfacePropertyAlias(Class<?>,String)
org.apache.openjpa.meta.ClassMetaData.getInterfacePropertyAlias(Class,String)
org.apache.openjpa.meta.ClassMetaData.getMappedPCSubclassMetaDatas()
org.apache.openjpa.meta.ClassMetaData.getObjectIdType()
org.apache.openjpa.meta.ClassMetaData.getPCSubclasses()
org.apache.openjpa.meta.ClassMetaData.getPCSubclassMetaDatas()
org.apache.openjpa.meta.ClassMetaData.getPCSuperclass()
org.apache.openjpa.meta.ClassMetaData.getPrimaryKeyFields()
org.apache.openjpa.meta.ClassMetaData.getSuperclassField(FieldMetaData)
org.apache.openjpa.meta.ClassMetaData.isAccessibleField(String)
org.apache.openjpa.meta.ClassMetaData.isOpenJPAIdentity()
org.apache.openjpa.meta.ClassMetaData.ListingOrderComparator.compare(FieldMetaData,FieldMetaData)
org.apache.openjpa.meta.ClassMetaData.removeDeclaredInterface(Class<?>)
org.apache.openjpa.meta.ClassMetaData.removeDeclaredInterface(Class)
org.apache.openjpa.meta.ClassMetaData.resolveDefinedSuperclassFields()
org.apache.openjpa.meta.ClassMetaData.resolveMeta(boolean)
org.apache.openjpa.meta.ClassMetaData.setAbstract(boolean)
org.apache.openjpa.meta.ClassMetaData.setAccessType(int)
org.apache.openjpa.meta.ClassMetaData.setDescribedType(Class<?>)
org.apache.openjpa.meta.ClassMetaData.setDescribedType(Class)
org.apache.openjpa.meta.ClassMetaData.setInterfaceImpl(Class<?>)
org.apache.openjpa.meta.ClassMetaData.setInterfaceImpl(Class)
org.apache.openjpa.meta.ClassMetaData.setInterfacePropertyAlias(Class<?>,String,String)
org.apache.openjpa.meta.ClassMetaData.setInterfacePropertyAlias(Class,String,String)
org.apache.openjpa.meta.ClassMetaData.setManagedInterface(boolean)
org.apache.openjpa.meta.ClassMetaData.setObjectIdType(Class<?>,boolean)
org.apache.openjpa.meta.ClassMetaData.setObjectIdType(Class,boolean)
org.apache.openjpa.meta.ClassMetaData.setPCSuperclass(Class<?>)
org.apache.openjpa.meta.ClassMetaData.setPCSuperclass(Class)
org.apache.openjpa.meta.ClassMetaData.useIdClassFromParent()
org.apache.openjpa.meta.ClassMetaData.validateAccessType()
org.apache.openjpa.meta.ClassMetaData.validateAppIdClass()
org.apache.openjpa.meta.ClassMetaData.validateAppIdClassMethods(Class<?>)
org.apache.openjpa.meta.ClassMetaData.validateAppIdClassMethods(Class)
org.apache.openjpa.meta.ClassMetaData.validateAppIdClassPKs(ClassMetaData,FieldMetaData[],Class<?>)
org.apache.openjpa.meta.ClassMetaData.validateAppIdClassPKs(ClassMetaData,FieldMetaData[],Class)
org.apache.openjpa.meta.ClassMetaData.validateIdentity()
org.apache.openjpa.meta.FetchGroup.addContainedBy(FetchGroup)
org.apache.openjpa.meta.FetchGroup.addDeclaredInclude(String)
org.apache.openjpa.meta.FetchGroup.copy(FetchGroup)
org.apache.openjpa.meta.FetchGroup.FetchGroup(ClassMetaData,String)
org.apache.openjpa.meta.FetchGroup.FetchGroup(String,boolean)
org.apache.openjpa.meta.FetchGroup.findRecursionDepth(FieldMetaData)
org.apache.openjpa.meta.FetchGroup.getContainedBy()
org.apache.openjpa.meta.FetchGroup.getDeclaredIncludes()
org.apache.openjpa.meta.FetchGroup.getDeclaredRecursionDepth(FieldMetaData)
org.apache.openjpa.meta.FetchGroup.getDeclaredRecursionDepthFields()
org.apache.openjpa.meta.FetchGroup.includes(String,boolean)
org.apache.openjpa.meta.FetchGroup.isPostLoad()
org.apache.openjpa.meta.FetchGroup.isPostLoadExplicit()
org.apache.openjpa.meta.FetchGroup.resolve()
org.apache.openjpa.meta.FetchGroup.setRecursionDepth(FieldMetaData,int)
org.apache.openjpa.meta.FieldMetaData.backingMember(Member)
org.apache.openjpa.meta.FieldMetaData.copy(ValueMetaData)
org.apache.openjpa.meta.FieldMetaData.FieldMetaData(String,Class<?>,ClassMetaData)
org.apache.openjpa.meta.FieldMetaData.FieldMetaData(String,Class,ClassMetaData)
org.apache.openjpa.meta.FieldMetaData.findMethod(String)
org.apache.openjpa.meta.FieldMetaData.getAccessType()
org.apache.openjpa.meta.FieldMetaData.getDeclaringType()
org.apache.openjpa.meta.FieldMetaData.getInverseMetaDatas()
org.apache.openjpa.meta.FieldMetaData.getObjectIdFieldType()
org.apache.openjpa.meta.FieldMetaData.getProxyType()
org.apache.openjpa.meta.FieldMetaData.getTypeOverride()
org.apache.openjpa.meta.FieldMetaData.getValueMappedByMetaData()
org.apache.openjpa.meta.FieldMetaData.isEnum()
org.apache.openjpa.meta.FieldMetaData.isLobArray()
org.apache.openjpa.meta.FieldMetaData.isSerializable()
org.apache.openjpa.meta.FieldMetaData.isStoreContextParameter(Class<?>)
org.apache.openjpa.meta.FieldMetaData.isStoreContextParameter(Class)
org.apache.openjpa.meta.FieldMetaData.MemberProvider.readExternal(ObjectInput)
org.apache.openjpa.meta.FieldMetaData.order(Object)
org.apache.openjpa.meta.FieldMetaData.resolve(int)
org.apache.openjpa.meta.FieldMetaData.setDeclaringType(Class<?>)
org.apache.openjpa.meta.FieldMetaData.setDeclaringType(Class)
org.apache.openjpa.meta.FieldMetaData.setInFetchGroup(String,boolean)
org.apache.openjpa.meta.FieldMetaData.setProxyType(Class<?>)
org.apache.openjpa.meta.FieldMetaData.setProxyType(Class)
org.apache.openjpa.meta.FieldMetaData.setTypeOverride(Class)
org.apache.openjpa.meta.FieldMetaData.setValueMappedBy(String)
org.apache.openjpa.meta.FieldMetaData.validateLRS()
org.apache.openjpa.meta.FieldMetaData.validateSupportedType()
org.apache.openjpa.meta.MetaDataFactory.addClassExtensionKeys(Collection<?>)
org.apache.openjpa.meta.MetaDataFactory.addClassExtensionKeys(Collection)
org.apache.openjpa.meta.MetaDataFactory.addFieldExtensionKeys(Collection<?>)
org.apache.openjpa.meta.MetaDataFactory.addFieldExtensionKeys(Collection)
org.apache.openjpa.meta.MetaDataFactory.drop(Class<?>[],int,ClassLoader)
org.apache.openjpa.meta.MetaDataFactory.drop(Class[],int,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.addDeclaredInterfaceImpl(ClassMetaData,Class<?>)
org.apache.openjpa.meta.MetaDataRepository.addDeclaredInterfaceImpl(ClassMetaData,Class)
org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class)
org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class<?>,int)
org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class,int)
org.apache.openjpa.meta.MetaDataRepository.addNonMappedInterface(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.addNonMappedInterface(Class)
org.apache.openjpa.meta.MetaDataRepository.addPersistenceAware(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.addPersistenceAware(Class)
org.apache.openjpa.meta.MetaDataRepository.addQueryMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.addQueryMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.addToCollection(Map,Class<?>,Class<?>,boolean)
org.apache.openjpa.meta.MetaDataRepository.addToCollection(Map,Class,Class,boolean)
org.apache.openjpa.meta.MetaDataRepository.addXMLMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.addXMLMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.classForName(String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getAliasNames()
org.apache.openjpa.meta.MetaDataRepository.getCachedMetaData(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.getCachedMetaData(Class)
org.apache.openjpa.meta.MetaDataRepository.getCachedQueryMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.getCachedQueryMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.getCachedSequenceMetaData(String)
org.apache.openjpa.meta.MetaDataRepository.getCachedXMLMetaData(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.getCachedXMLMetaData(Class)
org.apache.openjpa.meta.MetaDataRepository.getClosestAliasName(String)
org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatas(Class<?>,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatas(Class,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(Class<?>,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(Class,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<?>,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(Object,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaDatas()
org.apache.openjpa.meta.MetaDataRepository.getMetaData(String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getNonMappedInterface(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.getNonMappedInterface(Class)
org.apache.openjpa.meta.MetaDataRepository.getPCSubclasses(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.getPCSubclasses(Class)
org.apache.openjpa.meta.MetaDataRepository.getPersistenceAware(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.getPersistenceAware(Class)
org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNames(boolean,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getQueryKey(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.getQueryKey(Class,String)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaData(Class<?>,String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaData(Class,String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<?>,String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class,String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDatas()
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDatas()
org.apache.openjpa.meta.MetaDataRepository.getXMLMetaData(FieldMetaData)
org.apache.openjpa.meta.MetaDataRepository.isLeastDerivedImpl(Class<?>,Class<?>)
org.apache.openjpa.meta.MetaDataRepository.isLeastDerivedImpl(Class,Class)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.loadRegisteredClassMetaData(ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.newClassMetaData(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.newClassMetaData(Class)
org.apache.openjpa.meta.MetaDataRepository.newFieldMetaData(String,Class<?>,ClassMetaData)
org.apache.openjpa.meta.MetaDataRepository.newFieldMetaData(String,Class,ClassMetaData)
org.apache.openjpa.meta.MetaDataRepository.newQueryMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.newQueryMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.newXMLClassMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.newXMLClassMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.newXMLFieldMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.newXMLFieldMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.processBuffer(ClassMetaData,InheritanceOrderedMetaDataList,int)
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClass(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClass(Class)
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClasses(ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.removeMetaData(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.removeMetaData(Class)
org.apache.openjpa.meta.MetaDataRepository.removeNonMappedInterface(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.removeNonMappedInterface(Class)
org.apache.openjpa.meta.MetaDataRepository.removePersistenceAware(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.removePersistenceAware(Class)
org.apache.openjpa.meta.MetaDataRepository.removeQueryMetaData(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.removeQueryMetaData(Class,String)
org.apache.openjpa.meta.MetaDataRepository.resolveAll(ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.resolve(ClassMetaData)
org.apache.openjpa.meta.MetaDataRepository.resolveIdentityClass(Object)
org.apache.openjpa.meta.MetaDataRepository.resolveMapping(ClassMetaData)
org.apache.openjpa.meta.MetaDataRepository.resolveMeta(ClassMetaData)
org.apache.openjpa.meta.MetaDataRepository.setInterfaceImpl(ClassMetaData,Class<?>)
org.apache.openjpa.meta.MetaDataRepository.setInterfaceImpl(ClassMetaData,Class)
org.apache.openjpa.meta.MetaDataRepository.updateImpls(Class<?>,Class<?>,Class<?>)
org.apache.openjpa.meta.MetaDataRepository.updateImpls(Class,Class,Class)
org.apache.openjpa.meta.NoneMetaDataFactory.getDefaultAccessType()
org.apache.openjpa.meta.NoneMetaDataFactory.getDefaultIdentityType()
org.apache.openjpa.meta.TestAccessCode.testValidClassCodes()
org.apache.openjpa.meta.ValueMetaDataImpl.addEmbeddedMetaData()
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getAccessCode(Class<?>)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getSourceFile()
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodComparator.compare(Method,Method)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodComparator.compare(Object,Object)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodComparator.getInstance()
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodKey.hashCode()
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseAccess(ClassMetaData,Access)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseAccess(FieldMetaData,Access)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseBasic(FieldMetaData,Basic,boolean)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseCallbackMethods(Class<?>,Collection<LifecycleCallbacks>[],LifecycleCallbacks,boolean,boolean,MetaDataRepository)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseCallbackMethods(Class,Collection<LifecycleCallbacks>[],LifecycleCallbacks,boolean,boolean,MetaDataRepository)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parse(Class<?>)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parse(Class)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseClassAnnotations()
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseEntityListeners(ClassMetaData,EntityListeners)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseFetchAttribute(ClassMetaData,org.apache.openjpa.meta.FetchGroup,FetchAttribute)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseNamedNativeQueries(AnnotatedElement,NamedNativeQuery)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseNamedQueries(AnnotatedElement,NamedQuery)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseSequenceGenerator(AnnotatedElement,SequenceGenerator)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.toOverrideType(Class<?>)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.toOverrideType(Class)
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl.registerParameter(ParameterExpressionImpl<?>)
org.apache.openjpa.persistence.EntityManagerImpl.find(Class<T>,T,Object,LockModeType,Map<String,Object>,String,Object)
org.apache.openjpa.persistence.ExtentImpl.ExtentImpl(EntityManagerImpl,org.apache.openjpa.kernel.Extent)
org.apache.openjpa.persistence.ExtentImpl.ExtentImpl(EntityManagerImpl,org.apache.openjpa.kernel.Extent<T>,T)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setMapKeyColumn(FieldMapping,MappingInfo,Column,int)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineAccessType(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineExplicitAccessType(Class<?>)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineImplicitAccessType(Class<?>)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineImplicitAccessType(Class)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.error(ClassMetaData,Localizer.Message)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.filter(List<T>,T,InclusiveFilter)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.filter(T[],InclusiveFilter)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getCachedSuperclassMetaData(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getLog(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getMemberByProperty(ClassMetaData,String)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistentFields(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistentMembers(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistentMethods(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.populate(ClassMetaData,int)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setDefaultAccessType(String)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.toFieldNames(List<Field>,Field)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.toMethodNames(List<Method>,Method)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.warn(ClassMetaData,Localizer.Message)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.findXML(Class<?>)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.findXML(Class)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getQueryScope(String,ClassLoader)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getResultSetMappingScope(String,ClassLoader)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.load(Class<?>,int,ClassLoader)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.load(Class,int,ClassLoader)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.mapPersistentTypeNames(Object,String[])
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newXMLSerializer()
org.apache.openjpa.persistence.PersistenceMetaDataFactory.parseXML(URL,Class<?>,int,ClassLoader)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.parseXML(URL,Class,int,ClassLoader)
org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.ClassTransformerImpl(ConfigurationProvider,String,ClassLoader,OpenJPAConfiguration)
org.apache.openjpa.persistence.PersistenceProviderImpl.createContainerEntityManagerFactory(PersistenceUnitInfo,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,String,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.getBrokerFactory(ConfigurationProvider,Object,ClassLoader)
org.apache.openjpa.persistence.QueryImpl.getDeclaredParameters()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endAccess()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getFieldAccess(FieldMetaData,Attributes)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseField(Attributes)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.reset()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startClass(String,Attributes)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.toAccessType(String,int)
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addClassAttributes(ClassMetaData,boolean)
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serialize(Collection)
org.apache.openjpa.util.AbstractLRSProxyMap.AbstractLRSProxyMap(Class,Class)
org.apache.openjpa.util.AbstractLRSProxyMap.AbstractLRSProxyMap(Class<K>,K,Class<V>,V)
org.apache.openjpa.util.AbstractLRSProxyMap.itr()
org.apache.openjpa.util.AbstractLRSProxyMap.keys(Object)
org.apache.openjpa.util.AbstractLRSProxyMap.putAll(Map)
org.apache.openjpa.util.AbstractLRSProxyMap.put(Object,Object)
org.apache.openjpa.util.AbstractLRSProxyMap.value(Object)
org.apache.openjpa.util.ApplicationIds.copy(Object,ClassMetaData,FieldMetaData[])
org.apache.openjpa.util.ApplicationIds.fromPKValues(Object[],ClassMetaData)
org.apache.openjpa.util.ApplicationIds.get(Object,FieldMetaData)
org.apache.openjpa.util.ApplicationIds.toPKValues(Object,ClassMetaData)
org.apache.openjpa.util.ClassResolver.getClassLoader(Class<?>,ClassLoader)
org.apache.openjpa.util.ClassResolver.getClassLoader(Class,ClassLoader)
org.apache.openjpa.writebehind.AbstractWriteBehindCache.getName()
org.apache.openjpa.writebehind.AbstractWriteBehindCache.setName(String)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.add(Collection<OpenJPAStateManager>,OpenJPAStateManager)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.add(Collection<StateManagerImpl>,StateManagerImpl)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.add(OpenJPAStateManager)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.add(StateManagerImpl)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.getKey(OpenJPAStateManager)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.getKey(StateManagerImpl)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.getSize()
org.apache.openjpa.writebehind.SimpleWriteBehindCache.getStateManagers()
org.apache.openjpa.writebehind.SimpleWriteBehindCache.initialize(WriteBehindCacheManager)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.merge(OpenJPAStateManager,OpenJPAStateManager)
org.apache.openjpa.writebehind.SimpleWriteBehindCache.merge(StateManagerImpl,StateManagerImpl)
org.apache.openjpa.writebehind.SimpleWriteBehindCallback.flush()
org.apache.openjpa.writebehind.WriteBehindStoreManager.cacheAble(OpenJPAStateManager)
org.apache.openjpa.writebehind.WriteBehindStoreManager.cacheAble(StateManagerImpl)
org.apache.openjpa.writebehind.WriteBehindStoreManager.flushBehind(Collection<OpenJPAStateManager>,OpenJPAStateManager)
org.apache.openjpa.writebehind.WriteBehindStoreManager.flushBehind(Collection<StateManagerImpl>,StateManagerImpl)
org.apache.openjpa.writebehind.WriteBehindStoreManager.getOperation(OpenJPAStateManager)
org.apache.openjpa.writebehind.WriteBehindStoreManager.getOperation(StateManagerImpl)
org.apache.openjpa.writebehind.WriteBehindStoreManager.rollback()
org.apache.openjpa.writebehind.WriteBehindStoreManager.WriteBehindStoreManager(StoreManager)
org.apache.openjpa.writebehind.WriteBehindStoreManager.WriteBehindStoreManager(StoreManager,WriteBehindCache)
