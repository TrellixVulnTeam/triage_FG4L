org.apache.openjpa.jdbc.sql.DBDictionary.getSQLStates(int)
org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(String,SQLException[],Object)
org.apache.openjpa.jdbc.sql.DerbyDictionary.closeDataSource(DataSource)
org.apache.openjpa.jdbc.sql.SQLExceptions.getSQLExceptions(SQLException)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,Object,DBDictionary)
org.apache.openjpa.jdbc.sql.SQLExceptions.narrow(String,SQLException,DBDictionary)
org.apache.openjpa.persistence.exception.PObject.getId()
org.apache.openjpa.persistence.exception.PObject.getName()
org.apache.openjpa.persistence.exception.PObject.getVersion()
org.apache.openjpa.persistence.exception.PObject.setName(String)
org.apache.openjpa.persistence.exception.TestException.isExpectedException(Throwable,Class)
org.apache.openjpa.persistence.exception.TestException.print(Throwable)
org.apache.openjpa.persistence.exception.TestException.print(Throwable,int)
org.apache.openjpa.persistence.exception.TestException.setUp()
org.apache.openjpa.persistence.exception.TestException.testThrowsJPADefinedOptimisticException()
org.apache.openjpa.persistence.PersistenceExceptions.translateStoreException(OpenJPAException)
org.apache.openjpa.util.ObjectExistsException.ObjectExistsException(Message)
org.apache.openjpa.util.ObjectExistsException.ObjectExistsException(String)
