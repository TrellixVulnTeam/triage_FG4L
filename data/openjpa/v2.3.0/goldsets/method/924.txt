org.apache.openjpa.conf.OpenJPAConfiguration.getFinderCacheInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQuerySQLCacheInstance()
org.apache.openjpa.conf.OpenJPAConfiguration.setFinderCache(String)
org.apache.openjpa.conf.OpenJPAConfiguration.setQuerySQLCache(String)
org.apache.openjpa.enhance.ManagedClassSubclasser.collectUnspecifiedType(Class,Collection<?extendsClass>,Class,Set<Class>,Class)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean,boolean)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.addExclusionPattern(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.cache(ClassMapping,SelectExecutor,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.endConfiguration()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.FinderCacheImpl()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.get(ClassMapping,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getExcludes()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMapView()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMatchedExclusionPattern(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMatchedKeys(String,Collection<String>,String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMatchedKeys(String,Set<ClassMapping>,ClassMapping)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getStatistics()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.invalidate(ClassMapping)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.isExcluded(ClassMapping)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.isExcluded(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.isHinted(FetchConfiguration,String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.lock()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(ClassMapping)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(ClassMapping,String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(String,String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.matches(String,ClassMapping)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.matches(String,String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.put(ClassMapping,SelectExecutor)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.removeExclusionPattern(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.searchMappingByName(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.setConfiguration(Configuration)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.setExcludes(String)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.startConfiguration()
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.unlock()
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.execute(OpenJPAStateManager,StoreManager,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.extractImplementation(SelectExecutor)
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.FinderQueryImpl(ClassMapping,SelectImpl,SQLBuffer)
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getDelegate()
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getIdentifier()
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getPKValues(OpenJPAStateManager,JDBCStore)
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getQueryString()
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.newFinder(ClassMapping,SelectExecutor)
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.toString()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.afterExecuteStatement(Statement)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.cacheFinder(ClassMapping,SelectExecutor,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getFinderCache()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getFinder(ClassMapping,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateResult(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateUnionResult(OpenJPAStateManager,ClassMapping,ClassMapping[],JDBCFetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateUnionResult.select(Select,int)
org.apache.openjpa.jdbc.sql.LogicalUnion.getCount(JDBCStore)
org.apache.openjpa.jdbc.sql.LogicalUnion.hasMultipleSelects()
org.apache.openjpa.jdbc.sql.LogicalUnion.supportsLocking()
org.apache.openjpa.kernel.BrokerImpl.getCacheFinderQuery()
org.apache.openjpa.kernel.BrokerImpl.setCacheFinderQuery(boolean)
org.apache.openjpa.kernel.BrokerImpl.setCachePreparedQuery(boolean)
org.apache.openjpa.kernel.FinderCache.cache(K,V,FetchConfiguration)
org.apache.openjpa.kernel.FinderCache.get(K,FetchConfiguration)
org.apache.openjpa.kernel.FinderCache.invalidate(K)
org.apache.openjpa.kernel.FinderCache.isExcluded(K)
org.apache.openjpa.kernel.FinderCache.markUncachable(K)
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.TxRollbackEntity()
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.TxRollbackEntity(String)
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.classArray(Class)
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.setUp()
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testMidNonEntityInheritance()
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.verifyInheritanceFinderResult(EntityManager,Class,int)
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.verifyInheritanceQueryResult(EntityManager,String,Class[],int)
org.apache.openjpa.persistence.jdbc.sqlcache.Merchandise.getId()
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.createTestData()
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.$GenericMethodDeclaration$()
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.getCache()
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.run(int,Class<T>,T,long[])
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.testFinder()
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.testSQLEventListener()
