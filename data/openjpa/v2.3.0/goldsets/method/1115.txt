org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDataSource2(StoreContext)
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getIdentifierUtil()
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getIdentifierUtilInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.isInvalidProperty(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean,boolean)
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setIdentifierUtil(DBIdentifierUtil)
org.apache.openjpa.jdbc.identifier.ColumnDefIdentifierRule.ColumnDefIdentifierRule()
org.apache.openjpa.jdbc.identifier.DBIdentifier.append(DBIdentifier,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.assertNotNull()
org.apache.openjpa.jdbc.identifier.DBIdentifier.clone()
org.apache.openjpa.jdbc.identifier.DBIdentifier.combine(DBIdentifier,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.combine(DBIdentifierType,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.compareTo(Identifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier()
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(String,DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(String,DBIdentifierType,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.equal(DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.equals(DBIdentifier,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.equalsIgnoreCase(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.equalsIgnoreCase(DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.equals(Object)
org.apache.openjpa.jdbc.identifier.DBIdentifier.getFourPartIdentifier(String[],DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.getNameInternal()
org.apache.openjpa.jdbc.identifier.DBIdentifier.getThreePartIdentifier(String[],DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.getTwoPartIdentifier(String[],DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.getType()
org.apache.openjpa.jdbc.identifier.DBIdentifier.getUnqualifiedName()
org.apache.openjpa.jdbc.identifier.DBIdentifier.isDelimited()
org.apache.openjpa.jdbc.identifier.DBIdentifier.isEmpty(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.isNull()
org.apache.openjpa.jdbc.identifier.DBIdentifier.isNull(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.join(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.length()
org.apache.openjpa.jdbc.identifier.DBIdentifier.newCatalog(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newCatalog(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newColumnDefinition(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newColumn(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newColumn(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newConstant(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newConstraint(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newConstraint(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newDefault(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newForeignKey(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newForeignKey(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType,boolean,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newIndex(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newIndex(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newSchema(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newSchema(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newSequence(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newSequence(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newTable(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.newTable(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.preCombine(DBIdentifier,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.removeDelimiters(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.removeHungarianNotation(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.removeLeading(DBIdentifier,String)
org.apache.openjpa.jdbc.identifier.DBIdentifierRule.DBIdentifierRule()
org.apache.openjpa.jdbc.identifier.DBIdentifierRule.DBIdentifierRule(DBIdentifierType,Set<String>,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.setName(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.setNameInternal(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.setName(String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.setName(String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.setType(DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.split(DBIdentifierType,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.split(String,DBIdentifierType,String)
org.apache.openjpa.jdbc.identifier.DBIdentifier.toArray(String[],DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifier.toArray(String[],DBIdentifierType,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.toLower(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.toLower(DBIdentifier,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.toStringArray(DBIdentifier[])
org.apache.openjpa.jdbc.identifier.DBIdentifier.toUpper(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.toUpper(DBIdentifier,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifier.trim(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.trimToNull(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifier.truncate(DBIdentifier,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.appendColumns(Column[])
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.append(DBIdentifierType,DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.convertSchemaCase(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.fromDBName(String,DBIdentifierType)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getGeneratedKeySequenceName(Column,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidColumnIdentifier(DBIdentifier,Table,int,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidForeignKeyIdentifier(DBIdentifier,Table,Table,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidIndexIdentifier(DBIdentifier,Table,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidSequenceIdentifier(DBIdentifier,Schema,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidTableIdentifier(DBIdentifier,Schema,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidUniqueIdentifier(DBIdentifier,Table,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.convertAlias(String)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.DBIdentifierUtilImpl()
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.DBIdentifierUtilImpl(IdentifierConfiguration)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.delimit(DBIdentifier,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getConfiguration()
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getMaxLen(String,DBIdentifier,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.makeName(String,DBIdentifier,String)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.makeName(String,DBIdentifier,Table,String)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.setConfiguration(Configuration)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.shorten(String,int)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.toDBName(String,String,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.makeIdentifierValid(DBIdentifier,NameSet,int,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.makeNameValid(String,NameSet,int,int,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(DBIdentifier)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(DBIdentifier,boolean)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(String)
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(String,boolean)
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.DefaultIdentifierConfiguration()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.delimitAll()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.$GenericMethodDeclaration$()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getConversionKey()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getDefaultIdentifierRule()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getDelimitedCase()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierConcatenator()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierDelimiter()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierRules()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierRule(T)
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getLeadingDelimiter()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getSupportsDelimitedIdentifiers()
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getTrailingDelimiter()
org.apache.openjpa.jdbc.identifier.Normalizer.append(String,String)
org.apache.openjpa.jdbc.identifier.Normalizer.canSplit(String)
org.apache.openjpa.jdbc.identifier.Normalizer.canSplit(String,String)
org.apache.openjpa.jdbc.identifier.Normalizer.combine(String)
org.apache.openjpa.jdbc.identifier.Normalizer.combine(String,String)
org.apache.openjpa.jdbc.identifier.Normalizer.delimit(String,boolean)
org.apache.openjpa.jdbc.identifier.Normalizer.fullNamesEqual(String,String)
org.apache.openjpa.jdbc.identifier.Normalizer.getNamingConfiguration()
org.apache.openjpa.jdbc.identifier.Normalizer.isDelimited(String)
org.apache.openjpa.jdbc.identifier.Normalizer.joinNames(String[])
org.apache.openjpa.jdbc.identifier.Normalizer.joinNames(String,String)
org.apache.openjpa.jdbc.identifier.Normalizer.joinNames(String[],String)
org.apache.openjpa.jdbc.identifier.Normalizer.namesEqual(String,String)
org.apache.openjpa.jdbc.identifier.Normalizer.normalizeMulti(String)
org.apache.openjpa.jdbc.identifier.Normalizer.normalizeString(String)
org.apache.openjpa.jdbc.identifier.Normalizer.normalizeUpper(String)
org.apache.openjpa.jdbc.identifier.Normalizer.removeDelimiters(String)
org.apache.openjpa.jdbc.identifier.Normalizer.removeHungarianNotation(String)
org.apache.openjpa.jdbc.identifier.Normalizer.splitName(String)
org.apache.openjpa.jdbc.identifier.Normalizer.truncate(String,int)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getBaseName()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getIdentifier()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getName()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getObjectTableName()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getPath(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getSchemaName()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.isUnqualifiedColumn()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.isUnqualifiedObject()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.newPath(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.pathEqual(QualifiedDBIdentifier,QualifiedDBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.QualifiedDBIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.resetNames()
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setBaseName(String)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setObjectTableName(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setPath(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setSchemaName(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.splitPath(DBIdentifier)
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.toString()
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.addPrimaryKeyColumn(Table)
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.run(JDBCConfiguration,String[],String,MappingRepository,ClassLoader)
org.apache.openjpa.jdbc.kernel.exps.PCPath.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.MixedLockManager.getLockRows(DBDictionary,Object,ClassMapping,JDBCFetchConfiguration,SQLFactory)
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.addSchema(ClassMapping,SchemaGroup)
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.buildSequence()
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.endConfiguration()
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSchema()
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSchemaIdentifier()
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSequence()
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.run(JDBCConfiguration,String[],String)
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setSchema(String)
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setSequence(String)
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setTableName(String)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getAutoAssignColIdentifiers(Column[],RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getAutoAssignColNames(Column[],RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getAutoAssignColumns(RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getGeneratedKeys(PreparedStatement,DBIdentifier[])
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getGeneratedKeys(PreparedStatement,String[])
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.populateAutoAssignCols(PreparedStatement,Column[],DBIdentifier[],RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.populateAutoAssignCols(PreparedStatement,Column[],String[],RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.setObjectId(List,Column[],DBIdentifier[],RowImpl)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.setObjectId(List,Column[],String[],RowImpl)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.buildTable()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getInitialValue()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getPrimaryKeyColumn()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getPrimaryKeyColumnIdentifier()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ClassMapping,Connection)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequenceColumn()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ResultSet,DBDictionary)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getTable()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueColumns()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueConstraintIdentifier()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueConstraintName()
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.insertSequence(ClassMapping,Connection)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.resolveTableIdentifier(ClassMapping,Table)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.resolveTableName(ClassMapping,Table)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setPrimaryKeyColumn(String)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setSequence(ClassMapping,Status,int,boolean,Connection)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setSequenceColumn(String)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setTable(String)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueColumns(String)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueConstraintName(DBIdentifier)
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueConstraintName(String)
org.apache.openjpa.jdbc.meta.ClassMapping.assertJoinable(Column)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addSecondaryTable(DBIdentifier)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addSecondaryTable(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addUnique(DBIdentifier,Unique)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addUnique(String,Unique)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.clear(boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.copy(MappingInfo)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableIdentifiers()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableJoinColumns(DBIdentifier)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableJoinColumns(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableNames()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableName(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,String,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable.getIdentifier(Schema)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable.get(Schema)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTableIdentifier()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTableName()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(DBIdentifier)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(MetaDataContext,boolean)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.hasSchemaComponents()
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setColNumber(int)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSchemaIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSchemaName(String)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSecondaryTableJoinColumns(DBIdentifier,List<Column>,Column)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSecondaryTableJoinColumns(String,List)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSecondaryTableJoinColumns(String,List<Column>,Column)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setTableIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.ClassMappingInfo.syncWith(ClassMapping)
org.apache.openjpa.jdbc.meta.ClassStrategy.customLoad(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.meta.DelegatingJoinable.DelegatingJoinable(Joinable,Column[])
org.apache.openjpa.jdbc.meta.DelegatingJoinable.DelegatingJoinable(Joinable,ForeignKey)
org.apache.openjpa.jdbc.meta.DelegatingJoinable.getFieldIndex()
org.apache.openjpa.jdbc.meta.Discriminator.getClass(JDBCStore,ClassMapping,Result)
org.apache.openjpa.jdbc.meta.Discriminator.loadSubclasses(JDBCStore)
org.apache.openjpa.jdbc.meta.FieldMapping.FieldMapping(String,Class<?>,ClassMapping)
org.apache.openjpa.jdbc.meta.FieldMapping.FieldMapping(String,Class,ClassMapping)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean,List)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean,List<Column>,Column)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinForeignKey(FieldMapping,Table,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getOrderColumn(FieldMapping,Table,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTable(FieldMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getUniques(FieldMapping,List<Unique>,Unique,boolean,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncJoinTableUniques(MetaDataContext,Unique[])
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncWith(FieldMapping)
org.apache.openjpa.jdbc.meta.FieldMapping.mapConstraints(DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.FieldMapping.mapConstraints(String,boolean)
org.apache.openjpa.jdbc.meta.FieldMapping.setBi1MJoinTableInfo()
org.apache.openjpa.jdbc.meta.FieldMapping.setPKValueFromMappedByIdField(OpenJPAStateManager)
org.apache.openjpa.jdbc.meta.FieldMapping.setPolymorphic(int)
org.apache.openjpa.jdbc.meta.JavaSQLTypes.getDateTypeCode(Class<?>)
org.apache.openjpa.jdbc.meta.JavaSQLTypes.getDateTypeCode(Class)
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.getComparator()
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.isAscending()
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.setColumnIO(ColumnIO)
org.apache.openjpa.jdbc.meta.JDBCOrder.order(Select,ClassMapping,Joins)
org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.JDBCRelatedFieldOrder(FieldMapping,FieldMapping,boolean)
org.apache.openjpa.jdbc.meta.JDBCValueOrder.JDBCValueOrder(FieldMapping,boolean)
org.apache.openjpa.jdbc.meta.MappingDefaults.getForeignKey(ValueMapping,DBIdentifier,Table,Table,boolean)
org.apache.openjpa.jdbc.meta.MappingDefaults.getForeignKey(ValueMapping,String,Table,Table,boolean)
org.apache.openjpa.jdbc.meta.MappingDefaults.getIndex(ValueMapping,DBIdentifier,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaults.getIndex(ValueMapping,String,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaults.getPrimaryKeyIdentifier(ClassMapping,Table)
org.apache.openjpa.jdbc.meta.MappingDefaults.getPrimaryKeyName(ClassMapping,Table)
org.apache.openjpa.jdbc.meta.MappingDefaults.getStrategy(ValueMapping,Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingDefaults.getStrategy(ValueMapping,Class,boolean)
org.apache.openjpa.jdbc.meta.MappingDefaults.getTableIdentifier(ClassMapping,Schema)
org.apache.openjpa.jdbc.meta.MappingDefaults.getTableIdentifier(FieldMapping,Schema)
org.apache.openjpa.jdbc.meta.MappingDefaults.getTableName(ClassMapping,Schema)
org.apache.openjpa.jdbc.meta.MappingDefaults.getTableName(FieldMapping,Schema)
org.apache.openjpa.jdbc.meta.MappingDefaults.getUnique(ValueMapping,DBIdentifier,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaults.getUnique(ValueMapping,String,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.correctName(Table,Column)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.defaultMissingInfo()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDataStoreIdColumnIdentifier()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDataStoreIdColumnName()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDiscriminatorColumnIdentifier()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDiscriminatorColumnName()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndex(Discriminator,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexName(DBIdentifier,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexName(String,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndex(Version,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinForeignKey(FieldMapping,Table,Table)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinIndex(FieldMapping,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinUnique(FieldMapping,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getNullIndicatorColumnIdentifier()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getNullIndicatorColumnName()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getOrderColumnIdentifier()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getOrderColumnName()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStrategy(Discriminator,boolean)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getVersionColumnIdentifier()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getVersionColumnName()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.installPrimaryKey(FieldMapping,Table)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.isRemoveHungarianNotation()
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateColumns(Discriminator,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateColumns(Version,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateDataStoreIdColumns(ClassMapping,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateJoinColumn(FieldMapping,Table,Table,Column,Object,int,int)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateOrderColumns(FieldMapping,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDataStoreIdColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDataStoreIdColumnName(String)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDiscriminatorColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDiscriminatorColumnName(String)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setNullIndicatorColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setNullIndicatorColumnName(String)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setOrderColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setOrderColumnName(String)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setVersionColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setVersionColumnName(String)
org.apache.openjpa.jdbc.meta.MappingDefaults.populateColumns(ValueMapping,DBIdentifier,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaults.populateColumns(ValueMapping,String,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaults.populateForeignKeyColumn(ValueMapping,DBIdentifier,Table,Table,Column,Object,boolean,int,int)
org.apache.openjpa.jdbc.meta.MappingDefaults.populateForeignKeyColumn(ValueMapping,String,Table,Table,Column,Object,boolean,int,int)
org.apache.openjpa.jdbc.meta.MappingDefaults.populateNullIndicatorColumns(ValueMapping,DBIdentifier,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingDefaults.populateNullIndicatorColumns(ValueMapping,String,Table,Column[])
org.apache.openjpa.jdbc.meta.MappingInfo.assertNoJoin(MetaDataContext,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.canMerge(List,Column[],boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.canMerge(List<Column>,Column,Column[],boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createColumns(MetaDataContext,String,Column[],Table,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createForeignKey(MetaDataContext,String,List<Column>,Column,ForeignKeyDefaults,Table,ClassMapping,ClassMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createForeignKey(MetaDataContext,String,List,ForeignKeyDefaults,Table,ClassMapping,ClassMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createIndex(MetaDataContext,String,Index,Column[],boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createJoins(MetaDataContext,String,Table,ClassMapping,ClassMapping,List<Column>,Column,ForeignKeyDefaults,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createJoins(MetaDataContext,String,Table,ClassMapping,ClassMapping,List,ForeignKeyDefaults,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createTable(MetaDataContext,TableDefaults,DBIdentifier,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createTable(MetaDataContext,TableDefaults,String,String,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.createUnique(MetaDataContext,String,Unique,Column[],boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.defaultTarget(Column,Column,int)
org.apache.openjpa.jdbc.meta.MappingInfo.findTable(MetaDataContext,DBIdentifier,Table,Table,ClassMapping)
org.apache.openjpa.jdbc.meta.MappingInfo.findTable(MetaDataContext,String,Table,Table,ClassMapping)
org.apache.openjpa.jdbc.meta.MappingInfo.getColumns()
org.apache.openjpa.jdbc.meta.MappingInfo.getColumns(DBIdentifier)
org.apache.openjpa.jdbc.meta.MappingInfo.getColumns(String)
org.apache.openjpa.jdbc.meta.MappingInfo.isTableName(DBIdentifier,Table)
org.apache.openjpa.jdbc.meta.MappingInfo.isTableName(String,Table)
org.apache.openjpa.jdbc.meta.MappingInfo.mergeColumn(MetaDataContext,String,Column,boolean,Column,Table,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.mergeJoinColumn(MetaDataContext,String,Column,Object[][],int,Table,ClassMapping,ClassMapping,ForeignKeyDefaults,boolean,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.setColumns(List)
org.apache.openjpa.jdbc.meta.MappingInfo.setColumns(List<Column>,Column)
org.apache.openjpa.jdbc.meta.MappingInfo.setIOFromJoins(ForeignKey,Object[][])
org.apache.openjpa.jdbc.meta.MappingInfo.syncColumn(MetaDataContext,Column,int,boolean,Table,Table,Object,boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.syncColumns(MetaDataContext,Column[],boolean)
org.apache.openjpa.jdbc.meta.MappingInfo.syncForeignKey(MetaDataContext,ForeignKey,Table,Table)
org.apache.openjpa.jdbc.meta.MappingInfo.syncIndex(MetaDataContext,Index)
org.apache.openjpa.jdbc.meta.MappingInfo.syncUnique(MetaDataContext,Unique)
org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(FieldMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.findBaseClassMapping(ClassMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.getImplementorMappings(Class<?>,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getImplementorMappings(Class,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Class<?>,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Class,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Object,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultKey(Class<?>,String)
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultKey(Class,String)
org.apache.openjpa.jdbc.meta.MappingRepository.hasJoinColumn(FieldMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.hasJoinTable(FieldMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateClassStrategy(String,ClassMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateDiscriminatorStrategy(String,Discriminator)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(Class<?>,Version,String)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(Class,Version,String)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(String,Version)
org.apache.openjpa.jdbc.meta.MappingRepository.isClob(ValueMapping,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.mappedStrategy(ValueMapping,Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.mappedStrategy(ValueMapping,Class,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.namedHandler(ValueMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(FieldMapping,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.newClassMetaDataArray(int)
org.apache.openjpa.jdbc.meta.MappingRepository.newClassMetaData(Class<?>)
org.apache.openjpa.jdbc.meta.MappingRepository.newClassMetaData(Class)
org.apache.openjpa.jdbc.meta.MappingRepository.newFieldMetaData(String,Class<?>,ClassMetaData)
org.apache.openjpa.jdbc.meta.MappingRepository.newFieldMetaData(String,Class,ClassMetaData)
org.apache.openjpa.jdbc.meta.MappingRepository.prepareMapping(ClassMetaData)
org.apache.openjpa.jdbc.meta.MappingRepository.useInverseKeyMapping(FieldMapping)
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.installStrategy(ClassMapping)
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.installStrategy(FieldMapping)
org.apache.openjpa.jdbc.meta.MappingTool.add(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.add(Class)
org.apache.openjpa.jdbc.meta.MappingTool.addMeta(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.addMeta(Class)
org.apache.openjpa.jdbc.meta.MappingTool.buildSchema(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.buildSchema(Class)
org.apache.openjpa.jdbc.meta.MappingTool.drop(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.drop(Class)
org.apache.openjpa.jdbc.meta.MappingTool.getMapping(MappingRepository,Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingTool.getMapping(MappingRepository,Class,boolean)
org.apache.openjpa.jdbc.meta.MappingTool.getRepository()
org.apache.openjpa.jdbc.meta.MappingTool.ImportExport.exportMappings(JDBCConfiguration,Class<?>[],boolean,Log,Writer)
org.apache.openjpa.jdbc.meta.MappingTool.ImportExport.exportMappings(JDBCConfiguration,Class[],boolean,Log,Writer)
org.apache.openjpa.jdbc.meta.MappingTool.ImportExport.importMappings(JDBCConfiguration,Class<?>[],String[],boolean,Log,ClassLoader)
org.apache.openjpa.jdbc.meta.MappingTool.ImportExport.importMappings(JDBCConfiguration,Class[],String[],boolean,Log,ClassLoader)
org.apache.openjpa.jdbc.meta.MappingTool.newImportExports()
org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.Flags)
org.apache.openjpa.jdbc.meta.MappingTool.refresh(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.refresh(Class)
org.apache.openjpa.jdbc.meta.MappingTool.run(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.run(Class)
org.apache.openjpa.jdbc.meta.MappingTool.run(JDBCConfiguration,String[],Flags,ClassLoader)
org.apache.openjpa.jdbc.meta.MappingTool.validate(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.validate(Class)
org.apache.openjpa.jdbc.meta.SequenceMapping.addQuotes(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.addStandardProperties(StringBuilder)
org.apache.openjpa.jdbc.meta.SequenceMapping.getSequenceColumnIdentifier()
org.apache.openjpa.jdbc.meta.SequenceMapping.getUniqueColumnsIdentifier()
org.apache.openjpa.jdbc.meta.SequenceMapping.newPluginValue(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.SequenceMapping(DBIdentifier,MappingRepository)
org.apache.openjpa.jdbc.meta.SequenceMapping.SequenceMapping(String,MappingRepository)
org.apache.openjpa.jdbc.meta.SequenceMapping.setPrimaryKeyColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.SequenceMapping.setPrimaryKeyValue(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.setSequenceColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueColumnsIdentifier(DBIdentifier[])
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueColumns(String[])
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueConstraintIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.meta.strats.BlobValueHandler.getInstance()
org.apache.openjpa.jdbc.meta.strats.BlobValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)
org.apache.openjpa.jdbc.meta.strats.BlobValueHandler.map(ValueMapping,String,ColumnIO,boolean)
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.map(boolean)
org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean,List,List)
org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.map(ValueMapping,String,ColumnIO,boolean,List,List)
org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.setStoreOrdinal(boolean)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.handleMappedByForeignKey(boolean)
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.getReferenceField(ClassMapping,DBIdentifier)
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.getReferenceField(ClassMapping,String)
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.isReferenceField(FieldMapping,DBIdentifier)
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.isReferenceField(FieldMapping,String)
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.setMapsIdCols(List,ClassMapping)
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.setMapsIdCols(List,FieldMapping)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.createTranslatingForeignKey(ClassMapping,Column[],ForeignKey)
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.mapTypeJoin(ValueMapping,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.mapTypeJoin(ValueMapping,String,boolean)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.mapPrimaryKey(ValueMapping,FieldMapping)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.mapRelationToUnmappedPC(ValueMapping,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.mapRelationToUnmappedPC(ValueMapping,String,boolean)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.newUnmappedPCTemplateColumns(ValueMapping,DBIdentifier)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.newUnmappedPCTemplateColumns(ValueMapping,String)
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSQL()
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSQL(DBDictionary)
org.apache.openjpa.jdbc.meta.ValueMappingImpl.clearMapping()
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getEquivalentColumn(DBIdentifier,ClassMapping,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getEquivalentColumn(String,ClassMapping,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getForeignKey(ClassMapping)
org.apache.openjpa.jdbc.meta.ValueMappingImpl.newForwardForeignKey(ClassMapping)
org.apache.openjpa.jdbc.meta.ValueMappingImpl.refSchemaComponents()
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getColumns(ValueMapping,DBIdentifier,Column[],Table,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getColumns(ValueMapping,String,Column[],Table,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getIndex(ValueMapping,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getIndex(ValueMapping,String,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getInverseTypeJoin(ValueMapping,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getInverseTypeJoin(ValueMapping,String,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getMapsIdColumns()
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getNullIndicatorColumn(ValueMapping,DBIdentifier,Table,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getNullIndicatorColumn(ValueMapping,String,Table,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,DBIdentifier,boolean,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,String,boolean,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getUnique(ValueMapping,DBIdentifier,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getUnique(ValueMapping,String,boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.orderColumnsByTargetField(ValueMapping,Column[],boolean)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.setMapsIdColumns(List)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.setMapsIdColumns(List<Column>,Column)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.syncWith(ValueMapping)
org.apache.openjpa.jdbc.meta.VersionMappingInfo.getMultiTableColumns(Version,Column[],boolean)
org.apache.openjpa.jdbc.meta.VersionMappingInfo.getSingleTable(Version,Column[])
org.apache.openjpa.jdbc.meta.VersionMappingInfo.spansMultipleTables(Column[])
org.apache.openjpa.jdbc.schema.Column.Column(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.Column.Column(String,Table)
org.apache.openjpa.jdbc.schema.Column.copy(Column)
org.apache.openjpa.jdbc.schema.Column.equalsColumn(Column)
org.apache.openjpa.jdbc.schema.Column.getComment()
org.apache.openjpa.jdbc.schema.Column.getFullDBIdentifier()
org.apache.openjpa.jdbc.schema.Column.getFullName()
org.apache.openjpa.jdbc.schema.Column.getQualifiedPath()
org.apache.openjpa.jdbc.schema.Column.getTarget()
org.apache.openjpa.jdbc.schema.Column.getTargetIdentifier()
org.apache.openjpa.jdbc.schema.Column.getTypeIdentifier()
org.apache.openjpa.jdbc.schema.Column.getTypeName()
org.apache.openjpa.jdbc.schema.Column.hasComment()
org.apache.openjpa.jdbc.schema.Column.resetTableIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.Column.resetTableName(String)
org.apache.openjpa.jdbc.schema.Column.setIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.Column.setTargetIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.Column.setTarget(String)
org.apache.openjpa.jdbc.schema.Column.setTypeIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.Column.setTypeName(String)
org.apache.openjpa.jdbc.schema.Column.setVersionStrategy(VersionStrategy)
org.apache.openjpa.jdbc.schema.Constraint.Constraint(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.Constraint.Constraint(String,Table)
org.apache.openjpa.jdbc.schema.Constraint.getColumnIdentifier()
org.apache.openjpa.jdbc.schema.Constraint.getColumnName()
org.apache.openjpa.jdbc.schema.Constraint.getFullIdentifier()
org.apache.openjpa.jdbc.schema.Constraint.setColumnIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.Constraint.setColumnName(String)
org.apache.openjpa.jdbc.schema.Constraint.setDeferred(boolean)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicColumn.DynamicColumn(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicColumn.DynamicColumn(String,Table)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicColumn.isCompatible(int,String,int,int)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.DynamicTable(DBIdentifier,Schema)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.DynamicTable(String,Schema)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(DBIdentifier)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(DBIdentifier,DBDictionary)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(String)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(String,DBDictionary)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.findTable(DBIdentifier)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.findTable(QualifiedDBIdentifier)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.findTable(String)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.isKnownTable(QualifiedDBIdentifier)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.isKnownTable(String)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.newColumn(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.newColumn(String,Table)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.newTable(DBIdentifier,Schema)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.newTable(String,Schema)
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.startConfiguration()
org.apache.openjpa.jdbc.schema.ForeignKey.addColumn(ForeignKey)
org.apache.openjpa.jdbc.schema.ForeignKey.createKeyColumns(ForeignKey)
org.apache.openjpa.jdbc.schema.ForeignKey.FKMapKey.getFk()
org.apache.openjpa.jdbc.schema.ForeignKey.FKMapKey.hashCode()
org.apache.openjpa.jdbc.schema.ForeignKey.ForeignKey(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.ForeignKey.ForeignKey(String,Table)
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyColumnName()
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeySchemaIdentifier()
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeySchemaName()
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyTableIdentifier()
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyTableName()
org.apache.openjpa.jdbc.schema.ForeignKey.hasColumn(Column[],Column)
org.apache.openjpa.jdbc.schema.ForeignKey.loadIdentifierFromDB(DBDictionary,Connection)
org.apache.openjpa.jdbc.schema.ForeignKey.loadNameFromDB(DBDictionary,Connection)
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyColumnName(String)
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeySchemaIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeySchemaName(String)
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyTableIdentifier(DBIdentifier)
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyTableName(String)
org.apache.openjpa.jdbc.schema.Index.equalsIndex(Index)
org.apache.openjpa.jdbc.schema.Index.Index(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.Index.Index(String,Table)
org.apache.openjpa.jdbc.schema.Index.isLogical()
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findSequence(DBIdentifier)
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findSequence(QualifiedDBIdentifier)
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findSequence(String)
org.apache.openjpa.jdbc.schema.LazySchemaFactory.generateSchemaObject(QualifiedDBIdentifier,boolean)
org.apache.openjpa.jdbc.schema.LazySchemaFactory.generateSchemaObject(String,boolean)
org.apache.openjpa.jdbc.schema.LazySchemaFactory.storeSchema(SchemaGroup)
org.apache.openjpa.jdbc.schema.LocalConstraint.addColumn(Column)
org.apache.openjpa.jdbc.schema.LocalConstraint.LocalConstraint(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.LocalConstraint.LocalConstraint(String,Table)
org.apache.openjpa.jdbc.schema.LocalConstraint.remove()
org.apache.openjpa.jdbc.schema.NameSet.addName(DBIdentifier,boolean)
org.apache.openjpa.jdbc.schema.NameSet.addName(String,boolean)
org.apache.openjpa.jdbc.schema.NameSet.isNameTaken(DBIdentifier)
org.apache.openjpa.jdbc.schema.NameSet.isNameTaken(String)
org.apache.openjpa.jdbc.schema.NameSet.removeName(DBIdentifier)
org.apache.openjpa.jdbc.schema.NameSet.removeName(String)
org.apache.openjpa.jdbc.schema.PrimaryKey.PrimaryKey(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.PrimaryKey.PrimaryKey(String,Table)
org.apache.openjpa.jdbc.schema.Schema.addDelimSequenceName(String,Sequence)
org.apache.openjpa.jdbc.schema.Schema.addSequence(DBIdentifier)
org.apache.openjpa.jdbc.schema.Schema.addSequence(String)
org.apache.openjpa.jdbc.schema.Schema.addTable(DBIdentifier)
org.apache.openjpa.jdbc.schema.Schema.addTable(DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.schema.Schema.addTable(String)
org.apache.openjpa.jdbc.schema.Schema.addTable(String,String)
org.apache.openjpa.jdbc.schema.Schema.compareTo(Object)
org.apache.openjpa.jdbc.schema.Schema.compareTo(Schema)
org.apache.openjpa.jdbc.schema.SchemaGenerator.addListener(Listener)
org.apache.openjpa.jdbc.schema.SchemaGenerator.fireGenerationEvent(Object)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(DBIdentifier,DBIdentifier[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(String,String[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(String,String,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(DBIdentifier,DBIdentifier[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(String,String[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(String,String,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(DBIdentifier,DBIdentifier[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(String,String[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(String,String,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchema(DBIdentifier,DBIdentifier[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas()
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas(DBIdentifier[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas(String[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchema(String,String[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSequences(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSequences(String,String,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateTables(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateTables(String,String,Connection,DatabaseMetaData)
org.apache.openjpa.jdbc.schema.SchemaGenerator.getTables(DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGenerator.getTables(String)
org.apache.openjpa.jdbc.schema.SchemaGenerator.isAllowedTable(DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGenerator.isAllowedTable(String,String)
org.apache.openjpa.jdbc.schema.SchemaGenerator.parseSchemasList(DBIdentifier[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.parseSchemasList(String[])
org.apache.openjpa.jdbc.schema.SchemaGenerator.SchemaGenerator(JDBCConfiguration)
org.apache.openjpa.jdbc.schema.Schema.getSequence(DBIdentifier)
org.apache.openjpa.jdbc.schema.Schema.getSequence(String)
org.apache.openjpa.jdbc.schema.Schema.getTable(DBIdentifier)
org.apache.openjpa.jdbc.schema.Schema.getTable(String)
org.apache.openjpa.jdbc.schema.SchemaGroup.addDelimSchemaName(String,Schema)
org.apache.openjpa.jdbc.schema.SchemaGroup.addSchema()
org.apache.openjpa.jdbc.schema.SchemaGroup.addSchema(DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.addSchema(String)
org.apache.openjpa.jdbc.schema.SchemaGroup.copy(SchemaGroup)
org.apache.openjpa.jdbc.schema.SchemaGroup.findExportedForeignKeys(PrimaryKey)
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(Schema,QualifiedDBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(Schema,String)
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(Sequence)
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,QualifiedDBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,String)
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,String,String)
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.getSchema(DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.getSchema(String)
org.apache.openjpa.jdbc.schema.SchemaGroup.importSchema(Schema)
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(QualifiedDBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(String)
org.apache.openjpa.jdbc.schema.SchemaGroup.newForeignKey(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newForeignKey(String,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newIndex(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newIndex(String,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newPrimaryKey(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newPrimaryKey(String,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newSchema(DBIdentifier)
org.apache.openjpa.jdbc.schema.SchemaGroup.newSequence(DBIdentifier,Schema)
org.apache.openjpa.jdbc.schema.SchemaGroup.newSequence(String,Schema)
org.apache.openjpa.jdbc.schema.SchemaGroup.newUnique(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.newUnique(String,Table)
org.apache.openjpa.jdbc.schema.SchemaGroup.removeSchema(Schema)
org.apache.openjpa.jdbc.schema.Schema.importSequence(Sequence)
org.apache.openjpa.jdbc.schema.Schema.importTable(Table)
org.apache.openjpa.jdbc.schema.Schema.removeSequence(Sequence)
org.apache.openjpa.jdbc.schema.Schema.removeTable(Table)
org.apache.openjpa.jdbc.schema.Schema.Schema(DBIdentifier,SchemaGroup)
org.apache.openjpa.jdbc.schema.Schema.Schema(String,SchemaGroup)
org.apache.openjpa.jdbc.schema.Schemas.getJavaType(int,int,int)
org.apache.openjpa.jdbc.schema.Schemas.getNewTableSchemaIdentifier(JDBCConfiguration)
org.apache.openjpa.jdbc.schema.Schemas.getNewTableSchema(JDBCConfiguration)
org.apache.openjpa.jdbc.schema.SchemaTool.add(SchemaGroup,SchemaGroup)
org.apache.openjpa.jdbc.schema.SchemaTool.deleteTableContents()
org.apache.openjpa.jdbc.schema.SchemaTool.drop(SchemaGroup,SchemaGroup)
org.apache.openjpa.jdbc.schema.SchemaTool.dropTables(Collection,SchemaGroup)
org.apache.openjpa.jdbc.schema.SchemaTool.dropTables(Collection<Table>,Table,SchemaGroup)
org.apache.openjpa.jdbc.schema.SchemaTool.getDBSchemaGroup(boolean)
org.apache.openjpa.jdbc.schema.SchemaTool.isDroppable(Sequence)
org.apache.openjpa.jdbc.schema.SchemaTool.isDroppable(Table)
org.apache.openjpa.jdbc.schema.SchemaTool.retain(SchemaGroup,SchemaGroup,boolean,boolean)
org.apache.openjpa.jdbc.schema.Sequence.compareTo(Sequence)
org.apache.openjpa.jdbc.schema.Sequence.getLineNumber()
org.apache.openjpa.jdbc.schema.Sequence.getResourceName()
org.apache.openjpa.jdbc.schema.Sequence.Sequence(DBIdentifier,Schema)
org.apache.openjpa.jdbc.schema.Sequence.Sequence(String,Schema)
org.apache.openjpa.jdbc.schema.Sequence.setSource(File,int)
org.apache.openjpa.jdbc.schema.Table.addColumn(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.addColumn(DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.addColumn(String)
org.apache.openjpa.jdbc.schema.Table.addColumn(String,String)
org.apache.openjpa.jdbc.schema.Table.addCorrectedColumnName(DBIdentifier,boolean)
org.apache.openjpa.jdbc.schema.Table.addCorrectedColumnName(String,boolean)
org.apache.openjpa.jdbc.schema.Table.addForeignKey()
org.apache.openjpa.jdbc.schema.Table.addForeignKey(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.addForeignKey(String)
org.apache.openjpa.jdbc.schema.Table.addIndex(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.addIndex(String)
org.apache.openjpa.jdbc.schema.Table.addPrimaryKey()
org.apache.openjpa.jdbc.schema.Table.addPrimaryKey(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.addPrimaryKey(String)
org.apache.openjpa.jdbc.schema.Table.addUnique(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.addUnique(String)
org.apache.openjpa.jdbc.schema.Table.changeRelationId(Column)
org.apache.openjpa.jdbc.schema.Table.containsColumn(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.containsColumn(DBIdentifier,DBDictionary)
org.apache.openjpa.jdbc.schema.Table.containsColumn(String)
org.apache.openjpa.jdbc.schema.Table.containsColumn(String,DBDictionary)
org.apache.openjpa.jdbc.schema.Table.getAutoAssignedColumns()
org.apache.openjpa.jdbc.schema.Table.getColumnNames()
org.apache.openjpa.jdbc.schema.Table.getForeignKey(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.getForeignKeys()
org.apache.openjpa.jdbc.schema.Table.getForeignKey(String)
org.apache.openjpa.jdbc.schema.Table.getIndex(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.getIndex(String)
org.apache.openjpa.jdbc.schema.Table.getRelationIdColumns()
org.apache.openjpa.jdbc.schema.Table.getSourceFile()
org.apache.openjpa.jdbc.schema.Table.getUnique(DBIdentifier)
org.apache.openjpa.jdbc.schema.Table.getUnique(String)
org.apache.openjpa.jdbc.schema.Table.importColumn(Column)
org.apache.openjpa.jdbc.schema.Table.importForeignKey(ForeignKey)
org.apache.openjpa.jdbc.schema.Table.importIndex(Index)
org.apache.openjpa.jdbc.schema.Table.importPrimaryKey(PrimaryKey)
org.apache.openjpa.jdbc.schema.Table.importUnique(Unique)
org.apache.openjpa.jdbc.schema.Table.removeColumn(Column)
org.apache.openjpa.jdbc.schema.Table.removeForeignKey(ForeignKey)
org.apache.openjpa.jdbc.schema.Table.removeIndex(Index)
org.apache.openjpa.jdbc.schema.Table.removePrimaryKey()
org.apache.openjpa.jdbc.schema.Table.removeUnique(Unique)
org.apache.openjpa.jdbc.schema.TableSchemaFactory.getSchemaColumn()
org.apache.openjpa.jdbc.schema.TableSchemaFactory.readSchema()
org.apache.openjpa.jdbc.schema.TableSchemaFactory.refreshTable()
org.apache.openjpa.jdbc.schema.TableSchemaFactory.setSchemaColumn(String)
org.apache.openjpa.jdbc.schema.TableSchemaFactory.writeSchemaColumn(String)
org.apache.openjpa.jdbc.schema.Table.Table(DBIdentifier,Schema)
org.apache.openjpa.jdbc.schema.Table.Table(String,Schema)
org.apache.openjpa.jdbc.schema.Unique.Unique(DBIdentifier,Table)
org.apache.openjpa.jdbc.schema.Unique.Unique(String,Table)
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveForeignKeys()
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveIndexes()
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolvePrimaryKeys()
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveUniques()
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startSequence(Attributes)
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startTable(Attributes)
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.getObjects()
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeSchema(String,Collection<?>)
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeSchema(String,Collection)
org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.getFullName(Index)
org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.setNull(PreparedStatement,int,int,Column)
org.apache.openjpa.jdbc.sql.AccessDictionary.AccessDictionary()
org.apache.openjpa.jdbc.sql.AccessDictionary.setLong(PreparedStatement,int,long,Column)
org.apache.openjpa.jdbc.sql.DB2Dictionary.createIndexIfNecessary(Schema,DBIdentifier,Column)
org.apache.openjpa.jdbc.sql.DB2Dictionary.createIndexIfNecessary(Schema,String,Column)
org.apache.openjpa.jdbc.sql.DB2Dictionary.DB2Dictionary()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getCreateSequenceSQL(Sequence)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getForUpdateClause(JDBCFetchConfiguration,boolean,Select)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getSequencesSQL(DBIdentifier,DBIdentifier)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getSequencesSQL(String,String)
org.apache.openjpa.jdbc.sql.DB2Dictionary.matchErrorState(int,Set<String>,String,SQLException)
org.apache.openjpa.jdbc.sql.DB2Dictionary.setBytes(PreparedStatement,int,byte[],Column)
org.apache.openjpa.jdbc.sql.DBDictionary.addCharsToEnd(String,String,boolean,String)
org.apache.openjpa.jdbc.sql.DBDictionary.addDelimiters(String)
org.apache.openjpa.jdbc.sql.DBDictionary.appendUpdates(Select,JDBCStore,SQLBuffer,Object[],Map,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.checkNameLength(String,int,String)
org.apache.openjpa.jdbc.sql.DBDictionary.combineNames(String)
org.apache.openjpa.jdbc.sql.DBDictionary.comment(StringBuilder,String)
org.apache.openjpa.jdbc.sql.DBDictionary.configureNamingRules()
org.apache.openjpa.jdbc.sql.DBDictionary.configureNamingUtil(DatabaseMetaData)
org.apache.openjpa.jdbc.sql.DBDictionary.connectedConfiguration(Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.convertQuotes(String)
org.apache.openjpa.jdbc.sql.DBDictionary.convertSchemaCase(String)
org.apache.openjpa.jdbc.sql.DBDictionary.delimitArray(String[],DBIdentifiers)
org.apache.openjpa.jdbc.sql.DBDictionary.delimitString(String,DBIdentifiers)
org.apache.openjpa.jdbc.sql.DBDictionary.getBatchFetchSize(int)
org.apache.openjpa.jdbc.sql.DBDictionary.getCatalogNameForMetadata(DBIdentifier)
org.apache.openjpa.jdbc.sql.DBDictionary.getCatalogNameForMetadata(String)
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnDBName(Column)
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnIdentifier(Column)
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnNameForMetadata(DBIdentifier)
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnNameForMetadata(String)
org.apache.openjpa.jdbc.sql.DBDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getCreateIndexSQL(Index)
org.apache.openjpa.jdbc.sql.DBDictionary.getDeclareColumnSQL(Column,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getDefaultSchemaName()
org.apache.openjpa.jdbc.sql.DBDictionary.getDeleteTableContentsSQL(Table[],Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getDeleteTargets(Select)
org.apache.openjpa.jdbc.sql.DBDictionary.getDelimiter()
org.apache.openjpa.jdbc.sql.DBDictionary.getDelimitIdentifiers()
org.apache.openjpa.jdbc.sql.DBDictionary.getDropForeignKeySQL(ForeignKey,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getDropPrimaryKeySQL(PrimaryKey)
org.apache.openjpa.jdbc.sql.DBDictionary.getForeignKeyConstraintSQL(ForeignKey)
org.apache.openjpa.jdbc.sql.DBDictionary.getFullIdentifier(Table,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getFullName(Sequence)
org.apache.openjpa.jdbc.sql.DBDictionary.getFullName(Table,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getGeneratedKey(Column,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getGeneratedKeySequenceName(Column)
org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,String,String,String,Connection,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getIndexInfo(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,boolean,boolean,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getIndexInfo(DatabaseMetaData,String,String,String,boolean,boolean,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getLog()
org.apache.openjpa.jdbc.sql.DBDictionary.getNamingUtil()
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeyConstraintSQL(PrimaryKey)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeys(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromBestRowIdentifier(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromBestRowIdentifier(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromGetPrimaryKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromGetPrimaryKeys(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getSchemaNameForMetadata(DBIdentifier)
org.apache.openjpa.jdbc.sql.DBDictionary.getSchemaNameForMetadata(String)
org.apache.openjpa.jdbc.sql.DBDictionary.getSelects(Select,boolean,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getSequences(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getSequences(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getSupportsDelimitedIds()
org.apache.openjpa.jdbc.sql.DBDictionary.getTableNameForMetadata(DBIdentifier)
org.apache.openjpa.jdbc.sql.DBDictionary.getTableNameForMetadata(String)
org.apache.openjpa.jdbc.sql.DBDictionary.getTables(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getTables(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.DBDictionary.getTypeName(Column)
org.apache.openjpa.jdbc.sql.DBDictionary.getUniqueConstraintSQL(Unique)
org.apache.openjpa.jdbc.sql.DBDictionary.getUnsupportedDelimitedIds()
org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(DBIdentifier,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(DBIdentifier,Table,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(String,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(String,Table,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidForeignKeyName(DBIdentifier,Table,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidForeignKeyName(String,Table,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidIndexName(DBIdentifier,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidIndexName(String,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidSequenceName(DBIdentifier,Schema)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidSequenceName(String,Schema)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidTableName(DBIdentifier,Schema)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidTableName(String,Schema)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidUniqueName(DBIdentifier,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getValidUniqueName(String,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getVersionColumn(Column,DBIdentifier)
org.apache.openjpa.jdbc.sql.DBDictionary.getVersionColumn(Column,String)
org.apache.openjpa.jdbc.sql.DBDictionary.insertBlobForStreamingLoad(Row,Column,JDBCStore,Object,Select)
org.apache.openjpa.jdbc.sql.DBDictionary.isDelimitIds()
org.apache.openjpa.jdbc.sql.DBDictionary.isSystemIndex(DBIdentifier,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.isSystemIndex(String,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.isSystemSequence(String,String,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.isSystemTable(DBIdentifier,DBIdentifier,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.isSystemTable(String,String,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(DBIdentifier,NameSet,int,int)
org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(DBIdentifier,NameSet,int,int,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(String,NameSet,int,int)
org.apache.openjpa.jdbc.sql.DBDictionary.needsToCreateIndex(Index,Table)
org.apache.openjpa.jdbc.sql.DBDictionary.newColumn(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.newForeignKey(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.newIndex(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.newPrimaryKey(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.newSequence(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.newTable(ResultSet)
org.apache.openjpa.jdbc.sql.DBDictionary.refSchemaComponents(Table)
org.apache.openjpa.jdbc.sql.DBDictionary.removeEndingChars(String,int,boolean,String)
org.apache.openjpa.jdbc.sql.DBDictionary.setDefaultSchemaName(String)
org.apache.openjpa.jdbc.sql.DBDictionary.setDelimitedCase(DatabaseMetaData)
org.apache.openjpa.jdbc.sql.DBDictionary.setDelimitIdentifiers(boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.setDelimitIds(boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.setLeadingDelimiter(String)
org.apache.openjpa.jdbc.sql.DBDictionary.setSupportsDelimitedIdentifiers(DatabaseMetaData)
org.apache.openjpa.jdbc.sql.DBDictionary.setSupportsDelimitedIds(DatabaseMetaData)
org.apache.openjpa.jdbc.sql.DBDictionary.setTrailingDelimiter(String)
org.apache.openjpa.jdbc.sql.DBDictionary.setXMLTypeEncoding(String)
org.apache.openjpa.jdbc.sql.DBDictionary.stripDelimiters(String)
org.apache.openjpa.jdbc.sql.DBDictionary.stripVowel(StringBuilder)
org.apache.openjpa.jdbc.sql.DBDictionary.supportsDelimitedId(DBIdentifiers)
org.apache.openjpa.jdbc.sql.DerbyDictionary.DerbyDictionary()
org.apache.openjpa.jdbc.sql.EmpressDictionary.getDropColumnSQL(Column)
org.apache.openjpa.jdbc.sql.EmpressDictionary.setFloat(PreparedStatement,int,float,Column)
org.apache.openjpa.jdbc.sql.FoxProDictionary.appendSize(Column,String)
org.apache.openjpa.jdbc.sql.FoxProDictionary.FoxProDictionary()
org.apache.openjpa.jdbc.sql.FoxProDictionary.getString(ResultSet,int)
org.apache.openjpa.jdbc.sql.H2Dictionary.appendSelectRange(SQLBuffer,long,long,boolean)
org.apache.openjpa.jdbc.sql.H2Dictionary.getAddColumnSQL(Column)
org.apache.openjpa.jdbc.sql.H2Dictionary.getAddPrimaryKeySQL(PrimaryKey)
org.apache.openjpa.jdbc.sql.H2Dictionary.getCreateTableSQL(Table)
org.apache.openjpa.jdbc.sql.H2Dictionary.getJDBCType(int,boolean)
org.apache.openjpa.jdbc.sql.H2Dictionary.getPreferredType(int)
org.apache.openjpa.jdbc.sql.H2Dictionary.H2Dictionary()
org.apache.openjpa.jdbc.sql.H2Dictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)
org.apache.openjpa.jdbc.sql.HSQLDictionary.getPlaceholderValueString(Column)
org.apache.openjpa.jdbc.sql.HSQLDictionary.HSQLDictionary()
org.apache.openjpa.jdbc.sql.HSQLDictionary.newStoreException(String,SQLException[],Object)
org.apache.openjpa.jdbc.sql.HSQLDictionary.setBigDecimal(PreparedStatement,int,BigDecimal,Column)
org.apache.openjpa.jdbc.sql.HSQLDictionary.setDouble(PreparedStatement,int,double,Column)
org.apache.openjpa.jdbc.sql.HSQLDictionary.toOperation(String,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,long,long,String)
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.assertTableEquals(DBIdentifier[],String,String)
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testColumnOps()
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testDBIdentifierOps()
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testPathOps()
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testSchemaOps()
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testTableOps()
org.apache.openjpa.jdbc.sql.InformixDictionary.decorate(Connection)
org.apache.openjpa.jdbc.sql.InformixDictionary.getAddForeignKeySQL(ForeignKey)
org.apache.openjpa.jdbc.sql.InformixDictionary.InformixDictionary()
org.apache.openjpa.jdbc.sql.InformixDictionary.setBoolean(PreparedStatement,int,boolean,Column)
org.apache.openjpa.jdbc.sql.InformixDictionary.supportsRandomAccessResultSet(Select,boolean)
org.apache.openjpa.jdbc.sql.IngresDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)
org.apache.openjpa.jdbc.sql.InterbaseDictionary.InterbaseDictionary()
org.apache.openjpa.jdbc.sql.JDataStoreDictionary.JDataStoreDictionary()
org.apache.openjpa.jdbc.sql.MySQLDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)
org.apache.openjpa.jdbc.sql.MySQLDictionary.appendXmlValue(SQLBuffer,FilterValue)
org.apache.openjpa.jdbc.sql.MySQLDictionary.getBlobObject(ResultSet,int,JDBCStore)
org.apache.openjpa.jdbc.sql.MySQLDictionary.getDropIndexSQL(Index)
org.apache.openjpa.jdbc.sql.MySQLDictionary.getMajorMinorVersions(String)
org.apache.openjpa.jdbc.sql.MySQLDictionary.MySQLDictionary()
org.apache.openjpa.jdbc.sql.OracleDictionary.canOuterJoin(int,ForeignKey)
org.apache.openjpa.jdbc.sql.OracleDictionary.ensureDriverVendor()
org.apache.openjpa.jdbc.sql.OracleDictionary.getClobString(ResultSet,int)
org.apache.openjpa.jdbc.sql.OracleDictionary.getJDBCType(int,boolean,int,int,boolean)
org.apache.openjpa.jdbc.sql.OracleDictionary.getObject(ResultSet,int,Map)
org.apache.openjpa.jdbc.sql.OracleDictionary.getOpenJPA3GeneratedKeySequenceName(Column)
org.apache.openjpa.jdbc.sql.OracleDictionary.getOpenJPA3GeneratedKeyTriggerName(Column)
org.apache.openjpa.jdbc.sql.OracleDictionary.getTimestamp(ResultSet,int,Calendar)
org.apache.openjpa.jdbc.sql.OracleDictionary.OracleDictionary()
org.apache.openjpa.jdbc.sql.OracleDictionary.putBytes(Blob,byte[])
org.apache.openjpa.jdbc.sql.OracleDictionary.putChars(Clob,char[])
org.apache.openjpa.jdbc.sql.OracleDictionary.putString(Clob,String)
org.apache.openjpa.jdbc.sql.OracleDictionary.setString(PreparedStatement,int,String,Column)
org.apache.openjpa.jdbc.sql.OracleDictionary.supportsLocking(Select)
org.apache.openjpa.jdbc.sql.OracleDictionary.toNativeJoin(Join)
org.apache.openjpa.jdbc.sql.OracleDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,boolean,Select)
org.apache.openjpa.jdbc.sql.OracleDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,Select)
org.apache.openjpa.jdbc.sql.PostgresDictionary.getByte(ResultSet,int)
org.apache.openjpa.jdbc.sql.PostgresDictionary.getDate(ResultSet,int)
org.apache.openjpa.jdbc.sql.PostgresDictionary.getInt(ResultSet,int)
org.apache.openjpa.jdbc.sql.PostgresDictionary.getLong(ResultSet,int)
org.apache.openjpa.jdbc.sql.PostgresDictionary.getShort(ResultSet,int)
org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresDictionary()
org.apache.openjpa.jdbc.sql.PostgresDictionary.supportsDeferredUniqueConstraints()
org.apache.openjpa.jdbc.sql.PrimaryRow.setObject(Column,Object,int,boolean)
org.apache.openjpa.jdbc.sql.ResultSetResult.findObject(Object,Joins)
org.apache.openjpa.jdbc.sql.RowImpl.appendWhere(StringBuilder,DBDictionary)
org.apache.openjpa.jdbc.sql.RowImpl.getInsertSQL(DBDictionary)
org.apache.openjpa.jdbc.sql.RowImpl.getUpdateSQL(DBDictionary)
org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column,Object)
org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column,PathJoins)
org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(String,Table)
org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(String,Table,PathJoins)
org.apache.openjpa.jdbc.sql.SelectImpl.getTableAlias(Table,PathJoins)
org.apache.openjpa.jdbc.sql.SelectImpl.getTableIndex(Table,PathJoins,boolean)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Column)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(DBIdentifier)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Sequence)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(SQLBuffer,int,int,boolean)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Table)
org.apache.openjpa.jdbc.sql.SybaseDictionary.setBigInteger(PreparedStatement,int,BigInteger,Column)
org.apache.openjpa.jdbc.sql.SybaseDictionary.SybaseDictionary()
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.IdConfigurationTestImpl()
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getSchemaCase()
org.apache.openjpa.lib.identifier.IdentifierImpl.IdentifierImpl()
org.apache.openjpa.lib.identifier.IdentifierImpl.IdentifierImpl(String)
org.apache.openjpa.lib.identifier.IdentifierRule.getAllowCompaction()
org.apache.openjpa.lib.identifier.IdentifierRule.getCanDelimit()
org.apache.openjpa.lib.identifier.IdentifierRule.getDelimitReservedWords()
org.apache.openjpa.lib.identifier.IdentifierRule.getMaxLength()
org.apache.openjpa.lib.identifier.IdentifierRule.getMustDelimit()
org.apache.openjpa.lib.identifier.IdentifierRule.getReservedWords()
org.apache.openjpa.lib.identifier.IdentifierRule.getSpecialCharacters()
org.apache.openjpa.lib.identifier.IdentifierRule.isAllowTruncation()
org.apache.openjpa.lib.identifier.IdentifierRule.isMustBeginWithLetter()
org.apache.openjpa.lib.identifier.IdentifierRule.isNullable()
org.apache.openjpa.lib.identifier.IdentifierRule.isOnlyLettersDigitsUnderscores()
org.apache.openjpa.lib.identifier.IdentifierRule.isReservedWord(String)
org.apache.openjpa.lib.identifier.IdentifierRule.requiresDelimiters(String)
org.apache.openjpa.lib.identifier.IdentifierRule.setAllowCompaction(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setAllowTruncation(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setCanDelimit(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setDelimitReservedWords(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setMaxLength(int)
org.apache.openjpa.lib.identifier.IdentifierRule.setMustBeginWithLetter(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setMustDelimit(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setNullable(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setOnlyLettersDigitsUnderscores(boolean)
org.apache.openjpa.lib.identifier.IdentifierRule.setReservedWords(Set<String>,String)
org.apache.openjpa.lib.identifier.IdentifierRule.setSpecialCharacters(String)
org.apache.openjpa.lib.identifier.IdentifierUtil.appendNames(IdentifierRule,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.canSplit(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.canSplit(String,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(String,String[],String[])
org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(IdentifierRule,String,boolean)
org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(String,String,boolean)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.appendNames(String,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.canSplit(IdentifierRule,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineFull(IdentifierConfiguration,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,IdentifierRule,IdentifierRule[],String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,IdentifierRule,String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,IdentifierRule,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,String,String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierRule,IdentifierRule[],String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierRule,String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierRule,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(String,String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(String,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.convertFull(IdentifierConfiguration,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.convert(IdentifierConfiguration,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierConfiguration,IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierConfiguration,IdentifierRule,String,boolean)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.getIdentifierConfiguration()
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.getNamingRules(String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.getNamingRule(String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.IdentifierUtilImpl()
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.IdentifierUtilImpl(IdentifierConfiguration)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isDelimited(IdentifierConfiguration,IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isDoubleQuoted(String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isReservedWord(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(IdentifierConfiguration,IdentifierRule,String[],String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(String[],String[])
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.needsConversion(IdentifierConfiguration)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierConfiguration,IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierConfiguration,IdentifierRule,String,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierRule,String,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.requiresDelimiters(IdentifierConfiguration,IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.requiresDelimiters(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitNameCharDelimiters(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierConfiguration,IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierConfiguration,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(String,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.isDelimited(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.isDelimited(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.isReservedWord(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(IdentifierRule,String[])
org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(IdentifierRule[],String[])
org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(IdentifierRule,String[],String)
org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(String,String[])
org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(String,String[],String)
org.apache.openjpa.lib.identifier.IdentifierUtil.removeDelimiters(IdentifierConfiguration,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.removeDelimiters(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.removeDelimiters(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.removeHungarianNotation(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.removeHungarianNotation(String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.requiresDelimiters(IdentifierRule,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.setIdentifierConfiguration(IdentifierConfiguration)
org.apache.openjpa.lib.identifier.IdentifierUtil.splitName(IdentifierRule,String,String)
org.apache.openjpa.lib.identifier.IdentifierUtil.truncateName(IdentifierRule,String,int)
org.apache.openjpa.lib.identifier.IdentifierUtil.truncateName(String,String,int)
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.NewIdConfigurationTestImpl()
org.apache.openjpa.lib.identifier.TestIdentifiers.testIdentifierConversion()
org.apache.openjpa.meta.SequenceMetaData.addStandardProperties(StringBuffer)
org.apache.openjpa.meta.SequenceMetaData.wrapValue(String)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodComparator.compare(Method,Method)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.normalizeCatalogName(String)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.normalizeSchemaName(String)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.normalizeSequenceName(String)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseSequenceGenerator(AnnotatedElement,SequenceGenerator)
org.apache.openjpa.persistence.delimited.identifiers.Animal2.Animal2()
org.apache.openjpa.persistence.delimited.identifiers.Animal2.Animal2(int)
org.apache.openjpa.persistence.delimited.identifiers.Animal2.setType(String)
org.apache.openjpa.persistence.delimited.identifiers.Animal.Animal()
org.apache.openjpa.persistence.delimited.identifiers.Animal.getAge()
org.apache.openjpa.persistence.delimited.identifiers.Animal.setAge(int)
org.apache.openjpa.persistence.delimited.identifiers.Cat2.Cat2()
org.apache.openjpa.persistence.delimited.identifiers.Cat2.Cat2(int)
org.apache.openjpa.persistence.delimited.identifiers.Dog2.Dog2()
org.apache.openjpa.persistence.delimited.identifiers.Dog2.Dog2(int)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.addCollectionMap(String,String)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.addCollectionSet(String)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.addDelimCollectionMap(String,String)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.EntityF(String)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getCollectionMap()
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getCollectionSet()
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getDelimCollectionMap()
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setCollectionMap(Map<String,String>,String,String)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setCollectionSet(Set<String>,String)
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setDelimCollectionMap(Map<String,String>,String,String)
org.apache.openjpa.persistence.delimited.identifiers.EntityH.EntityH()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.addEntityD(EntityD)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.addMap2Values(EntityD4,EntityD3)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.addMapValues(EntityD3,EntityD4)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.EntityC()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.EntityC(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getEntityD2()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getEntityDs()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setEntityD2(EntityD2)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setEntityDs(Collection<EntityD>,EntityD)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setMap2(Map<EntityD4,EntityD3>,EntityD4,EntityD3)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setMap(Map<EntityD3,EntityD4>,EntityD3,EntityD4)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.EntityD2()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.EntityD2(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.getEntityD3()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.setEntityD3(EntityD3)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.EntityD3()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.EntityD3(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.EntityD4()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.EntityD4(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.addEntityC(EntityC)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.EntityD()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.EntityD(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.getEntityCs()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.setEntityCs(Collection<EntityC>,EntityC)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityE.EntityE(String)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.addCollectionDelimSet(String)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getCollectionDelimSet()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getNonDelimName()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setCollectionDelimSet(Set<String>,String)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setNonDelimName(String)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.EntityG()
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.EntityG(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.EntityG(int,String)
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.createEntityF()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.queryCollection()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.queryOnColumnValue()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.queryOnEntityOnly()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimIdSeqGen.createEntityE()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimIdSeqGen.testSeqGen()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.setUp()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.testCreateF()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.testCreateF2()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimInheritance.createCat(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimInheritance.createDog(int)
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimInheritance.queryCat()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimInheritance.queryDog()
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.createCandD(int)
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.createEMF(Object)
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.resultSetQuery()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.Car2()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.Car2(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.Car()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.Car(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getColor()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getId()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getModel()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getModelYear()
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setColor(String)
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setId(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setModel(String)
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setModelYear(String)
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet2.Chevrolet2()
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet2.Chevrolet2(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet.Chevrolet()
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet.Chevrolet(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.addDelimMap(String,String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.addDelimSet(String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.EntityA()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.EntityA(int,String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getDelimMap()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getDelimSet()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getSecName()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setDelimMap(Map<String,String>,String,String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setDelimSet(Set<String>,String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityB.EntityB(String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.addEntityI(EntityI)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.addMap2Values(EntityI4,EntityI3)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.addMapValues(EntityI3,EntityI4)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.EntityH(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getEntityI2()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getEntityIs()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getMap()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getMap2()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setEntityI2(EntityI2)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setEntityIs(Collection<EntityI>,EntityI)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setMap2(Map<EntityI4,EntityI3>,EntityI4,EntityI3)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setMap(Map<EntityI3,EntityI4>,EntityI3,EntityI4)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setSecName(String)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.EntityI2()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.EntityI2(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.getEntityI3()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.setEntityI3(EntityI3)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.EntityI3()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.EntityI3(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.EntityI4()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.EntityI4(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.addEntityH(EntityH)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.EntityI()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.EntityI(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.getEntityHs()
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.setEntityHs(Collection<EntityH>,EntityH)
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac2.Pontiac2()
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac2.Pontiac2(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac.Pontiac()
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac.Pontiac(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.createChevrolet(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.createPontiac(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.getPersistenceUnitName()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.runQueries()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.testCreate()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdSeqGen.createEntityB()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.queryChevrolet()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.queryPontiac()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.createEntityA(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.testTableName()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.createHandI(int)
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.queryJoinColumn()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.queryJoinTable()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.queryMapValue()
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.querySecondaryTableValue()
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.addUniqueConstraints(String,MetaDataContext,MappingInfo,UniqueConstraint)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.createUniqueConstraint(MetaDataContext,UniqueConstraint)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.delimit()
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementColumn,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementJoinColumn,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(javax.persistence.Column,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(javax.persistence.Column,DBDictionary)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(JoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(KeyColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(KeyColumn,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(KeyJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(KeyJoinColumn,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(MapKeyJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(PrimaryKeyJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(VersionColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(VersionColumn,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(XJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(XJoinColumn,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseClassMappingAnnotations(ClassMetaData)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseCollectionTable(FieldMapping,CollectionTable)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseColumns(FieldMapping,javax.persistence.Column)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseContainerTable(FieldMapping,ContainerTable)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseDataStoreIdColumn(ClassMapping,DataStoreIdColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseDiscriminatorColumn(ClassMapping,DiscriminatorColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseElementColumns(FieldMapping,ElementColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseElementJoinColumns(FieldMapping,ElementJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseEmbeddedMapping(FieldMapping,EmbeddedMapping)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseEmbeddedMapping(ValueMapping,DBIdentifier,DBIdentifier,XMappingOverride[])
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseEmbeddedMapping(ValueMapping,String,String,XMappingOverride[])
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseForeignKey(MappingInfo,String,boolean,boolean,ForeignKeyAction,ForeignKeyAction)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseIndex(MappingInfo,String,boolean,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJavaxOrderColumn(FieldMapping,javax.persistence.OrderColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinColumns(FieldMapping,MappingInfo,boolean,JoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinTable(FieldMapping,JoinTable)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseKeyColumns(FieldMapping,KeyColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseKeyJoinColumns(FieldMapping,KeyJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMapKeyColumn(FieldMapping,MapKeyColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMemberMappingAnnotations(FieldMetaData)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseOrderColumn(FieldMapping,OrderColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseSecondaryTables(ClassMapping,SecondaryTable)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseSQLResultSetMappings(ClassMapping,SqlResultSetMapping)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTable(ClassMapping,Table)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTableGenerator(AnnotatedElement,TableGenerator)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseUnique(FieldMapping,org.apache.openjpa.persistence.jdbc.Unique)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseVersionColumns(ClassMapping,VersionColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseXJoinColumns(FieldMapping,MappingInfo,boolean,XJoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.populateNullIndicator(DBIdentifier,ValueMappingInfo)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.populateNullIndicator(String,ValueMappingInfo)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setupColumn(Column,javax.persistence.Column,boolean)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setupColumn(Column,javax.persistence.Column,DBDictionary)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setupMapKeyColumn(FieldMapping,Column,MapKeyColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.toTableIdentifier(String,String)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.toTableName(String,String,DBDictionary.DBIdentifiers,DBDictionary.DBIdentifiers)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.trackSecondaryTable(FieldMapping,DBIdentifier,DBIdentifier,int)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.trackSecondaryTable(FieldMapping,String,String,int)
org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getTable(ClassMapping)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.applyDeferredEmbeddableOverrides(Class<?>)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.deferEmbeddableOverrides(Class<?>,DeferredEmbeddableOverrides)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.deferEmbeddableOverrides(Class,DeferredEmbeddableOverrides)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.DeferredEmbeddableOverrides.DeferredEmbeddableOverrides(FieldMapping,String)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endAttributeOverride()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endClassMapping(ClassMetaData)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endColumnName()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endFieldMapping(FieldMetaData)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endMapKeyTemporal()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endName()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endSecondaryTable()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endUniqueConstraint()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseCollectionTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseColumn(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseOrderColumn(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startCollectionTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startColumn(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startEntityResult(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startFieldResult(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startJoinColumn(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startJoinTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startMapKeyColumn(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startMapKeyJoinColumn(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSecondaryTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSQLResultSetMapping(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startTableGenerator(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startUniqueConstraint(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.toTableName(String,String)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.XMLPersistenceMappingParser(JDBCConfiguration)
org.apache.openjpa.persistence.simple.Item.getItemData()
org.apache.openjpa.persistence.simple.Item.getItemId()
org.apache.openjpa.persistence.simple.Item.getItemName()
org.apache.openjpa.persistence.simple.Item.getItemPrice()
org.apache.openjpa.persistence.simple.Item.setItemData(String)
org.apache.openjpa.persistence.simple.Item.setItemId(int)
org.apache.openjpa.persistence.simple.Item.setItemName(String)
org.apache.openjpa.persistence.test.SingleEMFTestCase.setSupportedDatabases(Class<?>)
org.apache.openjpa.persistence.test.SingleEMFTestCase.setUnsupportedDatabases(Class<?>)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getParseClass()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startDelimitedIdentifiers()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startSequenceGenerator(Attributes)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startSystemElement(String,Attributes)
