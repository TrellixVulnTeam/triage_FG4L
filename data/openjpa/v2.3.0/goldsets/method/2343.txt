org.apache.openjpa.jdbc.meta.FieldMapping.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.checkVersion(OpenJPAStateManager,JDBCStore,boolean)
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.populateFromResult(Result)
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.populateFromResult(Result,Joins)
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.select(Select,ClassMapping)
org.apache.openjpa.jdbc.meta.Version.afterLoad(OpenJPAStateManager,JDBCStore)
org.apache.openjpa.jdbc.meta.Version.load(OpenJPAStateManager,JDBCStore,Result)
org.apache.openjpa.jdbc.meta.Version.load(OpenJPAStateManager,JDBCStore,Result,Joins)
org.apache.openjpa.persistence.jpql.version.Author.getId()
org.apache.openjpa.persistence.jpql.version.Author.getVersion()
org.apache.openjpa.persistence.jpql.version.Author.setId(int)
org.apache.openjpa.persistence.jpql.version.Author.setVersion(int)
org.apache.openjpa.persistence.jpql.version.Document.getAuthor()
org.apache.openjpa.persistence.jpql.version.Document.setAuthor(Author)
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.createTestData()
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.setUp()
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.testGetDocuments()
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.testGetDocumentsByExplicitAttributeSelection()
