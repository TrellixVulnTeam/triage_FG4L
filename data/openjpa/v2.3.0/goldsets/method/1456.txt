org.apache.openjpa.conf.OpenJPAVersion.appendOpenJPABanner(StringBuffer)
org.apache.openjpa.conf.OpenJPAVersion.appendOpenJPABanner(StringBuilder)
org.apache.openjpa.conf.OpenJPAVersion.appendProperty(String,StringBuffer)
org.apache.openjpa.conf.OpenJPAVersion.appendProperty(String,StringBuilder)
org.apache.openjpa.conf.OpenJPAVersion.main(String[])
org.apache.openjpa.enhance.ApplicationIdTool.getToStringByteArrayCode()
org.apache.openjpa.enhance.PCEnhancer.processViolations()
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getLiteralRawString(Value)
org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.replaceEscape(String,String,String,String)
org.apache.openjpa.jdbc.kernel.exps.PCPath.getPCPathString()
org.apache.openjpa.jdbc.kernel.exps.PCPath.getXPath()
org.apache.openjpa.jdbc.kernel.exps.PCPath.isXPath()
org.apache.openjpa.jdbc.kernel.exps.TypeLit.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.exps.TypeLit.getDiscriminator(LitExpState)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleConcatVal(Object,Object,Object[],OpenJPAStateManager)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleSubstringVal(Object,Object,Object[],OpenJPAStateManager)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.substituteParams(String,List<Integer>,Integer)
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getClassName(Table)
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getFieldName(String,ClassMapping)
org.apache.openjpa.jdbc.meta.ReverseMappingTool.replaceInvalidCharacters(String)
org.apache.openjpa.jdbc.meta.SequenceMapping.addStandardProperties(StringBuffer)
org.apache.openjpa.jdbc.meta.SequenceMapping.addStandardProperties(StringBuilder)
org.apache.openjpa.jdbc.meta.SequenceMapping.newPluginValue(String)
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSQL()
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.schema.Column.getDescription()
org.apache.openjpa.jdbc.sql.DB2Dictionary.appendExtendedExceptionMsg(String,SQLException)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getCreateSequenceSQL(Sequence)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getForUpdateClause(JDBCFetchConfiguration,boolean,Select)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getOptimizeClause(Select)
org.apache.openjpa.jdbc.sql.DB2Dictionary.getSequencesSQL(String,String)
org.apache.openjpa.jdbc.sql.DBDictionary.appendSize(Column,String)
org.apache.openjpa.jdbc.sql.DBDictionary.comment(StringBuffer,String)
org.apache.openjpa.jdbc.sql.DBDictionary.comment(StringBuilder,String)
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.toString(DatabaseMetaData)
org.apache.openjpa.jdbc.sql.DBDictionary.getBatchFetchSize(int)
org.apache.openjpa.jdbc.sql.DBDictionary.getCreateIndexSQL(Index)
org.apache.openjpa.jdbc.sql.DBDictionary.getCreateTableSQL(Table)
org.apache.openjpa.jdbc.sql.DBDictionary.getDeclareColumnSQL(Column,boolean)
org.apache.openjpa.jdbc.sql.DBDictionary.getForeignKeyConstraintSQL(ForeignKey)
org.apache.openjpa.jdbc.sql.DBDictionary.getGeneratedKeySequenceName(Column)
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeyConstraintSQL(PrimaryKey)
org.apache.openjpa.jdbc.sql.DBDictionary.getUniqueConstraintSQL(Unique)
org.apache.openjpa.jdbc.sql.DBDictionary.shorten(String,int)
org.apache.openjpa.jdbc.sql.DBDictionary.stripVowel(StringBuffer)
org.apache.openjpa.jdbc.sql.DBDictionary.stripVowel(StringBuilder)
org.apache.openjpa.jdbc.sql.H2Dictionary.getAddColumnSQL(Column)
org.apache.openjpa.jdbc.sql.H2Dictionary.isSystemIndex(String,Table)
org.apache.openjpa.jdbc.sql.JoinSet.hashCode()
org.apache.openjpa.jdbc.sql.JoinSet.toString()
org.apache.openjpa.jdbc.sql.MySQLDictionary.getDeleteTableContentsSQL(Table[],Connection)
org.apache.openjpa.jdbc.sql.OracleDictionary.getImportedKeys(DatabaseMetaData,String,String,String,Connection,boolean)
org.apache.openjpa.jdbc.sql.OracleDictionary.getIndexInfo(DatabaseMetaData,String,String,String,boolean,boolean,Connection)
org.apache.openjpa.jdbc.sql.OracleDictionary.getPrimaryKeys(DatabaseMetaData,String,String,String,Connection)
org.apache.openjpa.jdbc.sql.RowImpl.appendWhere(StringBuffer,DBDictionary)
org.apache.openjpa.jdbc.sql.RowImpl.appendWhere(StringBuilder,DBDictionary)
org.apache.openjpa.jdbc.sql.RowImpl.getDeleteSQL(DBDictionary)
org.apache.openjpa.jdbc.sql.RowImpl.getInsertSQL(DBDictionary)
org.apache.openjpa.jdbc.sql.RowImpl.getUpdateSQL(DBDictionary)
org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column,Object)
org.apache.openjpa.jdbc.sql.SelectImpl.isDirty()
org.apache.openjpa.jdbc.sql.SelectImpl.path()
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.append(String)
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.clone(SelectImpl)
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.newJoins()
org.apache.openjpa.kernel.AbstractBrokerFactory.makeReadOnly()
org.apache.openjpa.kernel.exps.Concat.eval(Object,Object,StoreContext,Object[])
org.apache.openjpa.kernel.FetchConfigurationImpl.getPathString()
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assemble(JPQLNode,String,int)
org.apache.openjpa.lib.conf.ConfigurationImpl.toXMLName(String)
org.apache.openjpa.lib.conf.Configurations.parseProperties(String)
org.apache.openjpa.lib.conf.Configurations.serializeProperties(Map)
org.apache.openjpa.lib.conf.PluginListValue.getString()
org.apache.openjpa.lib.conf.PluginListValue.setString(String)
org.apache.openjpa.lib.conf.ProductDerivations.derivationErrorsToString()
org.apache.openjpa.lib.conf.ProductDerivations.getFullyQualifiedAnchorsInPropertiesLocation(String)
org.apache.openjpa.lib.conf.ProductDerivations.load(ClassLoader,boolean)
org.apache.openjpa.lib.conf.ProductDerivations.load(File,String,ClassLoader)
org.apache.openjpa.lib.conf.ProductDerivations.load(String,String,ClassLoader)
org.apache.openjpa.lib.conf.ProductDerivations.reportErrors(StringBuffer,String,Throwable)
org.apache.openjpa.lib.conf.ProductDerivations.reportErrors(StringBuilder,String,Throwable)
org.apache.openjpa.lib.conf.StringListValue.unalias(String)
org.apache.openjpa.lib.jdbc.DataSourceLogs.log(String,Connection,Log,long)
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.equals(Object)
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.appendInfo(StringBuffer)
org.apache.openjpa.lib.jdbc.SQLFormatter.prettyPrintLine(Object)
org.apache.openjpa.lib.jdbc.SQLFormatter.prettyPrint(Object)
org.apache.openjpa.lib.jdbc.SQLFormatter.wrapLine(String)
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.formatMessage(short,String,Throwable)
org.apache.openjpa.lib.meta.ClassArgParser.getFromJavaFile(File)
org.apache.openjpa.lib.meta.ClassArgParser.readAttributeValue(Reader)
org.apache.openjpa.lib.meta.ClassArgParser.readElementText(Reader)
org.apache.openjpa.lib.meta.SourceTrackers.getSourceLocationMessage(SourceTracker[])
org.apache.openjpa.lib.util.Base16Encoder.encode(byte[])
org.apache.openjpa.lib.util.CodeFormat.getEndl(int)
org.apache.openjpa.lib.util.CodeFormat.getParametrizedType(String[])
org.apache.openjpa.lib.util.CodeFormat.getTab(int)
org.apache.openjpa.lib.util.CodeFormat.setTabSpaces(int)
org.apache.openjpa.lib.util.FormatPreservingProperties.formatValue(String,StringBuffer,boolean)
org.apache.openjpa.lib.util.FormatPreservingProperties.formatValue(String,StringBuilder,boolean)
org.apache.openjpa.lib.util.FormatPreservingProperties.loadProperties(InputStream)
org.apache.openjpa.lib.util.FormatPreservingProperties.readEscape(String,int,StringBuffer)
org.apache.openjpa.lib.util.FormatPreservingProperties.readEscape(String,int,StringBuilder)
org.apache.openjpa.lib.util.FormatPreservingProperties.writeProperty(String,PrintWriter,boolean)
org.apache.openjpa.meta.FieldMetaData.getOrderDeclaration()
org.apache.openjpa.meta.MetaDataRepository.toModeString(int)
org.apache.openjpa.meta.SequenceMetaData.appendProperty(StringBuffer,String,int)
org.apache.openjpa.meta.SequenceMetaData.appendProperty(StringBuffer,String,String)
org.apache.openjpa.meta.SequenceMetaData.appendProperty(StringBuilder,String,int)
org.apache.openjpa.meta.SequenceMetaData.appendProperty(StringBuilder,String,String)
org.apache.openjpa.meta.SequenceMetaData.instantiate(ClassLoader)
org.apache.openjpa.persistence.meta.MetamodelImpl.toTypeName(java.lang.reflect.Type)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.toDetails(Element)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.validateStrategies(ClassMetaData)
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.toOpenJPAProperties(PersistenceUnitInfo)
org.apache.openjpa.persistence.query.ArrayExpression.asExpression(AliasContext)
org.apache.openjpa.persistence.query.JoinPath.asJoinable(AliasContext)
org.apache.openjpa.persistence.query.NewInstance.asProjection(AliasContext)
org.apache.openjpa.persistence.query.QueryDefinitionImpl.fillBuffer(String,StringBuffer,AliasContext,List,Visit)
org.apache.openjpa.persistence.query.QueryDefinitionImpl.fillBuffer(String,StringBuffer,AliasContext,Predicate)
org.apache.openjpa.persistence.query.QueryDefinitionImpl.fillBuffer(String,StringBuilder,AliasContext,List,Visit)
org.apache.openjpa.persistence.query.QueryDefinitionImpl.fillBuffer(String,StringBuilder,AliasContext,Predicate)
org.apache.openjpa.persistence.query.WhenClause.hasThen()
org.apache.openjpa.persistence.query.WhenClause.toJPQL(AliasContext)
org.apache.openjpa.persistence.util.SourceCode.Annotation.addArgument(String,String)
org.apache.openjpa.persistence.util.SourceCode.Annotation.addArgument(String,String[])
org.apache.openjpa.persistence.util.SourceCode.wrap(String,int)
org.apache.openjpa.util.Exceptions.toString(Collection)
org.apache.openjpa.util.Exceptions.toString(ExceptionInfo)
org.apache.openjpa.xmlstore.ObjectData.clone()
