org.apache.openjpa.persistence.meta.AbstractManagedType.$GenericMethodDeclaration$()
org.apache.openjpa.persistence.meta.AbstractManagedType.getCollection(String,Class<E>,E)
org.apache.openjpa.persistence.meta.AbstractManagedType.getSingularAttribute(String,Class<Y>,Y)
org.apache.openjpa.persistence.meta.AbstractManagedType.notFoundException(String,String,Class<?>)
org.apache.openjpa.persistence.meta.AbstractManagedType.notFoundException(String,String,Class<?>,Class<?>)
org.apache.openjpa.persistence.meta.AnnotationProcessor6.process(TypeElement)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDeclaredTypeName(TypeMirror)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDeclaredTypeName(TypeMirror,boolean)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getImplicitAccessType(TypeElement)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getPersistentSupertype(TypeElement)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getTargetEntityType(Element)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getTypeParameter(Element,TypeMirror,int,boolean)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getTypeParameter(TypeMirror,int)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isAnnotatedWith(Element,Set<String>,String)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.matchGetterAndSetter(Set<ExecutableElement>,ExecutableElement,Set<ExecutableElement>,ExecutableElement)
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.SourceAnnotationHandler(ProcessingEnvironment,CompileTimeLogger)
