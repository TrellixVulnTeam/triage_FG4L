org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getAlias()
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getSelectAs()
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.isVariable()
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.setAlias(String)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.calculateValue(Select,ExpContext,ExpState,Val,ExpState)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.CoalesceExpression(Val[])
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.CoalesceExpState.CoalesceExpState(Joins,ExpState[])
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getId()
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getMetaData()
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.groupBy(Select,ExpContext,ExpState)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.initialize(Select,ExpContext,int)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.length(Select,ExpContext,ExpState)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.load(ExpContext,ExpState,Result)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.newSQLBuffer(Select,ExpContext,ExpState)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.orderBy(Select,ExpContext,ExpState,boolean)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.selectColumns(Select,ExpContext,ExpState,boolean)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.select(Select,ExpContext,ExpState,boolean)
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.setMetaData(ClassMetaData)
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.GeneralCaseExpression(Exp[],Val)
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.GeneralCaseExpState.GeneralCaseExpState(Joins,ExpState[])
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getMapValue(Value,Value)
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.NullIfExpression(Val,Val)
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getCaseOperand()
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.SimpleCaseExpression(Val,Exp[],Val)
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.SimpleCaseExpState.SimpleCaseExpState(Joins,ExpState[])
org.apache.openjpa.jdbc.kernel.exps.Val.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.appendTo(Select,ExpContext,ExpState,SQLBuffer)
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.initialize(Select,ExpContext,Map)
org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary.AbstractDB2Dictionary()
org.apache.openjpa.jdbc.sql.DerbyDictionary.DerbyDictionary()
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(Column[],boolean,Joins,boolean)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(SQLBuffer,boolean,boolean)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(SQLBuffer,boolean,boolean,Value)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(SQLBuffer,boolean,Joins,boolean)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(SQLBuffer,boolean,Joins,boolean,Value)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(String,boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.clearOrdering()
org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column[],boolean,Joins,boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Object,boolean,Joins,boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Object,boolean,Joins,boolean,boolean,Value)
org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(SQLBuffer,boolean,Joins,boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(SQLBuffer,boolean,Joins,boolean,boolean,Value)
org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(String,boolean,Joins,boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases(boolean,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases.get(int)
org.apache.openjpa.kernel.exps.Coalesce.acceptVisit(ExpressionVisitor)
org.apache.openjpa.kernel.exps.Coalesce.Coalesce(Val[])
org.apache.openjpa.kernel.exps.Coalesce.compare(Object,Object)
org.apache.openjpa.kernel.exps.Coalesce.eval(Object,Object,StoreContext,Object[])
org.apache.openjpa.kernel.exps.Coalesce.eval(Object,StoreContext,Object[])
org.apache.openjpa.kernel.exps.Coalesce.getType()
org.apache.openjpa.kernel.exps.Coalesce.getVal()
org.apache.openjpa.kernel.exps.Coalesce.setImplicitType(Class)
org.apache.openjpa.kernel.exps.ExpressionFactory.getObjectId(Value)
org.apache.openjpa.kernel.exps.GeneralCase.GeneralCase(Exp[],Val)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.coalesceExpression(Value[])
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.generalCaseExpression(Expression[],Value)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.nullIfExpression(Value,Value)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.simpleCaseExpression(Value,Expression[],Value)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.whenCondition(Expression,Value)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.whenScalar(Value,Value)
org.apache.openjpa.kernel.exps.NullIf.getVal1()
org.apache.openjpa.kernel.exps.NullIf.getVal2()
org.apache.openjpa.kernel.exps.NullIf.NullIf(Val,Val)
org.apache.openjpa.kernel.exps.SimpleCase.SimpleCase(Val,Exp[],Val)
org.apache.openjpa.kernel.exps.WhenCondition.getExp()
org.apache.openjpa.kernel.exps.WhenCondition.WhenCondition(Exp,Val)
org.apache.openjpa.kernel.exps.WhenScalar.WhenScalar(Val,Val)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assignProjections(JPQLNode,QueryExpressions)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.eval(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalOrderingClauses(QueryExpressions)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCoalesceExpression(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getExpression(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getGeneralCaseExpression(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getNullIfExpression(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getSimpleCaseExpression(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getValue(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getWhenCondition(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getWhenScalar(JPQLNode)
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.createData()
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByAliasAscending()
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByAliasDescending()
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByConcatAliasDescending()
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByQueryAscending()
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.createUser(String,String,Address,int,boolean)
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.setUp()
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testCoalesceExpressions()
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testGeneralCaseExpression()
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.TestInMemoryScalarExpressions(String)
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testNullIfExpressions()
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testSimpleCaseExpression()
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testGeneralCaseExpressions()
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.TestJPQLScalarExpressions(String)
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testMathFuncOrderByAlias()
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testSimpleCaseExpressions()
