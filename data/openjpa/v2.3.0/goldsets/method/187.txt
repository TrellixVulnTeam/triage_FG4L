org.apache.openjpa.enhance.Reflection.get(Object,Field)
org.apache.openjpa.enhance.Reflection.getValue(Object,String,boolean)
org.apache.openjpa.jdbc.meta.ClassMapping.assertStrategy()
org.apache.openjpa.jdbc.meta.ClassMapping.contains(Column[],Column)
org.apache.openjpa.jdbc.meta.ClassMapping.getFieldMappings(Column[],boolean)
org.apache.openjpa.jdbc.meta.ClassMapping.getValueFromUnmanagedInstance(Object,Column[],boolean)
org.apache.openjpa.jdbc.meta.ClassMapping.hasColumn(Column,boolean)
org.apache.openjpa.jdbc.meta.ClassMapping.toDataStoreValue(Object,Column[],JDBCStore)
org.apache.openjpa.persistence.query.common.apps.Osoba.addProjekty(Projekt)
org.apache.openjpa.persistence.query.common.apps.Osoba.getAge()
org.apache.openjpa.persistence.query.common.apps.Osoba.getId()
org.apache.openjpa.persistence.query.common.apps.Osoba.getName()
org.apache.openjpa.persistence.query.common.apps.Osoba.getProjekty()
org.apache.openjpa.persistence.query.common.apps.Osoba.Osoba()
org.apache.openjpa.persistence.query.common.apps.Osoba.Osoba(String,int)
org.apache.openjpa.persistence.query.common.apps.Osoba.setAge(int)
org.apache.openjpa.persistence.query.common.apps.Osoba.setName(String)
org.apache.openjpa.persistence.query.common.apps.Projekt.addOsoba(Osoba)
org.apache.openjpa.persistence.query.common.apps.Projekt.getOsoby()
org.apache.openjpa.persistence.query.common.apps.Projekt.Projekt()
org.apache.openjpa.persistence.query.common.apps.Projekt.Projekt(String)
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.createData()
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.link(Osoba,Projekt)
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.queryWithParameter(EntityManager,Projekt,Projekt)
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.setUp()
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.tearDown()
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.testQueryWithManagedPersistentInstanceAsParameter()
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.testQueryWithTransientInstanceAsParameter()
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.testQueryWithUnmanagedPersistentInstanceAsParameter()
