org.apache.openjpa.enhance.ApplicationIdTool.run()
org.apache.openjpa.enhance.ManagedClassSubclasser.write(BCClass,PCEnhancer,Map<Class<?>,byte[]>,Class<?>,byte[],Class<?>,List<Class<?>>,Class<?>,List<Class<?>>,Class<?>)
org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(Version,FieldMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.useInverseKeyMapping(FieldMapping)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.getStateManager(Object,StoreContext)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.isRelationId(Column[])
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.isRelationId(ForeignKey)
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.map(boolean)
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getObjectIdForJoin(ForeignKey,OpenJPAStateManager)
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.requiresOrderBy()
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectAll(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.sql.SelectImpl.where(Object,ClassMapping,Column[],Column[],Object[],Column[],PathJoins,JDBCStore)
org.apache.openjpa.lib.conf.ProductDerivations.load(File,String,ClassLoader)
org.apache.openjpa.lib.conf.ProductDerivations.load(String,String,ClassLoader)
org.apache.openjpa.lib.conf.ProductDerivations.reportErrors(StringBuilder,String,Throwable)
org.apache.openjpa.lib.meta.XMLMetaDataParser.parseNewResource(Reader,String)
org.apache.openjpa.lib.util.JavaVersions.collectParameterizedTypes(Object)
org.apache.openjpa.lib.util.JavaVersions.collectParameterizedTypes(Object,Class<?>)
org.apache.openjpa.lib.util.JavaVersions.collectParameterizedTypes(Type,Class<?>)
org.apache.openjpa.lib.util.JavaVersions.extractClass(Object)
org.apache.openjpa.lib.util.JavaVersions.extractClass(Type)
org.apache.openjpa.lib.util.JavaVersions.getCause(Throwable)
org.apache.openjpa.lib.util.JavaVersions.getParameterizedTypes(Field)
org.apache.openjpa.lib.util.JavaVersions.getParameterizedTypes(Method)
org.apache.openjpa.lib.util.JavaVersions.getVersionSpecificClass(Class<?>)
org.apache.openjpa.lib.util.JavaVersions.getVersionSpecificClass(Class)
org.apache.openjpa.lib.util.JavaVersions.getVersionSpecificClass(String)
org.apache.openjpa.lib.util.JavaVersions.initCause(Throwable,Throwable)
org.apache.openjpa.lib.util.JavaVersions.invokeGetter(Object,String)
org.apache.openjpa.lib.util.JavaVersions.isAnnotation(Class<?>)
org.apache.openjpa.lib.util.JavaVersions.isAnnotation(Class)
org.apache.openjpa.lib.util.JavaVersions.isEnumeration(Class<?>)
org.apache.openjpa.lib.util.JavaVersions.isEnumeration(Class)
org.apache.openjpa.lib.util.JavaVersions.isParameterizedType(Object)
org.apache.openjpa.lib.util.JavaVersions.main(String[])
org.apache.openjpa.lib.util.JavaVersions.transferStackTrace(Throwable,Throwable)
org.apache.openjpa.meta.FieldMetaData.isEnum()
org.apache.openjpa.meta.ValueMetaDataImpl.resolveDeclaredType(Class)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseManyToMany(FieldMetaData,ManyToMany)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.toOverrideType(Class<?>)
org.apache.openjpa.persistence.compat.TestEmbeddableSuperclass.testRelationMappings()
org.apache.openjpa.persistence.graph.AbstractGraph.remove(Object)
org.apache.openjpa.persistence.graph.City.getName()
org.apache.openjpa.persistence.graph.City.setName(String)
org.apache.openjpa.persistence.graph.Graph.delink(V1,V2)
org.apache.openjpa.persistence.graph.Graph.getRelation(V1,V2)
org.apache.openjpa.persistence.graph.Graph.getSources(E)
org.apache.openjpa.persistence.graph.Graph.getTargets(E)
org.apache.openjpa.persistence.graph.Graph.link(V1,V2)
org.apache.openjpa.persistence.graph.People.getSsn()
org.apache.openjpa.persistence.graph.People.setSsn(long)
org.apache.openjpa.persistence.graph.PersistentGraph.getId()
org.apache.openjpa.persistence.graph.PersistentRelation.addAttribute(String,Object)
org.apache.openjpa.persistence.graph.PersistentRelation.getAttributes()
org.apache.openjpa.persistence.graph.PersistentRelation.getAttribute(String)
org.apache.openjpa.persistence.graph.PersistentRelation.getSource()
org.apache.openjpa.persistence.graph.PersistentRelation.getTarget()
org.apache.openjpa.persistence.graph.PersistentRelation.hasAttribute(String)
org.apache.openjpa.persistence.graph.PersistentRelation.PersistentRelation()
org.apache.openjpa.persistence.graph.PersistentRelation.PersistentRelation(V1,V2)
org.apache.openjpa.persistence.graph.PersistentRelation.removeAttribute(String)
org.apache.openjpa.persistence.graph.PersistentRelation.toString()
org.apache.openjpa.persistence.graph.RelationGraph.add(E)
org.apache.openjpa.persistence.graph.RelationGraph.$GenericMethodDeclaration$()
org.apache.openjpa.persistence.graph.RelationGraph.getNodes()
org.apache.openjpa.persistence.graph.RelationGraph.getRelationsFrom(V)
org.apache.openjpa.persistence.graph.RelationGraph.getRelationsTo(V)
org.apache.openjpa.persistence.graph.RelationGraph.getSources(Object)
org.apache.openjpa.persistence.graph.RelationGraph.getTargets(Object)
org.apache.openjpa.persistence.graph.RelationGraph.iterator()
org.apache.openjpa.persistence.graph.RelationGraph.size()
org.apache.openjpa.persistence.graph.Relation.Relation()
org.apache.openjpa.persistence.graph.Relation.Relation(Vertex<V1>,V1,Vertex<V2>,V2)
org.apache.openjpa.persistence.graph.TestPersistentGraph.assertDataEquals(Graph<Object>,Object,People[],City[])
org.apache.openjpa.persistence.graph.TestPersistentGraph.assertDataEquals(People[],City[])
org.apache.openjpa.persistence.graph.TestPersistentGraph.assertStrategy(Class<?>,String,Class<?extendsFieldStrategy>,FieldStrategy,Class<?extendsValueHandler>,ValueHandler)
org.apache.openjpa.persistence.graph.TestPersistentGraph.createData()
org.apache.openjpa.persistence.graph.TestPersistentGraph.getFieldMapping(Class<?>,String)
org.apache.openjpa.persistence.graph.TestPersistentGraph.getStrategy(Class<?>,String)
org.apache.openjpa.persistence.graph.TestPersistentGraph.indexOf(City)
org.apache.openjpa.persistence.graph.TestPersistentGraph.indexOf(People)
org.apache.openjpa.persistence.graph.TestPersistentGraph.isPopulated()
org.apache.openjpa.persistence.graph.TestPersistentGraph.printMapping(FieldMapping)
org.apache.openjpa.persistence.graph.TestPersistentGraph.setUp()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testAddRemoveAttribute()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testCreateGraph()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testMapping()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelation()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnMultipleAttributeKeyValuePairs()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnSingleAttributeKey()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnSingleAttributeKeyValue()
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnSourceParameter()
org.apache.openjpa.persistence.graph.Vertex.delink(Vertex<V2>,V2)
org.apache.openjpa.persistence.graph.Vertex.getNeighbours()
org.apache.openjpa.persistence.graph.Vertex.getNeighbours(Class<T>,T,boolean)
org.apache.openjpa.persistence.graph.Vertex.getRelations()
org.apache.openjpa.persistence.graph.Vertex.getRelationTo(Vertex<V2>,V2)
org.apache.openjpa.persistence.graph.Vertex.isRelatedTo(Vertex<V>,V)
org.apache.openjpa.persistence.graph.Vertex.link(Vertex<V2>,V2)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinColumns(FieldMapping,MappingInfo,boolean,JoinColumn)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMemberMappingAnnotations(FieldMetaData)
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testPersistAndFind()
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseManyToOne(FieldMetaData,Attributes)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseOneToOne(FieldMetaData,Attributes)
org.apache.openjpa.util.Id.Id(Class,String)
org.apache.openjpa.util.Id.Id(String,ClassLoader)
org.apache.openjpa.util.Id.newInstance(Class,Object)
org.apache.openjpa.util.OpenJPAId.compareTo(Object)
org.apache.openjpa.util.OpenJPAId.equals(Object)
org.apache.openjpa.util.OpenJPAId.hashCode()
org.apache.openjpa.util.OpenJPAId.idEquals(OpenJPAId)
