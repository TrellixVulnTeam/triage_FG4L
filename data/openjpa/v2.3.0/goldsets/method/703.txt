org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConfigurationLog()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.OpenJPAConfigurationImpl(boolean,boolean)
org.apache.openjpa.conf.OpenJPAConfiguration.setInitializeEagerly(boolean)
org.apache.openjpa.conf.OpenJPAConfiguration.setQuerySQLCache(PreparedQueryCache)
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getParameterTypes(StoreQuery)
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDataSource2(StoreContext)
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getQuerySQLCache()
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getQuerySQLCacheInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.isInvalidProperty(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean,boolean)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setQuerySQLCache(String)
org.apache.openjpa.jdbc.conf.JDBCConfiguration.isQuerySQLCacheOn()
org.apache.openjpa.jdbc.conf.QuerySQLCacheValue.isSQLCacheOn()
org.apache.openjpa.jdbc.conf.QuerySQLCacheValue.newInstance()
org.apache.openjpa.jdbc.conf.QuerySQLCacheValue.QuerySQLCacheValue(String)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.calculateValue(Select,ExpContext,ExpState,Val,ExpState)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.CollectionParam(Object,Class)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.CollectionParam(String,Class)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getParameterKey()
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getParameterName()
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getType()
org.apache.openjpa.jdbc.kernel.exps.InExpression.inContains(Select,ExpContext,ExpState,SQLBuffer,Collection,Column[])
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getCurrentTimestamp()
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newCollectionValuedParameter(Object,Class)
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newCollectionValuedParameter(String,Class)
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newExtension(FilterListener,Value,Value)
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newParameter(Object,Class)
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newParameter(String,Class)
org.apache.openjpa.jdbc.kernel.exps.Param.Param(Object,Class)
org.apache.openjpa.jdbc.kernel.exps.Param.Param(String,Class)
org.apache.openjpa.jdbc.kernel.exps.Variable.isVariable()
org.apache.openjpa.jdbc.kernel.exps.Variable.setMetaData(ClassMetaData)
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.get(ClassMapping,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.addToSqlCache(Map,Object,Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeBatch()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.createSQLCache()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getCacheMapFromQuerySQLCache(Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getConfiguration()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getContext()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateResult(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newQuery(String)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newSelect(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newSelect(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration,int,List)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.SelectKey.equals(JDBCFetchConfiguration,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.SelectKey.SelectKey(ClassMapping,FieldMapping,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setContext(StoreContext,JDBCConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeQuery(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Range)
org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.getResult()
org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.open()
org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.PreparedProjectionResultObjectProvider(SelectExecutor,QueryExpressions,QueryExpressionsState,ExpContext,Result)
org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.PreparedProjectionResultObjectProvider(SelectExecutor,QueryExpressions[],QueryExpressionsState[],ExpContext,Result)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.addExclusionPattern(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.cache(PreparedQuery)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.clear()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.endConfiguration()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.equals(Object)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.ExclusionPattern(boolean,String,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.getPattern()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.getReason()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.hashCode()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.isStrong()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.matches(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.toString()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.get(Class)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getEnableStatistics()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getExcludes()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMapView()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedExclusionPattern(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedKeys(String,Collection<String>,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedKeys(String,Map<String,Exclusion>,String,Exclusion)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedKeys(String,Map<String,String>,String,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.get(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.initialize(String,Object)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.invalidate(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isCachable(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isExcluded(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isHinted(FetchConfiguration,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isSelect(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.markUncachable(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.markUncachable(String,Exclusion)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.markUncachable(String,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.matches(String,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.PreparedQueryCacheImpl()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.register(String,Query,FetchConfiguration)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.removeExclusionPattern(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.setConfiguration(Configuration)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.setEnableStatistics(boolean)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.setExcludes(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.startConfiguration()
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.StrongExclusion.StrongExclusion(String,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.WeakExclusion.WeakExclusion(String,String)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.extractImplementation(SelectExecutor)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.extractSelectExecutor(Object)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.findUserParameterPositions(Object)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getIdentifier()
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getProjectionTypes()
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getQueryExpressions()
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getSelect()
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getTargetQuery()
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.initialize(Object)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.isInitialized()
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.PreparedQueryImpl(String,Query)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.PreparedQueryImpl(String,String,Query)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.reparametrize(Map)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.reparametrize(Map,Broker)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setCollectionValuedParameter(Map<Integer,Object>,Integer,Object,Collection,int[],Object)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setDatastoreAction(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setInto(Query)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setParameters(List)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setPersistenceCapableParameter(Map<Integer,Object>,Integer,Object,Object,int[],Broker)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setTargetQuery(String)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setUserParameterPositions(List)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setUserParameters(List)
org.apache.openjpa.jdbc.kernel.PreparedResultObjectProvider.PreparedResultObjectProvider(SelectExecutor,ClassMapping,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.getPreparedQuery()
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.executeQuery(StoreQuery,Object[],Range)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.getOperation(StoreQuery)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.PreparedSQLExecutor(PreparedSQLStoreQuery,ClassMetaData)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.toParameterArray(StoreQuery,Map)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLStoreQuery(JDBCStore)
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.setQuery(Object)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.countDistinct(List)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.getStore()
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeQuery(JDBCStore,Connection,PreparedStatement,SQLBuffer,List)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeUpdate(StoreQuery,Object[])
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.substituteParams(String,List<Integer>,Integer)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.substituteParams(String,List)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.supportsParameterDeclarations()
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.newUnion(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,ClassMapping[],int,Joins[])
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.newUnion.select(Select,int)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.toDataStoreValue(Object,JDBCStore)
org.apache.openjpa.jdbc.sql.LogicalUnion.execute(JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.LogicalUnion.execute(JDBCStore,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.sql.LogicalUnion.execute(JDBCStore,JDBCFetchConfiguration,int,List)
org.apache.openjpa.jdbc.sql.LogicalUnion.execute(JDBCStore,JDBCFetchConfiguration,List)
org.apache.openjpa.jdbc.sql.LogicalUnion.getCount(JDBCStore)
org.apache.openjpa.jdbc.sql.LogicalUnion.hasMultipleSelects()
org.apache.openjpa.jdbc.sql.LogicalUnion.supportsLocking()
org.apache.openjpa.jdbc.sql.LogicalUnion.toSelect(boolean,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.LogicalUnion.toSelectCount()
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.addJoinClassConditions()
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getHaving()
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSQL()
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSubselects()
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setSQL(JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.whereForeignKey(ForeignKey,Object,ClassMapping,JDBCStore)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.wherePrimaryKey(ClassMapping,Column[],Column[],Object,JDBCStore,PathJoins,SQLBuffer,List)
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.wherePrimaryKey(Object,ClassMapping,JDBCStore)
org.apache.openjpa.jdbc.sql.SelectImpl.addEagerResults(SelectResult,SelectImpl,JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.SelectImpl.addEagerResults(SelectResult,SelectImpl,JDBCStore,JDBCFetchConfiguration,List)
org.apache.openjpa.jdbc.sql.SelectImpl.aliasSize(boolean,SelectImpl)
org.apache.openjpa.jdbc.sql.SelectImpl.executeQuery(Connection,PreparedStatement,SQLBuffer,boolean,JDBCStore)
org.apache.openjpa.jdbc.sql.SelectImpl.executeQuery(Connection,PreparedStatement,SQLBuffer,boolean,JDBCStore,List)
org.apache.openjpa.jdbc.sql.SelectImpl.execute(StoreContext,JDBCStore,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.sql.SelectImpl.execute(StoreContext,JDBCStore,JDBCFetchConfiguration,int,List)
org.apache.openjpa.jdbc.sql.SelectImpl.getEagerResult(Connection,PreparedStatement,ResultSet,JDBCStore,JDBCFetchConfiguration,boolean,SQLBuffer)
org.apache.openjpa.jdbc.sql.SelectImpl.getEagerResult(Connection,PreparedStatement,ResultSet,JDBCStore,JDBCFetchConfiguration,boolean,String,List)
org.apache.openjpa.jdbc.sql.SelectImpl.isForUpdate(JDBCStore,int)
org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(Connection,SQLBuffer,JDBCFetchConfiguration,int,int,boolean)
org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(Connection,SQLBuffer,JDBCFetchConfiguration,int,int,boolean,List)
org.apache.openjpa.jdbc.sql.SelectImpl.setSQL(SQLBuffer)
org.apache.openjpa.jdbc.sql.SelectImpl.where(Object,ClassMapping,Column[],Column[],Object[],Column[],PathJoins,JDBCStore)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(SQLBuffer,int,int,boolean)
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Table)
org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object)
org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object,Column)
org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object,Column,Parameter)
org.apache.openjpa.jdbc.sql.SQLBuffer.getParameters()
org.apache.openjpa.jdbc.sql.SQLBuffer.getUserParameters()
org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection,int,int)
org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection,int,int,List)
org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection,JDBCFetchConfiguration,int,int)
org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection,JDBCFetchConfiguration,int,int,List)
org.apache.openjpa.jdbc.sql.SQLBuffer.setParameters(PreparedStatement)
org.apache.openjpa.jdbc.sql.SQLBuffer.setParameters(PreparedStatement,List)
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getRange(StoreQuery,Object[],Range)
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.validate(StoreQuery)
org.apache.openjpa.kernel.Broker.getCachePreparedQuery()
org.apache.openjpa.kernel.BrokerImpl.checkForDuplicateId(Object,Object)
org.apache.openjpa.kernel.Broker.setCachePreparedQuery(boolean)
org.apache.openjpa.kernel.Broker.setLifecycleListenerCallbackMode(int)
org.apache.openjpa.kernel.DelegatingBroker.isDetached(Object)
org.apache.openjpa.kernel.DelegatingResultList.close()
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.assertQueryExpression()
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getProjectionAliases(StoreQuery)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getProjectionTypes(StoreQuery)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.positionalParameterBase(Collection)
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.validateParameterValue(Object,Object,Class)
org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.DataStoreExecutor(ExpressionStoreQuery,ClassMetaData,boolean,ExpressionParser,Object)
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.InMemoryExecutor(ExpressionStoreQuery,ClassMetaData,boolean,ExpressionParser,Object)
org.apache.openjpa.kernel.exps.Parameter.setIndex(int)
org.apache.openjpa.kernel.FetchConfigurationImpl.addFetchGroup(String)
org.apache.openjpa.kernel.FetchConfigurationImpl.clearFetchGroups()
org.apache.openjpa.kernel.FetchConfigurationImpl.copy(FetchConfiguration)
org.apache.openjpa.kernel.FetchConfigurationImpl.copyHints(FetchConfiguration)
org.apache.openjpa.kernel.FetchConfigurationImpl.FetchConfigurationImpl()
org.apache.openjpa.kernel.FetchConfigurationImpl.getFetchBatchSize()
org.apache.openjpa.kernel.FetchConfigurationImpl.hasFetchGroupAll()
org.apache.openjpa.kernel.FetchConfigurationImpl.hasFetchGroupDefault()
org.apache.openjpa.kernel.FetchConfigurationImpl.hasFetchGroup(String)
org.apache.openjpa.kernel.FetchConfigurationImpl.includes(FieldMetaData)
org.apache.openjpa.kernel.FetchConfigurationImpl.removeFetchGroups(Collection)
org.apache.openjpa.kernel.FetchConfigurationImpl.removeFetchGroup(String)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.eval(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCollectionValuedParameter(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getParameter(String,boolean)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getParameter(String,boolean,boolean)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getStringValue(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getSubquery(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getType(JPQLNode)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class)
org.apache.openjpa.kernel.PreparedQueryCache.getStatistics()
org.apache.openjpa.kernel.PreparedQuery.getLanguage()
org.apache.openjpa.kernel.PreparedQuery.getOriginalQuery()
org.apache.openjpa.kernel.QueryImpl.assertParameters(StoreQuery,StoreQuery.Executor,Map)
org.apache.openjpa.kernel.QueryImpl.assertParameters(StoreQuery,StoreQuery.Executor,Object[])
org.apache.openjpa.kernel.QueryImpl.execute(int,Map)
org.apache.openjpa.kernel.QueryImpl.getDataStoreActions(Map)
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.executeQuery(StoreQuery,Object[],StoreQuery.Range)
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.MergedExecutor(StoreQuery.Executor[])
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.isClosed()
org.apache.openjpa.kernel.QueryImpl.toParameterArray(LinkedMap,Map)
org.apache.openjpa.kernel.QueryImpl.toResult(StoreQuery,StoreQuery.Executor,ResultObjectProvider,StoreQuery.Range)
org.apache.openjpa.kernel.QueryImpl.updateAll(Map)
org.apache.openjpa.kernel.QueryStatistics.Default.addSample(Map<String,long[]>,String,long[],String,int)
org.apache.openjpa.kernel.QueryStatistics.Default.addSample(Map<T,long[]>,T,long[],T,int)
org.apache.openjpa.kernel.QueryStatistics.Default.addSample(String,int)
org.apache.openjpa.kernel.QueryStatistics.Default.addSample(T,int)
org.apache.openjpa.kernel.QueryStatistics.Default.getCount(Map<String,long[]>,String,long[],String,int)
org.apache.openjpa.kernel.QueryStatistics.Default.getCount(Map<T,long[]>,T,long[],T,int)
org.apache.openjpa.kernel.QueryStatistics.Default.getExecutionCount(String)
org.apache.openjpa.kernel.QueryStatistics.Default.getHitCount(String)
org.apache.openjpa.kernel.QueryStatistics.Default.getTotalExecutionCount(String)
org.apache.openjpa.kernel.QueryStatistics.Default.getTotalHitCount(String)
org.apache.openjpa.kernel.QueryStatistics.Default.pct(long,long)
org.apache.openjpa.kernel.QueryStatistics.Default.recordExecution(String,boolean)
org.apache.openjpa.kernel.QueryStatistics.Default.recordExecution(T,boolean)
org.apache.openjpa.kernel.QueryStatistics.Default.toString(long[])
org.apache.openjpa.kernel.QueryStatistics.None.dump(PrintStream)
org.apache.openjpa.kernel.QueryStatistics.None.getExecutionCount()
org.apache.openjpa.kernel.QueryStatistics.None.getExecutionCount(T)
org.apache.openjpa.kernel.QueryStatistics.None.getHitCount()
org.apache.openjpa.kernel.QueryStatistics.None.getHitCount(T)
org.apache.openjpa.kernel.QueryStatistics.None.getTotalExecutionCount()
org.apache.openjpa.kernel.QueryStatistics.None.getTotalExecutionCount(T)
org.apache.openjpa.kernel.QueryStatistics.None.getTotalHitCount()
org.apache.openjpa.kernel.QueryStatistics.None.getTotalHitCount(T)
org.apache.openjpa.kernel.QueryStatistics.None.keys()
org.apache.openjpa.kernel.QueryStatistics.None.recordExecution(T)
org.apache.openjpa.kernel.QueryStatistics.None.reset()
org.apache.openjpa.kernel.QueryStatistics.None.since()
org.apache.openjpa.kernel.QueryStatistics.None.start()
org.apache.openjpa.kernel.StoreQuery.Executor.getUpdates(StoreQuery)
org.apache.openjpa.kernel.TestQuerySQLCache.FindPeople.FindPeople(EntityManagerFactory,int,int,int,int)
org.apache.openjpa.kernel.TestQuerySQLCache.FindPeople.hadFailures()
org.apache.openjpa.kernel.TestQuerySQLCache.runMultiEMCaching(Map)
org.apache.openjpa.kernel.TestQuerySQLCache.testAllCacheSetting()
org.apache.openjpa.kernel.TestQuerySQLCache.testBadCustomCacheSetting()
org.apache.openjpa.kernel.TestQuerySQLCache.testCustomCacheSetting()
org.apache.openjpa.kernel.TestQuerySQLCache.testEagerFetch()
org.apache.openjpa.kernel.TestQuerySQLCache.testFalseCacheSetting()
org.apache.openjpa.kernel.TestQuerySQLCache.testMultiEMCachingAll()
org.apache.openjpa.kernel.TestQuerySQLCache.testMultiEMCachingTrue()
org.apache.openjpa.kernel.TestQuerySQLCache.testTrueCacheSetting()
org.apache.openjpa.lib.rop.AbstractResultList.assertOpen()
org.apache.openjpa.lib.rop.RangeResultObjectProvider.getDelegate()
org.apache.openjpa.lib.rop.RangeResultObjectProvider.handleCheckedException(Exception)
org.apache.openjpa.lib.rop.ResultList.getUserObject()
org.apache.openjpa.lib.rop.ResultList.isProviderOpen()
org.apache.openjpa.lib.rop.ResultList.setUserObject(Object)
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Coll_Embed_Embed()
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Coll_String()
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Coll_Integer()
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Embed_ToMany()
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_ToMany()
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_ToOne()
org.apache.openjpa.persistence.EntityManagerImpl.createNamedQuery(String)
org.apache.openjpa.persistence.EntityManagerImpl.createNativeQuery(String)
org.apache.openjpa.persistence.EntityManagerImpl.createQuery(Query)
org.apache.openjpa.persistence.EntityManagerImpl.createQuery(String,String)
org.apache.openjpa.persistence.EntityManagerImpl.getExceptionTranslator()
org.apache.openjpa.persistence.EntityManagerImpl.getPreparedQuery(String)
org.apache.openjpa.persistence.EntityManagerImpl.setFlushMode(FlushModeType)
org.apache.openjpa.persistence.EntityManagerImpl.setQuerySQLCache(boolean)
org.apache.openjpa.persistence.EntityManagerImpl.validateSQL(String)
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithGapSucceeds()
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithRepeatedValuesSucceeds()
org.apache.openjpa.persistence.jdbc.sqlcache.Address.Address()
org.apache.openjpa.persistence.jdbc.sqlcache.Address.Address(String,String,String,int)
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getCity()
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getState()
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getStreet()
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getZip()
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setCity(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setState(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setStreet(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setZip(int)
org.apache.openjpa.persistence.jdbc.sqlcache.Author.addBook(Book)
org.apache.openjpa.persistence.jdbc.sqlcache.Author.Author()
org.apache.openjpa.persistence.jdbc.sqlcache.Author.Author(String,String,short,int)
org.apache.openjpa.persistence.jdbc.sqlcache.Author.getBooks()
org.apache.openjpa.persistence.jdbc.sqlcache.Author.setName(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Book.addAuthor(Author)
org.apache.openjpa.persistence.jdbc.sqlcache.Book.Book()
org.apache.openjpa.persistence.jdbc.sqlcache.Book.Book(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Book.getAuthors()
org.apache.openjpa.persistence.jdbc.sqlcache.Book.getTitle()
org.apache.openjpa.persistence.jdbc.sqlcache.Book.setTitle(String)
org.apache.openjpa.persistence.jdbc.sqlcache.CD.CD()
org.apache.openjpa.persistence.jdbc.sqlcache.CD.CD(String)
org.apache.openjpa.persistence.jdbc.sqlcache.CD.getLabel()
org.apache.openjpa.persistence.jdbc.sqlcache.CD.getSinger()
org.apache.openjpa.persistence.jdbc.sqlcache.CD.setLabel(String)
org.apache.openjpa.persistence.jdbc.sqlcache.CD.setSinger(Singer)
org.apache.openjpa.persistence.jdbc.sqlcache.Company.addDepartment(Department)
org.apache.openjpa.persistence.jdbc.sqlcache.Company.getDepartments()
org.apache.openjpa.persistence.jdbc.sqlcache.Company.getStartYear()
org.apache.openjpa.persistence.jdbc.sqlcache.Company.setStartYear(int)
org.apache.openjpa.persistence.jdbc.sqlcache.Department.addEmployees(Employee)
org.apache.openjpa.persistence.jdbc.sqlcache.Department.getCompany()
org.apache.openjpa.persistence.jdbc.sqlcache.Department.getEmployees()
org.apache.openjpa.persistence.jdbc.sqlcache.Department.setCompany(Company)
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getDepartment()
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getName()
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.isManager()
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setDepartment(Department)
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setManager(boolean)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getAddress()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getAge()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getBirthYear()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getFirstName()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getId()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getLastName()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.Person()
org.apache.openjpa.persistence.jdbc.sqlcache.Person.Person(String,String,short,int)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setAddress(Address)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setAge(short)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setBirthYear(int)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setFirstName(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setId(long)
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setLastName(String)
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.addCd(CD)
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.getCds()
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.Singer()
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.Singer(String,String,short,int)
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.setUp()
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testQueryStatisticsIsDisabledByDefault()
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testStatsSize()
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testThreadSafety()
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testThreadSafety.run()
org.apache.openjpa.persistence.jdbc.sqlcache.TestEagerQueries.testQueryWithEagerRelationIsNotCached()
org.apache.openjpa.persistence.jdbc.sqlcache.TestEagerQueries.testQueryWithLazyRelationIsCached()
org.apache.openjpa.persistence.jdbc.sqlcache.TestEagerQueries.xsetUp()
org.apache.openjpa.persistence.jdbc.sqlcache.TestEagerQueries.xtestQueryWithEagerRelationIsNotCached()
org.apache.openjpa.persistence.jdbc.sqlcache.TestEagerQueries.xtestQueryWithLazyRelationIsCached()
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.createTestData()
org.apache.openjpa.persistence.jdbc.sqlcache.TestParameterProcessing.testNamed()
org.apache.openjpa.persistence.jdbc.sqlcache.TestParameterProcessing.testNullParameterValueForPrimitiveTypeThrowsException()
org.apache.openjpa.persistence.jdbc.sqlcache.TestParameterProcessing.testPositional()
org.apache.openjpa.persistence.jdbc.sqlcache.TestParameterProcessing.testWrongParameterValueTypeThrowException()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertCached(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertLanguage(OpenJPAQuery<?>,String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertLanguage(OpenJPAQuery,String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertNotCached(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(boolean,String,boolean,Object)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(boolean,String,int,Object)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compareSQLs(List<String>,String,List<String>,String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean,int)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean,int,Object)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean,Object)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.assertContent(String[],String[])
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testAddExclusionPatternDisallowsCacheing()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testAddExclusionPatternMakesExistingEntryInvalid()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testCachePopulationSetUp()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testExclusionPatternsAreSet()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testRemoveExclusionPatternAllowsCacheing()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testRemoveExclusionPatternDoesNotRemoveUserProhbitedKeys()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getCache()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getJPQL(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getJPQLString(String,boolean)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getPreparedQueryCache()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getSQL(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.iterate(List<?>)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.literal(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.log(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.main(String[])
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.parameterize(Query,Object[])
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.run(String,boolean,Object[],int,boolean,int)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.run(String,Object[],boolean,int,boolean,boolean)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.run(String,Object[],boolean,int,boolean,int)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.run(String,Object[],boolean,int,boolean,int,boolean)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.SQLAuditor.beforeExecuteStatement(JDBCEvent)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.SQLAuditor.getSQLs()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.tearDown()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testCollectionValuedParameters()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testExclusionPattern()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testIgnorePreparedQueryWithHint()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testInvalidatePreparedQueryWithHint()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithLiteral()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithNamedParameter()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithNoParameter()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithPositionalParameter()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNeedsTypeConversion()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testOrderByElementsAbsentInProjection()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testOriginalJPQLQueryStringIsSetOnPreparedQuery()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPersistenceCapableParameter()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryCacheCanBeDeactivatedDynamically()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryCacheIsActiveByDefault()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryCacheIsPerUnitSingleton()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIdentifierIsOriginalJPQLQuery()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIsCachedAcrossExecution()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIsCachedOnExecution()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testProjectEmbedded()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testProjectionResult()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testProjectRepeatsTerm()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryCount()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryMultipleProjectionClass()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryProjectionNotCandidateClass()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryStatistics()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithJoinsAndParameters()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithLiteral()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithNoParameter()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithOrderByClause()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithParameter()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testResetQueryStatistics()
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.trace(String)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.walk(List)
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClause(boolean,boolean,boolean)
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaFind()
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaGetSingleResult()
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaHint()
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaQueryHint()
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.tstOptimizeForClause(boolean,boolean,boolean)
org.apache.openjpa.persistence.jpql.expressions.TestEntityTypeExpression.testTypeExpression()
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.createUser(String,String,int,boolean)
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testNativeSQL()
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testSetNamedParameter()
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testSetPositionalParameter()
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testSetPositionalParameterInNonIntutiveOrder()
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.verifyUpdate()
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.setLifecycleListenerCallbackMode(EnumSet<CallbackMode>,CallbackMode)
org.apache.openjpa.persistence.QueryImpl.compile()
org.apache.openjpa.persistence.QueryImpl.execute()
org.apache.openjpa.persistence.QueryImpl.$GenericMethodDeclaration$()
org.apache.openjpa.persistence.QueryImpl.getResultList()
org.apache.openjpa.persistence.QueryImpl.ignorePreparedQuery()
org.apache.openjpa.persistence.QueryImpl.invalidatePreparedQuery()
org.apache.openjpa.persistence.QueryImpl.lock()
org.apache.openjpa.persistence.QueryImpl.newValidationException(String,Object)
org.apache.openjpa.persistence.QueryImpl.postExecute(Object)
org.apache.openjpa.persistence.QueryImpl.preExecute(Map)
org.apache.openjpa.persistence.QueryImpl.QueryImpl(EntityManagerImpl,RuntimeExceptionTranslator,org.apache.openjpa.kernel.Query)
org.apache.openjpa.persistence.QueryImpl.recordStatistics(String,boolean)
org.apache.openjpa.persistence.QueryImpl.removeGaps(Map<Integer,Object>,Integer,Object)
org.apache.openjpa.persistence.QueryImpl.setHint(String,Object)
org.apache.openjpa.persistence.QueryImpl.setId(String)
org.apache.openjpa.persistence.QueryImpl.setParameter(int,Object)
org.apache.openjpa.persistence.QueryImpl.unlock()
org.apache.openjpa.persistence.QueryImpl.unwrap(Class<T>,T)
org.apache.openjpa.persistence.QueryImpl.validateParameters()
