org.apache.openjpa.datacache.DataCacheStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.lockRow(OpenJPAStateManager,int,int)
org.apache.openjpa.jdbc.sql.DB2Dictionary.nullSafe(String)
org.apache.openjpa.jdbc.sql.DBDictionary.narrow(String,SQLException)
org.apache.openjpa.jdbc.sql.DBDictionary.narrow(String,SQLException,Object)
org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(String,SQLException[],Object)
org.apache.openjpa.jdbc.sql.DerbyDictionary.closeDataSource(DataSource)
org.apache.openjpa.jdbc.sql.DerbyDictionary.matchErrorState(int,Set<String>,String,SQLException)
org.apache.openjpa.jdbc.sql.FirebirdDictionary.matchErrorState(Map<Integer,Set<String>>,Integer,Set<String>,String,SQLException)
org.apache.openjpa.jdbc.sql.InformixDictionary.getSchemaCase()
org.apache.openjpa.jdbc.sql.MySQLDictionary.getSelectTableAliases(Select)
org.apache.openjpa.jdbc.sql.MySQLDictionary.getTypeName(Column)
org.apache.openjpa.jdbc.sql.MySQLDictionary.isFatalException(int,SQLException)
org.apache.openjpa.jdbc.sql.OracleDictionary.getBatchUpdateCount(PreparedStatement)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,Object,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLServerDictionary.setSupportsXMLColumn(boolean)
org.apache.openjpa.kernel.DelegatingBroker.attachAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.attach(Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.deleteAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.delete(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.detachAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.detach(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.evictAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.evictAll(Extent,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.evict(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.findAll(Collection,boolean,FindCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.findAll(Collection,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.DelegatingBroker.findCached(Object,FindCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.find(Object,boolean,FindCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.find(Object,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.DelegatingBroker.getBroker()
org.apache.openjpa.kernel.DelegatingBroker.lockAll(Collection,int,int,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.lockAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.lock(Object,int,int,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.lock(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.newExtent(Class,boolean)
org.apache.openjpa.kernel.DelegatingBroker.newQuery(String,Class,Object)
org.apache.openjpa.kernel.DelegatingBroker.newQuery(String,Object)
org.apache.openjpa.kernel.DelegatingBroker.nontransactionalAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.nontransactional(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.refreshAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.refresh(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.releaseAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.release(Object,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.transactionalAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.transactional(Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.DelegatingBroker.translate(RuntimeException)
org.apache.openjpa.kernel.DelegatingBroker.translate(RuntimeException,Object)
org.apache.openjpa.kernel.FetchConfigurationImpl.setHint(String,Object,Object)
org.apache.openjpa.kernel.Filters.allowNumericConversion(Class<?>,Class<?>,boolean)
org.apache.openjpa.kernel.Filters.canConvert(Class<?>,Class<?>,boolean)
org.apache.openjpa.kernel.Filters.convert(Object,Class<?>)
org.apache.openjpa.kernel.Filters.convert(Object,Class<?>,boolean)
org.apache.openjpa.kernel.Filters.convertToMatchMethodArgument(Object,Method)
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testFindAfterQueryOrderByWithPessimisticLocks()
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testFindAfterQueryWithPessimisticLocks()
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testQueryAfterFindWithPessimisticLocks()
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testQueryOrderByAfterFindWithPessimisticLocks()
org.apache.openjpa.persistence.LockTimeoutException.LockTimeoutException(String,Throwable[],Object)
org.apache.openjpa.persistence.LockTimeoutException.LockTimeoutException(String,Throwable[],Object,boolean)
org.apache.openjpa.persistence.PersistenceExceptions.translateStoreException(OpenJPAException)
org.apache.openjpa.persistence.PessimisticLockException.getType()
org.apache.openjpa.persistence.PessimisticLockException.PessimisticLockException(String,Throwable[],Object)
org.apache.openjpa.persistence.PessimisticLockException.PessimisticLockException(String,Throwable[],Object,boolean)
org.apache.openjpa.persistence.QueryImpl.assertValueAssignable(Parameter<?>,Object)
org.apache.openjpa.persistence.QueryImpl.execute()
org.apache.openjpa.persistence.QueryImpl.QueryImpl(EntityManagerImpl,org.apache.openjpa.kernel.Query)
org.apache.openjpa.persistence.QueryImpl.QueryImpl(EntityManagerImpl,RuntimeExceptionTranslator,org.apache.openjpa.kernel.Query)
org.apache.openjpa.persistence.QueryImpl.toString()
org.apache.openjpa.persistence.query.TestTimeoutException.assertError(Callable<Throwable>,Throwable,Class<?extendsThrowable>,Throwable,long)
org.apache.openjpa.persistence.query.TestTimeoutException.assertError(Throwable,Class<?extendsThrowable>,Throwable)
org.apache.openjpa.persistence.query.TestTimeoutException.assertError(Throwable,Class<?extendsThrowable>,Throwable,long)
org.apache.openjpa.persistence.query.TestTimeoutException.createEntity(EntityManager)
org.apache.openjpa.persistence.query.TestTimeoutException.getFailedObject(Throwable)
org.apache.openjpa.persistence.query.TestTimeoutException.setUp()
org.apache.openjpa.persistence.query.TestTimeoutException.testLockTimeOutExceptionWhileLockingAlreadyLockedEntities()
org.apache.openjpa.persistence.query.TestTimeoutException.testQueryTimeOutExceptionWhileFindWithLocksOnAlreadyLockedEntities()
org.apache.openjpa.persistence.query.TestTimeoutException.testQueryTimeOutExceptionWhileQueryingWithLocksOnAlreadyLockedEntities()
org.apache.openjpa.persistence.query.TestTimeoutException.testQueryTimeOutExceptionWhileQueryingWithLocksOnAlreadyLockedEntities.call()
org.apache.openjpa.persistence.QueryTimeoutException.QueryTimeoutException(String,Throwable[],Object)
org.apache.openjpa.persistence.QueryTimeoutException.QueryTimeoutException(String,Throwable[],Object,boolean)
org.apache.openjpa.util.Exceptions.toClassName(Class<?>)
org.apache.openjpa.util.Exceptions.toClassNames(Collection<?extendsClass<?>>,Class<?>)
org.apache.openjpa.util.LockException.getSubtype()
org.apache.openjpa.util.LockException.LockException(Object)
org.apache.openjpa.util.LockException.LockException(Object,int)
org.apache.openjpa.util.LockException.LockException(Object,int,int)
org.apache.openjpa.util.LockException.writeObject(ObjectOutputStream)
