org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.createStoreManager(String,OpenJPAConfiguration,String)
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.createStoreManager(String,String)
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.getProperties()
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.newInstance(ConfigurationProvider)
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.newStoreManager()
org.apache.openjpa.abstractstore.AbstractStoreManager.flush(Collection<?extendsOpenJPAStateManager>,OpenJPAStateManager)
org.apache.openjpa.abstractstore.AbstractStoreManager.flush(Collection<OpenJPAStateManager>,OpenJPAStateManager)
org.apache.openjpa.conf.AutoDetachValue.AutoDetachValue()
org.apache.openjpa.conf.AutoDetachValue.getValueType()
org.apache.openjpa.conf.AutoDetachValue.setConstant(int)
org.apache.openjpa.conf.BrokerFactoryValue.BrokerFactoryValue()
org.apache.openjpa.conf.BrokerFactoryValue.set(ConfigurationProvider,String)
org.apache.openjpa.conf.BrokerValue.BrokerValue()
org.apache.openjpa.conf.BrokerValue.getTemplateBroker(String,Class,Configuration,boolean)
org.apache.openjpa.conf.BrokerValue.getTemplateBroker(String,Configuration,boolean)
org.apache.openjpa.conf.BrokerValue.getTemplateBrokerType(Configuration)
org.apache.openjpa.conf.CacheMarshallerImpl.getValidationPolicy()
org.apache.openjpa.conf.CacheMarshallerImpl.setInputUrlFromResourceLocation()
org.apache.openjpa.conf.CacheMarshallerImpl.setValidationPolicy(String)
org.apache.openjpa.conf.CacheMarshallersValue.CacheMarshallersValue(Configuration)
org.apache.openjpa.conf.CacheMarshallersValue.initialize()
org.apache.openjpa.conf.CacheMarshallersValue.instantiate(Class<?>,Configuration,boolean)
org.apache.openjpa.conf.CacheMarshallersValue.instantiate(Configuration,boolean)
org.apache.openjpa.conf.MetaDataCacheMaintenance.main(String[])
org.apache.openjpa.conf.MetaDataCacheMaintenance.store()
org.apache.openjpa.conf.MetaDataRepositoryValue.instantiate(Class,Configuration,boolean)
org.apache.openjpa.conf.MetaDataRepositoryValue.MetaDataRepositoryValue()
org.apache.openjpa.conf.OpenJPAConfiguration.getClassResolver()
org.apache.openjpa.conf.OpenJPAConfiguration.getClassResolverInstance()
org.apache.openjpa.conf.OpenJPAConfiguration.getEncryptionProvider()
org.apache.openjpa.conf.OpenJPAConfiguration.getEncryptionProviderInstance()
org.apache.openjpa.conf.OpenJPAConfiguration.getValidatorInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAggregateListenerInstances()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAuditorInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getBrokerImpl()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCacheDistributionPolicy()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCacheDistributionPolicyInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCallbackOptions()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCallbackOptionsInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCompatibilityInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnection2Password()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionPassword()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionUserName()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDataCacheManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDetachStateInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFilterListenerInstances()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFinderCacheInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getIgnoreChanges()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInstrumentationInstances()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInstrumentationManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInverseManager()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getLifecycleEventManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getManagedRuntimeInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMapping()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMetaDataFactory()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMetaDataRepository()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getOrphanedKeyActionInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getPersistenceEnvironment()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getProxyManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQueryCompilationCache()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQueryCompilationCacheInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQuerySQLCacheInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSavepointManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSequenceInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSpecification()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSpecificationInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getStoreFacadeTypeRegistry()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidationFactoryInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.metaDataRepositoryAvailable()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newBrokerInstance(String,String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newInverseManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newLockManagerInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newMetaDataFactoryInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newMetaDataRepositoryInstance()
org.apache.openjpa.conf.OpenJPAConfigurationImpl.OpenJPAConfigurationImpl(boolean,boolean)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAggregateListeners(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setBrokerFactory(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnection2Password(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionPassword(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionRetainMode(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionUserName(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheManager(DataCacheManager)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheMode(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setEncryptionProvider(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFinderCache(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setIgnoreChanges(boolean)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setIgnoreChanges(Boolean)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInstrumentationManager(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInverseManager(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMapping(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMetaDataFactory(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMetaDataRepository(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOrphanedKeyAction(OrphanedKeyAction)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOrphanedKeyAction(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setProxyManager(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRetryClassRegistration(boolean)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setSavepointManager(String)
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidationFactory(Object)
org.apache.openjpa.conf.OpenJPAConfiguration.setClassResolver(ClassResolver)
org.apache.openjpa.conf.OpenJPAConfiguration.setClassResolver(String)
org.apache.openjpa.conf.OpenJPAConfiguration.setValidatorInstance(Object)
org.apache.openjpa.conf.OpenJPAConfiguration.setValidatorInstance(Validator)
org.apache.openjpa.conf.QueryCompilationCacheValue.QueryCompilationCacheValue(String)
org.apache.openjpa.conf.RemoteCommitProviderValue.getProvider()
org.apache.openjpa.conf.RemoteCommitProviderValue.instantiateProvider(Configuration,boolean)
org.apache.openjpa.conf.RemoteCommitProviderValue.RemoteCommitProviderValue()
org.apache.openjpa.conf.SeqValue.SeqValue(String)
org.apache.openjpa.conf.SpecificationPlugin.set(Object)
org.apache.openjpa.conf.SpecificationPlugin.set(Specification)
org.apache.openjpa.conf.SpecificationPlugin.SpecificationPlugin(Configuration,String)
org.apache.openjpa.datacache.AbstractQueryCache.addTypes(Collection,Set)
org.apache.openjpa.datacache.AbstractQueryCache.initialize(DataCacheManager)
org.apache.openjpa.datacache.Caches.addTypesByName(OpenJPAConfiguration,Collection<String>,String,Set<Class<?>>,Class<?>)
org.apache.openjpa.datacache.DataCacheManager.initialize(OpenJPAConfiguration,ObjectValue<DataCache>,DataCache,ObjectValue<QueryCache>,QueryCache)
org.apache.openjpa.datacache.DataCacheManager.initialize(OpenJPAConfiguration,ObjectValue,ObjectValue)
org.apache.openjpa.datacache.DataCacheStoreManager.addUnloaded(OpenJPAStateManager,BitSet,Map<OpenJPAStateManager,BitSet>,OpenJPAStateManager,BitSet)
org.apache.openjpa.datacache.DataCacheStoreManager.evictTypes(Collection<Class<?>>,Class<?>)
org.apache.openjpa.datacache.PartitionedDataCache.setPartitions(String)
org.apache.openjpa.datacache.PartitionedDataCache.setPartitionType(String)
org.apache.openjpa.datacache.QueryKey.createKey(QueryContext,boolean,Class,boolean,long,long,Object)
org.apache.openjpa.ee.InvocationManagedRuntime.getTransactionManager()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.evictionHelper(boolean)
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.setUp()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testEnhancer()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetMetaDataOfSubtype()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testLazyLoading()
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testMetaData()
org.apache.openjpa.enhance.ApplicationIdTool.ApplicationIdTool(OpenJPAConfiguration,Class)
org.apache.openjpa.enhance.ApplicationIdTool.run(OpenJPAConfiguration,String[],Flags)
org.apache.openjpa.enhance.ApplicationIdTool.run(OpenJPAConfiguration,String[],Flags,ClassLoader)
org.apache.openjpa.enhance.ApplicationIdTool.run(OpenJPAConfiguration,String[],Options)
org.apache.openjpa.enhance.ClassRedefiner.canRedefineClasses(Log)
org.apache.openjpa.enhance.ClassRedefiner.canRedefineClasses(OpenJPAConfiguration)
org.apache.openjpa.enhance.ClassRedefiner.redefineClasses(OpenJPAConfiguration,Map<Class<?>,byte[]>,Class<?>,byte[])
org.apache.openjpa.enhance.CodeGenerator.CodeGenerator(OpenJPAConfiguration,Class)
org.apache.openjpa.enhance.InstrumentationFactory.createAgentJar()
org.apache.openjpa.enhance.InstrumentationFactory.findToolsJar(Configuration)
org.apache.openjpa.enhance.InstrumentationFactory.findToolsJar(Log)
org.apache.openjpa.enhance.InstrumentationFactory.getAgentClassName(File,Configuration)
org.apache.openjpa.enhance.InstrumentationFactory.getAgentJar(Configuration)
org.apache.openjpa.enhance.InstrumentationFactory.getAgentJar(Log)
org.apache.openjpa.enhance.InstrumentationFactory.getInstrumentation(Log)
org.apache.openjpa.enhance.InstrumentationFactory.getInstrumentation(OpenJPAConfiguration)
org.apache.openjpa.enhance.InstrumentationFactory.getInstrumentation.run()
org.apache.openjpa.enhance.InstrumentationFactory.loadAgent(Configuration,String,Class<?>)
org.apache.openjpa.enhance.InstrumentationFactory.loadAgent(Log,String,Class<?>)
org.apache.openjpa.enhance.InstrumentationFactory.loadVMClass(File,Configuration,JavaVendors)
org.apache.openjpa.enhance.InstrumentationFactory.loadVMClass(File,Log,JavaVendors)
org.apache.openjpa.enhance.InstrumentationFactory.trace(Configuration,String,String)
org.apache.openjpa.enhance.InstrumentationFactory.validateAgentJarManifest(File,Log,String)
org.apache.openjpa.enhance.ManagedClassSubclasser.collectUnspecifiedType(Class<?>,Collection<?extendsClass<?>>,Class<?>,Set<Class<?>>,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(OpenJPAConfiguration,Class<?>,boolean)
org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(OpenJPAConfiguration,ClassLoader,Class<?>,boolean)
org.apache.openjpa.enhance.ManagedClassSubclasser.debugBytecodes(BCClass)
org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(OpenJPAConfiguration,Collection<?extendsClass<?>>,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(OpenJPAConfiguration,Collection<?extendsClass<?>>,Class<?>,ClassLoader)
org.apache.openjpa.enhance.ManagedClassSubclasser.setIntercepting(OpenJPAConfiguration,Class<?>)
org.apache.openjpa.enhance.ManagedClassSubclasser.setIntercepting(OpenJPAConfiguration,ClassLoader,Class<?>)
org.apache.openjpa.enhance.PCClassFileTransformer.isEnhanced(byte[])
org.apache.openjpa.enhance.PCClassFileTransformer.needsEnhance(String,Class<?>,byte[])
org.apache.openjpa.enhance.PCClassFileTransformer.needsEnhance(String,Class,byte[])
org.apache.openjpa.enhance.PCClassFileTransformer.PCClassFileTransformer(MetaDataRepository,PCEnhancer.Flags,ClassLoader,boolean)
org.apache.openjpa.enhance.PCClassFileTransformer.transform0(String,Class<?>,byte[])
org.apache.openjpa.enhance.PCClassFileTransformer.transform0(String,Class,byte[])
org.apache.openjpa.enhance.PCClassFileTransformer.transform(ClassLoader,String,Class<?>,ProtectionDomain,byte[])
org.apache.openjpa.enhance.PCClassFileTransformer.transform(ClassLoader,String,Class,ProtectionDomain,byte[])
org.apache.openjpa.enhance.PCEnhancerAgent.disableDynamicAgent()
org.apache.openjpa.enhance.PCEnhancerAgent.getLoadSuccessful()
org.apache.openjpa.enhance.PCEnhancerAgent.loadDynamicAgent(Log)
org.apache.openjpa.enhance.PCEnhancerAgent.loadDynamicAgent(OpenJPAConfiguration)
org.apache.openjpa.enhance.PCEnhancerAgent.premain(String,Instrumentation)
org.apache.openjpa.enhance.PCEnhancerAgent.registerClassLoadEnhancer.getClassLoader(Class,ClassLoader)
org.apache.openjpa.enhance.PCEnhancerAgent.registerClassLoadEnhancer(Instrumentation,Options)
org.apache.openjpa.enhance.PCEnhancer.getPersistenceCapableOwner(String,Class)
org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,BCClass,MetaDataRepository)
org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,BCClass,MetaDataRepository,ClassLoader)
org.apache.openjpa.enhance.PCEnhancer.run(OpenJPAConfiguration,String[],Flags,MetaDataRepository,BytecodeWriter)
org.apache.openjpa.enhance.PCEnhancer.run(OpenJPAConfiguration,String[],Flags,MetaDataRepository,BytecodeWriter,ClassLoader)
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcGetEnhancementContractVersion()
org.apache.openjpa.enhance.ReflectingPersistenceCapable.ReflectingPersistenceCapable(Object,OpenJPAConfiguration)
org.apache.openjpa.enhance.RestrictedMetaDataRepository.setExcludedTypes(String)
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfAllPUsWithinAResource()
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfSecondPUWithClassNotInFirstPU()
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfSecondPUWithClassNotInFirstPU.write(BCClass)
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testExplicitEnhancementWithClassNotInFirstPU()
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.xtestEnhancementOfAllPUsWithinAResource()
org.apache.openjpa.instrumentation.InstrumentationManager.initialize(OpenJPAConfiguration,PluginListValue)
org.apache.openjpa.instrumentation.InstrumentationManager.initialize(OpenJPAConfiguration,PluginListValue<InstrumentationProvider>,InstrumentationProvider)
org.apache.openjpa.jdbc.ant.MappingToolTask.executeOn(String[])
org.apache.openjpa.jdbc.ant.MappingToolTask.SchemaAction.getValues()
org.apache.openjpa.jdbc.ant.SchemaToolTask.newConfiguration()
org.apache.openjpa.jdbc.ant.SchemaToolTask.setFile(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getConnectionDecoratorInstances()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDriverDataSource()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getIdentifierUtilInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getJDBCListenerInstances()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingDefaultsInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingFactory()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingRepositoryInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSchemaFactoryInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSQLFactoryInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getUpdateManagerInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean,boolean)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.newDriverDataSourceInstance()
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setConnectionDecorators(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setDBDictionary(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setDriverDataSource(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setIdentifierUtil(DBIdentifierUtil)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSchemaFactory(String)
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSQLFactory(String)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.instantiateMetaDataFactory(Configuration,PluginValue<MetaDataFactory>,MetaDataFactory,String)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.instantiateMetaDataFactory(Configuration,PluginValue<MetaDataFactory>,MetaDataFactory,String,boolean)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.instantiateMetaDataFactory(Configuration,PluginValue,String)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.instantiateMetaDataFactory(Configuration,PluginValue,String,boolean)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.MappingFactoryValue(String)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.setMappedMetaDataFactoryDefault(String,String)
org.apache.openjpa.jdbc.conf.MappingFactoryValue.setMetaDataFactoryDefault(String,String)
org.apache.openjpa.jdbc.conf.MappingRepositoryValue.MappingRepositoryValue(String)
org.apache.openjpa.jdbc.conf.MappingRepositoryValue.newInstance(String,Class,Configuration,boolean)
org.apache.openjpa.jdbc.conf.MappingRepositoryValue.newInstance(String,Configuration,boolean)
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.run(JDBCConfiguration,String[],Options)
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.run(JDBCConfiguration,String[],String,MappingRepository)
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.run(JDBCConfiguration,String[],String,MappingRepository,ClassLoader)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.calculateValue(Select,ExpContext,ExpState,Val,ExpState)
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.ParamExpState.ParamExpState(Object)
org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.initialize(Select,ExpContext,Map)
org.apache.openjpa.jdbc.kernel.exps.Param.getValueMetaData(ExpContext)
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.GenericResultObjectProvider(Class<?>,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.getInstance(ConfigurationProvider)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.getInstance(ConfigurationProvider,ClassLoader)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.newBrokerImpl(String,String)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings()
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(ClassLoader)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(ClassLoader,JDBCConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(JDBCConfiguration)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.loadSubclasses(ClassMapping)
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setPersistenceCapableParameter(Map<Integer,Object>,Integer,Object,Object,Integer[],Broker)
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.logSQLWarnings(PreparedStatement)
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.SQLExecutor(SQLStoreQuery,ClassMetaData)
org.apache.openjpa.jdbc.kernel.TestJDBCStoreOptSelect.getFetchPlan(OpenJPAEntityManagerSPI)
org.apache.openjpa.jdbc.kernel.TestJDBCStoreOptSelect.test()
org.apache.openjpa.jdbc.meta.ClassMapping.getObjectId(ClassMapping,JDBCStore,Result,ForeignKey,boolean,Joins)
org.apache.openjpa.jdbc.meta.FieldMapping.resolveMapping()
org.apache.openjpa.jdbc.meta.MappingRepository.clear()
org.apache.openjpa.jdbc.meta.MappingRepository.findBaseClassMapping(ClassMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.getImplementorMappings(Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getImplementorMappings(Class<?>,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Class<?>,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Object,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Object,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getMappings()
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultKey(Class<?>,String)
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMapping(Class<?>,String,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMapping(Class<?>,String,ClassLoader,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMappingInternal(Class<?>,String)
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMappingInternal(Class<?>,String,ClassLoader)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateClassStrategy(String,ClassMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateDiscriminatorStrategy(String,Discriminator)
org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(String,Version)
org.apache.openjpa.jdbc.meta.MappingRepository.mappedStrategy(ValueMapping,Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.namedHandler(ValueMapping)
org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(FieldMapping,boolean)
org.apache.openjpa.jdbc.meta.MappingTool.addSequenceComponents(ClassMapping,SchemaGroup)
org.apache.openjpa.jdbc.meta.MappingTool.drop(Class<?>)
org.apache.openjpa.jdbc.meta.MappingTool.getMapping(MappingRepository,Class<?>,boolean)
org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.Flags)
org.apache.openjpa.jdbc.meta.MappingTool.run(JDBCConfiguration,String[],Flags,ClassLoader)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.drop(Class[],int)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.drop(Class[],int,ClassLoader)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.getPersistentTypeNames(boolean)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.getPersistentTypeNames(boolean,ClassLoader)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.load(Class,int)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.load(Class,int,ClassLoader)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.MetaDataPlusMappingFactory(MetaDataFactory,MetaDataFactory)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.MetaDataPlusMappingFactory(MetaDataFactory,MetaDataFactory,boolean)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.MetaDataPlusMappingFactory(MetaDataFactory,MetaDataFactory,OpenJPAConfiguration)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.setStrict(boolean)
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map)
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.getCandidateTypeMapping()
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getFieldType(Column,boolean)
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getClassLoader(JDBCStore)
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getClass(Object,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.loadSubclasses(JDBCStore)
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.toDataStoreValue(ValueMapping,Object,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.toObjectValue(ValueMapping,Object,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.meta.TestMappingToolTemporal.testMappingToolTemporal()
org.apache.openjpa.jdbc.schema.DataSourceFactory.newDataSource(JDBCConfiguration,boolean)
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.getDBCPDataSource(Properties)
org.apache.openjpa.jdbc.schema.FileSchemaFactory.endConfiguration()
org.apache.openjpa.jdbc.schema.FileSchemaFactory.readSchema()
org.apache.openjpa.jdbc.schema.FileSchemaFactory.setConfiguration(Configuration)
org.apache.openjpa.jdbc.schema.FileSchemaFactory.startConfiguration()
org.apache.openjpa.jdbc.schema.FileSchemaFactory.storeSchema(SchemaGroup)
org.apache.openjpa.jdbc.schema.XMLSchemaParser.XMLSchemaParser(JDBCConfiguration)
org.apache.openjpa.jdbc.sql.OracleDictionary.getEmptyBlob()
org.apache.openjpa.jdbc.sql.OracleDictionary.getEmptyClob()
org.apache.openjpa.jdbc.sql.PostgresDictionary.getDbcpDelegate(Connection)
org.apache.openjpa.kernel.AbstractBrokerFactory.AbstractBrokerFactory(OpenJPAConfiguration)
org.apache.openjpa.kernel.AbstractBrokerFactory.getPcClassLoaders()
org.apache.openjpa.kernel.AbstractBrokerFactory.initializeBroker(boolean,int,Broker,boolean)
org.apache.openjpa.kernel.AbstractBrokerFactory.loadPersistentTypes()
org.apache.openjpa.kernel.AbstractBrokerFactory.loadPersistentTypes(ClassLoader)
org.apache.openjpa.kernel.AbstractBrokerFactory.needsSub(Class<?>)
org.apache.openjpa.kernel.AbstractBrokerFactory.postCreationCallback()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.absolute(int)
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.close()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getObjectId(ClassMetaData)
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getPCType()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getResultObject()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.initialize(OpenJPAStateManager,PCState,FetchConfiguration)
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.load(OpenJPAStateManager,FetchConfiguration)
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.next()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.open()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.reset()
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.size()
org.apache.openjpa.kernel.AttachManager.attach(Object,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)
org.apache.openjpa.kernel.Bootstrap.getBrokerFactory()
org.apache.openjpa.kernel.Bootstrap.getBrokerFactory(ConfigurationProvider)
org.apache.openjpa.kernel.Bootstrap.getBrokerFactory(ConfigurationProvider,ClassLoader)
org.apache.openjpa.kernel.Bootstrap.getFactoryClass(ConfigurationProvider)
org.apache.openjpa.kernel.Bootstrap.getFactoryClass(ConfigurationProvider,ClassLoader)
org.apache.openjpa.kernel.Bootstrap.getFactoryClassName(ConfigurationProvider)
org.apache.openjpa.kernel.Bootstrap.getFactoryClassName(ConfigurationProvider,ClassLoader)
org.apache.openjpa.kernel.Bootstrap.invokeFactory(ConfigurationProvider,ClassLoader,String,Class<?>[],Object[])
org.apache.openjpa.kernel.Bootstrap.invokeFactory(ConfigurationProvider,String,Class<?>[],Object[])
org.apache.openjpa.kernel.Bootstrap.newBrokerFactory()
org.apache.openjpa.kernel.Bootstrap.newBrokerFactory(ConfigurationProvider)
org.apache.openjpa.kernel.Bootstrap.newBrokerFactory(ConfigurationProvider,ClassLoader)
org.apache.openjpa.kernel.Broker.addLifecycleListener(Object,Class<?>[])
org.apache.openjpa.kernel.Broker.addLifecycleListener(Object,Class[])
org.apache.openjpa.kernel.Broker.attachAll(Collection<?>,boolean,OpCallbacks)
org.apache.openjpa.kernel.Broker.attachAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.Broker.deleteAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.deleteAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.detachAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.detachAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.dirtyType(Class<?>)
org.apache.openjpa.kernel.Broker.dirtyType(Class)
org.apache.openjpa.kernel.Broker.evictAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.evictAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.evictAll(Extent<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.evictAll(Extent,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.attach(Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.cascadeTransient(int,Object,OpCallbacks,String)
org.apache.openjpa.kernel.BrokerImpl.copy(OpenJPAStateManager,PCState)
org.apache.openjpa.kernel.BrokerImpl.deleteDerefAdditions(Collection)
org.apache.openjpa.kernel.BrokerImpl.deleteDerefAdditions(Collection<StateManagerImpl>,StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.deleteDeref(StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.detach(Object,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.endTransaction(int)
org.apache.openjpa.kernel.BrokerImpl.evictAll(OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.extentIterator(Class,boolean,FetchConfiguration,boolean)
org.apache.openjpa.kernel.BrokerImpl.extentIterator(Class<T>,T,boolean,FetchConfiguration,boolean)
org.apache.openjpa.kernel.BrokerImpl.findAll(Collection<?>,boolean,FindCallbacks)
org.apache.openjpa.kernel.BrokerImpl.findAll(Collection,boolean,FindCallbacks)
org.apache.openjpa.kernel.BrokerImpl.findAll(Collection<?>,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.BrokerImpl.findAll(Collection,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.BrokerImpl.findAll(Collection<?>,FetchConfiguration,BitSet,Object,int,FindCallbacks)
org.apache.openjpa.kernel.BrokerImpl.findAll(Collection,FetchConfiguration,BitSet,Object,int,FindCallbacks)
org.apache.openjpa.kernel.BrokerImpl.flushAdditions(Collection,int)
org.apache.openjpa.kernel.BrokerImpl.flushAdditions(Collection<StateManagerImpl>,StateManagerImpl,int)
org.apache.openjpa.kernel.BrokerImpl.flush(int)
org.apache.openjpa.kernel.BrokerImpl.flushTransAdditions(Collection,int)
org.apache.openjpa.kernel.BrokerImpl.flushTransAdditions(Collection<StateManagerImpl>,StateManagerImpl,int)
org.apache.openjpa.kernel.BrokerImpl.free()
org.apache.openjpa.kernel.BrokerImpl.$GenericMethodDeclaration$()
org.apache.openjpa.kernel.BrokerImpl.getClassLoader()
org.apache.openjpa.kernel.BrokerImpl.getDeletedTypes()
org.apache.openjpa.kernel.BrokerImpl.getDirtyObjects()
org.apache.openjpa.kernel.BrokerImpl.getDirtyStates()
org.apache.openjpa.kernel.BrokerImpl.getManagedObjects()
org.apache.openjpa.kernel.BrokerImpl.getManagedRuntime()
org.apache.openjpa.kernel.BrokerImpl.getManagedStates()
org.apache.openjpa.kernel.BrokerImpl.getObjectId(Object)
org.apache.openjpa.kernel.BrokerImpl.getObjectIdType(Class<?>)
org.apache.openjpa.kernel.BrokerImpl.getPendingTransactionalObjects()
org.apache.openjpa.kernel.BrokerImpl.getPendingTransactionalStates()
org.apache.openjpa.kernel.BrokerImpl.getPersistedTypes()
org.apache.openjpa.kernel.BrokerImpl.getSequence(ClassMetaData,FieldMetaData)
org.apache.openjpa.kernel.BrokerImpl.getStoreManager()
org.apache.openjpa.kernel.BrokerImpl.getTransactionalObjects()
org.apache.openjpa.kernel.BrokerImpl.getUpdatedTypes()
org.apache.openjpa.kernel.BrokerImpl.initialize(AbstractBrokerFactory,DelegatingStoreManager,boolean,int,boolean,boolean)
org.apache.openjpa.kernel.BrokerImpl.initialize(StateManagerImpl,boolean,FetchConfiguration,Object)
org.apache.openjpa.kernel.BrokerImpl.isDetached(Object,boolean)
org.apache.openjpa.kernel.BrokerImpl.lock(Object,int,int,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.getStateManagers()
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator.hasNext()
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator.remove()
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.ManagedObjectCollection(Collection)
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.ManagedObjectCollection(Collection<?extendsOpenJPAStateManager>,OpenJPAStateManager)
org.apache.openjpa.kernel.BrokerImpl.newDetachedException(Object,String)
org.apache.openjpa.kernel.BrokerImpl.newExtent(Class,boolean,FetchConfiguration)
org.apache.openjpa.kernel.BrokerImpl.newExtent(Class<T>,T,boolean,FetchConfiguration)
org.apache.openjpa.kernel.BrokerImpl.newObjectId(Class<?>,Object)
org.apache.openjpa.kernel.BrokerImpl.newObjectNotFoundException(Collection<?>)
org.apache.openjpa.kernel.BrokerImpl.newObjectNotFoundException(Collection)
org.apache.openjpa.kernel.BrokerImpl.newStateManagerImpl(Object,boolean)
org.apache.openjpa.kernel.BrokerImpl.nontransactionalAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.nontransactionalAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.persistAll(Collection<?>,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.persistAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.persistInternal(Object,Object,boolean,OpCallbacks,boolean)
org.apache.openjpa.kernel.BrokerImpl.persist(Object,Object,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.processArgument(int,Object,OpenJPAStateManager,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.refreshInternal(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.refreshInternal(Collection,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.refreshInternal(Object,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.removeDereferencedDependent(StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.retrieveAll(Collection<?>,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.retrieveAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.transactionalAll(Collection<?>,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.transactionalAll(Collection,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.addAll(Collection)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.addAll(Collection<?extendsStateManagerImpl>,StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.add(Object)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.add(StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.containsAll(Collection<?>)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.containsAll(Collection)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.contains(Object)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.copy()
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.copyDirty()
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.iterator()
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.removeAll(Collection<?>)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.removeAll(Collection)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.removeCleanInternal(StateManagerImpl)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.remove(Object)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.retainAll(Collection<?>)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.retainAll(Collection)
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.toArray()
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.toArray(Object[])
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.toArray(T[])
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.TransactionalCache(boolean)
org.apache.openjpa.kernel.BrokerImpl.transactional(Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.BrokerImpl.transactionalStatesAll(Collection,Collection,List<Exception>,Exception)
org.apache.openjpa.kernel.BrokerImpl.transactionalStatesAll(Collection<StateManagerImpl>,StateManagerImpl,Collection<?>,List<Exception>,Exception)
org.apache.openjpa.kernel.Broker.lockAll(Collection<?>,int,int,OpCallbacks)
org.apache.openjpa.kernel.Broker.lockAll(Collection,int,int,OpCallbacks)
org.apache.openjpa.kernel.Broker.lockAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.lockAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.newExtent(Class,boolean)
org.apache.openjpa.kernel.Broker.newExtent(Class<T>,T,boolean)
org.apache.openjpa.kernel.Broker.newInstance(Class<?>)
org.apache.openjpa.kernel.Broker.newInstance(Class)
org.apache.openjpa.kernel.Broker.newQuery(String,Class<?>,Object)
org.apache.openjpa.kernel.Broker.newQuery(String,Class,Object)
org.apache.openjpa.kernel.Broker.persistAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.persistAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.refreshAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.refreshAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.releaseAll(Collection<?>,OpCallbacks)
org.apache.openjpa.kernel.Broker.releaseAll(Collection,OpCallbacks)
org.apache.openjpa.kernel.Broker.setImplicitBehavior(OpCallbacks,RuntimeExceptionTranslator)
org.apache.openjpa.kernel.DelegatingBroker.getLockManager()
org.apache.openjpa.kernel.DelegatingBroker.popFetchConfiguration()
org.apache.openjpa.kernel.DelegatingStoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)
org.apache.openjpa.kernel.DetachedStateAttachStrategy.getDetachedObjectId(AttachManager,Object)
org.apache.openjpa.kernel.DetachedValueStateManager.DetachedValueStateManager(Object,StoreContext)
org.apache.openjpa.kernel.DetachedValueStateManager.DetachedValueStateManager(PersistenceCapable,ClassMetaData,StoreContext)
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.executeQuery(StoreQuery,Object[],Range)
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.getProjectionTypes(StoreQuery)
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.InMemoryExecutor(ExpressionStoreQuery,ClassMetaData,boolean,ExpressionParser,Object)
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.InMemoryExecutor(ExpressionStoreQuery,ClassMetaData,boolean,ExpressionParser,Object,InMemoryExpressionFactory)
org.apache.openjpa.kernel.ExpressionStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)
org.apache.openjpa.kernel.ExpressionStoreQuery.newInMemoryExecutor(ClassMetaData,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class<?>,boolean)
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class<?>,boolean,ClassLoader)
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(Exp,Object,StoreContext,Object[],int)
org.apache.openjpa.kernel.ExtentImpl.ExtentImpl(Broker,Class<T>,T,boolean,FetchConfiguration)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(String,boolean)
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLNode)
org.apache.openjpa.kernel.QueryImpl.classForName(String,String[])
org.apache.openjpa.kernel.QueryImpl.createExecutor(boolean)
org.apache.openjpa.kernel.QueryImpl.setCandidateExtent(Extent)
org.apache.openjpa.kernel.QueryImpl.setCandidateType(Class,boolean)
org.apache.openjpa.kernel.QueryImpl.toClass(String)
org.apache.openjpa.kernel.StateManagerImpl.initialize(Class,PCState)
org.apache.openjpa.kernel.StateManagerImpl.initialize(PersistenceCapable,PCState)
org.apache.openjpa.kernel.StateManagerImpl.readObject(ObjectInputStream)
org.apache.openjpa.kernel.StateManagerImpl.StateManagerImpl(Object,ClassMetaData,BrokerImpl)
org.apache.openjpa.kernel.StoreContext.embed(Object,Object,OpenJPAStateManager,ValueMetaData)
org.apache.openjpa.kernel.StoreContext.extentIterator(Class<?>,boolean,FetchConfiguration,boolean)
org.apache.openjpa.kernel.StoreContext.findAll(Collection<Object>,Object,boolean,FindCallbacks)
org.apache.openjpa.kernel.StoreContext.findAll(Collection<Object>,Object,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.StoreContext.find(Object,FetchConfiguration,BitSet,Object,int)
org.apache.openjpa.kernel.StoreContext.nontransactionalAll(Collection<Object>,Object,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.retrieveAll(Collection<Object>,Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.StoreContext.transactionalAll(Collection<Object>,Object,boolean,OpCallbacks)
org.apache.openjpa.kernel.TestDynamicClassRegistration.testUnenhancedDynamicClassRegistration()
org.apache.openjpa.kernel.VersionAttachStrategy.attach(AttachManager,Object,ClassMetaData,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)
org.apache.openjpa.kernel.VersionAttachStrategy.provideField(Object,StateManagerImpl,int)
org.apache.openjpa.lib.ant.AbstractTask.execute()
org.apache.openjpa.lib.ant.AbstractTask.getFiles()
org.apache.openjpa.lib.ant.AbstractTask.setUseParentClassloader(boolean)
org.apache.openjpa.lib.conf.AbstractProductDerivation.loadDefaults()
org.apache.openjpa.lib.conf.AbstractProductDerivation.loadDefaults(ClassLoader)
org.apache.openjpa.lib.conf.AbstractProductDerivation.loadGlobals()
org.apache.openjpa.lib.conf.AbstractProductDerivation.loadGlobals(ClassLoader)
org.apache.openjpa.lib.conf.AbstractProductDerivation.load(String,String)
org.apache.openjpa.lib.conf.AbstractProductDerivation.load(String,String,ClassLoader)
org.apache.openjpa.lib.conf.AbstractProductDerivation.validate()
org.apache.openjpa.lib.conf.BooleanValue.BooleanValue(String)
org.apache.openjpa.lib.conf.BooleanValue.getInternalString()
org.apache.openjpa.lib.conf.BooleanValue.setInternalObject(Object)
org.apache.openjpa.lib.conf.BooleanValue.setInternalString(String)
org.apache.openjpa.lib.conf.Configuration.addClassLoader(ClassLoader)
org.apache.openjpa.lib.conf.Configuration.addValue(T)
org.apache.openjpa.lib.conf.Configuration.addValue(Value<T>,T)
org.apache.openjpa.lib.conf.Configuration.clone()
org.apache.openjpa.lib.conf.Configuration.getUserClassLoader()
org.apache.openjpa.lib.conf.Configuration.getValue(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.addEnum(Class<T>,T,String)
org.apache.openjpa.lib.conf.ConfigurationImpl.addObject(Class<T>,T,String)
org.apache.openjpa.lib.conf.ConfigurationImpl.addObject(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.addPlugin(Class<T>,T)
org.apache.openjpa.lib.conf.ConfigurationImpl.addPlugin(Class<T>,T,boolean)
org.apache.openjpa.lib.conf.ConfigurationImpl.addPlugin(Class<T>,T,String,boolean)
org.apache.openjpa.lib.conf.ConfigurationImpl.addPluginList(Class<T[]>,T[],String)
org.apache.openjpa.lib.conf.ConfigurationImpl.addPluginList(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.addPlugin(String,boolean)
org.apache.openjpa.lib.conf.ConfigurationImpl.ConfigurationImpl(boolean)
org.apache.openjpa.lib.conf.ConfigurationImpl.equals(Object)
org.apache.openjpa.lib.conf.ConfigurationImpl.findLocalized(String,boolean,Class<?>)
org.apache.openjpa.lib.conf.ConfigurationImpl.findValue(Map,Value<?>)
org.apache.openjpa.lib.conf.ConfigurationImpl.findValue(Map,Value)
org.apache.openjpa.lib.conf.ConfigurationImpl.fromProperties(Map)
org.apache.openjpa.lib.conf.ConfigurationImpl.getConfigurationLog()
org.apache.openjpa.lib.conf.ConfigurationImpl.getLogFactory()
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyDescriptors()
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyDescriptor(Value<?>)
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyDescriptor(Value)
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyKeys()
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyKeys(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.hashCode()
org.apache.openjpa.lib.conf.ConfigurationImpl.instantiateAll()
org.apache.openjpa.lib.conf.ConfigurationImpl.isReadOnly()
org.apache.openjpa.lib.conf.ConfigurationImpl.newPropertyList()
org.apache.openjpa.lib.conf.ConfigurationImpl.readExternal(ObjectInput)
org.apache.openjpa.lib.conf.ConfigurationImpl.removePrefix(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.removePropertyChangeListener(PropertyChangeListener)
org.apache.openjpa.lib.conf.ConfigurationImpl.setLogFactory(LogFactory)
org.apache.openjpa.lib.conf.ConfigurationImpl.setPropertiesFile(File)
org.apache.openjpa.lib.conf.ConfigurationImpl.setProperties(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.setValue(Map,Value<?>)
org.apache.openjpa.lib.conf.ConfigurationImpl.setValue(Map,Value)
org.apache.openjpa.lib.conf.ConfigurationImpl.toProperties(boolean)
org.apache.openjpa.lib.conf.ConfigurationImpl.toXMLName(String)
org.apache.openjpa.lib.conf.ConfigurationImpl.warnInvalidProperty(String)
org.apache.openjpa.lib.conf.ConfigurationProvider.setInto(Configuration)
org.apache.openjpa.lib.conf.Configuration.removeValue(Value<?>)
org.apache.openjpa.lib.conf.Configuration.removeValue(Value)
org.apache.openjpa.lib.conf.Configurations.classLoaderOf(Class<?>)
org.apache.openjpa.lib.conf.Configurations.combinePlugins(String,String)
org.apache.openjpa.lib.conf.Configuration.setUserClassLoader(ClassLoader)
org.apache.openjpa.lib.conf.Configurations.findDerivedLoader(Configuration,ClassLoader)
org.apache.openjpa.lib.conf.Configurations.getCreateException(String,Value,ClassLoader,Exception)
org.apache.openjpa.lib.conf.Configurations.getCreateException(String,Value,Exception)
org.apache.openjpa.lib.conf.Configurations.getFullyQualifiedAnchorsInPropertiesLocation(Options)
org.apache.openjpa.lib.conf.Configurations.getPluginComponent(String,boolean)
org.apache.openjpa.lib.conf.Configurations.loadClass(String,ClassLoader)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,ClassLoader)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Configuration,Properties)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Configuration,Properties,ClassLoader)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Configuration,String)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Configuration,String,ClassLoader)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Value,Configuration,ClassLoader,boolean)
org.apache.openjpa.lib.conf.Configurations.newInstance(String,Value<T>,T,Configuration,ClassLoader,boolean)
org.apache.openjpa.lib.conf.Configurations.parentClassLoaderOf(ClassLoader)
org.apache.openjpa.lib.conf.Configurations.populateConfiguration(Configuration,Options)
org.apache.openjpa.lib.conf.DoubleValue.DoubleValue(String)
org.apache.openjpa.lib.conf.EnumValue.EnumValue(Class<T>,T,String)
org.apache.openjpa.lib.conf.FileValue.FileValue(String)
org.apache.openjpa.lib.conf.IntValue.IntValue(String)
org.apache.openjpa.lib.conf.MapConfigurationProvider.MapConfigurationProvider()
org.apache.openjpa.lib.conf.MapConfigurationProvider.MapConfigurationProvider(Map)
org.apache.openjpa.lib.conf.MapConfigurationProvider.setInto(Configuration,Log)
org.apache.openjpa.lib.conf.ObjectValue.configure(Object,Configuration)
org.apache.openjpa.lib.conf.ObjectValue.configure(Object,Configuration,boolean)
org.apache.openjpa.lib.conf.ObjectValue.configure(T,Configuration)
org.apache.openjpa.lib.conf.ObjectValue.configure(T,Configuration,boolean)
org.apache.openjpa.lib.conf.ObjectValue.get()
org.apache.openjpa.lib.conf.ObjectValue.getExternal()
org.apache.openjpa.lib.conf.ObjectValue.instantiate(Class<?>,Configuration)
org.apache.openjpa.lib.conf.ObjectValue.instantiate(Configuration)
org.apache.openjpa.lib.conf.ObjectValue.newInstance(String,Class<?>,Configuration,boolean)
org.apache.openjpa.lib.conf.ObjectValue.ObjectValue(Class<T>,T,String)
org.apache.openjpa.lib.conf.ObjectValue.ObjectValue(String)
org.apache.openjpa.lib.conf.ObjectValue.setAlias(String,Class<?extendsT>,T)
org.apache.openjpa.lib.conf.ObjectValue.setDefaultAlias(Class<?extendsT>,T)
org.apache.openjpa.lib.conf.ObjectValue.setDefaultAlias(String,Class<?extendsT>,T)
org.apache.openjpa.lib.conf.ObjectValue.set(Object,boolean)
org.apache.openjpa.lib.conf.ObjectValue.set(T)
org.apache.openjpa.lib.conf.ObjectValue.set(T,boolean)
org.apache.openjpa.lib.conf.PluginListValue.objectChanged()
org.apache.openjpa.lib.conf.PluginListValue.PluginListValue(Class<T[]>,T[],String)
org.apache.openjpa.lib.conf.PluginListValue.PluginListValue(String)
org.apache.openjpa.lib.conf.PluginListValue.setString(String)
org.apache.openjpa.lib.conf.PluginValue.PluginValue(Class<T>,T,String,boolean)
org.apache.openjpa.lib.conf.PluginValue.PluginValue(String,boolean)
org.apache.openjpa.lib.conf.ProductDerivation.getAnchorsInFile(File)
org.apache.openjpa.lib.conf.ProductDerivation.load(File,String)
org.apache.openjpa.lib.conf.ProductDerivations.addAll(Collection,String,Collection)
org.apache.openjpa.lib.conf.ProductDerivations.addAll(Collection<String>,String,String,Collection<String>,String)
org.apache.openjpa.lib.conf.ProductDerivations.getConfigurationKey(String,Map)
org.apache.openjpa.lib.conf.ProductDerivations.getFullyQualifiedAnchorsInPropertiesLocation(String)
org.apache.openjpa.lib.conf.ProductDerivations.load(boolean)
org.apache.openjpa.lib.conf.ProductDerivations.load(ClassLoader,boolean)
org.apache.openjpa.lib.conf.ProductDerivations.load(File,String,ClassLoader)
org.apache.openjpa.lib.conf.StringListValue.getAliasList()
org.apache.openjpa.lib.conf.StringListValue.StringListValue(String)
org.apache.openjpa.lib.conf.StringValue.StringValue(String)
org.apache.openjpa.lib.conf.TestAnchorParsing.testNonexistantFileLoad()
org.apache.openjpa.lib.conf.TestAnchorParsing.testNonexistantResourceLoad()
org.apache.openjpa.lib.conf.TestAnchorParsing.testProductDerivationsLoadFile()
org.apache.openjpa.lib.conf.TestAnchorParsing.testProductDerivationsLoadResource()
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.beforeConfigurationClose(Configuration)
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.findResource(String,ClassLoader)
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.load(String)
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.load(String,ClassLoader)
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.ConfigurationTest()
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.ConfigurationTest(boolean)
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getPluginKeyInstance()
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getTestKey()
org.apache.openjpa.lib.conf.test.TestPluginValue.aliasTest(Value)
org.apache.openjpa.lib.conf.test.TestPluginValue.defaultTest(Value)
org.apache.openjpa.lib.conf.test.TestPluginValue.pluginListAliasTest(Value)
org.apache.openjpa.lib.conf.test.TestPluginValue.testAlias()
org.apache.openjpa.lib.conf.test.TestPluginValue.testDefault()
org.apache.openjpa.lib.conf.test.TestPluginValue.testPluginListParsing()
org.apache.openjpa.lib.conf.TestValue.SimpleValue.SimpleValue(String)
org.apache.openjpa.lib.conf.TestValue.testEquivalentValueCanBeSet()
org.apache.openjpa.lib.conf.TestValue.testEquivalentValuesAreUnmodifable()
org.apache.openjpa.lib.conf.TestValue.testSetAliasesByValue()
org.apache.openjpa.lib.conf.Value.getEquivalentKeys()
org.apache.openjpa.lib.conf.Value.getInstantiatingGetter()
org.apache.openjpa.lib.conf.Value.getListeners()
org.apache.openjpa.lib.conf.Value.getProperty()
org.apache.openjpa.lib.conf.Value.getScope()
org.apache.openjpa.lib.conf.Value.hide()
org.apache.openjpa.lib.conf.Value.isAliasListComprehensive()
org.apache.openjpa.lib.conf.Value.isDynamic()
org.apache.openjpa.lib.conf.Value.isPrivate()
org.apache.openjpa.lib.conf.Value.makePrivate()
org.apache.openjpa.lib.conf.Value.setAliasListComprehensive(boolean)
org.apache.openjpa.lib.conf.Value.setAlias(String,String)
org.apache.openjpa.lib.conf.Value.setDynamic(boolean)
org.apache.openjpa.lib.conf.Value.setLoadKey(String)
org.apache.openjpa.lib.conf.Value.setObject(Object)
org.apache.openjpa.lib.conf.Value.setObject(T)
org.apache.openjpa.lib.conf.Value.setProperty(String)
org.apache.openjpa.lib.conf.Value.setScope(Class<?>)
org.apache.openjpa.lib.conf.Value.setScope(Class)
org.apache.openjpa.lib.conf.Value.toString()
org.apache.openjpa.lib.conf.Value.Value()
org.apache.openjpa.lib.conf.Value.Value(Class<T>,T,String)
org.apache.openjpa.lib.conf.Value.Value(String)
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.setInstrument(String)
org.apache.openjpa.lib.meta.CFMetaDataParser.CFMetaDataParser()
org.apache.openjpa.lib.meta.CFMetaDataParser.CFMetaDataParser(ClassLoader)
org.apache.openjpa.lib.meta.CFMetaDataParser.classForName(String,boolean)
org.apache.openjpa.lib.meta.CFMetaDataParser.classForName(String,String,boolean,ClassLoader)
org.apache.openjpa.lib.meta.ClassArgParser.parseTypeNames(String)
org.apache.openjpa.lib.meta.ClassArgParser.setMetaDataStructure(String,String,String[],String)
org.apache.openjpa.lib.meta.ClassMetaDataIterator.ClassMetaDataIterator(Class<?>,String,boolean)
org.apache.openjpa.lib.meta.ClassMetaDataIterator.ClassMetaDataIterator(Class<?>,String,ClassLoader,boolean)
org.apache.openjpa.lib.meta.MetaDataParser.setClassLoader(ClassLoader)
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.getFile()
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.ResourceMetaDataIterator(String)
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.ResourceMetaDataIterator(String,ClassLoader)
org.apache.openjpa.lib.meta.SourceTracker.getSourceFile()
org.apache.openjpa.lib.meta.XMLMetaDataParser.clearDeferredMetaData()
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentClassLoader()
org.apache.openjpa.lib.meta.XMLMetaDataParser.getOverrideContextClassloader()
org.apache.openjpa.lib.meta.XMLMetaDataParser.getResults()
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(Class<?>,boolean)
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(Class,boolean)
org.apache.openjpa.lib.meta.XMLMetaDataParser.parsed(String)
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(File)
org.apache.openjpa.lib.meta.XMLMetaDataParser.parseNewResource(Reader,String)
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(Reader,String)
org.apache.openjpa.lib.meta.XMLMetaDataParser.setOverrideContextClassloader(boolean)
org.apache.openjpa.lib.meta.XMLMetaDataParser.XMLMetaDataParser(ClassLoader)
org.apache.openjpa.lib.meta.XMLVersionParser.getSchemaLocation()
org.apache.openjpa.lib.meta.XMLVersionParser.startElement(String,Attributes)
org.apache.openjpa.lib.meta.XMLVersionParser.unitNames()
org.apache.openjpa.lib.meta.XMLVersionParser.XMLVersionParser(String)
org.apache.openjpa.lib.util.MultiClassLoader.addClassLoader(int,ClassLoader)
org.apache.openjpa.lib.util.MultiClassLoader.addClassLoaders(int,MultiClassLoader)
org.apache.openjpa.lib.util.MultiClassLoader.addClassLoaders(MultiClassLoader)
org.apache.openjpa.lib.util.MultiClassLoader.findClass(String)
org.apache.openjpa.lib.util.MultiClassLoader.findResources(String)
org.apache.openjpa.lib.util.MultiClassLoader.findResource(String)
org.apache.openjpa.lib.util.MultiClassLoader.getClassLoader(int)
org.apache.openjpa.lib.util.MultiClassLoader.getClassLoaders()
org.apache.openjpa.lib.util.MultiClassLoader.isEmpty()
org.apache.openjpa.lib.util.Services.addResources(URL,Set)
org.apache.openjpa.lib.util.Services.addResources(URL,Set<String>,String)
org.apache.openjpa.lib.util.Services.getImplementors(Class<?>)
org.apache.openjpa.lib.util.Services.getImplementors(Class)
org.apache.openjpa.lib.util.Services.getImplementors(Class<?>,ClassLoader)
org.apache.openjpa.lib.util.Services.getImplementors(Class,ClassLoader)
org.apache.openjpa.lib.util.Services.getImplementors(String,ClassLoader)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.backupAndDelete(Collection)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.getDefiningMetaData(QueryMetaData,Map)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.parsePersistentTypeNames(ClassLoader)
org.apache.openjpa.meta.AbstractCFMetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map<File,String>,File,String)
org.apache.openjpa.meta.AbstractMetaDataFactory.setRepository(MetaDataRepository)
org.apache.openjpa.meta.AbstractMetaDataFactory.setStoreDirectory(File)
org.apache.openjpa.meta.AbstractMetaDataFactory.setTypes(Set)
org.apache.openjpa.meta.AbstractMetaDataFactory.setTypes(Set<String>,String)
org.apache.openjpa.meta.AbstractMetaDataFactory.setTypes(String)
org.apache.openjpa.meta.ClassMetaData.ClassMetaData(ValueMetaData)
org.apache.openjpa.meta.ClassMetaData.getDeclaredFieldNames()
org.apache.openjpa.meta.ClassMetaData.getEnvClassLoader()
org.apache.openjpa.meta.ClassMetaData.getFieldNames()
org.apache.openjpa.meta.ClassMetaData.getPCSubclasses()
org.apache.openjpa.meta.ClassMetaData.getPCSubclassMetaDatas()
org.apache.openjpa.meta.ClassMetaData.getPCSuperclass()
org.apache.openjpa.meta.ClassMetaData.getPCSuperclassMetaData()
org.apache.openjpa.meta.ClassMetaData.registerForValueUpdate(String)
org.apache.openjpa.meta.ClassMetaData.resolveMeta(boolean)
org.apache.openjpa.meta.ClassMetaData.setDescribedType(Class<?>)
org.apache.openjpa.meta.ClassMetaData.setEnvClassLoader(ClassLoader)
org.apache.openjpa.meta.ClassMetaData.valueChanged(Value<?>)
org.apache.openjpa.meta.ClassMetaData.valueChanged(Value)
org.apache.openjpa.meta.DelegatingMetaDataFactory.drop(Class<?>[],int)
org.apache.openjpa.meta.DelegatingMetaDataFactory.getDefaults()
org.apache.openjpa.meta.DelegatingMetaDataFactory.getInnermostDelegate()
org.apache.openjpa.meta.DelegatingMetaDataFactory.getQueryScope(String)
org.apache.openjpa.meta.DelegatingMetaDataFactory.getQueryScope(String,ClassLoader)
org.apache.openjpa.meta.DelegatingMetaDataFactory.getResultSetMappingScope(String)
org.apache.openjpa.meta.DelegatingMetaDataFactory.getResultSetMappingScope(String,ClassLoader)
org.apache.openjpa.meta.DelegatingMetaDataFactory.load(Class<?>,int)
org.apache.openjpa.meta.DelegatingMetaDataFactory.newClassArgParser()
org.apache.openjpa.meta.FieldMetaData.getDeclaringMetaData()
org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,Class<?>,ValueMetaData,boolean)
org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,Class<?>,ValueMetaData,ClassLoader)
org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,Class<?>,ValueMetaData,ClassLoader,boolean)
org.apache.openjpa.meta.JavaTypes.classForName(String,ValueMetaData,boolean)
org.apache.openjpa.meta.JavaTypes.classForName(String,ValueMetaData,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataFactory.drop(Class<?>[],int,ClassLoader)
org.apache.openjpa.meta.MetaDataFactory.load(Class<?>,int,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.classForName(String)
org.apache.openjpa.meta.MetaDataRepository.classForName(String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatas(Class<?>,boolean)
org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatas(Class<?>,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatasInternal(Collection<Class<?>>,Class<?>,boolean)
org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatasInternal(Collection<Class<?>>,Class<?>,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(Class<?>,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<?>)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<?>,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<?>,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<?>,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(Object,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(Object,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaDatasInternal()
org.apache.openjpa.meta.MetaDataRepository.getMetaData(String,boolean)
org.apache.openjpa.meta.MetaDataRepository.getMetaData(String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNamesInternal(boolean)
org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNamesInternal(boolean,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaData(Class<?>,String,boolean)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaData(Class<?>,String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<?>,String)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<?>,String,boolean)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<?>,String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<?>,String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaData(ClassMetaData,String,boolean)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String,boolean)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaData(String,boolean)
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaData(String,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.loadMapping(ClassMetaData)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,boolean)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypesInternal(boolean,boolean)
org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypesInternal(boolean,ClassLoader,boolean)
org.apache.openjpa.meta.MetaDataRepository.loadRegisteredClassMetaData()
org.apache.openjpa.meta.MetaDataRepository.loadRegisteredClassMetaData(ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.preload()
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClasses()
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClasses(ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.resolveAll()
org.apache.openjpa.meta.MetaDataRepository.resolveAll(ClassLoader)
org.apache.openjpa.meta.MetaDataRepository.resolveMeta(ClassMetaData)
org.apache.openjpa.meta.MetaDataTool.record()
org.apache.openjpa.meta.MetaDataTool.run(OpenJPAConfiguration,String[],Flags,MetaDataRepository,ClassLoader)
org.apache.openjpa.meta.SequenceMetaData.getInstance()
org.apache.openjpa.meta.SequenceMetaData.getInstance(ClassLoader)
org.apache.openjpa.meta.SequenceMetaData.instantiate()
org.apache.openjpa.meta.SequenceMetaData.instantiate(ClassLoader)
org.apache.openjpa.meta.SequenceMetaData.newPluginValue(String)
org.apache.openjpa.meta.ValueMetaDataImpl.getDeclaredTypeMetaData()
org.apache.openjpa.meta.ValueMetaDataImpl.getTypeMetaData()
org.apache.openjpa.meta.ValueMetaDataImpl.getValueMappedBy()
org.apache.openjpa.meta.ValueMetaDataImpl.resolveDeclaredType(Class)
org.apache.openjpa.meta.ValueMetaDataImpl.resolve(int)
org.apache.openjpa.persistence.access.TestExplicitAccess.testFieldAccessStrategies()
org.apache.openjpa.persistence.access.TestExplicitAccess.testPropertyAccessStrategies()
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getMetaData()
org.apache.openjpa.persistence.annotations.TestVersion.testNoDefaultVersionWithoutFieldOrColumn()
org.apache.openjpa.persistence.annotations.TestVersion.testVersionWithField()
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getAlias(Class<?>)
org.apache.openjpa.persistence.cache.jpa.TestCacheModeInvalid.testInvalidElement()
org.apache.openjpa.persistence.compat.TestEmbeddableSuperclass.testRelationMappings()
org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalAccessPaths(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<?>)
org.apache.openjpa.persistence.criteria.Expressions.Constant.toValue(ExpressionFactory,CriteriaQueryImpl<?>)
org.apache.openjpa.persistence.datacache.CacheTest.testCache2()
org.apache.openjpa.persistence.datacache.CacheTest.testExpiredRelations()
org.apache.openjpa.persistence.datacache.CacheTest.testGetCache()
org.apache.openjpa.persistence.datacache.CacheTest.testMutableSCOsAreConverted()
org.apache.openjpa.persistence.datacache.stats.TestStatistics.startCaching(Class<?>)
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.testPolicyConfiguration()
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.testPropertyParsing()
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.xtestMisConfiguration()
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.validateTableName(OpenJPAEntityManagerFactorySPI)
org.apache.openjpa.persistence.embed.TestEmbeddable.recreateOracleArtifacts(OracleDictionary,JDBCConfiguration)
org.apache.openjpa.persistence.enhance.TestNoNoArgs.testNo2NoArgs()
org.apache.openjpa.persistence.enhance.TestNoNoArgs.testNo3NoArgs()
org.apache.openjpa.persistence.enhance.TestNoNoArgs.testNoNoArgs()
org.apache.openjpa.persistence.enhance.TestNoNoArgs.TestNoNoArgs(String)
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testBackingFieldConfigurationWithTwoFactories()
org.apache.openjpa.persistence.EntityManagerFactoryValue.EntityManagerFactoryValue()
org.apache.openjpa.persistence.EntityManagerFactoryValue.newFactory(BrokerFactory)
org.apache.openjpa.persistence.EntityManagerImpl.createNamedQuery(String)
org.apache.openjpa.persistence.EntityManagerImpl.getFieldGenerator(Class,String)
org.apache.openjpa.persistence.EntityManagerImpl.getIdGenerator(Class)
org.apache.openjpa.persistence.EntityManagerImpl.getNamedGenerator(String)
org.apache.openjpa.persistence.EntityManagerImpl.setSyncWithManagedTransactions(boolean)
org.apache.openjpa.persistence.event.TestLifecycleEventManager.testAllClassListener()
org.apache.openjpa.persistence.event.TestLifecycleEventManager.testBaseClassListener()
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.WorkerThread.WorkerThread(OpenJPAEntityManagerFactorySPI)
org.apache.openjpa.persistence.graph.TestPersistentGraph.getFieldMapping(Class<?>,String)
org.apache.openjpa.persistence.graph.TestPersistentGraph.getStrategy(Class<?>,String)
org.apache.openjpa.persistence.HintHandler.setHint(String,Object)
org.apache.openjpa.persistence.inheritance.TestSharedUnqualifiedClassNames.testEmbeddable()
org.apache.openjpa.persistence.inheritance.TestSharedUnqualifiedClassNames.testMappedSuperclass()
org.apache.openjpa.persistence.jdbc.annotations.TestDiscriminator.testJoinedDiscriminatorWithColumn()
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.testMappingTransferAndOverride()
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testSubclassDiscriminatorMapping()
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testSubclassMappingDefaultsAndOverrides()
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testSuperclassEmbeddedOnly()
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testVersionOverrideMapping()
org.apache.openjpa.persistence.jdbc.annotations.TestEnumerated.testMapping()
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testDataStoreId()
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.testGet()
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testDefaultMapKeyMapping()
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testInverseOwnerMapKeyMapping()
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testNamedMapKeyMapping()
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.getClassMapping(Class)
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.getFieldMapping(Class,String)
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.isInheritanceStrategyVertical()
org.apache.openjpa.persistence.jdbc.kernel.TestEfficientAttach.testAttachWithDetachedStateManager()
org.apache.openjpa.persistence.jdbc.kernel.TestIncrementalJDBCFlushes.testFlushHappened()
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.xtestStrategies()
org.apache.openjpa.persistence.jdbc.meta.TestJDBCType.testSchemaGeneration()
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.setLRS(Class,boolean)
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testInverseKeyMapMapping()
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testJoinTableMapMapping()
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.unsetLRS(Class)
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.tearDown()
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.TestMetaDataValueIndicator()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.getOrderColumn(OpenJPAEntityManagerFactorySPI,Class,String)
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnMetaDataSerialization()
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnNullableFalse()
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.relationLoadedTest()
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.testExtensions()
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.testClassMapping()
org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.testPerClassSequenceFactory()
org.apache.openjpa.persistence.jdbc.schema.TestSequenceGeneratorEnsureCapacityCall.seqForClass(Class)
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getJPQLString(String,boolean)
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.testSQLKeywords()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endTableGenerator()
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.getSchemaName(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseCollectionTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startJoinTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSecondaryTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startTable(Attributes)
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startTableGenerator(Attributes)
org.apache.openjpa.persistence.jest.JESTContext.resolve(String)
org.apache.openjpa.persistence.JPAFacadeHelper.getMetaData(EntityManager,Class)
org.apache.openjpa.persistence.JPAFacadeHelper.getMetaData(EntityManagerFactory,Class)
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.testFactoryLifecycleListeners()
org.apache.openjpa.persistence.managedinterface.TestSimpleManagedInterface.testMetaDataRepository()
org.apache.openjpa.persistence.meta.MetamodelImpl.find(Class<?>,Map<Class<?>,V>,Class<?>,V,PersistenceType)
org.apache.openjpa.persistence.meta.MetamodelImpl.MetamodelImpl(MetaDataRepository)
org.apache.openjpa.persistence.meta.TestClassMetaData.getRepository()
org.apache.openjpa.persistence.meta.TestClassMetaData.testStaticInnerClasses()
org.apache.openjpa.persistence.meta.TestNonPersistentFields.testNonPersistentFields()
org.apache.openjpa.persistence.meta.TestPersistentClasses.assertClass(String,OpenJPAConfiguration,boolean)
org.apache.openjpa.persistence.meta.TestPersistentClasses.testNoneConfigured()
org.apache.openjpa.persistence.meta.TestValueStrategies.versionTest(EntityManagerFactory)
org.apache.openjpa.persistence.OpenJPAPersistence.getEntityManagerFactory(Map)
org.apache.openjpa.persistence.osgi.OSGiDerivation.beforeConfigurationConstruct(ConfigurationProvider)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getCachedSuperclassMetaData(ClassMetaData)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.defaultXMLFile()
org.apache.openjpa.persistence.PersistenceMetaDataFactory.mapPersistentTypeNames(Object,String[])
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newAnnotationParser()
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newXMLSerializer()
org.apache.openjpa.persistence.PersistenceMetaDataFactory.parseXML(URL,Class<?>,int)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.parseXML(URL,Class<?>,int,ClassLoader)
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setAnnotationParser(AnnotationPersistenceMetaDataParser)
org.apache.openjpa.persistence.PersistenceProductDerivation.addPuNameCollision(String,String,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.beforeConfigurationLoad(Configuration)
org.apache.openjpa.persistence.PersistenceProductDerivation.checkPuNameCollisions()
org.apache.openjpa.persistence.PersistenceProductDerivation.checkPuNameCollisions(Log,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.ConfigurationParser(ClassLoader,Map)
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.ConfigurationParser(Map)
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.getPersistenceVersion()
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.parse(URL)
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.peek(String,URL)
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.ConfigurationProviderImpl()
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.ConfigurationProviderImpl(Map)
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.setSource(String)
org.apache.openjpa.persistence.PersistenceProductDerivation.configureBeanValidation(OpenJPAConfigurationImpl)
org.apache.openjpa.persistence.PersistenceProductDerivation.findUnit(List<PersistenceUnitInfoImpl>,PersistenceUnitInfoImpl,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.findUnit(List<PersistenceUnitInfoImpl>,PersistenceUnitInfoImpl,String,ClassLoader)
org.apache.openjpa.persistence.PersistenceProductDerivation.getAnchorsInResource(String)
org.apache.openjpa.persistence.PersistenceProductDerivation.getDefaultResourceLocation()
org.apache.openjpa.persistence.PersistenceProductDerivation.getResourceURLs(String)
org.apache.openjpa.persistence.PersistenceProductDerivation.getResourceURLs(String,ClassLoader)
org.apache.openjpa.persistence.PersistenceProductDerivation.getSupportedQueryHints()
org.apache.openjpa.persistence.PersistenceProductDerivation.getUnitNames(ConfigurationParser)
org.apache.openjpa.persistence.PersistenceProductDerivation.isOpenJPAPersistenceProvider(PersistenceUnitInfo)
org.apache.openjpa.persistence.PersistenceProductDerivation.isOpenJPAPersistenceProvider(PersistenceUnitInfo,ClassLoader)
org.apache.openjpa.persistence.PersistenceProductDerivation.load(ConfigurationProviderImpl,String,String,Map,boolean)
org.apache.openjpa.persistence.PersistenceProductDerivation.load(ConfigurationProviderImpl,String,String,Map,ClassLoader,boolean)
org.apache.openjpa.persistence.PersistenceProductDerivation.load(PersistenceUnitInfo,Map)
org.apache.openjpa.persistence.PersistenceProductDerivation.load(String,String,Map)
org.apache.openjpa.persistence.PersistenceProductDerivation.log(String)
org.apache.openjpa.persistence.PersistenceProductDerivation.parseResources(ConfigurationParser,List<URL>,URL,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.parseResources(ConfigurationParser,List<URL>,URL,String,ClassLoader)
org.apache.openjpa.persistence.PersistenceProductDerivation.PersistenceProductDerivation()
org.apache.openjpa.persistence.PersistenceProductDerivation.PersistenceProductDerivation(boolean)
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.addCollision(String,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.addDuplicate(PersistenceUnitInfoImpl)
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.listDuplicates()
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.logCollision()
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.logCollision(Log)
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.PUNameCollision(String,PersistenceUnitInfoImpl,PersistenceUnitInfoImpl)
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.PUNameCollision(String,String,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.putBrokerFactoryAliases(Map<String,String>,String,String)
org.apache.openjpa.persistence.PersistenceProductDerivation.warnUnknownProvider(PersistenceUnitInfo)
org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.ClassTransformerImpl(ConfigurationProvider,String,ClassLoader,OpenJPAConfiguration)
org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.ClassTransformerImpl.getClassLoader(Class<?>,ClassLoader)
org.apache.openjpa.persistence.PersistenceProviderImpl.createContainerEntityManagerFactory(PersistenceUnitInfo,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,String,Map)
org.apache.openjpa.persistence.PersistenceProviderImpl.getBrokerFactory(ConfigurationProvider,Object)
org.apache.openjpa.persistence.PersistenceProviderImpl.getBrokerFactory(ConfigurationProvider,Object,ClassLoader)
org.apache.openjpa.persistence.PersistenceProviderImpl.loadAgent(BrokerFactory)
org.apache.openjpa.persistence.PersistenceProviderImpl.loadValidator(BrokerFactory)
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getNewTempClassLoader()
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.PersistenceUnitInfoImpl()
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setSharedCacheMode(SharedCacheMode)
org.apache.openjpa.persistence.query.TestAccessPathsOfSubqueries.testRelationTraversalSubqueryAccessPath()
org.apache.openjpa.persistence.query.TestAccessPathsOfSubqueries.testSimpleSubqueryAccessPath()
org.apache.openjpa.persistence.query.TestNamedQueries.testNamedClassQuery()
org.apache.openjpa.persistence.StoreCacheImpl.getMetaData(Class)
org.apache.openjpa.persistence.test.ContainerEMFTest.createContainerEMF(String,String,Map<String,Object>,String,Object)
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testEncryptionPluginConfiguration()
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testEncryptionPluginConfigurationDefaultValue()
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testExcludeUnlistedClasses()
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testJPA1ExcludeUnlistedClasses()
org.apache.openjpa.persistence.test.SingleEMFTestCase.getMapping(Class<?>)
org.apache.openjpa.persistence.test.SingleEMFTestCase.getMapping(String)
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testBasic()
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testCompositeId()
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testDerivedId()
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testEmbeddedId()
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testNoId()
org.apache.openjpa.persistence.validation.ValidationUtils.setupValidation(OpenJPAConfiguration)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startClass(String,Attributes)
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.XMLPersistenceMetaDataParser(OpenJPAConfiguration)
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeField(FieldMetaData,FieldMetaData)
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.testOverriddenEntityName()
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.addSlice(String,Map)
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.newBroker()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.DistributedJDBCConfigurationImpl()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getConnectionFactory()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getDistributionPolicy()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getDistributionPolicyInstance()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getFinderTargetPolicy()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getFinderTargetPolicyInstance()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getQueryTargetPolicy()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getQueryTargetPolicyInstance()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getReplicationPolicy()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getReplicationPolicyInstance()
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.ReplicatedTypeRepository.contains(Class<?>)
org.apache.openjpa.util.Id.Id(String,OpenJPAConfiguration,ClassLoader)
org.apache.openjpa.util.ImplHelper.generateFieldValue(StoreContext,FieldMetaData)
org.apache.openjpa.util.ImplHelper.generateValue(StoreContext,ClassMetaData,FieldMetaData,int)
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.addContextClassLoaders(MultiClassLoader)
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.PersistentObjectInputStream(InputStream,StoreContext)
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.resolveObject(Object)
org.apache.openjpa.util.Serialization.PersistentObjectOutputStream.PersistentObjectOutputStream(OutputStream,StoreContext)
org.apache.openjpa.util.Serialization.serialize(Object,StoreContext)
