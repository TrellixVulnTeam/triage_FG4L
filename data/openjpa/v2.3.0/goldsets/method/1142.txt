org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.GenericResultObjectProvider(Class<?>,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.GenericResultObjectProvider(Class,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.handleCheckedException(Exception)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.assignField(OpenJPAStateManager,int,boolean)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.cancelAll()
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getDataStoreIdType(ClassMetaData)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getManagedType(Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getType(Result,ClassMapping)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initializeState(OpenJPAStateManager,PCState,JDBCFetchConfiguration,ConnectionInfo)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setInverseRelation(OpenJPAStateManager,ClassMapping,Result)
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.lockRow(OpenJPAStateManager,int,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getSQLExceptions(SQLException)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(Message,SQLException,DBDictionary)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(Message,SQLException,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,Object,DBDictionary)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,Object,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStoreSQLException(OpenJPAConfiguration,SQLException,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStoreSQLException(OpenJPAStateManager,SQLException,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,DBDictionary)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,DBDictionary,int)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,Object,DBDictionary)
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,Object,DBDictionary,int)
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getConfiguration(EntityManager)
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getDBType(EntityManager)
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.launchCommonSequence(TestThread)
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.PlatformSpeedTestThread.run()
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.commonFindTest(String,LockModeType,Class<?>[])
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.commonNamedQueryTest(String,LockModeType,Class<?>[])
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.setUp()
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.testFindDeadLockException()
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.testNamedQueryDeadLockException()
