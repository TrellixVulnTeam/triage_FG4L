org.apache.openjpa.jdbc.sql.DB2Dictionary.connectedConfiguration(Connection)
org.apache.openjpa.jdbc.sql.DB2Dictionary.createIndexIfNecessary(Schema,DBIdentifier,Column)
org.apache.openjpa.jdbc.sql.DB2Dictionary.DB2Dictionary()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getConnection()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDB2MajorVersion()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDB2MinorVersion()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDefaultSchemaName()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getProductVersionMajorMinor()
org.apache.openjpa.jdbc.sql.DB2Dictionary.getProductVersionMajorMinorForISeries()
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ISeriesV5R3OrEarlier()
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ISeriesV5R4OrEarlier()
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ISeriesV5R4OrLater()
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2UDBV81OrEarlier()
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2UDBV82OrLater()
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ZOSV8xOrLater()
org.apache.openjpa.jdbc.sql.DB2Dictionary.requiresSubselectForRange(long,long,boolean,SQLBuffer)
org.apache.openjpa.jdbc.sql.DB2Dictionary.setDate(PreparedStatement,int,Date,Column)
org.apache.openjpa.jdbc.sql.DB2Dictionary.supportsIsolationForUpdate()
org.apache.openjpa.jdbc.sql.DB2Dictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,Select)
org.apache.openjpa.jdbc.sql.DBDictionary.applyRange(Select,int)
org.apache.openjpa.jdbc.sql.DBDictionary.getIdentityColumnName()
org.apache.openjpa.jdbc.sql.DBDictionary.getMajorVersion()
org.apache.openjpa.jdbc.sql.DBDictionary.getMinorVersion()
org.apache.openjpa.jdbc.sql.DBDictionary.insertSize(String,String)
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingLimit(long)
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingOffset(long)
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingOrderBy(SQLBuffer)
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingRange(long,long)
org.apache.openjpa.jdbc.sql.DBDictionary.nullSafe(String)
org.apache.openjpa.jdbc.sql.DBDictionary.setMajorVersion(int)
org.apache.openjpa.jdbc.sql.DBDictionary.setMinorVersion(int)
org.apache.openjpa.jdbc.sql.DBDictionary.storageWarning(Object,Object)
org.apache.openjpa.jdbc.sql.DBDictionary.versionEqualOrEarlierThan(int,int)
org.apache.openjpa.jdbc.sql.DBDictionary.versionEqualOrLaterThan(int,int)
org.apache.openjpa.jdbc.sql.DBDictionary.versionLaterThan(int)
org.apache.openjpa.jdbc.sql.DerbyDictionary.appendSelectRange(SQLBuffer,long,long,boolean)
org.apache.openjpa.jdbc.sql.DerbyDictionary.closeDataSource(DataSource)
org.apache.openjpa.jdbc.sql.DerbyDictionary.DerbyDictionary()
org.apache.openjpa.jdbc.sql.DerbyDictionary.isFatalException(int,SQLException)
org.apache.openjpa.jdbc.sql.OracleDictionary.getSelectOperation(JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.SelectImpl.applyRange(int)
org.apache.openjpa.jdbc.sql.SelectImpl.execute(JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.sql.SelectImpl.getCount(JDBCStore)
org.apache.openjpa.jdbc.sql.TestDB2Dictionary.testConnectedConfigurationOnlyUsesMetaData()
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testSmallBLOBs()
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testSmallCLOBs()
org.apache.openjpa.persistence.jdbc.meta.TestRangeQuery.testQueryRange()
