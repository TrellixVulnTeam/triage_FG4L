org.apache.openjpa.tools.action.Actions.Abstract.Abstract(Code,Element)
org.apache.openjpa.tools.action.Actions.Abstract.getAttribute(String)
org.apache.openjpa.tools.action.Actions.Abstract.getAttribute(String,String)
org.apache.openjpa.tools.action.Actions.Abstract.getElementByName(Element,String,boolean)
org.apache.openjpa.tools.action.Actions.Abstract.getOrder()
org.apache.openjpa.tools.action.Actions.Code.Code(String,Class<?extendsActions>,Actions)
org.apache.openjpa.tools.action.Actions.Code.getTemplate(Element)
org.apache.openjpa.tools.action.Actions.CustomNode.CustomNode(Element)
org.apache.openjpa.tools.action.Actions.IgnoreAttr.IgnoreAttr(Element)
org.apache.openjpa.tools.action.Actions.IgnoreNode.IgnoreNode(Element)
org.apache.openjpa.tools.action.Actions.InsertNode.InsertNode(Element)
org.apache.openjpa.tools.action.Actions.PromoteAttr.PromoteAttr(Element)
org.apache.openjpa.tools.action.Actions.RenameAttr.RenameAttr(Element)
org.apache.openjpa.tools.action.Actions.RenameChildNode.RenameChildNode(Element)
org.apache.openjpa.tools.action.Actions.RenameNode.RenameNode(Element)
org.apache.openjpa.tools.action.Actions.RenameNode.run(Document,Element,Element,Collection<String>,String,Collection<String>,String)
org.apache.openjpa.tools.action.Actions.SplitNode.SplitNode(Element)
org.apache.openjpa.tools.MigrationTool.addComments(Element)
org.apache.openjpa.tools.MigrationTool.addSchemaToRoot()
org.apache.openjpa.tools.MigrationTool.buildRepository(InputStream)
org.apache.openjpa.tools.MigrationTool.createAction(Element)
org.apache.openjpa.tools.MigrationTool.executeActions(Document,Element,Element)
org.apache.openjpa.tools.MigrationTool.getActionFor(Element)
org.apache.openjpa.tools.MigrationTool.getAttributeNames(Element)
org.apache.openjpa.tools.MigrationTool.getDirectChildren(Node)
org.apache.openjpa.tools.MigrationTool.getInputStream(String)
org.apache.openjpa.tools.MigrationTool.getOutputStream(String)
org.apache.openjpa.tools.MigrationTool.main(String[])
org.apache.openjpa.tools.MigrationTool.run(String[])
org.apache.openjpa.tools.SchemaErrorDetector.error(SAXParseException)
org.apache.openjpa.tools.SchemaErrorDetector.fatalError(SAXParseException)
org.apache.openjpa.tools.SchemaErrorDetector.handleError(SAXParseException)
org.apache.openjpa.tools.SchemaErrorDetector.hasErrors()
org.apache.openjpa.tools.SchemaErrorDetector.print()
org.apache.openjpa.tools.SchemaErrorDetector.SchemaErrorDetector(String,boolean)
org.apache.openjpa.tools.SchemaErrorDetector.setDocumentLocator(Locator)
org.apache.openjpa.tools.SchemaErrorDetector.toString()
org.apache.openjpa.tools.SchemaErrorDetector.warning(SAXParseException)
org.apache.openjpa.tools.TestMigratedOutput.migrateAndValidate(String)
org.apache.openjpa.tools.TestMigratedOutput.setUp()
org.apache.openjpa.tools.TestMigratedOutput.tearDown()
org.apache.openjpa.tools.TestMigratedOutput.testSampleIsJPACompliant()
org.apache.openjpa.tools.TestMigrationSchema.testInvalidDocument()
org.apache.openjpa.tools.TestMigrationSchema.testValidDocument()
org.apache.openjpa.tools.util.CommandProcessor.assertValidIndex(int,T[],String)
org.apache.openjpa.tools.util.CommandProcessor.findCommand(String)
org.apache.openjpa.tools.util.CommandProcessor.$GenericMethodDeclaration$()
org.apache.openjpa.tools.util.CommandProcessor.getAllowsUnregisteredOption()
org.apache.openjpa.tools.util.CommandProcessor.getMandatoryOptionCount()
org.apache.openjpa.tools.util.CommandProcessor.getOptionCount()
org.apache.openjpa.tools.util.CommandProcessor.getUnregisteredCommands()
org.apache.openjpa.tools.util.CommandProcessor.getValue(Option<T>,T)
org.apache.openjpa.tools.util.CommandProcessor.getValue(String)
org.apache.openjpa.tools.util.CommandProcessor.isSet(Option<?>)
org.apache.openjpa.tools.util.CommandProcessor.lastIndex(String[])
org.apache.openjpa.tools.util.CommandProcessor.register(boolean,boolean,String)
org.apache.openjpa.tools.util.CommandProcessor.register(Class<T>,T,boolean,boolean,String)
org.apache.openjpa.tools.util.CommandProcessor.setAllowsUnregisteredOption(boolean)
org.apache.openjpa.tools.util.CommandProcessor.setFrom(String[])
org.apache.openjpa.tools.util.CommandProcessor.setFrom(String[],int,int)
org.apache.openjpa.tools.util.CommandProcessor.usage(Class<?>)
org.apache.openjpa.tools.util.CommandProcessor.validate(String[])
org.apache.openjpa.tools.util.LogRecordFormatter.format(LogRecord)
org.apache.openjpa.tools.util.LogRecordFormatter.getLocation()
org.apache.openjpa.tools.util.LogRecordFormatter.setLocator(Locator)
org.apache.openjpa.tools.util.LogRecordFormatter.setSource(String)
org.apache.openjpa.tools.util.Option.compareTo(Option<T>,T)
org.apache.openjpa.tools.util.Option.convert(String)
org.apache.openjpa.tools.util.Option.getDefaultValue()
org.apache.openjpa.tools.util.Option.getDescription()
org.apache.openjpa.tools.util.Option.getName()
org.apache.openjpa.tools.util.Option.getOriginalString()
org.apache.openjpa.tools.util.Option.getValueType()
org.apache.openjpa.tools.util.Option.isMandatory()
org.apache.openjpa.tools.util.Option.isValidName(String)
org.apache.openjpa.tools.util.Option.match(String)
org.apache.openjpa.tools.util.Option.Option(Class<T>,T,boolean,boolean,String)
org.apache.openjpa.tools.util.Option.requiresInput()
org.apache.openjpa.tools.util.Option.setDefault(String)
org.apache.openjpa.tools.util.Option.setDescription(String)
