org.apache.openjpa.conf.Compatibility.isAbstractMappingUniDirectional()
org.apache.openjpa.conf.Compatibility.isJoinColumnAllowedForToManyRelation()
org.apache.openjpa.conf.Compatibility.setJoinColumnAllowedForToManyRelation(boolean)
org.apache.openjpa.conf.Compatibility.setNonDefaultMappingAllowed(boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean,List)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinForeignKey(FieldMapping,Table,boolean)
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTable(FieldMapping,boolean,boolean)
org.apache.openjpa.jdbc.meta.MappingRepository.useInverseKeyMapping(FieldMapping)
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.getBi1ToMElemFK()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.getBi1ToMJoinFK()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.getBiOneToManyInfo()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.getFieldIndexBi1ToMJT()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.hasJoinColumn()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.hasJoinTable()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.isBi1ToMJT()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.isNonDefaultMapping()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.isNonDefaultMappingAllowed()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.isUni1ToMFK()
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager,Map)
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,JDBCStore,RowManager,Set)
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,Object,JDBCStore,RowManager)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getFieldMapping()
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getIndependentElementMappings(boolean)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getIndependentKeyMappings(boolean)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.handleMappedBy(boolean)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.handleMappedByForeignKey(boolean)
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.hasJoinColumnOrJoinTable()
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.map(boolean)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getBiOneToManyElemFK()
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getBiOneToManyJoinFK()
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getMapKeyObj(Map,Object)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.loadEagerJoin(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load.select(Select,int)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.selectEagerParallel(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.toDataStoreValue(Object,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.insert(OpenJPAStateManager,RowManager,Map,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.toKeyDataStoreValue(Object,JDBCStore)
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,RowManager,Object)
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.joinElementRelation(Joins,ClassMapping)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTable(ValueMapping)
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,String,boolean,boolean)
org.apache.openjpa.jdbc.schema.Column.copy(Column)
org.apache.openjpa.jdbc.schema.Column.isUni1MFK()
org.apache.openjpa.jdbc.schema.Column.setImplicitRelation(boolean)
org.apache.openjpa.jdbc.schema.Column.setUni1MFK(boolean)
org.apache.openjpa.jdbc.sql.PrimaryRow.allowsUpdate(Column,Object,Object)
org.apache.openjpa.jdbc.sql.PrimaryRow.isDefaultValue(Object)
org.apache.openjpa.meta.FieldMetaData.getAssociationType()
org.apache.openjpa.meta.FieldMetaData.setAccessType(int)
org.apache.openjpa.meta.FieldMetaData.setAssociationType(int)
org.apache.openjpa.meta.MetaDataDefaults.isAbstractMappingUniDirectional(OpenJPAConfiguration)
org.apache.openjpa.meta.MetaDataDefaults.isJoinColumnAllowedForToManyRelation(OpenJPAConfiguration)
org.apache.openjpa.meta.NoneMetaDataFactory.getManagedClass(Class<?>)
org.apache.openjpa.meta.NoneMetaDataFactory.isNonDefaultMappingAllowed(OpenJPAConfiguration)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseManyToMany(FieldMetaData,ManyToMany)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseManyToOne(FieldMetaData,ManyToOne)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseOneToMany(FieldMetaData,OneToMany)
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseOneToOne(FieldMetaData,OneToOne)
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.getEntityAs()
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.setEntityAs(List<EntityC>,EntityC)
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.setEntityCs(List<EntityC_B1MFK>,EntityC_B1MFK)
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.setEntityCs(List<EntityC_B1MJT>,EntityC_B1MJT)
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.setEntityCs(Map<String,EntityC_B1M_Map_JT>,String,EntityC_B1M_Map_JT)
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.setEntityCs(Map<EntityC,EntityC_B1M_Map_RelKey_JT>,EntityC,EntityC_B1M_Map_RelKey_JT)
org.apache.openjpa.persistence.compat.EntityC_B1MJT.setBi1mjt(Bi_1ToM_JT)
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.setBi1mjt(Bi_1ToM_Map_JT)
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.getBi1mjt()
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.setBi1mjt(Bi_1ToM_Map_RelKey_JT)
org.apache.openjpa.persistence.compat.EntityC.getBi1mfk()
org.apache.openjpa.persistence.compat.EntityC.setBi1mfk(Bi_1ToM_FK)
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.equals(Object)
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.getId()
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.getName()
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.hashCode()
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.setName(String)
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.toString()
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.assertSQLFragnments(List<String>,String,String)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.createEMF2_0(List<Class<?>>,Class<?>)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MFK(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MJT(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MMapJT(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MMapRelKeyJT(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MFK(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MJT(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MMapFK(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MMapRelKeyFK(EntityManager)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.Listener.beforeExecuteStatement(JDBCEvent)
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testJoinColumnOnToManyRelation()
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testMappedSuperClass()
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testNonDefaultUniOneToManyRelationUsingForeignKey()
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testOneToManyMapRelation()
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testOneToManyRelation()
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.toString(List<String>,String)
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.setEntityCs(List<EntityC_U1MFK>,EntityC_U1MFK)
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.setEntityCs(List<EntityC>,EntityC)
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.setEntityCs(Map<String,EntityC_U1M_Map_FK>,String,EntityC_U1M_Map_FK)
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.getEntityCs()
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.getValue(Map,Object)
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.setEntityCs(Map<EntityC,EntityC_U1M_Map_RelKey_FK>,EntityC,EntityC_U1M_Map_RelKey_FK)
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinTable(FieldMapping,JoinTable)
org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.populateForeignKeyColumn(ValueMapping,String,Table,Table,Column,Object,boolean,int,int)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.PersistenceMetaDataDefaults()
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setAbstractMappingUniDirectional(OpenJPAConfiguration)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setJoinColumnAllowedForToManyRelation(OpenJPAConfiguration)
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setNonDefaultMappingAllowed(OpenJPAConfiguration)
org.apache.openjpa.persistence.PersistenceProductDerivation.afterSpecificationSet(Configuration)
